uint64_t sub_23AA68BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AA85974(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_23AAA1660);
}

void sub_23AA68C00(unsigned __int8 *a1)
{
  sub_23AA68C0C(*a1);
}

void sub_23AA68C0C(int a1)
{
  __asm { BR              X10 }
}

void sub_23AA68C38(char a1, char a2)
{
  if ((a2 & 0x30) == 0)
    sub_23AA69030(a1);
}

uint64_t storeEnumTagSinglePayload for UserInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AA68DEC + 4 * byte_23B1E0055[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AA68E20 + 4 * asc_23B1E0050[v4]))();
}

uint64_t sub_23AA68E20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA68E28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AA68E30);
  return result;
}

uint64_t sub_23AA68E3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AA68E44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AA68E48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA68E50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for SchedulingState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23AA68EEC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756C6176;
  else
    return 1937335659;
}

uint64_t storeEnumTagSinglePayload for MaterializationStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23AA68F68 + 4 * byte_23B1E50FB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23AA68F9C + 4 * byte_23B1E50F6[v4]))();
}

uint64_t sub_23AA68F9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA68FA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AA68FACLL);
  return result;
}

uint64_t sub_23AA68FB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AA68FC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23AA68FC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA68FCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FPItemVersionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

uint64_t destroy for Filename()
{
  return swift_bridgeObjectRelease();
}

void sub_23AA69030(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23AA69060@<X0>(char a1@<W0>, unsigned int a2@<W8>)
{
  if (a2 <= 0x3F)
    __asm { BR              X11 }
  return 0;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t storeEnumTagSinglePayload for Filename(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FileItemKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23AA696CC + 4 * byte_23B1E06D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23AA69700 + 4 * byte_23B1E06D0[v4]))();
}

uint64_t sub_23AA69700(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA69708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AA69710);
  return result;
}

uint64_t sub_23AA6971C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AA69724);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23AA69728(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA69730(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for UserInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23AA6977C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23AA7DCC0(*a1, *a2);
}

uint64_t storeEnumTagSinglePayload for WeakProxy(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t sub_23AA697B8()
{
  uint64_t v0;

  return sub_23AA96F18(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t storeEnumTagSinglePayload for Tag.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AA69810 + 4 * byte_23B1DD6F7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AA69844 + 4 * byte_23B1DD6F2[v4]))();
}

uint64_t sub_23AA69844(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA6984C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AA69854);
  return result;
}

uint64_t sub_23AA69860(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AA69868);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AA6986C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA69874(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AA69880()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F6C6F63;
  else
    return 1701667182;
}

uint64_t sub_23AA698B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

uint64_t sub_23AA698D4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AA953F8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_23AA698DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23AA69900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a3;
  v6 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v3 + 728), *(_QWORD *)(*(_QWORD *)v3 + 744), a2);
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - v9;
  result = sub_23AA7C384(a1, 1, (_BYTE *)v20 - v9);
  if (!v4)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v10, 1, v6) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v13 = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v15 = swift_getAssociatedConformanceWitness();
      v21 = AssociatedTypeWitness;
      v22 = v13;
      v23 = AssociatedConformanceWitness;
      v24 = v15;
      type metadata accessor for FileItemVersion();
    }
    v20[1] = &v10[*(int *)(v6 + 40)];
    v16 = swift_getAssociatedTypeWitness();
    v17 = swift_getAssociatedTypeWitness();
    v18 = swift_getAssociatedConformanceWitness();
    v19 = swift_getAssociatedConformanceWitness();
    v21 = v16;
    v22 = v17;
    v23 = v18;
    v24 = v19;
    type metadata accessor for FileItemVersion();
  }
  return result;
}

void sub_23AA69B98(void *a1, __int16 a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  id v12;
  uint64_t inited;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  char v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  id v28;
  char v29;
  id v30;
  int v31;
  id v32;
  id v33;
  void *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _BYTE v40[112];
  uint64_t v41;
  _OWORD v42[2];
  __int128 v43;
  uint64_t v44;

  v9 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a2 & 0x100) != 0)
  {
    v19 = a1;
    ((void (*)(_QWORD, void *))a3)(0, a1);
    sub_23AAB52FC(a1);
  }
  else if (a1)
  {
    v12 = a1;
    if ((objc_msgSend(v12, sel_isExcludedFromSync) & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3268);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23B1D2330;
      v14 = (void *)*MEMORY[0x24BDBCCA8];
      *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCCA8];
      v15 = MEMORY[0x24BEE1328];
      *(_BYTE *)(inited + 40) = 0;
      v16 = (void *)*MEMORY[0x24BDBCD38];
      *(_QWORD *)(inited + 64) = v15;
      *(_QWORD *)(inited + 72) = v16;
      *(_QWORD *)(inited + 104) = v15;
      *(_BYTE *)(inited + 80) = 1;
      v17 = v14;
      v18 = v16;
      sub_23AAEBAD0(inited);
      a3();
      swift_bridgeObjectRelease();
      sub_23AAB52FC(a1);
    }
    else
    {
      type metadata accessor for URLResourceKey(0);
      v20 = v12;
      v21 = (void *)sub_23B1C66F8();
      v22 = (id)FPDictFromVendorItem();

      sub_23AAB52FC(a1);
      if (v22)
      {
        sub_23AA7E38C((unint64_t *)&unk_2542E1F50, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23B1CB368);
        v23 = sub_23B1C620C();

      }
      else
      {
        v23 = 0;
      }
      v24 = (id)*MEMORY[0x24BDBCCA8];
      v25 = sub_23AAB6D84((uint64_t)v24, a5);

      if ((v25 & 1) != 0 && v23)
      {
        v44 = MEMORY[0x24BEE1328];
        LOBYTE(v43) = 1;
        sub_23AAA159C(&v43, v42);
        v26 = v24;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v41 = v23;
        sub_23AAB5894(v42, v26, isUniquelyReferenced_nonNull_native);
        v23 = v41;

        swift_bridgeObjectRelease();
      }
      v28 = (id)*MEMORY[0x24BDBCD28];
      v29 = sub_23AAB6D84((uint64_t)v28, a5);

      if ((v29 & 1) != 0)
      {
        v30 = v20;
        sub_23AAA3120((uint64_t)v11);
        v31 = *v11;
        sub_23AA937BC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        sub_23AAB52FC(a1);
        if ((v31 - 1) >= 2)
        {
          if (v23)
          {
            v32 = v28;
            v33 = objc_msgSend(v30, sel_conflictingVersions);
            if (!v33)
              goto LABEL_20;
            v34 = v33;
            v35 = a2 & 1;
            sub_23AA9F52C(0, (unint64_t *)&unk_2542E1FD0);
            v36 = sub_23B1C6704();

            if (v36 >> 62)
            {
              swift_bridgeObjectRetain();
              v37 = sub_23B1C7088();
              swift_bridgeObjectRelease();
            }
            else
            {
              v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (!v37)
LABEL_20:
              v35 = 0;
            v44 = MEMORY[0x24BEE1328];
            LOBYTE(v43) = v35;
            sub_23AAA159C(&v43, v42);
            v38 = swift_isUniquelyReferenced_nonNull_native();
            v41 = v23;
            sub_23AAB5894(v42, v32, v38);

            swift_bridgeObjectRelease();
          }
        }
      }
      v39 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t, _QWORD))a3)(v39, 0);
      sub_23AAB52FC(a1);
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    ((void (*)(_QWORD, _QWORD))a3)(0, 0);
  }
}

uint64_t sub_23AA69FDC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, int a5, unint64_t a6, void *a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  os_log_type_t v24;
  void (*v25)(void);
  void (*v26)(void);
  unint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  double v42;
  double v43;
  uint64_t (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t result;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  void *v59;
  unint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;

  v56 = a2;
  v59 = a7;
  v60 = a6;
  v62 = a5;
  v61 = a4;
  v63 = a3;
  v54 = sub_23B1C5BDC();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C6050();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C60A4();
  v57 = *(_QWORD *)(v16 - 8);
  v58 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23B1C5E4C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v24 = sub_23B1C6A94();
  v56 = (void (*)(void))sub_23AA6DC74(v24, (uint64_t)"materialization waiter", 22, 2, a1, (uint64_t)v56);
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  qos_class_self();
  sub_23B1C6038();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5498], v12);
    sub_23AA8A05C((uint64_t)v11, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  }
  sub_23B1C608C();
  v27 = v60;
  v28 = v61;
  v29 = v62;
  v30 = v63;
  v31 = sub_23AA6C330(0, v61, v62, v60, v59, v18, v56, v26);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v58);
  if ((v31 - 1) >= 2u)
    return swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  v32 = v27;
  v33 = (_QWORD *)swift_allocObject();
  v34 = MEMORY[0x24BEE4AF8];
  v33[2] = MEMORY[0x24BEE4AF8];
  v33[3] = v34;
  v33[4] = v34;
  v33[5] = v34;
  v33[6] = 0;
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v34;
  *(_QWORD *)(inited + 24) = v34;
  *(_QWORD *)(inited + 32) = v34;
  *(_QWORD *)(inited + 40) = v34;
  *(_QWORD *)(inited + 48) = 0;
  v36 = sub_23ADF3758(v32, (uint64_t (*)(uint64_t))sub_23ADF6D74, (uint64_t (*)(uint64_t))sub_23AE60058);
  v38 = v37;
  swift_retain();
  v39 = v36;
  v40 = v55;
  sub_23ADF6438(v28, v29, v39, v38, 0x800000, v30, (uint64_t)v33, inited);
  if (v40)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  swift_release();
  v41 = v53;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v43 = v42;
  v44 = *(uint64_t (**)(char *, uint64_t))(v52 + 8);
  v45 = v54;
  result = v44(v41, v54);
  v47 = v43 * 1000000000.0;
  if ((~COERCE__INT64(v43 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v47 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v47 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_23ADF691C(v33, (uint64_t)v47, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v49 = v48;
  result = v44(v41, v45);
  v50 = v49 * 1000000000.0;
  if ((~COERCE__INT64(v49 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v50 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v50 < 9.22337204e18)
  {
    sub_23ADF691C((_QWORD *)inited, (uint64_t)v50, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
    swift_release();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_release();
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_23AA6A4E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v18;

  v4 = v3;
  (*(void (**)(void **__return_ptr))(**(_QWORD **)(*(_QWORD *)(v3 + 40) + 16) + 96))(&v18);
  v8 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_WORD *)(v9 + 24) = 256;
  *(_BYTE *)(v9 + 42) = 0;
  *(_QWORD *)(v9 + 32) = v8;
  *(_WORD *)(v9 + 40) = 256;
  if (((a1 >> 58) & 0x3C | (a1 >> 1) & 3) == 0x1E)
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
    v11 = v10;
  }
  else
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    v11 = v12 | 0x7000000000000004;
    v10 = a1;
  }
  sub_23AA93780(v10);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a1;
  v13[5] = v4;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v4;
  *(_WORD *)(v14 + 32) = 256;
  *(_QWORD *)(v14 + 40) = sub_23AAFC218;
  *(_QWORD *)(v14 + 48) = v13;
  *(_QWORD *)(v14 + 56) = v11;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_23AAFC218;
  *(_QWORD *)(v15 + 24) = v13;
  swift_retain();
  swift_retain();
  sub_23AA93780(a1);
  swift_retain();
  swift_retain();
  v16 = v8;
  swift_retain();
  swift_retain();
  sub_23AA93780(v11);
  sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v15, (uint64_t)sub_23AABA3C4, v14);
  swift_release();
  swift_release();
  swift_release();
  sub_23AAB47B0(v11);
  return swift_release();
}

uint64_t sub_23AA6A6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 744);
  v29 = *(_QWORD *)(*(_QWORD *)v4 + 728);
  v7 = type metadata accessor for SnapshotItem(255, v29, v6, a4);
  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - v11;
  v13 = *(_QWORD *)(v7 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v7) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v20 = v18;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v12, v7);
  v21 = *(void **)(v4 + qword_2542E69F8);
  type metadata accessor for SnapshotItemObject(0, v29, v6, v22);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v7);
  v23 = sub_23AAB9744((uint64_t)v16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemIDObject(0, AssociatedTypeWitness, AssociatedConformanceWitness, v26);
  v27 = v21;
  v28 = sub_23AABA0A4(v30);
  objc_msgSend(v27, sel_setObject_forKey_, v23, v28);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, v7);
}

void sub_23AA6A90C(uint64_t a1, uint64_t a2, int a3, void (*a4)(id *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  const void *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  id aBlock;
  uint64_t v41;
  uint64_t (*v42)();
  void *v43;
  uint64_t (*v44)(_QWORD);
  uint64_t v45;

  v8 = v7;
  v36 = a7;
  v37 = a2;
  v34 = a6;
  v35 = a1;
  v38 = a3;
  v11 = sub_23B1C602C();
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23B1C60A4();
  v14 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v18 = &v7[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v19 = (void *)MEMORY[0x23B8615C4](v18);
  swift_retain_n();
  if (v19)
  {
    if (objc_msgSend(v19, sel_unableToStartup))
    {
      v20 = sub_23AC61E18();
      aBlock = v20;
      v41 = 0;
      v42 = 0;
      v43 = 0;
      LOBYTE(v44) = 1;
      a4(&aBlock);

      swift_release();
      swift_release();

      return;
    }

  }
  if ((v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v21 = (void *)MEMORY[0x23B8615C4](v18);
    if (v21)
    {
      v22 = v21;
      v31 = objc_msgSend(v21, sel_serialQueue);

      v44 = nullsub_1;
      v45 = 0;
      aBlock = (id)MEMORY[0x24BDAC760];
      v41 = 1107296256;
      v42 = sub_23AA698FC;
      v43 = &block_descriptor_2142;
      v30 = _Block_copy(&aBlock);
      sub_23B1C6068();
      v39 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v24 = v30;
      v23 = v31;
      MEMORY[0x23B85F470](0, v16, v13, v30);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v32);
    }
  }
  v25 = *(void **)&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v26 = *(void **)&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v8;
  v27[3] = sub_23ACF23A8;
  v28 = v34;
  v27[4] = v17;
  v27[5] = v28;
  v27[6] = v36;
  v29 = v8;
  swift_retain();
  swift_retain();
  sub_23AA81A30(v35, v37, v38, v25, v26, (uint64_t)sub_23AAB92FC, (uint64_t)v27);
  swift_release();
  swift_release();
  swift_release();
}

void sub_23AA6AC6C(uint64_t a1, uint64_t a2, int a3, void (*a4)(id, _QWORD *, uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  const void *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v8 = v7;
  v36 = a7;
  v37 = a2;
  v34 = a6;
  v35 = a1;
  v38 = a3;
  v11 = sub_23B1C602C();
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23B1C60A4();
  v14 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v18 = &v7[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v19 = (void *)MEMORY[0x23B8615C4](v18);
  swift_retain_n();
  if (v19)
  {
    if (objc_msgSend(v19, sel_unableToStartup))
    {
      v20 = sub_23AC61E18();
      v39 = 0;
      aBlock[0] = 0;
      a4(v20, aBlock, &v39);

      swift_release();
      swift_release();

      return;
    }

  }
  if ((v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v21 = (void *)MEMORY[0x23B8615C4](v18);
    if (v21)
    {
      v22 = v21;
      v31 = objc_msgSend(v21, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_3815;
      v30 = _Block_copy(aBlock);
      sub_23B1C6068();
      v39 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v24 = v30;
      v23 = v31;
      MEMORY[0x23B85F470](0, v16, v13, v30);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v32);
    }
  }
  v25 = *(void **)&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v26 = *(void **)&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v8;
  v27[3] = sub_23ACFB254;
  v28 = v34;
  v27[4] = v17;
  v27[5] = v28;
  v27[6] = v36;
  v29 = v8;
  swift_retain();
  swift_retain();
  sub_23AA81A30(v35, v37, v38, v25, v26, (uint64_t)sub_23AAB92FC, (uint64_t)v27);
  swift_release();
  swift_release();
  swift_release();
}

void sub_23AA6AFC4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v1 = v0;
  v2 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated);
  do
    v3 = __ldxr(v2);
  while (__stxr(1u, v2));
  if ((v3 & 1) == 0)
  {
    v4 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_keepAlive);
    if (v4)
    {
      v5 = swift_retain();
      v4(v5);
      sub_23AAB7948((uint64_t)v4);
    }
    v6 = *(void **)(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_extensionEnumerator);
    if (v6)
      objc_msgSend(v6, sel_invalidate);
    v7 = v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend;
    v8 = MEMORY[0x23B8615C4](v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = (void *)MEMORY[0x23B8615C4](v8 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);

      if (v10)
      {
        v11 = objc_msgSend(v10, sel_session);

        objc_msgSend(v11, sel_asyncUnregisterLifetimeExtensionForObject_, *(_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_lifetimeExtender));
        swift_unknownObjectRelease();
      }
    }
    v12 = MEMORY[0x23B8615C4](v7);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = (void *)MEMORY[0x23B8615C4](v12 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, sel_log);

      }
      else
      {
        v16 = 0;
      }
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v13;
      *(_QWORD *)(v17 + 24) = v1;
      v18 = v13;
      sub_23AA814FC(v16, (uint64_t)"enumeratorHasBeenInvalidated(_:)", 32, 2, (uint64_t)sub_23AB3CCD0, v17);

      swift_release();
    }
    v19 = OBJC_IVAR____TtC9libfssync14FPFSEnumerator_cancellable;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_cancellable))
    {
      swift_retain();
      sub_23B1C5F24();
      swift_release();
    }
    *(_QWORD *)(v1 + v19) = 0;
    swift_release();
  }
}

id sub_23AA6B2E4(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v1) + 0x50)
                                                      - 8)
                                          + 16))(&v1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v1) + 0x60)], a1);
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

void sub_23AA6B360(uint64_t a1, uint64_t a2, int a3, void (*a4)(_QWORD *, uint64_t *, id), uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  const void *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v8 = v7;
  v36 = a7;
  v37 = a2;
  v34 = a6;
  v35 = a1;
  v38 = a3;
  v11 = sub_23B1C602C();
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23B1C60A4();
  v14 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v18 = &v7[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v19 = (void *)MEMORY[0x23B8615C4](v18);
  swift_retain_n();
  if (v19)
  {
    if (objc_msgSend(v19, sel_unableToStartup))
    {
      v20 = sub_23AC61E18();
      v39 = 0;
      aBlock[0] = 0;
      a4(aBlock, &v39, v20);

      swift_release();
      swift_release();

      return;
    }

  }
  if ((v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v21 = (void *)MEMORY[0x23B8615C4](v18);
    if (v21)
    {
      v22 = v21;
      v31 = objc_msgSend(v21, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_2919;
      v30 = _Block_copy(aBlock);
      sub_23B1C6068();
      v39 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v24 = v30;
      v23 = v31;
      MEMORY[0x23B85F470](0, v16, v13, v30);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v32);
    }
  }
  v25 = *(void **)&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v26 = *(void **)&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v8;
  v27[3] = sub_23ACF1788;
  v28 = v34;
  v27[4] = v17;
  v27[5] = v28;
  v27[6] = v36;
  v29 = v8;
  swift_retain();
  swift_retain();
  sub_23AA81A30(v35, v37, v38, v25, v26, (uint64_t)sub_23AAB92FC, (uint64_t)v27);
  swift_release();
  swift_release();
  swift_release();
}

void sub_23AA6B6BC(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AA6B72C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v10;

  *(_QWORD *)(v7 + a1[13]) = v6;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v7 + a1[14], v5, v1);
  *(_QWORD *)(v7 + a1[15]) = v4;
  v10 = (_QWORD *)(v7 + a1[16]);
  *v10 = v3;
  v10[1] = v2;
  return result;
}

void type metadata accessor for FileItemVersion()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AA6B794(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = sub_23AABA064();

  return v2;
}

uint64_t sub_23AA6B7C4(uint64_t a1)
{
  char v2;
  void *v4;
  _BYTE v5[24];
  uint64_t v6;

  swift_getObjectType();
  sub_23AA94C48(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_23AA94C08((uint64_t)v5);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v2 = 0;
    return v2 & 1;
  }
  v2 = sub_23B1C63A4();

  return v2 & 1;
}

uint64_t sub_23AA6B8A8(os_log_type_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  _QWORD *v16;
  _QWORD v18[2];

  v4 = sub_23B1C5E4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v9 = a2;
  v10 = sub_23B1C5E40();
  v11 = a1;
  if (os_log_type_enabled(v10, a1))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v18[0] = v4;
    v14 = (_QWORD *)v13;
    *(_DWORD *)v12 = 138412290;
    v15 = -[NSObject leave](v9, sel_leave);
    v18[1] = v15;
    sub_23B1C6CBC();
    *v14 = v15;

    _os_log_impl(&dword_23AA66000, v10, v11, "%@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    v16 = v14;
    v4 = v18[0];
    MEMORY[0x23B8614BC](v16, -1, -1);
    MEMORY[0x23B8614BC](v12, -1, -1);
  }
  else
  {

    v10 = v9;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23AA6BA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;

  v3[11] = a1;
  v3[12] = a3;
  v5 = sub_23B1C5E4C();
  v3[13] = v5;
  v3[14] = *(_QWORD *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[2] = a2;
  return swift_task_switch();
}

void sub_23AA6BAE0(void *a1, char a2, void (*a3)(void *, _QWORD), uint64_t a4, uint64_t a5)
{
  int v8;
  unsigned __int8 *v9;
  void *v10;

  if ((a2 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    if (!a1)
    {
      v10 = 0;
      v8 = 0;
      goto LABEL_7;
    }
    v9 = (unsigned __int8 *)(a5 + 16);
    swift_beginAccess();
    v8 = *v9;
  }
  v10 = a1;
LABEL_7:
  sub_23AAB5380(a1);
  a3(v10, v8 & 0xFFFFFEFF | ((a2 & 1) << 8));
  sub_23AAB52FC(v10);
}

uint64_t sub_23AA6BB94(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, int a6, void (*a7)(_QWORD), uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  void (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a6;
  v35 = a4;
  v36 = a5;
  v13 = sub_23B1C5E4C();
  v38 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v17 = a3;
  v18 = sub_23B1C5E40();
  if (os_log_type_enabled(v18, (os_log_type_t)a2))
  {
    v19 = swift_slowAlloc();
    v31 = v13;
    v20 = v19;
    v21 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v32 = a2;
    v30 = v22;
    v40 = v22;
    *(_DWORD *)v20 = 138412546;
    v34 = a7;
    v23 = objc_msgSend(v17, sel_adopt);
    v33 = a8;
    v24 = v23;
    v39 = (uint64_t)v23;
    sub_23B1C6CBC();
    *v21 = v24;

    *(_WORD *)(v20 + 12) = 2082;
    v25 = sub_23B1C6F2C();
    v39 = sub_23AABEC68(v25, v26, &v40);
    a7 = v34;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v18, (os_log_type_t)a2, "%@ %{public}s", (uint8_t *)v20, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v21, -1, -1);
    v27 = v30;
    swift_arrayDestroy();
    LOBYTE(a2) = v32;
    MEMORY[0x23B8614BC](v27, -1, -1);
    MEMORY[0x23B8614BC](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v13);
  }
  a7(a1);
  return sub_23AA6B8A8((os_log_type_t)a2, v17);
}

uint64_t sub_23AA6BE28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v5 = swift_checkMetadataState();
  return v4(a2, v5, v3);
}

uint64_t sub_23AA6BEC8(void *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  id v10;
  id v11;
  id v12;
  uint64_t v14;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23AABB5D8(3044198, 0xE300000000000000);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AABB5BC(3044466, 0xE300000000000000);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AABB590(0x726F6365642E7066, 0xEE005F6E6F697461);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (!a3)
    goto LABEL_5;
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  v10 = objc_msgSend(a1, sel_bindLongParameter_, a2, 0, 0xE000000000000000);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v11 = objc_msgSend(a1, sel_bindLongParameter_, a4);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = objc_msgSend(a1, sel_bindLongParameter_, a5);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23AA6C170(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23AA71B80((uint64_t)a2, &v6);
  if (!v2)
  {
    if (!objc_sync_exit(a1))
      return v6;
LABEL_8:
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  result = objc_sync_exit(a1);
  if ((_DWORD)result)
    goto LABEL_8;
  return result;
}

uint64_t sub_23AA6C234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23AA6C2BC(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  char v6;
  _OWORD v8[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_23B1C6D7C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    v5 = a1;
  }
  v6 = sub_23AA6B7C4((uint64_t)v8);

  sub_23AA94C08((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_23AA6C330(unsigned __int8 a1, uint64_t a2, char a3, unint64_t a4, void *a5, char *a6, void (*a7)(void), void (*a8)(void))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unsigned __int8 *v45;
  uint64_t (*v46)();
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t result;
  _QWORD *v56;
  unint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(void *);
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t *v67;
  char *v68;
  void (**v69)(void *);
  void (*v70)(void *);
  void *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void (*v77)(_QWORD *, _QWORD, uint64_t, unint64_t);
  int64_t v78;
  unint64_t v79;
  int64_t v80;
  unsigned int (*v81)(_QWORD *, uint64_t, unint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  unint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t *v99;
  uint64_t v100;
  char v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(void);
  _BOOL8 v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void (*v111)(void);
  uint64_t v112;
  unint64_t *v113;
  void *v114;
  void (**v115)(void);
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  void (*v119)(void);
  _QWORD *v120;
  unint64_t v121;
  unint64_t *v122;
  unint64_t v123;
  void (*v124)(char *, _QWORD *, uint64_t);
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  unint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  unsigned __int8 *v132;
  int v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  _BYTE *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t *v144;
  uint64_t v145;
  void (**v146)(void);
  void (*v147)(void);
  void (*v148)(void);
  void *v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  _BYTE *v157;
  unint64_t v158;
  uint64_t v159;
  void *v160;
  _BYTE *v161;
  int v162;
  char *v163;
  uint64_t v164;
  void (*v165)(char *, char *, uint64_t);
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  unint64_t *v170;
  void *v171;
  unint64_t v172;
  unint64_t v173;
  char *v174;
  void (**v175)(void);
  void (*v176)(void);
  void (*v177)(void);
  void (*v178)(void);
  _QWORD *v179;
  unint64_t *v180;
  char *v181;
  _QWORD *v182;
  uint64_t v183;
  unint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  int64_t v188;
  char *v189;
  uint64_t v190;
  _QWORD *v191;
  char *v192;
  unint64_t v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  _QWORD *v198;
  _BYTE *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  unsigned __int8 *v204;
  uint64_t v205;
  char *v206;
  void (*v207)(void);
  void (*v208)(void);
  uint64_t v209;
  int64_t v210;
  uint64_t v211;
  unint64_t *v212;
  unint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  int64_t v216;
  _QWORD *v217;
  unint64_t *v218;
  void (*v219)(char *, char *, uint64_t);
  uint64_t v220;
  uint64_t v221;
  void (*v222)(void *);
  uint64_t v223;
  _QWORD *v224;
  unint64_t v225;
  _QWORD v226[62];
  _BYTE v227[504];
  _QWORD v228[63];
  uint64_t v229;
  unsigned __int8 v230;
  char v231;
  _QWORD v232[64];
  uint64_t v233;
  unsigned __int8 v234;

  v9 = v8;
  v207 = a7;
  v208 = a8;
  v192 = (char *)a6;
  v193 = a4;
  v194 = a5;
  v203 = a1;
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E90);
  v190 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v191 = (int64_t *)((char *)&v188 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_23B1C60A4();
  v220 = *(_QWORD *)(v13 - 8);
  v221 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v197 = (char *)&v188 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v189 = (char *)&v188 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v17);
  v206 = (char *)&v188 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v201 = *(_QWORD *)(v19 - 8);
  v202 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v195 = (uint64_t)&v188 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDD10);
  MEMORY[0x24BDAC7A8](v21);
  v199 = (char *)&v188 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A18);
  v24 = *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v26 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  v219 = (void (*)(char *, char *, uint64_t))((char *)&v188 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v213 = (unint64_t *)((char *)&v188 - v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v214 = *(_QWORD *)(v27 - 8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v212 = (unint64_t *)((char *)&v188 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = MEMORY[0x24BDAC7A8](v28);
  v218 = (unint64_t *)((char *)&v188 - v31);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v33 = (int64_t *)((char *)&v188 - v26);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (unint64_t *)((char *)&v188 - v26);
  v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v35 = *(_QWORD *)(v205 - 8);
  v36 = MEMORY[0x24BDAC7A8](v205);
  v38 = (char *)&v188 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v204 = (unsigned __int8 *)&v188 - v39;
  v233 = a2;
  v234 = a3;
  v209 = v9;
  v40 = (_QWORD *)(v9 + qword_2542EDFF0);
  swift_beginAccess();
  v198 = v40;
  v41 = *v40;
  v42 = *(_QWORD *)(v41 + 16);
  v215 = v35;
  v225 = v27;
  if (!v42 || (v43 = sub_23AA97254(a2, a3), (v44 & 1) == 0))
  {
LABEL_38:
    v104 = v209;
    v105 = (uint64_t)v206;
    (*(void (**)(uint64_t *, uint64_t))(**(_QWORD **)(v209 + 32) + 240))(&v233, 1);
    v106 = v208;
    v108 = v202;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v105, 1, v202) == 1)
    {
      sub_23AA8A05C(v105, (uint64_t *)&unk_2542E4750);
      if (v234 >= 2u && !v233)
      {
        sub_23B1C6074();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6448);
        v109 = (*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
        v110 = swift_allocObject();
        *(_OWORD *)(v110 + 16) = xmmword_23B1CA760;
        v225 = v110 + v109;
        v111 = v106;
        v112 = v196;
        v113 = (_QWORD *)((char *)v191 + *(int *)(v196 + 48));
        v114 = v194;
        *v191 = v194;
        v224 = (unint64_t *)((char *)v113 + *(int *)(v27 + 64));
        v115 = (void (**)(void))((char *)v113 + *(int *)(v27 + 80));
        v116 = v193;
        *v113 = v193;
        v113[1] = (unint64_t)v114;
        v117 = v116;
        v118 = v220;
        (*(void (**)(void))(v220 + 16))();
        v119 = v207;
        *v115 = v207;
        v115[1] = v111;
        v120 = v224;
        v121 = v225;
        *(_QWORD *)v225 = v114;
        v122 = (unint64_t *)(v121 + *(int *)(v112 + 48));
        *v122 = v117;
        v122[1] = (unint64_t)v114;
        v123 = v117;
        v124 = *(void (**)(char *, _QWORD *, uint64_t))(v118 + 32);
        v125 = v221;
        v124((char *)v122 + *(int *)(v27 + 64), v120, v221);
        v126 = (unint64_t *)((char *)v122 + *(int *)(v27 + 80));
        v127 = swift_allocObject();
        *(_QWORD *)(v127 + 16) = v119;
        *(_QWORD *)(v127 + 24) = v111;
        *v126 = sub_23AAFC250;
        v126[1] = v127;
        v128 = sub_23AAEEFA0(v110);
        swift_setDeallocating();
        sub_23AA93780(v123);
        v129 = v114;
        swift_retain();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v130 = (uint64_t)v199;
        *v199 = v203;
        v131 = v205;
        v124((char *)(v130 + *(int *)(v205 + 52)), v197, v125);
        *(_QWORD *)(v130 + *(int *)(v131 + 56)) = v128;
        v107 = 1;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v215 + 56))(v130, 0, 1, v131);
        swift_beginAccess();
        sub_23AD03AA8(v130, 0, 2);
        swift_endAccess();
        return v107;
      }
      sub_23AAFCEE8();
      v138 = (void *)swift_allocError();
      *v139 = 1;
      v207();

      return 0;
    }
    a2 = v195;
    sub_23AA724E8(v105, v195, (uint64_t *)&unk_2542E6B00);
    v132 = (unsigned __int8 *)(a2 + *(int *)(v108 + 48));
    v133 = *v132;
    if (v133 == 2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      v134 = (void *)swift_allocError();
      v136 = v135;
      sub_23AAFD540((uint64_t)v232);
      sub_23AA724E8((uint64_t)v232, v136, (uint64_t *)&unk_2542E0950);
      v137 = (uint64_t)v134;
LABEL_47:
      ((void (*)(uint64_t))v207)(v137);

LABEL_48:
      sub_23AA8A05C(a2, (uint64_t *)&unk_2542E6B00);
      return 0;
    }
    if (v203 == 1)
    {
      if (v132[*(int *)(type metadata accessor for ItemMetadata() + 80)] == 1)
      {
        ((void (*)(_QWORD))v207)(0);
        goto LABEL_53;
      }
    }
    else
    {
      v156 = *(_QWORD *)(v104 + 16);
      v229 = v233;
      v230 = v234;
      v231 = 0;
      (*(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v156 + 168))(v232, &v229, 1);
      sub_23AA724E8((uint64_t)v232, (uint64_t)v227, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v227, (uint64_t)v228, (uint64_t *)&unk_2542E4CB0);
      if (sub_23AAFC2A4((uint64_t)v228) == 1)
      {
        sub_23AAFCEE8();
        v137 = swift_allocError();
        v134 = (void *)v137;
        *v157 = 1;
        goto LABEL_47;
      }
      memcpy(v226, v232, sizeof(v226));
      if (v226[31])
      {
        sub_23AAFCEE8();
        v160 = (void *)swift_allocError();
        *v161 = 1;
        v207();

        sub_23AAFC3AC((uint64_t)v226);
        goto LABEL_48;
      }
      if ((v132[*(int *)(type metadata accessor for ItemMetadata() + 80)] & 1) != 0)
      {
        sub_23AAFC3AC((uint64_t)v226);
      }
      else
      {
        v162 = BYTE1(v226[17]);
        sub_23AAFC3AC((uint64_t)v226);
        if (v162 == 6)
        {
          ((void (*)(_QWORD))v207)(0);
          if (!v203)
          {
            v140 = (uint64_t *)&unk_2542E0DD0;
LABEL_54:
            v141 = __swift_instantiateConcreteTypeFromMangledName(v140);
            v142 = *(_QWORD *)(v104 + 24);
            sub_23AAB5630();
            v143 = swift_allocObject();
            *(_OWORD *)(v143 + 16) = xmmword_23B1CA760;
            *(_QWORD *)(v143 + 32) = v141;
            v158 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v142 + 272))(a2, v143);
            swift_bridgeObjectRelease();
            if (v158 >> 62)
            {
LABEL_74:
              swift_bridgeObjectRetain();
              v159 = sub_23B1C7088();
              swift_bridgeObjectRelease();
            }
            else
            {
              v159 = *(_QWORD *)((v158 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            v107 = v159 != 0;
            sub_23AA8A05C(a2, (uint64_t *)&unk_2542E6B00);
            return v107;
          }
LABEL_53:
          v140 = (uint64_t *)&unk_2569E5F20;
          goto LABEL_54;
        }
      }
    }
    v163 = v189;
    if (v133 == 1)
      sub_23B1C6074();
    else
      sub_23B1C6080();
    v223 = v233;
    v164 = v221;
    v165 = *(void (**)(char *, char *, uint64_t))(v220 + 16);
    LODWORD(v222) = v234;
    v165(v197, v163, v221);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6448);
    v166 = (*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
    v167 = swift_allocObject();
    *(_OWORD *)(v167 + 16) = xmmword_23B1CA760;
    v224 = (_QWORD *)(v167 + v166);
    v168 = v196;
    v169 = v192;
    v170 = (_QWORD *)((char *)v191 + *(int *)(v196 + 48));
    v172 = v193;
    v171 = v194;
    *v191 = v194;
    v173 = v225;
    v174 = (char *)v170 + *(int *)(v225 + 64);
    v175 = (void (**)(void))((char *)v170 + *(int *)(v225 + 80));
    *v170 = v172;
    v170[1] = (unint64_t)v171;
    v165(v174, v169, v164);
    v177 = v207;
    v176 = v208;
    *v175 = v207;
    v175[1] = v176;
    v178 = v176;
    v179 = v224;
    *v224 = v171;
    v180 = (_QWORD *)((char *)v179 + *(int *)(v168 + 48));
    *v180 = v172;
    v180[1] = (unint64_t)v171;
    v181 = (char *)v180 + *(int *)(v173 + 64);
    v219 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
    v219(v181, v174, v164);
    v182 = (unint64_t *)((char *)v180 + *(int *)(v173 + 80));
    v183 = swift_allocObject();
    *(_QWORD *)(v183 + 16) = v177;
    *(_QWORD *)(v183 + 24) = v178;
    *v182 = sub_23AB0008C;
    v182[1] = v183;
    v184 = sub_23AAEEFA0(v167);
    swift_setDeallocating();
    sub_23AA93780(v172);
    v185 = v171;
    swift_retain();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v186 = (uint64_t)v199;
    *v199 = v203;
    v187 = v205;
    v219((char *)(v186 + *(int *)(v205 + 52)), v197, v164);
    *(_QWORD *)(v186 + *(int *)(v187 + 56)) = v184;
    v107 = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v215 + 56))(v186, 0, 1, v187);
    swift_beginAccess();
    sub_23AD03AA8(v186, v223, (char)v222);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v220 + 8))(v189, v164);
    sub_23AA8A05C(v195, (uint64_t *)&unk_2542E6B00);
    return v107;
  }
  sub_23AA8EFC8(*(_QWORD *)(v41 + 56) + *(_QWORD *)(v35 + 72) * v43, (uint64_t)v38, &qword_2542E6C80);
  v45 = v204;
  sub_23AA724E8((uint64_t)v38, (uint64_t)v204, &qword_2542E6C80);
  if (*v45 == v203)
  {
    v46 = sub_23AE4F2C0();
    v47 = sub_23B148D70(v228, a2, a3);
    v49 = v48;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v48, 1, v205))
    {
      ((void (*)(_QWORD *, _QWORD))v47)(v228, 0);
      ((void (*)(_QWORD *, _QWORD))v46)(v232, 0);
    }
    else
    {
      v144 = v218;
      v222 = (void (*)(void *))((char *)v218 + *(int *)(v27 + 64));
      v223 = v49;
      v145 = *(int *)(v27 + 80);
      v224 = v47;
      v225 = (unint64_t)v46;
      v146 = (void (**)(void))((char *)v218 + v145);
      v147 = v207;
      v148 = v208;
      v150 = v193;
      v149 = v194;
      *v218 = v193;
      v144[1] = (unint64_t)v149;
      v152 = v220;
      v151 = v221;
      (*(void (**)(void))(v220 + 16))();
      *v146 = v147;
      v146[1] = v148;
      *v34 = v150;
      v34[1] = (unint64_t)v149;
      (*(void (**)(char *, void (*)(void *), uint64_t))(v152 + 32))((char *)v34 + *(int *)(v27 + 64), v222, v151);
      v153 = (unint64_t *)((char *)v34 + *(int *)(v27 + 80));
      v154 = swift_allocObject();
      *(_QWORD *)(v154 + 16) = v147;
      *(_QWORD *)(v154 + 24) = v148;
      *v153 = sub_23AB0008C;
      v153[1] = v154;
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v34, 0, 1, v27);
      sub_23AA93780(v150);
      v155 = v149;
      swift_retain();
      sub_23AD038CC((uint64_t)v34, (uint64_t)v155);
      ((void (*)(_QWORD *, _QWORD))v224)(v228, 0);
      ((void (*)(_QWORD *, _QWORD))v225)(v232, 0);
    }
    sub_23AA8A05C((uint64_t)v204, &qword_2542E6C80);
    return 2;
  }
  v50 = *(_QWORD *)&v45[*(int *)(v205 + 56)];
  v51 = *(_QWORD *)(v50 + 64);
  v200 = v50 + 64;
  v52 = 1 << *(_BYTE *)(v50 + 32);
  v53 = -1;
  if (v52 < 64)
    v53 = ~(-1 << v52);
  v54 = v53 & v51;
  v210 = (unint64_t)(v52 + 63) >> 6;
  v211 = v50;
  v188 = v210 - 1;
  result = swift_bridgeObjectRetain();
  v216 = 0;
  v217 = v33;
  v56 = (_QWORD *)v214;
  if (!v54)
    goto LABEL_13;
LABEL_11:
  v224 = (_QWORD *)((v54 - 1) & v54);
  v74 = v215;
  v75 = __clz(__rbit64(v54)) | (v216 << 6);
  v76 = v225;
  while (2)
  {
    sub_23AA8EFC8(*(_QWORD *)(v211 + 56) + v56[9] * v75, (uint64_t)v33, &qword_2542E6A10);
    v77 = (void (*)(_QWORD *, _QWORD, uint64_t, unint64_t))v56[7];
    v77(v33, 0, 1, v76);
    while (1)
    {
      v81 = (unsigned int (*)(_QWORD *, uint64_t, unint64_t))v56[6];
      v82 = 1;
      if (v81(v33, 1, v76) != 1)
      {
        v83 = *(int *)(v76 + 64);
        v84 = (char *)v33 + v83;
        v85 = *(int *)(v76 + 80);
        v86 = *v33;
        v87 = v33[1];
        v88 = v218;
        *v218 = v86;
        v88[1] = v87;
        v89 = (char *)v88 + v83;
        v90 = v221;
        v91 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
        v91((char *)v88 + v83, v84, v221);
        v92 = swift_allocObject();
        *(_OWORD *)(v92 + 16) = *(_OWORD *)((char *)v217 + v85);
        v93 = v88[1];
        v94 = v219;
        v95 = (char *)v219 + *(int *)(v225 + 64);
        v96 = (char *)v219 + *(int *)(v225 + 80);
        *(_QWORD *)v219 = *v88;
        *((_QWORD *)v94 + 1) = v93;
        v97 = v90;
        v76 = v225;
        v91(v95, v89, v97);
        v82 = 0;
        *(_QWORD *)v96 = sub_23ADF35F8;
        *((_QWORD *)v96 + 1) = v92;
      }
      v98 = (uint64_t)v219;
      v77(v219, v82, 1, v76);
      v99 = v213;
      sub_23AA724E8(v98, (uint64_t)v213, &qword_2542E6A18);
      if (v81(v99, 1, v76) == 1)
      {
        swift_release();
        v100 = v233;
        v101 = v234;
        v102 = v199;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v199, 1, 1, v205);
        swift_beginAccess();
        v103 = (uint64_t)v102;
        v27 = v225;
        sub_23AD03AA8(v103, v100, v101);
        swift_endAccess();
        sub_23AA8A05C((uint64_t)v204, &qword_2542E6C80);
        goto LABEL_38;
      }
      v57 = v218;
      v58 = (uint64_t)v218 + *(int *)(v76 + 64);
      v59 = *v99;
      a2 = v99[1];
      v60 = *(int *)(v76 + 80);
      v61 = v76;
      v63 = *(void (**)(_QWORD))((char *)v99 + v60);
      v62 = *(unint64_t *)((char *)v99 + v60 + 8);
      v222 = (void (*)(void *))v63;
      v223 = v58;
      v64 = (unint64_t *)((char *)v218 + v60);
      *v218 = v59;
      v57[1] = a2;
      v65 = v220;
      v66 = v221;
      (*(void (**)(void))(v220 + 32))();
      *v64 = v63;
      v64[1] = v62;
      v67 = v212;
      v68 = (char *)v212 + *(int *)(v61 + 64);
      v69 = (unint64_t *)((char *)v212 + *(int *)(v61 + 80));
      *v212 = v59;
      v67[1] = a2;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v68, v223, v66);
      v70 = v222;
      *v69 = v222;
      v69[1] = v62;
      sub_23AAFCEE8();
      v71 = (void *)swift_allocError();
      *v72 = 0;
      swift_retain();
      v70(v71);

      swift_release();
      v73 = (uint64_t)v57;
      v33 = v217;
      sub_23AA8A05C(v73, &qword_2542E6A10);
      result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v68, v66);
      v54 = (unint64_t)v224;
      v56 = (_QWORD *)v214;
      if (v224)
        goto LABEL_11;
LABEL_13:
      v74 = v215;
      v78 = v216 + 1;
      v76 = v225;
      if (__OFADD__(v216, 1))
      {
        __break(1u);
        goto LABEL_74;
      }
      if (v78 < v210)
      {
        v79 = *(_QWORD *)(v200 + 8 * v78);
        if (v79)
          goto LABEL_16;
        v80 = v216 + 2;
        ++v216;
        if (v78 + 1 < v210)
        {
          v79 = *(_QWORD *)(v200 + 8 * v80);
          if (v79)
            goto LABEL_19;
          v216 = v78 + 1;
          if (v78 + 2 < v210)
          {
            v79 = *(_QWORD *)(v200 + 8 * (v78 + 2));
            if (v79)
            {
              v78 += 2;
              goto LABEL_16;
            }
            v216 = v78 + 2;
            if (v78 + 3 < v210)
            {
              v79 = *(_QWORD *)(v200 + 8 * (v78 + 3));
              if (v79)
              {
                v78 += 3;
                goto LABEL_16;
              }
              v80 = v78 + 4;
              v216 = v78 + 3;
              if (v78 + 4 < v210)
                break;
            }
          }
        }
      }
LABEL_33:
      v77 = (void (*)(_QWORD *, _QWORD, uint64_t, unint64_t))v56[7];
      v77(v33, 1, 1, v225);
      v224 = 0;
    }
    v79 = *(_QWORD *)(v200 + 8 * v80);
    if (v79)
    {
LABEL_19:
      v78 = v80;
LABEL_16:
      v224 = (_QWORD *)((v79 - 1) & v79);
      v75 = __clz(__rbit64(v79)) + (v78 << 6);
      v216 = v78;
      continue;
    }
    break;
  }
  while (1)
  {
    v78 = v80 + 1;
    if (__OFADD__(v80, 1))
      break;
    if (v78 >= v210)
    {
      v216 = v188;
      goto LABEL_33;
    }
    v79 = *(_QWORD *)(v200 + 8 * v78);
    ++v80;
    if (v79)
      goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA6D55C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, _BYTE *a6, void (*a7)(id, _QWORD, _QWORD, uint64_t), uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v37 = a4;
  v38 = a5;
  v41 = a3;
  v39 = a1;
  v40 = a2;
  v11 = sub_23B1C602C();
  v36 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C60A4();
  v34 = *(_QWORD *)(v14 - 8);
  v35 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a7;
  *(_QWORD *)(v17 + 24) = a8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_23AAB55CC;
  *(_QWORD *)(v18 + 24) = v17;
  v19 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v20 = (void *)MEMORY[0x23B8615C4](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      v21 = sub_23AC61E18();
      a7(v21, 0, 0, 1);

      swift_release();
      swift_release();

      return swift_release();
    }

  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v22 = (void *)MEMORY[0x23B8615C4](v19);
    if (v22)
    {
      v23 = v22;
      v33 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_2132;
      v24 = _Block_copy(aBlock);
      sub_23B1C6068();
      v42 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v25 = v33;
      MEMORY[0x23B85F470](0, v16, v13, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
    }
  }
  v26 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v27 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a6;
  v28[3] = sub_23ACF2354;
  v29 = v37;
  v30 = v38;
  v28[4] = v18;
  v28[5] = v29;
  v28[6] = v30;
  v31 = a6;
  swift_retain();
  swift_retain();
  sub_23AA81A30(v39, v40, v41, v26, v27, (uint64_t)sub_23AAB92FC, (uint64_t)v28);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AA6D8E0(int a1@<W0>, uint64_t *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v32 = a4;
  v31 = a5;
  v47 = *MEMORY[0x24BDAC8D0];
  v9 = sub_23B1C5570();
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C5E4C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a2;
  if (*a2)
  {
LABEL_2:
    v35 = v17;
    v36 = 0;
    v18 = fpfs_supports_long_paths();
    v19 = 1025;
    if ((_DWORD)v18)
      v19 = 0;
    v34 = v19;
    MEMORY[0x24BDAC7A8](v18);
    *((_DWORD *)&v29 - 8) = a3;
    *(&v29 - 3) = (uint64_t)&v35;
    *(&v29 - 2) = (uint64_t)&v36;
    *(&v29 - 1) = (uint64_t)&v34;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AAB7DB0);
    v20 = v36;
    if (!v5)
    {
      if (!v36)
      {
        v25 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v26 = sub_23B1C5E40();
        v27 = sub_23B1C6AAC();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v28 = 0;
          _os_log_impl(&dword_23AA66000, v26, v27, "fpfs_fetch_url_for_handle: unexpected nil buffer", v28, 2u);
          MEMORY[0x23B8614BC](v28, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
        v33 = 83;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AC37520();
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
        swift_willThrow();
        v23 = (char *)v36;
        goto LABEL_8;
      }
      v21 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v22 = objc_msgSend(v21, sel_stringWithFileSystemRepresentation_length_, v20, strlen(v20));

      sub_23B1C63E0();
      sub_23B1C590C();
      swift_bridgeObjectRelease();
    }
    v23 = (char *)v20;
LABEL_8:
    free(v23);
    return;
  }
  v36 = 0;
  v37 = 0;
  v39 = 0;
  v38 = 0;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  MEMORY[0x24BDAC7A8](v14);
  *((_DWORD *)&v29 - 4) = a1;
  *(&v29 - 1) = v24;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC374EC);
  if (!v5)
  {
    v17 = v37;
    goto LABEL_2;
  }
}

uint64_t (*sub_23AA6DC74(os_log_type_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6))(uint64_t a1)
{
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v12 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v13 = sub_23B1C5E40();
  v14 = a1;
  if (os_log_type_enabled(v13, a1))
  {
    v29 = a2;
    v15 = swift_slowAlloc();
    v28 = a6;
    v16 = (_QWORD *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v15 = 138412546;
    v27 = a1;
    v17 = a3;
    v18 = a4;
    v19 = objc_msgSend(v12, sel_fork);
    sub_23B1C6CBC();
    *v16 = v19;

    *(_WORD *)(v15 + 12) = 2082;
    v20 = sub_23B1C6F2C();
    sub_23AABEC68(v20, v21, &v30);
    sub_23B1C6CBC();
    a4 = v18;
    a3 = v17;
    a1 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v13, v14, "%@ %{public}s", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    v22 = v16;
    a6 = v28;
    MEMORY[0x23B8614BC](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v26, -1, -1);
    v23 = v15;
    a2 = v29;
    MEMORY[0x23B8614BC](v23, -1, -1);
  }
  else
  {

  }
  v24 = swift_allocObject();
  *(_BYTE *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = v12;
  *(_QWORD *)(v24 + 32) = a2;
  *(_QWORD *)(v24 + 40) = a3;
  *(_BYTE *)(v24 + 48) = a4;
  *(_QWORD *)(v24 + 56) = a5;
  *(_QWORD *)(v24 + 64) = a6;
  swift_retain();
  return sub_23AABEC50;
}

uint64_t sub_23AA6DEEC(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0x205443454C4553;
}

unint64_t sub_23AA6E098(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  int v9;
  int v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _QWORD __dst[109];

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7D8);
  v2 = sub_23B1C70AC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  swift_retain();
  v6 = v4 - 1;
  for (i = 32; ; i += 864)
  {
    memcpy(__dst, (const void *)(a1 + i), 0x360uLL);
    v8 = (void *)__dst[0];
    v9 = LOBYTE(__dst[1]);
    v10 = BYTE1(__dst[1]);
    sub_23AAFBED8((uint64_t)__dst);
    result = sub_23AA85F34(v8, v9 | (v10 << 8));
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v13 = v3[6] + 16 * result;
    *(_QWORD *)v13 = v8;
    *(_BYTE *)(v13 + 8) = v9;
    *(_BYTE *)(v13 + 9) = v10;
    result = (unint64_t)memcpy((void *)(v3[7] + 848 * result), &__dst[2], 0x350uLL);
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_12;
    v3[2] = v16;
    if (!v6)
    {
      swift_release();
      goto LABEL_10;
    }
    --v6;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

void sub_23AA6E1EC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AA6E2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v9[5] = *(_QWORD *)(a1 - 8);
  v9[6] = a1;
  MEMORY[0x24BDAC7A8](a1);
  v9[14] = (char *)&a9 - v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[13] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9[11] = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v9[15] = (char *)&a9 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v9[22] = (char *)&a9 - v22;
  v9[2] = v10;
  v9[4] = v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9[21] = AssociatedTypeWitness;
  v9[10] = AssociatedConformanceWitness;
  v25 = type metadata accessor for ItemStateVersion(0, AssociatedTypeWitness, AssociatedConformanceWitness, v24);
  v9[20] = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v9[9] = (char *)&a9 - v27;
  v9[26] = v14;
  v9[17] = *(_QWORD *)(v14 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v9[18] = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v9[12] = (char *)&a9 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v9[16] = (char *)&a9 - v33;
  v9[29] = v11;
  v9[23] = *(_QWORD *)(v11 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v9[25] = (char *)&a9 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v9[19] = (char *)&a9 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v9[24] = (char *)&a9 - v38;
  v39 = sub_23AABCB60();
  v9[33] = &_s14descr250C16931O9SQLFieldsON;
  v9[34] = v15;
  v9[35] = v39;
  v9[36] = v12;
  type metadata accessor for SQLCodableAccessorWrapper();
}

void sub_23AA6E50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v9[30] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - v14;
  v16 = type metadata accessor for ItemMetadata();
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v9[27] = v11;
  v9[28] = v13;
  sub_23AA84C6C((uint64_t)sub_23AAA6724, v13, v10, v11, v12, (uint64_t)v15);
}

uint64_t sub_23AA6E5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = MEMORY[0x23B8613CC](&unk_23B1E1DE8, v4);
  v6 = *(_QWORD *)(v0 + 248);
  sub_23AA825CC(v4, v5, v3);
  if (!v6)
  {
    v8 = *(_QWORD *)(v0 + 200);
    v9 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 8) = v2;
    *(_QWORD *)(v0 + 248) = v3;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 8))(v1, v4);
    v10 = *(_QWORD *)(v0 + 232);
    if (swift_dynamicCastMetatype())
    {
      *(_BYTE *)(v0 + 260) = 31;
      v11 = MEMORY[0x24BEE4568];
      v13 = *(_QWORD *)(v0 + 216);
      v12 = *(_QWORD *)(v0 + 224);
      sub_23AA84870(v12, MEMORY[0x24BEE4568]);
      sub_23AA94830(v0 + 260, v11, v12, v11, v13);
      v14 = *(_QWORD *)(v0 + 512);
      *(_BYTE *)(v0 + 259) = 32;
      v15 = MEMORY[0x24BEE44F0];
      sub_23AA84870(v12, MEMORY[0x24BEE44F0]);
      sub_23AA94830(v0 + 259, v15, v12, v15, v13);
      v16 = *(unsigned int *)(v0 + 260);
      v17 = *(_QWORD *)(v0 + 8);
      sub_23AA9BA80(*(_QWORD *)(v0 + 248), v17);
      *(_QWORD *)(v0 + 264) = sub_23AA9BD7C(v14, v16, v17);
      *(_DWORD *)(v0 + 272) = v18;
      *(_QWORD *)(v0 + 280) = v19;
      *(_BYTE *)(v0 + 288) = v20 & 1;
      v21 = *(_QWORD *)(v0 + 152);
      v22 = *(_QWORD *)(v0 + 232);
      swift_dynamicCast();
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 32))(*(_QWORD *)(v0 + 192), v21, v22);
    }
    else
    {
      *(_BYTE *)(v0 + 264) = 33;
      v23 = *(_QWORD *)(v0 + 216);
      v24 = *(_QWORD *)(v0 + 224);
      v25 = sub_23AA84870(v24, v10);
      sub_23AA94830(v0 + 264, v25, v24, v10, v23);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 32))(*(_QWORD *)(v0 + 192), v8, v10);
    }
    v26 = v9;
    v27 = swift_dynamicCastMetatype();
    v28 = *(_QWORD *)(v0 + 168);
    if (v27)
    {
      *(_BYTE *)(v0 + 264) = 29;
      v30 = *(_QWORD *)(v0 + 216);
      v29 = *(_QWORD *)(v0 + 224);
      sub_23AA94830(v0 + 264, v28, v29, v28, v30);
      *(_BYTE *)(v0 + 512) = 30;
      sub_23AA84870(v29, (uint64_t)&type metadata for Filename);
      sub_23AA94830(v0 + 512, (uint64_t)&type metadata for Filename, v29, (uint64_t)&type metadata for Filename, v30);
      sub_23AAB9FBC(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), v28, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72));
      v34 = *(_QWORD *)(v0 + 96);
      swift_dynamicCast();
    }
    else
    {
      *(_BYTE *)(v0 + 264) = 34;
      v31 = *(_QWORD *)(v0 + 216);
      v32 = *(_QWORD *)(v0 + 224);
      v33 = sub_23AA84870(v32, v9);
      v34 = *(_QWORD *)(v0 + 144);
      sub_23AA94830(v0 + 264, v33, v32, v9, v31);
      v28 = *(_QWORD *)(v0 + 168);
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 128), v34, v26);
    *(_BYTE *)(v0 + 264) = 28;
    v36 = *(_QWORD *)(v0 + 216);
    v35 = *(_QWORD *)(v0 + 224);
    v37 = sub_23AA84870(v35, v28);
    sub_23AA94830(v0 + 264, v37, v35, v28, v36);
    v38 = *(_QWORD *)(v0 + 112);
    *(_BYTE *)(v0 + 264) = 29;
    sub_23AA94830(v0 + 264, v37, *(_QWORD *)(v0 + 224), v28, v36);
    v39 = *(_QWORD *)(v0 + 152);
    v40 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 184) + 16))(v39, *(_QWORD *)(v0 + 192), v40);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 136) + 16))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 128), v26);
    sub_23AA6B6BC(v39, v40, v38);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 8))(v1, v4);
}

void sub_23AA6EAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD, uint64_t);
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v0 + 260) = 30;
  v6 = *(_QWORD *)(v0 + 224);
  sub_23AA84870(v6, (uint64_t)&type metadata for Filename);
  sub_23AA94830(v0 + 260, (uint64_t)&type metadata for Filename, v6, (uint64_t)&type metadata for Filename, v4);
  v7 = *(_QWORD *)(v0 + 248);
  if (v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(v5, *(_QWORD *)(v0 + 48));
    v8 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 104) + 8);
    v9 = *(_QWORD *)(v0 + 168);
    v8(*(_QWORD *)(v0 + 88), v9);
    v8(*(_QWORD *)(v0 + 120), v9);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 128), v1);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), v3);
    sub_23AA9F854(v7);
    JUMPOUT(0x23AA6E7ACLL);
  }
  v10 = *(_QWORD *)(v0 + 512);
  sub_23AA9BA80(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 8));
  sub_23AAF8E48(v0 + 264);
  sub_23AAB7EC8(v0 + 264, v0 + 528);
  sub_23AABC92C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88), v10, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
}

uint64_t sub_23AA6EBC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v3);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v12, v1);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_23B1C64F4();
    sub_23B1C7340();
    sub_23B1C64F4();
    v14 = v16;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_23B1C64F4();
    sub_23B1C7340();
    sub_23B1C64F4();
    v14 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v14;
}

void sub_23AA6ED90(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  void *v8;
  unint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  id v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  os_log_type_t v34;
  _QWORD *v35;
  id v36;
  unsigned int log;
  os_log_type_t type[8];
  uint64_t v39;
  id __src;
  _QWORD v41[5];
  _QWORD v42[2];
  unsigned __int8 v43;
  void *v44;
  char v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  sub_23AA724E8(a1, (uint64_t)v41, &qword_2542DE8A0);
  v8 = (void *)v41[0];
  sub_23AA724E8(a1, (uint64_t)v42, &qword_2542DE8A0);
  v9 = v42[0];
  if (v45 == 1)
  {
    sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB5450);
    sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB5450);
    v10 = a3;
    sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB5450);
    v11 = v10;
    v12 = sub_23B1C5E40();
    v13 = sub_23B1C6AA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138412802;
      v15 = a5;
      v16 = v11;
      sub_23B1C6CBC();
      *v35 = v11;

      a5 = v15;
      *(_WORD *)(v14 + 12) = 2048;
      sub_23B1C6CBC();
      *(_WORD *)(v14 + 22) = 2112;
      swift_getErrorValue();
      __src = sub_23B0D9CF0(v39);
      sub_23B1C6CBC();
      v35[1] = __src;
      sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
      sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
      _os_log_impl(&dword_23AA66000, v12, v13, "📖  %@: enumerating from change %llu failed: %@", (uint8_t *)v14, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v35, -1, -1);
      MEMORY[0x23B8614BC](v14, -1, -1);

    }
    else
    {

      sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
      sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
    }
    v29 = v8;
    a5(MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], 0, 0, 0, v9);
    sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
    sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
  }
  else
  {
    v17 = v42[1];
    v18 = v43;
    v19 = v44;
    v20 = a3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v21 = v20;
    v22 = sub_23B1C5E40();
    v23 = sub_23B1C6A94();
    if (os_log_type_enabled(v22, v23))
    {
      v34 = v23;
      log = v18;
      *(_QWORD *)type = a5;
      v24 = swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      v36 = (id)swift_slowAlloc();
      __src = v36;
      *(_DWORD *)v24 = 138413570;
      v26 = v21;
      sub_23B1C6CBC();
      *v25 = v21;

      *(_WORD *)(v24 + 12) = 2048;
      sub_23B1C6CBC();
      *(_WORD *)(v24 + 22) = 2048;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_23B1C7088();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 32) = 2048;
      v18 = log;
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_23B1C7088();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 42) = 2080;
      if (log)
        v27 = 0x6F6D20736168202CLL;
      else
        v27 = 0;
      if (log)
        v28 = 0xEA00000000006572;
      else
        v28 = 0xE000000000000000;
      sub_23AABEC68(v27, v28, (uint64_t *)&__src);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 52) = 2048;
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v22, v34, "📖  %@: enumerating from change %llu done: %ld updated, %ld deleted%s, next anchor:%llu", (uint8_t *)v24, 0x3Eu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v36, -1, -1);
      MEMORY[0x23B8614BC](v24, -1, -1);

      a5 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))type;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    __src = v19;
    v30 = sub_23AABEE98(&__src, v41);
    v32 = v31 & 0xFFFFFFFFFFFFFFLL;
    v33 = (void *)sub_23B1C5AA4();
    sub_23AAAE53C(v30, v32);
    a5(v9, v17, v18, v33, 0, 0);

  }
}

void sub_23AA6F44C(uint64_t a1, uint64_t a2, int a3, void (*a4)(_QWORD *, id), uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  const void *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v8 = v7;
  v36 = a7;
  v37 = a2;
  v34 = a6;
  v35 = a1;
  v38 = a3;
  v11 = sub_23B1C602C();
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23B1C60A4();
  v14 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v18 = &v7[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v19 = (void *)MEMORY[0x23B8615C4](v18);
  swift_retain_n();
  if (v19)
  {
    if (objc_msgSend(v19, sel_unableToStartup))
    {
      v20 = sub_23AC61E18();
      aBlock[0] = 0;
      a4(aBlock, v20);

      swift_release();
      swift_release();

      return;
    }

  }
  if ((v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v21 = (void *)MEMORY[0x23B8615C4](v18);
    if (v21)
    {
      v22 = v21;
      v31 = objc_msgSend(v21, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_3695;
      v30 = _Block_copy(aBlock);
      sub_23B1C6068();
      v39 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v24 = v30;
      v23 = v31;
      MEMORY[0x23B85F470](0, v16, v13, v30);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v32);
    }
  }
  v25 = *(void **)&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v26 = *(void **)&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v8;
  v27[3] = sub_23ACEA8D4;
  v28 = v34;
  v27[4] = v17;
  v27[5] = v28;
  v27[6] = v36;
  v29 = v8;
  swift_retain();
  swift_retain();
  sub_23AA81A30(v35, v37, v38, v25, v26, (uint64_t)sub_23AAB92FC, (uint64_t)v27);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_23AA6F854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t, uint64_t, uint64_t, _BYTE *))
{
  _QWORD *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  void *v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E4788 != -1)
    swift_once();
  v27 = a3;
  v28 = a4;
  sub_23B1C64F4();
  swift_beginAccess();
  v12 = off_2542E4780;
  if (*((_QWORD *)off_2542E4780 + 2) && (v13 = sub_23AAAF4C4(a3, a4), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(v12[7] + 16 * v13);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = swift_endAccess();
    v17 = a5(v16);
    swift_bridgeObjectRetain();
    v18 = a6(v17, a1, a2, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
    sub_23AAB5A28((unint64_t *)&qword_2542E74B0, &qword_2542E54E8, MEMORY[0x24BEE12B0]);
    v15 = sub_23B1C6338();
    v20 = v19;
    swift_bridgeObjectRelease();
    v27 = a3;
    v28 = a4;
    sub_23B1C64F4();
    v21 = v27;
    v22 = v28;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = off_2542E4780;
    off_2542E4780 = (_UNKNOWN *)0x8000000000000000;
    sub_23AD24F84(v15, v20, v21, v22, isUniquelyReferenced_nonNull_native);
    off_2542E4780 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v15;
}

void sub_23AA6FB08()
{
  type metadata accessor for Propagation.CreateItem();
}

uint64_t sub_23AA6FB3C()
{
  if (!swift_dynamicCastMetatype())
    type metadata accessor for Propagation.UpdateItem();
  return 0;
}

uint64_t sub_23AA7067C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  int v25;
  void (*v26)(char *, uint64_t);
  id v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];
  id v42;

  v40 = a4;
  v8 = sub_23B1C5E4C();
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  if (*(_BYTE *)(v4 + qword_2542EDE58) == 1)
  {
    sub_23AD2C7F8();
    swift_allocError();
    return swift_willThrow();
  }
  if (errorInjectionThrowOnDBQueryEnabled())
  {
    sub_23AB23A94();
    swift_allocError();
    *(_OWORD *)v17 = 0u;
    *(_OWORD *)(v17 + 16) = 0u;
    *(_OWORD *)(v17 + 32) = 0u;
    *(_BYTE *)(v17 + 48) = 8;
    return swift_willThrow();
  }
  v36 = v10;
  v34 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v16, 1, 1, a3);
  v42 = 0;
  v19 = *(void **)(v4 + qword_2542E69D8);
  *(_QWORD *)(v4 + qword_2542E69D8) = 0;

  v35 = *(id *)(v4 + qword_2542EE110);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a3;
  v20[3] = v16;
  v20[4] = a1;
  v20[5] = a2;
  v20[6] = &v42;
  v20[7] = v4;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_23AABD8E8;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = sub_23AEB5970;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AAB6470;
  aBlock[3] = &block_descriptor_945_0;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v35, sel_performWithFlags_action_, 12, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v22 & 1) != 0)
  {
    __break(1u);
  }
  else if (v42)
  {
    v23 = v42;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v36);
    return swift_release();
  }
  else
  {
    v24 = v36;
    v35 = *(id *)(v11 + 16);
    ((void (*)(char *, char *, uint64_t))v35)(v14, v16, v36);
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v14, 1, a3);
    v26 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26(v14, v24);
    if (v25 == 1)
    {
      v27 = (id)fpfs_current_or_default_log();
      v28 = v37;
      sub_23B1C5E58();
      v29 = sub_23B1C5E40();
      v30 = sub_23B1C6A88();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_23AA66000, v29, v30, "batch received after db has been closed will be ignored", v31, 2u);
        MEMORY[0x23B8614BC](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v39);
    }
    else if ((sub_23AABA5A0() & 1) == 0)
    {
      sub_23AABDA94();
    }
    v32 = v36;
    ((void (*)(uint64_t, char *, uint64_t))v35)(v40, v16, v36);

    v26(v16, v32);
    return swift_release();
  }
  return result;
}

uint64_t sub_23AA70A9C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23B1C74A8();
  if (v1)
  {
    sub_23B1C74B4();
    if (v1 == 1)
      sub_23B1C74D8();
  }
  else
  {
    sub_23B1C74B4();
    sub_23B1C74CC();
  }
  return sub_23B1C74E4();
}

uint64_t objectdestroy_772Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  sub_23AC03BE4(*(_QWORD *)(v0 + v4));
  return swift_deallocObject();
}

uint64_t sub_23AA70BE8(void *a1, char a2, _QWORD *a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  char *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  char isEscapingClosureAtFileLocation;
  __int128 v35;
  char *v36;
  void *v37;
  void *v38;
  void *v39;
  _QWORD *v40;
  id v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  char *v64;
  id v65;
  char *v66;
  uint64_t v67;
  void *v68;
  char *v69;
  char *v70;
  void *v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  id v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  _BYTE *v101;
  _QWORD *v102;
  id v103;
  uint64_t v104;
  uint64_t aBlock;
  unint64_t v106;
  id (*v107)(uint64_t, void *);
  void *v108;
  uint64_t (*v109)();
  uint64_t v110;
  uint64_t v111[2];

  v100 = a4;
  v101 = a5;
  v102 = a3;
  v103 = a1;
  v111[1] = *MEMORY[0x24BDAC8D0];
  v6 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v6);
  v79[1] = (char *)v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_23B1C5474();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79[0] = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_23B1C602C();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_23B1C60A4();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5DC8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v79 - v19;
  v21 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v21);
  v91 = (char *)v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v23 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v20, 1, 1, v11);
  sub_23AA8EFC8((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
  {
    v24 = v23;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, v11);
  }
  v25 = v91;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v91, v14, v11);
  v83 = *(int *)(v21 + 20);
  *(_QWORD *)&v25[v83] = v23;
  v26 = &v25[*(int *)(v21 + 24)];
  *(_QWORD *)v26 = "SQLDB: Enumerate dataless containers";
  *((_QWORD *)v26 + 1) = 36;
  v84 = v26;
  v26[16] = 2;
  v27 = v23;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_23AA8A05C((uint64_t)v20, (uint64_t *)&unk_2542E67B8);
  v28 = (void *)v102[3];
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v103;
  *(_BYTE *)(v29 + 24) = a2;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_23AAB8144;
  *(_QWORD *)(v30 + 24) = v29;
  v82 = v29;
  v109 = sub_23AA956C8;
  v110 = v30;
  aBlock = MEMORY[0x24BDAC760];
  v106 = 1107296256;
  v107 = sub_23AA9432C;
  v108 = &block_descriptor_1391_0;
  v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v32 = objc_msgSend(v28, sel_fetchSwift_error_, v31, &aBlock);
  _Block_release(v31);
  v33 = (id)aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_54:
    __break(1u);
  }
  if (!v32)
  {
    sub_23B1C587C();

    swift_willThrow();
    goto LABEL_51;
  }
  if ((objc_msgSend(v32, sel_next) & 1) == 0)
  {
LABEL_49:

    sub_23B1C6BD8();
    v74 = (uint64_t)v91;
    sub_23B1C5DA4();
    sub_23AA937BC(v74, type metadata accessor for Signpost);
    return swift_release();
  }
  v100 += OBJC_IVAR____TtC9libfssync14FPFSEnumerator_logger;
  v36 = &v101[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v98 = OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started;
  v97 = OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_initializationGroup;
  v96 = OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log;
  v94 = MEMORY[0x24BEE4AD8] + 8;
  v95 = OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue;
  *(_QWORD *)&v35 = 136446210;
  v93 = v35;
  v99 = &v101[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  while (1)
  {
    v42 = (_QWORD *)MEMORY[0x23B8601A8]();
    v43 = v32;
    v44 = (uint64_t)objc_msgSend(v43, sel_longAtIndex_, 0);
    if (v44 == 0x8000000000000000)
    {
      v46 = 2;
      v45 = 1;
      goto LABEL_20;
    }
    v45 = v44;
    if (!v44)
    {
      v46 = 2;
      goto LABEL_20;
    }
    if ((v44 & 0x8000000000000000) == 0)
    {
      v46 = 1;
      goto LABEL_20;
    }
    v45 = -v44;
    if ((unint64_t)-v44 >> 32)
      break;
    v46 = 0;
LABEL_20:
    v102 = v42;
    v103 = v43;

    v47 = sub_23B1C5E40();
    v48 = sub_23B1C6A88();
    if (!os_log_type_enabled(v47, v48))
      goto LABEL_33;
    v49 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v111[0] = v50;
    *(_DWORD *)v49 = v93;
    if (v46)
    {
      if (v46 != 1)
      {
        if (v45)
          v51 = 0x6873617274;
        else
          v51 = 1953460082;
        if (v45)
          v52 = 0xE500000000000000;
        else
          v52 = 0xE400000000000000;
        goto LABEL_32;
      }
      v104 = v45;
      aBlock = 0x284449656C6966;
      v106 = 0xE700000000000000;
    }
    else
    {
      aBlock = 0x284449636F64;
      v106 = 0xE600000000000000;
      LODWORD(v104) = v45;
    }
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v51 = aBlock;
    v52 = v106;
LABEL_32:
    v36 = v99;
    *(_QWORD *)(v49 + 4) = sub_23AABEC68(v51, v52, v111);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v47, v48, "Materializing container %{public}s for appLibraries", (uint8_t *)v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v50, -1, -1);
    MEMORY[0x23B8614BC](v49, -1, -1);
LABEL_33:

    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v45;
    *(_BYTE *)(v53 + 24) = v46;
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 16) = nullsub_1;
    *(_QWORD *)(v54 + 24) = 0;
    v55 = (void *)MEMORY[0x23B8615C4](v36);
    if (!v55)
      goto LABEL_40;
    v56 = v55;
    if (!objc_msgSend(v55, sel_unableToStartup))
    {

LABEL_40:
      if ((v101[v98] & 1) == 0)
      {
        v61 = (void *)MEMORY[0x23B8615C4](v36);
        if (v61)
        {
          v62 = v61;
          v92 = objc_msgSend(v61, sel_serialQueue);

          v109 = (uint64_t (*)())nullsub_1;
          v110 = 0;
          aBlock = MEMORY[0x24BDAC760];
          v106 = 1107296256;
          v107 = (id (*)(uint64_t, void *))sub_23AA698FC;
          v108 = &block_descriptor_1400;
          v63 = _Block_copy(&aBlock);
          v64 = v85;
          sub_23B1C6068();
          v111[0] = MEMORY[0x24BEE4AF8];
          sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
          sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
          v65 = v32;
          v66 = v88;
          v67 = v90;
          sub_23B1C6DE8();
          v68 = v92;
          MEMORY[0x23B85F470](0, v64, v66, v63);
          _Block_release(v63);

          v69 = v66;
          v32 = v65;
          (*(void (**)(char *, uint64_t))(v89 + 8))(v69, v67);
          v70 = v64;
          v36 = v99;
          (*(void (**)(char *, uint64_t))(v86 + 8))(v70, v87);
        }
      }
      v37 = v101;
      v38 = *(void **)&v101[v96];
      v39 = *(void **)&v101[v95];
      v40 = (_QWORD *)swift_allocObject();
      v40[2] = v37;
      v40[3] = sub_23AA698D4;
      v40[4] = v54;
      v40[5] = sub_23B0608FC;
      v40[6] = v53;
      v41 = v37;
      swift_retain();
      swift_retain();
      sub_23AA81A30((uint64_t)"triggerMaterializationDatalessContainers(fpfs:backend:directory:)", 65, 2, v38, v39, (uint64_t)sub_23AA852F8, (uint64_t)v40);
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_11;
    }
    v57 = (void *)MEMORY[0x23B8615C4](v36);
    if (!v57)
      goto LABEL_44;
    v58 = v57;
    v59 = objc_msgSend(v57, sel_indexer);

    if (!v59)
      goto LABEL_44;
    if ((objc_msgSend(v59, sel_needsAuthentication) & 1) == 0)
    {

LABEL_44:
      v71 = (void *)MEMORY[0x23B8615C4](v36);
      if (!v71
        || (v72 = v71,
            v60 = objc_msgSend(v71, sel_startupError),
            v72,
            !v60))
      {
        v73 = (id)FPDomainUnavailableError();
        if (!v73)
          goto LABEL_54;
        v60 = v73;
      }
      goto LABEL_48;
    }
    type metadata accessor for NSFileProviderError(0);
    v111[0] = -1000;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
    sub_23B1C5864();

    v60 = (id)aBlock;
LABEL_48:
    swift_release();
    swift_release();

LABEL_11:
    objc_autoreleasePoolPop(v102);
    if ((objc_msgSend(v103, sel_next) & 1) == 0)
      goto LABEL_49;
  }
  sub_23B1C53FC();
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
  v77 = v79[0];
  v78 = v81;
  sub_23B1C5864();
  sub_23B1C5354();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v77, v78);
  swift_willThrow();

  objc_autoreleasePoolPop(v42);
LABEL_51:
  sub_23B1C6BD8();
  v76 = (uint64_t)v91;
  sub_23B1C5DA4();
  sub_23AA937BC(v76, type metadata accessor for Signpost);
  return swift_release();
}

void sub_23AA71884()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23AA71948()
{
  sub_23AA75B40();
}

void sub_23AA71984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD aBlock[6];

  v3 = MEMORY[0x23B8615C4](v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend);
  if (v3)
  {
    v14 = (id)v3;
    v4 = MEMORY[0x23B8615C4](v3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
    if (v4)
    {
      v5 = (void *)v4;
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC8288]), sel_init);
      v7 = objc_msgSend(v5, sel_providerDomainID);
      v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82E8]), sel_initWithProviderDomainID_itemIdentifier_, v7, a1);

      objc_msgSend(v6, sel_setEnumeratedItemID_, v8);
      v9 = objc_msgSend(v5, sel_extensionBackend);
      v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_lifetimeExtender);
      v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DummyEnumeratorObserver()), sel_init);
      v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_23AB3CCFC;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AC45EB4;
      aBlock[3] = &block_descriptor_59;
      v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v9, sel_enumerateWithSettings_lifetimeExtender_observer_completionHandler_, v6, v10, v11, v13);
      _Block_release(v13);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_23AA71B80(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint8_t *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  char *v23;
  void **v24;
  void *v25;
  int v26;
  uint64_t v27;
  uint64_t *v28;
  id v29;
  id v30;
  NSObject *v31;
  NSObject *v32;
  os_log_type_t v33;
  BOOL v34;
  uint8_t *v35;
  _QWORD *v36;
  id v37;
  uint8_t *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  char *v41;
  char *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  NSObject *v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _QWORD *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  BOOL v64;
  uint8_t *v65;
  void (*v66)(uint64_t, uint64_t);
  void **v67;
  void *v68;
  id v69;
  unsigned __int8 v70;
  id v71;
  id v72;
  uint8_t *v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  void *v79;
  id v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  unint64_t v83;
  unint64_t v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint8_t *v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  void **v92;
  void *v93;
  unsigned __int8 v94;
  char *v95;
  uint8_t *v96;
  uint8_t *v97;
  int v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  void **v103;
  uint8_t *v104;
  void (*v105)(uint8_t *, uint64_t);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  id v110;
  uint64_t v111;
  uint64_t v112[3];

  v109 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint8_t *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5A08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v95 - v11;
  v13 = sub_23B1C5E4C();
  v14 = *(void (**)(uint8_t *, uint64_t))(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v23 = (char *)&v95 - v22;
  v24 = (void **)(a1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs);
  v25 = *(void **)(a1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs);
  v26 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs + 8);
  if (v26 != 255)
  {
    if ((v26 & 1) != 0)
    {
      v112[0] = *(_QWORD *)(a1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs);
      sub_23AA724DC(v25, 1);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      swift_willThrowTypedImpl();
      v110 = v25;
      return;
    }
    v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs);
    v28 = v109;
    goto LABEL_26;
  }
  v104 = v5;
  v105 = v14;
  v96 = v19;
  v97 = v21;
  v106 = v12;
  v107 = v20;
  v95 = v10;
  v100 = v7;
  v101 = v6;
  v98 = 255;
  v99 = v25;
  v108 = v18;
  v29 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v30 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v31 = v29;
  v32 = sub_23B1C5E40();
  v33 = sub_23B1C6AB8();
  v34 = os_log_type_enabled(v32, v33);
  v103 = v24;
  if (v34)
  {
    v102 = v31;
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v35 = 138412290;
    v37 = -[NSObject enter](v102, sel_enter);
    v112[0] = (uint64_t)v37;
    sub_23B1C6CBC();
    *v36 = v37;
    v31 = v102;

    _os_log_impl(&dword_23AA66000, v32, v33, "%@ resolving root URLS for domain", v35, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v36, -1, -1);
    MEMORY[0x23B8614BC](v35, -1, -1);
  }
  else
  {

    v32 = v31;
  }
  v38 = v104;

  v39 = (void (*)(char *, uint64_t))*((_QWORD *)v105 + 1);
  v39(v23, v108);
  v40 = *(char **)(a1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_pathsManager);
  v41 = (char *)MEMORY[0x23B8615C4](a1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  if (!v41)
  {
    __break(1u);
    return;
  }
  v42 = v41;
  v43 = objc_msgSend(v41, sel_nsDomain);
  v44 = objc_msgSend(v43, sel_personaIdentifier);

  v105 = (void (*)(uint8_t *, uint64_t))v39;
  if (v44)
  {
    sub_23B1C63E0();
    v47 = v46;

  }
  else
  {
    v47 = 0;
  }
  v48 = v106;
  MEMORY[0x24BDAC7A8](v45);
  *(&v95 - 2) = v40;
  *(&v95 - 1) = v42;
  v49 = v110;
  sub_23AC46788(v47, (uint64_t)sub_23ACFF8A8, (uint64_t)(&v95 - 4), (uint64_t)v38);
  v110 = v49;
  if (!v49)
  {

    swift_bridgeObjectRelease();
    v59 = v100;
    v60 = v101;
    if ((*(unsigned int (**)(uint8_t *, uint64_t, uint64_t))(v100 + 48))(v38, 1, v101) == 1)
    {
      sub_23AA8A05C((uint64_t)v38, (uint64_t *)&unk_2542E6740);
      v61 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v62 = sub_23B1C5E40();
      v63 = sub_23B1C6AB8();
      v64 = os_log_type_enabled(v62, v63);
      v28 = v109;
      if (v64)
      {
        v65 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v65 = 0;
        _os_log_impl(&dword_23AA66000, v62, v63, "missing main root URL", v65, 2u);
        MEMORY[0x23B8614BC](v65, -1, -1);
      }

      v105(v97, v108);
      v27 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v102 = v31;
      (*(void (**)(char *, uint8_t *, uint64_t))(v59 + 32))(v48, v38, v60);
      v72 = (id)fpfs_current_or_default_log();
      v73 = v96;
      sub_23B1C5E58();
      v74 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
      v75 = v95;
      v74(v95, v48, v60);
      v76 = sub_23B1C5E40();
      v77 = sub_23B1C6AB8();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = (uint8_t *)swift_slowAlloc();
        v107 = swift_slowAlloc();
        v112[0] = v107;
        v104 = v78;
        *(_DWORD *)v78 = 136446210;
        v97 = v78 + 4;
        v79 = (void *)sub_23B1C5954();
        v80 = objc_msgSend(v79, sel_fp_shortDescription);

        v81 = sub_23B1C63E0();
        v82 = v74;
        v84 = v83;

        v48 = v106;
        v111 = sub_23AABEC68(v81, v84, v112);
        v59 = v100;
        sub_23B1C6CBC();
        v74 = v82;
        v60 = v101;
        swift_bridgeObjectRelease();
        v85 = v75;
        v86 = *(void (**)(char *, uint64_t))(v59 + 8);
        v86(v85, v60);
        v87 = v104;
        _os_log_impl(&dword_23AA66000, v76, v77, "resolved main root URL to %{public}s", v104, 0xCu);
        v88 = v107;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v88, -1, -1);
        MEMORY[0x23B8614BC](v87, -1, -1);
      }
      else
      {
        v89 = v75;
        v86 = *(void (**)(char *, uint64_t))(v59 + 8);
        v86(v89, v60);
      }

      v105(v73, v108);
      v31 = v102;
      v28 = v109;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
      v90 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      v74((char *)(v91 + v90), v48, v60);
      v112[0] = v91;
      sub_23AD7D6F0(MEMORY[0x24BEE4AF8]);
      v27 = v112[0];
      v86(v48, v60);
    }
    v92 = v103;
    sub_23ACA7014(v31, MEMORY[0x24BEE7928]);
    v93 = *v92;
    *v92 = (void *)v27;
    v94 = *((_BYTE *)v92 + 8);
    *((_BYTE *)v92 + 8) = 0;
    swift_bridgeObjectRetain();
    sub_23ACE2278(v93, v94);

    v25 = v99;
    LOBYTE(v26) = v98;
LABEL_26:
    *v28 = v27;
    sub_23AA724B8(v25, v26);
    return;
  }

  swift_bridgeObjectRelease();
  v50 = v31;
  sub_23ACA7014(v31, MEMORY[0x24BEE7928]);
  v51 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v52 = v110;
  v53 = sub_23B1C5E40();
  v54 = sub_23B1C6AA0();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    v56 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v55 = 138412290;
    v57 = v110;
    swift_getErrorValue();
    v58 = sub_23B0D9CF0(v112[2]);
    v112[0] = (uint64_t)v58;
    sub_23B1C6CBC();
    *v56 = v58;

    _os_log_impl(&dword_23AA66000, v53, v54, "cannot find root URLs: %@", v55, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v56, -1, -1);
    MEMORY[0x23B8614BC](v55, -1, -1);
  }
  else
  {

  }
  v66 = (void (*)(uint64_t, uint64_t))v105;

  v66(v107, v108);
  v67 = v103;
  v68 = *v103;
  v69 = v110;
  *v103 = v110;
  v70 = *((_BYTE *)v67 + 8);
  *((_BYTE *)v67 + 8) = 1;
  v71 = v69;
  sub_23ACE2278(v68, v70);
  swift_willThrow();

}

id sub_23AA724B8(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_23AA724DC(result, a2 & 1);
  return result;
}

id sub_23AA724DC(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_23AA724E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23AA7252C(void *a1, uint64_t a2, void (*a3)(uint64_t), void (*a4)(uint64_t), char *a5, unint64_t a6, int a7, uint64_t a8, unsigned __int8 a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  id v44;
  NSObject *v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void (**v65)(uint64_t);
  void (*v66)(uint64_t);
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  void *v70;
  void (*v71)(uint64_t *, __int128 *, void (**)(_QWORD, _QWORD), _QWORD, void (*)(uint64_t), uint64_t);
  id v72;
  uint64_t v73;
  uint8_t *v74;
  char *v75;
  int v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (**v81)(_QWORD, _QWORD);
  void (**v82)(_QWORD, _QWORD);
  void (*v83)(uint64_t);
  void (*v84)(uint64_t);
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  char v92;

  v78 = a8;
  v76 = a7;
  v77 = a6;
  v83 = a3;
  v84 = (void (*)(uint64_t))a4;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  MEMORY[0x24BDAC7A8](v79);
  v80 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for VFSItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v73 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v73 - v22;
  v24 = (_QWORD *)sub_23B1C5E4C();
  v81 = (void (**)(_QWORD, _QWORD))*(v24 - 1);
  v82 = (void (**)(_QWORD, _QWORD))v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v73 - v28;
  if (a1)
  {
    v30 = a1;
    v31 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA907B0(a2, (uint64_t)v23, type metadata accessor for VFSItem);
    v32 = a1;
    v33 = a1;
    v34 = sub_23B1C5E40();
    v35 = sub_23B1C6AA0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v37 = (_QWORD *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      *(_QWORD *)&v85 = v78;
      *(_DWORD *)v36 = 136315394;
      v38 = sub_23AA96F18(*(_QWORD *)v23, v23[8]);
      v91 = sub_23AABEC68(v38, v39, (uint64_t *)&v85);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA937BC((uint64_t)v23, type metadata accessor for VFSItem);
      *(_WORD *)(v36 + 12) = 2112;
      v40 = (void *)sub_23B1C5870();
      v41 = objc_msgSend(v40, sel_fp_prettyDescription);

      v91 = (uint64_t)v41;
      sub_23B1C6CBC();
      *v37 = v41;

      _os_log_impl(&dword_23AA66000, v34, v35, "requestMaterialization(%s) failed for vfsItemID: %@", (uint8_t *)v36, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v37, -1, -1);
      v42 = v78;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v42, -1, -1);
      MEMORY[0x23B8614BC](v36, -1, -1);
    }
    else
    {
      sub_23AA937BC((uint64_t)v23, type metadata accessor for VFSItem);

    }
    ((void (**)(char *, _QWORD))v81)[1](v29, v82);
    v43 = v83;
    v51 = (uint64_t)v80;
    *(_QWORD *)v80 = a1;
    swift_storeEnumTagMultiPayload();
    v52 = a1;
    v43(v51);

    return sub_23AA8A05C(v51, &qword_2542E21C0);
  }
  else
  {
    v79 = v16;
    v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    v75 = a5;
    v44 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA907B0(a2, (uint64_t)v21, type metadata accessor for VFSItem);
    v45 = sub_23B1C5E40();
    v46 = sub_23B1C6A94();
    if (os_log_type_enabled(v45, (os_log_type_t)v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_QWORD *)&v85 = v48;
      *(_DWORD *)v47 = 136315138;
      v74 = v47 + 4;
      v49 = sub_23AA96F18(*(_QWORD *)v21, v21[8]);
      v91 = sub_23AABEC68(v49, v50, (uint64_t *)&v85);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA937BC((uint64_t)v21, type metadata accessor for VFSItem);
      _os_log_impl(&dword_23AA66000, v45, (os_log_type_t)v46, "requestMaterialization completed for vfsItemID %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v48, -1, -1);
      MEMORY[0x23B8614BC](v47, -1, -1);
    }
    else
    {
      sub_23AA937BC((uint64_t)v21, type metadata accessor for VFSItem);
    }

    ((void (**)(char *, _QWORD))v81)[1](v27, v82);
    v54 = v75;
    v55 = v79;
    v56 = *(_QWORD *)(*((_QWORD *)v75 + 4) + 16);
    v57 = *(_BYTE *)(a2 + 8);
    v91 = *(_QWORD *)a2;
    v92 = v57;
    v89 = 0u;
    v90 = 0u;
    v87 = 0u;
    v88 = 0u;
    v85 = 0u;
    v86 = 0u;
    swift_retain();
    swift_retain();
    v58 = objc_sync_enter(v54);
    v59 = (uint64_t)v80;
    if (v58)
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v54);
    v81 = *(void (***)(_QWORD, _QWORD))&v54[qword_2542E6C70];
    v82 = v81;
    if (objc_sync_exit(v54))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v54);
    v79 = a11;
    LODWORD(v75) = a10;
    LODWORD(v74) = a9;
    swift_release();
    sub_23AA907B0(a2, v59, type metadata accessor for VFSItem);
    v60 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v61 = (v17 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = (v61 + 23) & 0xFFFFFFFFFFFFFFF8;
    v63 = (v62 + 31) & 0xFFFFFFFFFFFFFFF8;
    v64 = swift_allocObject();
    sub_23AA94050(v59, v64 + v60, type metadata accessor for VFSItem);
    v65 = (void (**)(uint64_t))(v64 + v61);
    v66 = v84;
    *v65 = v83;
    v65[1] = v66;
    v67 = v77;
    *(_QWORD *)(v64 + v62) = v77;
    v68 = v64 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v68 = v54;
    *(_BYTE *)(v68 + 8) = v76 & 1;
    v69 = v64 + v63;
    *(_QWORD *)v69 = v78;
    *(_BYTE *)(v69 + 8) = v74 & 1;
    *(_BYTE *)(v69 + 9) = v75 & 1;
    v70 = (void *)v79;
    *(_QWORD *)(v64 + ((v63 + 17) & 0xFFFFFFFFFFFFFFF8)) = v79;
    v71 = *(void (**)(uint64_t *, __int128 *, void (**)(_QWORD, _QWORD), _QWORD, void (*)(uint64_t), uint64_t))(*(_QWORD *)v56 + 136);
    swift_retain();
    swift_retain();
    sub_23AA93780(v67);
    swift_retain();
    v72 = v70;
    v71(&v91, &v85, v81, 0, sub_23ACF7958, v64);
    swift_release();

    swift_release();
    return sub_23AAAEE68(v85, *((uint64_t *)&v85 + 1), v86, *((uint64_t *)&v86 + 1), v87, *((uint64_t *)&v87 + 1), v88, *((uint64_t *)&v88 + 1), v89);
  }
}

void sub_23AA72CE4(uint64_t a1, unint64_t a2, uint64_t a3, _QWORD *a4, void (**a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  _QWORD *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(unint64_t, char *, uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);
  void (**v46)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);
  void (*v47)(uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD v70[4];
  char v71;

  v66 = a4;
  v63 = a3;
  v8 = sub_23B1C5E4C();
  v67 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v67 + 64);
  v10 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v10);
  v68 = (char *)&v59 - v11;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a5;
  _Block_copy(a5);
  v13 = (void *)sub_23B1C5AA4();
  sub_23AAB51F4();
  v15 = v14;
  v17 = v16;

  if ((v17 & 1) != 0)
  {
    type metadata accessor for NSFileProviderError(0);
    v69 = -1002;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
    sub_23B1C5864();
    v31 = (void *)v70[0];
    sub_23AA9F52C(0, &qword_2542E7560);
    v32 = (void *)sub_23B1C66F8();
    sub_23AA9F52C(0, (unint64_t *)&unk_2542E2010);
    v33 = (void *)sub_23B1C66F8();
    v34 = (void *)sub_23B1C5870();
    ((void (**)(_QWORD, void *, void *, _QWORD, _QWORD, _QWORD, void *))a5)[2](a5, v32, v33, 0, 0, 0, v34);
    swift_release();

  }
  else
  {
    v64 = v15;
    v65 = v12;
    v61 = v9;
    v62 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v59 = a1;
    v18 = v66;
    v19 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    v19(v68, (char *)v66 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_logger, v8);
    v20 = v18;
    v21 = sub_23B1C5E40();
    v22 = sub_23B1C6A94();
    v23 = os_log_type_enabled(v21, v22);
    v60 = a2;
    if (v23)
    {
      v24 = swift_slowAlloc();
      v66 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412546;
      v70[0] = v20;
      v25 = v19;
      v26 = v20;
      sub_23B1C6CBC();
      v27 = v66;
      *v66 = v20;

      v19 = v25;
      *(_WORD *)(v24 + 12) = 2048;
      v70[0] = v64;
      v28 = v68;
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v21, v22, "📖  %@: enumerating from change %llu", (uint8_t *)v24, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v27, -1, -1);
      MEMORY[0x23B8614BC](v24, -1, -1);
      v30 = v61;
      v29 = v62;
    }
    else
    {

      v30 = v61;
      v29 = v62;
      v28 = v68;
    }

    v35 = swift_allocObject();
    v19(v29, v28, v8);
    v36 = v67;
    v37 = v29;
    v38 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    v39 = (v30 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    v40 = v8;
    v41 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
    v42 = swift_allocObject();
    v43 = *(void (**)(unint64_t, char *, uint64_t))(v36 + 32);
    v44 = v40;
    v43(v42 + v38, v37, v40);
    *(_QWORD *)(v42 + v39) = v20;
    v45 = (void (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))v65;
    *(_QWORD *)(v42 + v41) = v64;
    v46 = (void (**)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))(v42
                                                                                  + ((v41 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v46 = sub_23AAB5E60;
    v46[1] = v45;
    v47 = sub_23AABC0F8;
    *(_QWORD *)(v35 + 16) = sub_23AABC0F8;
    *(_QWORD *)(v35 + 24) = v42;
    LOBYTE(v38) = *((_BYTE *)v20 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated);
    v48 = (char *)v20;
    swift_retain();
    if ((v38 & 1) != 0
      || (v49 = MEMORY[0x23B8615C4](&v48[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend]),
          v47 = *(void (**)(uint64_t))(v35 + 16),
          v50 = *(_QWORD *)(v35 + 24),
          !v49))
    {
      type metadata accessor for NSFileProviderError(0);
      v70[0] = -1002;
      swift_retain();
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
      sub_23B1C5864();
      v58 = (void *)v69;
      v70[0] = v69;
      memset(&v70[1], 0, 24);
      v71 = 1;
      v47((uint64_t)v70);
      swift_release();

    }
    else
    {
      v51 = (void *)v49;
      v52 = swift_allocObject();
      *(_QWORD *)(v52 + 16) = v47;
      *(_QWORD *)(v52 + 24) = v50;
      v53 = (_QWORD *)swift_allocObject();
      v55 = v59;
      v54 = v60;
      v53[2] = v35;
      v53[3] = v55;
      v53[4] = v54;
      v53[5] = v48;
      v53[6] = v63;
      v53[7] = v51;
      v56 = v48;
      swift_retain();
      swift_retain();
      sub_23AAAE668(v55, v54);
      v57 = v51;
      sub_23AA6A90C((uint64_t)"enumerateChanges(fromToken:suggestedBatchSize:reply:)", 53, 2, (void (*)(id *))sub_23AAB54E0, v52, (uint64_t)sub_23AB3CDD8, (uint64_t)v53);

      swift_release();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v44);
    swift_release();
    swift_release();
  }
}

uint64_t sub_23AA732BC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v5 = sub_23B1C64F4();
  a2(v5);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_23AA73358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = (a1 + *(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((v5
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AA733EC(uint64_t a1, int a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(char *, _BYTE *, uint64_t, _BYTE *), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unsigned int v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, _BYTE *, uint64_t, _BYTE *);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  _BYTE v74[848];
  id v75[106];
  _BYTE v76[848];
  _BYTE v77[848];
  uint64_t v78;

  v8 = v7;
  v70 = a1;
  v65 = a6;
  v66 = a7;
  v64 = a5;
  v73 = a4;
  v68 = a3;
  LODWORD(v72) = a2;
  v78 = *MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v67 = (uint64_t)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v69 = (char *)v57 - v12;
  v13 = sub_23B1C5DC8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v57 - v21;
  v23 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v23);
  v63 = (char *)v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v25 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v22, 1, 1, v13);
  v62 = v22;
  sub_23AA8EFC8((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13) == 1)
  {
    v26 = v25;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v20, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v20, v13);
  }
  v27 = v63;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v16, v13);
  v59 = *(int *)(v23 + 20);
  *(_QWORD *)&v27[v59] = v25;
  v28 = &v27[*(int *)(v23 + 24)];
  *(_QWORD *)v28 = "SQLDB: Scan decorated app libraries";
  *((_QWORD *)v28 + 1) = 35;
  v60 = v28;
  v28[16] = 2;
  v29 = v25;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_23AA8A05C((uint64_t)v62, (uint64_t *)&unk_2542E67B8);
  if (v64)
    v30 = *(_QWORD *)(v64 + 16);
  else
    v30 = 0;
  v32 = v70;
  v31 = v71;
  v33 = v68;
  v34 = *(void **)(v71 + 24);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v33;
  *(_QWORD *)(v35 + 24) = v73;
  *(_QWORD *)(v35 + 32) = v31;
  *(_QWORD *)(v35 + 40) = v32;
  *(_BYTE *)(v35 + 48) = v72;
  *(_QWORD *)(v35 + 56) = 200;
  *(_QWORD *)(v35 + 64) = v30;
  v58 = v30;
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = sub_23AAB8130;
  v36[3] = v35;
  v75[4] = sub_23AA956C8;
  v75[5] = v36;
  v75[0] = (id)MEMORY[0x24BDAC760];
  v75[1] = (id)1107296256;
  v75[2] = sub_23AA9432C;
  v75[3] = &block_descriptor_1381;
  v37 = _Block_copy(v75);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  v75[0] = 0;
  v38 = objc_msgSend(v34, sel_fetchSwift_error_, v37, v75);
  _Block_release(v37);
  v39 = (uint64_t)v75[0];
  LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v37 & 1) != 0)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!v38)
    goto LABEL_29;
  v40 = *(_QWORD *)(sub_23AAAF608() + 16);
  swift_bridgeObjectRelease();
  if (v40 >> 31)
    goto LABEL_41;
  v41 = v40 + 8;
  if (__OFADD__((_DWORD)v40, 8))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v42 = *(_QWORD *)(sub_23AAAE8F4() + 16);
  swift_bridgeObjectRelease();
  if (v42 >> 31)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  LODWORD(v70) = v41 + v42;
  if (__OFADD__(v41, (_DWORD)v42))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v43 = *((_QWORD *)sub_23AAAF0A8() + 2);
  swift_bridgeObjectRelease();
  if (v43 >> 31)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  LODWORD(v68) = v70 + v43;
  if (__OFADD__((_DWORD)v70, (_DWORD)v43))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v44 = *(_QWORD *)(sub_23AAAF608() + 16);
  swift_bridgeObjectRelease();
  if (v44 >> 31)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v45 = v68 + v44;
  if (__OFADD__((_DWORD)v68, (_DWORD)v44))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v46 = v45 + 8;
  if (__OFADD__(v45, 8))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v47 = *(_QWORD *)(sub_23AAAE8F4() + 16);
  swift_bridgeObjectRelease();
  if (v47 >> 31)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  LODWORD(v64) = v46 + v47;
  if (__OFADD__(v46, (_DWORD)v47))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (!objc_msgSend(v38, sel_next))
  {

    v53 = (uint64_t)v63;
    goto LABEL_31;
  }
  v61 = v45;
  v62 = (char *)v40;
  v57[1] = v35;
  v39 = 1;
  v48 = (void *)MEMORY[0x23B8601A8]();
  v49 = (uint64_t)v69;
  do
  {
    v72 = v39;
    v73 = v48;
    sub_23AAAD7A0(v49, 0, (uint64_t)v62, v70, v38, (uint64_t)v75);
    if (v8)
    {
      objc_autoreleasePoolPop(v73);

      goto LABEL_34;
    }
    memcpy(v76, v75, sizeof(v76));
    v50 = v67;
    sub_23AAAD7A0(v67, v68, v61, v64, v38, (uint64_t)v74);
    v51 = v38;
    memcpy(v77, v74, sizeof(v77));
    v52 = (uint64_t)v69;
    v65(v69, v76, v50, v77);
    sub_23AB3C920((uint64_t)v74, (voidsub_23AAAEC3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AAA5BA4);
    sub_23AB3C920((uint64_t)v75, (voidsub_23AAAEC3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AAA5BA4);
    sub_23AA8A05C(v50, (uint64_t *)&unk_2542E6B00);
    sub_23AA8A05C(v52, (uint64_t *)&unk_2542E6B00);
    objc_autoreleasePoolPop(v73);
    if (!objc_msgSend(v51, sel_next))
    {

      if (v72 == 200)
      {
        v56 = v58 + 200;
        v53 = (uint64_t)v63;
        if (!__OFADD__(v58, 200))
        {
          type metadata accessor for PaginatedContinuation();
          v54 = swift_allocObject();
          *(_QWORD *)(v54 + 16) = v56;
          sub_23B1C6BD8();
          sub_23B1C5DA4();
          goto LABEL_32;
        }
LABEL_52:
        __break(1u);
      }
      v53 = (uint64_t)v63;
LABEL_31:
      sub_23B1C6BD8();
      sub_23B1C5DA4();
      v54 = 0;
LABEL_32:
      sub_23AA937BC(v53, type metadata accessor for Signpost);
      swift_release();
      return v54;
    }
    v49 = v52;
    v48 = (void *)MEMORY[0x23B8601A8]();
    v39 = v72 + 1;
    v38 = v51;
    v8 = 0;
  }
  while (!__OFADD__(v72, 1));
  __break(1u);
LABEL_29:
  sub_23B1C587C();

  swift_willThrow();
LABEL_34:
  sub_23B1C6BD8();
  v54 = (uint64_t)v63;
  sub_23B1C5DA4();
  sub_23AA937BC(v54, type metadata accessor for Signpost);
  swift_release();
  return v54;
}

uint64_t sub_23AA73F88@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  char v13;

  v4 = *a1;
  swift_beginAccess();
  v5 = a1[2];
  v7 = type metadata accessor for JobLockRule(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v6);
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x23B8613CC](&unk_23B1D15E8, v7);
  v9 = MEMORY[0x23B85EB94](v5, v7, &type metadata for JobLockRuleAssociatedJobs, v8);
  result = swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    swift_beginAccess();
    v11 = a1[4];
    sub_23B1C67DC();
    swift_bridgeObjectRetain();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v13 = MEMORY[0x23B85EB94](v11, MEMORY[0x24BEE0D00], TupleTypeMetadata2, MEMORY[0x24BEE0D10]);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  *a2 = v13 & 1;
  return result;
}

void sub_23AA740B4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v1 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v1);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AA741E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[96];

  MEMORY[0x24BDAC7A8](a1);
  v10 = &v22[-v9];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 16))(&v22[-v9], *(_QWORD *)(v7 - 160), a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = *(_QWORD *)(v7 - 168);
    v13 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v12 + 32))(v5, v10, v4);
    MEMORY[0x24BDAC7A8](v13);
    *(_QWORD *)&v22[-48] = v3;
    *(_QWORD *)&v22[-40] = v2;
    v14 = *(_QWORD *)(v7 - 136);
    *(_QWORD *)&v22[-32] = *(_QWORD *)(v7 - 152);
    *(_QWORD *)&v22[-24] = v14;
    v15 = *(_QWORD *)(v7 - 144);
    *(_QWORD *)&v22[-16] = v5;
    *(_QWORD *)&v22[-8] = v15;
    v16 = (*(uint64_t (**)(uint64_t, uint64_t (*)()))(v7 - 120))(1, sub_23B05C510);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v4);
  }
  else
  {
    v17 = *(_QWORD *)(v7 - 176);
    v18 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32))(v1, v10, v6);
    MEMORY[0x24BDAC7A8](v18);
    *(_QWORD *)&v22[-48] = v3;
    *(_QWORD *)&v22[-40] = v2;
    v19 = *(_QWORD *)(v7 - 136);
    *(_QWORD *)&v22[-32] = *(_QWORD *)(v7 - 152);
    *(_QWORD *)&v22[-24] = v19;
    v20 = *(_QWORD *)(v7 - 144);
    *(_QWORD *)&v22[-16] = v1;
    *(_QWORD *)&v22[-8] = v20;
    v16 = (*(uint64_t (**)(_QWORD, uint64_t (*)()))(v7 - 120))(0, sub_23AAB8290);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v6);
  }
  return v16;
}

void sub_23AA74364()
{
  sub_23AA74430();
}

void sub_23AA74430()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[9];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (_QWORD *)*v0;
  v15 = sub_23B1C5E4C();
  v14[8] = *(_QWORD *)(v15 - 8);
  v2 = MEMORY[0x24BDAC7A8](v15);
  v14[7] = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v14[6] = (char *)v14 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v14[5] = (char *)v14 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v14[4] = (char *)v14 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v14[3] = (char *)v14 - v10;
  v11 = v1[72];
  v12 = v1[73];
  v13 = v1[74];
  v19 = v1[71];
  v20 = v19;
  v21 = v11;
  v18 = v11;
  v17 = v12;
  v22 = v12;
  v23 = v13;
  v16 = v13;
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AA75310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  id v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(void **)(v2 + qword_2542E69F8);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 744);
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 728);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemIDObject(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v11 = v5;
  v12 = sub_23AABA0A4(a1);
  v13 = (char *)objc_msgSend(v11, sel_objectForKey_, v12);

  if (v13)
  {
    v15 = &v13[*(_QWORD *)(*(_QWORD *)v13 + 96)];
    v16 = type metadata accessor for SnapshotItem(0, v7, v6, v14);
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(a2, v15, v16);
    swift_release();
    v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v19 = a2;
    v20 = 0;
    v21 = v16;
  }
  else
  {
    v21 = type metadata accessor for SnapshotItem(0, v7, v6, v14);
    v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v19 = a2;
    v20 = 1;
  }
  return v18(v19, v20, 1, v21);
}

uint64_t sub_23AA75478(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AA755E0(void *a1, char a2, int a3, int a4, void *a5, void *a6, void (**a7)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  BOOL v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  char *v54;
  char *v55;
  int v56;
  uint64_t v57;

  v56 = a4;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C5A08();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v54 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v55 = (char *)&v48 - v20;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a7;
  _Block_copy(a7);
  if ((a2 & 1) == 0)
  {
    a7[2](a7, 0, 0, 0);
    return swift_release();
  }
  v52 = a3;
  v53 = a5;
  v51 = v17;
  v22 = a1;
  v23 = sub_23AAB7B40(objc_msgSend(v22, sel_identifier));

  swift_beginAccess();
  v24 = *(void **)(v23 + 32);
  v25 = *(unsigned __int8 *)(v23 + 40);
  if ((*(_BYTE *)(v23 + 41) & 1) != 0)
  {
    v49 = a6;
    v50 = v16;
    v26 = qword_2542E1FE0;
    v27 = v24;
    if (v26 != -1)
      swift_once();
    v28 = sub_23B1C63E0();
    v30 = v29;
    if (v28 == sub_23B1C63E0() && v30 == v31)
    {
      swift_bridgeObjectRelease_n();
      sub_23AA862DC(v24, v25, 1);
      a6 = v49;
      v16 = v50;
    }
    else
    {
      v33 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v24, v25, 1);
      a6 = v49;
      v16 = v50;
      if ((v33 & 1) == 0)
        goto LABEL_25;
    }
  }
  else
  {
    if (v24)
      v35 = 0;
    else
      v35 = (_DWORD)v25 == 2;
    if (!v35)
      goto LABEL_25;
  }
  v36 = a6;
  if (objc_sync_enter(v36))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v36);
  sub_23AA71B80((uint64_t)v36, &v57);
  v37 = v51;
  if (objc_sync_exit(v36))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v36);

  if (*(_QWORD *)(v57 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v15, v57 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), v16);
    v38 = 0;
  }
  else
  {
    v38 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v15, v38, 1, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v15, 1, v16) != 1)
  {
    v44 = v55;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v55, v15, v16);
    sub_23AA9F52C(0, (unint64_t *)&unk_2542E1F90);
    v45 = v37;
    v46 = (uint64_t)v54;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v54, v44, v16);
    v47 = sub_23AAB60B8(v46, 0);
    ((void (**)(_QWORD, _QWORD, id, _QWORD))a7)[2](a7, 0, v47, 0);

    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v16);
    return swift_release();
  }
  sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E6740);
LABEL_25:
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_23ACF0AA0;
  *(_QWORD *)(v39 + 24) = v21;
  v40 = swift_allocObject();
  v41 = v53;
  *(_QWORD *)(v40 + 16) = v22;
  *(_QWORD *)(v40 + 24) = v41;
  *(_QWORD *)(v40 + 32) = sub_23ACF0AA0;
  *(_QWORD *)(v40 + 40) = v21;
  *(_BYTE *)(v40 + 48) = v56 & 1;
  *(_BYTE *)(v40 + 49) = v52 & 1;
  swift_retain_n();
  v42 = v22;
  v43 = v41;
  sub_23AA6AC6C((uint64_t)"url(for:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:forBookmarkResolution:request:completionHandler:)", 113, 2, (void (*)(id, _QWORD *, uint64_t *))sub_23ACFF92C, v39, (uint64_t)sub_23ACE26A4, v40);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AA75B40()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AA740B4();
}

uint64_t sub_23AA75C2C()
{
  uint64_t v1;

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_23AA75C60(uint64_t a1, _QWORD *a2, int a3, int a4, void (*a5)(_QWORD), uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  char v23;
  int v24;
  char v25;
  char v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  id v49;
  _BOOL4 v50;
  BOOL v51;
  id v52;
  BOOL v53;
  void *v54;
  _QWORD *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  int v60;
  void (*v61)(_QWORD);
  uint64_t v62;
  void (*v63)(void **, uint64_t *, void *, NSObject *, uint64_t (*)(uint64_t), uint64_t);
  id v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  id v72;
  uint64_t v73;
  NSObject *v74;
  unint64_t v75;
  void (*v76)(_QWORD);
  id v77[62];
  _QWORD v78[63];
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84[63];
  void *v85;
  char v86;
  uint64_t v87;

  v75 = a7;
  v87 = a6;
  v76 = a5;
  LODWORD(v73) = a4;
  LODWORD(v74) = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)sub_23B1C5E4C();
  v13 = *(v12 - 1);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AAEEE70((uint64_t)a2, 0);
  if (!v7)
  {
    v18 = v17;
    v69 = v15;
    v70 = v13;
    v71 = v11;
    v72 = v12;
    v68 = v9;
    if ((v17 & 0x100) == 0)
    {
      v19 = (uint64_t)v16;
      v85 = v16;
      v20 = v17;
      v86 = v17;
      v21 = (void *)swift_retain();
      if (objc_sync_enter(v21))
        goto LABEL_41;
      v22 = qword_2542E6C88;
      v23 = *((_BYTE *)a2 + qword_2542E6C88);
      v24 = objc_sync_exit(a2);
      v25 = (char)v74;
      v26 = v73;
      if (v24)
        goto LABEL_42;
      swift_release();
      if ((v23 & 1) != 0)
      {
        v27 = a2[2];
        v81 = v19;
        v82 = v20;
        v83 = 0;
        (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v27 + 168))(v84, &v81, 1);
        sub_23AA724E8((uint64_t)v84, (uint64_t)v78, (uint64_t *)&unk_2542E4CB0);
        sub_23AA724E8((uint64_t)v78, (uint64_t)&v79, (uint64_t *)&unk_2542E4CB0);
        if (sub_23AAFC2A4((uint64_t)&v79) == 1)
        {
          if ((v25 & 1) != 0)
          {
            LOBYTE(v48) = 0;
          }
          else
          {
            LOBYTE(v48) = 0;
            if (v19)
              v53 = 0;
            else
              v53 = v20 == 2;
            if (!v53 && (v26 & 1) == 0)
            {
              v54 = (void *)swift_retain();
              if (objc_sync_enter(v54))
                goto LABEL_41;
              LOBYTE(v48) = *((_BYTE *)a2 + v22);
              if (objc_sync_exit(a2))
                goto LABEL_42;
              swift_release();
            }
          }
          v50 = 0;
          v49 = 0;
        }
        else
        {
          memcpy(v77, v84, sizeof(v77));
          v50 = BYTE1(v77[17]) == 6;
          if ((v25 & 1) != 0 || (!v19 ? (v51 = v20 == 2) : (v51 = 0), v51))
          {
            LOBYTE(v48) = 0;
          }
          else if (BYTE1(v77[17]) > 6u)
          {
            LOBYTE(v48) = 1;
          }
          else
          {
            v48 = (0x23u >> SBYTE1(v77[17])) & 1;
          }
          sub_23AAFC2BC((uint64_t)&v77[30]);
          sub_23AAFC3AC((uint64_t)v77);
          v49 = v77[30];
          v52 = v77[30];
          sub_23AAFC540((uint64_t)&v77[30]);
        }
      }
      else
      {
        (*(void (**)(uint64_t *__return_ptr, void **))(*(_QWORD *)a2[2] + 160))(v84, &v85);
        LOBYTE(v48) = 0;
        v49 = (id)v84[0];
        v50 = v84[0] != 0;
      }
      v55 = (_QWORD *)a2[4];
      (*(void (**)(uint64_t *__return_ptr, void **))(*v55 + 616))(v84, &v85);
      v73 = 0;
      LODWORD(v75) = v50;
      v56 = v48;
      v57 = 3;
      if (!v84[8])
        v57 = 515;
      v74 = v57;
      v58 = v55[2];
      swift_retain();
      swift_retain();
      if (!objc_sync_enter(a2))
      {
        v59 = *(void **)((char *)a2 + qword_2542E6C70);
        v72 = v59;
        v60 = objc_sync_exit(a2);
        v61 = v76;
        if (!v60)
        {
          swift_release();
          v79 = v19;
          v80 = v20;
          v78[0] = v49;
          v62 = swift_allocObject();
          *(_QWORD *)(v62 + 16) = v61;
          *(_QWORD *)(v62 + 24) = v87;
          sub_23AA9F454(&v79, v62 + 32);
          sub_23AA724E8((uint64_t)v78, v62 + 48, &qword_2542E7550);
          *(_BYTE *)(v62 + 56) = v56;
          *(_BYTE *)(v62 + 57) = v75;
          v63 = *(void (**)(void **, uint64_t *, void *, NSObject *, uint64_t (*)(uint64_t), uint64_t))(*(_QWORD *)v58 + 136);
          v64 = v49;
          swift_retain();
          v63(&v85, v84, v59, v74, sub_23AAFC288, v62);

          swift_release();
          swift_release();
          sub_23AAAEE68(v84[0], v84[1], v84[2], v84[3], v84[4], v84[5], v84[6], v84[7], v84[8]);
          return;
        }
LABEL_42:
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
      }
LABEL_41:
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
    }
    v28 = v16;
    sub_23AA88218(v16, v17, 1);
    v29 = (id)fpfs_current_or_default_log();
    v30 = v69;
    sub_23B1C5E58();
    v31 = v75;
    sub_23AA93780(v75);
    sub_23AA88218(v28, v18, 1);
    sub_23AA93780(v31);
    v32 = v18;
    v33 = sub_23B1C5E40();
    v34 = sub_23B1C6A94();
    v35 = v34;
    v74 = v33;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v73 = 0;
      v37 = v36;
      v66 = swift_slowAlloc();
      v84[0] = v66;
      *(_DWORD *)v37 = 136315394;
      v38 = sub_23AA7B734();
      v67 = v35;
      v79 = sub_23AABEC68(v38, v39, v84);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v28, v32, 1);
      *(_WORD *)(v37 + 12) = 2080;
      v65 = v37 + 14;
      sub_23AE5DE58(v31);
      v41 = v40;
      v43 = v42;
      sub_23AAB47B0(v31);
      v79 = sub_23AABEC68(v41, v43, v84);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AAB47B0(v31);
      v44 = v74;
      _os_log_impl(&dword_23AA66000, v74, (os_log_type_t)v67, "no vfsItemID found for item %s, request %s", (uint8_t *)v37, 0x16u);
      v45 = v66;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v45, -1, -1);
      MEMORY[0x23B8614BC](v37, -1, -1);

    }
    else
    {
      sub_23AAB47B0(v31);
      sub_23AA862DC(v28, v32, 1);
      sub_23AAB47B0(v31);

    }
    (*(void (**)(char *, id))(v70 + 8))(v30, v72);
    v46 = (uint64_t)v71;
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
    swift_storeEnumTagMultiPayload();
    v76(v46);
    sub_23AA8A05C(v46, (uint64_t *)&unk_2542E2190);
    sub_23AA862DC(v28, v32, 1);
  }
}

uint64_t sub_23AA764AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 8) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 8) & ~v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v15(v13, v14, v10);
  v16 = *(_QWORD *)(v11 + 64) + 7;
  v17 = (_QWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23AA76590@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_23AA765B8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

_QWORD *sub_23AA765B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7260);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AA76764();
  sub_23B1C7520();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7210);
    sub_23AA766FC(&qword_2569E7268, (uint64_t (*)(void))sub_23AF1E194, MEMORY[0x24BEE12D0]);
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_23AA766FC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E7210);
    v8 = a2();
    result = MEMORY[0x23B8613CC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23AA76764()
{
  unint64_t result;

  result = qword_2569E7208;
  if (!qword_2569E7208)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DDA98, &type metadata for Tags.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7208);
  }
  return result;
}

uint64_t sub_23AA76828(_QWORD *a1, char *a2, uint64_t a3, char *a4, const void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (**v62)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void *v74;
  void (**v75)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v76)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v77;
  char *v78;
  id v79;
  char *v80;
  _BYTE *v81;
  id v82;
  void *v83;
  char *v84;
  id v85;
  char *v86;
  id v87;
  NSObject *v88;
  int v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  unint64_t v95;
  id v96;
  uint64_t v97;
  void *v98;
  uint64_t *v99;
  void *v100;
  id v101;
  uint64_t v102;
  id v103;
  void *v104;
  void *v105;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126[3];

  v114 = a2;
  v115 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v112 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v113 = v9;
  v116 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v110 = v13;
  v111 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v122 = (char *)&v107 - v14;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a5;
  v117 = (uint64_t)a5;
  _Block_copy(a5);
  if (qword_2542E1F60 != -1)
    swift_once();
  v16 = (id)qword_2542EDC80;
  v118 = a1;
  v17 = sub_23B1C5AD4();
  v19 = v18;
  v20 = sub_23B1C5AD4();
  v22 = v21;
  sub_23AAAE6AC(v17, v19);
  v24 = v23;
  sub_23AAAE53C(v20, v22);
  sub_23AAAE53C(v17, v19);

  v121 = v15;
  if ((v24 & 1) != 0)
  {
    v25 = 0;
  }
  else
  {
    if (qword_2542E1F68 != -1)
      swift_once();
    v26 = (id)qword_2542EDD10;
    v27 = sub_23B1C5AD4();
    v29 = v28;
    v30 = sub_23B1C5AD4();
    v32 = v31;
    sub_23AAAE6AC(v27, v29);
    v34 = v33;
    sub_23AAAE53C(v30, v32);
    sub_23AAAE53C(v27, v29);

    if ((v34 & 1) != 0)
    {
      v25 = 0;
    }
    else
    {
      sub_23B1C5780();
      swift_allocObject();
      sub_23B1C5774();
      type metadata accessor for PaginatedContinuation();
      v35 = sub_23B1C5AD4();
      v37 = v36;
      sub_23AA7E38C(&qword_2569E2350, (uint64_t (*)(uint64_t))type metadata accessor for PaginatedContinuation, (uint64_t)&unk_23B1E3F78);
      sub_23B1C5768();
      swift_release();
      sub_23AAAE53C(v35, v37);
      v25 = v124;
    }
    v15 = v121;
  }
  v38 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v38(v122, &a4[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_logger], v10);
  swift_retain_n();
  v39 = a4;
  v40 = sub_23B1C5E40();
  v41 = sub_23B1C6A94();
  v42 = os_log_type_enabled(v40, v41);
  v119 = v10;
  v120 = v11;
  if (v42)
  {
    v109 = (void (*)(_QWORD, _QWORD, _QWORD))v38;
    v43 = swift_slowAlloc();
    v44 = (_QWORD *)swift_slowAlloc();
    v108 = swift_slowAlloc();
    v126[0] = v108;
    *(_DWORD *)v43 = 138412546;
    v124 = (uint64_t)v39;
    v45 = v25;
    v46 = v39;
    sub_23B1C6CBC();
    *v44 = v39;

    v25 = v45;
    *(_WORD *)(v43 + 12) = 2080;
    if (v45)
    {
      v124 = 979789423;
      v125 = 0xE400000000000000;
      v123 = *(_QWORD *)(v45 + 16);
      swift_retain();
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_release();
      swift_bridgeObjectRelease();
      v47 = v124;
      v48 = v125;
    }
    else
    {
      v47 = 0x6C616974696E693CLL;
      v48 = 0xE90000000000003ELL;
    }
    v124 = sub_23AABEC68(v47, v48, v126);
    sub_23B1C6CBC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v40, v41, "📖  %@: enumerating page %s", (uint8_t *)v43, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v44, -1, -1);
    v49 = v108;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v49, -1, -1);
    MEMORY[0x23B8614BC](v43, -1, -1);

    v11 = v120;
    v15 = v121;
    v10 = v119;
    v38 = (void (*)(char *, char *, uint64_t))v109;
  }
  else
  {
    swift_release_n();

  }
  if ((v39[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated] & 1) != 0
    || (v50 = MEMORY[0x23B8615C4](&v39[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend])) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    v126[0] = -1002;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
    sub_23B1C5864();
    v83 = (void *)v124;
    v84 = v39;
    swift_retain_n();
    v85 = v83;
    v86 = v84;
    v87 = v85;
    v88 = sub_23B1C5E40();
    v89 = sub_23B1C6AA0();
    if (os_log_type_enabled(v88, (os_log_type_t)v89))
    {
      LODWORD(v115) = v89;
      v90 = swift_slowAlloc();
      v91 = (_QWORD *)swift_slowAlloc();
      v116 = swift_slowAlloc();
      v126[0] = v116;
      *(_DWORD *)v90 = 138412802;
      v118 = (_QWORD *)v25;
      v124 = (uint64_t)v86;
      v92 = v86;
      v93 = v118;
      sub_23B1C6CBC();
      *v91 = v86;

      *(_WORD *)(v90 + 12) = 2080;
      if (v93)
      {
        v124 = 979789423;
        v125 = 0xE400000000000000;
        v123 = v93[2];
        swift_retain();
        sub_23B1C7304();
        sub_23B1C64F4();
        swift_release();
        swift_bridgeObjectRelease();
        v94 = v124;
        v95 = v125;
      }
      else
      {
        v94 = 0x6C616974696E693CLL;
        v95 = 0xE90000000000003ELL;
      }
      v124 = sub_23AABEC68(v94, v95, v126);
      sub_23B1C6CBC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v90 + 22) = 2112;
      v124 = (uint64_t)v87;
      sub_23AA7E38C(&qword_2542E1E80, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CB874);
      v96 = v87;
      v97 = sub_23B1C731C();
      if (v97)
      {
        v98 = (void *)v97;

      }
      else
      {
        v98 = (void *)swift_allocError();
        *v99 = v124;
      }
      v100 = (void *)sub_23B1C5870();

      v101 = objc_msgSend(v100, sel_fp_prettyDescription);
      v124 = (uint64_t)v101;
      sub_23B1C6CBC();
      v91[1] = v101;

      _os_log_impl(&dword_23AA66000, v88, (os_log_type_t)v115, "📖  %@: enumerating page %s failed: %@", (uint8_t *)v90, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v91, -1, -1);
      v102 = v116;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v102, -1, -1);
      MEMORY[0x23B8614BC](v90, -1, -1);

      v10 = v119;
    }
    else
    {

      swift_release_n();
    }
    sub_23AA9F52C(0, &qword_2542E7560);
    v103 = v87;
    v104 = (void *)sub_23B1C66F8();
    v105 = (void *)sub_23B1C5870();
    (*(void (**)(uint64_t, void *, _QWORD, _QWORD, _QWORD, void *))(v117 + 16))(v117, v104, 0, 0, 0, v105);
    swift_release();

    (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v10);
  }
  else
  {
    v51 = v50;
    v109 = (void (*)(_QWORD, _QWORD, _QWORD))v50;
    v117 = swift_allocObject();
    v52 = v111;
    v38(v111, v122, v10);
    v53 = v15;
    v54 = v25;
    v55 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v56 = (v110 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
    v57 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
    v58 = swift_allocObject();
    v59 = v11;
    v60 = v58;
    *(_QWORD *)(v58 + 16) = v51;
    (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v58 + v55, v52, v119);
    *(_QWORD *)(v60 + v56) = v39;
    *(_QWORD *)(v60 + v57) = v54;
    v61 = v54;
    v62 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + ((v57 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v62 = sub_23AB3D3D8;
    v62[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v53;
    v63 = v116;
    v64 = v117;
    *(_QWORD *)(v117 + 16) = sub_23AB3C30C;
    *(_QWORD *)(v64 + 24) = v60;
    v65 = (uint64_t)v114;
    v114 = v39;
    sub_23AA8EFC8(v65, v63, (uint64_t *)&unk_2542E4750);
    v66 = (*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
    v67 = (v113 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
    v68 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
    v69 = (v68 + 15) & 0xFFFFFFFFFFFFFFF8;
    v70 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
    v71 = swift_allocObject();
    *(_QWORD *)(v71 + 16) = v64;
    *(_QWORD *)(v71 + 24) = v61;
    sub_23AA724E8(v116, v71 + v66, (uint64_t *)&unk_2542E4750);
    v73 = v114;
    v72 = v115;
    *(_QWORD *)(v71 + v67) = v114;
    v74 = v118;
    *(_QWORD *)(v71 + v68) = v118;
    *(_QWORD *)(v71 + v69) = v72;
    v75 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v71 + v70);
    v76 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v121;
    *v75 = sub_23AB3D3D8;
    v75[1] = v76;
    v77 = v109;
    *(_QWORD *)(v71 + ((v70 + 23) & 0xFFFFFFFFFFFFFFF8)) = v109;
    v78 = v73;
    swift_retain_n();
    swift_retain_n();
    v79 = v77;
    swift_retain_n();
    v80 = v78;
    v81 = v79;
    swift_retain();
    v82 = v74;
    sub_23AA6D55C((uint64_t)"enumerateItems(fromPage:selfItem:suggestedPageSize:reply:)", 58, 2, (uint64_t)sub_23AB3C314, v71, v81, (void (*)(id, _QWORD, _QWORD, uint64_t))sub_23AB3C30C, v60);
    swift_release();

    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v119);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23AA774A4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, _BYTE *a11, _BYTE *a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  int v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];

  v40 = a8;
  LODWORD(v45) = a7;
  v14 = sub_23B1C5DC8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v46 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v43 = (uint64_t)&v39[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v39[-v20];
  v22 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v22);
  v47 = &v39[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23B1C6BD8();
  v24 = sub_23B1C5DA4();
  v25 = a2(v24);
  v26 = *(_QWORD *)(a4 + 80);
  v48 = a4;
  v49 = v26;
  if (qword_2542E6818 != -1)
    swift_once();
  v42 = (id)qword_2542EDD28;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v21, 1, 1, v14);
  v50[0] = 0;
  v50[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  strcpy((char *)v50, "async batch ");
  BYTE5(v50[1]) = 0;
  HIWORD(v50[1]) = -5120;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v44 = v25;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v27 = v50[1];
  v41 = v50[0];
  v45 = v21;
  v28 = v43;
  sub_23AA8EFC8((uint64_t)v21, v43, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v28, 1, v14) == 1)
  {
    v29 = v42;
    v30 = v42;
    v31 = v46;
    sub_23B1C5DB0();
    sub_23AA8A05C(v28, (uint64_t *)&unk_2542E67B8);
    v32 = (uint64_t)v47;
  }
  else
  {
    v31 = v46;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 32))(v46, v28, v14);
    v32 = (uint64_t)v47;
    v29 = v42;
  }
  v46 = a12;
  v47 = a11;
  LODWORD(v49) = (v49 & 4) == 0;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v15 + 16))(v32, v31, v14);
  v43 = *(int *)(v22 + 20);
  *(_QWORD *)(v32 + v43) = v29;
  v33 = v14;
  v34 = v32 + *(int *)(v22 + 24);
  *(_QWORD *)v34 = "DB queue";
  *(_QWORD *)(v34 + 8) = 8;
  *(_BYTE *)(v34 + 16) = 2;
  v35 = v29;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v36 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v36 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v36 + 32) = v41;
  *(_QWORD *)(v36 + 40) = v27;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v31, v33);
  swift_bridgeObjectRelease();
  v37 = sub_23AA8A05C((uint64_t)v45, (uint64_t *)&unk_2542E67B8);
  if ((v44 & v49) == 1)
  {
    (*(void (**)(const char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _BYTE *, _BYTE *))(*(_QWORD *)v48 + 416))("asyncBatch(function:side:afterNextDurableFlush:onCancel:updateBlock:)", 69, 2, v40 & 1, 0, a9, a10, v47, v46);
  }
  else
  {
    MEMORY[0x24BDAC7A8](v37);
    (*(void (**)(_QWORD *__return_ptr, uint64_t (*)()))(*(_QWORD *)v48 + 2352))(v50, sub_23AABA5D0);
  }
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  return sub_23AA937BC(v32, type metadata accessor for Signpost);
}

uint64_t sub_23AA77A48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10[40];

  sub_23AA77B28(a1, (uint64_t)v10);
  v5 = sub_23B1C6494();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v8 = v5;
  v9 = v6;
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v8;
  a2[1] = v9;
  return result;
}

uint64_t sub_23AA77AC4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t result;
  _BYTE v7[40];

  sub_23AA77B28(a1, (uint64_t)v7);
  v5 = sub_23B1C7484();
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_23AA77B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_23AA77B6C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = objc_msgSend(a1, sel_dataAtIndex_, a2);
  v6 = sub_23B1C5AD4();
  v8 = v7;

  *a3 = v6;
  a3[1] = v8;
}

uint64_t sub_23AA77BD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(void *, uint64_t, uint64_t);
  uint64_t v7;
  id v8;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v6 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 32);
  v7 = swift_checkMetadataState();
  v6(a1, v7, v5);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (qword_2542E5078 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5540);
  sub_23AAB5A28(&qword_2542E75B0, (uint64_t *)&unk_2542E5540, MEMORY[0x24BEE2B40]);
  sub_23AAA420C();
  sub_23B1C6644();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  if (a3)
  {
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain_n();
    v8 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE7A0);
    sub_23AAB5A28(&qword_2542E2040, (uint64_t *)&unk_2542DE7A0, MEMORY[0x24BEE2B40]);
    sub_23B1C6644();
    swift_release();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0x2064695F6D657469;
}

void sub_23AA77F48()
{
  sub_23AA77F6C();
}

uint64_t sub_23AA77F54()
{
  return swift_deallocClassInstance();
}

void sub_23AA77F6C()
{
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AA77FA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v4)(uint64_t, uint64_t);

  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8);
  v4(v1, a1);
  v4(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120), a1);
  return v2;
}

uint64_t sub_23AA77FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23AABC52C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_14_2;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23AA7816C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t result;
  _QWORD v25[4];
  uint64_t v26;
  unint64_t v27;

  sub_23B1C6EFC();
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_23B1C64F4();
  sub_23AABB5D8(0x656E6961746E6F63, 0xED00002E73665F72);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AABB5BC(0x656E6961746E6F63, 0xED00002E74725F72);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AABB590(0xD000000000000018, 0x800000023B21BE40);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AABB5D8(0x746E656D75636F64, 0xEC0000002E73665FLL);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AABB5BC(0x746E656D75636F64, 0xEC0000002E74725FLL);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AABB590(0xD000000000000017, 0x800000023B21BFC0);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v25[3] = MEMORY[0x24BEE0D00];
  v25[0] = a2;
  v25[1] = a3;
  swift_bridgeObjectRetain();
  sub_23AA94C90((uint64_t)v25);
  v15 = v14;
  sub_23AA8A05C((uint64_t)v25, qword_2542E5640);
  if (v15)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v17 = *(_QWORD *)(Strong + 32);
      swift_retain();
      swift_release();
      v18 = *(_QWORD *)(v17 + 16);
      swift_retain();
      v19 = swift_release();
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 112))(v19);
      swift_release();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      if (a6)
      {
        if (a6 != 1)
        {
          a5 = (unint64_t)(a5 != 0) << 63;
          goto LABEL_9;
        }
        if ((a5 & 0x8000000000000000) == 0)
        {
LABEL_9:
          v20 = objc_msgSend(a1, sel_bindLongParameter_, a5);
          sub_23B1C63E0();

          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          v21 = objc_msgSend(a1, sel_bindLongParameter_, a7);
          sub_23B1C63E0();

          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          v22 = objc_msgSend(a1, sel_bindLongParameter_, a8);
          sub_23B1C63E0();

          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          return v26;
        }
        __break(1u);
      }
      a5 = -(uint64_t)a5;
      goto LABEL_9;
    }
    __break(1u);
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

void sub_23AA78680(void *a1, uint64_t a2, uint64_t a3, char *a4, void (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  char *v25;
  id v26;
  void *v27;
  id v28;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a5;
  _Block_copy(a5);
  _Block_copy(a5);
  v11 = objc_msgSend(a1, sel_searchQuery);
  if (v11)
  {
    v12 = v11;
    _Block_copy(a5);
    sub_23ACE81D0((uint64_t)a1, v12, a2, a3, a4, a5);
    _Block_release(a5);
    swift_release();

  }
  else
  {
    v28 = objc_msgSend(a1, sel_enumeratedItemID);
    v13 = objc_msgSend(v28, sel_identifier);
    v14 = sub_23B1C63E0();
    v16 = v15;
    if (v14 == sub_23B1C63E0() && v16 == v17)
    {

      swift_bridgeObjectRelease_n();
      v20 = v28;
    }
    else
    {
      v19 = sub_23B1C7388();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v28;
      if ((v19 & 1) == 0)
      {
        v21 = swift_allocObject();
        *(_QWORD *)(v21 + 16) = sub_23AAB64E0;
        *(_QWORD *)(v21 + 24) = v10;
        v22 = (_QWORD *)swift_allocObject();
        v22[2] = sub_23AAB64E0;
        v22[3] = v10;
        v22[4] = a1;
        v22[5] = v28;
        v22[6] = a2;
        v22[7] = a3;
        v22[8] = a4;
        swift_retain_n();
        v23 = a1;
        v24 = v28;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        v25 = a4;
        sub_23AA6F44C((uint64_t)"enumerate(with:lifetimeExtender:observer:completionHandler:)", 60, 2, (void (*)(_QWORD *, id))sub_23AAB64DC, v21, (uint64_t)sub_23ACE287C, (uint64_t)v22);
        swift_release();

        swift_release();
        swift_release();
        goto LABEL_14;
      }
    }
    v26 = (id)FPNotSupportedError();
    if (v26)
      v27 = (void *)sub_23B1C5870();
    else
      v27 = 0;
    ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v27);
    swift_release();

  }
LABEL_14:
  _Block_release(a5);
}

uint64_t sub_23AA78928(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  _QWORD aBlock[6];

  v7 = sub_23B1C602C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  if (!a1)
    v11 = (id)fpfs_current_log();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a3;
  v12[4] = a4;
  aBlock[4] = sub_23AA85490;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698FC;
  aBlock[3] = &block_descriptor_28;
  v13 = _Block_copy(aBlock);
  v14 = v11;
  swift_retain();
  v15 = a1;
  sub_23AAB6244();
  sub_23B1C6B9C();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_23AA78A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  const char *v27;
  char v28;
  NSObject *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  const char *v33;
  char v34;
  NSObject *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  char *v44;
  os_signpost_id_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  os_signpost_id_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  const char *v57;
  void (*v58)(char *, char *, uint64_t);
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;

  v3 = v2;
  v64 = sub_23B1C5DC8();
  v67 = *(_QWORD *)(v64 - 8);
  v6 = MEMORY[0x24BDAC7A8](v64);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)&v56 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v56 - v11;
  v13 = sub_23B1C5DEC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v56 - v18;
  v20 = objc_msgSend((id)objc_opt_self(), sel_fp_coordinatorReadingOptions_, a1);
  v61 = sub_23B1C63E0();
  v22 = v21;

  v23 = type metadata accessor for TelemetrySignposter(0);
  v24 = *(unsigned __int8 *)(v3 + *(int *)(v23 + 28));
  v25 = v3 + *(int *)(v23 + 24);
  v63 = v14;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v65 = v13;
  if (v24 == 1)
  {
    v26(v19, v25, v13);
    v27 = *(const char **)v3;
    v28 = *(_BYTE *)(v3 + 16);
    sub_23B1C5DD4();
    sub_23B1C5DB0();
    swift_bridgeObjectRetain();
    v29 = sub_23B1C5DD4();
    v59 = sub_23B1C6BE4();
    v30 = v3;
    if ((sub_23B1C6C80() & 1) != 0)
    {
      v60 = a2;
      v62 = v3;
      if ((v28 & 1) == 0)
      {
        v31 = v66;
        if (v27)
        {
          v32 = v67;
          v57 = v27;
LABEL_16:
          v58 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
          v41 = v64;
          v58(v31, v12, v64);
          v42 = (uint8_t *)swift_slowAlloc();
          v43 = swift_slowAlloc();
          v69 = v43;
          *(_DWORD *)v42 = 136446210;
          swift_bridgeObjectRetain();
          v68 = sub_23AABEC68(v61, v22, &v69);
          sub_23B1C6CBC();
          v40 = v41;
          v44 = v66;
          swift_bridgeObjectRelease_n();
          v45 = sub_23B1C5DBC();
          _os_signpost_emit_with_name_impl(&dword_23AA66000, v29, (os_signpost_type_t)v59, v45, v57, "  readingOptions=%{public, signpost.telemetry:string1, name=readingOptions,public}s\n  enableTelemetry=YES\")", v42, 0xCu);
          swift_arrayDestroy();
          v46 = v43;
          v38 = v67;
          MEMORY[0x23B8614BC](v46, -1, -1);
          MEMORY[0x23B8614BC](v42, -1, -1);

          (*(void (**)(char *, uint64_t))(v38 + 8))(v44, v41);
          a2 = v60;
          v30 = v62;
          v39 = v63;
          v58(v44, v12, v41);
          goto LABEL_24;
        }
        goto LABEL_31;
      }
      if (!((unint64_t)v27 >> 32))
      {
        v31 = v66;
        v32 = v67;
        if (v27 >> 11 == 27)
        {
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        if (v27 >> 16 <= 0x10)
        {
          v57 = &v70;
          goto LABEL_16;
        }
        goto LABEL_27;
      }
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    swift_bridgeObjectRelease_n();

    v38 = v67;
    v39 = v63;
    v40 = v64;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, v12, v64);
LABEL_24:
    sub_23B1C5E28();
    swift_allocObject();
    v53 = sub_23B1C5E1C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v40);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v65);
    sub_23AA907B0(v30, a2, type metadata accessor for TelemetrySignposter);
    v54 = *(_QWORD *)(v30 + 24);
    result = type metadata accessor for TelemetrySignpost(0);
    *(_QWORD *)(a2 + *(int *)(result + 20)) = v53;
    *(_QWORD *)(a2 + *(int *)(result + 24)) = v54;
    return result;
  }
  v26(v17, v25, v13);
  v33 = *(const char **)v3;
  v62 = v3;
  v34 = *(_BYTE *)(v3 + 16);
  sub_23B1C5DD4();
  sub_23B1C5DB0();
  swift_bridgeObjectRetain();
  v35 = sub_23B1C5DD4();
  v36 = sub_23B1C6BE4();
  if ((sub_23B1C6C80() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    v38 = v67;
    v40 = v64;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, v8, v64);
LABEL_23:
    v12 = v8;
    v19 = v17;
    v30 = v62;
    v39 = v63;
    goto LABEL_24;
  }
  v60 = a2;
  v59 = v36;
  if ((v34 & 1) != 0)
  {
    if ((unint64_t)v33 >> 32)
      goto LABEL_26;
    v37 = v67;
    if (v33 >> 11 == 27)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      swift_bridgeObjectRelease_n();
      __break(1u);
      goto LABEL_32;
    }
    if (v33 >> 16 > 0x10)
      goto LABEL_28;
    v57 = &v71;
    goto LABEL_22;
  }
  if (v33)
  {
    v37 = v67;
    v57 = v33;
LABEL_22:
    v58 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    v47 = v66;
    v48 = v64;
    v58(v66, v8, v64);
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v69 = v50;
    *(_DWORD *)v49 = 136446210;
    swift_bridgeObjectRetain();
    v68 = sub_23AABEC68(v61, v22, &v69);
    sub_23B1C6CBC();
    v40 = v48;
    swift_bridgeObjectRelease_n();
    v51 = sub_23B1C5DBC();
    _os_signpost_emit_with_name_impl(&dword_23AA66000, v35, (os_signpost_type_t)v59, v51, v57, "  readingOptions=%{public, signpost.telemetry:string1, name=readingOptions,public}s\n  enableTelemetry=NO\")", v49, 0xCu);
    swift_arrayDestroy();
    v52 = v50;
    v38 = v67;
    MEMORY[0x23B8614BC](v52, -1, -1);
    MEMORY[0x23B8614BC](v49, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v47, v48);
    a2 = v60;
    v58(v47, v8, v48);
    goto LABEL_23;
  }
LABEL_32:
  result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

uint64_t sub_23AA790B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, _QWORD *a12)
{
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  _QWORD *v15;
  int v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  const void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  const void *v54;
  char *v55;
  const void *v56;
  unint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  id v62;
  char isUniquelyReferenced_nonNull_native;
  const void *v64;
  _QWORD *v65;
  char *v66;
  id v67;
  id v68;
  const void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  char v74;
  int *v75;
  int *v76;
  uint64_t v77;
  void *v78;
  const void *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int *v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  int *v92;
  _QWORD *v93;
  uint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  id v97;
  char v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  id v110;
  char v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  int *v115;
  int *v116;
  void *v117;
  id v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  int *v129;
  NSObject *v130;
  int *v131;
  NSObject *v132;
  os_log_type_t v133;
  int v134;
  _BOOL4 v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  NSObject *v139;
  NSObject *v140;
  int *v141;
  _QWORD *v142;
  id v143;
  id v144;
  char *v145;
  id v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  char *v158;
  const void *v159;
  uint64_t v160;
  uint64_t *v161;
  int *v162;
  const void *v163;
  _QWORD *v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  _BYTE v168[848];
  _QWORD v169[106];
  _BYTE v170[848];
  _QWORD v171[106];
  _BYTE v172[496];
  _BYTE v173[496];
  uint64_t v174;
  uint64_t v175;
  _BYTE v176[240];
  id v177;
  _BYTE v178[240];
  id v179;
  NSObject *v180;
  uint64_t v181;

  v13 = MEMORY[0x24BDAC7A8](a1);
  v162 = (int *)v12;
  v163 = v14;
  v164 = v15;
  v156 = v16;
  v157 = v18;
  v158 = v17;
  v20 = v19;
  v22 = v21;
  v23 = v13;
  v161 = a10;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0290);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v151 = (uint64_t)&v145 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v149 = (char *)&v145 - v27;
  v28 = sub_23B1C5E4C();
  v29 = *(_QWORD *)(v28 - 8);
  v154 = v28;
  v155 = v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v152 = (char *)&v145 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v145 = (char *)&v145 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v33);
  v148 = (char *)&v145 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2358);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v150 = (uint64_t)&v145 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v147 = (uint64_t)&v145 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v160 = (uint64_t)&v145 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v153 = (uint64_t)&v145 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v145 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v145 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47);
  v52 = (char *)&v145 + *(int *)(v50 + 48) - v51;
  v166 = (char **)((char *)&v145 - v51);
  sub_23AA8EFC8(v23, (uint64_t)&v145 - v51, (uint64_t *)&unk_2542E6B00);
  v159 = v52;
  v53 = v52;
  v54 = v22;
  memcpy(v53, v22, 0x350uLL);
  v167 = v35;
  v55 = &v49[*(int *)(v35 + 48)];
  v165 = v49;
  v56 = v163;
  sub_23AA8EFC8((uint64_t)v158, (uint64_t)v49, (uint64_t *)&unk_2542E6B00);
  v158 = v55;
  memcpy(v55, v56, 0x350uLL);
  v57 = sub_23AAF79A8(MEMORY[0x24BEE4AF8]);
  v146 = v20;
  if (v20)
  {
    v58 = v20;
    sub_23AB3C920((uint64_t)v22, (voidsub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
    v59 = (uint64_t)v56;
    v60 = v157;
    v61 = v156;
    sub_23AB3C920(v59, (voidsub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
    v62 = v58;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v171[0] = v57;
    sub_23AA9710C((uint64_t)v62, v60, v61, isUniquelyReferenced_nonNull_native);
    v57 = v171[0];

    swift_bridgeObjectRelease();
    v64 = v54;
  }
  else
  {
    sub_23AB3C920((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
    sub_23AB3C920((uint64_t)v56, (voidsub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
    v64 = v22;
    v60 = v157;
  }
  v65 = v166;
  v66 = &v46[*(int *)(v167 + 48)];
  sub_23AA8EFC8((uint64_t)v166, (uint64_t)v46, (uint64_t *)&unk_2542E6B00);
  memcpy(v66, v64, 0x350uLL);
  sub_23AA724E8((uint64_t)v64, (uint64_t)v173, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v173, (uint64_t)v176, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v176) == 1)
  {
    sub_23AA8A05C((uint64_t)v46, (uint64_t *)&unk_2542E6B00);
  }
  else
  {
    v67 = v177;
    v68 = v177;
    sub_23AA8A05C((uint64_t)v46, (uint64_t *)&unk_2542E6B00);
    if (v67)
    {
      v69 = v64;
      v70 = v153;
      v71 = (void *)(v153 + *(int *)(v167 + 48));
      sub_23AA8EFC8((uint64_t)v166, v153, (uint64_t *)&unk_2542E6B00);
      memcpy(v71, v69, 0x350uLL);
      v72 = *(_QWORD *)v70;
      LOBYTE(v69) = *(_BYTE *)(v70 + 8);
      v65 = v166;
      sub_23AA8A05C(v70, (uint64_t *)&unk_2542E6B00);
      v73 = v68;
      v74 = swift_isUniquelyReferenced_nonNull_native();
      v171[0] = v57;
      sub_23AA9710C((uint64_t)v73, v72, (char)v69, v74);
      v57 = v171[0];

      swift_bridgeObjectRelease();
    }
  }
  v75 = (int *)sub_23AA963A8(v57);
  swift_bridgeObjectRelease();
  v76 = sub_23AA96724(v65, 0, 1, v75);
  swift_bridgeObjectRelease();
  v77 = v160;
  v78 = (void *)(v160 + *(int *)(v167 + 48));
  sub_23AA8EFC8((uint64_t)v65, v160, (uint64_t *)&unk_2542E6B00);
  v79 = v159;
  memcpy(v171, v159, sizeof(v171));
  memcpy(v78, v159, 0x350uLL);
  memcpy(v170, v79, sizeof(v170));
  nullsub_1(v170);
  sub_23AA724E8((uint64_t)v170, (uint64_t)&v175, (uint64_t *)&unk_2542E1498);
  sub_23AB3C920((uint64_t)v171, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
  v80 = (uint64_t)v162;
  sub_23AA9BF04((uint64_t)v76);
  if (!v80)
  {
    v162 = (int *)a11;
    sub_23AB3C920((uint64_t)v171, (voidsub_23AAAEC3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AAA5BA4);
    sub_23AA8A05C(v77, (uint64_t *)&unk_2542E6B00);
    if (!objc_msgSend(v76, sel_isContainer)
      || (objc_msgSend(v76, sel_isContainerPristine) & 1) != 0)
    {
      v83 = v151;
      sub_23AA8EFC8((uint64_t)v162, v151, &qword_2542E0290);
      v84 = v154;
      v85 = v155;
      v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v155 + 48))(v83, 1, v154);
      v87 = (uint64_t)v165;
      if (v86 == 1)
      {

        sub_23AA8A05C(v87, &qword_2569E2358);
        sub_23AA8A05C((uint64_t)v65, &qword_2569E2358);
        v81 = &qword_2542E0290;
        v82 = v83;
        return sub_23AA8A05C(v82, v81);
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v152, v83, v84);
      v88 = v76;
      v89 = sub_23B1C5E40();
      v90 = sub_23B1C6A88();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc();
        v164 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v91 = 138543362;
        v167 = (uint64_t)v89;
        v169[0] = v88;
        v92 = v88;
        v87 = (uint64_t)v165;
        v89 = v167;
        sub_23B1C6CBC();
        v93 = v164;
        *v164 = v88;

        v65 = v166;
        _os_log_impl(&dword_23AA66000, v89, v90, "Discarding container %{public}@ from appLibraries", v91, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v93, -1, -1);
        MEMORY[0x23B8614BC](v91, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v155 + 8))(v152, v154);
      v102 = v87;
LABEL_22:
      sub_23AA8A05C(v102, &qword_2569E2358);
      v82 = (uint64_t)v65;
      v81 = &qword_2569E2358;
      return sub_23AA8A05C(v82, v81);
    }
    v161 = (uint64_t *)(a9 | 1);
    v94 = v60;
    v95 = sub_23AAF79A8(MEMORY[0x24BEE4AF8]);
    v96 = v165;
    if (v146)
    {
      v97 = v146;
      v98 = swift_isUniquelyReferenced_nonNull_native();
      v169[0] = v95;
      sub_23AA9710C((uint64_t)v97, v94, v156, v98);
      v95 = v169[0];

      swift_bridgeObjectRelease();
    }
    v99 = v147;
    v100 = (void *)(v147 + *(int *)(v167 + 48));
    sub_23AA8EFC8((uint64_t)v96, v147, (uint64_t *)&unk_2542E6B00);
    v101 = (uint64_t)v163;
    memcpy(v100, v163, 0x350uLL);
    sub_23AA724E8(v101, (uint64_t)v172, qword_2542E6E20);
    sub_23AA724E8((uint64_t)v172, (uint64_t)v178, qword_2542E6E20);
    if (sub_23AAFC2A4((uint64_t)v178) == 1)
    {
      sub_23AA8A05C(v99, (uint64_t *)&unk_2542E6B00);
    }
    else
    {
      v103 = v179;
      v104 = v179;
      sub_23AA8A05C(v99, (uint64_t *)&unk_2542E6B00);
      if (v103)
      {
        v105 = v153;
        v106 = (void *)(v153 + *(int *)(v167 + 48));
        v107 = (uint64_t)v165;
        sub_23AA8EFC8((uint64_t)v165, v153, (uint64_t *)&unk_2542E6B00);
        memcpy(v106, v163, 0x350uLL);
        v108 = *(_QWORD *)v105;
        v109 = *(_BYTE *)(v105 + 8);
        sub_23AA8A05C(v105, (uint64_t *)&unk_2542E6B00);
        v110 = v104;
        v111 = swift_isUniquelyReferenced_nonNull_native();
        v169[0] = v95;
        v112 = v108;
        v96 = (_QWORD *)v107;
        v113 = v109;
        v65 = v166;
        v114 = v167;
        sub_23AA9710C((uint64_t)v110, v112, v113, v111);
        v95 = v169[0];

        swift_bridgeObjectRelease();
LABEL_27:
        v115 = (int *)sub_23AA963A8(v95);
        swift_bridgeObjectRelease();
        v116 = sub_23AA96724(v96, 0, 1, v115);
        swift_bridgeObjectRelease();
        v117 = (void *)(v150 + *(int *)(v114 + 48));
        sub_23AA8EFC8((uint64_t)v96, v150, (uint64_t *)&unk_2542E6B00);
        memcpy(v169, v158, sizeof(v169));
        memcpy(v117, v158, 0x350uLL);
        sub_23AB3C920((uint64_t)v169, (voidsub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
        v118 = objc_msgSend(v76, sel_fileURL);
        v119 = (uint64_t)v149;
        if (v118)
        {
          v120 = v118;
          v121 = (uint64_t)v148;
          sub_23B1C59CC();

          v122 = sub_23B1C5A08();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v121, 0, 1, v122);
        }
        else
        {
          v123 = sub_23B1C5A08();
          v121 = (uint64_t)v148;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v148, 1, 1, v123);
        }
        v124 = v155;
        memcpy(v168, v169, sizeof(v168));
        nullsub_1(v168);
        sub_23AA724E8((uint64_t)v168, (uint64_t)&v174, (uint64_t *)&unk_2542E1498);
        sub_23AA9BF04((uint64_t)v116);
        sub_23AA8A05C(v121, (uint64_t *)&unk_2542E6740);
        sub_23AB3C920((uint64_t)v169, (voidsub_23AAAEC3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AAA5BA4);
        sub_23AA8A05C(v150, (uint64_t *)&unk_2542E6B00);
        sub_23AA8EFC8((uint64_t)v162, v119, &qword_2542E0290);
        v126 = v154;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v119, 1, v154) == 1)
        {
          sub_23AA8A05C(v119, &qword_2542E0290);
          v127 = (uint64_t)v165;
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v124 + 32))(v145, v119, v126);
          v167 = (uint64_t)v76;
          v128 = v76;
          v129 = v116;
          v130 = v128;
          v131 = v129;
          v132 = sub_23B1C5E40();
          v133 = sub_23B1C6A88();
          v134 = v133;
          v135 = os_log_type_enabled(v132, v133);
          v127 = (uint64_t)v165;
          if (v135)
          {
            v136 = swift_slowAlloc();
            LODWORD(v163) = v134;
            v137 = v136;
            v138 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v137 = 138543618;
            v162 = v116;
            v180 = v130;
            v160 = v137 + 12;
            v161 = &v181;
            v139 = v130;
            v164 = 0;
            v140 = v139;
            v116 = v162;
            sub_23B1C6CBC();
            *v138 = v130;

            *(_WORD *)(v137 + 12) = 2114;
            v180 = v131;
            v141 = v131;
            v65 = v166;
            sub_23B1C6CBC();
            v142 = v138;
            v127 = (uint64_t)v165;
            v142[1] = v131;

            _os_log_impl(&dword_23AA66000, v132, (os_log_type_t)v163, "Patching container %{public}@ with %{public}@", (uint8_t *)v137, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v142, -1, -1);
            MEMORY[0x23B8614BC](v137, -1, -1);
          }
          else
          {

            v132 = v130;
          }

          (*(void (**)(char *, uint64_t))(v155 + 8))(v145, v154);
          v76 = (int *)v167;
        }
        v143 = objc_msgSend((id)objc_opt_self(), sel_appLibraryFromContainerItem_documentsItem_, v76, v116);
        if (v143)
        {
          v144 = v143;
          if ((objc_msgSend(v143, sel_isValidAppLibrary) & 1) != 0)
          {
            v144 = v144;
            MEMORY[0x23B85F008]();
            if (*(_QWORD *)((*a12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23B1C6740();
            sub_23B1C6788();
            sub_23B1C671C();

          }
          else
          {

          }
        }
        else
        {

        }
        v102 = v127;
        goto LABEL_22;
      }
      v96 = v165;
    }
    v114 = v167;
    goto LABEL_27;
  }
  sub_23AB3C920((uint64_t)v171, (voidsub_23AAAEC3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AAA5BA4);

  sub_23AA8A05C((uint64_t)v165, &qword_2569E2358);
  sub_23AA8A05C((uint64_t)v65, &qword_2569E2358);
  v81 = (uint64_t *)&unk_2542E6B00;
  v82 = v77;
  return sub_23AA8A05C(v82, v81);
}

uint64_t sub_23AA79F78()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = *(void **)(v0 + 88);
  v2 = objc_msgSend(v1, sel_filename);
  v3 = sub_23B1C63E0();
  v5 = v4;

  v6 = objc_msgSend(v1, sel_providerID);
  sub_23B1C63E0();
  v7 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  LODWORD(v2) = objc_msgSend(v7, sel_fp_isiCloudDriveIdentifier);

  if (!(_DWORD)v2)
  {

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v3 != 0x746E656D75636F44 || v5 != 0xE900000000000073)
  {
    v9 = sub_23B1C7388();

    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      goto LABEL_11;
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }

  swift_bridgeObjectRelease();
LABEL_11:
  v12 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 96);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v13;
  v13[2] = v12;
  v13[3] = v11;
  v13[4] = v0 + 16;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E3250);
  *v14 = v0;
  v14[1] = sub_23ACCD7F0;
  return sub_23B1C73D0();
}

uint64_t sub_23AA7A178(uint64_t a1)
{
  return sub_23AAF8A80(a1, &qword_2542DE780);
}

uint64_t sub_23AA7A184(uint64_t a1, int a2, int a3, int a4, unint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char v35;
  os_log_type_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  BOOL v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  unint64_t v87;
  int v88;
  id v89;
  id v90;
  id v91;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int *v97;
  _QWORD *v98;
  int v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  int v105;
  int v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115[2];

  v108 = a8;
  v109 = a6;
  v104 = a7;
  v105 = a3;
  v106 = a4;
  v103 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90);
  v110 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v102 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v93 - v17;
  v101 = v19;
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v93 - v20;
  v97 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6F0);
  MEMORY[0x24BDAC7A8](v97);
  v98 = (uint64_t *)((char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_23B1C5E4C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v99 = (a5 >> 58) & 0x3C;
  LODWORD(v100) = (a5 >> 1) & 3;
  sub_23AA93780(a5);
  sub_23AA93780(a5);
  swift_retain();
  v28 = sub_23B1C5E40();
  v29 = sub_23B1C6A94();
  v30 = os_log_type_enabled(v28, v29);
  v111 = a1;
  v112 = v21;
  if (v30)
  {
    v94 = v23;
    v95 = v12;
    v96 = v18;
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v115[0] = v32;
    *(_DWORD *)v31 = 136315394;
    swift_beginAccess();
    v33 = *(void **)(a1 + 32);
    v34 = *(unsigned __int8 *)(a1 + 40);
    v35 = *(_BYTE *)(a1 + 41);
    v93 = v24;
    v36 = v29;
    if ((v35 & 1) != 0)
    {
      v37 = v33;
      v38 = sub_23AA7B734();
      v40 = v39;
      sub_23AA862DC(v33, v34, 1);
    }
    else
    {
      v38 = sub_23AA96F18((uint64_t)v33, v34);
      v40 = v45;
    }
    v114 = sub_23AABEC68(v38, v40, v115);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    sub_23AE5BC48(a5);
    v47 = v46;
    v49 = v48;
    sub_23AC03BE4(a5);
    v114 = sub_23AABEC68(v47, v49, v115);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AC03BE4(a5);
    _os_log_impl(&dword_23AA66000, v28, v36, "Request to materialize content of itemID %s reason %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v32, -1, -1);
    MEMORY[0x23B8614BC](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v93 + 8))(v26, v94);
    v43 = (uint64_t)v96;
    v44 = v110;
    v12 = v95;
    v42 = v99;
    v41 = (int)v100;
  }
  else
  {
    sub_23AC03BE4(a5);
    swift_release();
    sub_23AC03BE4(a5);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    v42 = v99;
    v41 = (int)v100;
    v43 = (uint64_t)v18;
    v44 = v110;
  }
  v107 = a5;
  if ((v41 | v42) == 2)
  {
    v50 = (_QWORD *)swift_projectBox();
    v51 = v98;
    v52 = v97[12];
    v53 = (char *)v98 + v52;
    v54 = v97[16];
    v55 = v97[20];
    v100 = (char *)v50 + v52;
    v56 = v50[1];
    *v98 = *v50;
    v51[1] = v56;
    v57 = sub_23B1C5A08();
    v58 = v43;
    v59 = *(_QWORD *)(v57 - 8);
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v53, v100, v57);
    *(_QWORD *)((char *)v51 + v54) = *(_QWORD *)((char *)v50 + v54);
    v44 = v110;
    v60 = *(_QWORD *)((char *)v50 + v55);
    *(_QWORD *)((char *)v51 + v55) = v60;
    v61 = *(void (**)(char *, uint64_t))(v59 + 8);
    v43 = v58;
    v61(v53, v57);
  }
  else
  {
    v60 = 0;
  }
  v62 = (uint64_t)v112;
  sub_23AA8EFC8(v113 + qword_2542EDD58, (uint64_t)v12, &qword_2542E4E70);
  v63 = type metadata accessor for TelemetrySignposter(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v12, 1, v63) == 1)
  {
    sub_23AA8A05C((uint64_t)v12, &qword_2542E4E70);
    v64 = type metadata accessor for TelemetrySignpost(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v62, 1, 1, v64);
  }
  else
  {
    sub_23AA78A84(v60, v62);
    sub_23AA937BC((uint64_t)v12, type metadata accessor for TelemetrySignposter);
    v65 = type metadata accessor for TelemetrySignpost(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v62, 0, 1, v65);
  }
  sub_23AA8EFC8(v62, v43, (uint64_t *)&unk_2542DDE90);
  v66 = *(unsigned __int8 *)(v44 + 80);
  v67 = (v66 + 16) & ~v66;
  v68 = v101;
  v69 = (v101 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  v110 = v70;
  sub_23AA724E8(v43, v70 + v67, (uint64_t *)&unk_2542DDE90);
  v71 = (_QWORD *)(v70 + v69);
  v72 = v104;
  v73 = v108;
  *v71 = v104;
  v71[1] = v73;
  v74 = v102;
  sub_23AA8EFC8(v62, v102, (uint64_t *)&unk_2542DDE90);
  v75 = (v66 + 24) & ~v66;
  v76 = (v75 + v68 + 31) & 0xFFFFFFFFFFFFFFF8;
  v101 = (v76 + 15) & 0xFFFFFFFFFFFFFFF8;
  v77 = (v76 + 31) & 0xFFFFFFFFFFFFFFF8;
  v78 = swift_allocObject();
  v79 = v107;
  *(_QWORD *)(v78 + 16) = v107;
  sub_23AA724E8(v74, v78 + v75, (uint64_t *)&unk_2542DDE90);
  v80 = v78 + ((v75 + v68 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v80 = v72;
  *(_QWORD *)(v80 + 8) = v73;
  v81 = (v103 & 1) == 0;
  *(_BYTE *)(v80 + 16) = v103 & 1;
  v82 = v113;
  *(_QWORD *)(v78 + v76) = v113;
  v83 = v78 + v101;
  v84 = v110;
  v85 = v111;
  *(_QWORD *)v83 = v111;
  *(_BYTE *)(v83 + 8) = v105 & 1;
  v86 = v109;
  *(_QWORD *)(v78 + v77) = v109;
  v87 = v78 + ((v77 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v87 = sub_23ACF71D0;
  *(_QWORD *)(v87 + 8) = v84;
  *(_BYTE *)(v87 + 16) = v106 & 1;
  if (v81)
    v88 = 1;
  else
    v88 = 2;
  v89 = objc_allocWithZone(MEMORY[0x24BDD1768]);
  swift_retain();
  sub_23AA93780(v79);
  swift_retain();
  swift_retain();
  swift_retain();
  v90 = v86;
  swift_retain();
  v91 = objc_msgSend(v89, sel_init);
  sub_23AA93780(v79);
  swift_retain();
  sub_23AAEF10C(v85, v88, 0, v79, v91, 0, v82, (void (*)(uint64_t *))sub_23ACF7354, v78, v79);
  sub_23AC03BE4(v79);
  swift_release();

  swift_release_n();
  return sub_23AA8A05C((uint64_t)v112, (uint64_t *)&unk_2542DDE90);
}

void sub_23AA7A90C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;

  v40 = a4;
  v10 = sub_23B1C5A08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v38 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DD400);
  v39 = swift_allocBox();
  v15 = v14;
  v16 = *(int *)(v13 + 48);
  v37 = v11;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v35 = a2;
  v18 = v10;
  v33 = v17;
  v17(v14, a2, v10);
  *(_QWORD *)&v15[v16] = a3;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v40;
  v19[3] = a5;
  v19[4] = a1;
  v36 = *(_QWORD *)&v5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v40 = v5;
  v20 = (void *)MEMORY[0x23B8615C4](&v5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  v21 = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    v34 = objc_msgSend(v20, sel_log);

  }
  else
  {
    v34 = 0;
  }
  v22 = v38;
  v32 = v39 | 0x9000000000000002;
  v33(v38, v35, v18);
  v23 = v37;
  v24 = (*(unsigned __int8 *)(v37 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v25 = (v12 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  v27 = v40;
  *(_QWORD *)(v26 + 16) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v26 + v24, v22, v18);
  *(_QWORD *)(v26 + v25) = v32;
  v28 = v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v28 = sub_23AAB8C80;
  *(_QWORD *)(v28 + 8) = v19;
  *(_BYTE *)(v28 + 16) = 0;
  v29 = v27;
  swift_retain();
  swift_retain();
  v30 = v34;
  sub_23AA814FC(v34, (uint64_t)"item(for:userRequest:hideIgnoredDescendents:completionHandler:)", 63, 2, (uint64_t)sub_23AAB8FB4, v26);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_23AA7AB68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  id v50;
  uint8_t *v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[3];

  v59 = a8;
  v56 = a7;
  v55 = sub_23B1C5E4C();
  v14 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = swift_allocObject();
  v61 = a1;
  swift_weakInit();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = sub_23AAB64DC;
  v19[3] = v17;
  v19[4] = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_23AABEA64;
  *(_QWORD *)(v20 + 24) = v19;
  v58 = v20;
  swift_retain();
  v60 = a4;
  LODWORD(v54) = objc_msgSend(a4, sel_buildAndFilterAppLibraries);
  v21 = objc_msgSend(a5, sel_identifier);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  v23 = v21;
  v62 = a6;
  *(_QWORD *)(v22 + 24) = objc_msgSend((id)objc_opt_self(), sel_requestForPID_, objc_msgSend(a6, sel_requestEffectivePID));
  v63 = v22 | 0x1000000000000000;
  v52 = v23;
  v53 = sub_23AAB7B40(v52);
  v24 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain_n();
  v25 = v16;
  v26 = sub_23B1C5E40();
  v27 = sub_23B1C6A94();
  v28 = os_log_type_enabled(v26, v27);
  v57 = v22;
  if (v28)
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v65[0] = v30;
    *(_DWORD *)v29 = 136315138;
    v51 = v29 + 4;
    swift_retain();
    sub_23AE5BC48(v63);
    v31 = v14;
    v33 = v32;
    v35 = v34;
    swift_release();
    v64 = sub_23AABEC68(v33, v35, v65);
    sub_23B1C6CBC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v26, v27, "Request to enumerate with settings %s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v30, -1, -1);
    MEMORY[0x23B8614BC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v55);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v55);
  }
  v36 = v61;
  v55 = *(_QWORD *)(v61 + 16);
  v37 = v53;
  swift_beginAccess();
  LODWORD(v51) = *(unsigned __int8 *)(v37 + 41);
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1768]), sel_init);
  v38 = swift_allocObject();
  v40 = v58;
  v39 = v59;
  *(_QWORD *)(v38 + 16) = sub_23AAB64AC;
  *(_QWORD *)(v38 + 24) = v40;
  v42 = v62;
  v41 = v63;
  v43 = v60;
  *(_QWORD *)(v38 + 32) = v63;
  *(_QWORD *)(v38 + 40) = v43;
  v44 = v52;
  *(_QWORD *)(v38 + 48) = v36;
  *(_QWORD *)(v38 + 56) = v44;
  v45 = v56;
  *(_QWORD *)(v38 + 64) = v42;
  *(_QWORD *)(v38 + 72) = v45;
  *(_QWORD *)(v38 + 80) = v39;
  *(_BYTE *)(v38 + 88) = (_BYTE)v54;
  v54 = v44;
  swift_retain();
  swift_retain();
  v46 = v43;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v47 = v39;
  v48 = v50;
  sub_23AA7A184(v37, (int)v51, 1, 1, v41, v50, (uint64_t)sub_23ACFA5B8, v38);
  swift_release();

  swift_release();
  swift_release();

  return swift_release();
}

void sub_23AA7AFF0(_BYTE *a1, uint64_t a2, unint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  os_log_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(id, uint64_t);
  uint64_t v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  uint64_t v51[2];
  uint64_t v52;
  os_log_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(id, uint64_t);
  uint64_t v64;
  uint64_t v65;

  v62 = a5;
  v63 = a4;
  v10 = sub_23B1C5A08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5E4C();
  v18 = MEMORY[0x24BDAC7A8](v17);
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs]
    || (a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_invalidated] & 1) != 0)
  {
    goto LABEL_11;
  }
  v59 = (char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v20;
  v56 = v18;
  v61 = a2;
  v21 = a1;
  if (objc_sync_enter(v21))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v21);
  sub_23AA71B80((uint64_t)v21, &v65);
  v60 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = v21;
  v58 = v16;
  if (objc_sync_exit(v21))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v21);

  v22 = v65;
  MEMORY[0x24BDAC7A8](v23);
  a2 = v61;
  v51[-2] = v61;
  v24 = sub_23ADF95D0((uint64_t (*)(char *))sub_23ACFC3EC, (_BOOL8)&v51[-4], v22);
  swift_bridgeObjectRelease();
  v13 = v60;
  if (!v24)
    goto LABEL_11;
  v25 = v59;
  v26 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a3);
  sub_23AA93780(a3);
  v27 = sub_23B1C5E40();
  v28 = sub_23B1C6A94();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v53 = v27;
    v54 = v29;
    v30 = (uint8_t *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v65 = v52;
    *(_DWORD *)v30 = 136446210;
    v51[1] = (uint64_t)(v30 + 4);
    sub_23AA93780(a3);
    sub_23AE5BC48(a3);
    v51[0] = v31;
    v33 = v32;
    sub_23AC03BE4(a3);
    v64 = sub_23AABEC68(v51[0], v33, &v65);
    v13 = v60;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AC03BE4(a3);
    sub_23AC03BE4(a3);
    v34 = v53;
    v35 = v30;
    _os_log_impl(&dword_23AA66000, v53, (os_log_type_t)v54, "Going through fast-path for the rootItem at startup (request: %{public}s)", v30, 0xCu);
    v36 = v52;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v36, -1, -1);
    MEMORY[0x23B8614BC](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v56);
  }
  else
  {
    sub_23AC03BE4(a3);
    sub_23AC03BE4(a3);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v25, v56);
  }
  a2 = v61;
  v37 = type metadata accessor for VFSItem(0);
  v38 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v58, 1, 1, v37);
  v39 = sub_23AC7861C(a2, v38);
  sub_23AA8A05C(v38, &qword_2542E72C0);
  if (!v39)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
    v41 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v42 = (v12 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = swift_allocObject();
    v44 = v10;
    v45 = v63;
    v46 = v11;
    v47 = a1;
    v48 = v62;
    *(_QWORD *)(v43 + 16) = v63;
    *(_QWORD *)(v43 + 24) = v48;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v43 + v41, v13, v44);
    *(_QWORD *)(v43 + v42) = a3;
    v49 = v43 + ((v42 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v49 = v47;
    *(_BYTE *)(v49 + 8) = a6 & 1;
    swift_retain_n();
    v50 = v47;
    sub_23AA93780(a3);
    sub_23AA7DE00((uint64_t)"item(for:userRequest:hideIgnoredDescendents:completionHandler:)", 63, 2, (uint64_t)sub_23AAB8EF4, v43, v50, v45, v48);
    swift_release();
    swift_release();
  }
  else
  {
    v40 = v39;
    v63(v39, 0);

  }
}

void sub_23AA7B504(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18;
  uint64_t v19;
  int *v20;

  swift_getAssociatedTypeWitness();
  v18 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, a1, v18);
  v20 = (int *)type metadata accessor for ItemReconciliationHalf(0, a12, a13, v19);
  *(_QWORD *)(a5 + v20[9]) = a2;
  *(_QWORD *)(a5 + v20[10]) = a3;
  *(_BYTE *)(a5 + v20[11]) = a4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AA7B688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v1, v2, v4);
  *(_BYTE *)(v0 + v3[13]) = v10;
  *(_BYTE *)(v0 + v3[14]) = v11;
  *(_BYTE *)(v0 + v3[15]) = v13;
  v5 = v0 + v3[16];
  *(_QWORD *)v5 = v7;
  *(_QWORD *)(v5 + 8) = v8;
  *(_BYTE *)(v5 + 16) = v9;
  result = sub_23AABAB40(v12, v0 + v3[17]);
  *(_QWORD *)(v0 + v3[18]) = v15;
  *(_QWORD *)(v0 + v3[19]) = v14;
  return result;
}

uint64_t sub_23AA7B734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v0 = 1953460082;
  v1 = sub_23B1C63E0();
  v3 = v2;
  if (v1 == sub_23B1C63E0() && v3 == v4)
    goto LABEL_12;
  v6 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return v0;
  v0 = 0x6873617274;
  v7 = sub_23B1C63E0();
  v9 = v8;
  if (v7 == sub_23B1C63E0() && v9 == v10)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    return v0;
  }
  v12 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    return sub_23B1C63E0();
  return v0;
}

void sub_23AA7B878(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  id v27;
  void *v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;

  v35 = a3;
  v8 = sub_23B1C5A08();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v34 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E2FB8);
  v36 = swift_allocBox();
  v13 = v12;
  v14 = *(int *)(v11 + 48);
  v33 = v9;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v31 = a1;
  v16 = v8;
  v15(v12, a1, v8);
  *(_QWORD *)(v13 + v14) = a2;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v35;
  *(_QWORD *)(v17 + 24) = a4;
  v32 = *(_QWORD *)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v35 = v4;
  v18 = (void *)MEMORY[0x23B8615C4](&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  v19 = a2;
  swift_retain();
  if (v18)
  {
    v30 = objc_msgSend(v18, sel_log);

  }
  else
  {
    v30 = 0;
  }
  v29 = v36 | 0x8000000000000006;
  v20 = v34;
  v15((uint64_t)v34, v31, v16);
  v21 = v33;
  v22 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v23 = (v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  v25 = v35;
  *(_QWORD *)(v24 + 16) = v35;
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v24 + v22, v20, v16);
  *(_QWORD *)(v24 + v23) = v29;
  v26 = v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v26 = sub_23AAB8C98;
  *(_QWORD *)(v26 + 8) = v17;
  *(_BYTE *)(v26 + 16) = 1;
  v27 = v25;
  swift_retain();
  swift_retain();
  v28 = v30;
  sub_23AA814FC(v30, (uint64_t)"item(for:userRequest:hideIgnoredDescendents:completionHandler:)", 63, 2, (uint64_t)sub_23AAB8FB4, v24);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_23AA7BAC4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  void (*v49)(_QWORD *, uint64_t);
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  void (*v55)(uint64_t *, _QWORD, uint64_t);
  uint64_t v56;
  void (*v57)(uint64_t *, uint64_t);
  void (*v58)(char *, uint64_t);
  uint64_t *v59;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v73 = a7;
  v74 = (uint64_t *)a3;
  v70 = a5;
  v71 = a6;
  v75 = a4;
  v69 = a2;
  v68 = a1;
  v82 = sub_23B1C6020();
  v77 = *(_QWORD *)(v82 - 8);
  v8 = MEMORY[0x24BDAC7A8](v82);
  v79 = (uint64_t *)((char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v80 = (uint64_t *)((char *)&v61 - v10);
  v81 = sub_23B1C60E0();
  v76 = *(_QWORD *)(v81 - 8);
  v11 = MEMORY[0x24BDAC7A8](v81);
  v61 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)&v61 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_23B1C6050();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v64 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23B1C60A4();
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v65 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23B1C6B78();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0];
  v22 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AAB62D8();
  v72 = v7;
  v25 = *(void **)(v7 + 216);
  v83 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&qword_2542E1F80, v21, MEMORY[0x24BEE57D0]);
  v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1EF0);
  sub_23AAB5A28((unint64_t *)&qword_2542E1F00, (uint64_t *)&unk_2542E1EF0, MEMORY[0x24BEE12C8]);
  sub_23B1C6DE8();
  v27 = sub_23B1C6B84();
  v28 = v62;
  v29 = v27;

  v30 = v24;
  v31 = v63;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v30, v20);
  qos_class_self();
  sub_23B1C6038();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v16, 1, v31) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v64, *MEMORY[0x24BEE5498], v31);
    sub_23AA8A05C((uint64_t)v16, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v64, v16, v31);
  }
  ObjectType = swift_getObjectType();
  v33 = (uint64_t)v65;
  sub_23B1C608C();
  v34 = swift_allocObject();
  v35 = v68;
  *(_QWORD *)(v34 + 16) = v72;
  *(_QWORD *)(v34 + 24) = v35;
  *(_BYTE *)(v34 + 32) = v69;
  v36 = v74;
  sub_23AA724E8((uint64_t)v74, v34 + 40, (uint64_t *)&unk_2542E4948);
  v37 = v75;
  v38 = v70;
  *(_QWORD *)(v34 + 136) = v75;
  *(_QWORD *)(v34 + 144) = v38;
  v39 = v71;
  *(_QWORD *)(v34 + 152) = v29;
  *(_QWORD *)(v34 + 160) = v39;
  *(_QWORD *)(v34 + 168) = v73;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_23AABA6D4(v36);
  swift_retain();
  sub_23AA78928(0, v33, (uint64_t)sub_23ADA9BF8, v34);
  swift_release();
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 8))(v33, v67);
  v41 = v81;
  v42 = v78;
  if (v37)
  {
    v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 88))(v40);
    v46 = v43;
    if (!v45)
    {
      v52 = v61;
      sub_23B1C60C8();
      v53 = v80;
      *v80 = v46;
      v54 = v77;
      v55 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v77 + 104);
      v56 = v82;
      v55(v53, *MEMORY[0x24BEE5400], v82);
      MEMORY[0x23B85EA14](v52, v53);
      v57 = *(void (**)(uint64_t *, uint64_t))(v54 + 8);
      v57(v53, v56);
      v58 = *(void (**)(char *, uint64_t))(v76 + 8);
      v58(v52, v41);
      v55(v53, *MEMORY[0x24BEE5418], v56);
      v59 = v79;
      sub_23AAB602C(v79);
      MEMORY[0x23B85F530](v42, v53, v59, ObjectType);
      v57(v59, v56);
      v57(v53, v56);
      v58(v42, v41);
      goto LABEL_9;
    }
    sub_23AB7C0C4(v43, v44, v45);
  }
  sub_23B1C60C8();
  v47 = v80;
  sub_23AAB6074((uint64_t)v80);
  v48 = v79;
  sub_23AAB602C(v79);
  MEMORY[0x23B85F530](v42, v47, v48, ObjectType);
  v49 = *(void (**)(_QWORD *, uint64_t))(v77 + 8);
  v50 = v48;
  v51 = v82;
  v49(v50, v82);
  v49(v47, v51);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v41);
LABEL_9:
  sub_23B1C6BCC();
  return swift_unknownObjectRelease();
}

uint64_t sub_23AA7C074(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  v5 = sub_23B1C7568();
  v7 = v6;
  swift_beginAccess();
  v8 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v9 = sub_23AAAF4C4(v5, v7), (v10 & 1) != 0))
  {
    sub_23AAA15AC(v8[7] + 32 * v9, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v17 + 1))
  {
    sub_23AAA159C(&v16, &v19);
    swift_endAccess();
    sub_23AAA159C(&v19, &v16);
    swift_getAssociatedTypeWitness();
    sub_23B1C67DC();
    swift_dynamicCast();
    v11 = v18;
  }
  else
  {
    sub_23AA94C08((uint64_t)&v16);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v11 = sub_23B1C6800();
    v12 = sub_23B1C7568();
    v14 = v13;
    v20 = sub_23B1C67DC();
    *(_QWORD *)&v19 = v11;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23AD035F8((uint64_t)&v19, v12, v14);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v11;
}

uint64_t sub_23AA7C384@<X0>(uint64_t a1@<X0>, int a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _BYTE *v34;
  unint64_t v35;
  id v36;
  int v37;
  id v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v63)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v64;
  uint64_t v65;
  void (*v66)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE v76[12];
  int v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t AssociatedTypeWitness;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id aBlock;
  unint64_t v101;
  id (*v102)(uint64_t, void *);
  void *v103;
  uint64_t (*v104)();
  uint64_t v105;
  uint64_t v106;

  v99 = a1;
  v85 = a3;
  v106 = *MEMORY[0x24BDAC8D0];
  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 744);
  v90 = v6;
  v8 = *(_QWORD *)(v6 + 728);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v89 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v87 = *(_QWORD *)(v89 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v88 = &v76[-v9];
  v10 = sub_23B1C5DC8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v86 = &v76[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = &v76[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v94 = &v76[-v17];
  v18 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v18);
  v93 = &v76[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v96 = v8;
  v97 = v7;
  v21 = type metadata accessor for SnapshotItem(255, v8, v7, v20);
  v84 = sub_23B1C6C98();
  v83 = *(_QWORD *)(v84 - 8);
  v22 = MEMORY[0x24BDAC7A8](v84);
  v80 = &v76[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = &v76[-v25];
  v91 = *(_QWORD *)(v21 - 8);
  v92 = v21;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v79 = &v76[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27);
  v30 = &v76[-v29];
  v77 = a2;
  if ((a2 & 1) != 0)
  {
    sub_23AA75310(v99, (uint64_t)v26);
    v32 = v91;
    v31 = v92;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v91 + 48))(v26, 1, v92) != 1)
    {
      v63 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v32 + 32);
      v63(v30, v26, v31);
      v64 = v85;
      v63(v85, v30, v31);
      return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v64, 0, 1, v31);
    }
    (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v26, v84);
  }
  if (qword_2542E6818 != -1)
    swift_once();
  v33 = (void *)qword_2542EDD28;
  v34 = v94;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v94, 1, 1, v10);
  aBlock = 0;
  v101 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  v36 = aBlock;
  v35 = v101;
  sub_23AA8A098((uint64_t)v34, (uint64_t)v16);
  v37 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10);
  v78 = v4;
  v82 = v36;
  if (v37 == 1)
  {
    v38 = v33;
    v39 = v86;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v39 = v86;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v86, v16, v10);
  }
  v40 = v93;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v93, v39, v10);
  v81 = *(int *)(v18 + 20);
  *(_QWORD *)&v40[v81] = v33;
  v41 = &v40[*(int *)(v18 + 24)];
  *(_QWORD *)v41 = "SQLDB: Lookup item by ID";
  *((_QWORD *)v41 + 1) = 24;
  v86 = v41;
  v41[16] = 2;
  v42 = v33;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v43 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v43 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v43 + 32) = v82;
  *(_QWORD *)(v43 + 40) = v35;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v39, v10);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v94, (uint64_t *)&unk_2542E67B8);
  v44 = v98;
  v45 = *(void **)(v98 + qword_2542EDF00);
  v47 = v88;
  v46 = v89;
  v48 = AssociatedTypeWitness;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v89 + 16))(v88, v99, AssociatedTypeWitness);
  v49 = (*(unsigned __int8 *)(v46 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v50 = (char *)swift_allocObject();
  *((_QWORD *)v50 + 2) = v96;
  v51 = v90;
  v52 = v97;
  *((_QWORD *)v50 + 3) = *(_QWORD *)(v90 + 736);
  *((_QWORD *)v50 + 4) = v52;
  *((_QWORD *)v50 + 5) = *(_QWORD *)(v51 + 752);
  *((_QWORD *)v50 + 6) = v44;
  (*(void (**)(char *, _BYTE *, uint64_t))(v46 + 32))(&v50[v49], v47, v48);
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = sub_23AABD8C4;
  *(_QWORD *)(v53 + 24) = v50;
  v104 = sub_23AA956C8;
  v105 = v53;
  aBlock = (id)MEMORY[0x24BDAC760];
  v101 = 1107296256;
  v102 = sub_23AA9432C;
  v103 = &block_descriptor_1050;
  v54 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v55 = objc_msgSend(v45, sel_fetchSwift_error_, v54, &aBlock);
  _Block_release(v54);
  v56 = aBlock;
  LOBYTE(v54) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v54 & 1) != 0)
    __break(1u);
  if (!v55)
  {
    sub_23B1C587C();

    swift_willThrow();
    goto LABEL_15;
  }
  if ((objc_msgSend(v55, sel_next) & 1) != 0)
  {
    v57 = v92;
    v58 = MEMORY[0x23B8613CC](&unk_23B1DD224, v92);
    v59 = v79;
    v60 = v78;
    sub_23AABEBB8(v55, 0, v57, v58, (uint64_t)v79);
    if (!v60)
    {
      if ((v77 & 1) != 0)
      {
        v71 = v91;
        v72 = (uint64_t)v80;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v91 + 16))(v80, v59, v57);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v72, 0, 1, v57);
        sub_23AA6A6E0(v99, v72, v73, v74);

        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v72, v84);
      }
      else
      {

        v71 = v91;
      }
      v75 = v85;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v71 + 32))(v85, v59, v57);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v75, 0, 1, v57);
      sub_23B1C6BD8();
      v61 = (uint64_t)v93;
      goto LABEL_16;
    }

LABEL_15:
    sub_23B1C6BD8();
    v61 = (uint64_t)v93;
LABEL_16:
    sub_23B1C5DA4();
    sub_23AA937BC(v61, type metadata accessor for Signpost);
    return swift_release();
  }
  v65 = v92;
  v66 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v91 + 56);
  v67 = (uint64_t)v80;
  v66(v80, 1, 1, v92);
  sub_23AA6A6E0(v99, v67, v68, v69);

  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v67, v84);
  v66(v85, 1, 1, v65);
  sub_23B1C6BD8();
  v70 = (uint64_t)v93;
  sub_23B1C5DA4();
  sub_23AA937BC(v70, type metadata accessor for Signpost);
  return swift_release();
}

void sub_23AA7CCB4(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (v7 <= *(_DWORD *)(v8 + 84))
    v9 = *(_DWORD *)(v8 + 84);
  else
    v9 = v7;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  if (v10 <= v5)
    v11 = v5;
  else
    v11 = v10;
  v12 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v13 = *(_DWORD *)(v12 + 84);
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = *(_DWORD *)(v12 + 84);
  if (v11 > v14)
    v14 = v11;
  if (v14 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  else
    v15 = v14;
  v16 = *(unsigned __int8 *)(v8 + 80);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v19 = *(_QWORD *)(v12 + 64);
  v20 = (v18
       + ((((((v19 + 12 + ((v19 + v18 + ((v18 + 12) & ~v18)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v18;
  if (!v13)
    ++v19;
  v17 = *(_DWORD *)(v6 + 80) & 0xF8 | v16 | 7;
  v21 = (((((((v18 | 7)
            + 16
            + ((*(_QWORD *)(v4 + 64)
              + ((*(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
              + v17) & ~v17)
            + ((((*(_QWORD *)(v8 + 64) + ((v16 + 8 + ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16) & ~(v18 | 7))
          + ((((((((((v19 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v15 >= a3)
  {
    v24 = 0;
  }
  else
  {
    if ((_DWORD)v21)
      v22 = 2;
    else
      v22 = a3 - v15 + 1;
    if (v22 >= 0x10000)
      v23 = 4;
    else
      v23 = 2;
    if (v22 < 0x100)
      v23 = 1;
    if (v22 >= 2)
      v24 = v23;
    else
      v24 = 0;
  }
  if (a2 > v15)
  {
    if ((_DWORD)v21)
    {
      v25 = ~v15 + a2;
      bzero(a1, v21);
      *a1 = v25;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X6 }
}

uint64_t sub_23AA7CF90@<X0>(uint64_t result@<X0>, unsigned int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  _QWORD *v25;
  _QWORD *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;

  *(_BYTE *)(v31 + v22) = 0;
  if (v32)
  {
    if (v21 == v7)
    {
      v24 = *(uint64_t (**)(uint64_t))(v18 + 56);
      result = v31;
      return v24(result);
    }
    result &= ((v10 + v31) & a3) + v8 + v12;
    if (v16 == v7)
    {
      if (v19 == v16)
      {
        v24 = *(uint64_t (**)(uint64_t))(v17 + 56);
        return v24(result);
      }
      v26 = (_QWORD *)((v11 + result) & 0xFFFFFFFFFFFFFFF8);
      if (v15 > 0x7FFFFFFE)
      {
        result = ((unint64_t)v26 + v30) & v28;
        v24 = *(uint64_t (**)(uint64_t))(v20 + 56);
        return v24(result);
      }
      if (v32 <= 0x7FFFFFFE)
      {
        *v26 = v32;
        return result;
      }
      v27 = v32 - 0x7FFFFFFF;
      *v26 = 0;
LABEL_22:
      *(_DWORD *)v26 = v27;
      return result;
    }
    v25 = (_QWORD *)(v9 + result);
    if (v6 < 0)
    {
      result = (a5 + (((unint64_t)v25 + a4) & v29)) & v23;
      if (a2 >= 0x7FFFFFFE)
      {
        v24 = *(uint64_t (**)(uint64_t))(a6 + 56);
        return v24(result);
      }
      v26 = (_QWORD *)((v14 + ((v13 + result) & v23)) & 0xFFFFFFFFFFFFFFF8);
      if (v32 <= 0x7FFFFFFE)
      {
        v26[1] = v32;
        return result;
      }
      v27 = v32 - 0x7FFFFFFF;
      *v26 = 0;
      v26[1] = 0;
      goto LABEL_22;
    }
    if ((v32 & 0x80000000) != 0)
    {
      *v25 = v32 ^ 0x80000000;
      v25[1] = 0;
    }
    else
    {
      v25[1] = v32 - 1;
    }
  }
  return result;
}

uint64_t sub_23AA7D14C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(unsigned int *)(v3 + 84);
  v45 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v45 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v44 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v44 - 8);
  v43 = *(_DWORD *)(v7 + 84);
  if (v6 <= v43)
    v8 = *(_DWORD *)(v7 + 84);
  else
    v8 = v6;
  if (v8 <= 0x7FFFFFFE)
    v9 = 2147483646;
  else
    v9 = v8;
  if (v9 <= v4)
    v10 = v4;
  else
    v10 = v9;
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = *(_DWORD *)(v12 + 84);
  if (v10 <= v14)
    v15 = v14;
  else
    v15 = v10;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  if ((_DWORD)v13)
    v17 = 7;
  else
    v17 = 8;
  if (!a2)
    return 0;
  v18 = v11;
  v19 = *(_QWORD *)(v3 + 64);
  v20 = *(unsigned __int8 *)(v3 + 80);
  v21 = v19 + v20;
  v22 = *(unsigned __int8 *)(v7 + 80);
  v23 = *(_DWORD *)(v5 + 80) & 0xF8 | v22 | 7;
  v24 = *(_QWORD *)(v5 + 64) + 7;
  v25 = ((((*(_QWORD *)(v7 + 64) + ((v22 + 8 + (v24 & 0xFFFFFFFFFFFFFFF8)) & ~v22) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = v26 | 7;
  v28 = (v26 | 7) + 16;
  v42 = v26 + 12;
  v29 = *(_QWORD *)(v12 + 64);
  v40 = v29 + v26;
  v41 = v29 + 12;
  if (v16 < a2)
  {
    if (((((((((v28 + ((v19 + (v21 & ~v20) + v23) & ~v23) + v25) & ~v27)
             + ((((((((((v17
                       + v29
                       + ((v26
                         + ((((((v41 + ((v40 + (v42 & ~v26)) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 10) & ~v26)) & 0xFFFFFFFFFFFFFFF8)
                     + 31) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + 327) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v30 = 2;
    else
      v30 = a2 - v16 + 1;
    if (v30 >= 0x10000)
      v31 = 4;
    else
      v31 = 2;
    if (v30 < 0x100)
      v31 = 1;
    if (v30 >= 2)
      v32 = v31;
    else
      v32 = 0;
    __asm { BR              X24 }
  }
  if ((_DWORD)v4 == v16)
  {
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    v18 = AssociatedTypeWitness;
    v35 = a1;
    v13 = v4;
    return v34(v35, v13, v18);
  }
  v35 = (((v21 + a1) & ~v20) + v19 + v23) & ~v23;
  if (v9 == v16)
  {
    if ((_DWORD)v6 == v9)
    {
      v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      v13 = v6;
      v18 = v45;
      return v34(v35, v13, v18);
    }
    v38 = (unint64_t *)((v24 + v35) & 0xFFFFFFFFFFFFFFF8);
    if (v8 > 0x7FFFFFFE)
    {
      v35 = ((unint64_t)v38 + v22 + 8) & ~v22;
      v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
      v13 = v43;
      v18 = v44;
      return v34(v35, v13, v18);
    }
    v39 = *v38;
    goto LABEL_53;
  }
  v36 = v25 + v35;
  if ((v15 & 0x80000000) != 0)
  {
    v35 = (v42 + ((v28 + v36) & ~v27)) & ~v26;
    if (v13 >= 0x7FFFFFFE)
    {
      v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
      return v34(v35, v13, v18);
    }
    v39 = *(_QWORD *)(((v41 + ((v40 + v35) & ~v26)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_53:
    if (v39 >= 0xFFFFFFFF)
      LODWORD(v39) = -1;
    if ((v39 + 1) >= 2)
      return v39;
    else
      return 0;
  }
  v37 = *(_QWORD *)(v36 + 8);
  if (v37 >= 0xFFFFFFFF)
    LODWORD(v37) = -1;
  return (v37 + 1);
}

uint64_t objectdestroy_24Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t objectdestroy_424Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_3174Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AA7D644(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  _QWORD v11[24];

  v11[9] = a2;
  v11[6] = a1;
  v11[5] = *(_QWORD *)(*(_QWORD *)v2 + 576);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_23B1C6C98();
  v11[15] = *(_QWORD *)(v4 - 8);
  v11[16] = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v11[13] = (char *)v11 - v6;
  v11[17] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v5);
  v11[2] = (char *)v11 - v7;
  v8 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedConformanceWitness();
  v11[18] = AssociatedTypeWitness;
  v11[19] = v8;
  v11[20] = AssociatedTypeWitness;
  v11[21] = AssociatedConformanceWitness;
  v11[10] = AssociatedConformanceWitness;
  v11[11] = v10;
  v11[22] = v10;
  type metadata accessor for ReconciliationID();
}

void sub_23AA7D794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v12 - 216) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v12 - 208) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 176) = (char *)&a9 - v13;
  v14 = sub_23B1C6C98();
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v12 - 248) = v14;
  *(_QWORD *)(v12 - 240) = v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v12 - 264) = (char *)&a9 - v17;
  *(_QWORD *)(v12 - 120) = v10;
  *(_QWORD *)(v12 - 112) = v11;
  v18 = *(_QWORD *)(v12 - 232);
  *(_QWORD *)(v12 - 104) = v9;
  *(_QWORD *)(v12 - 96) = v18;
  type metadata accessor for ItemReconciliation();
}

void sub_23AA7D844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v1;
  type metadata accessor for ReconciliationIDObjectCacheValue();
}

void sub_23AA7D888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  *(_QWORD *)(v4 - 232) = v2;
  v5(v0, v3, v2);
  sub_23AAB7CF4();
}

uint64_t sub_23AA7D8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v2);
  v9 = v6;
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v6);
  *(_QWORD *)(v7 - 200) = a1;
  if (v10 != 1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v4 + 32))(*(_QWORD *)(v7 - 264), v1, v6);
    v13 = *(_QWORD *)(v7 - 128);
    *(_QWORD *)(v7 - 120) = v6;
    *(_QWORD *)(v7 - 112) = v13;
    v14 = *(_QWORD *)(v7 - 184);
    *(_QWORD *)(v7 - 104) = *(_QWORD *)(v7 - 192);
    *(_QWORD *)(v7 - 96) = v14;
    type metadata accessor for ReconciliationIDObject();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
  v11 = *(_QWORD *)(v7 - 128);
  v12 = *(_QWORD *)(v7 - 192);
  v16 = *(_QWORD *)(v7 - 152);
  v15 = *(_QWORD *)(v7 - 144);
  v17 = *(_QWORD *)(v7 - 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v3 + *(int *)(*(_QWORD *)(v7 - 232) + 52), v15);
  v18 = *(_QWORD *)(v7 - 136);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v17, 1, v11) != 1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v18 + 32))(*(_QWORD *)(v7 - 256), v17, v11);
    *(_QWORD *)(v7 - 120) = v9;
    *(_QWORD *)(v7 - 112) = v11;
    v19 = *(_QWORD *)(v7 - 184);
    *(_QWORD *)(v7 - 104) = v12;
    *(_QWORD *)(v7 - 96) = v19;
    type metadata accessor for ReconciliationIDObject();
  }
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
}

uint64_t sub_23AA7DB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23AABC70C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_303;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23AA7DCC0(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;

  switch(a1)
  {
    case 0x1Cu:
      if (a2 != 28)
        goto LABEL_15;
      goto LABEL_9;
    case 0x1Du:
      if (a2 == 29)
        goto LABEL_9;
      goto LABEL_15;
    case 0x1Eu:
      if (a2 != 30)
        goto LABEL_15;
      goto LABEL_9;
    case 0x1Fu:
      if (a2 != 31)
        goto LABEL_15;
      goto LABEL_9;
    case 0x20u:
      if (a2 != 32)
        goto LABEL_15;
      goto LABEL_9;
    case 0x21u:
      if (a2 != 33)
        goto LABEL_15;
      goto LABEL_9;
    case 0x22u:
      if (a2 != 34)
        goto LABEL_15;
LABEL_9:
      result = 1;
      break;
    default:
      if ((a2 - 28) < 7u)
      {
LABEL_15:
        result = 0;
      }
      else
      {
        v3 = sub_23AAB0660(a1);
        v5 = v4;
        if (v3 == sub_23AAB0660(a2) && v5 == v6)
        {
          swift_bridgeObjectRelease_n();
          result = 1;
        }
        else
        {
          v8 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = v8 & 1;
        }
      }
      break;
  }
  return result;
}

uint64_t sub_23AA7DE00(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, _BYTE *a6, void (*a7)(id, uint64_t), uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v37 = a4;
  v38 = a5;
  v41 = a3;
  v39 = a1;
  v40 = a2;
  v11 = sub_23B1C602C();
  v36 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C60A4();
  v34 = *(_QWORD *)(v14 - 8);
  v35 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a7;
  *(_QWORD *)(v17 + 24) = a8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_23ACFC48C;
  *(_QWORD *)(v18 + 24) = v17;
  v19 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v20 = (void *)MEMORY[0x23B8615C4](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      v21 = sub_23AC61E18();
      a7(v21, 256);

      swift_release();
      swift_release();

      return swift_release();
    }

  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v22 = (void *)MEMORY[0x23B8615C4](v19);
    if (v22)
    {
      v23 = v22;
      v33 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_3988;
      v24 = _Block_copy(aBlock);
      sub_23B1C6068();
      v42 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v25 = v33;
      MEMORY[0x23B85F470](0, v16, v13, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
    }
  }
  v26 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v27 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a6;
  v28[3] = sub_23ACFC490;
  v29 = v37;
  v30 = v38;
  v28[4] = v18;
  v28[5] = v29;
  v28[6] = v30;
  v31 = a6;
  swift_retain();
  swift_retain();
  sub_23AA81A30(v39, v40, v41, v26, v27, (uint64_t)sub_23AAB92FC, (uint64_t)v28);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23AA7E17C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_23AA7E1A8(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_23AA7E1A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7278);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AA7E410();
  sub_23B1C7520();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10 = 0;
    sub_23AA7E3CC();
    sub_23B1C71C0();
    v7 = v11;
    type metadata accessor for fpfs_finder_color(0);
    v10 = 1;
    sub_23AA7E38C(qword_2569E7280, (uint64_t (*)(uint64_t))type metadata accessor for fpfs_finder_color, (uint64_t)&unk_23B1DD708);
    swift_bridgeObjectRetain();
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

void type metadata accessor for fpfs_finder_color(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E16D0);
}

uint64_t sub_23AA7E38C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B8613CC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23AA7E3CC()
{
  unint64_t result;

  result = qword_2569E2470;
  if (!qword_2569E2470)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1CF4D4, &type metadata for Filename);
    atomic_store(result, (unint64_t *)&qword_2569E2470);
  }
  return result;
}

unint64_t sub_23AA7E410()
{
  unint64_t result;

  result = qword_2569E71F0;
  if (!qword_2569E71F0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DDAE8, &type metadata for Tag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E71F0);
  }
  return result;
}

uint64_t sub_23AA7E454(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, _BYTE *))
{
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  void *v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E4788 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v27 = sub_23B1C7568();
  v28 = v10;
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_beginAccess();
  v11 = off_2542E4780;
  if (*((_QWORD *)off_2542E4780 + 2) && (v12 = sub_23AAAF4C4(v27, v28), (v13 & 1) != 0))
  {
    v14 = *(_QWORD *)(v11[7] + 16 * v12);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = swift_endAccess();
    v16 = a4(v15);
    swift_bridgeObjectRetain();
    v17 = a5(v16, a1, a2, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
    sub_23AAB5A28((unint64_t *)&qword_2542E74B0, &qword_2542E54E8, MEMORY[0x24BEE12B0]);
    v14 = sub_23B1C6338();
    v19 = v18;
    swift_bridgeObjectRelease();
    v27 = sub_23B1C7568();
    v28 = v20;
    sub_23B1C64F4();
    sub_23B1C64F4();
    v21 = v27;
    v22 = v28;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = off_2542E4780;
    off_2542E4780 = (_UNKNOWN *)0x8000000000000000;
    sub_23AD24F84(v14, v19, v21, v22, isUniquelyReferenced_nonNull_native);
    off_2542E4780 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v14;
}

uint64_t sub_23AA7E744(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2) & 1;
}

uint64_t sub_23AA7E76C(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAB644C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_23AA7E774()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_23AA7E798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23B1C74A8();
    sub_23B1C64A0();
    v6 = sub_23B1C74E4();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_23B1C7388() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_23B1C7388() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_23AA7E8CC(void *a1, char a2, uint64_t a3)
{
  id v6;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23AABB5BC(3044466, 0xE300000000000000);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a2 & 1) != 0)
  {
    sub_23AABB590(0x726F6365642E7066, 0xEE005F6E6F697461);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_retain();
  v6 = a1;
  sub_23B0544A4(a3, v6);
  swift_release();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
  sub_23AAB5A28((unint64_t *)&qword_2542E74B0, &qword_2542E54E8, MEMORY[0x24BEE12B0]);
  sub_23B1C6338();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23AA7EAC0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  size_t v44;
  uint64_t v45;
  _BYTE *v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  void *v55;
  const void *v56;
  unsigned int (*v57)(const void *, uint64_t, uint64_t);
  int v58;
  size_t v59;
  size_t v60;
  _QWORD *v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  _QWORD *v78;
  _QWORD *v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  int v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  uint64_t v101;
  id v102;
  _OWORD *v103;
  __int128 *v104;
  __int128 v105;
  unint64_t v106;
  unint64_t v107;
  __int128 v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v116;
  void *v117;
  uint64_t v118;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v118 = a1;
  v9 = (v7 + v8 + a1) & ~v8;
  v10 = (v7 + v8 + a2) & ~v8;
  v6(v9, v10, AssociatedTypeWitness);
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v13 | v16 | 7;
  v18 = (v7 + v17 + v9) & ~v17;
  v19 = (v7 + v17 + v10) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v18, v19, v11);
  v20 = *(_QWORD *)(v12 + 64) + 7;
  v21 = (_QWORD *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = ((unint64_t)v21 + v16 + 8) & ~v16;
  v24 = ((unint64_t)v22 + v16 + 8) & ~v16;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v25(v23, v24, v14);
  v26 = *(_QWORD *)(v15 + 64) + 7;
  v27 = (_QWORD *)((v26 + v23) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)((v26 + v24) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v28;
  v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  v29[1] = v30[1];
  v31 = ((((v26 + ((v16 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v32 = (_QWORD *)(v31 + v18);
  v33 = v31 + v19;
  *v32 = *(_QWORD *)(v31 + v19);
  v32[1] = *(_QWORD *)(v31 + v19 + 8);
  v34 = sub_23B1C5BDC();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = (v36 | 7) + 16;
  v38 = ((unint64_t)v32 + v37) & ~(v36 | 7);
  v39 = (v37 + v33) & ~(v36 | 7);
  *(_BYTE *)v38 = *(_BYTE *)v39;
  v40 = *(_BYTE *)(v39 + 8);
  *(_DWORD *)(v38 + 4) = *(_DWORD *)(v39 + 4);
  *(_BYTE *)(v38 + 8) = v40;
  *(_WORD *)(v38 + 10) = *(_WORD *)(v39 + 0xA);
  v116 = v38;
  v41 = (v36 + 12 + v38) & ~v36;
  v42 = (v36 + 12 + v39) & ~v36;
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43(v41, v42, v34);
  v44 = *(_QWORD *)(v35 + 64);
  v45 = (v44 + v36 + v42) & ~v36;
  v43((v44 + v36 + v41) & ~v36, v45, v34);
  v46 = (_BYTE *)(((v44 + v36 + v41) & ~v36) + v44);
  *v46 = *(_BYTE *)(v45 + v44);
  v46[1] = *(_BYTE *)(v45 + v44 + 1);
  v46[2] = *(_BYTE *)(v45 + v44 + 2);
  v46[3] = *(_BYTE *)(v45 + v44 + 3);
  v46[4] = *(_BYTE *)(v45 + v44 + 4);
  v47 = (unint64_t)(v46 + 12) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v45 + v44 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_QWORD *)(v47 + 8) = *(_QWORD *)(v48 + 8);
  *(_BYTE *)(v47 + 16) = *(_BYTE *)(v48 + 16);
  *(_BYTE *)(v47 + 17) = *(_BYTE *)(v48 + 17);
  *(_BYTE *)(v47 + 18) = *(_BYTE *)(v48 + 18);
  *(_BYTE *)(v47 + 19) = *(_BYTE *)(v48 + 19);
  v49 = (v47 + 27) & 0xFFFFFFFFFFFFFFF8;
  v50 = (v48 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  *(_BYTE *)(v49 + 9) = *(_BYTE *)(v50 + 9);
  *(_BYTE *)(v49 + 10) = *(_BYTE *)(v50 + 10);
  *(_BYTE *)(v49 + 11) = *(_BYTE *)(v50 + 11);
  *(_BYTE *)(v49 + 12) = *(_BYTE *)(v50 + 12);
  v51 = (_QWORD *)((v47 + 47) & 0xFFFFFFFFFFFFF8);
  v52 = (_QWORD *)((v48 + 47) & 0xFFFFFFFFFFFFF8);
  *v51 = *v52;
  v53 = ((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8;
  v54 = ((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  *(_BYTE *)(v53 + 9) = *(_BYTE *)(v54 + 9);
  v55 = (void *)((v36 + 10 + v53) & ~v36);
  v56 = (const void *)((v36 + 10 + v54) & ~v36);
  v57 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  if (v57(v56, 1, v34))
  {
    v58 = *(_DWORD *)(v35 + 84);
    if (v58)
      v59 = v44;
    else
      v59 = v44 + 1;
    memcpy(v55, v56, v59);
  }
  else
  {
    v43((uint64_t)v55, (uint64_t)v56, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v55, 0, 1, v34);
    v58 = *(_DWORD *)(v35 + 84);
  }
  if (v58)
    v60 = v44;
  else
    v60 = v44 + 1;
  v61 = (_QWORD *)(((unint64_t)v55 + v60 + 7) & 0xFFFFFFFFFFFFFFF8);
  v62 = (_QWORD *)(((unint64_t)v56 + v60 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v61 = *v62;
  v63 = ((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8;
  v64 = ((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8;
  v65 = *(_QWORD *)v64;
  *(_BYTE *)(v63 + 8) = *(_BYTE *)(v64 + 8);
  *(_QWORD *)v63 = v65;
  v66 = (_QWORD *)(((unint64_t)v61 + 31) & 0xFFFFFFFFFFFFF8);
  v67 = (_QWORD *)(((unint64_t)v62 + 31) & 0xFFFFFFFFFFFFF8);
  *v66 = *v67;
  v68 = ((unint64_t)v66 + 15) & 0xFFFFFFFFFFFFFFF8;
  v69 = (uint64_t *)(((unint64_t)v67 + 15) & 0xFFFFFFFFFFFFFFF8);
  v70 = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v70 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v68 = *(_OWORD *)v69;
  }
  else
  {
    v71 = *v69;
    sub_23AAAE668(*v69, v70);
    *(_QWORD *)v68 = v71;
    *(_QWORD *)(v68 + 8) = v70;
  }
  v72 = (v68 + 19) & 0xFFFFFFFFFFFFFFF8;
  v73 = ((unint64_t)v69 + 19) & 0xFFFFFFFFFFFFFFF8;
  v74 = *(_QWORD *)v73;
  *(_BYTE *)(v72 + 8) = *(_BYTE *)(v73 + 8);
  *(_QWORD *)v72 = v74;
  *(_BYTE *)(v72 + 9) = *(_BYTE *)(v73 + 9);
  v75 = (v72 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v76 = (v73 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v77 = *(_DWORD *)v76;
  *(_BYTE *)(v75 + 4) = *(_BYTE *)(v76 + 4);
  *(_DWORD *)v75 = v77;
  v78 = (_QWORD *)((v72 + 25) & 0xFFFFFFFFFFFFFFF8);
  v79 = (_QWORD *)((v73 + 25) & 0xFFFFFFFFFFFFFFF8);
  *v78 = *v79;
  v78[1] = v79[1];
  v80 = ((((((((((((v36
                  + 10
                  + ((((((v44 + ((((v36 + 12) | v36) + v44) & ~v36) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v36)
                + v60
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v81 = v80 + v116;
  v82 = v80 + v39;
  v83 = *(_QWORD *)(v80 + v39 + 16);
  if (v83 >= 0xFFFFFFFF)
    LODWORD(v83) = -1;
  v84 = v83 - 1;
  swift_bridgeObjectRetain();
  if (v84 < 0)
  {
    *(_QWORD *)v81 = *(_QWORD *)v82;
    *(_BYTE *)(v81 + 8) = *(_BYTE *)(v82 + 8);
    *(_BYTE *)(v81 + 9) = *(_BYTE *)(v82 + 9);
    v97 = *(void **)(v82 + 16);
    v98 = v97;
    *(_QWORD *)(v81 + 16) = v97;
    v99 = *(void **)(v82 + 24);
    v100 = v99;
    *(_QWORD *)(v81 + 24) = v99;
    *(_BYTE *)(v81 + 32) = *(_BYTE *)(v82 + 32);
    *(_BYTE *)(v81 + 33) = *(_BYTE *)(v82 + 33);
    *(_BYTE *)(v81 + 34) = *(_BYTE *)(v82 + 34);
    *(_QWORD *)(v81 + 40) = *(_QWORD *)(v82 + 40);
    *(_QWORD *)(v81 + 48) = *(_QWORD *)(v82 + 48);
    *(_QWORD *)(v81 + 56) = *(_QWORD *)(v82 + 56);
    *(_QWORD *)(v81 + 64) = *(_QWORD *)(v82 + 64);
    *(_BYTE *)(v81 + 72) = *(_BYTE *)(v82 + 72);
    *(_QWORD *)(v81 + 80) = *(_QWORD *)(v82 + 80);
    *(_QWORD *)(v81 + 88) = *(_QWORD *)(v82 + 88);
    v117 = *(void **)(v82 + 96);
    *(_QWORD *)(v81 + 96) = v117;
    *(_BYTE *)(v81 + 104) = *(_BYTE *)(v82 + 104);
    *(_BYTE *)(v81 + 105) = *(_BYTE *)(v82 + 105);
    *(_QWORD *)(v81 + 112) = *(_QWORD *)(v82 + 112);
    *(_QWORD *)(v81 + 120) = *(_QWORD *)(v82 + 120);
    *(_QWORD *)(v81 + 128) = *(_QWORD *)(v82 + 128);
    *(_QWORD *)(v81 + 136) = *(_QWORD *)(v82 + 136);
    *(_QWORD *)(v81 + 144) = *(_QWORD *)(v82 + 144);
    *(_QWORD *)(v81 + 152) = *(_QWORD *)(v82 + 152);
    *(_QWORD *)(v81 + 160) = *(_QWORD *)(v82 + 160);
    *(_QWORD *)(v81 + 168) = *(_QWORD *)(v82 + 168);
    *(_BYTE *)(v81 + 176) = *(_BYTE *)(v82 + 176);
    *(_QWORD *)(v81 + 184) = *(_QWORD *)(v82 + 184);
    v101 = *(_QWORD *)(v82 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v102 = v117;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v101)
    {
      *(_QWORD *)(v81 + 192) = v101;
      *(_QWORD *)(v81 + 200) = *(_QWORD *)(v82 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v81 + 192) = *(_OWORD *)(v82 + 192);
    }
    *(_QWORD *)(v81 + 208) = *(_QWORD *)(v82 + 208);
    *(_QWORD *)(v81 + 216) = *(_QWORD *)(v82 + 216);
    *(_QWORD *)(v81 + 224) = *(_QWORD *)(v82 + 224);
    *(_QWORD *)(v81 + 232) = *(_QWORD *)(v82 + 232);
    *(_QWORD *)(v81 + 240) = *(_QWORD *)(v82 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v85 = *(_OWORD *)v82;
    v86 = *(_OWORD *)(v82 + 16);
    v87 = *(_OWORD *)(v82 + 48);
    *(_OWORD *)(v81 + 32) = *(_OWORD *)(v82 + 32);
    *(_OWORD *)(v81 + 48) = v87;
    *(_OWORD *)v81 = v85;
    *(_OWORD *)(v81 + 16) = v86;
    v88 = *(_OWORD *)(v82 + 64);
    v89 = *(_OWORD *)(v82 + 80);
    v90 = *(_OWORD *)(v82 + 112);
    *(_OWORD *)(v81 + 96) = *(_OWORD *)(v82 + 96);
    *(_OWORD *)(v81 + 112) = v90;
    *(_OWORD *)(v81 + 64) = v88;
    *(_OWORD *)(v81 + 80) = v89;
    v91 = *(_OWORD *)(v82 + 128);
    v92 = *(_OWORD *)(v82 + 144);
    v93 = *(_OWORD *)(v82 + 176);
    *(_OWORD *)(v81 + 160) = *(_OWORD *)(v82 + 160);
    *(_OWORD *)(v81 + 176) = v93;
    *(_OWORD *)(v81 + 128) = v91;
    *(_OWORD *)(v81 + 144) = v92;
    v94 = *(_OWORD *)(v82 + 192);
    v95 = *(_OWORD *)(v82 + 208);
    v96 = *(_OWORD *)(v82 + 224);
    *(_QWORD *)(v81 + 240) = *(_QWORD *)(v82 + 240);
    *(_OWORD *)(v81 + 208) = v95;
    *(_OWORD *)(v81 + 224) = v96;
    *(_OWORD *)(v81 + 192) = v94;
  }
  v103 = (_OWORD *)((v81 + 255) & 0xFFFFFFFFFFFFFFF8);
  v104 = (__int128 *)((v82 + 255) & 0xFFFFFFFFFFFFFFF8);
  v105 = *v104;
  *(_OWORD *)((char *)v103 + 9) = *(__int128 *)((char *)v104 + 9);
  *v103 = v105;
  v106 = (v81 + 287) & 0xFFFFFFFFFFFFFFF8;
  v107 = (v82 + 287) & 0xFFFFFFFFFFFFFFF8;
  v108 = *(_OWORD *)v107;
  *(_BYTE *)(v106 + 16) = *(_BYTE *)(v107 + 16);
  *(_OWORD *)v106 = v108;
  v109 = (_QWORD *)((v81 + 311) & 0xFFFFFFFFFFFFF8);
  v110 = (v82 + 311) & 0xFFFFFFFFFFFFF8;
  v111 = *(_QWORD *)v110;
  v110 += 15;
  *v109 = v111;
  v112 = (_QWORD *)(((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8);
  v113 = *(_QWORD *)(v110 & 0xFFFFFFFFFFFFFFF8);
  v114 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_23AA7F2D4(v113, v114);
  *v112 = v113;
  v112[1] = v114;
  return v118;
}

uint64_t sub_23AA7F2D4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if ((a2 >> 62) <= 1)
    return swift_retain();
  return result;
}

unint64_t sub_23AA7F2F4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD *v19;
  char *v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  char isEscapingClosureAtFileLocation;
  uint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  id aBlock[7];

  v36 = a2;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = sub_23B1C5DC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v32 - v13;
  v15 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v15);
  v37 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
    return sub_23AA6E098(MEMORY[0x24BEE4AF8]);
  v34 = a1;
  v35 = v2;
  if (qword_2542E6818 != -1)
    swift_once();
  v17 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
  sub_23AA8EFC8((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    v18 = v17;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  }
  v20 = v37;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v37, v8, v5);
  v33 = *(int *)(v15 + 20);
  *(_QWORD *)&v20[v33] = v17;
  v21 = &v20[*(int *)(v15 + 24)];
  *(_QWORD *)v21 = "SQLDB: Decoration Query";
  *((_QWORD *)v21 + 1) = 23;
  v32[1] = v21;
  v21[16] = 2;
  v22 = v17;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E67B8);
  v23 = v35;
  v24 = *(void **)(v35 + 24);
  v25 = swift_allocObject();
  *(_BYTE *)(v25 + 16) = v36 & 1;
  *(_QWORD *)(v25 + 24) = v34;
  *(_QWORD *)(v25 + 32) = v23;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = sub_23AAB8278;
  v19[3] = v25;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v19;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_892;
  v26 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v27 = objc_msgSend(v24, sel_fetchSwift_error_, v26, aBlock);
  _Block_release(v26);
  v28 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v27)
  {
    v19 = (_QWORD *)sub_23AA6E098(MEMORY[0x24BEE4AF8]);
    aBlock[0] = v19;
    if (objc_msgSend(v27, sel_next))
    {
      while (1)
      {
        v19 = (_QWORD *)MEMORY[0x23B8601A8]();
        sub_23AA86DE0((uint64_t)v27);
        if (v3)
          break;
        objc_autoreleasePoolPop(v19);
        if ((objc_msgSend(v27, sel_next) & 1) == 0)
        {

          v19 = aBlock[0];
          goto LABEL_17;
        }
      }
      objc_autoreleasePoolPop(v19);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
LABEL_17:
  sub_23B1C6BD8();
  v30 = (uint64_t)v37;
  sub_23B1C5DA4();
  sub_23AA937BC(v30, type metadata accessor for Signpost);
  swift_release();
  return (unint64_t)v19;
}

void sub_23AA7F7FC()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AA7F870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;

  *(_QWORD *)(v13 - 328) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 336) = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 216) = v11;
  *(_QWORD *)(v13 - 200) = v9;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v13 - 224) = v12;
  *(_QWORD *)(v13 - 208) = v10;
  v18 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v13 - 144) = AssociatedTypeWitness;
  *(_QWORD *)(v13 - 136) = v16;
  *(_QWORD *)(v13 - 128) = AssociatedConformanceWitness;
  *(_QWORD *)(v13 - 120) = v18;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AA7F954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  id v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t TupleTypeMetadata2;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[64];

  v4 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 - 232) = v4;
  *(_QWORD *)(v2 - 248) = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v2 - 240) = &v62[-v5];
  v6 = sub_23B1C5DC8();
  *(_QWORD *)(v2 - 256) = v6;
  *(_QWORD *)(v2 - 264) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v2 - 272) = &v62[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v62[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v2 - 160) = &v62[-v12];
  v13 = type metadata accessor for Signpost(0);
  *(_QWORD *)(v2 - 280) = v13;
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v2 - 168) = &v62[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v2 - 296) = v1;
  swift_getTupleTypeMetadata2();
  v15 = sub_23B1C6C98();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v18 = *(_DWORD *)(v2 - 180);
  *(_QWORD *)(v2 - 192) = a1;
  if ((v18 & 1) != 0)
    sub_23AA9A774();
  if (qword_2542E6818 != -1)
    swift_once();
  v19 = (void *)qword_2542EDD28;
  v20 = *(_QWORD *)(v2 - 264);
  v21 = *(_QWORD *)(v2 - 160);
  v22 = *(_QWORD *)(v2 - 256);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v21, 1, 1, v22);
  v23 = sub_23AA6EBC4(a1);
  v25 = v24;
  sub_23AA8EFC8(v21, (uint64_t)v11, (uint64_t *)&unk_2542E67B8);
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v22);
  v27 = *(_QWORD *)(v2 - 272);
  *(_QWORD *)(v2 - 312) = v23;
  if (v26 == 1)
  {
    v28 = v19;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v20 + 32))(v27, v11, v22);
  }
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v30 = v20;
  v31 = *(_QWORD *)(v2 - 168);
  v29(v31, v27, v22);
  v32 = *(_QWORD *)(v2 - 280);
  v33 = *(int *)(v32 + 20);
  *(_QWORD *)(v2 - 320) = v33;
  *(_QWORD *)(v31 + v33) = v19;
  v34 = v31 + *(int *)(v32 + 24);
  *(_QWORD *)v34 = "SQLDB: fetch reconciliation";
  *(_QWORD *)(v34 + 8) = 27;
  *(_QWORD *)(v2 - 280) = v34;
  *(_BYTE *)(v34 + 16) = 2;
  v35 = v19;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v36 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v36 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v2 - 312);
  *(_QWORD *)(v36 + 40) = v25;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v27, v22);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(*(_QWORD *)(v2 - 160), (uint64_t *)&unk_2542E67B8);
  v37 = *(_QWORD *)(v2 - 176);
  v38 = *(void **)(v37 + 24);
  v40 = *(_QWORD *)(v2 - 240);
  v39 = *(_QWORD *)(v2 - 232);
  v41 = *(_QWORD *)(v2 - 192);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 16))(v40, *(_QWORD *)(v2 - 152), v41);
  v42 = (*(unsigned __int8 *)(v39 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v43 = (char *)swift_allocObject();
  v44 = *(_QWORD *)(v2 - 208);
  *((_QWORD *)v43 + 2) = *(_QWORD *)(v2 - 200);
  *((_QWORD *)v43 + 3) = v44;
  v45 = *(_QWORD *)(v2 - 224);
  *((_QWORD *)v43 + 4) = *(_QWORD *)(v2 - 216);
  *((_QWORD *)v43 + 5) = v45;
  *((_QWORD *)v43 + 6) = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(&v43[v42], v40, v41);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = sub_23AA71884;
  *(_QWORD *)(v46 + 24) = v43;
  *(_QWORD *)(v2 - 112) = sub_23AA956C8;
  *(_QWORD *)(v2 - 104) = v46;
  *(_QWORD *)(v2 - 144) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v2 - 136) = 1107296256;
  *(_QWORD *)(v2 - 128) = sub_23AA9432C;
  *(_QWORD *)(v2 - 120) = &block_descriptor_1368;
  v47 = _Block_copy((const void *)(v2 - 144));
  swift_retain();
  swift_retain();
  swift_release();
  *(_QWORD *)(v2 - 144) = 0;
  v48 = objc_msgSend(v38, sel_fetchSwift_error_, v47, v2 - 144);
  _Block_release(v47);
  v49 = *(id *)(v2 - 144);
  LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v39 & 1) != 0)
    __break(1u);
  if (v48)
  {
    if ((objc_msgSend(v48, sel_next) & 1) == 0)
    {
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(*(_QWORD *)(v2 - 304), 1, 1, TupleTypeMetadata2);

      sub_23B1C6BD8();
      v56 = *(_QWORD *)(v2 - 168);
      sub_23B1C5DA4();
      sub_23AA937BC(v56, type metadata accessor for Signpost);
      return swift_release();
    }
    v50 = objc_msgSend(v48, sel_longAtIndex_, 0);
    v51 = *(_QWORD *)(v2 - 296);
    v52 = MEMORY[0x23B8613CC](&unk_23B1D8268, v51);
    v53 = *(_QWORD *)(v2 - 336);
    v54 = *(_QWORD *)(v2 - 288);
    sub_23AABEBB8(v48, 1, v51, v52, v53);
    if (v54)
    {

    }
    else
    {
      if ((*(_DWORD *)(v2 - 180) & 1) != 0)
        sub_23AA7D644(v53, (uint64_t)v50);

      v58 = swift_getTupleTypeMetadata2();
      v59 = *(int *)(v58 + 48);
      v60 = *(_QWORD *)(v2 - 304);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 328) + 32))(v60, v53, v51);
      *(_QWORD *)(v60 + v59) = v50;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v60, 0, 1, v58);
    }
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  sub_23B1C6BD8();
  v61 = *(_QWORD *)(v2 - 168);
  sub_23B1C5DA4();
  sub_23AA937BC(v61, type metadata accessor for Signpost);
  return swift_release();
}

char *sub_23AA801CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *Strong;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD *v43;
  id v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  int *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;

  v86 = a4;
  v85 = a3;
  v79 = a2;
  v84 = a1;
  v5 = sub_23B1C5E4C();
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v80 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6760);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C60EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = v4[2];
  v21 = *(void **)(v20 + 64);
  *v19 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v22 = v21;
  LOBYTE(v21) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_41:
    swift_once();
    goto LABEL_20;
  }
  v87 = v20;
  v81 = type metadata accessor for FPFileTree();
  swift_dynamicCastClassUnconditional();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v24 = v86;
  swift_bridgeObjectRetain();
  swift_retain();
  v25 = v84;
  v86 = sub_23ADAECC0(v84, Strong, 1, (uint64_t)v24, (uint64_t)v4);
  v78 = 0;

  swift_release();
  sub_23AA907B0(v25, (uint64_t)v15, type metadata accessor for VFSItem);
  sub_23AA8EFC8((uint64_t)&v15[*(int *)(v13 + 48)], (uint64_t)v9, &qword_2542E6760);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v9, 1, v83) == 1)
  {
    v26 = sub_23B1C5A08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 1, 1, v26);
    sub_23AA8A05C((uint64_t)v9, &qword_2542E6760);
  }
  else
  {
    sub_23AA724E8((uint64_t)v9, (uint64_t)v12, (uint64_t *)&unk_2542E6740);
  }
  v27 = sub_23B1C5A08();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v12, 1, v27) != 1)
  {
    v29 = (void *)sub_23B1C5954();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v27);
  }
  v12 = (char *)v86;
  objc_msgSend(v86, sel_setFileURL_, v29, v76, v77);

  sub_23AA937BC((uint64_t)v15, type metadata accessor for VFSItem);
  v30 = *(_QWORD *)(v25 + *(int *)(v13 + 36));
  v31 = *(_QWORD *)(v25 + 32);
  v32 = *(_QWORD *)(v25 + 40);
  swift_bridgeObjectRelease_n();
  objc_msgSend(v12, sel_setFileID_, v30);
  swift_bridgeObjectRetain();
  v33 = sub_23AAAE580(v31, v32);
  v35 = v34;
  swift_bridgeObjectRelease();
  if (v35)
  {
    if (v33 == 46 && v35 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      objc_msgSend(v12, sel_setFileSystemFlags_, (unint64_t)objc_msgSend(v12, sel_fileSystemFlags) | 8);
      goto LABEL_13;
    }
    v36 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v36 & 1) != 0)
      goto LABEL_12;
  }
LABEL_13:
  if ((v85 & 1) == 0)
  {
    v37 = v78;
    sub_23AA859B8(v12, v79 | 1);
    if (v37)
    {
      v38 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v39 = v37;
      v40 = sub_23B1C5E40();
      v41 = sub_23B1C6AAC();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v42 = 138412290;
        swift_getErrorValue();
        v44 = sub_23B0D9CF0(v89);
        v88 = v44;
        sub_23B1C6CBC();
        *v43 = v44;

        _os_log_impl(&dword_23AA66000, v40, v41, "cannot decorate item: %@", v42, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        v45 = v43;
        v12 = (char *)v86;
        MEMORY[0x23B8614BC](v45, -1, -1);
        MEMORY[0x23B8614BC](v42, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v76 + 8))(v80, v77);
    }
  }
  v46 = objc_msgSend(v12, sel_itemID);
  v4 = objc_msgSend(v46, sel_identifier);

  if (qword_2542E1FE0 != -1)
    goto LABEL_41;
LABEL_20:
  v47 = sub_23B1C63E0();
  v49 = v48;
  if (v47 == sub_23B1C63E0() && v49 == v50)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v51 = sub_23B1C7388();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v51 & 1) == 0)
      return v12;
  }
  swift_dynamicCastClassUnconditional();
  v52 = (void *)swift_unknownObjectUnownedLoadStrong();
  v53 = objc_msgSend(v52, sel_nsDomain);

  v54 = objc_msgSend(v53, sel_displayName);
  v55 = sub_23B1C63E0();
  v57 = v56;

  swift_bridgeObjectRelease();
  if ((v57 & 0x2000000000000000) != 0)
    v58 = HIBYTE(v57) & 0xF;
  else
    v58 = v55 & 0xFFFFFFFFFFFFLL;
  swift_dynamicCastClassUnconditional();
  v59 = (void *)swift_unknownObjectUnownedLoadStrong();
  v60 = v59;
  if (v58)
  {
    v61 = objc_msgSend(v59, sel_nsDomain);

    v62 = objc_msgSend(v61, sel_displayName);
    if (!v62)
    {
      sub_23B1C63E0();
      v62 = (id)sub_23B1C63BC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v12, sel_setFp_displayName_, v62, v76, v77);

    swift_dynamicCastClassUnconditional();
    v63 = (void *)swift_unknownObjectUnownedLoadStrong();
    v64 = objc_msgSend(v63, sel_nsDomain);

    v65 = objc_msgSend(v64, sel_displayName);
    if (!v65)
    {
      sub_23B1C63E0();
      v65 = (id)sub_23B1C63BC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v12, sel_setFilename_, v65);

  }
  else
  {
    v67 = objc_msgSend(v59, sel_provider);

    if (v67)
    {
      v68 = objc_msgSend(v67, sel_descriptor);

      v69 = objc_msgSend(v68, sel_localizedName);
      v70 = sub_23B1C63E0();
      v72 = v71;

      v73 = HIBYTE(v72) & 0xF;
      if ((v72 & 0x2000000000000000) == 0)
        v73 = v70 & 0xFFFFFFFFFFFFLL;
      if (v73)
      {
        v74 = (void *)sub_23B1C63BC();
        objc_msgSend(v12, sel_setFp_displayName_, v74);

        v75 = (void *)sub_23B1C63BC();
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_setFilename_, v75);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  return v12;
}

void sub_23AA80AFC(uint64_t a1, uint64_t a2, uint8_t *a3, unint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6, char a7)
{
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  unsigned __int8 v41;
  void (*v42)(uint64_t *__return_ptr, uint64_t *, uint64_t);
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  unint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint8_t *v67;
  unint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  char *v71;
  id v72;
  unint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint8_t *v83;
  uint8_t *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  _BYTE v94[496];
  _OWORD v95[31];
  _BYTE v96[504];
  _OWORD v97[32];
  uint64_t v98;
  __int16 v99;
  uint64_t v100[63];
  _BYTE v101[504];
  id v102;

  v89 = a5;
  v90 = a6;
  v88 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE728);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint8_t *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C5E4C();
  v86 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v85 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v83 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v83 - v20;
  v84 = a3;
  v22 = (void *)MEMORY[0x23B8615C4](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  v87 = v14;
  v83 = v13;
  if (v22
    && (v23 = v22, v24 = objc_msgSend(v22, sel_indexer), v23, v24))
  {
    v25 = a7;
    v26 = objc_msgSend(v24, sel_needsAuthentication);

    if (v26)
      v27 = 30;
    else
      v27 = 22;
  }
  else
  {
    v25 = a7;
    v27 = 22;
  }
  v28 = (int *)sub_23AAF7AC0(MEMORY[0x24BEE4AF8]);
  v91 = sub_23AA801CC(a2, v27, 0, v28);
  swift_bridgeObjectRelease();
  v29 = a2 + *(int *)(type metadata accessor for VFSItem(0) + 28);
  if (*(_BYTE *)(v29 + *(int *)(type metadata accessor for ItemMetadata() + 64)) == 1)
  {
    v30 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v31 = v88;
    sub_23AA93780(v88);
    sub_23AA93780(v31);
    v32 = sub_23B1C5E40();
    v33 = sub_23B1C6A94();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v85 = (char *)swift_slowAlloc();
      v100[0] = (uint64_t)v85;
      *(_DWORD *)v34 = 136446210;
      v84 = v34 + 4;
      sub_23AA93780(v31);
      sub_23AE5BC48(v31);
      v36 = v35;
      v38 = v37;
      sub_23AC03BE4(v31);
      *(_QWORD *)&v97[0] = sub_23AABEC68(v36, v38, v100);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AC03BE4(v31);
      sub_23AC03BE4(v31);
      _os_log_impl(&dword_23AA66000, v32, v33, "Returning ignore root (request: %{public}s)", v34, 0xCu);
      v39 = v85;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v39, -1, -1);
      MEMORY[0x23B8614BC](v34, -1, -1);
    }
    else
    {
      sub_23AC03BE4(v31);
      sub_23AC03BE4(v31);
    }

    (*(void (**)(char *, uint64_t))(v86 + 8))(v21, v87);
    v45 = v91;
    v46 = v91;
    v89(v45, 0);

LABEL_14:
    return;
  }
  v40 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v41 = *(_BYTE *)(a2 + 8);
  v98 = *(_QWORD *)a2;
  v99 = v41;
  v42 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v40 + 168);
  swift_retain();
  v43 = v102;
  v42(v100, &v98, 1);
  v102 = v43;
  if (v43)
  {

    swift_release();
    sub_23ACFC784(v97);
    v44 = swift_allocObject();
    *(_BYTE *)(v44 + 16) = 0;
    sub_23AA724E8((uint64_t)v97, (uint64_t)v101, qword_2542E6E20);
    v102 = 0;
  }
  else
  {
    sub_23AA724E8((uint64_t)v100, (uint64_t)v96, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v96, (uint64_t)v97, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v97) == 1)
    {
      swift_release();
      sub_23ACFC784(v95);
      v44 = swift_allocObject();
      *(_BYTE *)(v44 + 16) = 0;
    }
    else
    {
      swift_release();
      memcpy(v94, v100, sizeof(v94));
      memcpy(v95, v100, sizeof(v95));
      nullsub_1(v95);
      v47 = swift_allocObject();
      v44 = v47;
      *(_BYTE *)(v47 + 16) = v94[480];
      if ((v94[16] & 0x10) != 0)
      {
        v84 = (uint8_t *)v47;
        sub_23ACFC940((uint64_t)v94);
        v72 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v73 = v88;
        sub_23AA93780(v88);
        sub_23AA93780(v73);
        v74 = sub_23B1C5E40();
        v75 = sub_23B1C6A94();
        if (os_log_type_enabled(v74, v75))
        {
          v76 = (uint8_t *)swift_slowAlloc();
          v85 = (char *)swift_slowAlloc();
          v93 = v85;
          *(_DWORD *)v76 = 136446210;
          v83 = v76 + 4;
          sub_23AA93780(v73);
          sub_23AE5BC48(v73);
          v78 = v77;
          v80 = v79;
          sub_23AC03BE4(v73);
          v92 = sub_23AABEC68(v78, v80, (uint64_t *)&v93);
          sub_23B1C6CBC();
          swift_bridgeObjectRelease();
          sub_23AC03BE4(v73);
          sub_23AC03BE4(v73);
          _os_log_impl(&dword_23AA66000, v74, v75, "Returning ignored item (request: %{public}s)", v76, 0xCu);
          v81 = v85;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v81, -1, -1);
          MEMORY[0x23B8614BC](v76, -1, -1);
        }
        else
        {
          sub_23AC03BE4(v73);
          sub_23AC03BE4(v73);
        }

        (*(void (**)(char *, uint64_t))(v86 + 8))(v19, v87);
        v82 = v91;
        v46 = v91;
        v89(v82, 0);

        sub_23AAFC3AC((uint64_t)v94);
        swift_release();
        sub_23AAFC3AC((uint64_t)v94);
        goto LABEL_14;
      }
    }
    sub_23AA724E8((uint64_t)v95, (uint64_t)v101, qword_2542E6E20);
  }
  v48 = v90;
  v49 = v85;
  if ((v25 & 1) != 0 && objc_msgSend(v91, sel_isExcludedFromSync))
  {
    v84 = (uint8_t *)v44;
    v50 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v51 = v88;
    sub_23AA93780(v88);
    sub_23AA93780(v51);
    v52 = sub_23B1C5E40();
    v53 = sub_23B1C6A94();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v100[0] = swift_slowAlloc();
      v55 = v100[0];
      *(_DWORD *)v54 = 136446210;
      v83 = v54 + 4;
      sub_23AA93780(v51);
      sub_23AE5BC48(v51);
      v57 = v56;
      v59 = v58;
      sub_23AC03BE4(v51);
      *(_QWORD *)&v97[0] = sub_23AABEC68(v57, v59, v100);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AC03BE4(v51);
      sub_23AC03BE4(v51);
      _os_log_impl(&dword_23AA66000, v52, v53, "Item is in ignored (request: %{public}s)", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v55, -1, -1);
      MEMORY[0x23B8614BC](v54, -1, -1);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
    }
    else
    {
      sub_23AC03BE4(v51);
      sub_23AC03BE4(v51);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v49, v87);
    }
    v89(0, 0);
    swift_release();
    sub_23ACFC7D8((uint64_t)v101);

  }
  else
  {
    v60 = (_QWORD *)swift_allocObject();
    v61 = v89;
    v60[2] = v89;
    v60[3] = v48;
    v60[4] = v44;
    v62 = v91;
    swift_retain_n();
    swift_retain_n();
    v63 = v62;
    if ((sub_23AEC5248(v63) & 1) != 0)
    {
      v64 = sub_23B1C6860();
      v65 = (uint64_t)v83;
      (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v83, 1, 1, v64);
      v66 = (_QWORD *)swift_allocObject();
      v66[2] = 0;
      v66[3] = 0;
      v67 = v84;
      v66[4] = v63;
      v66[5] = v67;
      v68 = v88;
      v66[6] = v88;
      v66[7] = sub_23AAB8E6C;
      v66[8] = v60;
      sub_23AA93780(v68);
      v69 = v67;
      swift_retain();
      sub_23ACCE6A8(v65, (uint64_t)&unk_2569E32B8, (uint64_t)v66);

      swift_release();
    }
    else
    {

      swift_beginAccess();
      v70 = *(unsigned __int8 *)(v44 + 16);
      v71 = v63;
      v61(v63, v70);

    }
    sub_23ACFC7D8((uint64_t)v101);
    swift_release_n();
    swift_release();
    swift_release();

  }
}

void sub_23AA814FC(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock;
  uint64_t v38;
  uint64_t (*v39)();
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;

  v7 = v6;
  v32 = a6;
  v30 = a5;
  v29 = sub_23B1C602C();
  v35 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C60A4();
  v33 = *(_QWORD *)(v14 - 8);
  v34 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  if (!a1)
    v17 = (id)fpfs_current_log();
  v18 = a1;
  v31 = (id)fpfs_adopt_log();
  v19 = swift_allocObject();
  aBlock = sub_23B1C6B6C();
  v38 = v20;
  sub_23B1C64F4();
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C6458();
  swift_bridgeObjectRelease();
  v21 = __fp_log_fork();
  swift_release();
  *(_QWORD *)(v19 + 16) = v21;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v17;
  *(_QWORD *)(v22 + 24) = v19;
  *(_QWORD *)(v22 + 32) = v7;
  *(_QWORD *)(v22 + 40) = a2;
  *(_QWORD *)(v22 + 48) = a3;
  *(_BYTE *)(v22 + 56) = a4;
  v23 = v32;
  *(_QWORD *)(v22 + 64) = v30;
  *(_QWORD *)(v22 + 72) = v23;
  v41 = sub_23AA852F4;
  v42 = v22;
  aBlock = MEMORY[0x24BDAC760];
  v38 = 1107296256;
  v39 = sub_23AA698FC;
  v40 = &block_descriptor_16_0;
  v24 = _Block_copy(&aBlock);
  v25 = v17;
  swift_retain();
  v7;
  swift_retain();
  sub_23B1C6068();
  v36 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AA81D34();
  v26 = v29;
  sub_23B1C6DE8();
  MEMORY[0x23B85F470](0, v16, v13, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v34);
  swift_release();
  swift_release();
  v27 = v31;
  v28 = (id)fpfs_adopt_log();

}

uint64_t sub_23AA817FC(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  char v6;
  _OWORD v8[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_23B1C6D7C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    v5 = a1;
  }
  v6 = sub_23AA81870((uint64_t)v8);

  sub_23AA94C08((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_23AA81870(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v7;
  _BYTE v8[24];
  uint64_t v9;

  swift_getObjectType();
  v3 = *v1;
  v4 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v5 = *MEMORY[0x24BEE4EA0];
  sub_23AA94C48(a1, (uint64_t)v8);
  if (v9)
  {
    if ((swift_dynamicCast() & 1) != 0)
      sub_23AAB1264((uint64_t)v1 + *(_QWORD *)((*v4 & *v1) + 0x70), (uint64_t)v7 + *(_QWORD *)((*v7 & *v4) + 0x70), *(_QWORD *)((v5 & v3) + 0x50), *(_QWORD *)((v5 & v3) + 0x58));
  }
  else
  {
    sub_23AA94C08((uint64_t)v8);
  }
  return 0;
}

uint64_t sub_23AA8194C()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_23B1C74A8();
  switch(v1)
  {
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      sub_23B1C74B4();
      break;
    default:
      sub_23B1C74B4();
      sub_23AAB0660(v1);
      sub_23B1C64A0();
      swift_bridgeObjectRelease();
      break;
  }
  return sub_23B1C74E4();
}

void sub_23AA81A30(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock;
  uint64_t v40;
  uint64_t (*v41)();
  void *v42;
  uint64_t (*v43)();
  uint64_t v44;

  v34 = a7;
  v32 = a6;
  v31 = sub_23B1C602C();
  v37 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C60A4();
  v35 = *(_QWORD *)(v14 - 8);
  v36 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a4;
  if (!a4)
    v17 = (id)fpfs_current_log();
  v18 = a4;
  v33 = (id)fpfs_adopt_log();
  v19 = swift_allocObject();
  aBlock = sub_23B1C6B6C();
  v40 = v20;
  sub_23B1C64F4();
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C6458();
  swift_bridgeObjectRelease();
  v21 = __fp_log_fork();
  swift_release();
  *(_QWORD *)(v19 + 16) = v21;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v17;
  *(_QWORD *)(v22 + 24) = v19;
  *(_QWORD *)(v22 + 32) = a5;
  *(_QWORD *)(v22 + 40) = a1;
  *(_QWORD *)(v22 + 48) = a2;
  *(_BYTE *)(v22 + 56) = a3;
  v23 = v34;
  *(_QWORD *)(v22 + 64) = v32;
  *(_QWORD *)(v22 + 72) = v23;
  v43 = sub_23AA852F4;
  v44 = v22;
  aBlock = MEMORY[0x24BDAC760];
  v40 = 1107296256;
  v41 = sub_23AA698FC;
  v42 = &block_descriptor_9_2;
  v24 = _Block_copy(&aBlock);
  v25 = v17;
  swift_retain();
  v26 = a5;
  swift_retain();
  sub_23B1C6068();
  v38 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AA81D34();
  v27 = v31;
  sub_23B1C6DE8();
  sub_23B1C6ADC();
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v36);
  swift_release();
  swift_release();
  v28 = v33;
  v29 = (id)fpfs_adopt_log();

}

unint64_t sub_23AA81D34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E7480;
  if (!qword_2542E7480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E7470);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2542E7480);
  }
  return result;
}

void sub_23AA81D80()
{
  sub_23AAB9B4C();
  type metadata accessor for SQLCodableAccessorWrapper();
}

void sub_23AA81DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  *(_QWORD *)(v13 - 256) = a1;
  *(_QWORD *)(v13 - 280) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 208) = v12;
  *(_QWORD *)(v13 - 200) = v9;
  v16 = type metadata accessor for ItemReconciliationHalf(0, v12, v9, v15);
  *(_QWORD *)(v13 - 248) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v13 - 240) = v16;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 216) = (char *)&a9 - v17;
  v18 = sub_23AAB7D40();
  *(_QWORD *)(v13 - 120) = &type metadata for ItemReconciliationHalfSQLFields;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v18;
  *(_QWORD *)(v13 - 96) = v11;
  type metadata accessor for SQLCodableAccessorWrapper();
}

void sub_23AA81E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v14 - 168) = *(_QWORD *)(a1 - 8);
  v15 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 224) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&a9 - v17;
  v20 = type metadata accessor for ItemReconciliationHalf(0, v13, v12, v19);
  *(_QWORD *)(v14 - 192) = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v14 - 184) = v10;
  *(_QWORD *)(v14 - 176) = v9;
  *(_QWORD *)(v14 - 232) = v11;
  sub_23AA84C6C((uint64_t)sub_23AAA6724, v9, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, v10, v11, (uint64_t)v18);
}

void sub_23AA81F78()
{
  uint64_t v0;

  MEMORY[0x23B8613CC](&unk_23B1E1DE8, v0);
  sub_23AA831E8();
}

uint64_t sub_23AA81FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!v2)
  {
    *(_QWORD *)(v8 - 304) = v4;
    *(_QWORD *)(v8 - 160) = v6;
    *(_QWORD *)(v8 - 296) = v7;
    *(_QWORD *)(v8 - 312) = v5;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 168) + 8))(v3, v1);
    *(_BYTE *)(v8 - 128) = 50;
    v10 = *(_QWORD *)(v8 - 184);
    sub_23AA94830(v8 - 128, (uint64_t)&type metadata for SyncPausedStatus, *(_QWORD *)(v8 - 176), (uint64_t)&type metadata for SyncPausedStatus, v10);
    v11 = *(_QWORD *)(v8 - 120);
    *(_QWORD *)(v8 - 168) = 0;
    v12 = *(_QWORD *)(v8 - 192);
    *(_QWORD *)(v0 + *(int *)(v12 + 76)) = v11;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 160) + 16))(*(_QWORD *)(v8 - 296), v0, v12);
    sub_23AA84C6C((uint64_t)sub_23AAA8510, *(_QWORD *)(v8 - 176), (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, v10, *(_QWORD *)(v8 - 232), *(_QWORD *)(v8 - 224));
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 168) + 8))(v3, v1);
}

void sub_23AA822A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23B1C67DC();
  sub_23AA94830(v2 - 136, v3, *(_QWORD *)(v2 - 176), v3, v1);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 248) + 8))(*(_QWORD *)(v2 - 216), *(_QWORD *)(v2 - 240));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 160) + 8))(*(_QWORD *)(v2 - 296), *(_QWORD *)(v2 - 192));
    JUMPOUT(0x23AA8210CLL);
  }
  sub_23AA84C6C((uint64_t)sub_23AAB9C94, *(_QWORD *)(v2 - 176), (uint64_t)&_s9SQLFieldsON_1, v1, *(_QWORD *)(v2 - 272), *(_QWORD *)(v2 - 264));
}

void sub_23AA8234C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  ValueMetadata *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = *(_QWORD *)(v6 - 256);
  v8 = MEMORY[0x23B8613CC](&unk_23B1E1DE8, v7);
  v9 = v1;
  v10 = sub_23AAB9B90(v0, v7, v8);
  v12 = *(_QWORD *)(v6 - 192);
  v13 = *(_QWORD *)(v6 - 240);
  if (v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 280) + 8))(v0, v7);
    (*(void (**)(_QWORD, uint64_t))(v3 + 8))(*(_QWORD *)(v6 - 216), v13);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 160) + 8))(*(_QWORD *)(v6 - 296), v12);
    JUMPOUT(0x23AA821B8);
  }
  *(_QWORD *)(v6 - 272) = v11;
  *(_QWORD *)(v6 - 232) = v10;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 280) + 8))(v0, v7);
  *(_BYTE *)(v6 - 136) = 51;
  v14 = MEMORY[0x24BEE1768];
  v15 = *(_QWORD *)(v6 - 184);
  v16 = *(_QWORD *)(v6 - 176);
  sub_23AA84870(v16, MEMORY[0x24BEE1768]);
  sub_23AA94830(v6 - 136, v14, v16, v14, v15);
  *(_BYTE *)(v6 - 136) = 52;
  v17 = MEMORY[0x24BEE1328];
  v18 = *(_QWORD *)(v6 - 184);
  v19 = *(_QWORD *)(v6 - 176);
  sub_23AA84870(v19, MEMORY[0x24BEE1328]);
  sub_23AA94830(v6 - 136, v17, v19, v17, v18);
  *(_DWORD *)(v6 - 256) = *(unsigned __int8 *)(v6 - 66);
  *(_BYTE *)(v6 - 67) = 53;
  v20 = *(_QWORD *)(v6 - 184);
  v21 = *(_QWORD *)(v6 - 176);
  sub_23AA84870(v21, (uint64_t)&type metadata for PolicyContentStatus);
  sub_23AA94830(v6 - 67, (uint64_t)&type metadata for PolicyContentStatus, v21, (uint64_t)&type metadata for PolicyContentStatus, v20);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(*(_QWORD *)(v6 - 168), *(_QWORD *)(v6 - 192));
  sub_23B0C9E68(*(_QWORD *)(v6 - 296), v2, *(_QWORD *)(v6 - 288), *(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 152), v4, v5);
}

void sub_23AA82584()
{
  JUMPOUT(0x23AA821C0);
}

uint64_t sub_23AA8258C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))();
  return swift_release();
}

void sub_23AA825CC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88[4];
  uint64_t v89[2];
  unsigned int v90;
  unsigned __int8 v91;
  uint64_t v92;
  unsigned __int8 v93;
  _QWORD v94[2];
  unsigned __int8 v95;
  unsigned __int8 v96;
  unsigned __int8 v97;
  unsigned __int8 v98;
  unsigned __int8 v99;
  unsigned __int8 v100;
  char v101;
  char v102;
  uint64_t v103;
  _QWORD v104[4];
  char v105;
  uint64_t v106;
  unsigned __int8 v107;
  unsigned __int16 v108;
  unsigned int v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  char v112;
  unsigned __int8 v113;

  v85 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v55 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v55 - v13;
  LOBYTE(v104[0]) = 0;
  sub_23AA84870(a1, (uint64_t)&type metadata for FileItemKind);
  v86 = a1;
  v87 = a2;
  sub_23AA94830((uint64_t)v104, (uint64_t)&type metadata for FileItemKind, a1, (uint64_t)&type metadata for FileItemKind, a2);
  if (!v3)
  {
    v84 = v6;
    v83 = v9;
    v15 = v113;
    LOBYTE(v94[0]) = 2;
    v17 = v86;
    v16 = v87;
    sub_23AA94830((uint64_t)v94, MEMORY[0x24BEE1768], v86, MEMORY[0x24BEE1768], v87);
    v81 = v12;
    v82 = v14;
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v104[0]);
    v19 = sub_23B1C746C();

    LOBYTE(v94[0]) = 15;
    sub_23AA94830((uint64_t)v94, MEMORY[0x24BEE1768], v17, MEMORY[0x24BEE1768], v16);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v104[0]);
    v21 = sub_23B1C746C();

    LOBYTE(v104[0]) = 13;
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E75C0);
    sub_23AA84870(v17, v22);
    sub_23AA94830((uint64_t)v104, v22, v17, v22, v16);
    v79 = v22;
    v80 = v15;
    v23 = v109;
    v24 = v110;
    LOBYTE(v104[0]) = 4;
    v25 = MEMORY[0x24BEE4478];
    sub_23AA84870(v17, MEMORY[0x24BEE4478]);
    sub_23AA94830((uint64_t)v104, v25, v17, v25, v16);
    v77 = v24;
    v78 = v23;
    LODWORD(v25) = v108;
    LOBYTE(v104[0]) = 5;
    v26 = v84;
    sub_23AA84870(v17, v84);
    sub_23AA94830((uint64_t)v104, v26, v17, v26, v16);
    v76 = v21;
    LOBYTE(v104[0]) = 6;
    sub_23AA94830((uint64_t)v104, v26, v17, v26, v16);
    v75 = v25;
    LOBYTE(v104[0]) = 3;
    v27 = MEMORY[0x24BEE1328];
    sub_23AA84870(v17, MEMORY[0x24BEE1328]);
    sub_23AA94830((uint64_t)v104, v27, v17, v27, v16);
    LOBYTE(v26) = v112;
    LOBYTE(v104[0]) = 11;
    sub_23AA94830((uint64_t)v104, MEMORY[0x24BEE1328], v17, MEMORY[0x24BEE1328], v16);
    LODWORD(v27) = v111;
    LOBYTE(v104[0]) = 12;
    sub_23AA94830((uint64_t)v104, MEMORY[0x24BEE1328], v17, MEMORY[0x24BEE1328], v16);
    v74 = v27;
    v72 = v19;
    v73 = v107;
    LOBYTE(v104[0]) = 7;
    sub_23AA94830((uint64_t)v104, v84, v17, v84, v16);
    LOBYTE(v104[0]) = 8;
    v28 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5198);
    v30 = v86;
    v29 = v87;
    sub_23AA84870(v86, v28);
    sub_23AA94830((uint64_t)v104, v28, v30, v28, v29);
    v84 = v106;
    LOBYTE(v104[0]) = 9;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75D0);
    v33 = v86;
    v32 = v87;
    sub_23AA84870(v86, v31);
    sub_23AA94830((uint64_t)v104, v31, v33, v31, v32);
    v71 = v104[3];
    LOBYTE(v17) = v105;
    LOBYTE(v104[0]) = 14;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7458);
    sub_23AA94830((uint64_t)v104, v34, v86, v34, v87);
    v70 = v104[2];
    LOBYTE(v94[0]) = 20;
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6780);
    v37 = v86;
    v36 = v87;
    sub_23AA84870(v86, v35);
    sub_23AA94830((uint64_t)v94, v35, v37, v35, v36);
    v68 = v104[0];
    v69 = v104[1];
    LOBYTE(v94[0]) = 23;
    v38 = MEMORY[0x24BEE4568];
    v40 = v86;
    v39 = v87;
    sub_23AA84870(v86, MEMORY[0x24BEE4568]);
    sub_23AA94830((uint64_t)v94, v38, v40, v38, v39);
    v67 = v103;
    LOBYTE(v94[0]) = 16;
    v42 = v86;
    v41 = v87;
    sub_23AA84870(v86, (uint64_t)&type metadata for EvictionUrgency);
    sub_23AA94830((uint64_t)v94, (uint64_t)&type metadata for EvictionUrgency, v42, (uint64_t)&type metadata for EvictionUrgency, v41);
    LOBYTE(v38) = v102;
    LOBYTE(v94[0]) = 21;
    sub_23AA94830((uint64_t)v94, MEMORY[0x24BEE1328], v86, MEMORY[0x24BEE1328], v87);
    LOBYTE(v19) = v101;
    LOBYTE(v94[0]) = 22;
    sub_23AA94830((uint64_t)v94, MEMORY[0x24BEE1328], v86, MEMORY[0x24BEE1328], v87);
    v66 = v100;
    LOBYTE(v94[0]) = 27;
    sub_23AA94830((uint64_t)v94, MEMORY[0x24BEE1328], v86, MEMORY[0x24BEE1328], v87);
    v65 = v99;
    LOBYTE(v94[0]) = 17;
    sub_23AA94830((uint64_t)v94, MEMORY[0x24BEE1328], v86, MEMORY[0x24BEE1328], v87);
    v64 = v98;
    LOBYTE(v94[0]) = 18;
    sub_23AA94830((uint64_t)v94, MEMORY[0x24BEE1328], v86, MEMORY[0x24BEE1328], v87);
    v63 = v97;
    LOBYTE(v94[0]) = 1;
    sub_23AA94830((uint64_t)v94, MEMORY[0x24BEE1328], v86, MEMORY[0x24BEE1328], v87);
    v62 = v96;
    LOBYTE(v94[0]) = 10;
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74E0);
    v45 = v86;
    v44 = v87;
    sub_23AA84870(v86, v43);
    sub_23AA94830((uint64_t)v94, v43, v45, v43, v44);
    v61 = v95;
    LOBYTE(v89[0]) = 19;
    v46 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E72C8);
    v48 = v86;
    v47 = v87;
    sub_23AA84870(v86, v46);
    sub_23AA94830((uint64_t)v89, v46, v48, v46, v47);
    v59 = v94[0];
    v60 = v94[1];
    LOBYTE(v89[0]) = 24;
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5528);
    v51 = v86;
    v50 = v87;
    sub_23AA84870(v86, v49);
    sub_23AA94830((uint64_t)v89, v49, v51, v49, v50);
    v58 = v92;
    v57 = v93;
    LOBYTE(v89[0]) = 25;
    sub_23AA94830((uint64_t)v89, v79, v86, v79, v87);
    v79 = v90;
    v56 = v91;
    v88[0] = 26;
    v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7460);
    v54 = v86;
    v53 = v87;
    sub_23AA84870(v86, v52);
    sub_23AA94830((uint64_t)v88, v52, v54, v52, v53);
    v88[0] = v56;
    sub_23AB58648(v80, v72, v76, 0, v78 | ((unint64_t)v77 << 32), v75, (uint64_t)v82, (uint64_t)v81, v85, v26, v74, v73, (uint64_t)v83, v84, v71, v17, v70, v68, v69,
      v67,
      v38,
      v19,
      v66,
      v65,
      v64,
      v63,
      v62,
      v61,
      2,
      v59,
      v60,
      v58,
      v57,
      v79 | ((unint64_t)v56 << 32),
      0,
      v89[0],
      v89[1],
      0,
      0,
      0);
  }
}

void sub_23AA831E8()
{
  sub_23AAB9898();
  type metadata accessor for SQLCodableAccessorWrapper();
}

void sub_23AA83250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  *(_QWORD *)(v11 - 568) = a1;
  *(_QWORD *)(v11 - 584) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 576) = (char *)&a9 - v12;
  v13 = sub_23AABAB88();
  *(_QWORD *)(v11 - 232) = &_s9SQLFieldsON;
  *(_QWORD *)(v11 - 224) = v9;
  *(_QWORD *)(v11 - 520) = v13;
  *(_QWORD *)(v11 - 216) = v13;
  *(_QWORD *)(v11 - 208) = v10;
  type metadata accessor for SQLCodableAccessorWrapper();
}

void sub_23AA832B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;

  *(_QWORD *)(v9 - 504) = a1;
  *(_QWORD *)(v9 - 512) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 448) = (char *)&a9 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v9 - 392) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v9 - 464) = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v9 - 472) = (char *)&a9 - v14;
  v15 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v9 - 320) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v9 - 480) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v9 - 352) = (char *)&a9 - v18;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 232) = v15;
  *(_QWORD *)(v9 - 224) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 488) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 216) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 208) = v20;
  *(_QWORD *)(v9 - 496) = v20;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AA83460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE v93[80];

  *(_QWORD *)(v8 - 400) = a1;
  v9 = sub_23B1C6C98();
  *(_QWORD *)(v8 - 376) = v9;
  *(_QWORD *)(v8 - 368) = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v8 - 560) = &v93[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v8 - 360) = &v93[-v12];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 - 608) = v4;
  *(_QWORD *)(v8 - 616) = v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v8 - 528) = AssociatedConformanceWitness;
  v16 = type metadata accessor for ItemStateVersion(0, AssociatedTypeWitness, AssociatedConformanceWitness, v15);
  *(_QWORD *)(v8 - 312) = v16;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v8 - 536) = &v93[-v17];
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v8 - 424) = v18;
  *(_QWORD *)(v8 - 432) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v8 - 456) = &v93[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v8 - 344) = &v93[-v22];
  *(_QWORD *)(v8 - 384) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v8 - 416) = &v93[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v8 - 440) = &v93[-v25];
  *(_QWORD *)(v8 - 296) = v7;
  v26 = sub_23B1C6C98();
  *(_QWORD *)(v8 - 288) = v26;
  *(_QWORD *)(v8 - 336) = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v8 - 304) = &v93[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = &v93[-v30];
  v32 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v8 - 544) = &v93[-v33];
  MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v8 - 328) = &v93[-v34];
  v35 = sub_23B1C6C98();
  *(_QWORD *)(v8 - 280) = *(_QWORD *)(v35 - 8);
  v36 = MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v8 - 408) = &v93[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = &v93[-v39];
  v41 = MEMORY[0x24BDAC7A8](v38);
  v43 = &v93[-v42];
  MEMORY[0x24BDAC7A8](v41);
  *(_QWORD *)(v8 - 272) = &v93[-v44];
  if (swift_dynamicCastMetatype())
  {
    *(_QWORD *)(v8 - 552) = v35;
    *(_BYTE *)(v8 - 240) = -121;
    v45 = *(_QWORD *)(v8 - 72);
    result = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 32))(MEMORY[0x24BEE4568], v8 - 240, MEMORY[0x24BEE4568], v3, v6);
    if (!v45)
    {
      v47 = v3;
      *(_QWORD *)(v8 - 72) = v6;
      if ((*(_BYTE *)(v8 - 224) & 1) != 0)
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 320) + 56))(*(_QWORD *)(v8 - 272), 1, 1, v1);
        v35 = *(_QWORD *)(v8 - 552);
      }
      else
      {
        *(_QWORD *)(v8 - 632) = *(_QWORD *)(v8 - 232);
        *(_BYTE *)(v8 - 232) = -64;
        v56 = MEMORY[0x24BEE44F0];
        v57 = v3;
        v58 = *(_QWORD *)(v8 - 72);
        sub_23AA84870(v57, MEMORY[0x24BEE44F0]);
        *(_QWORD *)(v8 - 624) = v47;
        sub_23AA94830(v8 - 232, v56, v47, v56, v58);
        *(_DWORD *)(v8 - 636) = *(_DWORD *)(v8 - 240);
        *(_BYTE *)(v8 - 256) = -63;
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5630);
        v47 = *(_QWORD *)(v8 - 624);
        sub_23AA84870(v47, v59);
        sub_23AA94830(v8 - 256, v59, v47, v59, v58);
        v60 = *(_QWORD *)(v8 - 232);
        v61 = *(_BYTE *)(v8 - 224);
        *(_QWORD *)(v8 - 232) = *(_QWORD *)(v8 - 632);
        *(_DWORD *)(v8 - 224) = *(_DWORD *)(v8 - 636);
        *(_QWORD *)(v8 - 216) = v60;
        *(_BYTE *)(v8 - 208) = v61;
        v62 = swift_dynamicCast();
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 320) + 56))(v43, v62 ^ 1u, 1, v1);
        v35 = *(_QWORD *)(v8 - 552);
        (*(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 280) + 32))(*(_QWORD *)(v8 - 272), v43, v35);
      }
LABEL_7:
      v49 = swift_dynamicCastMetatype();
      v50 = *(_QWORD *)(v8 - 288);
      v51 = *(_QWORD *)(v8 - 304);
      if (v49)
      {
        *(_BYTE *)(v8 - 232) = -62;
        v52 = *(_QWORD *)(v8 - 344);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 72) + 32))(AssociatedTypeWitness, v8 - 232, AssociatedTypeWitness, v47);
        v53 = v47;
        v54 = v2;
        v55 = *(_QWORD *)(v8 - 384);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v52, 1, AssociatedTypeWitness) == 1)
        {
          *(_QWORD *)(v8 - 552) = v35;
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 432) + 8))(v52, *(_QWORD *)(v8 - 424));
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 - 392) + 56))(*(_QWORD *)(v8 - 328), 1, 1, *(_QWORD *)(v8 - 296));
          *(_QWORD *)(v8 - 312) = v54;
          v47 = v53;
          v50 = *(_QWORD *)(v8 - 288);
        }
        else
        {
          v63 = *(_QWORD *)(v8 - 440);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v63, v52, AssociatedTypeWitness);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v55 + 16))(*(_QWORD *)(v8 - 416), v63, AssociatedTypeWitness);
          *(_BYTE *)(v8 - 240) = -61;
          v64 = *(_QWORD *)(v8 - 72);
          sub_23AA84870(v53, (uint64_t)&type metadata for Filename);
          *(_QWORD *)(v8 - 624) = v53;
          sub_23AA94830(v8 - 240, (uint64_t)&type metadata for Filename, v53, (uint64_t)&type metadata for Filename, v64);
          *(_QWORD *)(v8 - 552) = v35;
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 384) + 8))(v63, AssociatedTypeWitness);
          sub_23AAB9FBC(*(_QWORD *)(v8 - 416), *(_QWORD *)(v8 - 232), *(_QWORD *)(v8 - 224), AssociatedTypeWitness, *(_QWORD *)(v8 - 528), *(_QWORD *)(v8 - 536));
          v65 = *(_QWORD *)(v8 - 544);
          v66 = *(_QWORD *)(v8 - 296);
          v67 = swift_dynamicCast();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 392) + 56))(v65, v67 ^ 1u, 1, v66);
          v68 = v65;
          v50 = *(_QWORD *)(v8 - 288);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 336) + 32))(*(_QWORD *)(v8 - 328), v68, v50);
          *(_QWORD *)(v8 - 312) = v54;
          v47 = *(_QWORD *)(v8 - 624);
        }
        v51 = *(_QWORD *)(v8 - 304);
      }
      else
      {
        *(_BYTE *)(v8 - 232) = -59;
        sub_23AA94830(v8 - 232, v50, v47, v50, *(_QWORD *)(v8 - 72));
        *(_QWORD *)(v8 - 552) = v35;
        (*(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 336) + 32))(*(_QWORD *)(v8 - 328), v31, v50);
        *(_QWORD *)(v8 - 312) = v2;
      }
      v69 = *(_QWORD *)(v8 - 280);
      v70 = *(_QWORD *)(v8 - 408);
      v71 = *(_QWORD *)(v8 - 552);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v69 + 16))(v70, *(_QWORD *)(v8 - 272), v71);
      v72 = *(_QWORD *)(v8 - 320);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v1) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v70, v71);
        v73 = *(_QWORD *)(v8 - 360);
        v74 = v71;
      }
      else
      {
        v75 = v70;
        v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32);
        v76(*(_QWORD *)(v8 - 352), v75, v1);
        v77 = *(_QWORD *)(v8 - 336);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v77 + 16))(v51, *(_QWORD *)(v8 - 328), v50);
        v78 = *(_QWORD *)(v8 - 392);
        v79 = v51;
        v80 = *(_QWORD *)(v8 - 296);
        v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v79, 1, v80);
        if (v81 != 1)
        {
          v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32);
          v83 = *(_QWORD *)(v8 - 472);
          v82(v83, *(_QWORD *)(v8 - 304), v80);
          v84 = *(_QWORD *)(v8 - 480);
          v76(v84, *(_QWORD *)(v8 - 352), v1);
          v82(*(_QWORD *)(v8 - 464), v83, v80);
          sub_23AA6B6BC(v84, v1, *(_QWORD *)(v8 - 360));
        }
        (*(void (**)(_QWORD, uint64_t))(v72 + 8))(*(_QWORD *)(v8 - 352), v1);
        (*(void (**)(_QWORD, uint64_t))(v77 + 8))(*(_QWORD *)(v8 - 304), v50);
        v73 = *(_QWORD *)(v8 - 360);
        v74 = *(_QWORD *)(v8 - 552);
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 - 400) - 8) + 56))(v73, 1, 1);
      *(_BYTE *)(v8 - 240) = 0;
      (*(void (**)(_QWORD, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 72) + 32))(MEMORY[0x24BEE4568], v8 - 240, MEMORY[0x24BEE4568], v47);
      if ((*(_BYTE *)(v8 - 224) & 1) != 0)
      {
        *(_QWORD *)(v8 - 552) = v74;
        *(_QWORD *)(v8 - 296) = 0;
        *(_QWORD *)(v8 - 320) = 0;
        *(_QWORD *)(v8 - 304) = 0;
        v85 = (_QWORD *)(v8 - 144);
        *(_QWORD *)(v8 - 144) = 0;
        *(_QWORD *)(v8 - 136) = 0;
        v85[2] = 0xB000000000000000;
        v85[3] = 0;
        v85[4] = 0;
        v85[5] = 0;
        v85[6] = 0;
        *(_BYTE *)(v8 - 232) = 0x80;
        v86 = *(_QWORD *)(v8 - 424);
        v87 = *(_QWORD *)(v8 - 72);
        sub_23AA84870(v47, v86);
        sub_23AA94830(v8 - 232, v86, v47, v86, v87);
        *(_QWORD *)(v8 - 392) = 0;
        *(_QWORD *)(v8 - 384) = 0xB000000000000000;
        *(_QWORD *)(v8 - 352) = 0;
        *(_QWORD *)(v8 - 344) = 0;
        *(_BYTE *)(v8 - 240) = -127;
        v88 = v47;
        sub_23AA84870(v47, (uint64_t)&type metadata for DeletionStatus);
        sub_23AA94830(v8 - 240, (uint64_t)&type metadata for DeletionStatus, v47, (uint64_t)&type metadata for DeletionStatus, v87);
        *(_BYTE *)(v8 - 256) = -126;
        sub_23AA84870(v47, (uint64_t)&type metadata for Fields);
        sub_23AA94830(v8 - 256, (uint64_t)&type metadata for Fields, v47, (uint64_t)&type metadata for Fields, v87);
        v89 = *(_QWORD *)(v8 - 240);
        *(_BYTE *)(v8 - 256) = -125;
        v90 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E4E88);
        sub_23AA84870(v88, v90);
        sub_23AA94830(v8 - 256, v90, v88, v90, v87);
        *(_QWORD *)(v8 - 408) = v89;
        *(_DWORD *)(v8 - 400) = *(unsigned __int8 *)(v8 - 241);
        (*(void (**)(void))(*(_QWORD *)(v8 - 368) + 16))();
        *(_BYTE *)(v8 - 256) = -124;
        sub_23AA84870(v88, (uint64_t)&type metadata for ContentStatus);
        sub_23AA94830(v8 - 256, (uint64_t)&type metadata for ContentStatus, v88, (uint64_t)&type metadata for ContentStatus, v87);
        LODWORD(v89) = *(unsigned __int8 *)(v8 - 242);
        *(_BYTE *)(v8 - 256) = -123;
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CC0);
        sub_23AA84870(v88, v91);
        sub_23AA94830(v8 - 256, v91, v88, v91, v87);
        *(_DWORD *)(v8 - 416) = v89;
        *(_DWORD *)(v8 - 440) = *(unsigned __int8 *)(v8 - 243);
        *(_BYTE *)(v8 - 256) = -122;
        v92 = MEMORY[0x24BEE1328];
        sub_23AA84870(v88, MEMORY[0x24BEE1328]);
        *(_QWORD *)(v8 - 624) = v88;
        sub_23AA94830(v8 - 256, v92, v88, v92, v87);
        sub_23AA84C6C((uint64_t)sub_23AAAA070, *(_QWORD *)(v8 - 624), (uint64_t)&_s9SQLFieldsON_0, *(_QWORD *)(v8 - 72), *(_QWORD *)(v8 - 592), *(_QWORD *)(v8 - 576));
      }
      sub_23AA84C6C((uint64_t)sub_23AD841E8, v47, (uint64_t)&_s9SQLFieldsON, *(_QWORD *)(v8 - 72), *(_QWORD *)(v8 - 520), *(_QWORD *)(v8 - 448));
    }
  }
  else
  {
    *(_BYTE *)(v8 - 232) = -60;
    v48 = *(_QWORD *)(v8 - 72);
    result = sub_23AA94830(v8 - 232, v35, v3, v35, v6);
    if (!v48)
    {
      *(_QWORD *)(v8 - 72) = v6;
      (*(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 280) + 32))(*(_QWORD *)(v8 - 272), v40, v35);
      v47 = v3;
      goto LABEL_7;
    }
  }
  return result;
}

void sub_23AA84624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(v3 - 568);
  v5 = MEMORY[0x23B8613CC](&unk_23B1E1DE8, v4);
  *(_QWORD *)(v3 - 448) = sub_23AAB98DC(v1, v4, v5);
  *(_QWORD *)(v3 - 464) = v6;
  *(_DWORD *)(v3 - 472) = v7;
  if (v2)
  {
    sub_23AAAEE4C(*(_QWORD *)(v3 - 296), *(_QWORD *)(v3 - 392), *(_QWORD *)(v3 - 384));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 584) + 8))(*(_QWORD *)(v3 - 576), *(_QWORD *)(v3 - 568));
    JUMPOUT(0x23AA84588);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 584) + 8))(*(_QWORD *)(v3 - 576), *(_QWORD *)(v3 - 568));
  *(_BYTE *)(v3 - 257) = -58;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5510);
  v9 = *(_QWORD *)(v3 - 624);
  v10 = *(_QWORD *)(v3 - 72);
  sub_23AA84870(v9, v8);
  sub_23AA94830(v3 - 257, v8, v9, v8, v10);
  v11 = *(_QWORD *)(v3 - 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 368) + 8))(*(_QWORD *)(v3 - 360), *(_QWORD *)(v3 - 376));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 336) + 8))(*(_QWORD *)(v3 - 328), *(_QWORD *)(v3 - 288));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 280) + 8))(*(_QWORD *)(v3 - 272), *(_QWORD *)(v3 - 552));
  LOBYTE(v12) = *(_DWORD *)(v3 - 472);
  sub_23AA7B504(*(_QWORD *)(v3 - 456), v0, *(_QWORD *)(v3 - 408), *(_DWORD *)(v3 - 400), *(_QWORD *)(v3 - 600), *(_QWORD *)(v3 - 448), *(_QWORD *)(v3 - 464), v12, v3 - 144, v11, 0, *(_QWORD *)(v3 - 616), *(_QWORD *)(v3 - 608));
}

void sub_23AA84868()
{
  JUMPOUT(0x23AA83F94);
}

uint64_t sub_23AA84870(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23AA84878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AA84898(a1, a2, a4, a3);
}

uint64_t sub_23AA84898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;

  v5 = v4;
  v15 = a1;
  v16 = a4;
  v8 = *(_QWORD *)(a3 + 40);
  v9 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v15 - v12;
  (*(void (**)(uint64_t))(v5 + *(int *)(a3 + 52)))(a2);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v8 + 32))(v15, v13, v16, v9, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
}

uint64_t sub_23AA84998@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t *v4;

  return sub_23AA849BC(a1, *v4, *(_QWORD *)(a3 + 16), a2, *(_QWORD *)(a3 + 24), a4);
}

uint64_t sub_23AA849BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _OWORD v28[2];

  v12 = sub_23B1C6C98();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v24 - v14;
  v24[1] = a5;
  v16 = *(_QWORD *)(a5 + 16);
  v24[2] = a1;
  v24[3] = a3;
  MEMORY[0x23B85EBD0](&v26, a1, a2, a3, MEMORY[0x24BEE4AD8] + 8, v16);
  if (v27)
  {
    sub_23AAA159C(&v26, v28);
    sub_23AAA15AC((uint64_t)v28, (uint64_t)&v26);
    v17 = swift_dynamicCast();
    v18 = *(_QWORD *)(a4 - 8);
    v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
    if (v17)
    {
      v19(v15, 0, 1, a4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a6, v15, a4);
      return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v19)(a6, 0, 1, a4);
    }
    else
    {
      v19(v15, 1, 1, a4);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      sub_23AB23A94();
      swift_allocError();
      v22 = v21;
      sub_23AAA15AC((uint64_t)v28, v21);
      *(_QWORD *)&v26 = 0;
      *((_QWORD *)&v26 + 1) = 0xE000000000000000;
      sub_23B1C6EFC();
      v25 = v26;
      sub_23B1C64F4();
      sub_23B1C7568();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23AAA15AC((uint64_t)v28, (uint64_t)&v26);
      sub_23B1C6434();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23B1C7340();
      v23 = *((_QWORD *)&v25 + 1);
      *(_QWORD *)(v22 + 32) = v25;
      *(_QWORD *)(v22 + 40) = v23;
      *(_BYTE *)(v22 + 48) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    }
  }
  else
  {
    sub_23AA94C08((uint64_t)&v26);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(a6, 1, 1, a4);
  }
}

void sub_23AA84C6C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD v15[4];

  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v14, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v14, a2);
  v15[0] = a3;
  v15[1] = a2;
  v15[2] = a5;
  v15[3] = a4;
  type metadata accessor for SQLCodableAccessorWrapper();
}

uint64_t sub_23AA84D0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(a1 + 52));
  *v4 = v2;
  v4[1] = v1;
  return swift_retain();
}

void type metadata accessor for SQLCodableAccessorWrapper()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AA84D4C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_23AA84D74(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_23AA84D74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E76F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_23AA84FB4();
  sub_23B1C7520();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
    v10 = 0;
    sub_23AA84F54(&qword_2542E76C8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23B1C71C0();
    v7 = v11;
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_23AA84F54(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E54E8);
    v8 = a2;
    result = MEMORY[0x23B8613CC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23AA84FB4()
{
  unint64_t result;

  result = qword_2542E7680;
  if (!qword_2542E7680)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0250, &type metadata for UserInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E7680);
  }
  return result;
}

void *destroy for DecoratedReconciliation(uint64_t a1)
{
  unint64_t v2;
  unint64_t v4;
  void *v5;
  void *result;

  if (*(_QWORD *)(a1 + 448))
  {
    if (*(_QWORD *)(a1 + 104))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_23AAAEE10(*(void **)(a1 + 144), *(id *)(a1 + 152), *(_BYTE *)(a1 + 160));
    v2 = *(_QWORD *)(a1 + 184);
    if (v2 >> 60 != 15 && (v2 & 0xF000000000000000) != 0xB000000000000000)
      sub_23AAAE53C(*(_QWORD *)(a1 + 176), v2);

    if (*(_QWORD *)(a1 + 288) != 1)
    {
      sub_23AAAE53C(*(_QWORD *)(a1 + 272), *(_QWORD *)(a1 + 280));
      swift_bridgeObjectRelease();
      sub_23AAAE53C(*(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_23AAAEE10(*(void **)(a1 + 344), *(id *)(a1 + 352), *(_BYTE *)(a1 + 360));
    v4 = *(_QWORD *)(a1 + 384);
    if (v4 >> 60 != 15 && (v4 & 0xF000000000000000) != 0xB000000000000000)
      sub_23AAAE53C(*(_QWORD *)(a1 + 376), v4);
    v5 = *(void **)(a1 + 424);
    swift_bridgeObjectRelease();

  }
  result = *(void **)(a1 + 616);
  if (result != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 792))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23AA85194(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_23AA851C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  id v8;
  uint64_t v9;
  id v10;

  v8 = (id)fpfs_adopt_log();
  sub_23B1C6B6C();
  sub_23B1C64F4();
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_23B1C6458();
  __fp_log_adopt();
  swift_endAccess();
  swift_bridgeObjectRelease();
  v9 = swift_release();
  a7(v9);
  swift_beginAccess();
  __fp_leave_section_Debug();
  swift_endAccess();
  v10 = (id)fpfs_adopt_log();

}

void sub_23AA852F8()
{
  uint64_t v0;

  sub_23AA8531C(*(_BYTE **)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_23AA85308(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_23AA8531C(_BYTE *a1, void (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  id v5;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_invalidated] & 1) != 0)
    goto LABEL_2;
  v7 = a1;
  if (objc_sync_enter(v7))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v7);
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs];
  swift_retain();
  if (objc_sync_exit(v7))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v7);

  if (v8
    || (MEMORY[0x24BDAC7A8](v9),
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E09E8),
        sub_23B1C6B48(),
        (v8 = v10) != 0))
  {
    a4(v8);
    swift_release();
  }
  else
  {
LABEL_2:
    v5 = sub_23AC61E18();
    a2();

  }
}

void sub_23AA85490()
{
  uint64_t v0;

  sub_23AA8549C(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_23AA8549C(uint64_t a1, void (*a2)(void))
{
  id v3;
  id v4;

  v3 = (id)fpfs_adopt_log();
  a2();
  v4 = (id)fpfs_adopt_log();

}

uint64_t sub_23AA854FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v3 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AA85580(v0 + v2, *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(unsigned __int8 *)(v0 + v4 + 16), *(void (**)(uint64_t))(v0 + v5), *(_QWORD *)(v0 + v5 + 8), *(_QWORD *)(v0 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23AA85580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  int v22;
  id v23;
  char *v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  unint64_t v37;

  v30[0] = a7;
  v30[1] = a8;
  v34 = a6;
  v35 = a5;
  v8 = sub_23B1C5DC8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v30 - v15;
  v17 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  if (qword_2542E6818 != -1)
    swift_once();
  v20 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v8);
  v36 = 0x657220636E797361;
  v37 = 0xEB00000000206461;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v21 = v37;
  v31 = v36;
  sub_23AA8EFC8((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_2542E67B8);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
  v33 = v16;
  if (v22 == 1)
  {
    v23 = v20;
    v24 = v32;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v24 = v32;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v32, v14, v8);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v19, v24, v8);
  v32 = (char *)*(int *)(v17 + 20);
  *(_QWORD *)&v32[v19] = v20;
  v25 = (char *)(v19 + *(int *)(v17 + 24));
  *(_QWORD *)v25 = "DB queue";
  *((_QWORD *)v25 + 1) = 8;
  v25[16] = 2;
  v26 = v20;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v27 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v27 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v27 + 32) = v31;
  *(_QWORD *)(v27 + 40) = v21;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
  swift_bridgeObjectRelease();
  v28 = sub_23AA8A05C((uint64_t)v33, (uint64_t *)&unk_2542E67B8);
  v35(v28);
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  return sub_23AA937BC(v19, type metadata accessor for Signpost);
}

uint64_t sub_23AA85974(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;
  _BYTE v8[72];

  v6 = *v4;
  sub_23B1C74A8();
  a4(v8, v6);
  return sub_23B1C74E4();
}

uint64_t sub_23AA859B8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  id v18;
  char v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v25;
  unint64_t v26;
  char v27;
  const void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[848];
  _BYTE v40[848];
  _QWORD v41[106];
  uint64_t v42;

  v38 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v2;
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
  v34 = swift_dynamicCastClassUnconditional();
  swift_retain();
  v8 = objc_msgSend(a1, sel_itemIdentifier);
  v9 = (id)sub_23AA8A0E0();
  v11 = v10;
  v12 = ~(_BYTE)v10;

  v35 = a1;
  if (v12)
  {
    v13 = v11;
  }
  else
  {
    v9 = objc_msgSend(a1, sel_itemIdentifier);
    v13 = 0;
  }
  v14 = v38;
  v37 = v7;
  if ((v38 & 4) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_23B1CE680;
    v16 = v35;
    *(_QWORD *)(v15 + 32) = v35;
    v41[0] = v15;
    sub_23B1C671C();
    v17 = v41[0];
    v18 = v16;
    v19 = v36;
    sub_23AA88520(v17);
    if (v3)
    {
      v20 = ~(_BYTE)v11 == 0;
LABEL_10:
      v23 = v20;
      sub_23AA862DC(v9, v13, v23);
      swift_release();
      swift_bridgeObjectRelease();
      return v19 & 1;
    }
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E20F8);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v21 + 32) = v9;
  *(_BYTE *)(v21 + 40) = v13;
  *(_BYTE *)(v21 + 41) = (_BYTE)v11 == 0xFF;
  sub_23AA88218(v9, v13, (_BYTE)v11 == 0xFF);
  v19 = v34;
  v22 = sub_23AA7F2F4(v21, v14 & 1);
  if (v3)
  {
    v20 = ~(_BYTE)v11 == 0;
    goto LABEL_10;
  }
  v25 = v22;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v25 + 16))
  {
    sub_23AA88218(v9, v13, ~(_BYTE)v11 == 0);
    v26 = sub_23AA85F34(v9, v13 | ((~(_BYTE)v11 == 0) << 8));
    if ((v27 & 1) != 0)
    {
      v28 = (const void *)(*(_QWORD *)(v25 + 56) + 848 * v26);
      memcpy(v39, v28, sizeof(v39));
      memmove(v40, v28, 0x350uLL);
      nullsub_1(v40);
      sub_23AB3C920((uint64_t)v39, (voidsub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
      swift_bridgeObjectRelease();
      sub_23AA862DC(v9, v13, ~(_BYTE)v11 == 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_23AA862DC(v9, v13, ~(_BYTE)v11 == 0);
      sub_23AF26884((uint64_t)v40);
    }
    sub_23AA724E8((uint64_t)v40, (uint64_t)v41, (uint64_t *)&unk_2542E1498);
  }
  else
  {
    sub_23AF26884((uint64_t)v40);
    sub_23AA88218(v9, v13, (_BYTE)v11 == 0xFF);
    swift_bridgeObjectRelease();
    sub_23AA862DC(v9, v13, (_BYTE)v11 == 0xFF);
    sub_23AA724E8((uint64_t)v40, (uint64_t)v41, (uint64_t *)&unk_2542E1498);
  }
  v29 = (_BYTE)v11 == 0xFF;
  sub_23AA724E8((uint64_t)v41, (uint64_t)&v42, (uint64_t *)&unk_2542E1498);
  v30 = sub_23B1C5A08();
  v31 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v33, 1, 1, v30);
  v19 = sub_23AA9BF04((uint64_t)v35);
  sub_23AA8A05C(v31, (uint64_t *)&unk_2542E6740);
  sub_23AA862DC(v9, v13, v29);
  sub_23AF2694C((uint64_t)v41);
  swift_release();
  return v19 & 1;
}

char *sub_23AA85DD4(char *a1, void *a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char *result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23AA85F34(a2, a3 & 0x1FF);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_23AD28610(a1, (char *)(v18[7] + 848 * v12));
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23B18B5AC();
      goto LABEL_7;
    }
    sub_23AA86364(v15, a4 & 1);
    v20 = sub_23AA85F34(a2, a3 & 0x1FF);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_23AD28610(a1, (char *)(v18[7] + 848 * v12));
LABEL_11:
      sub_23AA862E8(v12, (uint64_t)a2, a3 | (((a3 >> 8) & 1) << 8), a1, v18);
      return (char *)sub_23AA88218(a2, a3, BYTE1(a3) & 1);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD8);
  result = (char *)sub_23B1C7418();
  __break(1u);
  return result;
}

unint64_t sub_23AA85F34(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;

  sub_23B1C74A8();
  if ((a2 & 0x100) != 0)
  {
    sub_23B1C74B4();
    sub_23B1C63E0();
    v4 = a1;
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    sub_23AA862DC(a1, a2, 1);
  }
  else
  {
    sub_23B1C74B4();
    if ((_BYTE)a2)
    {
      sub_23B1C74B4();
      if (a2 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
  }
  v5 = sub_23B1C74E4();
  return sub_23AA86040(a1, a2 & 0x1FF, v5);
}

unint64_t sub_23AA86040(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  BOOL v23;
  BOOL v24;
  uint64_t v25;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = a2 == 2;
    v11 = a1 == (void *)1 && a2 == 2;
    if (a1)
      v10 = 0;
    v23 = v10;
    v24 = v11;
    do
    {
      v12 = *(_QWORD *)(v3 + 48) + 16 * v6;
      v13 = *(void **)v12;
      v14 = *(unsigned __int8 *)(v12 + 8);
      if ((*(_BYTE *)(v12 + 9) & 1) != 0)
      {
        if ((a2 & 0x100) != 0)
        {
          v15 = v4;
          v16 = sub_23B1C63E0();
          v18 = v17;
          if (v16 == sub_23B1C63E0() && v18 == v19)
          {
            sub_23AA88218(v13, v14, 1);
            sub_23AA88218(v13, v14, 1);
            sub_23AA88218(v13, v14, 1);
            sub_23AA88218(a1, a2, 1);
            swift_bridgeObjectRelease_n();
            sub_23AA862DC(a1, a2, 1);

            sub_23AA862DC(v13, v14, 1);
            sub_23AA862DC(v13, v14, 1);
            return v6;
          }
          v21 = sub_23B1C7388();
          sub_23AA88218(v13, v14, 1);
          sub_23AA88218(v13, v14, 1);
          sub_23AA88218(v13, v14, 1);
          sub_23AA88218(a1, a2, 1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23AA862DC(a1, a2, 1);

          sub_23AA862DC(v13, v14, 1);
          sub_23AA862DC(v13, v14, 1);
          v4 = v15;
          v3 = v25;
          if ((v21 & 1) != 0)
            return v6;
        }
      }
      else if ((a2 & 0x100) == 0)
      {
        if (*(_BYTE *)(v12 + 8))
        {
          if ((_DWORD)v14 == 1)
          {
            if (a2 == 1 && v13 == a1)
              return v6;
          }
          else if (v13)
          {
            if (v24)
              return v6;
          }
          else if (v23)
          {
            return v6;
          }
        }
        else if (!(_BYTE)a2 && (_DWORD)v13 == (_DWORD)a1)
        {
          return v6;
        }
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

void sub_23AA862DC(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

}

void *sub_23AA862E8(unint64_t a1, uint64_t a2, __int16 a3, void *__src, _QWORD *a5)
{
  uint64_t v6;
  void *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = a5[6] + 16 * a1;
  *(_QWORD *)v6 = a2;
  *(_BYTE *)(v6 + 8) = a3;
  *(_BYTE *)(v6 + 9) = HIBYTE(a3) & 1;
  result = memcpy((void *)(a5[7] + 848 * a1), __src, 0x350uLL);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_23AA86364(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  void *v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int64_t v30;
  _QWORD *v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  int64_t v50;
  _BYTE v51[256];
  _QWORD __dst[106];
  _BYTE v53[496];
  _BYTE v54[248];
  _BYTE v55[856];

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7D8);
  v35 = a2;
  v36 = (_QWORD *)sub_23B1C70A0();
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = 1 << *(_BYTE *)(v4 + 32);
    v31 = (_QWORD *)(v4 + 64);
    v6 = -1;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    v7 = v6 & *(_QWORD *)(v4 + 64);
    v30 = (unint64_t)(v5 + 63) >> 6;
    result = swift_retain();
    v9 = 0;
    v34 = v4;
    while (1)
    {
      if (v7)
      {
        v19 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        if (v21 >= v30)
          goto LABEL_23;
        v22 = v31[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v30)
            goto LABEL_23;
          v22 = v31[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v30)
            {
LABEL_23:
              swift_release();
              if ((v35 & 1) == 0)
                break;
              v27 = 1 << *(_BYTE *)(v4 + 32);
              if (v27 >= 64)
                bzero(v31, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v27;
              v28 = v29;
              *(_QWORD *)(v4 + 16) = 0;
              result = swift_release();
              goto LABEL_29;
            }
            v22 = v31[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_31;
                if (v9 >= v30)
                  goto LABEL_23;
                v22 = v31[v9];
                ++v23;
                if (v22)
                  goto LABEL_20;
              }
            }
            v9 = v23;
          }
        }
LABEL_20:
        v7 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v50 = v9;
      v24 = *(_QWORD *)(v4 + 48) + 16 * v20;
      if ((v35 & 1) != 0)
      {
        v33 = *(void **)v24;
        LODWORD(v11) = *(unsigned __int8 *)(v24 + 8);
        v12 = *(unsigned __int8 *)(v24 + 9);
        v25 = *(_QWORD *)(v4 + 56) + 848 * v20;
        sub_23AA724E8(v25, (uint64_t)__dst, qword_2542E6E20);
        v38 = *(_BYTE *)(v25 + 496);
        v39 = *(_BYTE *)(v25 + 497);
        v44 = *(_QWORD *)(v25 + 504);
        v37 = *(_BYTE *)(v25 + 512);
        v41 = *(_QWORD *)(v25 + 520);
        v40 = *(_BYTE *)(v25 + 528);
        v47 = *(_QWORD *)(v25 + 536);
        v48 = *(_QWORD *)(v25 + 552);
        v42 = *(_BYTE *)(v25 + 544);
        v43 = *(_BYTE *)(v25 + 560);
        v15 = *(_QWORD *)(v25 + 568);
        v45 = *(_BYTE *)(v25 + 576);
        v46 = *(_BYTE *)(v25 + 592);
        v18 = *(_BYTE *)(v25 + 593);
        v26 = v25 + 600;
        v49 = *(_BYTE *)(v25 + 594);
        v17 = *(_QWORD *)(v25 + 584);
        sub_23AA724E8(v26, (uint64_t)v51, &qword_2542E5050);
        sub_23AA724E8((uint64_t)__dst, (uint64_t)v53, qword_2542E6E20);
        sub_23AA724E8((uint64_t)v51, (uint64_t)v54, &qword_2542E5050);
        v16 = v33;
      }
      else
      {
        v10 = *(void **)v24;
        v11 = *(unsigned __int8 *)(v24 + 8);
        v12 = *(unsigned __int8 *)(v24 + 9);
        memcpy(__dst, (const void *)(*(_QWORD *)(v4 + 56) + 848 * v20), sizeof(__dst));
        v49 = BYTE2(__dst[74]);
        v32 = v7;
        v13 = BYTE1(__dst[74]);
        v14 = __dst[73];
        v15 = __dst[71];
        v45 = __dst[72];
        v46 = __dst[74];
        v47 = __dst[67];
        v48 = __dst[69];
        v42 = __dst[68];
        v43 = __dst[70];
        v41 = __dst[65];
        v44 = __dst[63];
        v39 = BYTE1(__dst[62]);
        v40 = __dst[66];
        v37 = __dst[64];
        v38 = __dst[62];
        sub_23AA88218(v10, v11, v12);
        sub_23AAB7F6C((uint64_t)__dst);
        sub_23AA724E8((uint64_t)__dst, (uint64_t)v53, qword_2542E6E20);
        sub_23AA724E8((uint64_t)&__dst[75], (uint64_t)v54, &qword_2542E5050);
        v16 = v10;
        v17 = v14;
        v18 = v13;
        v7 = v32;
      }
      sub_23AA724E8((uint64_t)v53, (uint64_t)__dst, qword_2542E6E20);
      LOBYTE(__dst[62]) = v38;
      BYTE1(__dst[62]) = v39;
      LOBYTE(__dst[64]) = v37;
      __dst[63] = v44;
      __dst[65] = v41;
      LOBYTE(__dst[66]) = v40;
      __dst[67] = v47;
      LOBYTE(__dst[68]) = v42;
      __dst[69] = v48;
      LOBYTE(__dst[70]) = v43;
      __dst[71] = v15;
      LOBYTE(__dst[72]) = v45;
      __dst[73] = v17;
      LOBYTE(__dst[74]) = v46;
      BYTE1(__dst[74]) = v18;
      BYTE2(__dst[74]) = v49;
      sub_23AA724E8((uint64_t)v54, (uint64_t)&__dst[75], &qword_2542E5050);
      memcpy(v55, __dst, 0x350uLL);
      result = (uint64_t)sub_23AA867F8(v16, v11 | (v12 << 8), v55, v36);
      v4 = v34;
      v9 = v50;
    }
  }
  result = swift_release();
  v28 = v29;
LABEL_29:
  *v28 = v36;
  return result;
}

void *sub_23AA867F8(void *a1, uint64_t a2, const void *a3, _QWORD *a4)
{
  id v8;
  unint64_t v9;
  uint64_t v10;
  void *result;

  sub_23B1C74A8();
  if ((a2 & 0x100) != 0)
  {
    sub_23B1C74B4();
    sub_23B1C63E0();
    v8 = a1;
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    sub_23AA862DC(a1, a2, 1);
  }
  else
  {
    sub_23B1C74B4();
    if ((_BYTE)a2)
    {
      sub_23B1C74B4();
      if (a2 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
  }
  sub_23B1C74E4();
  v9 = sub_23B1C6E0C();
  *(_QWORD *)((char *)a4 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
  v10 = a4[6] + 16 * v9;
  *(_QWORD *)v10 = a1;
  *(_BYTE *)(v10 + 8) = a2;
  *(_BYTE *)(v10 + 9) = BYTE1(a2) & 1;
  result = memcpy((void *)(a4[7] + 848 * v9), a3, 0x350uLL);
  ++a4[2];
  return result;
}

uint64_t sub_23AA86974(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,char a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57[2];
  int v58[2];
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  if (a57 != 1)
  {
    v77 = STACK[0x6F0];
    v78 = STACK[0x6F8];
    v75 = STACK[0x6E0];
    v76 = STACK[0x6E8];
    v73 = STACK[0x6D0];
    v74 = STACK[0x6D8];
    v71 = STACK[0x6C0];
    v72 = STACK[0x6C8];
    v69 = STACK[0x6B0];
    v70 = STACK[0x6B8];
    v67 = STACK[0x6A0];
    v68 = STACK[0x6A8];
    v66 = (void *)STACK[0x698];
    v65 = STACK[0x690];
    v64 = STACK[0x688];
    v63 = STACK[0x680];
    v62 = STACK[0x678];
    v80 = STACK[0x668];
    v81 = STACK[0x670];
    v79 = STACK[0x660];
    v61 = STACK[0x658];
    v60 = (void *)STACK[0x650];
    v59 = (id)STACK[0x648];
    *(_QWORD *)v58 = STACK[0x640];
    *(_QWORD *)v57 = STACK[0x638];
    sub_23AAAEC3C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29,
      a30,
      a31,
      a32,
      a33,
      a34,
      a35,
      a36,
      a37,
      a38,
      a39,
      a40,
      a41,
      a42,
      a43,
      a44,
      a45,
      a46,
      a47,
      a48,
      a49,
      a50,
      a51,
      a52,
      a53,
      a54,
      a55,
      a56,
      a57);
    return sub_23AAA5BA4(v57[0], v58[0], v59, v60, v61, v79, v80, v81, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72,
             v73,
             v74,
             v75,
             v76,
             v77,
             v78);
  }
  return result;
}

uint64_t sub_23AA86DE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  int v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  unsigned __int8 v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  id v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  id v42;
  unint64_t v43;
  int v44;
  unsigned __int8 v45;
  id v46;
  unint64_t v47;
  id v48;
  unint64_t v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  char v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  char v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  int64_t v83;
  int v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  void *v90;
  uint64_t v91;
  _QWORD *v92;
  char isUniquelyReferenced_nonNull_native;
  void *v94;
  id v95;
  id v96;
  char v97;
  char v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int v127;
  unsigned int v128;
  uint64_t v129;
  id v130;
  unsigned int v131;
  id v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  id v136;
  unint64_t v137;
  int v138;
  int v139;
  unint64_t v140;
  unint64_t v141;
  id v142;
  unsigned int v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  unsigned int v152;
  _QWORD *v153;
  unsigned int v154;
  unint64_t v155;
  id v156;
  unsigned int v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  _QWORD v163[62];
  _QWORD v164[62];
  _OWORD v165[31];
  _OWORD v166[53];
  _QWORD v167[31];
  _QWORD v168[62];
  char v169[864];
  char *v170;

  v161 = MEMORY[0x24BDAC7A8](a1);
  v162 = v1;
  v153 = v2;
  LODWORD(v155) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v147 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v146 = (char *)&v126 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v144 = (char *)&v126 - v9;
  v10 = type metadata accessor for ItemMetadata();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v145 = (uint64_t)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v126 - v13;
  v15 = sub_23B1C5DC8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v126 - v23;
  v25 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v25);
  v170 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v27 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v24, 1, 1, v15);
  sub_23AA8EFC8((uint64_t)v24, (uint64_t)v22, (uint64_t *)&unk_2542E67B8);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v22, 1, v15);
  v148 = v14;
  if (v28 == 1)
  {
    v29 = v27;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v22, v15);
  }
  v30 = (uint64_t)v170;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v170, v18, v15);
  v159 = *(int *)(v25 + 20);
  *(_QWORD *)(v30 + v159) = v27;
  v31 = v30 + *(int *)(v25 + 24);
  *(_QWORD *)v31 = "SQLDB: Decoration Decoding";
  *(_QWORD *)(v31 + 8) = 26;
  v160 = v31;
  v158 = 2;
  *(_BYTE *)(v31 + 16) = 2;
  v32 = v27;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_23AA8A05C((uint64_t)v24, (uint64_t *)&unk_2542E67B8);
  v33 = (id)v161;
  if ((objc_msgSend((id)v161, sel_isNullAtIndex_, 0) & 1) == 0)
    v158 = objc_msgSend(v33, sel_BOOLAtIndex_, 0);
  v34 = objc_msgSend(v33, sel_isNullAtIndex_, 1);
  v35 = v162;
  if ((v34 & 1) != 0)
    v36 = 2;
  else
    v36 = objc_msgSend(v33, sel_BOOLAtIndex_, 1);
  v37 = objc_msgSend(v33, sel_isNullAtIndex_, 2);
  if ((v37 & 1) != 0)
    v38 = 0;
  else
    v38 = objc_msgSend(v33, sel_longAtIndex_, 2);
  v39 = objc_msgSend(v33, sel_isNullAtIndex_, 3);
  if ((v39 & 1) != 0)
    v151 = 0;
  else
    v151 = objc_msgSend(v33, sel_longAtIndex_, 3);
  v157 = objc_msgSend(v33, sel_isNullAtIndex_, 4);
  v152 = v39;
  if ((v157 & 1) != 0)
  {
    v156 = 0;
  }
  else
  {
    if (objc_msgSend(v33, sel_isNullAtIndex_, 4))
      goto LABEL_172;
    if (swift_dynamicCastMetatype())
      goto LABEL_173;
    v156 = objc_msgSend(v33, sel_unsignedLongLongAtIndex_, 4);
  }
  v40 = objc_msgSend(v33, sel_isNullAtIndex_, 5);
  if ((v40 & 1) != 0)
  {
    v143 = 0;
  }
  else
  {
    if (objc_msgSend(v33, sel_isNullAtIndex_, 5))
      goto LABEL_172;
    if (swift_dynamicCastMetatype())
      goto LABEL_173;
    v143 = objc_msgSend(v33, sel_unsignedIntAtIndex_, 5);
  }
  if ((objc_msgSend(v33, sel_isNullAtIndex_, 6) & 1) != 0)
  {
    v142 = 0;
  }
  else
  {
    if (objc_msgSend(v33, sel_isNullAtIndex_, 6))
      goto LABEL_172;
    if (swift_dynamicCastMetatype())
      goto LABEL_173;
    v142 = objc_msgSend(v33, sel_longLongAtIndex_, 6);
  }
  if ((objc_msgSend(v33, sel_isNullAtIndex_, 7) & 1) != 0)
    v154 = 2;
  else
    v154 = objc_msgSend(v33, sel_BOOLAtIndex_, 7);
  if ((objc_msgSend(v33, sel_isNullAtIndex_, 8) & 1) != 0)
  {
    v138 = 4;
  }
  else
  {
    v41 = sub_23AAA4950(8);
    if (v35)
      goto LABEL_152;
    v138 = v41;
  }
  v42 = v33;
  if (objc_msgSend(v42, sel_isNullAtIndex_, 9))
  {

    v137 = 0;
    v139 = 255;
  }
  else
  {
    v43 = sub_23AAA43E4(v42, 9);
    if (v35)
    {

      goto LABEL_152;
    }
    v139 = v44;
    v137 = v43;

  }
  v45 = objc_msgSend(v42, sel_isNullAtIndex_, 10);
  v136 = v38;
  if ((v45 & 1) != 0)
  {
    v129 = 0;
    v141 = 0;
  }
  else
  {
    v46 = objc_msgSend(v42, sel_stringAtIndex_, 10);
    v129 = sub_23B1C63E0();
    v141 = v47;

  }
  if ((objc_msgSend(v42, sel_isNullAtIndex_, 11) & 1) != 0)
    v135 = 2;
  else
    v135 = objc_msgSend(v42, sel_BOOLAtIndex_, 11);
  if ((objc_msgSend(v42, sel_isNullAtIndex_, 12) & 1) != 0)
    v134 = 2;
  else
    v134 = objc_msgSend(v42, sel_BOOLAtIndex_, 12);
  if ((objc_msgSend(v42, sel_isNullAtIndex_, 13) & 1) != 0)
  {
    v149 = 0;
    v161 = 0xF000000000000000;
  }
  else
  {
    if (objc_msgSend(v42, sel_isNullAtIndex_, 13))
      goto LABEL_172;
    if (swift_dynamicCastMetatype())
      goto LABEL_173;
    v48 = objc_msgSend(v42, sel_dataAtIndex_, 13);
    v149 = sub_23B1C5AD4();
    v161 = v49;

  }
  if ((objc_msgSend(v42, sel_isNullAtIndex_, 14) & 1) != 0)
  {
    v150 = 0;
    v140 = 0xF000000000000000;
    goto LABEL_63;
  }
  if (objc_msgSend(v42, sel_isNullAtIndex_, 14))
    goto LABEL_172;
  if (swift_dynamicCastMetatype())
LABEL_173:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  v50 = objc_msgSend(v42, sel_dataAtIndex_, 14);
  v150 = sub_23B1C5AD4();
  v140 = v51;

LABEL_63:
  v133 = objc_msgSend(v42, sel_isNullAtIndex_, 15);
  if ((v133 & 1) != 0)
    v132 = 0;
  else
    v132 = objc_msgSend(v42, sel_longAtIndex_, 15);
  v131 = objc_msgSend(v42, sel_isNullAtIndex_, 16);
  if ((v131 & 1) != 0)
    v130 = 0;
  else
    v130 = objc_msgSend(v42, sel_longAtIndex_, 16);
  v52 = sub_23AAAE8F4();
  sub_23AAA1310(v42, v52, 17, (uint64_t)v168);
  if (v35)
  {
    swift_bridgeObjectRelease();
    sub_23AAA3E18(v150, v140);
    sub_23AAA3E18(v149, v161);
    swift_bridgeObjectRelease();
    goto LABEL_152;
  }
  v127 = v37;
  v128 = v36;
  swift_bridgeObjectRelease();
  if ((v155 & 1) == 0)
    goto LABEL_76;
  v53 = *(_QWORD *)(sub_23AAAE8F4() + 16);
  swift_bridgeObjectRelease();
  v54 = v53 + 17;
  if (__OFADD__(v53, 17))
  {
    __break(1u);
    goto LABEL_170;
  }
  if (v54 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  if ((unint64_t)v54 >> 31)
  {
LABEL_171:
    __break(1u);
LABEL_172:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  }
  if (!objc_msgSend(v42, sel_isNullAtIndex_, v53 + 17))
  {
    v67 = sub_23AAAF0A8();
    sub_23AAAB6FC(v42, (uint64_t)v67, v53 + 17, (uint64_t)v165);
    swift_bridgeObjectRelease();
    v166[12] = v165[12];
    v166[13] = v165[13];
    v166[14] = v165[14];
    v166[8] = v165[8];
    v166[9] = v165[9];
    v166[10] = v165[10];
    v166[11] = v165[11];
    v166[4] = v165[4];
    v166[5] = v165[5];
    v166[6] = v165[6];
    v166[7] = v165[7];
    v166[0] = v165[0];
    v166[1] = v165[1];
    v166[2] = v165[2];
    *(_QWORD *)&v166[15] = *(_QWORD *)&v165[15];
    v166[3] = v165[3];
    nullsub_1(v166);
    goto LABEL_77;
  }
LABEL_76:
  sub_23AAF8E48((uint64_t)v166);
LABEL_77:
  sub_23AA724E8((uint64_t)v166, (uint64_t)v167, &qword_2542E5050);
  v55 = v139;
  if (((v157 | v40) & 1) == 0 && v154 != 2 && (v158 & 1) == 0 && v158 != 2 && v138 != 4)
  {
    v56 = sub_23B1C5BDC();
    v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56);
    v58 = (uint64_t)v144;
    v57(v144, 1, 1, v56);
    v59 = (uint64_t)v146;
    v57(v146, 1, 1, v56);
    v60 = (uint64_t)v147;
    v57(v147, 1, 1, v56);
    LOBYTE(v166[0]) = 1;
    LOBYTE(v125) = 0;
    v61 = (uint64_t)v148;
    sub_23AB58208(v138, (uint64_t)v142, 0, 1, 0x100000000uLL, 1, 1, 0, (uint64_t)v148, v154, 2u, v58, v59, 0, 0, 0, v60, 0, 0,
      1,
      0,
      0,
      0xF000000000000000,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0x100000000uLL,
      v125,
      0,
      0,
      0,
      0,
      0);
    v62 = v145;
    sub_23AA907B0(v61, v145, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v63 = sub_23AA9BD7C((uint64_t)v156, v143, v62);
    if (v168[13] && v168[5] == v63 && LODWORD(v168[6]) == v64)
    {
      if ((v168[8] & 1) != 0)
      {
        if ((v66 & 1) != 0)
        {
LABEL_93:
          sub_23AA937BC(v61, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
          v30 = (uint64_t)v170;
          v55 = v139;
          goto LABEL_94;
        }
      }
      else if ((v66 & 1) == 0 && v168[7] == v65)
      {
        goto LABEL_93;
      }
    }
    if ((v168[3] & 8) == 0)
      v168[3] |= 8uLL;
    goto LABEL_93;
  }
LABEL_94:
  v68 = v168[13];
  v69 = v168[10];
  v70 = v168[11];
  if (!v168[13])
  {
    v69 = 0;
    v70 = -1;
  }
  if (v55 == -1)
  {
    v71 = v141;
    if (v70 != -1)
      goto LABEL_121;
  }
  else
  {
    v71 = v141;
    if (v70 == -1)
      goto LABEL_121;
    if (v55)
    {
      if (v55 == 1)
      {
        if (v70 != 1 || v137 != v69)
          goto LABEL_121;
      }
      else if (v137)
      {
        if (v70 != 2 || v69 != 1)
          goto LABEL_121;
      }
      else if (v70 != 2 || v69)
      {
        goto LABEL_121;
      }
    }
    else if (v70 || (_DWORD)v137 != (_DWORD)v69)
    {
      goto LABEL_121;
    }
  }
  if (!v168[13])
  {
    if (!v71)
      goto LABEL_124;
    goto LABEL_121;
  }
  v72 = v168[12];
  swift_bridgeObjectRetain();
  if (!v71)
  {
LABEL_121:
    swift_bridgeObjectRelease();
LABEL_122:
    if ((~LODWORD(v168[3]) & 3) != 0)
      v168[3] |= 3uLL;
    goto LABEL_124;
  }
  swift_bridgeObjectRetain_n();
  v73 = sub_23AAAE580(v129, v71);
  v75 = v74;
  swift_bridgeObjectRelease();
  v162 = 0;
  if (v75)
  {
    if (v73 == 12565487 && v75 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_155:
      swift_bridgeObjectRetain();
      v100 = v129;
      v101 = sub_23B1C64B8();
      v102 = sub_23AA8A1BC(v101, v100, v71);
      v104 = v103;
      v106 = v105;
      v108 = v107;
      swift_bridgeObjectRelease();
      v129 = MEMORY[0x23B85ED8C](v102, v104, v106, v108);
      v155 = v109;
      swift_bridgeObjectRelease();
      goto LABEL_157;
    }
    v99 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v99 & 1) != 0)
      goto LABEL_155;
  }
  swift_bridgeObjectRetain();
  v155 = v71;
LABEL_157:
  swift_bridgeObjectRetain();
  v110 = sub_23AAAE580(v72, v68);
  v112 = v111;
  swift_bridgeObjectRelease();
  if (!v112)
    goto LABEL_163;
  if (v110 != 12565487 || v112 != 0xA300000000000000)
  {
    v113 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v113 & 1) != 0)
      goto LABEL_162;
LABEL_163:
    swift_bridgeObjectRetain();
    v123 = v68;
    goto LABEL_164;
  }
  swift_bridgeObjectRelease();
LABEL_162:
  swift_bridgeObjectRetain();
  v114 = sub_23B1C64B8();
  v115 = sub_23AA8A1BC(v114, v72, v68);
  v117 = v116;
  v119 = v118;
  v121 = v120;
  swift_bridgeObjectRelease();
  v72 = MEMORY[0x23B85ED8C](v115, v117, v119, v121);
  v123 = v122;
  swift_bridgeObjectRelease();
LABEL_164:
  if (v129 == v72 && v155 == v123)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v30 = (uint64_t)v170;
    goto LABEL_124;
  }
  v124 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = (uint64_t)v170;
  if ((v124 & 1) == 0)
    goto LABEL_122;
LABEL_124:
  v76 = v168[36];
  if (v168[36] != 1)
  {
    v77 = v168[34];
    v79 = v168[35];
    sub_23AAAE668(v168[34], v168[35]);
    if (v161 >> 60 == 15)
    {
      if (v79 >> 60 != 15)
        goto LABEL_131;
    }
    else
    {
      if (v79 >> 60 == 15)
        goto LABEL_131;
      v82 = v149;
      v83 = v161;
      sub_23AAA3E2C(v149, v161);
      sub_23AAA3E2C(v82, v83);
      sub_23AAAE6AC(v82, v83);
      LODWORD(v170) = v84;
      sub_23AAA3E18(v77, v79);
      sub_23AAA3E18(v82, v83);
      sub_23AAA3E18(v82, v83);
      if ((v170 & 1) == 0)
      {
LABEL_132:
        if ((v168[32] & 8) == 0)
          v168[32] |= 8uLL;
        if (v76 == 1)
        {
          v78 = 0;
          v79 = 0xF000000000000000;
          goto LABEL_138;
        }
      }
    }
    v78 = v168[37];
    v79 = v168[38];
    sub_23AAAE668(v168[37], v168[38]);
    goto LABEL_138;
  }
  v77 = 0;
  v78 = 0;
  v79 = 0xF000000000000000;
  if (v161 >> 60 != 15)
  {
LABEL_131:
    v80 = v149;
    v81 = v161;
    sub_23AAA3E2C(v149, v161);
    sub_23AAA3E18(v80, v81);
    sub_23AAA3E18(v77, v79);
    goto LABEL_132;
  }
LABEL_138:
  v85 = v140;
  if (v140 >> 60 == 15)
  {
    if (v79 >> 60 == 15)
      goto LABEL_146;
    goto LABEL_142;
  }
  if (v79 >> 60 == 15)
  {
LABEL_142:
    v86 = v150;
    sub_23AAA3E2C(v150, v140);
    sub_23AAA3E18(v86, v85);
    sub_23AAA3E18(v78, v79);
    goto LABEL_143;
  }
  v87 = v150;
  sub_23AAA3E2C(v150, v140);
  sub_23AAA3E2C(v87, v85);
  sub_23AAAE6AC(v87, v85);
  v89 = v88;
  sub_23AAA3E18(v78, v79);
  sub_23AAA3E18(v87, v85);
  sub_23AAA3E18(v87, v85);
  if ((v89 & 1) == 0)
  {
LABEL_143:
    if ((~LODWORD(v168[32]) & 3) != 0)
      v168[32] |= 3uLL;
  }
LABEL_146:
  memcpy(v164, v168, sizeof(v164));
  v90 = (void *)v164[0];
  v91 = LOBYTE(v164[1]);
  memcpy(v165, v168, sizeof(v165));
  nullsub_1(v165);
  sub_23AA724E8((uint64_t)v165, (uint64_t)v166, qword_2542E6E20);
  LOBYTE(v166[31]) = v158;
  BYTE1(v166[31]) = v128;
  *((_QWORD *)&v166[31] + 1) = v156;
  LOBYTE(v166[32]) = v157;
  *((_QWORD *)&v166[32] + 1) = v137;
  LOBYTE(v166[33]) = v139;
  *((_QWORD *)&v166[33] + 1) = v136;
  LOBYTE(v166[34]) = v127;
  *((_QWORD *)&v166[34] + 1) = v151;
  LOBYTE(v166[35]) = v152;
  *((_QWORD *)&v166[35] + 1) = v132;
  LOBYTE(v166[36]) = v133;
  *((_QWORD *)&v166[36] + 1) = v130;
  LOBYTE(v166[37]) = v131;
  BYTE1(v166[37]) = v135;
  BYTE2(v166[37]) = v134;
  sub_23AA724E8((uint64_t)v167, (uint64_t)&v166[37] + 8, &qword_2542E5050);
  memcpy(v169, v166, 0x350uLL);
  sub_23ACFC940((uint64_t)v164);
  sub_23AAB7E4C(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
  v92 = v153;
  if ((_DWORD)v91 != 255)
  {
    sub_23AB3C920((uint64_t)v166, (voidsub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v163[0] = *v92;
    *v92 = 0x8000000000000000;
    sub_23AA85DD4(v169, v90, v91, isUniquelyReferenced_nonNull_native);
    *v92 = v163[0];
    swift_bridgeObjectRelease();
  }
  v94 = (void *)v168[30];
  if (v168[30])
  {
    v95 = (id)v168[30];
    sub_23AB3C920((uint64_t)v166, (voidsub_23AA88348, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AA88224);
    v96 = v95;
    v97 = swift_isUniquelyReferenced_nonNull_native();
    v163[0] = *v92;
    *v92 = 0x8000000000000000;
    sub_23AA85DD4(v169, v94, 256, v97);
    *v92 = v163[0];

    swift_bridgeObjectRelease();
    sub_23AAB7E4C(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    sub_23AB3C920((uint64_t)v166, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AAA5BA4);

  }
  else
  {
    sub_23AAB7E4C(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    sub_23AB3C920((uint64_t)v166, (voidsub_23AAAEC3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AAA5BA4);
  }
  sub_23AAA3E18(v150, v85);
  sub_23AAA3E18(v149, v161);
  memcpy(v163, v168, sizeof(v163));
  sub_23AAFC3AC((uint64_t)v163);
LABEL_152:
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  return sub_23AA937BC(v30, type metadata accessor for Signpost);
}

id sub_23AA88218(id result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_23AA88224(int a1, int a2, id a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  id v26;
  id v27;
  id v28;
  uint64_t result;

  if (a3 != (id)1)
  {
    v26 = a3;
    v27 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23AA8831C(a25);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23AA8831C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23AA88348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,char a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  id v57;
  id v58;
  id v59;
  uint64_t result;

  if (a57)
  {
    sub_23AAA7638(a6, a7, a8, a9, a10, a11, a12, a13, a14);
    sub_23AAAE478(a19, a20, a21);
    sub_23AAAE4B4(a22, a23, a24);
    v57 = a31;
    v58 = a29;
    sub_23AAAE5C0(a35, a36, a37, a38, a39);
    sub_23AAAE478(a44, a45, a46);
    sub_23AAAE4B4(a47, a48, a49);
    v59 = a54;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23AA88520(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  char v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t (*v46)(unint64_t *);
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v53;
  id v54;
  char v55;
  void *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  void *v67;

  v2 = sub_23AA89168(MEMORY[0x24BEE4AF8]);
  v62 = a1;
  if (a1 >> 62)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    v3 = sub_23B1C7088();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = 4;
      v58 = MEMORY[0x24BEE4AD8] + 8;
      v59 = v3;
      do
      {
        if ((v62 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x23B85F860](v4 - 4, v62);
        else
          v6 = *(id *)(v62 + 8 * v4);
        v7 = v6;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        v64 = v4 - 3;
        v8 = objc_msgSend(v6, sel_parentItemIdentifier);
        v9 = v8;
        if (*(_QWORD *)(v2 + 16))
        {
          v10 = sub_23AA88CF8(v8);
          if ((v11 & 1) != 0)
          {
            v12 = v7;
            v13 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
            swift_bridgeObjectRetain();

            if (v13)
            {
              v14 = (void *)sub_23B1C61F4();
              swift_bridgeObjectRelease();
            }
            else
            {
              v14 = 0;
            }
            v5 = v4 - 3;
            objc_msgSend(v12, sel_setInheritedUserInfo_, v14, v58);

            goto LABEL_6;
          }
        }
        v63 = v4;

        v15 = objc_msgSend(v7, sel_parentItemIdentifier);
        sub_23B1C63E0();
        v16 = sub_23AA8A4F8();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          goto LABEL_20;
        v17 = sub_23B1C63E0();
        v19 = sub_23AA8A1BC(0x80007uLL, v17, v18);
        v21 = v20;
        v22 = v2;
        v24 = v23;
        v26 = v25;
        swift_bridgeObjectRelease();
        v27 = v24;
        v2 = v22;
        v28 = MEMORY[0x23B85ED8C](v19, v21, v27, v26);
        v30 = v29;
        swift_bridgeObjectRelease();
        v31 = sub_23AA8A208(v28, v30);
        if (v32 == -1)
        {
LABEL_20:
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
          v37 = swift_allocObject();
          *(_QWORD *)(v37 + 16) = v15;
          *(_WORD *)(v37 + 24) = 256;
          *(_BYTE *)(v37 + 42) = 0;
          *(_QWORD *)(v37 + 32) = v15;
          *(_WORD *)(v37 + 40) = 256;
          v36 = *(_QWORD *)(v60 + 16);
          v38 = v15;
          if (!v15)
            goto LABEL_4;
        }
        else
        {
          v33 = v31;
          v34 = v32;

          __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
          v35 = swift_allocObject();
          *(_QWORD *)(v35 + 16) = v33;
          *(_BYTE *)(v35 + 24) = v34;
          *(_BYTE *)(v35 + 25) = 0;
          *(_QWORD *)(v35 + 32) = v33;
          *(_BYTE *)(v35 + 40) = v34;
          *(_WORD *)(v35 + 41) = 0;
          v36 = *(_QWORD *)(v60 + 16);
          v65 = v33;
          v66 = v34;
          (*(void (**)(void **__return_ptr, unint64_t *))(**(_QWORD **)(v36 + 16) + 160))(&v67, &v65);
          if (v61)
            goto LABEL_38;
          v15 = v67;
          if (!v67)
          {
LABEL_4:

            swift_release();
            v3 = v59;
LABEL_5:
            v4 = v63;
            v5 = v64;
            goto LABEL_6;
          }
        }
        if (*(_QWORD *)(v2 + 16))
        {
          v39 = v15;
          v40 = sub_23AA88CF8(v39);
          if ((v41 & 1) != 0)
          {
            v42 = v7;
            v43 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v40);
            swift_bridgeObjectRetain();

            if (v43)
            {
              v44 = (void *)sub_23B1C61F4();
              swift_bridgeObjectRelease();
            }
            else
            {
              v44 = 0;
            }
            v3 = v59;
            objc_msgSend(v42, sel_setInheritedUserInfo_, v44, v58);

            swift_release();
            goto LABEL_5;
          }

        }
        v45 = *(_QWORD *)(v36 + 40);
        v65 = (unint64_t)v15;
        v46 = *(uint64_t (**)(unint64_t *))(*(_QWORD *)v45 + 272);
        swift_retain();
        v47 = v46(&v65);
        if (v61)
        {

          swift_release();
LABEL_38:
          swift_release();

          break;
        }
        v48 = (void *)v47;
        swift_release();
        if (v48)
        {
          v49 = objc_msgSend(v48, sel_userInfo);

          v48 = (void *)sub_23B1C620C();
        }
        v50 = v7;
        v51 = objc_msgSend(v7, sel_parentItemIdentifier, v58);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v65 = v2;
        sub_23AA88CFC((uint64_t)v48, v51, isUniquelyReferenced_nonNull_native);
        v53 = v65;

        swift_bridgeObjectRelease();
        v54 = v15;
        swift_bridgeObjectRetain();
        v55 = swift_isUniquelyReferenced_nonNull_native();
        v65 = v53;
        sub_23AA88CFC((uint64_t)v48, v54, v55);
        v2 = v65;

        swift_bridgeObjectRelease();
        if (v48)
        {
          v56 = (void *)sub_23B1C61F4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v56 = 0;
        }
        v3 = v59;
        v5 = v64;
        objc_msgSend(v50, sel_setInheritedUserInfo_, v56);

        swift_release();
        v4 = v63;
LABEL_6:
        ++v4;
      }
      while (v5 != v3);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23AA88AF8(uint64_t a1)
{
  uint64_t v2;

  sub_23B1C63E0();
  sub_23B1C74A8();
  sub_23B1C64A0();
  v2 = sub_23B1C74E4();
  swift_bridgeObjectRelease();
  return sub_23AA88B84(a1, v2);
}

unint64_t sub_23AA88B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23B1C63E0();
    v8 = v7;
    if (v6 == sub_23B1C63E0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23B1C63E0();
          v15 = v14;
          if (v13 == sub_23B1C63E0() && v15 == v16)
            break;
          v18 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

id sub_23AA88CFC(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_23AA88CF8(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_23B186844();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_23AA88E4C(v12, a3 & 1);
  v18 = sub_23AA88CF8(a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  result = (id)sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AA88E4C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E20C0);
  v37 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35)
          goto LABEL_33;
        v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_33;
          v23 = v36[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v34;
              if ((v37 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v23 = v36[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = 8 * v21;
      v30 = *(void **)(*(_QWORD *)(v5 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v32 = v30;
      }
      sub_23B1C63E0();
      sub_23B1C74A8();
      sub_23B1C64A0();
      v14 = sub_23B1C74E4();
      result = swift_bridgeObjectRelease();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_23AA89168(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E20C0);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = (void *)*(v4 - 1);
    v5 = *v4;
    swift_bridgeObjectRetain();
    v7 = v6;
    result = sub_23AA88CF8(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v7;
    *(_QWORD *)(v2[7] + v10) = v5;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_23AA8926C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t AssociatedConformanceWitness;
  unint64_t v21;
  int v22;
  id v23;
  char *v24;
  id v25;
  char *v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  void *v42;
  uint64_t (*v43)(uint64_t);
  id v44;
  unsigned __int8 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  void *v53;
  uint64_t v54;
  void (*v55)(void);
  uint64_t (*v56)(uint64_t);
  char *v57;
  uint64_t v58;
  id v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  void *v66;
  unint64_t v67;
  id v68;
  void *v69;
  void *v70;
  id v71;
  void (*v72)(char *, uint64_t, uint64_t);
  void *v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  id v79;
  uint64_t v80;
  void *v81;
  unsigned int v82;
  id v83;
  char isEscapingClosureAtFileLocation;
  char *v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  unint64_t v93;
  void *v94;
  id v95;
  char *v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  char *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id aBlock;
  unint64_t v110;
  id (*v111)(uint64_t, void *);
  void *v112;
  uint64_t (*v113)();
  uint64_t v114;
  uint64_t v115;

  v108 = a1;
  v115 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 744);
  v99 = *(_QWORD **)v1;
  v106 = v99[91];
  v107 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v103 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v101 = (char *)&v87 - v7;
  v8 = sub_23B1C5DC8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v98 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v87 - v15;
  v17 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v17);
  v105 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v1;
  if (v1[32] == 1)
  {
    v92 = v6;
    if (qword_2542E6818 != -1)
      swift_once();
    v19 = (void *)qword_2542EDD28;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v8);
    aBlock = 0;
    v110 = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_23B1C7340();
    v21 = v110;
    v95 = aBlock;
    sub_23AA8A098((uint64_t)v16, (uint64_t)v14);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
    v97 = AssociatedTypeWitness;
    v93 = AssociatedConformanceWitness;
    v96 = v16;
    if (v22 == 1)
    {
      v23 = v19;
      v24 = v98;
      sub_23B1C5DB0();
      sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E67B8);
    }
    else
    {
      v24 = v98;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v98, v14, v8);
    }
    v26 = v105;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v105, v24, v8);
    v94 = (void *)*(int *)(v17 + 20);
    *(_QWORD *)((char *)v94 + (_QWORD)v26) = v19;
    v27 = &v26[*(int *)(v17 + 24)];
    *(_QWORD *)v27 = "SQLDB: Build Hierarichal User Info";
    *((_QWORD *)v27 + 1) = 34;
    v98 = v27;
    v27[16] = 2;
    v28 = v19;
    swift_bridgeObjectRetain();
    sub_23B1C6BE4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_23B1CA760;
    *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v29 + 64) = sub_23AAA0D14();
    *(_QWORD *)(v29 + 32) = v95;
    *(_QWORD *)(v29 + 40) = v21;
    sub_23B1C5D98();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v96, (uint64_t *)&unk_2542E67B8);
    v31 = v102;
    v30 = v103;
    v32 = *(_QWORD **)&v102[qword_2542EDF00];
    v33 = v101;
    v34 = v97;
    v91 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 16);
    v91(v101, v108, v97);
    v35 = *(unsigned __int8 *)(v30 + 80);
    v96 = (char *)(v35 | 7);
    v36 = (char *)swift_allocObject();
    *((_QWORD *)v36 + 2) = v106;
    v37 = v99;
    v95 = (id)v99[92];
    v38 = v107;
    *((_QWORD *)v36 + 3) = v95;
    *((_QWORD *)v36 + 4) = v38;
    v39 = v37[94];
    *((_QWORD *)v36 + 5) = v39;
    *((_QWORD *)v36 + 6) = v31;
    v40 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v40(&v36[(v35 + 56) & ~v35], v33, v34);
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = sub_23AA956CC;
    *(_QWORD *)(v41 + 24) = v36;
    v113 = sub_23AA956C8;
    v114 = v41;
    aBlock = (id)MEMORY[0x24BDAC760];
    v110 = 1107296256;
    v111 = sub_23AA9432C;
    v112 = &block_descriptor_1000;
    v42 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v99 = v32;
    v43 = (uint64_t (*)(uint64_t))objc_msgSend(v32, sel_fetchSwift_error_, v42, &aBlock);
    _Block_release(v42);
    v44 = aBlock;
    LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v32 & 1) != 0)
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v43)
    {
      if (!objc_msgSend(v43, sel_next))
      {

        goto LABEL_16;
      }
      v90 = v40;
      v45 = objc_msgSend(v43, sel_isNullAtIndex_, 0);
      v46 = v104;
      if ((v45 & 1) != 0)
      {
        if ((objc_msgSend(v43, sel_isNullAtIndex_, 1) & 1) != 0)
        {
          v89 = 0;
          v88 = 0;
          v47 = (_QWORD *)v93;
        }
        else
        {
          v49 = sub_23AAAC91C(1);
          v47 = (_QWORD *)v93;
          if (v46)
          {

LABEL_26:
            v43 = 0;
            goto LABEL_27;
          }
          v88 = v50;
          v89 = v49;
        }
        v55 = *(void (**)(void))(v47[5] + 16);
        v56 = v43;
        v57 = v92;
        v55();
        if (v46)
        {
          sub_23AAA5C9C(v89);

          goto LABEL_26;
        }
        v87 = v56;
        if ((sub_23B1C63A4() & 1) != 0)
        {
          if (v89)
          {
            v60 = objc_allocWithZone(MEMORY[0x24BDC8398]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v61 = (void *)sub_23B1C66F8();
            swift_bridgeObjectRelease();
            v62 = (void *)sub_23B1C66F8();
            swift_bridgeObjectRelease();
            v63 = objc_msgSend(v60, sel_initWithKeys_values_, v61, v62);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          else
          {
            v63 = 0;
          }
          v25 = objc_msgSend((id)objc_opt_self(), sel_mergeWithUserInfo_intoParentUserInfo_, v63, 0);

          (*(void (**)(char *, uint64_t))(v103 + 8))(v92, v97);
          sub_23B1C6BD8();
          v54 = (uint64_t)v105;
          goto LABEL_35;
        }
        v64 = sub_23AA8926C(v57);
        v104 = 0;
        v65 = v87;
        v66 = (void *)v64;
        if (v64)
        {
          v67 = ~v35;
          if (v89)
          {
            v68 = objc_allocWithZone(MEMORY[0x24BDC8398]);
            swift_bridgeObjectRetain();
            v93 = ~v35;
            swift_bridgeObjectRetain();
            v69 = (void *)sub_23B1C66F8();
            swift_bridgeObjectRelease();
            v70 = (void *)sub_23B1C66F8();
            swift_bridgeObjectRelease();
            v71 = objc_msgSend(v68, sel_initWithKeys_values_, v69, v70);
            v67 = v93;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          else
          {
            v71 = 0;
          }
          v72 = v91;
          v73 = (void *)objc_opt_self();
          v93 = (unint64_t)v66;
          v74 = objc_msgSend(v73, sel_mergeWithUserInfo_intoParentUserInfo_, v71, v66);

          v75 = v101;
          v76 = v97;
          v72(v101, v108, v97);
          v77 = (v35 + 64) & v67;
          v78 = (char *)swift_allocObject();
          v79 = v95;
          *((_QWORD *)v78 + 2) = v106;
          *((_QWORD *)v78 + 3) = v79;
          *((_QWORD *)v78 + 4) = v107;
          *((_QWORD *)v78 + 5) = v39;
          *((_QWORD *)v78 + 6) = v102;
          *((_QWORD *)v78 + 7) = v74;
          v90(&v78[v77], v75, v76);
          v80 = swift_allocObject();
          *(_QWORD *)(v80 + 16) = sub_23AEF8EB4;
          *(_QWORD *)(v80 + 24) = v78;
          v113 = sub_23AA956C8;
          v114 = v80;
          aBlock = (id)MEMORY[0x24BDAC760];
          v110 = 1107296256;
          v111 = sub_23AA9432C;
          v112 = &block_descriptor_1010;
          v81 = _Block_copy(&aBlock);
          swift_retain();
          v25 = v74;
          swift_retain();
          swift_release();
          aBlock = 0;
          v82 = objc_msgSend(v99, sel_executeSwift_error_, v81, &aBlock);
          _Block_release(v81);
          v83 = aBlock;
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            v85 = v92;
            if (!v82)
            {
              sub_23B1C587C();

              swift_willThrow();
              (*(void (**)(char *, uint64_t))(v103 + 8))(v85, v97);
              v43 = sub_23AEF8EB4;
              goto LABEL_27;
            }
            (*(void (**)(char *, uint64_t))(v103 + 8))(v92, v97);

            sub_23B1C6BD8();
            v86 = (uint64_t)v105;
            sub_23B1C5DA4();
            sub_23AA937BC(v86, type metadata accessor for Signpost);
            swift_release();
            goto LABEL_17;
          }
LABEL_46:
          __break(1u);
        }
        (*(void (**)(char *, uint64_t))(v103 + 8))(v92, v97);

        sub_23AAA5C9C(v89);
LABEL_16:
        sub_23B1C6BD8();
        v48 = (uint64_t)v105;
        sub_23B1C5DA4();
        sub_23AA937BC(v48, type metadata accessor for Signpost);
        v25 = 0;
LABEL_17:
        swift_release();
        return v25;
      }
      sub_23AAAC91C(0);
      if (!v46)
      {
        v51 = objc_allocWithZone(MEMORY[0x24BDC8398]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52 = (void *)sub_23B1C66F8();
        swift_bridgeObjectRelease();
        v53 = (void *)sub_23B1C66F8();
        swift_bridgeObjectRelease();
        v25 = objc_msgSend(v51, sel_initWithKeys_values_, v52, v53);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_23B1C6BD8();
        v54 = (uint64_t)v105;
LABEL_35:
        sub_23B1C5DA4();
        sub_23AA937BC(v54, type metadata accessor for Signpost);
        goto LABEL_17;
      }

      v43 = 0;
    }
    else
    {
      sub_23B1C587C();

      swift_willThrow();
    }
LABEL_27:
    v25 = v94;
    sub_23B1C6BD8();
    v58 = (uint64_t)v105;
    sub_23B1C5DA4();
    sub_23AA937BC(v58, type metadata accessor for Signpost);
    swift_release();
    sub_23AAB7948((uint64_t)v43);
    return v25;
  }
  return 0;
}

uint64_t sub_23AA8A020(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Signpost(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AA8A05C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23AA8A098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23AA8A0E0()
{
  char v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23B1C63E0();
  v0 = sub_23AA8A4F8();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
    return 0;
  v1 = sub_23B1C63E0();
  v3 = sub_23AA8A1BC(0x80007uLL, v1, v2);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x23B85ED8C](v3, v5, v7, v9);
  v12 = v11;
  swift_bridgeObjectRelease();
  return sub_23AA8A208(v10, v12);
}

unint64_t sub_23AA8A1BC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_23B1C65C0();
  __break(1u);
  return result;
}

unint64_t sub_23AA8A208(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;

  v2 = a1 == 1953460082 && a2 == 0xE400000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (a1 == 0x6873617274 && a2 == 0xE500000000000000 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if ((sub_23AA8A4F8() & 1) != 0)
  {
    result = sub_23B1C64C4();
    if (result >= 0x60000)
    {
      v7 = sub_23B1C65C0();
      v9 = v8;
      v11 = v10;
      v13 = v12;
      swift_bridgeObjectRelease();
      if ((v7 ^ v9) >= 0x4000)
      {
        v14 = sub_23AF2093C(v7, v9, v11, v13, 10);
        if ((v14 & 0x10000000000) != 0)
          v14 = sub_23B190E08(v7, v9, v11, v13, 10);
        v15 = v14;
        swift_bridgeObjectRelease();
        if ((v15 & 0x100000000) == 0)
          return v15;
        return 0;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      return 0;
    }
    __break(1u);
  }
  else
  {
    if ((sub_23AA8A4F8() & 1) == 0)
      goto LABEL_26;
    result = sub_23B1C64C4();
    if (result >= 0x70000)
    {
      v16 = sub_23B1C65C0();
      v18 = v17;
      v20 = v19;
      v22 = v21;
      swift_bridgeObjectRelease();
      if ((v16 ^ v18) >= 0x4000)
      {
        v23 = sub_23AF2086C(v16, v18, v20, v22, 10);
        if ((v24 & 0x100) != 0)
          v23 = (uint64_t)sub_23B190D18(v16, v18, v20, v22, 10);
        v5 = v23;
        v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
          return v5;
        return 0;
      }
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23AA8A4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_23B1C6518();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_23B1C6518();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_23B1C6518();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_23B1C6518();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23AA8A660(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_23AA8A6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _WORD v70[8];

  v58 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5A08();
  v65 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v57 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v57 - v13;
  sub_23AA8E24C((uint64_t)v57 - v13);
  v15 = *(_QWORD *)(a1 + 16);
  v57[1] = a1;
  if (v15)
  {
    v16 = a1 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
    v63 = *(_QWORD *)(v65 + 72);
    v64 = v17;
    swift_bridgeObjectRetain();
    v59 = v6;
    while (1)
    {
      v64(v5, v16, v6);
      v18 = v65;
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
      v19(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v6) == 1)
        break;
      v61 = v19;
      v20 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
      v20(v12, v5, v6);
      v21 = sub_23B1C59E4();
      v23 = v22;
      v24 = sub_23B1C656C();
      v62 = (void (*)(uint64_t, char *, uint64_t))v20;
      if ((v24 & 1) != 0)
      {
        result = sub_23B1C64DC();
        v26 = HIBYTE(v23) & 0xF;
        if ((v23 & 0x2000000000000000) == 0)
          v26 = v21 & 0xFFFFFFFFFFFFLL;
        if (4 * v26 < result >> 14)
        {
          __break(1u);
          return result;
        }
        v27 = sub_23B1C65C0();
        v60 = v16;
        v28 = v15;
        v29 = v9;
        v30 = v5;
        v31 = v14;
        v32 = v12;
        v34 = v33;
        v36 = v35;
        v38 = v37;
        swift_bridgeObjectRelease();
        v69 = v38;
        strcpy((char *)v70, "/private/var");
        HIBYTE(v70[6]) = 0;
        v70[7] = -5120;
        v66 = v27;
        v67 = v34;
        v12 = v32;
        v14 = v31;
        v5 = v30;
        v9 = v29;
        v15 = v28;
        v16 = v60;
        v68 = v36;
        sub_23B0EA258();
        sub_23B1C64E8();
        v6 = v59;
        swift_bridgeObjectRelease();
        v39 = (void *)objc_opt_self();
        v40 = (void *)sub_23B1C63BC();
        swift_bridgeObjectRelease();
        v41 = objc_msgSend(v39, sel_fileURLWithPath_, v40);

        sub_23B1C59CC();
      }
      else
      {
        v64(v9, (uint64_t)v12, v6);
        swift_bridgeObjectRelease();
      }
      v42 = (void *)sub_23B1C5954();
      v43 = (void *)sub_23B1C5954();
      v44 = objc_msgSend(v42, sel_fp_relativePathWithRealpath_, v43);

      if (v44
        || (v45 = (void *)sub_23B1C5954(),
            v46 = (void *)sub_23B1C5954(),
            v44 = objc_msgSend(v45, sel_fp_relativePathOf_, v46),
            v45,
            v46,
            v44))
      {
        v50 = sub_23B1C63E0();
        v52 = v51;

        v53 = *(void (**)(char *, uint64_t))(v65 + 8);
        v53(v9, v6);
        swift_bridgeObjectRelease();
        v53(v14, v6);
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6778);
        v55 = v58;
        v56 = (uint64_t *)(v58 + *(int *)(v54 + 48));
        v62(v58, v12, v6);
        *v56 = v50;
        v56[1] = v52;
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v55, 0, 1, v54);
      }
      v47 = *(void (**)(char *, uint64_t))(v65 + 8);
      v47(v9, v6);
      v47(v12, v6);
      v16 += v63;
      if (!--v15)
      {
        v61(v5, 1, 1, v6);
        break;
      }
    }
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
    swift_bridgeObjectRetain();
    v48(v5, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v6);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6778);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v58, 1, 1, v49);
}

uint64_t sub_23AA8ABA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_23ADA9D74(a1, a2, a3);
}

uint64_t sub_23AA8ABB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23ADA8DE8(a1, a2, *(_DWORD *)(v3 + 24), *(_BYTE **)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), a3, *(_BYTE *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_BYTE *)(v3 + 80), *(_QWORD *)(v3 + 88));
}

uint64_t sub_23AA8AC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_23AA8ABB4(a1, a2, a3);
}

uint64_t sub_23AA8AC14@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _BYTE *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  id v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  id v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  id v85;
  char *v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void *v93;
  void *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  os_log_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;

  v140 = a3;
  v130 = a7;
  v136 = a8;
  v137 = a6;
  v139 = a5;
  v128 = a1;
  v123 = sub_23B1C5E4C();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v124 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4300);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23B1C5A08();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v135 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v115 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v115 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v115 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v129 = a2;
  v32 = (char *)&v115 - v31;
  sub_23B1C590C();
  v138 = a4;
  sub_23AA8A6A4(*(_QWORD *)&a4[OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs], (uint64_t)v17);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6778);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v17, 1, v33) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v18);
    sub_23AA8A05C((uint64_t)v17, &qword_2542E4300);
    v34 = type metadata accessor for VFSItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v136, 1, 1, v34);
  }
  v131 = a12;
  v140 = a10;
  v133 = a9;
  v36 = &v17[*(int *)(v33 + 48)];
  v37 = *(_QWORD *)v36;
  v125 = *((_QWORD *)v36 + 1);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v30, v17, v18);
  v134 = v19;
  v38 = *(NSObject **)(v19 + 16);
  v126 = v32;
  ((void (*)(char *, char *, uint64_t))v38)(v27, v32, v18);
  v132 = v30;
  ((void (*)(char *, char *, uint64_t))v38)(v24, v30, v18);
  v39 = (uint64_t)v27;
  v40 = v18;
  if (a11 != 0xFF)
  {
    v41 = v141;
    sub_23AA8B7AC(v128, v129, (uint64_t)v27, (uint64_t)v24, v138, v139, v136, v137, v130, v133, v140, a11, v131);
    v141 = v41;
    swift_bridgeObjectRelease();
    v42 = *(void (**)(char *, uint64_t))(v134 + 8);
    v42(v24, v18);
    v42(v27, v18);
    v42(v132, v18);
    return ((uint64_t (*)(char *, uint64_t))v42)(v126, v18);
  }
  v43 = v133;
  v119 = v24;
  if (v130 == 1)
  {
    v44 = (uint64_t)v119;
    v45 = v141;
    sub_23AA8B7AC(v128, v129, v39, (uint64_t)v119, v138, v139, v136, v137, 1, v133, v140, 0xFFu, v131);
    v141 = v45;
    v46 = v126;
    swift_bridgeObjectRelease();
    v47 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
    v47(v44, v18);
    v47(v39, v18);
    v47((uint64_t)v132, v18);
    return ((uint64_t (*)(char *, uint64_t))v47)(v46, v18);
  }
  v118 = v38;
  v48 = (uint64_t)v119;
  v49 = v140;
  v50 = v126;
  if (v139)
  {
    v117 = v39;
    v120 = swift_allocBox();
    v52 = v51;
    v53 = v132;
    v127 = v40;
    ((void (*)(uint64_t, char *, uint64_t))v118)(v51, v132, v40);
    v142 = v37;
    v143 = v125;
    v144 = 47;
    v145 = 0xE100000000000000;
    sub_23AAA420C();
    swift_unknownObjectRetain();
    v54 = sub_23B1C6CD4();
    v55 = *(_QWORD *)(v54 + 16);
    v116 = v54;
    if (v55)
    {
      v56 = v54;
      v121 = v52;
      swift_beginAccess();
      v57 = (uint64_t *)(v56 + 40);
      while (1)
      {
        v60 = v141;
        v61 = *(v57 - 1);
        v62 = *v57;
        swift_bridgeObjectRetain();
        v63 = v135;
        v64 = v121;
        sub_23B1C5978();
        (*(void (**)(uint64_t, char *, uint64_t))(v134 + 40))(v64, v63, v127);
        v65 = (void *)sub_23B1C63BC();
        v66 = objc_msgSend(v65, sel_pathExtension);

        v67 = sub_23B1C63E0();
        v69 = v68;

        swift_bridgeObjectRelease();
        v70 = HIBYTE(v69) & 0xF;
        if ((v69 & 0x2000000000000000) == 0)
          v70 = v67 & 0xFFFFFFFFFFFFLL;
        if (!v70)
          break;
        v71 = sub_23B1C59E4();
        v73 = v72;
        MEMORY[0x24BDAC7A8](v71);
        *(&v115 - 8) = v61;
        *(&v115 - 7) = v62;
        v109 = v138;
        v110 = v139;
        v111 = v137;
        v112 = v120;
        LOBYTE(v114) = -1;
        v144 = 0;
        LOBYTE(v145) = -2;
        swift_bridgeObjectRetain();
        result = sub_23B0E35F0(4294967294, v71, v73, 1081344, 0, 0, (uint64_t)&v144, (uint64_t)sub_23AABCED8, (uint64_t)(&v115 - 10));
        v141 = v60;
        if (v60)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v141 = 0;
          goto LABEL_11;
        }
        v74 = v145;
        v58 = v133;
        if (v145 == 254)
        {
          __break(1u);
          return result;
        }
        v75 = v144;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49 = v140;
        if (v74 != 255)
        {
          swift_bridgeObjectRelease();
          v85 = (id)fpfs_current_or_default_log();
          v86 = v124;
          sub_23B1C5E58();
          v87 = sub_23B1C5E40();
          v88 = sub_23B1C6A94();
          v89 = v88;
          if (os_log_type_enabled(v87, v88))
          {
            v90 = swift_slowAlloc();
            v116 = swift_slowAlloc();
            v144 = v116;
            *(_DWORD *)v90 = 136315394;
            v115 = v90 + 4;
            v140 = v75;
            v91 = v135;
            v92 = v127;
            ((void (*)(char *, uint64_t, uint64_t))v118)(v135, v121, v127);
            LODWORD(v121) = v89;
            v93 = (void *)sub_23B1C5954();
            v118 = v87;
            v94 = v93;
            v95 = objc_msgSend(v93, sel_fp_shortDescription);
            swift_retain();

            v96 = sub_23B1C63E0();
            v97 = v58;
            v99 = v98;

            v100 = v91;
            v75 = v140;
            (*(void (**)(char *, uint64_t))(v134 + 8))(v100, v92);
            v146 = sub_23AABEC68(v96, v99, &v144);
            sub_23B1C6CBC();
            swift_release();
            swift_bridgeObjectRelease();
            *(_WORD *)(v90 + 12) = 2080;
            v101 = sub_23AA96F18(v75, v74);
            v146 = sub_23AABEC68(v101, v102, &v144);
            sub_23B1C6CBC();
            v58 = v97;
            swift_bridgeObjectRelease();
            v103 = v118;
            _os_log_impl(&dword_23AA66000, v118, (os_log_type_t)v121, "📦 x-validated result for %s returned:%s", (uint8_t *)v90, 0x16u);
            v104 = v116;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v104, -1, -1);
            MEMORY[0x23B8614BC](v90, -1, -1);

            (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v123);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v122 + 8))(v86, v123);
            v92 = v127;
          }
          v105 = v132;
          LOBYTE(v113) = v74;
          v111 = v58;
          v106 = v117;
          v107 = (uint64_t)v119;
          v108 = v141;
          sub_23AA8B7AC(v128, v129, v117, (uint64_t)v119, v138, v139, v136, v137, v130, v111, v75, v113, v131);
          v141 = v108;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          v81 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
          v81(v107, v92);
          v81(v106, v92);
          v81((uint64_t)v105, v92);
          v83 = v126;
          v84 = v92;
          goto LABEL_26;
        }
        v59 = v131;
        v53 = v132;
LABEL_12:
        v57 += 2;
        if (!--v55)
          goto LABEL_25;
      }
      swift_bridgeObjectRelease();
LABEL_11:
      v53 = v132;
      v58 = v133;
      v59 = v131;
      v49 = v140;
      goto LABEL_12;
    }
    v59 = v131;
    v58 = v43;
LABEL_25:
    swift_bridgeObjectRelease();
    v78 = v117;
    v79 = (uint64_t)v119;
    v80 = v141;
    sub_23AA8B7AC(v128, v129, v117, (uint64_t)v119, v138, v139, v136, v137, v130, v58, v49, 0xFFu, v59);
    v141 = v80;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v81 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
    v82 = v127;
    v81(v79, v127);
    v81(v78, v82);
    v81((uint64_t)v53, v82);
    v83 = v126;
    v84 = v82;
LABEL_26:
    v81((uint64_t)v83, v84);
    return swift_release();
  }
  else
  {
    v76 = v141;
    sub_23AA8B7AC(v128, v129, v39, (uint64_t)v119, v138, 0, v136, v137, v130, v133, v140, 0xFFu, v131);
    v141 = v76;
    swift_bridgeObjectRelease();
    v77 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
    v77(v48, v40);
    v77(v39, v40);
    v77((uint64_t)v132, v40);
    return ((uint64_t (*)(char *, uint64_t))v77)(v50, v40);
  }
}

void sub_23AA8B7AC(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, char a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  signed int v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  int v75;
  char *v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int16 v94;
  char v95;
  __int16 v96;
  char v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char v102;
  char v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  _BYTE *v111;
  void *v112;
  id v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  id v118;
  _BYTE *v119;
  NSObject *v120;
  os_log_type_t v121;
  uint8_t *v122;
  _QWORD *v123;
  id v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  id v131;
  char *v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  int v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  void *v153;
  uint64_t v154;
  BOOL v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  int *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int16 v173;
  char v174;
  __int16 v175;
  char v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  char v181;
  char v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  id v193;
  void *v194;
  uint64_t v195;
  id v196;
  uint64_t v197;
  NSObject *v198;
  os_log_type_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  id v207;
  char *v208;
  uint64_t v209;
  NSObject *v210;
  os_log_type_t v211;
  uint8_t *v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  int *v220;
  _BYTE *v221;
  id v222;
  char *v223;
  uint64_t v224;
  NSObject *v225;
  os_log_type_t v226;
  uint8_t *v227;
  id v228;
  uint64_t v229;
  unint64_t v230;
  id v231;
  _BYTE *v232;
  uint64_t ObjectType;
  uint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  uint64_t v237;
  uint64_t v238;
  _BYTE *v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _BYTE *v245;
  id v246;
  char *v247;
  uint64_t v248;
  NSObject *v249;
  os_log_type_t v250;
  uint8_t *v251;
  id v252;
  id v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  _BYTE *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  _BYTE *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  id v267;
  NSObject *v268;
  os_log_type_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  uint64_t v273;
  unint64_t v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char v299;
  unint64_t v300;
  unint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  char v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  void *v316;
  void *v317;
  void *v318;
  uint64_t v319;
  void *v320;
  char v321;
  uint64_t v322;
  uint64_t v323;
  unsigned int *v324;
  uint64_t v325;
  unsigned __int8 v326;
  uint64_t v327;
  _BYTE *v328;
  uint64_t v329;
  int v330;
  uint64_t v331;
  void *v332;
  uint64_t v333;
  uint64_t v334;
  _BYTE *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  id *v340;
  void **v341;
  uint64_t v342;
  id **v343;
  _QWORD v344[2];
  int v345;
  uint64_t *v346;
  int v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  char *v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  char *v360;
  uint64_t v361;
  char *v362;
  uint64_t v363;
  char *v364;
  char *v365;
  char *v366;
  uint64_t v367;
  char *v368;
  uint64_t v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  int *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  void *v391;
  uint64_t v392;
  _BYTE *v393;
  uint64_t v394;
  char v395;
  _QWORD v396[2];
  char v397;
  char v398;
  uint64_t v399;
  uint64_t v400;
  _QWORD v401[5];
  __int128 v402;
  __int128 v403;
  __int128 v404;
  char v405;
  int v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  char v413;
  char v414;
  __int128 v415;
  uint64_t v416;
  int v417;
  _QWORD v418[33];

  v392 = a3;
  v375 = a6;
  v393 = a5;
  v385 = a4;
  LODWORD(v379) = a1;
  v376 = a7;
  LODWORD(v388) = a12;
  v386 = a11;
  v418[31] = *MEMORY[0x24BDAC8D0];
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v14);
  v351 = (char *)v344 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v369 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v369);
  v350 = (uint64_t)v344 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5E4C();
  v389 = *(_QWORD *)(v17 - 8);
  v390 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v360 = (char *)v344 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v381 = (uint64_t)v344 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v344 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v359 = (char *)v344 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v364 = (char *)v344 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v354 = (char *)v344 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v387 = (uint64_t)v344 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v362 = (char *)v344 - v33;
  v34 = type metadata accessor for VFSItem(0);
  v377 = *(_QWORD *)(v34 - 8);
  v378 = (int *)v34;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v358 = (uint64_t)v344 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v356 = (uint64_t)v344 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v357 = (uint64_t)v344 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v361 = (uint64_t)v344 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v353 = (uint64_t)v344 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v355 = (uint64_t)v344 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v380 = (uint64_t)v344 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v366 = (char *)v344 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v368 = (char *)v344 - v51;
  v52 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v349 = (uint64_t)v344 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v352 = (char *)v344 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v363 = (uint64_t)v344 - v58;
  MEMORY[0x24BDAC7A8](v57);
  v370 = (char *)v344 - v59;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v371 = *(_QWORD *)(v60 - 8);
  v372 = v60;
  v61 = MEMORY[0x24BDAC7A8](v60);
  v365 = (char *)v344 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v61);
  v367 = (uint64_t)v344 - v63;
  v64 = sub_23B1C5A08();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = MEMORY[0x24BDAC7A8](v64);
  v68 = (char *)v344 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v66);
  v382 = (char *)v344 - v69;
  v70 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v71 = objc_msgSend(v70, sel_maxLookupDepth);

  v373 = a13;
  if (v71 <= a13)
  {
    v77 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v68, v392, v64);
    v78 = sub_23B1C5E40();
    v79 = sub_23B1C6AAC();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = swift_slowAlloc();
      v383 = v65;
      v384 = v64;
      v81 = v80;
      v393 = (_BYTE *)swift_slowAlloc();
      v400 = (uint64_t)v393;
      *(_DWORD *)v81 = 136315394;
      v392 = v81 + 4;
      v82 = (void *)sub_23B1C5954();
      v83 = objc_msgSend(v82, sel_fp_shortDescription);

      v84 = sub_23B1C63E0();
      v86 = v85;

      v396[0] = sub_23AABEC68(v84, v86, &v400);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v383 + 8))(v68, v384);
      *(_WORD *)(v81 + 12) = 2080;
      if ((_BYTE)v388 == 0xFF)
      {
        v89 = 0xE700000000000000;
        v87 = 0x296665646E7528;
      }
      else
      {
        v87 = sub_23AA96F18(v386, v388);
        v89 = v88;
      }
      v396[0] = sub_23AABEC68(v87, v89, &v400);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v78, v79, "Max recursion reached while resolving %s known as %s", (uint8_t *)v81, 0x16u);
      v90 = v393;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v90, -1, -1);
      MEMORY[0x23B8614BC](v81, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v64);
    }

    (*(void (**)(char *, uint64_t))(v389 + 8))(v24, v390);
    sub_23ADA98F0((uint64_t)&v400);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    sub_23AA724E8((uint64_t)&v400, v91, (uint64_t *)&unk_2542E0950);
    swift_willThrow();
    return;
  }
  v383 = v65;
  v384 = v64;
  v72 = 0;
  v73 = a10;
  v74 = *(_QWORD *)a2;
  v75 = 255;
  if ((a10 & 0x800) != 0)
  {
    v76 = v393;
    goto LABEL_19;
  }
  v76 = v393;
  if ((_BYTE)v388 == 0xFF)
    goto LABEL_19;
  v72 = v386;
  v75 = v388;
  if (v388 < 2u)
    goto LABEL_19;
  if (v386)
  {
    if ((v393[48] & 1) == 0 && v74 != *((_QWORD *)v393 + 5))
      goto LABEL_240;
    v72 = 1;
    goto LABEL_18;
  }
  v72 = 0;
  v92 = *((_QWORD *)v393 + 3);
  if (!v92)
  {
LABEL_18:
    v75 = v388;
    goto LABEL_19;
  }
  v75 = v388;
  if (v74 != v92)
  {
    LODWORD(v343) = 0;
    v342 = 384;
    goto LABEL_241;
  }
LABEL_19:
  v345 = v75;
  v93 = *((_QWORD *)v76 + 3);
  v348 = a10;
  v344[1] = v93;
  if (v74 == v93 || (v76[48] & 1) == 0 && v74 == *((_QWORD *)v76 + 5))
    goto LABEL_23;
  v94 = *(_WORD *)(a2 + 44);
  v95 = *(_BYTE *)(a2 + 46);
  v96 = *(_WORD *)(a2 + 48);
  v97 = *(_BYTE *)(a2 + 136);
  v98 = *(_DWORD *)(a2 + 144);
  v99 = *(_QWORD *)(a2 + 200);
  v100 = *(_QWORD *)(a2 + 216);
  v101 = *(_DWORD *)(a2 + 256);
  v102 = *(_BYTE *)(a2 + 224) & 1;
  v103 = *(_BYTE *)(a2 + 225) & 1;
  LODWORD(v400) = *(_DWORD *)(a2 + 40);
  BYTE6(v400) = v95;
  WORD2(v400) = v94;
  LOWORD(v401[0]) = v96;
  v104 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)&v401[1] = *(_OWORD *)(a2 + 56);
  *(_OWORD *)&v401[3] = v104;
  v402 = *(_OWORD *)(a2 + 88);
  v105 = *(_OWORD *)(a2 + 120);
  v403 = *(_OWORD *)(a2 + 104);
  v404 = v105;
  v405 = v97;
  v406 = v98;
  v106 = *(_OWORD *)(a2 + 168);
  v407 = *(_OWORD *)(a2 + 152);
  v408 = v106;
  v409 = *(_OWORD *)(a2 + 184);
  v410 = v99;
  v411 = *(_QWORD *)(a2 + 208);
  v412 = v100;
  v413 = v102;
  v414 = v103;
  v415 = *(_OWORD *)(a2 + 232);
  v416 = *(_QWORD *)(a2 + 248);
  v417 = v101;
  v107 = sub_23AA92C24((uint64_t)&v400);
  if ((v107 & 1) != 0)
  {
LABEL_23:
    v347 = 2;
    goto LABEL_24;
  }
  v144 = *(uint64_t **)(a2 + 8);
  v145 = 2;
  v346 = v144;
  if ((a10 & 2) != 0)
  {
    v146 = (_QWORD *)*((_QWORD *)v76 + 4);
    v147 = v146[2];
    v148 = v401;
    v149 = v144;
    while (1)
    {
      if (v147)
      {
        if ((uint64_t *)v146[4] == v149)
          goto LABEL_64;
        if (v147 != 1)
        {
          if ((uint64_t *)v146[5] == v149)
            goto LABEL_64;
          if (v147 != 2)
          {
            if ((uint64_t *)v146[6] == v149)
              goto LABEL_64;
            if (v147 != 3)
              break;
          }
        }
      }
LABEL_57:
      if ((v393[48] & 1) == 0 && v149 == *((uint64_t **)v393 + 5))
      {
LABEL_64:
        v145 = 0;
LABEL_73:
        v76 = v393;
        v73 = v348;
        goto LABEL_74;
      }
      v76 = (char *)v344;
      v396[0] = v149;
      MEMORY[0x24BDAC7A8](v107);
      v342 = (uint64_t)v396;
      LOBYTE(v399) = v152;
      v400 = (uint64_t)v149;
      memset(v401, 0, 32);
      v153 = v391;
      v107 = sub_23B0E327C((uint64_t)&v400, v154, 2129920, 0, (uint64_t)&v399, (uint64_t)sub_23ADA9DF8, (uint64_t)&v340);
      v391 = v153;
      if (v153)
        return;
      if (v399 == 2)
      {
        __break(1u);
LABEL_236:
        __break(1u);
LABEL_237:
        __break(1u);
LABEL_238:
        __break(1u);
LABEL_239:
        __break(1u);
LABEL_240:
        LODWORD(v343) = 0;
        v342 = 390;
LABEL_241:
        sub_23B1C704C();
        __break(1u);
LABEL_242:
        sub_23AFF2BBC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree+Lookup.swift", 130, 2, 206);
      }
      if ((v399 & 1) != 0)
      {
        v145 = 1;
        goto LABEL_73;
      }
      v155 = v396[0] == (_QWORD)v149;
      v149 = (uint64_t *)v396[0];
      if (v155)
        goto LABEL_64;
    }
    v150 = 7;
    while (1)
    {
      v151 = v150 - 3;
      if (__OFADD__(v150 - 4, 1))
        break;
      if ((uint64_t *)v146[v150] == v149)
        goto LABEL_64;
      ++v150;
      if (v151 == v147)
        goto LABEL_57;
    }
    __break(1u);
    goto LABEL_222;
  }
LABEL_74:
  v347 = v145;
  if ((v73 & 1) == 0)
  {
    v173 = *(_WORD *)(a2 + 44);
    v174 = *(_BYTE *)(a2 + 46);
    v175 = *(_WORD *)(a2 + 48);
    v176 = *(_BYTE *)(a2 + 136);
    v177 = *(_DWORD *)(a2 + 144);
    v178 = *(_QWORD *)(a2 + 200);
    v179 = *(_QWORD *)(a2 + 216);
    v180 = *(_DWORD *)(a2 + 256);
    v181 = *(_BYTE *)(a2 + 224) & 1;
    v182 = *(_BYTE *)(a2 + 225) & 1;
    LODWORD(v400) = *(_DWORD *)(a2 + 40);
    BYTE6(v400) = v174;
    WORD2(v400) = v173;
    LOWORD(v401[0]) = v175;
    v183 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)&v401[1] = *(_OWORD *)(a2 + 56);
    *(_OWORD *)&v401[3] = v183;
    v402 = *(_OWORD *)(a2 + 88);
    v184 = *(_OWORD *)(a2 + 120);
    v403 = *(_OWORD *)(a2 + 104);
    v404 = v184;
    v405 = v176;
    v406 = v177;
    v185 = *(_OWORD *)(a2 + 168);
    v407 = *(_OWORD *)(a2 + 152);
    v408 = v185;
    v409 = *(_OWORD *)(a2 + 184);
    v410 = v178;
    v411 = *(_QWORD *)(a2 + 208);
    v412 = v179;
    v413 = v181;
    v414 = v182;
    v415 = *(_OWORD *)(a2 + 232);
    v416 = *(_QWORD *)(a2 + 248);
    v417 = v180;
    v186 = sub_23AA92C30((uint64_t)&v400);
    if ((v186 & 1) == 0)
    {
      if (v347)
      {
        if (v347 != 2)
          goto LABEL_98;
        v187 = (_QWORD *)*((_QWORD *)v76 + 4);
        v188 = v187[2];
        v189 = v346;
        while (1)
        {
          if (v188)
          {
            if ((uint64_t *)v187[4] == v189)
              goto LABEL_23;
            if (v188 != 1)
            {
              if ((uint64_t *)v187[5] == v189)
                goto LABEL_23;
              if (v188 != 2)
              {
                if ((uint64_t *)v187[6] == v189)
                  goto LABEL_23;
                if (v188 != 3)
                  break;
              }
            }
          }
LABEL_90:
          if ((v393[48] & 1) == 0 && v189 == *((uint64_t **)v393 + 5))
            goto LABEL_23;
          v396[0] = v189;
          MEMORY[0x24BDAC7A8](v186);
          v342 = (uint64_t)v396;
          LOBYTE(v399) = 2;
          v193 = v192;
          v400 = (uint64_t)v192;
          memset(v401, 0, 32);
          v194 = v391;
          v186 = sub_23B0E327C((uint64_t)&v400, v195, 2129920, 0, (uint64_t)&v399, (uint64_t)sub_23AABCBA4, (uint64_t)&v340);
          v391 = v194;
          if (v194)
            return;
          if (v399 == 2)
            goto LABEL_236;
          if ((v399 & 1) != 0)
            goto LABEL_98;
          v347 = 2;
          v189 = (uint64_t *)v396[0];
          if ((id)v396[0] == v193)
            goto LABEL_24;
        }
        v190 = 7;
        while (1)
        {
          v191 = v190 - 3;
          if (__OFADD__(v190 - 4, 1))
            __break(1u);
          if ((uint64_t *)v187[v190] == v189)
            goto LABEL_23;
          ++v190;
          if (v191 == v188)
            goto LABEL_90;
        }
      }
    }
  }
LABEL_24:
  v346 = (uint64_t *)a2;
  v108 = (uint64_t)v382;
  v109 = v392;
  sub_23AA8E24C((uint64_t)v382);
  v110 = (void *)sub_23B1C5954();
  (*(void (**)(uint64_t, uint64_t))(v383 + 8))(v108, v384);
  v111 = v393;
  v112 = (void *)sub_23B1C5954();
  v113 = objc_msgSend(v110, sel_fp_relativePathWithRealpath_, v112);

  if (v113)
  {

    v115 = v391;
    v114 = sub_23AABB244(1);
    v116 = v115;
    v117 = v387;
    if (v115)
    {
      v118 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v119 = v115;
      v120 = sub_23B1C5E40();
      v121 = sub_23B1C6A94();
      if (os_log_type_enabled(v120, v121))
      {
        v122 = (uint8_t *)swift_slowAlloc();
        v123 = (_QWORD *)swift_slowAlloc();
        v382 = (char *)v72;
        *(_DWORD *)v122 = 138543362;
        swift_getErrorValue();
        v124 = sub_23B0D9CF0(v394);
        v400 = (uint64_t)v124;
        v117 = v387;
        v72 = (uint64_t)v382;
        sub_23B1C6CBC();
        *v123 = v124;

        _os_log_impl(&dword_23AA66000, v120, v121, "can't resolve the trash folder after receiving an fsevent in the trash: %{public}@", v122, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v123, -1, -1);
        v109 = v392;
        MEMORY[0x23B8614BC](v122, -1, -1);

      }
      else
      {

      }
      v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v389 + 8))(v381, v390);
      v116 = 0;
      v111 = v393;
    }
    v125 = v385;
  }
  else
  {
    v116 = v391;
    v125 = v385;
    v117 = v387;
  }
  v399 = 0;
  v398 = 0;
  MEMORY[0x24BDAC7A8](v114);
  v338 = v109;
  v339 = v125;
  v340 = (id *)&v398;
  v341 = (void **)&v399;
  v342 = (uint64_t)v111;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AA9422C);
  v126 = v116;
  if (v116)
    return;
  v382 = (char *)v72;
  v127 = v380;
  if ((v398 & 1) != 0)
  {
    if (a9)
    {
      if (a9 == 1)
        goto LABEL_36;
LABEL_98:
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v377 + 56))(v376, 1, 1, v378);
      return;
    }
    v156 = v399;
    v157 = sub_23AFE1CA0(v125);
    v393 = v344;
    v158 = *(unsigned int *)(v157 + 16);
    v159 = MEMORY[0x24BDAC7A8](v157);
    v334 = v374;
    v335 = (_BYTE *)v159;
    v336 = v375;
    v337 = a8;
    LOBYTE(v338) = 0;
    v339 = v348;
    v340 = 0;
    LOBYTE(v341) = -1;
    v342 = v160;
    v161 = (uint64_t)v370;
    v162 = v371;
    v163 = v372;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v371 + 56))(v370, 1, 1, v372);
    v400 = v156;
    memset(v401, 0, 32);
    sub_23B0E1EBC((uint64_t)&v400, v158, 2129920, 0, v161, (uint64_t)sub_23ADA9338, (uint64_t)&v344[-12]);
    v164 = v363;
    sub_23AA8EFC8(v161, v363, qword_2542E5250);
    v165 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 48))(v164, 1, v163);
    v166 = v378;
    v167 = (uint64_t)v382;
    v168 = v161;
    v169 = (uint64_t)v365;
    if (v165 == 1)
      goto LABEL_237;
    v170 = v367;
    sub_23AA724E8(v164, v367, &qword_2542E72C0);
    sub_23AA8A05C(v168, qword_2542E5250);
    swift_release();
    v171 = (uint64_t)v368;
    v172 = (uint64_t)v366;
    if ((_BYTE)v345 == 0xFF)
    {
LABEL_165:
      sub_23AA724E8(v170, v376, &qword_2542E72C0);
      return;
    }
    sub_23AA8EFC8(v170, v169, &qword_2542E72C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v377 + 48))(v169, 1, v166) == 1)
    {
      sub_23AA8A05C(v169, &qword_2542E72C0);
      goto LABEL_165;
    }
    sub_23AA94050(v169, v171, type metadata accessor for VFSItem);
    v217 = *(_QWORD *)v171;
    if (*(_BYTE *)(v171 + 8))
    {
      v218 = v362;
      if (*(_BYTE *)(v171 + 8) == 1)
      {
        if (v345 != 1 || v217 != v167)
        {
LABEL_161:
          v267 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          sub_23AA907B0(v171, v172, type metadata accessor for VFSItem);
          v268 = sub_23B1C5E40();
          v269 = sub_23B1C6AA0();
          if (os_log_type_enabled(v268, v269))
          {
            v270 = swift_slowAlloc();
            v393 = (_BYTE *)swift_slowAlloc();
            v400 = (uint64_t)v393;
            *(_DWORD *)v270 = 136446466;
            v271 = sub_23AA96F18(v167, v345);
            v396[0] = sub_23AABEC68(v271, v272, &v400);
            sub_23B1C6CBC();
            swift_bridgeObjectRelease();
            *(_WORD *)(v270 + 12) = 2082;
            v273 = sub_23AA96F18(*(_QWORD *)v172, *(_BYTE *)(v172 + 8));
            v396[0] = sub_23AABEC68(v273, v274, &v400);
            sub_23B1C6CBC();
            v170 = v367;
            swift_bridgeObjectRelease();
            sub_23AA937BC(v172, type metadata accessor for VFSItem);
            _os_log_impl(&dword_23AA66000, v268, v269, "(pkg item) expected %{public}s, but received %{public}s", (uint8_t *)v270, 0x16u);
            v275 = v393;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v275, -1, -1);
            MEMORY[0x23B8614BC](v270, -1, -1);

            (*(void (**)(char *, uint64_t))(v389 + 8))(v362, v390);
            v266 = (uint64_t)v368;
          }
          else
          {

            sub_23AA937BC(v172, type metadata accessor for VFSItem);
            (*(void (**)(char *, uint64_t))(v389 + 8))(v218, v390);
            v266 = v171;
          }
          goto LABEL_164;
        }
      }
      else if (v217)
      {
        if (v345 != 2 || v167 != 1)
          goto LABEL_161;
      }
      else if (v345 != 2 || v167)
      {
        goto LABEL_161;
      }
    }
    else
    {
      v218 = v362;
      if ((_BYTE)v345 || (_DWORD)v217 != (_DWORD)v167)
        goto LABEL_161;
    }
    v266 = v171;
LABEL_164:
    sub_23AA937BC(v266, type metadata accessor for VFSItem);
    goto LABEL_165;
  }
LABEL_36:
  v387 = a8;
  v342 = v348;
  sub_23AA8F00C(v379, v346, v347, v392, (uint64_t)v111, v380);
  if (v345 > 1u)
    goto LABEL_114;
  v128 = *(_QWORD *)v127;
  v129 = *(unsigned __int8 *)(v127 + 8);
  if (!*(_BYTE *)(v127 + 8))
  {
    if (!(_BYTE)v345)
      goto LABEL_114;
    if (v345 != 1)
      goto LABEL_242;
    if (v382 != *(char **)(v127 + v378[9]))
      goto LABEL_112;
    v196 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v197 = v355;
    sub_23AA907B0(v127, v355, type metadata accessor for VFSItem);
    v198 = sub_23B1C5E40();
    v199 = sub_23B1C6A94();
    LODWORD(v392) = v199;
    if (os_log_type_enabled(v198, v199))
    {
      v200 = swift_slowAlloc();
      v388 = swift_slowAlloc();
      v400 = v388;
      *(_DWORD *)v200 = 136446466;
      v201 = sub_23AA96F18(*(_QWORD *)v197, *(_BYTE *)(v197 + 8));
      v396[0] = sub_23AABEC68(v201, v202, &v400);
      v391 = 0;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA937BC(v197, type metadata accessor for VFSItem);
      *(_WORD *)(v200 + 12) = 2082;
      v203 = sub_23AA96F18((uint64_t)v382, 1);
      v396[0] = sub_23AABEC68(v203, v204, &v400);
      v126 = v391;
      v127 = v380;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v198, (os_log_type_t)v392, "📦 x-validation found %{public}s while expecting %{public}s: demoting item", (uint8_t *)v200, 0x16u);
      v205 = v388;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v205, -1, -1);
      v206 = v200;
      v125 = v385;
      MEMORY[0x23B8614BC](v206, -1, -1);
    }
    else
    {
      sub_23AA937BC(v197, type metadata accessor for VFSItem);
    }

    v259 = (*(uint64_t (**)(uint64_t, uint64_t))(v389 + 8))(v117, v390);
    MEMORY[0x24BDAC7A8](v259);
    LODWORD(v342) = v379;
    v260 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADA99B0);
    if (v126)
      goto LABEL_136;
    if (*(unsigned __int8 *)(v127 + 8) < 2u || *(_QWORD *)v127)
    {
      MEMORY[0x24BDAC7A8](v260);
      LODWORD(v342) = v379;
      sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADA9DE4);
    }
    v261 = sub_23AFE1CA0(v125);
    v262 = *(unsigned int *)(v261 + 16);
    v263 = (_BYTE *)MEMORY[0x24BDAC7A8](v261);
    v334 = v374;
    v335 = v263;
    v393 = v263;
    v336 = v375;
    v337 = v387;
    LOBYTE(v338) = a9;
    v264 = (uint64_t)v382;
    v339 = v348;
    v340 = (id *)v382;
    LOBYTE(v341) = 1;
    v342 = v265;
    v148 = (_QWORD *)v371;
    v72 = v372;
    v76 = v352;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v371 + 56))(v352, 1, 1, v372);
    v400 = v264;
    memset(v401, 0, 32);
    sub_23B0E1EBC((uint64_t)&v400, v262, 2129920, 0, (uint64_t)v76, (uint64_t)sub_23ADA9338, (uint64_t)&v344[-12]);
LABEL_222:
    v329 = v349;
    sub_23AA8EFC8((uint64_t)v76, v349, qword_2542E5250);
    v330 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v148[6])(v329, 1, v72);
    v331 = v380;
    if (v330 == 1)
      goto LABEL_239;
    sub_23AA724E8(v329, v376, &qword_2542E72C0);
    sub_23AA8A05C((uint64_t)v76, qword_2542E5250);
    sub_23AA937BC(v331, type metadata accessor for VFSItem);
    swift_release();
    return;
  }
  if (v129 != 1)
  {
    if (!v128)
      goto LABEL_242;
    v207 = (id)fpfs_current_or_default_log();
    v208 = v364;
    sub_23B1C5E58();
    v209 = v361;
    sub_23AA907B0(v127, v361, type metadata accessor for VFSItem);
    v210 = sub_23B1C5E40();
    v211 = sub_23B1C6A94();
    if (os_log_type_enabled(v210, v211))
    {
      v391 = 0;
      v212 = (uint8_t *)swift_slowAlloc();
      v213 = swift_slowAlloc();
      v400 = v213;
      *(_DWORD *)v212 = 136446210;
      v214 = sub_23AA96F18(*(_QWORD *)v209, *(_BYTE *)(v209 + 8));
      v396[0] = sub_23AABEC68(v214, v215, &v400);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA937BC(v209, type metadata accessor for VFSItem);
      _os_log_impl(&dword_23AA66000, v210, v211, "item %{public}s became the trash", v212, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v213, -1, -1);
      MEMORY[0x23B8614BC](v212, -1, -1);

      (*(void (**)(char *, uint64_t))(v389 + 8))(v364, v390);
      v216 = v380;
    }
    else
    {

      sub_23AA937BC(v209, type metadata accessor for VFSItem);
      (*(void (**)(char *, uint64_t))(v389 + 8))(v208, v390);
      v216 = v127;
    }
    sub_23AA937BC(v216, type metadata accessor for VFSItem);
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v377 + 56))(v376, 1, 1, v378);
    return;
  }
  if ((_BYTE)v345)
  {
    if (v345 != 1)
      goto LABEL_242;
LABEL_114:
    v220 = v378;
    v221 = (_BYTE *)(v127 + v378[7]);
    if (*v221 == 1
      && (*(unsigned __int8 *)(v127 + 8) < 2u || *(_QWORD *)v127)
      && fpfs_filename_contains_ext()
      && (int)fpfs_pkg_demote() >= 1)
    {
      v391 = 0;
      v222 = (id)fpfs_current_or_default_log();
      v223 = v359;
      sub_23B1C5E58();
      v224 = v357;
      sub_23AA907B0(v127, v357, type metadata accessor for VFSItem);
      v225 = sub_23B1C5E40();
      v226 = sub_23B1C6A94();
      if (os_log_type_enabled(v225, v226))
      {
        v227 = (uint8_t *)swift_slowAlloc();
        v228 = (id)swift_slowAlloc();
        v400 = (uint64_t)v228;
        *(_DWORD *)v227 = 136446210;
        v392 = (uint64_t)(v227 + 4);
        v229 = sub_23AA96F18(*(_QWORD *)v224, *(_BYTE *)(v224 + 8));
        v396[0] = sub_23AABEC68(v229, v230, &v400);
        v127 = v380;
        sub_23B1C6CBC();
        v111 = v393;
        swift_bridgeObjectRelease();
        sub_23AA937BC(v224, type metadata accessor for VFSItem);
        _os_log_impl(&dword_23AA66000, v225, v226, "📦 x-validation found %{public}s on folder with extension: demoting item", v227, 0xCu);
        swift_arrayDestroy();
        v231 = v228;
        v220 = v378;
        MEMORY[0x23B8614BC](v231, -1, -1);
        MEMORY[0x23B8614BC](v227, -1, -1);

        (*(void (**)(char *, uint64_t))(v389 + 8))(v359, v390);
      }
      else
      {
        sub_23AA937BC(v224, type metadata accessor for VFSItem);

        (*(void (**)(char *, uint64_t))(v389 + 8))(v223, v390);
      }
      v126 = v391;
    }
    if ((v111[48] & 1) == 0 && *(_BYTE *)(v127 + 8) == 1 && *((_QWORD *)v111 + 5) == *(_QWORD *)v127)
    {
      sub_23AABB244(1);
      if (v126)
        goto LABEL_136;
    }
    v232 = &v221[*(int *)(v369 + 144)];
    if ((v232[4] & 1) != 0 || *(_DWORD *)v232 < 2u || !v375)
      goto LABEL_231;
    ObjectType = swift_getObjectType();
    v234 = v127;
    v235 = ObjectType;
    v236 = (uint64_t *)(v234 + v220[9]);
    v237 = *v236;
    v238 = *(_QWORD *)(v234 + 16);
    v239 = v126;
    v240 = *(unsigned __int8 *)(v234 + 24);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease_n();
    v241 = (*(uint64_t (**)(uint64_t, uint64_t))(v387 + 16))(v237, v235);
    if (v239)
    {
      v245 = v239;
LABEL_142:
      v246 = (id)fpfs_current_or_default_log();
      v247 = v360;
      sub_23B1C5E58();
      v127 = v380;
      v248 = v358;
      sub_23AA907B0(v380, v358, type metadata accessor for VFSItem);
      v249 = sub_23B1C5E40();
      v250 = sub_23B1C6A94();
      if (os_log_type_enabled(v249, v250))
      {
        v251 = (uint8_t *)swift_slowAlloc();
        v252 = (id)swift_slowAlloc();
        v391 = 0;
        v253 = v252;
        v400 = (uint64_t)v252;
        *(_DWORD *)v251 = 136446210;
        v254 = sub_23AA96F18(*(_QWORD *)v248, *(_BYTE *)(v248 + 8));
        v393 = v245;
        v396[0] = sub_23AABEC68(v254, v255, &v400);
        v127 = v380;
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        sub_23AA937BC(v248, type metadata accessor for VFSItem);
        _os_log_impl(&dword_23AA66000, v249, v250, "couldn't access hardlink for item %{public}s", v251, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v253, -1, -1);
        MEMORY[0x23B8614BC](v251, -1, -1);

        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v389 + 8))(v360, v390);
      }
      else
      {
        swift_unknownObjectRelease();
        sub_23AA937BC(v248, type metadata accessor for VFSItem);

        (*(void (**)(char *, uint64_t))(v389 + 8))(v247, v390);
      }
      goto LABEL_230;
    }
    v256 = v244;
    v388 = (uint64_t)v236;
    v391 = 0;
    v257 = v393;
    if (!v244)
    {
      swift_unknownObjectRelease();
LABEL_229:
      v127 = v380;
LABEL_230:
      v220 = v378;
      goto LABEL_231;
    }
    v258 = v243;
    v386 = v242;
    v387 = v241;
    v392 = v243;
    if ((_BYTE)v242)
    {
      if (v242 == 1)
      {
        if (v240 != 1 || v241 != v238)
        {
LABEL_183:
          v283 = v356;
          sub_23AA907B0(v380, v356, type metadata accessor for VFSItem);
          v284 = sub_23AA937BC(v283, type metadata accessor for VFSItem);
LABEL_184:
          v285 = v392;
          if (v386 != 1)
          {
            if (v386 != 2)
              sub_23AFF2E2C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree+Lookup.swift", 130, 2, 585, v387, 0);
            if (v387 && (v257[48] & 1) != 0)
              goto LABEL_238;
          }
          v310 = *((unsigned int *)v257 + 4);
          v311 = MEMORY[0x24BDAC7A8](v284);
          v312 = MEMORY[0x24BDAC7A8](v311);
          v343 = &v340;
          v400 = 0;
          v401[0] = v313;
          memset(&v401[1], 0, 24);
          MEMORY[0x24BDAC7A8](v312);
          v340 = (id *)&v400;
          v341 = (void **)sub_23ADA993C;
          v342 = v314;
          if ((v256 & 0x1000000000000000) != 0 || !(v256 & 0x2000000000000000 | v285 & 0x1000000000000000))
          {
            swift_bridgeObjectRetain();
            v332 = v391;
            sub_23B1C6EF0();
            v318 = v332;
            if (v332)
              goto LABEL_211;
            swift_bridgeObjectRelease();
            v257 = v393;
            if ((v397 & 1) != 0)
            {
LABEL_219:
              v391 = 0;
              v322 = v380;
              v379 = *(_QWORD *)v380;
              v385 = *(_QWORD *)v388;
              LODWORD(v382) = *(_DWORD *)(v388 + 8);
              v381 = *(_QWORD *)(v388 + 16);
              LODWORD(v388) = *(unsigned __int8 *)(v388 + 24);
              LODWORD(v374) = *(unsigned __int8 *)(v380 + 8);
              swift_bridgeObjectRelease_n();
              v323 = v350;
              sub_23AA907B0((uint64_t)v221, v350, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
              v324 = (unsigned int *)(v322 + v378[11]);
              v325 = *v324;
              v326 = *((_BYTE *)v324 + 4);
              LODWORD(v322) = *(_DWORD *)(v322 + v378[10]);
              v327 = (uint64_t)v351;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v383 + 56))(v351, 1, 1, v384);
              sub_23AAF8E48((uint64_t)&v400);
              sub_23AA724E8((uint64_t)&v400, (uint64_t)v418, &qword_2542E5050);
              swift_retain();
              LOBYTE(v396[0]) = 1;
              v328 = v391;
              sub_23AA8F900(v379, v374, v387, v386, v385, (int)v382, v381, v388, v376, v392, v256, v323, v325 | ((unint64_t)v326 << 32), v322, v327, 0x100000000, (uint64_t)v257, (uint64_t)v418);
              if (!v328)
              {
                sub_23AA937BC(v380, type metadata accessor for VFSItem);
                swift_unknownObjectRelease();
                (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v377 + 56))(v376, 0, 1, v378);
                return;
              }
              v245 = v328;
              goto LABEL_142;
            }
LABEL_228:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_229;
          }
          if ((v256 & 0x2000000000000000) != 0)
          {
            v396[0] = v392;
            v396[1] = v256 & 0xFFFFFFFFFFFFFFLL;
            v401[2] = v396;
            swift_bridgeObjectRetain();
            v319 = v310;
            v320 = v391;
            sub_23ADA9848((__int128 *)&v400, v319, 2129920, 0, (uint64_t)sub_23ADA9924, (uint64_t)&v340, &v395);
            if (v320)
            {
              swift_bridgeObjectRelease();
              v318 = v320;
              goto LABEL_214;
            }
            v321 = v395;
            swift_bridgeObjectRelease();
LABEL_218:
            if ((v321 & 1) != 0)
              goto LABEL_219;
            goto LABEL_228;
          }
          if ((v392 & 0x1000000000000000) != 0)
          {
            v315 = (v256 & 0xFFFFFFFFFFFFFFFLL) + 32;
            swift_bridgeObjectRetain();
            v316 = v391;
          }
          else
          {
            v315 = sub_23B1C6F80();
            swift_bridgeObjectRetain();
            v316 = v391;
            if (!v315)
            {
              sub_23ADA995C(0, v396);
              v317 = v316;
              if (v316)
                goto LABEL_210;
              v321 = v396[0];
              v257 = v393;
LABEL_217:
              swift_bridgeObjectRelease();
              goto LABEL_218;
            }
          }
          sub_23ADA995C(v315, v396);
          v317 = v316;
          if (v316)
          {
LABEL_210:
            v318 = v317;
LABEL_211:
            swift_bridgeObjectRelease();
LABEL_214:

            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            goto LABEL_229;
          }
          v321 = v396[0];
          goto LABEL_217;
        }
      }
      else if (v241)
      {
        if (v240 != 2 || v238 != 1)
          goto LABEL_183;
      }
      else if (v240 != 2 || v238)
      {
        goto LABEL_183;
      }
    }
    else if (v240 || (_DWORD)v241 != (_DWORD)v238)
    {
      goto LABEL_183;
    }
    v277 = v356;
    sub_23AA907B0(v380, v356, type metadata accessor for VFSItem);
    v279 = *(_QWORD *)(v277 + 32);
    v278 = *(_QWORD *)(v277 + 40);
    swift_bridgeObjectRetain();
    v280 = sub_23AAAE580(v258, v256);
    v282 = v281;
    swift_bridgeObjectRelease();
    if (v282)
    {
      if (v280 == 12565487 && v282 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_190:
        swift_bridgeObjectRetain();
        v287 = sub_23B1C64B8();
        v288 = sub_23AA8A1BC(v287, v258, v256);
        v290 = v289;
        v292 = v291;
        v294 = v293;
        swift_bridgeObjectRelease();
        v382 = (char *)MEMORY[0x23B85ED8C](v288, v290, v292, v294);
        v385 = v295;
        swift_bridgeObjectRelease();
        goto LABEL_192;
      }
      v286 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v286 & 1) != 0)
        goto LABEL_190;
    }
    swift_bridgeObjectRetain();
    v382 = (char *)v258;
    v385 = v256;
LABEL_192:
    swift_bridgeObjectRetain();
    v296 = sub_23AAAE580(v279, v278);
    v298 = v297;
    swift_bridgeObjectRelease();
    if (v298)
    {
      if (v296 == 12565487 && v298 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_197:
        swift_bridgeObjectRetain();
        v300 = sub_23B1C64B8();
        v301 = sub_23AA8A1BC(v300, v279, v278);
        v303 = v302;
        v305 = v304;
        v307 = v306;
        swift_bridgeObjectRelease();
        v279 = MEMORY[0x23B85ED8C](v301, v303, v305, v307);
        v278 = v308;
        swift_bridgeObjectRelease();
LABEL_199:
        v220 = v378;
        if (v382 == (char *)v279 && v385 == v278)
        {
          swift_bridgeObjectRelease_n();
          sub_23AA937BC(v356, type metadata accessor for VFSItem);
        }
        else
        {
          v309 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v284 = sub_23AA937BC(v356, type metadata accessor for VFSItem);
          v257 = v393;
          if ((v309 & 1) == 0)
            goto LABEL_184;
        }
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        v127 = v380;
LABEL_231:
        v333 = v376;
        sub_23AA94050(v127, v376, type metadata accessor for VFSItem);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v377 + 56))(v333, 0, 1, v220);
        return;
      }
      v299 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v299 & 1) != 0)
        goto LABEL_197;
    }
    swift_bridgeObjectRetain();
    goto LABEL_199;
  }
  v130 = v127 + v378[14];
  if ((*(_BYTE *)(v130 + 4) & 1) != 0 || *(_DWORD *)v130 != (_DWORD)v382)
  {
LABEL_112:
    v400 = (uint64_t)v382;
    LOBYTE(v401[0]) = v345;
    v401[1] = v128;
    LOBYTE(v401[2]) = v129;
    sub_23ADA99A4((uint64_t)&v400);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    sub_23AA724E8((uint64_t)&v400, v219, (uint64_t *)&unk_2542E0950);
    swift_willThrow();
    sub_23AA937BC(v127, type metadata accessor for VFSItem);
    return;
  }
  v131 = (id)fpfs_current_or_default_log();
  v132 = v354;
  sub_23B1C5E58();
  v133 = v353;
  sub_23AA907B0(v127, v353, type metadata accessor for VFSItem);
  v134 = sub_23B1C5E40();
  v135 = sub_23B1C6A94();
  if (os_log_type_enabled(v134, v135))
  {
    v136 = v133;
    v137 = swift_slowAlloc();
    v392 = swift_slowAlloc();
    v400 = v392;
    *(_DWORD *)v137 = 136446466;
    v138 = sub_23AA96F18(*(_QWORD *)v136, *(_BYTE *)(v136 + 8));
    v396[0] = sub_23AABEC68(v138, v139, &v400);
    v391 = 0;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AA937BC(v136, type metadata accessor for VFSItem);
    *(_WORD *)(v137 + 12) = 2082;
    v140 = sub_23AA96F18((uint64_t)v382, 0);
    v396[0] = sub_23AABEC68(v140, v141, &v400);
    v126 = v391;
    v127 = v380;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v134, v135, "📦 x-validation found %{public}s while expecting %{public}s: promoting item", (uint8_t *)v137, 0x16u);
    v142 = v392;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v142, -1, -1);
    MEMORY[0x23B8614BC](v137, -1, -1);

    v143 = (*(uint64_t (**)(char *, uint64_t))(v389 + 8))(v354, v390);
  }
  else
  {
    sub_23AA937BC(v133, type metadata accessor for VFSItem);

    v143 = (*(uint64_t (**)(char *, uint64_t))(v389 + 8))(v132, v390);
  }
  MEMORY[0x24BDAC7A8](v143);
  v276 = v379;
  LODWORD(v342) = v379;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADA9DD0);
  if (v126)
  {
LABEL_136:
    sub_23AA937BC(v127, type metadata accessor for VFSItem);
    return;
  }
  sub_23AFE1CA0(v385);
  v342 = v373 + 1;
  sub_23AABD714(v276, v376);
  sub_23AA937BC(v380, type metadata accessor for VFSItem);
  swift_release();
}

void sub_23AA8E24C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v3 = sub_23B1C59E4();
  v5 = v4;
  if ((sub_23B1C656C() & 1) != 0)
  {
    v6 = sub_23B1C64DC();
    v7 = sub_23AA8A1BC(v6, v3, v5);
    v9 = v8;
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "/private/var");
    BYTE5(v20[1]) = 0;
    HIWORD(v20[1]) = -5120;
    v18 = v7;
    v19 = v9;
    sub_23B0EA258();
    sub_23B1C64E8();
    swift_bridgeObjectRelease();
    v14 = (void *)objc_opt_self();
    v15 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v14, sel_fileURLWithPath_, v15, v18, v19, v11, v13, v20[0], v20[1]);

    sub_23B1C59CC();
  }
  else
  {
    v17 = sub_23B1C5A08();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, v1, v17);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AA8E3C8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  void *v60;
  char v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v90 = a4;
  LODWORD(v89) = a3;
  v78 = a2;
  v91 = a5;
  v7 = sub_23B1C5A08();
  v86 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v85 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v80 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for VFSItem(0);
  v11 = *(_QWORD *)(v93 - 8);
  v12 = MEMORY[0x24BDAC7A8](v93);
  v82 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v73 = (uint64_t *)((char *)&v72 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v83 = (uint64_t)&v72 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v79 = (uint64_t)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v72 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v87 = *(_QWORD *)(v22 - 8);
  v88 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v81 = (uint64_t)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v92 = (uint64_t)&v72 - v25;
  v26 = sub_23B1C60EC();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (uint64_t *)((char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = v5;
  v30 = *(_QWORD **)(v5 + 16);
  v31 = (void *)v30[8];
  *v29 = v31;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x24BEE5608], v26);
  v32 = v31;
  v33 = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v27 + 8))(v29, v26);
  if ((v33 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v77 = v7;
  v75 = v9;
  v74 = v30;
  v34 = type metadata accessor for VFSFileTree(0);
  v33 = swift_dynamicCastClassUnconditional();
  swift_retain();
  v84 = a1;
  v35 = sub_23B1C59E4();
  v37 = v36;
  v38 = (_QWORD *)(v33 + qword_2542EDF28);
  swift_beginAccess();
  if (*v38 == -1)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  ++*v38;
  swift_retain();
  if (objc_sync_enter((id)v33))
    goto LABEL_26;
  v94 = v11;
  v39 = *(_QWORD *)(v33 + 160);
  swift_retain();
  v40 = objc_sync_exit((id)v33);
  v41 = v88;
  if (v40)
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v33);
  swift_release();
  v42 = MEMORY[0x23B8615C4](v33 + 272);
  v43 = MEMORY[0x24BDAC7A8](v42);
  *(&v72 - 6) = v34;
  *(&v72 - 5) = v39;
  *(&v72 - 4) = v43;
  *(&v72 - 3) = v44;
  LOBYTE(v70) = v89;
  v71 = v90;
  v45 = v87;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v21, 1, 1, v41);
  swift_bridgeObjectRetain();
  v33 = 0;
  sub_23B0E2EA0(4294967294, v35, v37, 2129920, 0, 0, (uint64_t)v21, (uint64_t)sub_23ACFC288, (uint64_t)(&v72 - 8));
  v46 = v45;
  v47 = v79;
  sub_23AA8EFC8((uint64_t)v21, v79, qword_2542E5250);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v47, 1, v41) == 1)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v33);
  }
  v48 = v47;
  v49 = v92;
  sub_23AA724E8(v48, v92, &qword_2542E72C0);
  sub_23AA8A05C((uint64_t)v21, qword_2542E5250);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  v50 = v93;
  v51 = v94;
  v52 = v81;
  sub_23AA8EFC8(v49, v81, &qword_2542E72C0);
  v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v52, 1, v50);
  v54 = v83;
  v55 = (uint64_t)v82;
  if (v53 == 1)
  {
    sub_23AA8A05C(v49, &qword_2542E72C0);
    sub_23AA8A05C(v52, &qword_2542E72C0);
    v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
    v57 = v91;
    v58 = 1;
    return v56(v57, v58, 1, v50);
  }
  sub_23AA94050(v52, v83, type metadata accessor for VFSItem);
  if ((v78 & 1) == 0)
    goto LABEL_20;
  v59 = v74;
  v60 = (void *)swift_retain();
  if (objc_sync_enter(v60))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v59);
  v61 = v59[qword_2542E6C88];
  if (objc_sync_exit(v59))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v59);
  swift_release();
  if ((v61 & 1) == 0)
  {
LABEL_20:
    sub_23AA8A05C(v92, &qword_2542E72C0);
    v68 = v91;
    sub_23AA94050(v54, v91, type metadata accessor for VFSItem);
    v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
    v57 = v68;
    v58 = 0;
    return v56(v57, v58, 1, v50);
  }
  v62 = *(_QWORD *)v54;
  v63 = *(unsigned __int8 *)(v54 + 8);
  sub_23AA907B0(v54, (uint64_t)v73, type metadata accessor for VFSItem);
  if (v63 == 2 && !v62)
  {
    sub_23AA937BC((uint64_t)v73, type metadata accessor for VFSItem);
    sub_23AA907B0(v54, v55, type metadata accessor for VFSItem);
    v50 = v93;
LABEL_18:
    sub_23AA937BC(v55, type metadata accessor for VFSItem);
    goto LABEL_20;
  }
  v64 = *v73;
  v65 = *((unsigned __int8 *)v73 + 8);
  sub_23AA937BC((uint64_t)v73, type metadata accessor for VFSItem);
  if (v65 >= 2)
  {
    sub_23AA907B0(v54, v55, type metadata accessor for VFSItem);
    v50 = v93;
    if (v64)
      goto LABEL_18;
  }
  else
  {
    sub_23AA907B0(v54, v55, type metadata accessor for VFSItem);
    v50 = v93;
  }
  v66 = v55 + *(int *)(v50 + 28);
  LODWORD(v66) = *(unsigned __int8 *)(v66 + *(int *)(type metadata accessor for ItemMetadata() + 72));
  v67 = sub_23AA937BC(v55, type metadata accessor for VFSItem);
  if ((_DWORD)v66 == 1)
    goto LABEL_20;
  MEMORY[0x24BDAC7A8](v67);
  v70 = v72;
  v71 = v54;
  sub_23B08BC10((uint64_t)"vfsItemFromURL(_:skipResetingItems:pkgItemsLookupPolicy:options:)", 65, 2, (uint64_t)sub_23B0BB258, (uint64_t)(&v72 - 4), v91);
  sub_23AA8A05C(v92, &qword_2542E72C0);
  return sub_23AA937BC(v54, type metadata accessor for VFSItem);
}

uint64_t sub_23AA8EFB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AA8EFBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AA8EFC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_23AA8F00C(int a1@<W0>, uint64_t *a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _DWORD v35[16];
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _OWORD v48[14];
  uint64_t v49;

  v44 = a5;
  v41 = a4;
  v35[14] = a1;
  v39 = a6;
  v49 = *MEMORY[0x24BDAC8D0];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23B1C5E4C();
  v37 = *(_QWORD *)(v45 - 8);
  v10 = MEMORY[0x24BDAC7A8](v45);
  v36 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E46B0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ItemMetadata();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v40 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v42 = (char *)v35 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v43 = (char *)v35 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (unsigned __int8 *)v35 - v23;
  v25 = *(_OWORD *)(a2 + 27);
  v48[10] = *(_OWORD *)(a2 + 25);
  v48[11] = v25;
  v26 = *(_OWORD *)(a2 + 31);
  v48[12] = *(_OWORD *)(a2 + 29);
  v48[13] = v26;
  v27 = *(_OWORD *)(a2 + 19);
  v48[6] = *(_OWORD *)(a2 + 17);
  v48[7] = v27;
  v28 = *(_OWORD *)(a2 + 23);
  v48[8] = *(_OWORD *)(a2 + 21);
  v48[9] = v28;
  v29 = *(_OWORD *)(a2 + 11);
  v48[2] = *(_OWORD *)(a2 + 9);
  v48[3] = v29;
  v30 = *(_OWORD *)(a2 + 15);
  v48[4] = *(_OWORD *)(a2 + 13);
  v48[5] = v30;
  v31 = *(_OWORD *)(a2 + 7);
  v48[0] = *(_OWORD *)(a2 + 5);
  v48[1] = v31;
  sub_23AA90D88((int *)v48, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    sub_23AA94050((uint64_t)v14, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v32 = *a2;
    v24[*(int *)(v15 + 68)] = a3;
    v33 = *v24;
    v47 = 1;
    v34 = (char *)&loc_23AA8F278 + dword_23ADA8894[v33];
    v46 = v32;
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x23AA8F8D8);
}

uint64_t sub_23AA8F900@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  int *v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;

  v89 = a8;
  v85 = a7;
  v84 = a6;
  v90 = a5;
  LODWORD(v78) = a4;
  v77 = a3;
  LODWORD(v81) = a2;
  v87 = a1;
  v93 = a17;
  v95 = a15;
  v96 = a18;
  v105 = a12;
  v82 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v82);
  v91 = (uint64_t)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for VFSItem(0);
  v20 = *(int *)(v86 + 48);
  v80 = a9;
  v21 = a9 + v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v94 = v21;
  v83 = v23;
  v23(v21, 1, 1, v22);
  v97 = a10;
  v98 = a11;
  v101 = 58;
  v102 = 0xE100000000000000;
  v103 = 47;
  v104 = 0xE100000000000000;
  sub_23AAA420C();
  v88 = sub_23B1C6CF8();
  v25 = v24;
  v79 = a10;
  v97 = a10;
  v98 = a11;
  v101 = 58;
  v102 = 0xE100000000000000;
  v103 = 47;
  v104 = 0xE100000000000000;
  v26 = sub_23B1C6CF8();
  v27 = v92;
  sub_23AA92930(0x70756B6F6F6CLL, 0xE600000000000000, v26, v28);
  if (v27)
  {
    swift_bridgeObjectRelease();
    sub_23AAA5B2C(v96);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_23AA8A05C(v95, (uint64_t *)&unk_2542E6740);
    sub_23AA937BC(v105, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    return sub_23AA8A05C(v94, &qword_2542E6760);
  }
  v30 = v81;
  v76 = a11;
  v92 = v25;
  v74 = v22;
  v31 = v80;
  swift_bridgeObjectRelease();
  v32 = v91;
  sub_23AA907B0(v105, v91, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v33 = v93;
  v34 = *(_QWORD *)(v93 + 24);
  v75 = 0;
  if (v34 == v90)
  {
    v35 = v32;
    v36 = v89;
    if (v30 == 1)
    {
      v37 = v92;
      if (v90 != v87)
        goto LABEL_49;
    }
    else
    {
      v37 = v92;
      if (v30 != 2 || v87)
LABEL_49:
        sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSItem.swift", 119, 2, 288);
    }
    *(_QWORD *)v31 = 0;
    *(_BYTE *)(v31 + 8) = 2;
    *(_QWORD *)(v31 + 16) = 0;
    *(_BYTE *)(v31 + 24) = 2;
    v47 = v82;
  }
  else
  {
    swift_beginAccess();
    v38 = *(_QWORD *)(v33 + 72);
    v36 = v89;
    if (*(_QWORD *)(v38 + 16) && (v39 = sub_23AA97254(v87, v30), (v40 & 1) != 0))
    {
      v41 = *(_QWORD *)(v38 + 56) + 32 * v39;
      v42 = *(_QWORD *)v41;
      v43 = *(_BYTE *)(v41 + 8);
      v37 = *(_QWORD *)(v41 + 24);
      v88 = *(_QWORD *)(v41 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)v31 = v87;
      *(_BYTE *)(v31 + 8) = v30;
      *(_QWORD *)(v31 + 16) = v42;
      v36 = v89;
      *(_BYTE *)(v31 + 24) = v43;
    }
    else
    {
      v44 = v78;
      v45 = v78;
      v46 = v77;
      if (v78 == 1 && v34 == v77)
      {
        if (qword_2542E5360 != -1)
          swift_once();
        if (qword_2542EDE40 == v79 && *(_QWORD *)algn_2542EDE48 == v76 || (sub_23B1C7388() & 1) != 0)
        {
          *(_QWORD *)v31 = 1;
          *(_BYTE *)(v31 + 8) = 2;
          *(_QWORD *)(v31 + 16) = 1;
          *(_BYTE *)(v31 + 24) = 2;
        }
        else
        {
          *(_QWORD *)(v31 + 16) = 0;
          *(_BYTE *)(v31 + 24) = 2;
          *(_QWORD *)v31 = v87;
          *(_BYTE *)(v31 + 8) = v30;
        }
      }
      else
      {
        v48 = *(_QWORD *)(v33 + 40);
        v49 = *(unsigned __int8 *)(v33 + 48);
        *(_QWORD *)v31 = v87;
        *(_BYTE *)(v31 + 8) = v30;
        if (v45 == 1 && !v49 && v48 == v46)
        {
          *(_QWORD *)(v31 + 16) = 1;
          *(_BYTE *)(v31 + 24) = 2;
        }
        else
        {
          *(_QWORD *)(v31 + 16) = v46;
          *(_BYTE *)(v31 + 24) = v44;
        }
      }
      v37 = v92;
    }
    v47 = v82;
    v35 = v91;
  }
  v92 = v37;
  v50 = a16;
  LODWORD(v87) = a14;
  v82 = a13;
  v51 = (_QWORD *)(v35 + *(int *)(v47 + 56));
  if (v51[1])
  {
    v80 = a16;
    v52 = v33;
    swift_bridgeObjectRetain();
    sub_23B0CE9B0((uint64_t)&v97);
    v53 = v97;
    v54 = v98;
    v55 = v100;
    v79 = v99;
    swift_bridgeObjectRelease();
    sub_23B0CE9B0((uint64_t)&v97);
    v56 = v97;
    v57 = v98;
    v78 = v99;
    v81 = v100;
    swift_bridgeObjectRelease();
    if (v53 == v56 && v54 == v57)
    {
      swift_bridgeObjectRelease_n();
      v59 = v95;
      v58 = v96;
    }
    else
    {
      v63 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v59 = v95;
      v58 = v96;
      if ((v63 & 1) == 0)
      {
        sub_23AA937BC(v105, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = v52;
        v61 = (int *)v86;
        v60 = v89;
        v62 = v88;
        goto LABEL_44;
      }
    }
    v33 = v52;
    if (!v55)
    {
      sub_23AA937BC(v105, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      v61 = (int *)v86;
      v60 = v89;
      v62 = v88;
      v50 = v80;
      if (!v81)
        goto LABEL_46;
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    v61 = (int *)v86;
    v60 = v89;
    v62 = v88;
    if (v81)
    {
      if (v79 == v78 && v55 == v81)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_23AA937BC(v105, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        swift_bridgeObjectRelease_n();
        v50 = v80;
        goto LABEL_46;
      }
      LODWORD(v96) = sub_23B1C7388();
      swift_bridgeObjectRetain();
      v62 = v88;
      v60 = v89;
      swift_bridgeObjectRelease();
      sub_23AA937BC(v105, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      swift_bridgeObjectRelease_n();
      v50 = v80;
      if ((v96 & 1) != 0)
        goto LABEL_46;
LABEL_45:
      swift_bridgeObjectRelease();
      *v51 = 0;
      v51[1] = 0;
      goto LABEL_46;
    }
    sub_23AA937BC(v105, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    swift_bridgeObjectRelease();
LABEL_44:
    v50 = v80;
    goto LABEL_45;
  }
  v60 = v36;
  sub_23AA937BC(v105, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  swift_bridgeObjectRelease();
  v59 = v95;
  v58 = v96;
  v61 = (int *)v86;
  v62 = v88;
LABEL_46:
  v64 = v92;
  *(_QWORD *)(v31 + 32) = v62;
  *(_QWORD *)(v31 + 40) = v64;
  v65 = v31 + v61[9];
  *(_QWORD *)v65 = v90;
  *(_DWORD *)(v65 + 8) = v84;
  *(_QWORD *)(v65 + 16) = v85;
  *(_BYTE *)(v65 + 24) = v60 & 1;
  v66 = v31 + v61[7];
  v67 = v61;
  v68 = v91;
  sub_23AA907B0(v91, v66, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v69 = v94;
  sub_23AA8A05C(v94, &qword_2542E6760);
  sub_23AA724E8(v59, v69, (uint64_t *)&unk_2542E6740);
  v83(v69, 0, 1, v74);
  LODWORD(v69) = *(_DWORD *)(v33 + 16);
  swift_release();
  *(_DWORD *)(v31 + v67[13]) = v69;
  v70 = v31 + v67[14];
  *(_DWORD *)v70 = v50;
  *(_BYTE *)(v70 + 4) = BYTE4(v50) & 1;
  v71 = v31 + v67[11];
  v72 = BYTE4(v82);
  *(_DWORD *)v71 = v82;
  *(_BYTE *)(v71 + 4) = v72 & 1;
  sub_23AA724E8(v58, v31 + v67[8], &qword_2542E5050);
  *(_DWORD *)(v31 + v67[10]) = v87;
  return sub_23AA937BC(v68, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

void sub_23AA901C4(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  int v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t (**v52)(uint64_t);
  _QWORD *v53;
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;

  v70 = a6;
  v71 = a7;
  v73 = a5;
  v64 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v11);
  v74 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C5DC8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v62 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v58 - v20;
  v22 = type metadata accessor for Signpost(0);
  v60 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v63 = (uint64_t)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v24;
  MEMORY[0x24BDAC7A8](v23);
  v72 = (uint64_t)&v58 - v25;
  v66 = v7;
  v67 = (id)fpfs_adopt_log();
  if (qword_2542E6818 != -1)
    swift_once();
  v26 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v21, 1, 1, v13);
  v75 = 0x657220636E797361;
  v76 = 0xEB00000000206461;
  v65 = a1;
  v69 = a3;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v27 = v76;
  v58 = v75;
  sub_23AA8EFC8((uint64_t)v21, (uint64_t)v19, (uint64_t *)&unk_2542E67B8);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
  v68 = a2;
  v59 = v21;
  if (v28 == 1)
  {
    v29 = v26;
    v30 = v62;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v30 = v62;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v62, v19, v13);
  }
  v31 = v72;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v72, v30, v13);
  *(_QWORD *)(v31 + *(int *)(v22 + 20)) = v26;
  v32 = v31 + *(int *)(v22 + 24);
  *(_QWORD *)v32 = "DB queue wait";
  *(_QWORD *)(v32 + 8) = 13;
  *(_BYTE *)(v32 + 16) = 2;
  v33 = v26;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v34 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v34 + 32) = v58;
  *(_QWORD *)(v34 + 40) = v27;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v30, v13);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v59, (uint64_t *)&unk_2542E67B8);
  v35 = v31;
  v36 = v63;
  sub_23AA907B0(v31, v63, type metadata accessor for Signpost);
  v37 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v38 = v37 + v61;
  v39 = (v37 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject();
  sub_23AA94050(v36, v40 + v37, type metadata accessor for Signpost);
  v41 = (_QWORD *)(v40 + v39);
  v42 = v73;
  *v41 = v64;
  v41[1] = v42;
  v43 = v66;
  v62 = *(char **)(v66 + 168);
  v64 = *(id *)(v66 + 64);
  v44 = sub_23B1C60A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v74, 1, 1, v44);
  sub_23AA907B0(v35, v36, type metadata accessor for Signpost);
  v45 = (v38 + 31) & 0xFFFFFFFFFFFFFFF8;
  v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  v47 = swift_allocObject();
  sub_23AA94050(v36, v47 + v37, type metadata accessor for Signpost);
  v48 = v47 + v39;
  v49 = v68;
  *(_QWORD *)v48 = v65;
  *(_QWORD *)(v48 + 8) = v49;
  *(_BYTE *)(v48 + 16) = v69;
  v50 = (_QWORD *)(v47 + v45);
  v51 = v71;
  *v50 = v70;
  v50[1] = v51;
  *(_QWORD *)(v47 + v46) = v43;
  v52 = (uint64_t (**)(uint64_t))(v47 + ((v46 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v52 = sub_23AEB2BA0;
  v52[1] = (uint64_t (*)(uint64_t))v40;
  v53 = (_QWORD *)swift_allocObject();
  v53[2] = sub_23AEB2BA0;
  v53[3] = v40;
  v53[4] = v62;
  swift_retain_n();
  v54 = v64;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v55 = v74;
  sub_23AA9086C(v54, v74, sub_23AC242E0, v53, (uint64_t)sub_23AA854FC, v47);
  swift_release();

  swift_release();
  swift_release();
  sub_23AA8A05C(v55, &qword_2542DD460);
  sub_23AA937BC(v72, type metadata accessor for Signpost);
  v56 = v67;
  v57 = (id)fpfs_adopt_log();

}

uint64_t sub_23AA907B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23AA907F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v6 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  v12 = v9;
  return a1;
}

void sub_23AA9086C(void *a1, uint64_t a2, void (*a3)(), _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  dispatch_qos_class_t v20;
  dispatch_block_flags_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void (*v31)();
  _QWORD *v32;
  void *v33;
  uint64_t aBlock;
  uint64_t v35;
  uint64_t (*v36)();
  void *v37;
  void (*v38)();
  _QWORD *v39;

  v30 = a6;
  v31 = a3;
  v28 = a5;
  v32 = a4;
  v33 = a1;
  v8 = sub_23B1C6050();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (id)fpfs_current_log();
  v29 = *(void **)(v6 + 16);
  v16 = sub_23B1C60A4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(a2, 1, v16);
  sub_23AA90D00(a2, (uint64_t)v14);
  if (v18((uint64_t)v14, 1, v16) == 1)
  {
    sub_23AA90D48((uint64_t)v14);
    v20 = QOS_CLASS_UNSPECIFIED;
  }
  else
  {
    sub_23B1C6098();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    v20 = sub_23B1C6044();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (v19 == 1)
    v21 = DISPATCH_BLOCK_INHERIT_QOS_CLASS;
  else
    v21 = DISPATCH_BLOCK_ENFORCE_QOS_CLASS;
  v22 = (_QWORD *)swift_allocObject();
  v23 = v28;
  v22[2] = v15;
  v22[3] = v23;
  v22[4] = v30;
  v38 = sub_23AA85490;
  v39 = v22;
  v24 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v36 = sub_23AA698FC;
  v37 = &block_descriptor_9;
  v25 = _Block_copy(&aBlock);
  v26 = v15;
  swift_retain();
  swift_release();
  v38 = v31;
  v39 = v32;
  aBlock = v24;
  v35 = 1107296256;
  v36 = sub_23AA698FC;
  v37 = &block_descriptor_3;
  v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  fp_task_tracker_async_and_qos(v29, v33, v21, v20, v25, v27);

  _Block_release(v27);
  _Block_release(v25);
}

uint64_t __fp_task_tracker_async_and_qos_block_invoke_2(uint64_t a1)
{
  int is_cancelled;
  uint64_t v3;

  is_cancelled = fp_task_tracker_is_cancelled(*(void **)(a1 + 32));
  v3 = 40;
  if (is_cancelled)
    v3 = 48;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + v3) + 16))();
}

void fp_task_tracker_async_and_qos(void *a1, void *a2, dispatch_block_flags_t a3, dispatch_qos_class_t a4, void *a5, void *a6)
{
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  void *v16;
  char is_cancelled;
  NSObject *v18;
  dispatch_block_t v19;
  dispatch_block_t v20;
  void *v21;
  void *v22;
  _QWORD v23[4];
  _QWORD *v24;
  id v25;
  id v26;
  _QWORD aBlock[4];
  id v28;

  v11 = a1;
  v12 = a5;
  v13 = a6;
  v14 = MEMORY[0x24BDAC760];
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 3221225472;
  aBlock[2] = __fp_task_tracker_async_and_qos_block_invoke;
  aBlock[3] = &unk_250BDBB70;
  v28 = v13;
  v15 = a2;
  v16 = _Block_copy(aBlock);
  is_cancelled = fp_task_tracker_is_cancelled(v11);
  v18 = v11[2];
  if ((is_cancelled & 1) != 0)
  {
    if (a3 != DISPATCH_BLOCK_INHERIT_QOS_CLASS || a4)
      v19 = dispatch_block_create_with_qos_class(a3, a4, 0, v16);
    else
      v19 = _Block_copy(v16);
    v21 = v19;
    dispatch_group_async(v18, v15, v19);

  }
  else
  {
    v23[0] = v14;
    v23[1] = 3221225472;
    v23[2] = __fp_task_tracker_async_and_qos_block_invoke_2;
    v23[3] = &unk_250BDBB98;
    v24 = v11;
    v25 = v12;
    v26 = v16;
    if (a3 != DISPATCH_BLOCK_INHERIT_QOS_CLASS || a4)
      v20 = dispatch_block_create_with_qos_class(a3, a4, 0, v23);
    else
      v20 = _Block_copy(v23);
    v22 = v20;
    dispatch_group_async(v18, v15, v20);

    v21 = v24;
  }

}

uint64_t fp_task_tracker_is_cancelled(void *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;

  v1 = a1;
  if (!v1)
    fp_task_tracker_is_cancelled_cold_1();
  v2 = atomic_load(v1 + 24);
  v3 = v2 & 1;

  return v3;
}

uint64_t sub_23AA90D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA90D48(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AA90D88@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  unsigned int v5;
  int v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)(uint64_t *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t *);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(uint64_t, uint64_t);
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t *);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned __int8 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t result;
  uint64_t v139;
  _BYTE v140[12];
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  _BOOL4 v152;
  _BOOL4 v153;
  uint64_t v154;
  _BOOL4 v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  int v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  int *v171;
  int *v172;
  uint64_t v173;
  _BYTE *v174;
  _BYTE *v175;
  _BYTE *v176;
  int *v177;
  int v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int v184;
  int v185;
  int v186;
  uint64_t v187;
  _QWORD *v188;
  int v189;
  int v190;
  unsigned int v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t (*v198)(uint64_t *);
  uint64_t v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  uint64_t (*v207)(uint64_t, uint64_t);
  uint64_t v208;
  unsigned __int8 v209;
  unsigned __int8 v210;
  _QWORD v211[2];
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  __int128 v215;
  uint64_t (*v216)(uint64_t, uint64_t);
  void *v217;
  uint64_t (*v218)(uint64_t *);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  int v235;
  int v236;
  uint64_t v237;
  char v238;
  char v239;
  uint64_t v240;
  uint64_t v241;
  int v242;
  int v243;
  int v244;
  char v245[8];
  char v246[8];
  _QWORD v247[3];

  v247[1] = *MEMORY[0x24BDAC8D0];
  v4 = *a1;
  v5 = *((unsigned __int16 *)a1 + 2) | (*((unsigned __int8 *)a1 + 6) << 16);
  v6 = *((unsigned __int16 *)a1 + 4);
  v7 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)a1 + 2);
  v206 = (void *)*((_QWORD *)a1 + 3);
  v207 = v7;
  v8 = (uint64_t (*)(uint64_t *))*((_QWORD *)a1 + 4);
  v197 = *((_QWORD *)a1 + 5);
  v198 = v8;
  v9 = *((_QWORD *)a1 + 6);
  v195 = *((_QWORD *)a1 + 7);
  v196 = v9;
  v194 = *((_QWORD *)a1 + 8);
  v10 = *((_QWORD *)a1 + 9);
  v11 = *((_QWORD *)a1 + 10);
  v12 = *((_QWORD *)a1 + 11);
  v193 = *((unsigned __int8 *)a1 + 96);
  v201 = a1[26];
  v208 = *((_QWORD *)a1 + 14);
  v13 = *((_QWORD *)a1 + 15);
  v14 = *((_QWORD *)a1 + 17);
  v171 = a1 + 34;
  v204 = v14;
  v205 = v10;
  v15 = *((_QWORD *)a1 + 16);
  v192 = *((_QWORD *)a1 + 18);
  v16 = *((_QWORD *)a1 + 19);
  v202 = v15;
  v203 = v16;
  v17 = (_QWORD *)*((_QWORD *)a1 + 20);
  v187 = v13;
  v188 = v17;
  v186 = a1[42];
  v180 = a1[43];
  v18 = *((_QWORD *)a1 + 22);
  v172 = a1 + 44;
  v179 = v18;
  v19 = *((_BYTE *)a1 + 184);
  v20 = *((_BYTE *)a1 + 185);
  v210 = v19;
  v209 = v20;
  v21 = *((_QWORD *)a1 + 25);
  v182 = *((_QWORD *)a1 + 24);
  v183 = v21;
  v184 = a1[52];
  v178 = a1[53];
  v185 = a1[54];
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v175 = &v140[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v176 = &v140[-v26];
  MEMORY[0x24BDAC7A8](v25);
  v174 = &v140[-v27];
  v191 = HIWORD(v5);
  switch(v4)
  {
    case 2:
      v167 = 0;
      LODWORD(v166) = 0;
      HIDWORD(v166) = v201;
      v168 = 0x100000001;
      goto LABEL_10;
    case 1:
      v238 = v19 & 1;
      v239 = v20 & 1;
      LODWORD(v215) = 1;
      WORD2(v215) = v5;
      BYTE6(v215) = v191;
      WORD4(v215) = v6;
      v216 = v207;
      v217 = v206;
      v218 = v198;
      v219 = v197;
      v220 = v196;
      v221 = v195;
      v222 = v194;
      v223 = v205;
      v224 = v11;
      v225 = v12;
      v226 = v193;
      v28 = v201;
      v227 = v201;
      v228 = v208;
      v229 = v187;
      v230 = v202;
      v231 = v204;
      v232 = v192;
      v233 = v203;
      v234 = v188;
      v235 = v186;
      v236 = v180;
      v237 = v179;
      v240 = v182;
      v241 = v183;
      v242 = v184;
      v243 = v178;
      v244 = v185;
      if ((sub_23AABEF58((uint64_t)&v215) & 1) != 0)
      {
        v167 = 0;
        v168 = 0x300000001;
      }
      else
      {
        v167 = v28;
        v168 = 0;
      }
      break;
    case 3:
      v167 = 0;
      v168 = 1;
      LODWORD(v166) = 0;
      HIDWORD(v166) = v201;
      goto LABEL_10;
    case 4:
      v167 = 0;
      v168 = 0x200000001;
      break;
    default:
      v139 = type metadata accessor for ItemMetadata();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(a2, 1, 1, v139);
  }
  v166 = 1;
LABEL_10:
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = 0;
  v169 = (uint64_t *)(v29 + 16);
  v30 = v188;
  v173 = v29;
  if (v12 >= 1)
  {
    v31 = *((_QWORD *)a1 + 12);
    *(_QWORD *)(v29 + 16) = MEMORY[0x24BEE4AF8];
    v212 = v11;
    v213 = v12;
    v214 = v31;
    v218 = sub_23AD676E8;
    v219 = v29;
    *(_QWORD *)&v215 = MEMORY[0x24BDAC760];
    *((_QWORD *)&v215 + 1) = 1107296256;
    v216 = sub_23B135DF8;
    v217 = &block_descriptor_11;
    v32 = _Block_copy(&v215);
    swift_retain();
    swift_release();
    fpfs_deserialize_tags();
    _Block_release(v32);
    v30 = (_QWORD *)*((_QWORD *)a1 + 20);
  }
  v199 = v11;
  v189 = v6;
  v181 = v12;
  v200 = v5;
  v190 = v4;
  v177 = a1;
  v170 = a2;
  v33 = 0;
  if (v30)
  {
    do
    {
      v37 = (_QWORD *)*v30;
      v38 = sub_23B1C650C();
      v40 = v30[2];
      if (v40 > 0x7FFFFFFFFFFFFFE7)
      {
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
      }
      v41 = v38;
      v42 = v39;
      if (v40)
      {
        v43 = v30 + 3;
        if (v40 <= 14)
        {
          *(_QWORD *)((char *)&v215 + 6) = 0;
          *(_QWORD *)&v215 = 0;
          BYTE14(v215) = v40;
          memcpy(&v215, v43, v40);
          v46 = v215;
          v47 = DWORD2(v215) | ((unint64_t)BYTE12(v215) << 32) | ((unint64_t)BYTE13(v215) << 40) | ((unint64_t)BYTE14(v215) << 48);
        }
        else
        {
          sub_23B1C563C();
          swift_allocObject();
          v44 = sub_23B1C5600();
          v45 = v44;
          if ((unint64_t)v40 >= 0x7FFFFFFF)
          {
            sub_23B1C5A5C();
            v46 = swift_allocObject();
            *(_QWORD *)(v46 + 16) = 0;
            *(_QWORD *)(v46 + 24) = v40;
            v47 = v45 | 0x8000000000000000;
          }
          else
          {
            v46 = v40 << 32;
            v47 = v44 | 0x4000000000000000;
          }
        }
      }
      else
      {
        v46 = 0;
        v47 = 0xC000000000000000;
      }
      if (v33)
        v48 = v33;
      else
        v48 = (_QWORD *)MEMORY[0x24BEE4B00];
      sub_23AAAE668(v46, v47);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v215 = v48;
      v51 = sub_23AAAF4C4(v41, v42);
      v52 = v48[2];
      v53 = (v50 & 1) == 0;
      v54 = v52 + v53;
      if (__OFADD__(v52, v53))
        goto LABEL_64;
      v55 = v50;
      if (v48[3] >= v54)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v33 = (_QWORD *)v215;
          if ((v50 & 1) != 0)
            goto LABEL_15;
        }
        else
        {
          sub_23B187010();
          v33 = (_QWORD *)v215;
          if ((v55 & 1) != 0)
            goto LABEL_15;
        }
      }
      else
      {
        sub_23AA925B8(v54, isUniquelyReferenced_nonNull_native);
        v56 = sub_23AAAF4C4(v41, v42);
        if ((v55 & 1) != (v57 & 1))
        {
          result = sub_23B1C7418();
          __break(1u);
          return result;
        }
        v51 = v56;
        v33 = (_QWORD *)v215;
        if ((v55 & 1) != 0)
        {
LABEL_15:
          v36 = v33[7] + 16 * v51;
          sub_23AAAE53C(*(_QWORD *)v36, *(_QWORD *)(v36 + 8));
          *(_QWORD *)v36 = v46;
          *(_QWORD *)(v36 + 8) = v47;
          goto LABEL_16;
        }
      }
      v33[(v51 >> 6) + 8] |= 1 << v51;
      v58 = (uint64_t *)(v33[6] + 16 * v51);
      *v58 = v41;
      v58[1] = v42;
      v59 = (uint64_t *)(v33[7] + 16 * v51);
      *v59 = v46;
      v59[1] = v47;
      v60 = v33[2];
      v61 = __OFADD__(v60, 1);
      v62 = v60 + 1;
      if (v61)
        goto LABEL_65;
      v33[2] = v62;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AAAE53C(v46, v47);
      v30 = v37;
    }
    while (v37);
  }
  sub_23AA724E8((uint64_t)v171, (uint64_t)v246, (uint64_t *)&unk_2542E7580);
  sub_23AA724E8((uint64_t)v246, (uint64_t)v247, (uint64_t *)&unk_2542E7580);
  if (v247[0])
  {
    *(_QWORD *)&v215 = sub_23B1C650C();
    *((_QWORD *)&v215 + 1) = v34;
    v211[1] = 0xE100000000000000;
    v212 = 58;
    v213 = 0xE100000000000000;
    v211[0] = 47;
    sub_23AAA420C();
    v171 = (int *)sub_23B1C6CF8();
    v165 = v35;
    swift_bridgeObjectRelease();
  }
  else
  {
    v171 = 0;
    v165 = 0;
  }
  v63 = v177;
  v64 = *((_QWORD *)v177 + 14);
  sub_23AA724E8((uint64_t)v172, (uint64_t)v245, (uint64_t *)&unk_2542E7580);
  sub_23AA724E8((uint64_t)v245, (uint64_t)v211, (uint64_t *)&unk_2542E7580);
  if (v211[0])
  {
    v65 = sub_23B1C63B0();
    v172 = (int *)v66;
    if (v66)
      v67 = v65;
    else
      v67 = 0;
    v164 = v67;
  }
  else
  {
    v164 = 0;
    v172 = 0;
  }
  if (*(_OWORD *)(v63 + 6) == 0)
  {
    v68 = sub_23B1C5BDC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v174, 1, 1, v68);
  }
  else
  {
    v69 = v174;
    sub_23B1C5B88();
    v70 = sub_23B1C5BDC();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 0, 1, v70);
  }
  v71 = *((_QWORD *)v63 + 5);
  v72 = *((_QWORD *)v63 + 6);
  v159 = v64;
  if (v71 | v72)
  {
    v74 = v176;
    sub_23B1C5B88();
    v75 = sub_23B1C5BDC();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 0, 1, v75);
  }
  else
  {
    v73 = sub_23B1C5BDC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v176, 1, 1, v73);
  }
  LODWORD(v160) = v210;
  v161 = v209;
  v76 = v190;
  LODWORD(v215) = v190;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v221 = v195;
  v222 = v194;
  v77 = v204;
  v223 = v205;
  v224 = v199;
  v225 = v181;
  v78 = v181;
  v226 = v193;
  v227 = v201;
  v228 = v208;
  v79 = v188;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v80 = v192;
  v232 = v192;
  v233 = v203;
  v234 = v188;
  v235 = v186;
  v236 = v180;
  v237 = v179;
  v238 = v210;
  v239 = v209;
  v240 = v182;
  v241 = v183;
  v81 = v183;
  v242 = v184;
  v82 = v178;
  v243 = v178;
  v83 = v185;
  v244 = v185;
  v163 = sub_23AA92C00((uint64_t)&v215);
  LODWORD(v215) = v76;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v221 = v195;
  v222 = v194;
  v223 = v205;
  v224 = v199;
  v225 = v78;
  v226 = v193;
  v227 = v201;
  v228 = v208;
  v229 = v187;
  v230 = v202;
  v231 = v77;
  v232 = v80;
  v233 = v203;
  v234 = v79;
  v235 = v186;
  LODWORD(v78) = v180;
  v236 = v180;
  v84 = v179;
  v237 = v179;
  LOBYTE(v79) = v160;
  v238 = v160;
  LOBYTE(v80) = v161;
  v239 = v161;
  v85 = v182;
  v240 = v182;
  v241 = v81;
  LODWORD(v81) = v184;
  v242 = v184;
  v243 = v82;
  v244 = v83;
  v162 = sub_23AA92C18((uint64_t)&v215);
  v238 = (char)v79;
  v239 = v80;
  LODWORD(v79) = v201;
  LODWORD(v215) = v190;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v221 = v195;
  v222 = v194;
  v223 = v205;
  v224 = v199;
  v225 = v181;
  v226 = v193;
  v227 = v201;
  v228 = v208;
  v87 = v187;
  v86 = v188;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v188;
  v235 = v186;
  v236 = v78;
  v237 = v84;
  v240 = v85;
  v88 = v183;
  v241 = v183;
  v242 = v81;
  v243 = v82;
  LODWORD(v81) = v185;
  v244 = v185;
  v161 = sub_23AA92C54((uint64_t)&v215);
  v238 = v210;
  v239 = v209;
  LODWORD(v215) = v190;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v221 = v195;
  v222 = v194;
  v223 = v205;
  v224 = v199;
  v225 = v181;
  v226 = v193;
  v227 = (int)v79;
  v228 = v208;
  v229 = v87;
  v230 = v202;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v86;
  v235 = v186;
  v236 = v78;
  v237 = v179;
  v240 = v182;
  v241 = v88;
  v242 = v184;
  v243 = v82;
  v244 = v81;
  if ((sub_23AA92C3C((uint64_t)&v215) & 1) != 0)
  {
    v89 = v177;
    v90 = v175;
    sub_23B1C5B88();
    v91 = sub_23B1C5BDC();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 0, 1, v91);
    v92 = v169;
  }
  else
  {
    v93 = sub_23B1C5BDC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v175, 1, 1, v93);
    v92 = v169;
    v89 = v177;
  }
  v94 = v159;
  v95 = __ROR8__(v159, 32);
  swift_beginAccess();
  v96 = *v92;
  v160 = v95;
  if (v96 && *(_QWORD *)(v96 + 16))
  {
    v169 = (uint64_t *)v96;
    swift_bridgeObjectRetain();
  }
  else
  {
    v169 = 0;
  }
  v97 = v190;
  v152 = v94 == 0;
  v153 = v190 == 3;
  v156 = *((_QWORD *)v89 + 9);
  v155 = v156 == 0;
  v98 = *((_QWORD *)v89 + 2);
  v158 = *((_QWORD *)v89 + 16);
  v159 = v98;
  v154 = *((_QWORD *)v89 + 15);
  v99 = *((_QWORD *)v89 + 25);
  v157 = *((unsigned __int16 *)v89 + 4);
  v151 = sub_23AA928C4(v99);
  swift_bridgeObjectRetain();
  v147 = v210;
  v148 = v209;
  LODWORD(v215) = v97;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v221 = v195;
  v222 = v194;
  v223 = v205;
  v224 = v199;
  v225 = v181;
  v226 = v193;
  v227 = v201;
  v228 = v208;
  v100 = v188;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v188;
  v101 = v186;
  v235 = v186;
  v236 = v180;
  v102 = v180;
  v103 = v179;
  v237 = v179;
  v238 = v210;
  v239 = v209;
  v104 = v182;
  v240 = v182;
  v241 = v183;
  v105 = v184;
  v242 = v184;
  v106 = v178;
  v243 = v178;
  v107 = v185;
  v244 = v185;
  v150 = sub_23AA92BC4((uint64_t)&v215);
  LODWORD(v215) = v190;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v221 = v195;
  v222 = v194;
  v223 = v205;
  v224 = v199;
  v225 = v181;
  v226 = v193;
  v227 = v201;
  v228 = v208;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v100;
  v235 = v101;
  v236 = v102;
  v237 = v103;
  LOBYTE(v103) = v147;
  LOBYTE(v102) = v148;
  v238 = v147;
  v239 = v148;
  v240 = v104;
  v241 = v183;
  v242 = v105;
  v243 = v106;
  v244 = v107;
  v149 = sub_23AA92C0C((uint64_t)&v215);
  v238 = v103;
  v239 = v102;
  v108 = v190;
  LODWORD(v215) = v190;
  LOBYTE(v104) = v191;
  BYTE6(v215) = v191;
  LOWORD(v106) = v200;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v109 = v197;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v110 = v194;
  v221 = v195;
  v222 = v194;
  v223 = v205;
  v111 = v199;
  v224 = v199;
  v225 = v181;
  v226 = v193;
  v112 = v202;
  v227 = v201;
  v228 = v208;
  v113 = v187;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v188;
  v235 = v186;
  v236 = v180;
  v237 = v179;
  v240 = v182;
  v241 = v183;
  v242 = v184;
  v243 = v178;
  v244 = v185;
  v148 = sub_23AA92C24((uint64_t)&v215);
  v144 = v209;
  v145 = v210;
  LODWORD(v215) = v108;
  BYTE6(v215) = v104;
  WORD2(v215) = v106;
  LOWORD(v106) = v189;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v114 = v198;
  v218 = v198;
  v219 = v109;
  v115 = v196;
  v220 = v196;
  v221 = v195;
  v222 = v110;
  v223 = v205;
  v224 = v111;
  v116 = v181;
  v225 = v181;
  LOBYTE(v111) = v193;
  v226 = v193;
  LODWORD(v110) = v201;
  v227 = v201;
  v228 = v208;
  v229 = v113;
  v230 = v112;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v188;
  v235 = v186;
  LODWORD(v112) = v180;
  v236 = v180;
  v117 = v179;
  v237 = v179;
  v238 = v210;
  v239 = v209;
  v240 = v182;
  v241 = v183;
  v242 = v184;
  v243 = v178;
  v244 = v185;
  v147 = sub_23AA92BF4((uint64_t)&v215);
  LODWORD(v215) = v190;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v106;
  v216 = v207;
  v217 = v206;
  v218 = v114;
  v219 = v197;
  v220 = v115;
  v221 = v195;
  v222 = v194;
  v223 = v205;
  v224 = v199;
  v225 = v116;
  v226 = v111;
  v227 = v110;
  v228 = v208;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v188;
  LODWORD(v114) = v186;
  v235 = v186;
  v236 = v112;
  v237 = v117;
  LOBYTE(v111) = v144;
  LOBYTE(v116) = v145;
  v238 = v145;
  v239 = v144;
  v240 = v182;
  v241 = v183;
  v242 = v184;
  v243 = v178;
  v244 = v185;
  v146 = sub_23AA92C30((uint64_t)&v215);
  v238 = v116;
  v239 = v111;
  LODWORD(v215) = v190;
  LOBYTE(v112) = v191;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v106;
  v119 = v206;
  v118 = v207;
  v216 = v207;
  v217 = v206;
  v218 = v198;
  v219 = v197;
  v220 = v115;
  v120 = v194;
  v121 = v195;
  v221 = v195;
  v222 = v194;
  v223 = v205;
  v224 = v199;
  v225 = v181;
  LOBYTE(v111) = v193;
  v226 = v193;
  v227 = v201;
  v228 = v208;
  v122 = v187;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v188;
  v235 = (int)v114;
  v236 = v180;
  v123 = v179;
  v237 = v179;
  v240 = v182;
  v241 = v183;
  v242 = v184;
  v243 = v178;
  v244 = v185;
  v145 = sub_23AA92C48((uint64_t)&v215);
  v141 = v209;
  v142 = v210;
  LODWORD(v215) = v190;
  BYTE6(v215) = v112;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v118;
  v217 = v119;
  v125 = v197;
  v124 = v198;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v221 = v121;
  v222 = v120;
  v126 = v205;
  v223 = v205;
  v224 = v199;
  v225 = v181;
  v226 = v111;
  v227 = v201;
  v228 = v208;
  v229 = v122;
  v127 = v203;
  v230 = v202;
  v231 = v204;
  v128 = v192;
  v232 = v192;
  v233 = v203;
  v129 = v188;
  v234 = v188;
  LODWORD(v120) = v186;
  v235 = v186;
  v236 = v180;
  v237 = v123;
  v238 = v210;
  v239 = v209;
  v130 = v183;
  v240 = v182;
  v241 = v183;
  v242 = v184;
  v243 = v178;
  v244 = v185;
  v144 = sub_23AA92BE8((uint64_t)&v215);
  LODWORD(v215) = v190;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v218 = v124;
  v219 = v125;
  v131 = v195;
  v220 = v196;
  v221 = v195;
  v222 = v194;
  v223 = v126;
  v224 = v199;
  v132 = v181;
  v225 = v181;
  v226 = v193;
  v227 = v201;
  v228 = v208;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v232 = v128;
  v233 = v127;
  v234 = v129;
  v235 = v120;
  v236 = v180;
  v133 = v179;
  v237 = v179;
  LOBYTE(v129) = v141;
  LOBYTE(v127) = v142;
  v238 = v142;
  v239 = v141;
  v134 = v182;
  v240 = v182;
  v241 = v130;
  LODWORD(v130) = v184;
  v242 = v184;
  LODWORD(v128) = v178;
  v243 = v178;
  v244 = v185;
  v143 = sub_23AA92BDC((uint64_t)&v215);
  LODWORD(v215) = v190;
  BYTE6(v215) = v191;
  WORD2(v215) = v200;
  WORD4(v215) = v189;
  v216 = v207;
  v217 = v206;
  v218 = v198;
  v219 = v197;
  v220 = v196;
  v221 = v131;
  v222 = v194;
  v223 = v205;
  v224 = v199;
  v225 = v132;
  v226 = v193;
  v227 = v201;
  v228 = v208;
  v229 = v187;
  v230 = v202;
  v231 = v204;
  v232 = v192;
  v233 = v203;
  v234 = v188;
  v235 = v186;
  v236 = v180;
  v237 = v133;
  v238 = v127;
  v239 = (char)v129;
  v240 = v134;
  v241 = v183;
  v242 = v130;
  v243 = v128;
  v244 = v185;
  LOBYTE(v130) = sub_23AA92BD0((uint64_t)&v215);
  v135 = sub_23AEFCB38(v177[52]);
  LOBYTE(v215) = v168;
  v136 = v170;
  sub_23AB58648(SBYTE4(v168), v159, v158, 0, HIDWORD(v166) | ((unint64_t)v166 << 32), v157, (uint64_t)v174, (uint64_t)v176, v170, v163, v162, v161, (uint64_t)v175, (uint64_t)v169, v156, v155, (uint64_t)v33, 0, 0xF000000000000000,
    v154,
    v151,
    v150,
    v149,
    v148,
    v147,
    0,
    v146,
    v153,
    v145,
    (uint64_t)v171,
    v165,
    v160,
    v152,
    v167 | ((unint64_t)v168 << 32),
    v144,
    v164,
    (uint64_t)v172,
    v143,
    v130,
    v135);
  swift_bridgeObjectRelease();
  swift_release();
  v137 = type metadata accessor for ItemMetadata();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v136, 0, 1, v137);
}

uint64_t sub_23AA925B8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7F0);
  v6 = a2;
  v7 = sub_23B1C70A0();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_23AAAE668(v37, *((unint64_t *)&v37 + 1));
      }
      sub_23B1C74A8();
      sub_23B1C64A0();
      result = sub_23B1C74E4();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_23AA928C4(uint64_t result)
{
  if (result <= 1023)
  {
    if (!result)
      return result;
    if (result == 512)
      return 2;
  }
  else
  {
    switch(result)
    {
      case 0x400:
        return 3;
      case 0x800:
        return 4;
      case 0x8000:
        return 5;
    }
  }
  return 1;
}

uint64_t sub_23AA92918()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AA92924()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AA92930(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;

  v8 = sub_23B1C5570();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = os_variant_has_internal_content();
  if ((_DWORD)result)
  {
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = a1;
    v26 = a2;
    sub_23B1C64F4();
    v13 = sub_23B1C656C();
    result = swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      v25 = 45;
      v26 = 0xE100000000000000;
      MEMORY[0x24BDAC7A8](result);
      *(&v25 - 2) = (uint64_t)&v25;
      swift_bridgeObjectRetain();
      v14 = sub_23B181824(0x7FFFFFFFFFFFFFFFLL, 1, sub_23B19E138, (uint64_t)(&v25 - 4), a3, a4);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15
        && (v16 = (unint64_t *)(v14 + 32 * v15),
            v17 = *v16,
            v18 = v16[1],
            v20 = v16[2],
            v19 = v16[3],
            swift_bridgeObjectRetain(),
            swift_bridgeObjectRelease(),
            (v18 ^ v17) >> 14))
      {
        v21 = sub_23B191B48(v17, v18, v20, v19, 10);
        if ((v21 & 0x10000000000) != 0)
          v21 = sub_23B190E14(v17, v18, v20, v19, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_23B19140C);
        v22 = v21;
        result = swift_bridgeObjectRelease();
        if ((v22 & 0x100000000) == 0)
        {
          v23 = sub_23B1C5E64();
          if ((v23 & 0x100000000) != 0)
            v24 = 22;
          else
            v24 = v23;
          LODWORD(v25) = v24;
          sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
          sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
          sub_23B1C5864();
          sub_23B1C5558();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          return swift_willThrow();
        }
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_23AA92BC4(uint64_t a1)
{
  return *(_BYTE *)(a1 + 5) & 1;
}

uint64_t sub_23AA92BD0(uint64_t a1)
{
  return *(_BYTE *)(a1 + 6) & 1;
}

uint64_t sub_23AA92BDC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 5) >> 7;
}

uint64_t sub_23AA92BE8(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 5) >> 2) & 1;
}

uint64_t sub_23AA92BF4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4) >> 7;
}

uint64_t sub_23AA92C00(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 4) & 1;
}

uint64_t sub_23AA92C0C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 5) >> 1) & 1;
}

uint64_t sub_23AA92C18(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 2) & 1;
}

uint64_t sub_23AA92C24(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 5) >> 6) & 1;
}

uint64_t sub_23AA92C30(uint64_t a1)
{
  return *(_DWORD *)(a1 + 4) & 1;
}

uint64_t sub_23AA92C3C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 5) >> 4) & 1;
}

uint64_t sub_23AA92C48(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 5) >> 3) & 1;
}

uint64_t sub_23AA92C54(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 3) & 1;
}

void sub_23AA92C60(uint64_t a1, void (*a2)(char *, _QWORD), uint64_t a3, uint64_t a4, unint64_t a5, void *a6, int a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void *v87;
  unint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void (*v102)(char *, _QWORD);
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115[3];

  v94 = a7;
  v101 = a6;
  v105 = a5;
  v113 = a4;
  v97 = sub_23B1C5A08();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v95 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_23B1C5E4C();
  v106 = *(_QWORD *)(v108 - 8);
  v11 = MEMORY[0x24BDAC7A8](v108);
  v104 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v98 = (char *)&v91 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v91 = (uint64_t)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v91 - v17;
  v19 = type metadata accessor for VFSItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v93 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v91 - v24;
  v92 = v26;
  MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v91 - v27;
  v29 = swift_allocObject();
  v102 = a2;
  *(_QWORD *)(v29 + 16) = a2;
  *(_QWORD *)(v29 + 24) = a3;
  v30 = swift_allocObject();
  swift_weakInit();
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = sub_23ACFC48C;
  v31[3] = v29;
  v31[4] = v30;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_23AABE8C0;
  *(_QWORD *)(v32 + 24) = v31;
  v111 = v32;
  v112 = a3;
  swift_retain_n();
  v110 = v29;
  v33 = v113;
  swift_retain();
  v109 = v30;
  swift_retain();
  v107 = v31;
  swift_retain();
  v103 = a1;
  sub_23AA8E3C8(v33, 0, 2, 3, (uint64_t)v18);
  v99 = v19;
  v100 = v20;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_23AA8A05C((uint64_t)v18, &qword_2542E72C0);
    v34 = (id)fpfs_current_or_default_log();
    v35 = v98;
    sub_23B1C5E58();
    v36 = v96;
    v37 = v95;
    v38 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v33, v97);
    v39 = v105;
    sub_23AA93780(v105);
    sub_23AA93780(v39);
    v40 = sub_23B1C5E40();
    v41 = sub_23B1C6A94();
    v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      v43 = swift_slowAlloc();
      v113 = swift_slowAlloc();
      v115[0] = v113;
      *(_DWORD *)v43 = 136315394;
      v103 = v43 + 4;
      LODWORD(v104) = v42;
      v44 = (void *)sub_23B1C5954();
      v45 = objc_msgSend(v44, sel_fp_shortDescription);

      v46 = sub_23B1C63E0();
      v48 = v47;

      v114 = sub_23AABEC68(v46, v48, v115);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
      *(_WORD *)(v43 + 12) = 2082;
      sub_23AA93780(v39);
      sub_23AE5BC48(v39);
      v50 = v49;
      v52 = v51;
      sub_23AC03BE4(v39);
      v114 = sub_23AABEC68(v50, v52, v115);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AC03BE4(v39);
      sub_23AC03BE4(v39);
      _os_log_impl(&dword_23AA66000, v40, (os_log_type_t)v104, "no vfs item for %s (request: %{public}s)", (uint8_t *)v43, 0x16u);
      v53 = v113;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v53, -1, -1);
      MEMORY[0x23B8614BC](v43, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
      sub_23AC03BE4(v39);
      sub_23AC03BE4(v39);
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v35, v108);
    v102(0, 0);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_23AA94050((uint64_t)v18, (uint64_t)v28, type metadata accessor for VFSItem);
    v54 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA907B0((uint64_t)v28, (uint64_t)v25, type metadata accessor for VFSItem);
    v55 = v105;
    sub_23AA93780(v105);
    sub_23AA93780(v55);
    v56 = sub_23B1C5E40();
    v57 = sub_23B1C6A94();
    v58 = (uint64_t)v28;
    if (os_log_type_enabled(v56, v57))
    {
      v59 = swift_slowAlloc();
      v60 = swift_slowAlloc();
      v115[0] = v60;
      *(_DWORD *)v59 = 136446466;
      v61 = v55;
      v62 = sub_23AC3E1F8();
      v114 = sub_23AABEC68(v62, v63, v115);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA937BC((uint64_t)v25, type metadata accessor for VFSItem);
      *(_WORD *)(v59 + 12) = 2082;
      sub_23AA93780(v55);
      sub_23AE5BC48(v55);
      v65 = v64;
      v67 = v66;
      sub_23AC03BE4(v61);
      v114 = sub_23AABEC68(v65, v67, v115);
      sub_23B1C6CBC();
      v55 = v61;
      v58 = (uint64_t)v28;
      swift_bridgeObjectRelease();
      sub_23AC03BE4(v55);
      sub_23AC03BE4(v55);
      _os_log_impl(&dword_23AA66000, v56, v57, "Resolved item %{public}s (request: %{public}s)", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v60, -1, -1);
      MEMORY[0x23B8614BC](v59, -1, -1);
    }
    else
    {
      sub_23AA937BC((uint64_t)v25, type metadata accessor for VFSItem);
      sub_23AC03BE4(v55);
      sub_23AC03BE4(v55);
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v104, v108);
    v68 = *(_QWORD *)(v103 + 16);
    type metadata accessor for VFSFileTree(0);
    v69 = (_QWORD *)swift_dynamicCastClassUnconditional();
    swift_retain();
    v70 = objc_sync_enter(v69);
    v71 = v100;
    if (v70)
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v69);
    v72 = v69[20];
    swift_retain();
    if (objc_sync_exit(v69))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v69);
    swift_release();
    v73 = *(_QWORD *)(v72 + 32);
    swift_bridgeObjectRetain();
    swift_release();
    v74 = v99;
    v75 = sub_23AA940DC(*(_QWORD *)(v58 + *(int *)(v99 + 36)), v73);
    swift_bridgeObjectRelease();
    if ((v75 & 1) != 0
      && (v76 = v58 + *(int *)(v74 + 28), *(_BYTE *)(v76 + *(int *)(type metadata accessor for ItemMetadata() + 80)) == 1)
      && (*(_BYTE *)(v58 + 8) != 2 || *(_QWORD *)v58)
      && (v77 = v91,
          sub_23AA907B0(v58, v91, type metadata accessor for VFSItem),
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v77, 0, 1, v74),
          v78 = sub_23AC7861C(v113, v77),
          sub_23AA8A05C(v77, &qword_2542E72C0),
          v78))
    {
      v79 = v78;
      v102(v78, 0);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_23AA937BC(v58, type metadata accessor for VFSItem);

    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v80 = swift_allocObject();
      v81 = v111;
      *(_QWORD *)(v80 + 16) = sub_23AAB5308;
      *(_QWORD *)(v80 + 24) = v81;
      v82 = v93;
      sub_23AA907B0(v58, v93, type metadata accessor for VFSItem);
      v83 = (*(unsigned __int8 *)(v71 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      v112 = v68;
      v113 = v58;
      v84 = (v92 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
      v85 = (v84 + 15) & 0xFFFFFFFFFFFFFFF8;
      v86 = swift_allocObject();
      *(_QWORD *)(v86 + 16) = v103;
      sub_23AA94050(v82, v86 + v83, type metadata accessor for VFSItem);
      v87 = v101;
      *(_QWORD *)(v86 + v84) = v101;
      *(_QWORD *)(v86 + v85) = v55;
      v88 = v86 + ((v85 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_QWORD *)v88 = sub_23AAB5308;
      *(_QWORD *)(v88 + 8) = v81;
      *(_BYTE *)(v88 + 16) = v94 & 1;
      v89 = swift_allocObject();
      *(_QWORD *)(v89 + 16) = sub_23ACFC48C;
      *(_QWORD *)(v89 + 24) = v80;
      swift_retain();
      sub_23AA93780(v55);
      swift_retain();
      swift_retain();
      v90 = v87;
      swift_retain();
      sub_23AA901C4((uint64_t)"item(for:userRequest:hideIgnoredDescendents:completionHandler:)", 63, 2, sub_23ACFC77C, v89, (uint64_t)sub_23AAB8E7C, v86);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_23AA937BC(v113, type metadata accessor for VFSItem);
    }
  }
}

unint64_t sub_23AA93780(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23AA937BC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23AA937F8(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = a1 + a2[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = a1 + a2[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16);
  if (!(_DWORD)result)
  {
    v18 = sub_23B1C5A08();
    v19 = *(_QWORD *)(v18 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v15, v18);
  }
  return result;
}

uint64_t sub_23AA93A10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  _OWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  const void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v86;
  uint64_t v87;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = a3[7];
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_BYTE *)v6 = *(_BYTE *)(a2 + v5);
  *(_BYTE *)(v6 + 8) = *(_BYTE *)(a2 + v5 + 8);
  *(_DWORD *)(v6 + 4) = *(_DWORD *)(a2 + v5 + 4);
  *(_WORD *)(v6 + 10) = *(_WORD *)(a2 + v5 + 10);
  v8 = (int *)type metadata accessor for ItemMetadata();
  v9 = v8[7];
  v10 = v6 + v9;
  v11 = v7 + v9;
  v12 = sub_23B1C5BDC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  v14(v10, v11, v12);
  v14(v6 + v8[8], v7 + v8[8], v12);
  *(_BYTE *)(v6 + v8[9]) = *(_BYTE *)(v7 + v8[9]);
  *(_BYTE *)(v6 + v8[10]) = *(_BYTE *)(v7 + v8[10]);
  *(_BYTE *)(v6 + v8[11]) = *(_BYTE *)(v7 + v8[11]);
  *(_BYTE *)(v6 + v8[12]) = *(_BYTE *)(v7 + v8[12]);
  *(_BYTE *)(v6 + v8[13]) = *(_BYTE *)(v7 + v8[13]);
  v15 = v8[14];
  v16 = (_QWORD *)(v6 + v15);
  v17 = (_QWORD *)(v7 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_BYTE *)(v6 + v8[15]) = *(_BYTE *)(v7 + v8[15]);
  *(_BYTE *)(v6 + v8[16]) = *(_BYTE *)(v7 + v8[16]);
  *(_BYTE *)(v6 + v8[17]) = *(_BYTE *)(v7 + v8[17]);
  *(_BYTE *)(v6 + v8[18]) = *(_BYTE *)(v7 + v8[18]);
  *(_QWORD *)(v6 + v8[19]) = *(_QWORD *)(v7 + v8[19]);
  *(_BYTE *)(v6 + v8[20]) = *(_BYTE *)(v7 + v8[20]);
  *(_BYTE *)(v6 + v8[21]) = *(_BYTE *)(v7 + v8[21]);
  *(_BYTE *)(v6 + v8[22]) = *(_BYTE *)(v7 + v8[22]);
  *(_BYTE *)(v6 + v8[23]) = *(_BYTE *)(v7 + v8[23]);
  *(_BYTE *)(v6 + v8[24]) = *(_BYTE *)(v7 + v8[24]);
  *(_QWORD *)(v6 + v8[25]) = *(_QWORD *)(v7 + v8[25]);
  *(_QWORD *)(v6 + v8[26]) = *(_QWORD *)(v7 + v8[26]);
  *(_BYTE *)(v6 + v8[27]) = *(_BYTE *)(v7 + v8[27]);
  *(_BYTE *)(v6 + v8[28]) = *(_BYTE *)(v7 + v8[28]);
  v19 = v8[29];
  v20 = (void *)(v6 + v19);
  v21 = (const void *)(v7 + v19);
  v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v22(v21, 1, v12))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v20, (uint64_t)v21, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
  }
  *(_QWORD *)(v6 + v8[30]) = *(_QWORD *)(v7 + v8[30]);
  v24 = v8[31];
  v25 = v6 + v24;
  v26 = v7 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)(v6 + v8[32]) = *(_QWORD *)(v7 + v8[32]);
  v27 = v8[33];
  v28 = v6 + v27;
  v29 = (uint64_t *)(v7 + v27);
  v30 = *(_QWORD *)(v7 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30 >> 60 == 15)
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  else
  {
    v31 = *v29;
    sub_23AAAE668(*v29, v30);
    *(_QWORD *)v28 = v31;
    *(_QWORD *)(v28 + 8) = v30;
  }
  v32 = v8[34];
  v33 = v6 + v32;
  v34 = v7 + v32;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  *(_BYTE *)(v6 + v8[35]) = *(_BYTE *)(v7 + v8[35]);
  v35 = v8[36];
  v36 = v6 + v35;
  v37 = v7 + v35;
  *(_BYTE *)(v36 + 4) = *(_BYTE *)(v37 + 4);
  *(_DWORD *)v36 = *(_DWORD *)v37;
  v38 = v8[37];
  v39 = (_QWORD *)(v6 + v38);
  v40 = (_QWORD *)(v7 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = a3;
  v43 = a3[8];
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = *(void **)(a2 + v43 + 16);
  swift_bridgeObjectRetain();
  if (v46 == (void *)1)
  {
    v47 = *(_OWORD *)(v45 + 208);
    *(_OWORD *)(v44 + 192) = *(_OWORD *)(v45 + 192);
    *(_OWORD *)(v44 + 208) = v47;
    *(_OWORD *)(v44 + 224) = *(_OWORD *)(v45 + 224);
    *(_QWORD *)(v44 + 240) = *(_QWORD *)(v45 + 240);
    v48 = *(_OWORD *)(v45 + 144);
    *(_OWORD *)(v44 + 128) = *(_OWORD *)(v45 + 128);
    *(_OWORD *)(v44 + 144) = v48;
    v49 = *(_OWORD *)(v45 + 176);
    *(_OWORD *)(v44 + 160) = *(_OWORD *)(v45 + 160);
    *(_OWORD *)(v44 + 176) = v49;
    v50 = *(_OWORD *)(v45 + 80);
    *(_OWORD *)(v44 + 64) = *(_OWORD *)(v45 + 64);
    *(_OWORD *)(v44 + 80) = v50;
    v51 = *(_OWORD *)(v45 + 112);
    *(_OWORD *)(v44 + 96) = *(_OWORD *)(v45 + 96);
    *(_OWORD *)(v44 + 112) = v51;
    v52 = *(_OWORD *)(v45 + 16);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *(_OWORD *)(v44 + 16) = v52;
    v53 = *(_OWORD *)(v45 + 48);
    *(_OWORD *)(v44 + 32) = *(_OWORD *)(v45 + 32);
    *(_OWORD *)(v44 + 48) = v53;
  }
  else
  {
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *(_WORD *)(v44 + 8) = *(_WORD *)(v45 + 8);
    v54 = v46;
    *(_QWORD *)(v44 + 16) = v46;
    v55 = *(void **)(v45 + 24);
    v56 = v55;
    *(_QWORD *)(v44 + 24) = v55;
    *(_BYTE *)(v44 + 32) = *(_BYTE *)(v45 + 32);
    *(_WORD *)(v44 + 33) = *(_WORD *)(v45 + 33);
    v57 = *(_QWORD *)(v45 + 48);
    *(_QWORD *)(v44 + 40) = *(_QWORD *)(v45 + 40);
    *(_QWORD *)(v44 + 48) = v57;
    v58 = *(_QWORD *)(v45 + 64);
    *(_QWORD *)(v44 + 56) = *(_QWORD *)(v45 + 56);
    *(_QWORD *)(v44 + 64) = v58;
    *(_BYTE *)(v44 + 72) = *(_BYTE *)(v45 + 72);
    v59 = *(_QWORD *)(v45 + 88);
    *(_QWORD *)(v44 + 80) = *(_QWORD *)(v45 + 80);
    *(_QWORD *)(v44 + 88) = v59;
    v86 = *(void **)(v45 + 96);
    *(_QWORD *)(v44 + 96) = v86;
    *(_WORD *)(v44 + 104) = *(_WORD *)(v45 + 104);
    v60 = *(_QWORD *)(v45 + 120);
    *(_QWORD *)(v44 + 112) = *(_QWORD *)(v45 + 112);
    *(_QWORD *)(v44 + 120) = v60;
    v61 = *(_QWORD *)(v45 + 136);
    *(_QWORD *)(v44 + 128) = *(_QWORD *)(v45 + 128);
    *(_QWORD *)(v44 + 136) = v61;
    v62 = *(_QWORD *)(v45 + 152);
    *(_QWORD *)(v44 + 144) = *(_QWORD *)(v45 + 144);
    *(_QWORD *)(v44 + 152) = v62;
    v87 = *(_QWORD *)(v45 + 192);
    v63 = *(_QWORD *)(v45 + 168);
    *(_QWORD *)(v44 + 160) = *(_QWORD *)(v45 + 160);
    *(_QWORD *)(v44 + 168) = v63;
    *(_BYTE *)(v44 + 176) = *(_BYTE *)(v45 + 176);
    *(_QWORD *)(v44 + 184) = *(_QWORD *)(v45 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64 = v86;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v87)
    {
      v65 = *(_QWORD *)(v45 + 200);
      *(_QWORD *)(v44 + 192) = v87;
      *(_QWORD *)(v44 + 200) = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v44 + 192) = *(_OWORD *)(v45 + 192);
    }
    v42 = a3;
    *(_OWORD *)(v44 + 208) = *(_OWORD *)(v45 + 208);
    v66 = *(_QWORD *)(v45 + 232);
    *(_QWORD *)(v44 + 224) = *(_QWORD *)(v45 + 224);
    *(_QWORD *)(v44 + 232) = v66;
    *(_QWORD *)(v44 + 240) = *(_QWORD *)(v45 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v67 = v42[9];
  v68 = v42[10];
  v69 = (_OWORD *)(a1 + v67);
  v70 = (_OWORD *)(a2 + v67);
  *v69 = *v70;
  *(_OWORD *)((char *)v69 + 9) = *(_OWORD *)((char *)v70 + 9);
  *(_DWORD *)(a1 + v68) = *(_DWORD *)(a2 + v68);
  v71 = v42[11];
  v72 = v42[12];
  v73 = a1 + v71;
  v74 = a2 + v71;
  *(_DWORD *)v73 = *(_DWORD *)v74;
  *(_BYTE *)(v73 + 4) = *(_BYTE *)(v74 + 4);
  v75 = (void *)(a1 + v72);
  v76 = (const void *)(a2 + v72);
  v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v78 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
  {
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6760);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    v80 = sub_23B1C5A08();
    v81 = *(_QWORD *)(v80 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v81 + 48))(v76, 1, v80))
    {
      memcpy(v75, v76, *(_QWORD *)(v78 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v81 + 16))(v75, v76, v80);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v75, 0, 1, v80);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  v82 = v42[14];
  *(_DWORD *)(a1 + v42[13]) = *(_DWORD *)(a2 + v42[13]);
  v83 = a1 + v82;
  v84 = a2 + v82;
  *(_DWORD *)v83 = *(_DWORD *)v84;
  *(_BYTE *)(v83 + 4) = *(_BYTE *)(v84 + 4);
  return a1;
}

uint64_t sub_23AA94050(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23AA94094(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for VFSItem(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2542E5238);
}

uint64_t sub_23AA940DC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VFSFileTree(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2542E4668);
}

uint64_t sub_23AA94154@<X0>(int a1@<W0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;
  char v6;
  int v7;
  char *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v6 = 0;
  v7 = a1;
  v8 = &v6;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AABCBBC);
  if (!v2)
  {
    if ((v6 & 1) != 0)
    {
      v5 = 1;
    }
    else
    {
      MEMORY[0x24BDAC7A8](result);
      result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AABCBF0);
      v5 = v6;
    }
    *a2 = v5;
  }
  return result;
}

uint64_t sub_23AA9422C@<X0>(_DWORD *a1@<X8>)
{
  return sub_23AA9424C(a1);
}

uint64_t sub_23AA9424C@<X0>(_DWORD *a1@<X8>)
{
  int is_package_item;
  uint64_t result;

  sub_23B1C59E4();
  sub_23B1C59E4();
  sub_23B1C6458();
  swift_bridgeObjectRelease();
  sub_23B1C6458();
  swift_bridgeObjectRelease();
  is_package_item = fpfs_pkg_is_package_item();
  swift_release();
  result = swift_release();
  *a1 = is_package_item;
  return result;
}

id sub_23AA9432C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;
  void *v4;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

  v4 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23AA94384(uint64_t a1)
{
  uint64_t v1;

  return sub_23AA94390(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_23AA94390(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  a3(a1);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0x205443454C4553;
}

uint64_t sub_23AA944E4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AA944F8(a1, *(_BYTE *)(v1 + 48));
}

uint64_t sub_23AA944F8(uint64_t a1, char a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  if (a2 == 70)
  {
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v15 = 0x203D20646E696BLL;
    v16 = 0xE700000000000000;
    v18 = 0;
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_getAssociatedTypeWitness();
    v3 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v5 = swift_checkMetadataState();
    v4(a1, v5, v3);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return 0x203D20646E696BLL;
  }
  else
  {
    v16 = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v18 = 0x203D20646E696BLL;
    v19 = 0xE700000000000000;
    v15 = 0;
    v8 = MEMORY[0x24BEE1768];
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_getAssociatedTypeWitness();
    v9 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v11 = swift_checkMetadataState();
    v10(a1, v11, v9);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v12 = qword_23B1D0030[a2];
    v17 = v8;
    v15 = v12;
    sub_23AA94C90((uint64_t)&v15);
    v14 = v13;
    sub_23AA94C08((uint64_t)&v15);
    if (v14)
    {
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      return v18;
    }
    else
    {
      result = sub_23B1C704C();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23AA94830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a4, a1, a4, a3);
}

uint64_t sub_23AA9485C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AA9487C(a1, a2, a4, a3);
}

uint64_t sub_23AA9487C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;

  v5 = v4;
  v15 = a1;
  v16 = a4;
  v8 = *(_QWORD *)(a3 + 40);
  v9 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v15 - v12;
  (*(void (**)(uint64_t))(v5 + *(int *)(a3 + 52)))(a2);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v8 + 24))(v15, v13, v16, v9, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
}

uint64_t sub_23AA9497C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t *v4;

  return sub_23AA949A0(a1, *v4, *(_QWORD *)(a3 + 16), a2, *(_QWORD *)(a3 + 24), a4);
}

uint64_t sub_23AA949A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[4];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD v29[6];

  v12 = sub_23B1C6C98();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v24 - v14;
  v24[2] = a5;
  v16 = *(_QWORD *)(a5 + 16);
  v24[3] = a1;
  v29[5] = a3;
  MEMORY[0x23B85EBD0](v29, a1, a2, a3, MEMORY[0x24BEE4AD8] + 8, v16);
  sub_23AA94C48((uint64_t)v29, (uint64_t)&v27);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  v17 = swift_dynamicCast();
  v18 = *(_QWORD *)(a4 - 8);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v17 & 1) != 0)
  {
    v19(v15, 0, 1, a4);
    sub_23AA94C08((uint64_t)v29);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a6, v15, a4);
  }
  else
  {
    v19(v15, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_23AB23A94();
    swift_allocError();
    v22 = v21;
    sub_23AA94C48((uint64_t)v29, v21);
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_23B1C6EFC();
    v25 = v27;
    v26 = v28;
    sub_23B1C64F4();
    sub_23B1C7568();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AA94C48((uint64_t)v29, (uint64_t)&v27);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C7340();
    v23 = v26;
    *(_QWORD *)(v22 + 32) = v25;
    *(_QWORD *)(v22 + 40) = v23;
    *(_BYTE *)(v22 + 48) = 4;
    swift_willThrow();
    return sub_23AA94C08((uint64_t)v29);
  }
}

uint64_t sub_23AA94C08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AA94C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA94C90(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];

  v2 = v1;
  v4 = sub_23B1C5BDC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  sub_23AA94C48(a1, (uint64_t)&v29);
  if (!v30)
  {
    sub_23AA94C08((uint64_t)&v29);
    v13 = objc_msgSend(v2, sel_bindObjectParameter_, 0);
    v12 = sub_23B1C63E0();

    return v12;
  }
  sub_23AAA159C(&v29, v31);
  sub_23AAA15AC((uint64_t)v31, (uint64_t)&v29);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    sub_23B1C5B94();
    v11 = objc_msgSend(v2, sel_bindDoubleParameter_);
    v12 = sub_23B1C63E0();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
LABEL_28:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    return v12;
  }
  if (swift_dynamicCast())
  {
    v14 = objc_msgSend(v2, sel_bindDoubleParameter_, *(double *)&v27);
LABEL_27:
    v15 = v14;
    v12 = sub_23B1C63E0();

    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    v14 = objc_msgSend(v2, sel_bindBooleanParameter_, v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    v14 = objc_msgSend(v2, sel_bindCharParameter_, (char)v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    v14 = objc_msgSend(v2, sel_bindUnsignedCharParameter_, v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    v14 = objc_msgSend(v2, sel_bindShortParameter_, (__int16)v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    v14 = objc_msgSend(v2, sel_bindUnsignedShortParameter_, (unsigned __int16)v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    v14 = objc_msgSend(v2, sel_bindIntegerParameter_, v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    v14 = objc_msgSend(v2, sel_bindUnsignedIntegerParameter_, v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
LABEL_22:
    v14 = objc_msgSend(v2, sel_bindLongParameter_, v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
    goto LABEL_26;
  if (swift_dynamicCast())
    goto LABEL_22;
  if (swift_dynamicCast())
  {
LABEL_26:
    v14 = objc_msgSend(v2, sel_bindUnsignedLongParameter_, v27);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    v17 = (uint64_t)v27;
    v18 = v28;
    v19 = (void *)sub_23B1C5AA4();
    v20 = objc_msgSend(v2, sel_bindObjectParameter_, v19);

    v12 = sub_23B1C63E0();
    sub_23AAAE53C(v17, v18);

    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    v21 = (uint64_t)v27;
    v22 = v28;
    sub_23AAAE668((uint64_t)v27, v28);
    v23 = (void *)sub_23B1C5AA4();
    sub_23AAAE53C(v21, v22);
    v24 = objc_msgSend(v2, sel_bindObjectParameter_, v23);

    v12 = sub_23B1C63E0();
    sub_23AAAE53C(v21, v22);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    type metadata accessor for NSFileProviderItemIdentifier(0);
    if (!swift_dynamicCast())
    {
      if (!swift_dynamicCast())
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
        return 0;
      }
      v25 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend(v2, sel_bindStringParameter_, v25);

      v12 = sub_23B1C63E0();
      goto LABEL_28;
    }

  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AA95374(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  id v3;
  uint64_t v4;

  v2 = *(_QWORD *)v1;
  if (!*(_BYTE *)(v1 + 8))
    goto LABEL_5;
  if (*(_BYTE *)(v1 + 8) != 1)
  {
    v2 = (unint64_t)(v2 != 0) << 63;
    goto LABEL_7;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    v2 = -(uint64_t)v2;
  }
LABEL_7:
  v3 = objc_msgSend(a1, sel_bindLongParameter_, v2);
  v4 = sub_23B1C63E0();

  return v4;
}

uint64_t sub_23AA953F8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23AA95418(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_23B1C6428();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C63E0();
  sub_23B1C641C();
  v6 = sub_23B1C63EC();
  v8 = v7;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v10 = (void *)sub_23B1C5AA4();
    sub_23AAA3E18(v6, v8);
    v11 = objc_msgSend(a1, sel_bindObjectParameter_, v10);

    v12 = sub_23B1C63E0();
    return v12;
  }
  return result;
}

uint64_t sub_23AA95544(void *a1)
{
  return sub_23AA95418(a1);
}

uint64_t sub_23AA9554C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  return sub_23AA955C8(a1);
}

uint64_t sub_23AA955C8(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23AA956CC(uint64_t a1)
{
  return sub_23AA95890(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_23AA956D8);
}

uint64_t sub_23AA956D8(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23AA95890(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 48), v2 + ((v4 + 56) & ~v4));
}

uint64_t sub_23AA958F8(uint64_t a1, int a2, uint64_t a3, void (*a4)(uint64_t, _BYTE *), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  id *v32;
  char isEscapingClosureAtFileLocation;
  unint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  void (*v50)(uint64_t, _BYTE *);
  uint64_t v51;
  uint64_t v52;
  id v53[106];
  _BYTE v54[848];
  uint64_t v55;

  v51 = a5;
  v50 = a4;
  v46 = a3;
  v47 = a1;
  v49 = a2;
  v55 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C5DC8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v43 - v16;
  v18 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v18);
  v48 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v20 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    v21 = v20;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
  }
  v22 = v48;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v48, v11, v8);
  v44 = *(int *)(v18 + 20);
  *(_QWORD *)&v22[v44] = v20;
  v23 = &v22[*(int *)(v18 + 24)];
  *(_QWORD *)v23 = "SQLDB: Scan decorated";
  *((_QWORD *)v23 + 1) = 21;
  v45 = (uint64_t)v23;
  v23[16] = 2;
  v24 = v20;
  v25 = (uint64_t)v22;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542E67B8);
  if (v46)
    v26 = *(_QWORD *)(v46 + 16);
  else
    v26 = 0;
  v27 = *(void **)(v52 + 24);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v47;
  *(_BYTE *)(v28 + 24) = v49;
  *(_QWORD *)(v28 + 32) = 200;
  *(_QWORD *)(v28 + 40) = v26;
  v46 = v26;
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = sub_23AAB8268;
  v29[3] = v28;
  v53[4] = sub_23AA956C8;
  v53[5] = v29;
  v53[0] = (id)MEMORY[0x24BDAC760];
  v53[1] = (id)1107296256;
  v53[2] = sub_23AA9432C;
  v53[3] = &block_descriptor_1413;
  v30 = _Block_copy(v53);
  swift_retain();
  swift_release();
  v53[0] = 0;
  v31 = objc_msgSend(v27, sel_fetchSwift_error_, v30, v53);
  _Block_release(v30);
  v32 = (id *)v53[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (!v31)
    goto LABEL_22;
  v34 = *(_QWORD *)(sub_23AAAF608() + 16);
  swift_bridgeObjectRelease();
  if (v34 >> 31)
    goto LABEL_34;
  v35 = v34 + 8;
  if (__OFADD__((_DWORD)v34, 8))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v47 = v28;
  v36 = *(_QWORD *)(sub_23AAAE8F4() + 16);
  swift_bridgeObjectRelease();
  if (v36 >> 31)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v49 = v35 + v36;
  if (__OFADD__(v35, (_DWORD)v36))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (!objc_msgSend(v31, sel_next))
  {

    goto LABEL_24;
  }
  v32 = &v53[64];
  v37 = 1;
  v38 = (void *)MEMORY[0x23B8601A8]();
  v25 = (uint64_t)v43;
  do
  {
    sub_23AAAD7A0(v25, 0, v34, v49, v31, (uint64_t)v53);
    if (v5)
    {
      v40 = v45;
      objc_autoreleasePoolPop(v38);

      v25 = (uint64_t)v48;
      goto LABEL_27;
    }
    memcpy(v54, v53, sizeof(v54));
    v50(v25, v54);
    sub_23AA8A05C(v25, (uint64_t *)&unk_2542E6B00);
    sub_23AB3C920((uint64_t)v53, (voidsub_23AAAEC3C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AAA5BA4);
    objc_autoreleasePoolPop(v38);
    if (!objc_msgSend(v31, sel_next))
    {

      if (v37 == 200)
      {
        v42 = v46 + 200;
        v25 = (uint64_t)v48;
        if (!__OFADD__(v46, 200))
        {
          type metadata accessor for PaginatedContinuation();
          v40 = swift_allocObject();
          *(_QWORD *)(v40 + 16) = v42;
          sub_23B1C6BD8();
          sub_23B1C5DA4();
          goto LABEL_25;
        }
LABEL_38:
        __break(1u);
      }
      v25 = (uint64_t)v48;
LABEL_24:
      sub_23B1C6BD8();
      sub_23B1C5DA4();
      v40 = 0;
LABEL_25:
      sub_23AA937BC(v25, type metadata accessor for Signpost);
      swift_release();
      return v40;
    }
    v38 = (void *)MEMORY[0x23B8601A8]();
  }
  while (!__OFADD__(v37++, 1));
  __break(1u);
LABEL_22:
  sub_23B1C587C();

  swift_willThrow();
  v40 = v45;
LABEL_27:
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  sub_23AA937BC(v25, type metadata accessor for Signpost);
  swift_release();
  return v40;
}

void sub_23AA960D4(uint64_t a1, const void *a2)
{
  uint64_t v2;

  sub_23AA960F4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD **)(v2 + 48));
}

void sub_23AA960F4(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  char v20;
  id v21;
  char v22;
  int *v23;
  int *v24;
  void *v25;
  void *v26;
  id v27;
  int *v28;
  _QWORD v30[106];
  _BYTE v31[496];
  _BYTE v32[848];
  _BYTE v33[240];
  id v34;
  _BYTE __dst[848];
  uint64_t v36;

  v36 = a6;
  memcpy(__dst, a2, sizeof(__dst));
  v12 = sub_23AAF79A8(MEMORY[0x24BEE4AF8]);
  v13 = *(void **)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_fpItemID);
  if (v13)
  {
    v14 = a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID;
    v15 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID);
    v16 = *(_BYTE *)(v14 + 8);
    v17 = v13;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30[0] = v12;
    sub_23AA9710C((uint64_t)v17, v15, v16, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  sub_23AA724E8((uint64_t)a2, (uint64_t)v31, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v31, (uint64_t)v33, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v33) != 1 && v34)
  {
    v19 = *(_QWORD *)a1;
    v20 = *(_BYTE *)(a1 + 8);
    v21 = v34;
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v30[0] = v12;
    sub_23AA9710C((uint64_t)v21, v19, v20, v22);

    swift_bridgeObjectRelease();
  }
  v23 = (int *)sub_23AA963A8(v12);
  swift_bridgeObjectRelease();
  v24 = sub_23AA96724((_QWORD *)a1, 0, 1, v23);
  swift_bridgeObjectRelease();
  v25 = (void *)MEMORY[0x23B8615C4](a5 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend(v25, sel_indexer);

    if (v27)
    {
      objc_msgSend(v27, sel_needsAuthentication);

    }
  }
  memcpy(v30, __dst, sizeof(v30));
  nullsub_1(v30);
  sub_23AA724E8((uint64_t)v30, (uint64_t)v32, (uint64_t *)&unk_2542E1498);
  sub_23AA9BF04((uint64_t)v24);
  if (v7)
  {

  }
  else
  {
    v28 = v24;
    MEMORY[0x23B85F008]();
    if (*(_QWORD *)((*a7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23B1C6740();
    sub_23B1C6788();
    sub_23B1C671C();

  }
}

uint64_t sub_23AA963A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2090);
    v2 = sub_23B1C70AC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v30 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v13 >= v29)
      goto LABEL_41;
    v14 = *(_QWORD *)(v30 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v29)
        goto LABEL_41;
      v14 = *(_QWORD *)(v30 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v29)
          goto LABEL_41;
        v14 = *(_QWORD *)(v30 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v29)
            goto LABEL_41;
          v14 = *(_QWORD *)(v30 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(_QWORD *)(a1 + 48) + 16 * v12;
    v18 = *(_QWORD *)v17;
    v19 = *(unsigned __int8 *)(v17 + 8);
    v20 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    type metadata accessor for NSFileProviderItemIdentifier(0);
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7550);
    swift_dynamicCast();
    sub_23B1C74A8();
    if (v19)
    {
      sub_23B1C74B4();
      if (v19 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
    result = sub_23B1C74E4();
    v22 = -1 << *(_BYTE *)(v2 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v6 + 8 * (v23 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v6 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v6 + 8 * v24);
      }
      while (v28 == -1);
      v9 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 16 * v9;
    *(_QWORD *)v10 = v18;
    *(_BYTE *)(v10 + 8) = v19;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v9) = v31;
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v29)
  {
LABEL_41:
    swift_release();
    sub_23ACF19B8();
    return v2;
  }
  v14 = *(_QWORD *)(v30 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v29)
      goto LABEL_41;
    v14 = *(_QWORD *)(v30 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_43:
  __break(1u);
  return result;
}

int *sub_23AA96724(_QWORD *a1, uint64_t a2, char a3, int *a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  void *Strong;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a2;
  v8 = sub_23B1C5E4C();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23B1C60EC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v4[2] + 64);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  LOBYTE(v13) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
    goto LABEL_11;
  }
  v56 = type metadata accessor for FPFileTree();
  swift_dynamicCastClassUnconditional();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  swift_bridgeObjectRetain();
  swift_retain();
  a4 = sub_23ADAE8FC((uint64_t)a1, Strong, 1, (uint64_t)a4, (uint64_t)v4);

  swift_release();
  objc_msgSend(a4, sel_setFileID_, a1[4], v53, v54);
  v17 = a1[16];
  v16 = a1[17];
  swift_bridgeObjectRetain();
  v18 = sub_23AAAE580(v17, v16);
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    if (v18 == 46 && v20 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
        goto LABEL_8;
    }
    objc_msgSend(a4, sel_setFileSystemFlags_, (unint64_t)objc_msgSend(a4, sel_fileSystemFlags) | 8);
  }
LABEL_8:
  if ((a3 & 1) == 0)
    sub_23AA859B8(a4, v55 | 1);
  v22 = objc_msgSend(a4, sel_itemID);
  v4 = objc_msgSend(v22, sel_identifier);

  if (qword_2542E1FE0 != -1)
    goto LABEL_35;
LABEL_11:
  v23 = sub_23B1C63E0();
  v25 = v24;
  if (v23 == sub_23B1C63E0() && v25 == v26)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v28 = sub_23B1C7388();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
      return a4;
  }
  swift_dynamicCastClassUnconditional();
  v29 = (void *)swift_unknownObjectUnownedLoadStrong();
  v30 = objc_msgSend(v29, sel_nsDomain);

  v31 = objc_msgSend(v30, sel_displayName);
  v32 = sub_23B1C63E0();
  v34 = v33;

  swift_bridgeObjectRelease();
  if ((v34 & 0x2000000000000000) != 0)
    v35 = HIBYTE(v34) & 0xF;
  else
    v35 = v32 & 0xFFFFFFFFFFFFLL;
  swift_dynamicCastClassUnconditional();
  v36 = (void *)swift_unknownObjectUnownedLoadStrong();
  v37 = v36;
  if (v35)
  {
    v38 = objc_msgSend(v36, sel_nsDomain);

    v39 = objc_msgSend(v38, sel_displayName);
    if (!v39)
    {
      sub_23B1C63E0();
      v39 = (id)sub_23B1C63BC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(a4, sel_setFp_displayName_, v39, v53, v54, v55);

    swift_dynamicCastClassUnconditional();
    v40 = (void *)swift_unknownObjectUnownedLoadStrong();
    v41 = objc_msgSend(v40, sel_nsDomain);

    v42 = objc_msgSend(v41, sel_displayName);
    if (!v42)
    {
      sub_23B1C63E0();
      v42 = (id)sub_23B1C63BC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(a4, sel_setFilename_, v42);

  }
  else
  {
    v44 = objc_msgSend(v36, sel_provider);

    if (v44)
    {
      v45 = objc_msgSend(v44, sel_descriptor);

      v46 = objc_msgSend(v45, sel_localizedName);
      v47 = sub_23B1C63E0();
      v49 = v48;

      v50 = HIBYTE(v49) & 0xF;
      if ((v49 & 0x2000000000000000) == 0)
        v50 = v47 & 0xFFFFFFFFFFFFLL;
      if (v50)
      {
        v51 = (void *)sub_23B1C63BC();
        objc_msgSend(a4, sel_setFp_displayName_, v51);

        v52 = (void *)sub_23B1C63BC();
        swift_bridgeObjectRelease();
        objc_msgSend(a4, sel_setFilename_, v52);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  return a4;
}

id sub_23AA96E5C(uint64_t a1, char a2, char a3)
{
  id *v4;
  uint64_t v6;

  if (a2 == 2 && a1 == 0)
  {
    if ((a3 & 1) != 0)
    {
      v4 = (id *)MEMORY[0x24BDC8228];
      return *v4;
    }
  }
  else if (a2 == 2 && a1 == 1 && (a3 & 1) != 0)
  {
    v4 = (id *)MEMORY[0x24BDC8230];
    return *v4;
  }
  sub_23AA96F18(a1, a2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v6 = sub_23B1C63BC();
  swift_bridgeObjectRelease();
  return (id)v6;
}

uint64_t sub_23AA96F18(uint64_t a1, char a2)
{
  uint64_t v3;

  if (!a2)
  {
    v3 = 0x284449636F64;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v3 = 0x284449656C6966;
LABEL_5:
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v3;
  }
  if (a1)
    return 0x6873617274;
  else
    return 1953460082;
}

void *sub_23AA96FFC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void **v10;
  void *v11;
  id v12;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void (*v17)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v18;
  char v19;
  uint64_t v20;

  if (a2 == 2 && a1 == 0)
  {
    v10 = (void **)MEMORY[0x24BDC8228];
    goto LABEL_9;
  }
  if (a2 == 2 && a1 == 1)
  {
    v10 = (void **)MEMORY[0x24BDC8230];
LABEL_9:
    v11 = *v10;
LABEL_10:
    v12 = v11;
    return v11;
  }
  if (*(_QWORD *)(a3 + 16))
  {
    v14 = sub_23AA97254(a1, a2);
    if ((v15 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v14);
      goto LABEL_10;
    }
  }
  v16 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  v18 = a1;
  v19 = a2;
  v17 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(*(_QWORD *)v16 + 160);
  swift_retain();
  v17(&v20, &v18);
  if (v4)
  {

    swift_release();
    return 0;
  }
  else
  {
    swift_release();
    return (void *)v20;
  }
}

void sub_23AA9710C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23AA97254(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23B1869E8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = v18[6] + 16 * v12;
    *(_QWORD *)v22 = a2;
    *(_BYTE *)(v22 + 8) = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_23AA973D0(v15, a4 & 1);
  v20 = sub_23AA97254(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23B1C7418();
  __break(1u);
}

unint64_t sub_23AA97254(uint64_t a1, char a2)
{
  uint64_t v4;

  sub_23B1C74A8();
  if (a2)
  {
    sub_23B1C74B4();
    if (a2 == 1)
      sub_23B1C74D8();
  }
  else
  {
    sub_23B1C74B4();
    sub_23B1C74CC();
  }
  v4 = sub_23B1C74E4();
  return sub_23AA97300(a1, a2, v4);
}

unint64_t sub_23AA97300(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  BOOL v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    v8 = a2 == 2;
    v9 = a1 == 1 && a2 == 2;
    if (a1)
      v8 = 0;
    do
    {
      v10 = *(_QWORD *)(v3 + 48) + 16 * result;
      v11 = *(_QWORD *)v10;
      v12 = *(unsigned __int8 *)(v10 + 8);
      if (v12)
      {
        if (v12 == 1)
        {
          if (a2 == 1 && v11 == a1)
            return result;
        }
        else if (v11)
        {
          if (v9)
            return result;
        }
        else if (v8)
        {
          return result;
        }
      }
      else if (!a2 && (_DWORD)v11 == (_DWORD)a1)
      {
        return result;
      }
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_23AA973D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2080);
  v35 = a2;
  result = sub_23B1C70A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v33)
          goto LABEL_37;
        v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v33)
            goto LABEL_37;
          v18 = v34[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_37:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_44;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_46;
                if (v8 >= v33)
                  goto LABEL_37;
                v18 = v34[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(v5 + 48) + 16 * v16;
      v21 = *(_QWORD *)v20;
      v22 = *(unsigned __int8 *)(v20 + 8);
      v23 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v16);
      if ((v35 & 1) == 0)
        v24 = v23;
      sub_23B1C74A8();
      if (v22)
      {
        sub_23B1C74B4();
        if (v22 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v7 + 48) + 16 * v13;
      *(_QWORD *)v14 = v21;
      *(_BYTE *)(v14 + 8) = v22;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v13) = v23;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_44:
  *v3 = v7;
  return result;
}

id sub_23AA976F8(void *a1, void *a2, id *a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  __int16 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  id v79;
  int *v80;
  _BOOL8 v81;
  int v82;
  uint64_t v83;
  void *v84;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  char *v90;
  id *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  id v100;
  id v101;

  v88 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v9);
  v92 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v11);
  v90 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C5D8C();
  v93 = *(_QWORD *)(v13 - 8);
  v94 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23AA98310((uint64_t)a3, a5);
  v18 = v17;
  v87 = v9;
  v19 = (char *)a3 + *(int *)(v9 + 40);
  swift_bridgeObjectRetain();
  v95 = v15;
  sub_23AA985B8(v16, v18, (uint64_t)v15);
  swift_bridgeObjectRelease();
  v20 = qword_2542E1FE0;
  v21 = *a3;
  if (v20 != -1)
    swift_once();
  v22 = sub_23B1C63E0();
  v24 = v23;
  v25 = sub_23B1C63E0();
  v91 = a3;
  v89 = a4;
  if (v22 == v25 && v24 == v26)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v27 = sub_23B1C7388();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
LABEL_15:
      v28 = v19;
      goto LABEL_16;
    }
  }
  if (qword_2542DE278 != -1)
    swift_once();
  if ((v16 != qword_2542EDC68 || v18 != unk_2542EDC70) && (sub_23B1C7388() & 1) == 0)
    goto LABEL_15;
  swift_bridgeObjectRelease();
  if (qword_2542E5360 != -1)
    swift_once();
  v28 = v19;
  swift_bridgeObjectRetain();
LABEL_16:
  v29 = objc_msgSend(a2, sel_providerDomainID);
  v30 = a2;
  v31 = objc_allocWithZone(MEMORY[0x24BDC82D8]);
  v32 = v21;
  v33 = v88;
  v34 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v35 = (void *)sub_23B1C5D08();
  v36 = objc_msgSend(v31, sel_initWithProviderDomainID_itemIdentifier_parentItemIdentifier_filename_contentType_, v29, v33, v32, v34, v35);

  v37 = objc_msgSend(v30, sel_nsDomain);
  v38 = objc_msgSend(v37, sel_spotlightDomainIdentifier);

  if (!v38)
  {
    sub_23B1C63E0();
    v38 = (id)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setSpotlightDomainIdentifier_, v38);

  v39 = qword_2542E1FE8;
  v40 = v32;
  v41 = v28;
  if (v39 != -1)
    swift_once();
  v42 = sub_23B1C63E0();
  v44 = v43;
  v45 = sub_23B1C63E0();
  v47 = v89;
  if (v42 == v45 && v44 == v46)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v48 = sub_23B1C7388();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
      goto LABEL_29;
  }
  v49 = sub_23B1C63E0();
  v51 = v50;
  if (v49 == sub_23B1C63E0() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v53 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v53 & 1) == 0)
      objc_msgSend(v36, sel_setTrashed_, 1);
  }
LABEL_29:
  v54 = type metadata accessor for ItemMetadata();
  v55 = (uint64_t)v91;
  if (*(_QWORD *)&v41[*(int *)(v54 + 56) + 8])
  {
    v56 = v91[2];
    v100 = v91[1];
    v101 = v56;
    v98 = 47;
    v99 = 0xE100000000000000;
    v96 = 58;
    v97 = 0xE100000000000000;
    sub_23AAA420C();
    sub_23B1C6CF8();
    v57 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setFileSystemFilename_, v57);

  }
  v58 = (uint64_t)v92;
  v59 = (uint64_t)v90;
  if ((v47 & 0x400000000000) != 0)
  {
    v60 = type metadata accessor for ItemMetadata();
    LODWORD(v61) = 0;
    v62 = 0;
    v63 = (uint64_t *)&v41[*(int *)(v60 + 136)];
    if ((v63[1] & 1) == 0)
    {
      v61 = *v63;
      v62 = *v63 & 0xFFFFFFFF00000000;
    }
    objc_msgSend(v36, sel_setTypeAndCreator_, v62 | v61);
    if ((v47 & 2) != 0)
    {
      if ((v47 & 1) == 0)
      {
LABEL_54:
        if ((v47 & 0x20) != 0)
          goto LABEL_62;
        goto LABEL_55;
      }
    }
    else if ((v47 & 1) == 0)
    {
      if ((v47 & 0x20) == 0)
      {
        if ((v47 & 0x40) == 0)
        {
          if ((v47 & 0x80) == 0)
          {
            if ((v47 & 0x400) == 0)
            {
              if ((v47 & 0x800) == 0)
              {
                if ((v47 & 0x3004) != 0)
                  goto LABEL_75;
                if ((v47 & 0x100) != 0)
                  goto LABEL_100;
                goto LABEL_128;
              }
              goto LABEL_73;
            }
            goto LABEL_72;
          }
          goto LABEL_69;
        }
        goto LABEL_65;
      }
      goto LABEL_62;
    }
LABEL_61:
    if ((v47 & 0x20) != 0)
    {
LABEL_62:
      v64 = type metadata accessor for ItemMetadata();
      sub_23AA8EFC8((uint64_t)&v41[*(int *)(v64 + 116)], v59, (uint64_t *)&unk_2542E4310);
      v65 = sub_23B1C5BDC();
      v66 = *(_QWORD *)(v65 - 8);
      v67 = 0;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v59, 1, v65) != 1)
      {
        v67 = (void *)sub_23B1C5B64();
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v59, v65);
      }
      objc_msgSend(v36, sel_setLastUsedDate_, v67);

      if ((v47 & 0x40) != 0)
        goto LABEL_65;
LABEL_56:
      if ((v47 & 0x80) != 0)
        goto LABEL_69;
LABEL_57:
      if ((v47 & 0x400) != 0)
        goto LABEL_72;
      goto LABEL_58;
    }
LABEL_55:
    if ((v47 & 0x40) != 0)
      goto LABEL_65;
    goto LABEL_56;
  }
  if ((v47 & 2) != 0)
  {
    if ((v47 & 1) == 0)
      goto LABEL_54;
    goto LABEL_61;
  }
  if ((v47 & 1) != 0)
    goto LABEL_61;
  if ((v47 & 0x20) != 0)
    goto LABEL_62;
  if ((v47 & 0x40) == 0)
  {
    if ((v47 & 0x80) == 0)
    {
      if ((v47 & 0x400) == 0)
      {
        if ((v47 & 0x800) == 0)
        {
          if ((v47 & 0x3004) != 0)
            goto LABEL_75;
          if ((v47 & 0x100) != 0)
            goto LABEL_100;
LABEL_128:
          if ((v47 & 8) != 0)
            goto LABEL_105;
          goto LABEL_103;
        }
        goto LABEL_73;
      }
LABEL_72:
      type metadata accessor for ItemMetadata();
      v71 = (void *)sub_23B1C5B64();
      objc_msgSend(v36, sel_setCreationDate_, v71);

      if ((v47 & 0x800) == 0)
        goto LABEL_74;
      goto LABEL_73;
    }
    goto LABEL_69;
  }
LABEL_65:
  v68 = *(_QWORD *)&v41[*(int *)(type metadata accessor for ItemMetadata() + 120)];
  if (v68)
  {
    sub_23AA9914C(v68);
    sub_23AA9F52C(0, qword_2569E5780);
    v69 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v69 = 0;
  }
  objc_msgSend(v36, sel_setTags_, v69);

  if ((v47 & 0x80) == 0)
    goto LABEL_57;
LABEL_69:
  v70 = 0;
  if ((v41[*(int *)(type metadata accessor for ItemMetadata() + 124) + 8] & 1) == 0)
    v70 = (void *)sub_23B1C7514();
  objc_msgSend(v36, sel_setFavoriteRank_, v70);

  if ((v47 & 0x400) != 0)
    goto LABEL_72;
LABEL_58:
  if ((v47 & 0x800) != 0)
  {
LABEL_73:
    type metadata accessor for ItemMetadata();
    v72 = (void *)sub_23B1C5B64();
    objc_msgSend(v36, sel_setContentModificationDate_, v72);

  }
LABEL_74:
  if ((v47 & 0x3004) == 0)
    goto LABEL_97;
LABEL_75:
  v73 = *((_WORD *)v41 + 5);
  if ((v73 & 0x100) != 0)
  {
    if ((v73 & 0x80) == 0)
    {
      if ((v73 & 0x40) == 0)
      {
        v76 = type metadata accessor for ItemMetadata();
        if ((v41[*(int *)(v76 + 40)] & 1) == 0)
        {
          v75 = 2;
          if ((v41[*(int *)(v76 + 52)] & 1) == 0)
            goto LABEL_96;
          goto LABEL_95;
        }
        v75 = 2;
        goto LABEL_93;
      }
      v75 = 2;
      goto LABEL_91;
    }
    v75 = 6;
    if ((v73 & 0x40) == 0)
    {
LABEL_92:
      if (v41[*(int *)(type metadata accessor for ItemMetadata() + 40)] != 1)
        goto LABEL_94;
      goto LABEL_93;
    }
LABEL_91:
    v75 |= 1uLL;
    goto LABEL_92;
  }
  if ((v73 & 0x80) != 0)
  {
    v75 = 4;
    if ((v73 & 0x40) == 0)
      goto LABEL_92;
    goto LABEL_91;
  }
  if ((v73 & 0x40) != 0)
  {
    v75 = 0;
    goto LABEL_91;
  }
  v74 = type metadata accessor for ItemMetadata();
  v75 = 0;
  if ((v41[*(int *)(v74 + 40)] & 1) == 0)
  {
    v75 = 0;
    if ((v41[*(int *)(v74 + 52)] & 1) == 0)
      goto LABEL_96;
    goto LABEL_95;
  }
LABEL_93:
  v75 |= 8uLL;
LABEL_94:
  if (v41[*(int *)(type metadata accessor for ItemMetadata() + 52)] == 1)
LABEL_95:
    v75 |= 0x10uLL;
LABEL_96:
  objc_msgSend(v36, sel_setFileSystemFlags_, v75);
LABEL_97:
  if ((v47 & 0x100) == 0)
  {
    if ((v47 & 8) != 0)
      goto LABEL_105;
LABEL_103:
    if ((v47 & 0x4000) == 0)
      goto LABEL_108;
    goto LABEL_106;
  }
LABEL_100:
  if (!*(_QWORD *)&v41[*(int *)(type metadata accessor for ItemMetadata() + 128)])
    sub_23AA98FE0(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  v77 = (void *)sub_23B1C61F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_setExtendedAttributes_, v77);

  if ((v47 & 8) == 0)
    goto LABEL_103;
LABEL_105:
  type metadata accessor for ItemMetadata();
  v78 = (void *)sub_23B1C7478();
  objc_msgSend(v36, sel_setDocumentSize_, v78);

  if ((v47 & 0x4000) == 0)
    goto LABEL_108;
LABEL_106:
  if ((v41[8] & 1) == 0)
  {
    v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, *((unsigned int *)v41 + 1));
    objc_msgSend(v36, sel_setChildItemCount_, v79);

  }
LABEL_108:
  v80 = (int *)type metadata accessor for ItemMetadata();
  v81 = (v41[v80[20]] & 1) == 0;
  objc_msgSend(v36, sel_setDownloaded_, v81);
  objc_msgSend(v36, sel_setMostRecentVersionDownloaded_, v81);
  objc_msgSend(v36, sel_setIgnoreRoot_, v41[v80[16]]);
  v82 = v41[v80[17]];
  if (v82 == 2)
  {
    sub_23AA8EFC8(v55, v58, (uint64_t *)&unk_2542E1E00);
LABEL_111:
    v83 = *(unsigned __int8 *)(v58 + *(int *)(v87 + 40) + v80[16]);
    goto LABEL_113;
  }
  sub_23AA8EFC8(v55, v58, (uint64_t *)&unk_2542E1E00);
  if ((v82 & 1) == 0)
    goto LABEL_111;
  v83 = 1;
LABEL_113:
  sub_23AA8A05C(v58, (uint64_t *)&unk_2542E1E00);
  objc_msgSend(v36, sel_setExcludedFromSync_, v83);
  objc_msgSend(v36, sel_setUbiquitous_, objc_msgSend(v36, sel_isExcludedFromSync) ^ 1);
  if (*(_QWORD *)&v41[v80[37] + 8])
    v84 = (void *)sub_23B1C63BC();
  else
    v84 = 0;
  objc_msgSend(v36, sel_setCollaborationIdentifier_, v84);

  (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v94);
  return v36;
}

uint64_t sub_23AA98310(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v20 - v9;
  v11 = *(int *)(v8 + 40);
  v12 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ItemMetadata() + 56) + v11);
  v13 = v12[1];
  if (!v13)
  {
    v14 = 0;
    if ((a2 & 1) != 0)
      goto LABEL_5;
LABEL_9:
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_23AA8EFC8(a1, (uint64_t)v7, (uint64_t *)&unk_2542E1E00);
    }
    else
    {
      sub_23AA8EFC8(a1, (uint64_t)v7, (uint64_t *)&unk_2542E1E00);
      v14 = *((_QWORD *)v7 + 1);
      swift_bridgeObjectRetain();
    }
    v10 = v7;
    goto LABEL_15;
  }
  v14 = *v12;
  swift_bridgeObjectRetain_n();
  v15 = sub_23B1C64AC();
  swift_bridgeObjectRelease();
  if (v15 <= 0)
  {
    swift_bridgeObjectRelease();
    v14 = 0;
    v13 = 0;
  }
  if ((a2 & 1) == 0)
    goto LABEL_9;
LABEL_5:
  if (v13)
  {
    v24 = v14;
    v25 = v13;
    v22 = 47;
    v23 = 0xE100000000000000;
    v20 = 58;
    v21 = 0xE100000000000000;
    sub_23AAA420C();
    v14 = sub_23B1C6CF8();
    v17 = v16;
    sub_23AA8EFC8(a1, (uint64_t)v10, (uint64_t *)&unk_2542E1E00);
    if (v17)
      goto LABEL_15;
  }
  else
  {
    sub_23AA8EFC8(a1, (uint64_t)v10, (uint64_t *)&unk_2542E1E00);
  }
  v18 = *((_QWORD *)v10 + 2);
  v24 = *((_QWORD *)v10 + 1);
  v25 = v18;
  v22 = 47;
  v23 = 0xE100000000000000;
  v20 = 58;
  v21 = 0xE100000000000000;
  sub_23AAA420C();
  v14 = sub_23B1C6CF8();
LABEL_15:
  sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E1E00);
  if (sub_23B1C64AC() <= 0)
  {
    swift_bridgeObjectRelease();
    v14 = 0x6E776F6E6B6E7528;
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23AA985B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  uint64_t v41;
  _BYTE *v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  id v48;
  NSObject *v49;
  int v50;
  _DWORD *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  void (*v62)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  unsigned __int8 *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  id v69;
  _BYTE *v70;
  _BYTE *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void (*v78)(_BYTE *, uint64_t);
  void (*v79)(_BYTE *, uint64_t);
  _BYTE *v80;
  unsigned int (*v81)(_BYTE *, uint64_t, uint64_t);
  uint64_t v82;
  _BYTE *v83;
  _BYTE v84[16];
  uint64_t v85;
  int v86;
  NSObject *v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v4 = v3;
  v100 = a1;
  v101 = a2;
  v103 = a3;
  v5 = sub_23B1C5CCC();
  MEMORY[0x24BDAC7A8](v5);
  v92 = &v84[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v99 = sub_23B1C5D8C();
  v102 = *(_QWORD *)(v99 - 8);
  v7 = MEMORY[0x24BDAC7A8](v99);
  v88 = &v84[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v90 = &v84[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v98 = &v84[-v11];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0280);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v97 = &v84[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v96 = &v84[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v91 = &v84[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = &v84[-v20];
  v22 = MEMORY[0x24BDAC7A8](v19);
  v95 = &v84[-v23];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = &v84[-v25];
  MEMORY[0x24BDAC7A8](v24);
  v28 = &v84[-v27];
  v29 = sub_23B1C5E4C();
  v93 = *(_QWORD *)(v29 - 8);
  v94 = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v89 = &v84[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v30);
  v33 = &v84[-v32];
  v34 = type metadata accessor for ItemMetadata();
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = &v84[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = MEMORY[0x24BDAC7A8](v35);
  v40 = &v84[-v39];
  MEMORY[0x24BDAC7A8](v38);
  v42 = &v84[-v41];
  v43 = *v4;
  sub_23AA9BA80((uint64_t)v4, (uint64_t)&v84[-v41]);
  if (v43)
  {
    v44 = v42[*(int *)(v34 + 108)];
    sub_23AA9F854((uint64_t)v42);
    if (v44 != 1)
      __asm { BR              X10 }
  }
  else
  {
    sub_23AA9F854((uint64_t)v42);
  }
  v45 = *(int *)(v34 + 108);
  v46 = v4[v45];
  sub_23AA9BA80((uint64_t)v4, (uint64_t)v40);
  if (v46 == 1)
  {
    v47 = *v40;
    sub_23AA9F854((uint64_t)v40);
    if ((v47 - 3) >= 0xFFFFFFFE)
    {
      v48 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      sub_23AA9BA80((uint64_t)v4, (uint64_t)v37);
      v49 = sub_23B1C5E40();
      v50 = sub_23B1C6AAC();
      if (os_log_type_enabled(v49, (os_log_type_t)v50))
      {
        v86 = v50;
        v51 = (_DWORD *)swift_slowAlloc();
        v85 = swift_slowAlloc();
        v105 = v85;
        *v51 = 136315138;
        v52 = *v37;
        v87 = v49;
        __asm { BR              X10 }
      }
      sub_23AA9F854((uint64_t)v37);

      (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v33, v94);
    }
  }
  else
  {
    sub_23AA9F854((uint64_t)v40);
  }
  v53 = (void *)sub_23B1C63BC();
  v54 = objc_msgSend(v53, sel_pathExtension);

  v55 = sub_23B1C63E0();
  v57 = v56;

  if (v4[v45] == 1)
  {
    sub_23B1C5D50();
    sub_23B1C5CFC();
    v58 = v102;
    v59 = v99;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v102 + 48))(v28, 1, v99) == 1)
    {
      sub_23B1C5D50();
      return sub_23AA8A05C((uint64_t)v28, (uint64_t *)&unk_2542E0280);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v58 + 32))(v103, v28, v59);
    }
  }
  else
  {
    v101 = v55;
    v61 = v102;
    v62 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v102 + 56);
    v63 = v99;
    v62(v26, 1, 1, v99);
    v64 = &v4[*(int *)(v34 + 136)];
    if ((v64[8] & 1) == 0)
    {
      sub_23AB5E78C(*(_DWORD *)v64);
      if (v65)
      {
        v100 = v57;
        sub_23B1C5CC0();
        sub_23B1C5D2C();
        v62(v21, 0, 1, v63);
        v66 = (uint64_t)v95;
        sub_23B1C5D20();
        sub_23AA8A05C((uint64_t)v26, (uint64_t *)&unk_2542E0280);
        sub_23AA99104(v66, (uint64_t)v26);
        v67 = v91;
        sub_23AA8EFC8((uint64_t)v26, (uint64_t)v91, (uint64_t *)&unk_2542E0280);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v61 + 48))(v67, 1, v63) == 1)
        {
          sub_23AA8A05C((uint64_t)v67, (uint64_t *)&unk_2542E0280);
        }
        else
        {
          v68 = v90;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v61 + 32))(v90, v67, v63);
          if ((sub_23B1C5D80() & 1) != 0)
          {
            v69 = (id)fpfs_current_or_default_log();
            v70 = v89;
            sub_23B1C5E58();
            v71 = v88;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v61 + 16))(v88, v68, v63);
            v72 = sub_23B1C5E40();
            v73 = sub_23B1C6A88();
            if (os_log_type_enabled(v72, v73))
            {
              v74 = (uint8_t *)swift_slowAlloc();
              v75 = swift_slowAlloc();
              v105 = v75;
              *(_DWORD *)v74 = 136315138;
              v92 = v74 + 4;
              sub_23AA7E38C(&qword_2569E23F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE6408]);
              v76 = sub_23B1C7304();
              v104 = sub_23AABEC68(v76, v77, &v105);
              v61 = v102;
              sub_23B1C6CBC();
              swift_bridgeObjectRelease();
              v78 = *(void (**)(_BYTE *, uint64_t))(v61 + 8);
              v78(v71, v63);
              _os_log_impl(&dword_23AA66000, v72, v73, "Dynamic type %s was found for item - denying", v74, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B8614BC](v75, -1, -1);
              MEMORY[0x23B8614BC](v74, -1, -1);

              (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v89, v94);
              v78(v90, v63);
            }
            else
            {

              v79 = *(void (**)(_BYTE *, uint64_t))(v61 + 8);
              v79(v71, v63);
              (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v70, v94);
              v79(v68, v63);
            }
            sub_23AA8A05C((uint64_t)v26, (uint64_t *)&unk_2542E0280);
            v62(v26, 1, 1, v63);
          }
          else
          {
            (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v68, v63);
          }
        }
      }
    }
    v80 = v96;
    sub_23AA8EFC8((uint64_t)v26, (uint64_t)v96, (uint64_t *)&unk_2542E0280);
    v81 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v61 + 48);
    if (v81(v80, 1, v63) == 1)
    {
      sub_23AA8A05C((uint64_t)v80, (uint64_t *)&unk_2542E0280);
      sub_23B1C5D2C();
      v82 = (uint64_t)v95;
      sub_23B1C5CFC();
      sub_23AA8A05C((uint64_t)v26, (uint64_t *)&unk_2542E0280);
      sub_23AA99104(v82, (uint64_t)v26);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_23AA8A05C((uint64_t)v80, (uint64_t *)&unk_2542E0280);
    }
    v83 = v97;
    sub_23AA8EFC8((uint64_t)v26, (uint64_t)v97, (uint64_t *)&unk_2542E0280);
    if (v81(v83, 1, v63) == 1)
    {
      sub_23B1C5D2C();
      sub_23AA8A05C((uint64_t)v26, (uint64_t *)&unk_2542E0280);
      return sub_23AA8A05C((uint64_t)v83, (uint64_t *)&unk_2542E0280);
    }
    else
    {
      sub_23AA8A05C((uint64_t)v26, (uint64_t *)&unk_2542E0280);
      return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v61 + 32))(v103, v83, v63);
    }
  }
}

unint64_t sub_23AA98FE0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7F0);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_23AAAE668(v7, v8);
    result = sub_23AAAF4C4(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23AA99104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA9914C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned int v5;
  id v6;
  void *v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23B1C6FBC();
    v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      v5 = *v4;
      v4 += 24;
      v6 = objc_allocWithZone(MEMORY[0x24BDC8340]);
      swift_bridgeObjectRetain();
      v7 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_initWithLabel_color_, v7, v5);

      sub_23B1C6F98();
      sub_23B1C6FC8();
      sub_23B1C6FD4();
      sub_23B1C6FA4();
      --v1;
    }
    while (v1);
    v2 = v9;
    swift_bridgeObjectRelease();
  }
  return v2;
}

void sub_23AA9925C(void *a1)
{
  id v1;

  v1 = a1;
  sub_23AA9928C();
}

uint64_t sub_23AA99274(uint64_t a1)
{
  void *v1;

  return a1;
}

void sub_23AA9928C()
{
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AA992CC(uint64_t a1)
{
  return sub_23AA992E0(a1);
}

uint64_t sub_23AA992E0(uint64_t a1)
{
  _BYTE v3[72];

  sub_23B1C74A8();
  sub_23AA99324((uint64_t)v3, a1);
  return sub_23B1C74E4();
}

uint64_t sub_23AA99324(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v5);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v15, v17, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    sub_23B1C74B4();
    sub_23B1C62D8();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v15, v9);
    sub_23B1C74B4();
    sub_23B1C62D8();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

uint64_t sub_23AA994A8()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8))
  {
    if (*(_BYTE *)(v0 + 8) == 1)
    {
      sub_23B1C74B4();
      return sub_23B1C74D8();
    }
    else
    {
      return sub_23B1C74B4();
    }
  }
  else
  {
    sub_23B1C74B4();
    return sub_23B1C74CC();
  }
}

void sub_23AA99518(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  _QWORD v20[8];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v30 = a2;
  v35 = a1;
  v40 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 576);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 560);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_23B1C6C98();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v20[1] = (char *)v20 - v7;
  v8 = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(v8 - 8);
  v26 = *(_QWORD *)(v34 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v27 = (char *)v20 - v9;
  v33 = sub_23B1C5DC8();
  v25 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v24 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v22 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v32 = (char *)v20 - v14;
  v23 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v23);
  v31 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ItemReconciliationHalf(0, v4, v3, v16);
  v20[7] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v20[6] = (char *)v20 - v17;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedConformanceWitness();
  v36 = v8;
  v37 = AssociatedTypeWitness;
  v20[2] = AssociatedTypeWitness;
  v20[5] = AssociatedConformanceWitness;
  v38 = AssociatedConformanceWitness;
  v39 = v19;
  v20[0] = v19;
  type metadata accessor for ReconciliationID();
}

void sub_23AA997C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 200) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 272) = v1;
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 136) = v3;
  *(_QWORD *)(v5 - 256) = v3;
  *(_QWORD *)(v5 - 264) = v4;
  *(_QWORD *)(v5 - 128) = v4;
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 248) = v2;
  type metadata accessor for ItemReconciliation();
}

void sub_23AA99824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  swift_getTupleTypeMetadata2();
  v3 = sub_23B1C6C98();
  *(_QWORD *)(v2 - 368) = v3;
  *(_QWORD *)(v2 - 376) = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 16);
  v7 = *(_QWORD *)(v2 - 152);
  *(_QWORD *)(v2 - 176) = v0;
  *(_QWORD *)(v2 - 328) = v6;
  v6(v1, v7, v0);
  swift_storeEnumTagMultiPayload();
  sub_23AA9A774();
}

uint64_t sub_23AA99918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 200) + 8))(v2, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0, 1, v6) != 1)
  {
    v18 = *(int *)(v6 + 48);
    v19 = *(_QWORD *)(v4 - 8);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
    v20(v1, v0, v4);
    v21 = *(_QWORD *)(v0 + v18);
    *(_QWORD *)(v1 + v18) = v21;
    v22 = *(int *)(v6 + 48);
    v20(v3, v1, v4);
    *(_QWORD *)(v3 + v22) = v21;
    v23 = *(_QWORD *)(v8 - 344);
    v24 = *(_QWORD *)(v8 - 352);
    v25 = *(_QWORD *)(v8 - 336);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v3 + *(int *)(v4 + 52), v25);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v3, v4);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v8 - 240) + 16))(*(_QWORD *)(v8 - 224), v24, *(_QWORD *)(v8 - 232));
    return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 376) + 8))(v0, *(_QWORD *)(v8 - 368));
  if (qword_2542E6818 != -1)
    swift_once();
  v9 = (void *)qword_2542EDD28;
  v10 = *(_QWORD *)(v8 - 296);
  v11 = *(_QWORD *)(v8 - 192);
  v12 = *(_QWORD *)(v8 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v8 - 144) = 0;
  *(_QWORD *)(v8 - 136) = 0xE000000000000000;
  sub_23B1C7340();
  v13 = *(_QWORD *)(v8 - 136);
  *(_QWORD *)(v8 - 200) = *(_QWORD *)(v8 - 144);
  v14 = *(_QWORD *)(v8 - 320);
  sub_23AA8EFC8(v11, v14, (uint64_t *)&unk_2542E67B8);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v14, 1, v12);
  v16 = *(_QWORD *)(v8 - 304);
  if (v15 == 1)
  {
    v17 = v9;
    sub_23B1C5DB0();
    sub_23AA8A05C(v14, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 32))(*(_QWORD *)(v8 - 304), v14, v12);
  }
  v27 = *(_QWORD *)(v8 - 208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v27, v16, v12);
  v28 = *(_QWORD *)(v8 - 312);
  v29 = *(int *)(v28 + 20);
  *(_QWORD *)(v8 - 320) = v29;
  *(_QWORD *)(v27 + v29) = v9;
  v30 = v27 + *(int *)(v28 + 24);
  *(_QWORD *)v30 = "SQLDB: fetch reconciliation FP id";
  *(_QWORD *)(v30 + 8) = 33;
  *(_BYTE *)(v30 + 16) = 2;
  v31 = v9;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v32 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v32 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v8 - 200);
  *(_QWORD *)(v32 + 40) = v13;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(v10 + 8))(v16, *(_QWORD *)(v8 - 184));
  swift_bridgeObjectRelease();
  sub_23AA8A05C(*(_QWORD *)(v8 - 192), (uint64_t *)&unk_2542E67B8);
  v33 = *(void **)(*(_QWORD *)(v8 - 160) + 24);
  v34 = *(_QWORD *)(v8 - 280);
  v35 = *(_QWORD *)(v8 - 176);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 - 328))(v34, *(_QWORD *)(v8 - 152), v35);
  v36 = *(_QWORD *)(v8 - 168);
  v37 = (*(unsigned __int8 *)(v36 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v38 = (char *)swift_allocObject();
  v39 = *(_QWORD *)(v8 - 256);
  *((_QWORD *)v38 + 2) = *(_QWORD *)(v8 - 272);
  *((_QWORD *)v38 + 3) = v39;
  v40 = *(_QWORD *)(v8 - 248);
  *((_QWORD *)v38 + 4) = *(_QWORD *)(v8 - 264);
  *((_QWORD *)v38 + 5) = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(&v38[v37], v34, v35);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = sub_23AA9554C;
  *(_QWORD *)(v41 + 24) = v38;
  *(_QWORD *)(v8 - 112) = sub_23AA956C8;
  *(_QWORD *)(v8 - 104) = v41;
  *(_QWORD *)(v8 - 144) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v8 - 136) = 1107296256;
  *(_QWORD *)(v8 - 128) = sub_23AA9432C;
  *(_QWORD *)(v8 - 120) = &block_descriptor_1348;
  v42 = _Block_copy((const void *)(v8 - 144));
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 - 144) = 0;
  v43 = objc_msgSend(v33, sel_fetchSwift_error_, v42, v8 - 144);
  _Block_release(v42);
  v44 = *(id *)(v8 - 144);
  LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v34 & 1) != 0)
    __break(1u);
  if (!v43)
  {
    sub_23B1C587C();

    swift_willThrow();
LABEL_14:
    sub_23B1C6BD8();
    v47 = *(_QWORD *)(v8 - 208);
    sub_23B1C5DA4();
    sub_23AA937BC(v47, type metadata accessor for Signpost);
    return swift_release();
  }
  if ((objc_msgSend(v43, sel_next) & 1) != 0)
  {
    v45 = *(_QWORD *)(v8 - 392);
    v46 = *(_QWORD *)(v8 - 216);
    sub_23AA9A9B8(v43, 0, *(_QWORD *)(v8 - 384), *(_QWORD *)(*(_QWORD *)(v8 - 400) + 40), v45);
    if (!v46)
      (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v8 - 240) + 32))(*(_QWORD *)(v8 - 224), v45, *(_QWORD *)(v8 - 232));
    goto LABEL_14;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 - 384) - 8) + 56))(*(_QWORD *)(v8 - 224), 1, 1);

  sub_23B1C6BD8();
  v48 = *(_QWORD *)(v8 - 208);
  sub_23B1C5DA4();
  sub_23AA937BC(v48, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B861318](a1, v6, a5);
}

uint64_t sub_23AA99F38(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v56;

  v56 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = *(_DWORD *)(v56 + 84);
  if (v2)
    v3 = v2 - 1;
  else
    v3 = 0;
  v53 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = *(_DWORD *)(v53 + 84);
  v52 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v52 + 84);
  if (v4 > v5)
    v5 = v4;
  v44 = v5;
  if (v5 <= 0x7FFFFFFE)
    v5 = 2147483646;
  v46 = v5;
  v47 = v4;
  v6 = v5 - 1;
  v50 = v3;
  v48 = v6;
  if (v3 > v6)
    v6 = v3;
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  v51 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v51 + 84);
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v11;
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  if (v10 <= v14 - 1)
    v15 = v14 - 1;
  else
    v15 = v10;
  if (v15 <= 0x7FFFFFFE)
    v15 = 2147483646;
  if (v15 <= v7)
    v16 = v7;
  else
    v16 = v15;
  if (v16 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  if (v2)
    v17 = *(_QWORD *)(v56 + 64);
  else
    v17 = *(_QWORD *)(v56 + 64) + 1;
  v45 = v9;
  if (v9)
    v18 = *(_QWORD *)(v8 + 64);
  else
    v18 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v19 = *(unsigned __int8 *)(v52 + 80);
  v20 = *(_DWORD *)(v53 + 80) & 0xF8 | v19 | 7;
  v42 = *(_QWORD *)(v53 + 64) + 7;
  v43 = ((((*(_QWORD *)(v52 + 64) + ((v19 + 8 + (v42 & 0xFFFFFFFFFFFFFFF8)) & ~v19) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v21 = *(unsigned __int8 *)(v12 + 80);
  v22 = *(_DWORD *)(v51 + 80) & 0xF8 | v21 | 7;
  v23 = v22 | *(_DWORD *)(v8 + 80) & 0xF8;
  v49 = ((((((((v20 + ((((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v20) + v43 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v23
      + 8;
  v24 = *(_QWORD *)(v51 + 64) + 7;
  v25 = (((*(_QWORD *)(v12 + 64) + ((v21 + 8 + (v24 & 0xFFFFFFFFFFFFFFF8)) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = v18 + 7;
  v27 = ((((((((v22 + 9 + (((v26 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v22) + v25 + 50) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v16 < a2)
  {
    if (((((((v27 + (v49 & ~v23) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v28 = 2;
    else
      v28 = a2 - v16 + 1;
    if (v28 >= 0x10000)
      v29 = 4;
    else
      v29 = 2;
    if (v28 < 0x100)
      v29 = 1;
    if (v28 >= 2)
      v30 = v29;
    else
      v30 = 0;
    __asm { BR              X21 }
  }
  if (v7 == v16)
  {
    if (v50 == v7)
    {
      if (v2 >= 2)
      {
        v31 = (*(uint64_t (**)(uint64_t))(v56 + 48))(a1);
        goto LABEL_88;
      }
      return 0;
    }
    v34 = (((((a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v20 + 9) & ~v20;
    if (v48 == v7)
    {
      if (v47 == v46)
      {
        v31 = (*(uint64_t (**)(unint64_t))(v53 + 48))(v34);
        goto LABEL_88;
      }
      v38 = (unint64_t *)((v42 + v34) & 0xFFFFFFFFFFFFFFF8);
      if (v44 <= 0x7FFFFFFE)
      {
        v39 = *v38;
LABEL_81:
        if (v39 >= 0xFFFFFFFF)
          LODWORD(v39) = -1;
        if ((v39 + 1) >= 2)
          v31 = v39;
        else
          v31 = 0;
        goto LABEL_88;
      }
      v31 = (*(uint64_t (**)(unint64_t))(v52 + 48))(((unint64_t)v38 + v19 + 8) & ~v19);
      goto LABEL_88;
    }
    v37 = v34 + v43 + 10;
LABEL_74:
    v40 = *(_QWORD *)(((v37 & 0xFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
    if (v40 >= 0xFFFFFFFF)
      LODWORD(v40) = -1;
    if ((v40 + 1) >= 2)
      return v40;
    else
      return 0;
  }
  v32 = (v49 + a1) & ~v23;
  if (v15 == v16)
  {
    if (v10 == v15)
    {
      if (v45 < 2)
        return 0;
      v31 = (*(uint64_t (**)(unint64_t))(v8 + 48))(v32);
      goto LABEL_88;
    }
    v36 = (v22 + 9 + ((((v26 + v32) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v22;
    if (v14 - 1 == v15)
    {
      if (v11 == v14)
      {
        v31 = (*(uint64_t (**)(unint64_t))(v51 + 48))(v36);
      }
      else
      {
        v41 = (unint64_t *)((v24 + v36) & 0xFFFFFFFFFFFFFFF8);
        if (v13 <= 0x7FFFFFFE)
        {
          v39 = *v41;
          goto LABEL_81;
        }
        v31 = (*(uint64_t (**)(unint64_t))(v12 + 48))(((unint64_t)v41 + v21 + 8) & ~v21);
      }
LABEL_88:
      if (v31 >= 2)
        return v31 - 1;
      else
        return 0;
    }
    v37 = v25 + v36 + 26;
    goto LABEL_74;
  }
  v35 = *(_QWORD *)(((v27 + v32) & 0xFFFFFFFFFFFFF8) + 8);
  if (v35 >= 0xFFFFFFFF)
    LODWORD(v35) = -1;
  return (v35 + 1);
}

void sub_23AA9A5A0()
{
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AA9A5E0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23AA9A604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v2 - 8);
  if (*(_QWORD *)(v5 + 64) > v4)
    v4 = *(_QWORD *)(v5 + 64);
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (v6 < 2)
  {
    if (v6 == 1)
      v3 = *(_QWORD *)(v2 - 8);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    if (v4 <= 3)
      v7 = v4;
    else
      v7 = 4;
    return ((uint64_t (*)(void))((char *)&loc_23AA9A650 + 4 * byte_23B1DCE45[v7]))();
  }
}

void sub_23AA9A6A4()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  sub_23AA9A6D4();
}

void sub_23AA9A6D4()
{
  swift_getObjectType();
  type metadata accessor for ReconciliationID();
}

id sub_23AA9A728(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  objc_super v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v4, v1, a1);
  v6.receiver = v2;
  v6.super_class = v3;
  return objc_msgSendSuper2(&v6, sel_init);
}

void type metadata accessor for ReconciliationID()
{
  JUMPOUT(0x23B861318);
}

void sub_23AA9A774()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationIDObject();
}

void sub_23AA9A848()
{
  sub_23AA9A6A4();
}

void sub_23AA9A854(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = *(id *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 624));
  v4 = objc_msgSend(v3, sel_objectForKey_, a1);

  if (v4)
    type metadata accessor for ItemReconciliation();
  type metadata accessor for ItemReconciliation();
}

void sub_23AA9A93C()
{
  swift_getTupleTypeMetadata2();
  JUMPOUT(0x23AA9A970);
}

void type metadata accessor for ItemReconciliation()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for ReconciliationIDObject()
{
  JUMPOUT(0x23B861318);
}

uint64_t type metadata accessor for ItemReconciliationHalf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ItemReconciliationHalf);
}

uint64_t sub_23AA9A9B8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;

  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v16 - v13;
  if (objc_msgSend(a1, sel_isNullAtIndex_, a2))
  {

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a5, 1, 1, a3);
  }
  else
  {
    result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a2, a3, a4);
    if (!v5)
    {
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v14, 0, 1, a3);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a5, v14, v11);
    }
  }
  return result;
}

void sub_23AA9AADC(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  _DWORD *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  _DWORD *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  int v35;
  int v37;

  v33 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v35 = *(_DWORD *)(v33 + 84);
  if (v35)
    v3 = v35 - 1;
  else
    v3 = 0;
  v4 = *(_DWORD **)(swift_getAssociatedTypeWitness() - 8);
  v5 = v4[21];
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v5 > v7)
    v7 = v5;
  if (v7 <= 0x7FFFFFFE)
    v7 = 2147483646;
  v8 = v7 - 1;
  if (v3 > v8)
    v8 = v3;
  if (v8 <= 0x7FFFFFFE)
    v9 = 2147483646;
  else
    v9 = v8;
  v32 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v32 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_DWORD **)(swift_getAssociatedTypeWitness() - 8);
  v13 = v12[21];
  v37 = 0;
  v14 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (v13 <= *(_DWORD *)(v14 + 84))
    v15 = *(_DWORD *)(v14 + 84);
  else
    v15 = v13;
  if (v15 <= 0x7FFFFFFE)
    v16 = 2147483646;
  else
    v16 = v15;
  if (v11 <= v16 - 1)
    v17 = v16 - 1;
  else
    v17 = v11;
  if (v17 <= 0x7FFFFFFE)
    v18 = 2147483646;
  else
    v18 = v17;
  if (v18 <= v9)
    v19 = v9;
  else
    v19 = v18;
  if (v19 <= 0x7FFFFFFF)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  if (v35)
    v21 = *(_QWORD *)(v33 + 64);
  else
    v21 = *(_QWORD *)(v33 + 64) + 1;
  v22 = *(unsigned __int8 *)(v6 + 80);
  v24 = *(unsigned __int8 *)(v14 + 80);
  v25 = v12[20] & 0xF8 | v24 | 7;
  if (v10)
    v27 = *(_QWORD *)(v32 + 64);
  else
    v27 = *(_QWORD *)(v32 + 64) + 1;
  v23 = v4[20] & 0xF8 | v22 | 7;
  v26 = v25 | *(_DWORD *)(v32 + 80) & 0xF8;
  if (v20 < a3)
  {
    if ((((((((((((((_DWORD)v25 + 9 + (((((_DWORD)v27 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~(_DWORD)v25)
                 + ((((*(_DWORD *)(v14 + 64) + (((_DWORD)v24 + 8 + ((v12[16] + 7) & 0xFFFFFFF8)) & ~(_DWORD)v24) + 7) & 0xFFFFFFF8)
                   + 15) & 0xFFFFFFF8)
                 + 16
                 + 34) & 0xFFFFFFF8)
               + 63) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 8
           + (((((((((((_DWORD)v23 + (((((_DWORD)v21 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9) & ~(_DWORD)v23)
                   + ((((*(_DWORD *)(v6 + 64) + (((_DWORD)v22 + 8 + ((v4[16] + 7) & 0xFFFFFFF8)) & ~(_DWORD)v22) + 7) & 0xFFFFFFF8)
                     + 15) & 0xFFFFFFF8)
                   + 16
                   + 34) & 0xFFFFFFF8)
                 + 63) & 0xFFFFFFF8)
               + 15) & 0xFFFFFFF8)
             + (_DWORD)v26
             + 8) & ~(_DWORD)v26)
           + 23) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v28 = a3 - v20 + 1;
    else
      v28 = 2;
    if (v28 >= 0x10000)
      v29 = 4;
    else
      v29 = 2;
    if (v28 < 0x100)
      v29 = 1;
    if (v28 >= 2)
      v30 = v29;
    else
      v30 = 0;
    v37 = v30;
  }
  if (a2 > v20)
  {
    if ((((((((((((((_DWORD)v25 + 9 + (((((_DWORD)v27 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~(_DWORD)v25)
                 + ((((*(_DWORD *)(v14 + 64) + (((_DWORD)v24 + 8 + ((v12[16] + 7) & 0xFFFFFFF8)) & ~(_DWORD)v24) + 7) & 0xFFFFFFF8)
                   + 15) & 0xFFFFFFF8)
                 + 16
                 + 34) & 0xFFFFFFF8)
               + 63) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 8
           + (((((((((((_DWORD)v23 + (((((_DWORD)v21 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9) & ~(_DWORD)v23)
                   + ((((*(_DWORD *)(v6 + 64) + (((_DWORD)v22 + 8 + ((v4[16] + 7) & 0xFFFFFFF8)) & ~(_DWORD)v22) + 7) & 0xFFFFFFF8)
                     + 15) & 0xFFFFFFF8)
                   + 16
                   + 34) & 0xFFFFFFF8)
                 + 63) & 0xFFFFFFF8)
               + 15) & 0xFFFFFFF8)
             + (_DWORD)v26
             + 8) & ~(_DWORD)v26)
           + 23) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v31 = ~v20 + a2;
      bzero(a1, ((((((((((((v25 + 9 + ((((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v25)+ ((((*(_QWORD *)(v14 + 64)+ ((v24 + 8 + ((*((_QWORD *)v12 + 8) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v24)+ 7) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16+ 34) & 0xFFFFFFFFFFFFFFF8)+ 63) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8+ ((((((((((v23 + ((((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v23)+ ((((*(_QWORD *)(v6 + 64)+ ((v22 + 8 + ((*((_QWORD *)v4 + 8) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v22)+ 7) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16+ 34) & 0xFFFFFFFFFFFFFFF8)+ 63) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + v26
            + 8) & ~v26)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 39) & 0xFFFFFFFFFFFFFFF8)
      + 8);
      *a1 = v31;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X20 }
}

void sub_23AA9AF0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, size_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,int a23,uint64_t a24,int a25,int a26,uint64_t a27,int a28,int a29,uint64_t a30,int a31,int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  void (*v71)(unint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v72;
  uint64_t v73;
  _DWORD *v74;
  uint64_t v75;
  unsigned int v76;
  void *v77;
  size_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  int v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  uint64_t v97;
  unsigned int v98;
  size_t v99;
  int v100;
  int v101;
  uint64_t v102;
  int v103;
  int v104;

  *(_BYTE *)(*(_QWORD *)(v67 - 104) + v59) = 0;
  v69 = *(_DWORD *)(v67 - 92);
  if (!v69)
    return;
  if (v104 == v58)
  {
    if (v103 == v104)
    {
      v70 = v69 + 1;
      v71 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
      v72 = *(_QWORD *)(v67 - 104);
      a3 = *(unsigned int *)(v67 - 108);
      v73 = v102;
LABEL_8:
      v71(v72, v70, a3, v73);
      return;
    }
    v74 = (_DWORD *)((((((*(_QWORD *)(v67 - 104) + a2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + a1 + 9) & *(_QWORD *)(v67 - 120));
    if (v101 == v104)
    {
      v75 = v69 + 1;
      if (v75 <= v98)
      {
        if (v69 != -1)
        {
          a3 = v94;
          if (v94 == v98)
          {
            v73 = v93;
            v71 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56);
            v72 = (((((*(_QWORD *)(v67 - 104) + a2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + a1 + 9) & *(_QWORD *)(v67 - 120);
            v70 = v75;
            goto LABEL_8;
          }
          v83 = (_QWORD *)(((unint64_t)v74 + v89) & 0xFFFFFFFFFFFFFFF8);
          if (v91 > 0x7FFFFFFE)
          {
            v72 = ((unint64_t)v83 + v65) & v84;
            v71 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
            v70 = v69 + 1;
            a3 = v87;
            v73 = v88;
            goto LABEL_8;
          }
          if (v75 > 0x7FFFFFFE)
          {
            *v83 = 0;
            *(_DWORD *)v83 = v69 - 2147483646;
          }
          else
          {
            *v83 = v75;
          }
        }
      }
      else if ((_DWORD)v99)
      {
        v76 = v69 - v98;
        v77 = (void *)((((((*(_QWORD *)(v67 - 104) + a2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                      + a1
                      + 9) & *(_QWORD *)(v67 - 120));
        v78 = v99;
LABEL_20:
        bzero(v77, v78);
        *v74 = v76;
        return;
      }
      return;
    }
    v80 = (uint64_t)v74 + v99 + 10;
    goto LABEL_27;
  }
  v72 = (v60 + *(_QWORD *)(v67 - 104)) & a6;
  if (v55 != v58)
  {
    if ((v69 & 0x80000000) != 0)
      v79 = v69 ^ 0x80000000;
    else
      v79 = v69 - 1;
    *(_QWORD *)(((v56 + v72) & 0xFFFFFFFFFFFFFFF8) + 8) = v79;
    return;
  }
  if (v100 == v55)
  {
    v70 = v69 + 1;
    v71 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
    a3 = v96;
    v73 = v97;
    goto LABEL_8;
  }
  v74 = (_DWORD *)((v68 + ((((v61 + v72) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v57);
  if (v54 != v55)
  {
    v80 = (uint64_t)v74 + a7 + 26;
LABEL_27:
    v81 = (_QWORD *)(((v80 & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
    if (v69 <= 0x7FFFFFFE)
    {
      *v81 = v69;
      return;
    }
    v82 = -2147483647;
    goto LABEL_30;
  }
  v70 = v69 + 1;
  if (v70 <= v95)
  {
    if (v69 == -1)
      return;
    if (v90 == v95)
    {
      v71 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
      v72 = (v68 + ((((v61 + v72) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v57;
      a3 = v90;
      v73 = v86;
      goto LABEL_8;
    }
    v81 = (_QWORD *)(((unint64_t)v74 + a5) & 0xFFFFFFFFFFFFFFF8);
    if (v52 > 0x7FFFFFFE)
    {
      v72 = ((unint64_t)v81 + a4) & v53;
      v71 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
      v73 = v85;
      goto LABEL_8;
    }
    if (v70 <= 0x7FFFFFFE)
    {
      *v81 = v70;
      return;
    }
    v82 = -2147483646;
LABEL_30:
    *v81 = 0;
    *(_DWORD *)v81 = v69 + v82;
    return;
  }
  if ((_DWORD)a8)
  {
    v76 = v69 - v95;
    v77 = (void *)((v68 + ((((v61 + v72) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v57);
    v78 = a8;
    goto LABEL_20;
  }
}

void sub_23AA9B218(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v5;

  v5 = objc_msgSend(a1, sel_stringAtIndex_, a2);
  if (!v5)
  {
    sub_23B1C63E0();
    v5 = (id)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }

  *a3 = v5;
}

uint64_t sub_23AA9B290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  _BYTE v46[168];
  uint64_t v47;

  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ItemMetadata();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  v14 = swift_bridgeObjectRetain();
  sub_23AAA5D78(v14, (void (*)(uint64_t *__return_ptr, __int128 *))sub_23AAA6724, (uint64_t)v13);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    v16 = sub_23AAA70A8(0x1Fu, a1);
    v17 = sub_23AAAA080(32, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    sub_23AA907B0((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v47 = sub_23AA9BD7C(v16, v17, (uint64_t)v11);
    v45 = v18;
    v44 = v19;
    v43 = v20;
    v21 = sub_23AA9B8AC(29, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    LOBYTE(v17) = v22;
    v41 = sub_23AA9B6DC(30, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    v42 = v23;
    v24 = sub_23AA9B8AC(28, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    v39 = v25;
    v40 = v24;
    v26 = sub_23AA9B8AC(29, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    v37 = v27;
    v38 = v26;
    swift_bridgeObjectRetain();
    v28 = sub_23AA9B6DC(30, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    v35 = v29;
    sub_23AA907B0((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AAF8E48((uint64_t)v46);
    v30 = v5[14];
    v36 = &v7[v5[13]];
    v31 = &v7[v30];
    *(_QWORD *)v31 = 0;
    *((_QWORD *)v31 + 1) = 0;
    *((_QWORD *)v31 + 2) = 0;
    v31[24] = 1;
    v32 = &v7[v5[15]];
    *(_QWORD *)v32 = 0;
    *((_QWORD *)v32 + 1) = 0;
    v32[16] = 1;
    *(_QWORD *)v7 = v40;
    v7[8] = v39;
    *((_QWORD *)v7 + 2) = v38;
    v7[24] = v37;
    *((_QWORD *)v7 + 4) = v47;
    *((_DWORD *)v7 + 10) = v45;
    *((_QWORD *)v7 + 6) = v44;
    v7[56] = v43 & 1;
    *((_QWORD *)v7 + 8) = 0;
    *((_QWORD *)v7 + 9) = v21;
    v7[80] = v17;
    v33 = v42;
    *((_QWORD *)v7 + 11) = v41;
    *((_QWORD *)v7 + 12) = v33;
    *((_QWORD *)v7 + 13) = 0;
    *((_QWORD *)v7 + 14) = 0;
    *((_QWORD *)v7 + 15) = 0;
    *((_QWORD *)v7 + 16) = v28;
    *((_QWORD *)v7 + 17) = v35;
    sub_23AA907B0((uint64_t)v11, (uint64_t)&v7[v5[12]], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA724E8((uint64_t)v46, (uint64_t)v36, &qword_2542E5050);
    sub_23AA937BC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    *(_QWORD *)&v7[v5[16]] = 0;
    *(_OWORD *)&v7[v5[17]] = xmmword_23B1D2320;
    sub_23AA724E8((uint64_t)v7, a2, (uint64_t *)&unk_2542E6B00);
    swift_bridgeObjectRelease();
    return sub_23AA937BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  }
  return result;
}

uint64_t sub_23AA9B6DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _OWORD v14[2];

  if (*(_QWORD *)(a2 + 16) && (v7 = a3(a1), (v8 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v7, (uint64_t)v14);
  else
    memset(v14, 0, sizeof(v14));
  sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
    return v12;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v11 = v10;
    sub_23AA8EFC8((uint64_t)v14, v10, qword_2542E5640);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    a4(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 32) = 0xD00000000000001FLL;
    *(_QWORD *)(v11 + 40) = 0x800000023B205F70;
    *(_BYTE *)(v11 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
  }
}

uint64_t sub_23AA9B8AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _OWORD v14[2];

  if (*(_QWORD *)(a2 + 16) && (v7 = a3(a1), (v8 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v7, (uint64_t)v14);
  else
    memset(v14, 0, sizeof(v14));
  sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
    return v12;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v11 = v10;
    sub_23AA8EFC8((uint64_t)v14, v10, qword_2542E5640);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    a4(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 32) = 0xD000000000000020;
    *(_QWORD *)(v11 + 40) = 0x800000023B205FC0;
    *(_BYTE *)(v11 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
  }
}

uint64_t sub_23AA9BA80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ItemMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AA9BAC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  v11(a1 + a3[8], a2 + a3[8], v9);
  v12 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v22 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[26];
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  v24 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  v25 = a3[29];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v28(v27, 1, v9))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v26, (uint64_t)v27, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
  }
  v30 = a3[31];
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v33 = a3[32];
  v34 = a3[33];
  v35 = *(_QWORD *)(a2 + v33);
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_QWORD *)(a1 + v33) = v35;
  v36 = a1 + v34;
  v37 = (uint64_t *)(a2 + v34);
  v38 = *(_QWORD *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38 >> 60 == 15)
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
  }
  else
  {
    v39 = *v37;
    sub_23AAAE668(*v37, v38);
    *(_QWORD *)v36 = v39;
    *(_QWORD *)(v36 + 8) = v38;
  }
  v40 = a3[34];
  v41 = a3[35];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  v44 = a3[36];
  v45 = a3[37];
  v46 = a1 + v44;
  v47 = a2 + v44;
  *(_DWORD *)v46 = *(_DWORD *)v47;
  *(_BYTE *)(v46 + 4) = *(_BYTE *)(v47 + 4);
  v48 = (_QWORD *)(a1 + v45);
  v49 = (_QWORD *)(a2 + v45);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23AA9BD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v13;

  v5 = type metadata accessor for ItemMetadata();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v13 - v9;
  sub_23AA907B0(a3, (uint64_t)&v13 - v9, v11);
  sub_23AA937BC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA907B0(a3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA937BC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA937BC(a3, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  return a1;
}

uint64_t sub_23AA9BF04(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  unsigned __int8 v64;
  int v65;
  void *Strong;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  void *v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  void *v77;
  void *v78;
  void *v79;
  id v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  id v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  void *v103;
  void *v104;
  id v105;
  id v106;
  BOOL v107;
  uint64_t v108;
  id v109;
  char v110;
  BOOL v111;
  _BYTE *v112;
  uint64_t v113;
  void *v114;
  void *v115;
  void *v116;
  id v117;
  id v118;
  id v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, char *, uint64_t);
  char v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  void *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  int v138;
  BOOL v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  id v143;
  id v144;
  char *v145;
  char *v146;
  void (*v147)(char *, uint64_t);
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  int v157;
  char *v158;
  uint64_t v159;
  _BOOL4 v160;
  int v161;
  char v162;
  unint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  int v169;
  char *v170;
  id v171;
  int v172;
  id v173;
  char v174;
  id v175;
  char v176;
  char *v177;
  NSObject *v178;
  os_log_type_t v179;
  uint64_t v180;
  uint8_t *v181;
  void *v182;
  unint64_t v183;
  id v184;
  char v185;
  NSObject *v186;
  os_log_type_t v187;
  uint64_t v188;
  uint8_t *v189;
  void *v190;
  _UNKNOWN **v191;
  uint64_t v192;
  BOOL v193;
  BOOL v194;
  id v195;
  char v196;
  id v197;
  char v198;
  id v199;
  unint64_t v200;
  char v201;
  char v202;
  int v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  void *v207;
  char v208;
  uint64_t v209;
  char *v210;
  NSObject *v211;
  os_log_type_t v212;
  uint64_t v213;
  uint8_t *v214;
  void *v215;
  NSObject *v216;
  os_log_type_t v217;
  uint64_t v218;
  uint8_t *v219;
  void *v220;
  char v221;
  void *v222;
  char *v223;
  NSObject *v224;
  os_log_type_t v225;
  uint64_t v226;
  uint8_t *v227;
  void *v228;
  char v229;
  uint64_t v230;
  unsigned __int16 v231;
  void *v232;
  char v233;
  id v234;
  char v235;
  id v236;
  char v237;
  uint64_t v238;
  char v239;
  BOOL v240;
  BOOL v241;
  uint64_t v242;
  char v243;
  BOOL v244;
  BOOL v245;
  BOOL v246;
  char v247;
  BOOL v248;
  unsigned int v249;
  BOOL v250;
  char *v251;
  char v252;
  void *v253;
  id v254;
  id v255;
  unsigned __int8 v256;
  char *v257;
  char v258;
  void *v259;
  id v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  BOOL v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  BOOL v271;
  BOOL v272;
  char v273;
  int v274;
  uint64_t v275;
  id v276;
  uint64_t v277;
  void *v278;
  uint64_t v279;
  id v280;
  uint64_t v281;
  unint64_t v282;
  unint64_t v283;
  id v284;
  uint64_t v285;
  unint64_t v286;
  unint64_t v287;
  id v288;
  __int128 v289;
  uint64_t v290;
  unint64_t v291;
  id v292;
  id v293;
  id v294;
  BOOL v295;
  void *v296;
  uint64_t v297;
  id v299;
  void *v300;
  id v301;
  id v302;
  void *v303;
  char v304;
  id v305;
  void *v306;
  id v307;
  id v308;
  char v309;
  id v310;
  id v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  void *v319;
  char v320;
  uint64_t v321;
  unsigned __int16 v322;
  void *v323;
  char v324;
  char v325;
  id v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  char *v333;
  char *v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  int v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  _BYTE *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  char *v348;
  char *v349;
  char *v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  void *v361;
  id v362[31];
  _QWORD v363[29];
  uint64_t v364;
  uint64_t v365;
  _QWORD v366[63];
  uint64_t v367;
  char v368;
  uint64_t v369;
  unsigned __int8 v370;
  uint64_t v371;
  char v372;
  uint64_t v373;
  char v374;
  _BYTE v375[248];
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  uint64_t v391;
  _QWORD v392[60];
  char v393;
  _OWORD v394[31];
  _BYTE v395[24];
  uint64_t v396;
  _BYTE v397[848];
  _QWORD v398[64];
  char v399;
  _BYTE v400[848];
  _BYTE v401[848];
  _BYTE v402[848];
  _BYTE v403[848];
  _BYTE v404[496];
  char v405;
  _QWORD v406[74];
  char v407;
  _QWORD v408[72];
  char v409;
  _BYTE v410[848];
  _BYTE v411[848];
  _BYTE v412[848];
  _BYTE v413[848];
  _BYTE v414[16];
  id v415;
  id v416;
  _BYTE v417[496];
  _QWORD v418[5];
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  uint64_t v461;
  _BYTE v462[32];
  uint64_t v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  __int128 v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  uint64_t v479;
  void *v480;
  void *v481;
  uint64_t v482;
  char v483;
  _BYTE v484[864];
  uint64_t v485;

  v3 = MEMORY[0x24BDAC7A8](a1);
  v360 = v4;
  v361 = v2;
  v346 = v5;
  v6 = (void *)v3;
  v485 = v7;
  sub_23AA724E8(v7, (uint64_t)v397, (uint64_t *)&unk_2542E1498);
  sub_23AA724E8((uint64_t)v397, (uint64_t)v484, (uint64_t *)&unk_2542E1498);
  v8 = sub_23B1C5D8C();
  v336 = *(_QWORD *)(v8 - 8);
  v337 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v335 = (char *)&v327 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v334 = (char *)&v327 - v11;
  v12 = sub_23B1C5E4C();
  v352 = *(_QWORD *)(v12 - 8);
  v353 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v351 = (char *)&v327 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v328 = (char *)&v327 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v327 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v350 = (char *)&v327 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v347 = (char *)&v327 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v23);
  v329 = (char *)&v327 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E01F0);
  MEMORY[0x24BDAC7A8](v25);
  v342 = (char *)&v327 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23B1C5750();
  v344 = *(_QWORD *)(v27 - 8);
  v345 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v331 = (char *)&v327 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v29);
  v349 = (char *)&v327 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23B1C5A08();
  v355 = *(_QWORD *)(v31 - 8);
  v356 = v31;
  v32 = MEMORY[0x24BDAC7A8](v31);
  v348 = (char *)&v327 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v354 = (uint64_t)&v327 - v34;
  v35 = sub_23B1C5804();
  v340 = *(_QWORD *)(v35 - 8);
  v341 = v35;
  MEMORY[0x24BDAC7A8](v35);
  v333 = (char *)&v327 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0208);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v332 = (char *)&v327 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v327 - v40;
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v327 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v45);
  v358 = (uint64_t)&v327 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for ItemMetadata();
  v48 = MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v327 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v48);
  v327 = (char *)&v327 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v54 = (char *)&v327 - v53;
  v357 = v1;
  v55 = *(_QWORD *)(v1 + 16);
  if (qword_2542E7190 != -1)
    swift_once();
  v330 = v19;
  v359 = v55;
  v338 = qword_2542EDE38;
  sub_23AAA3120((uint64_t)v54);
  v339 = v54[*(int *)(v47 + 84)];
  v343 = v54;
  sub_23AA937BC((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  if (qword_2542E6818 != -1)
    swift_once();
  v56 = (void *)qword_2542EDD28;
  v57 = sub_23B1C5DC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v44, 1, 1, v57);
  v58 = objc_msgSend(v6, sel_itemIdentifier);
  v59 = sub_23B1C63E0();
  v61 = v60;

  sub_23AAA0AB8((uint64_t)"Decoration", 10, 2, (uint64_t)v44, v59, v61, v56, v358);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v44, (uint64_t *)&unk_2542E67B8);
  objc_msgSend(v6, sel_setQuarantineBlob_, 0);
  sub_23AA724E8(v485, (uint64_t)v412, (uint64_t *)&unk_2542E1498);
  v62 = sub_23ADF2D10((uint64_t)v412);
  v63 = v359;
  if (v62 == 1
    || (memcpy(v413, v412, sizeof(v413)),
        sub_23AA724E8((uint64_t)&v413[600], (uint64_t)v363, &qword_2542E5050),
        sub_23AA724E8((uint64_t)v363, (uint64_t)&v376, &qword_2542E5050),
        sub_23AAFCF2C((uint64_t)&v376) == 1))
  {
    v64 = objc_msgSend(v6, sel_isFolder);
    objc_msgSend(v6, sel_isExcludedFromSync);
    sub_23AAA3120((uint64_t)v50);
    v65 = *((unsigned __int16 *)v50 + 5);
    sub_23AA937BC((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    type metadata accessor for FPFileTree();
    swift_dynamicCastClassUnconditional();
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    v67 = objc_msgSend(Strong, sel_supportsSyncingTrash);

    if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
    {
      v68 = *MEMORY[0x24BDC8210] | 0x2CLL;
      v69 = (uint64_t)v349;
      if ((v64 & 1) != 0)
      {
        if ((~v65 & 0x140) != 0)
        {
LABEL_18:
          if ((v65 & 0x80) == 0)
            goto LABEL_20;
          goto LABEL_19;
        }
      }
      else if ((v65 & 0x100) == 0)
      {
        goto LABEL_18;
      }
LABEL_17:
      v68 |= 1uLL;
      goto LABEL_18;
    }
    v69 = (uint64_t)v349;
    if ((v64 & 1) != 0)
    {
      if ((~v65 & 0x140) == 0)
      {
LABEL_13:
        v68 = 44;
        goto LABEL_17;
      }
    }
    else if ((v65 & 0x100) != 0)
    {
      goto LABEL_13;
    }
    v68 = 44;
    if ((v65 & 0x80) == 0)
    {
      if ((v67 & 1) == 0)
        goto LABEL_22;
      goto LABEL_21;
    }
LABEL_19:
    v68 |= 2uLL;
LABEL_20:
    if (!v67)
    {
LABEL_22:
      objc_msgSend(v6, sel_setCapabilities_, sub_23AFA7CE0(v68, (uint64_t)objc_msgSend(v6, sel_capabilities)));
      goto LABEL_78;
    }
LABEL_21:
    v68 |= 0x10uLL;
    goto LABEL_22;
  }
  v476 = v388;
  v477 = v389;
  v478 = v390;
  v479 = v391;
  v472 = v384;
  v473 = v385;
  v474 = v386;
  v475 = v387;
  v468 = v380;
  v469 = v381;
  v470 = v382;
  v471 = v383;
  v464 = v376;
  v465 = v377;
  v466 = v378;
  v467 = v379;
  sub_23AA724E8((uint64_t)v363, (uint64_t)v362, &qword_2542E5050);
  v70 = v376;
  sub_23AC42B28((uint64_t)v362);
  objc_msgSend(v6, sel_setCapabilities_, v70);
  objc_msgSend(v6, sel_setUploading_, BYTE8(v376));
  v71 = BYTE9(v376);
  objc_msgSend(v6, sel_setUploaded_, BYTE9(v376));
  v72 = (void *)v377;
  if ((_QWORD)v377)
  {
    v73 = (id)v377;
    v74 = (void *)sub_23B1C5870();

  }
  else
  {
    v74 = 0;
  }
  objc_msgSend(v6, sel_setUploadingError_, v74);

  v75 = (void *)*((_QWORD *)&v377 + 1);
  if (*((_QWORD *)&v377 + 1))
  {
    v76 = *((id *)&v377 + 1);
    v77 = (void *)sub_23B1C5870();

  }
  else
  {
    v77 = 0;
  }
  objc_msgSend(v6, sel_setDownloadingError_, v77);

  objc_msgSend(v6, sel_setShared_, v378);
  objc_msgSend(v6, sel_setTopLevelSharedItem_, BYTE1(v378));
  objc_msgSend(v6, sel_setSharedByCurrentUser_, BYTE2(v378));
  if ((_QWORD)v379)
  {
    swift_bridgeObjectRetain();
    v78 = (void *)*sub_23ADAC66C();
    v79 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v80 = objc_msgSend(v78, sel_personNameComponentsFromString_, v79);

    if (v80)
    {
      v81 = v333;
      sub_23B1C57F8();

      v82 = v340;
      v83 = v81;
      v84 = v341;
      (*(void (**)(char *, char *, uint64_t))(v340 + 32))(v41, v83, v341);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v41, 0, 1, v84);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v41, 1, v84) == 1)
      {
        v80 = 0;
      }
      else
      {
        v80 = (id)sub_23B1C57EC();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v84);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v340 + 56))(v41, 1, 1, v341);
    }
    objc_msgSend(v6, sel_setOwnerNameComponents_, v80);

  }
  if ((_QWORD)v380)
  {
    swift_bridgeObjectRetain();
    v85 = (void *)*sub_23ADAC66C();
    v86 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v87 = objc_msgSend(v85, sel_personNameComponentsFromString_, v86);

    if (v87)
    {
      v88 = v333;
      sub_23B1C57F8();

      v89 = v340;
      v90 = v332;
      v91 = v88;
      v92 = v341;
      (*(void (**)(char *, char *, uint64_t))(v340 + 32))(v332, v91, v341);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v90, 0, 1, v92);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v90, 1, v92) == 1)
      {
        v87 = 0;
      }
      else
      {
        v87 = (id)sub_23B1C57EC();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v92);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v340 + 56))(v332, 1, 1, v341);
    }
    objc_msgSend(v6, sel_setMostRecentEditorNameComponents_, v87);

  }
  v93 = *((_QWORD *)&v381 + 1);
  swift_bridgeObjectRetain();
  if (v93)
    v94 = (void *)sub_23B1C63BC();
  else
    v94 = 0;
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSharingPermissions_, v94);

  objc_msgSend(v6, sel_setFp_lastModifiedByCurrentUser_, BYTE8(v380));
  objc_msgSend(v6, sel_setIsContainer_, BYTE8(v382));
  objc_msgSend(v6, sel_setIsContainerPristine_, BYTE9(v382));
  if (*((_QWORD *)&v383 + 1))
  {
    swift_bridgeObjectRetain();
    v95 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v95 = 0;
  }
  objc_msgSend(v6, sel_setFp_appContainerBundleIdentifier_, v95);

  if (*((_QWORD *)&v384 + 1))
  {
    swift_bridgeObjectRetain();
    v96 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v96 = 0;
  }
  objc_msgSend(v6, sel_setCloudContainerIdentifier_, v96);

  if (*((_QWORD *)&v385 + 1))
  {
    swift_bridgeObjectRetain();
    v97 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v97 = 0;
  }
  objc_msgSend(v6, sel_setContainerDisplayName_, v97);

  if (*((_QWORD *)&v386 + 1))
  {
    swift_bridgeObjectRetain();
    v98 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v98 = 0;
  }
  objc_msgSend(v6, sel_setFp_displayName_, v98);

  v99 = (void *)sub_23B1C6824();
  objc_msgSend(v6, sel_setHasUnresolvedConflicts_, v99);

  v100 = swift_bridgeObjectRetain();
  v101 = v361;
  v102 = sub_23B000D8C(v100);
  v361 = v101;
  swift_bridgeObjectRelease();
  if (v102)
  {
    type metadata accessor for NSFileProviderItemDecorationIdentifier(0);
    v103 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v103 = 0;
  }
  objc_msgSend(v6, sel_setDecorations_, v103);

  v104 = (void *)v388;
  if ((_QWORD)v388)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v105 = sub_23AF96DC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v106 = objc_msgSend(v105, sel_userInfo);

    sub_23B1C620C();
    v104 = (void *)sub_23B1C61F4();
    swift_bridgeObjectRelease();
  }
  v69 = (uint64_t)v349;
  objc_msgSend(v6, sel_setUserInfo_, v104);

  objc_msgSend(v6, sel_setContentPolicy_, (_QWORD)v389);
  sub_23AA724E8((uint64_t)v484, (uint64_t)v366, (uint64_t *)&unk_2542E1498);
  sub_23AA724E8((uint64_t)v366, (uint64_t)v394, qword_2542E6E20);
  v107 = sub_23AAFC2A4((uint64_t)v394) != 1 && sub_23AA9F3D0(1, *((uint64_t *)&v394[30] + 1));
  v108 = (*(_QWORD *)(v63 + 80) >> 9) & 1;
  objc_msgSend(v6, sel_setInheritedContentPolicy_, *((_QWORD *)&v389 + 1));
  v109 = v6;
  v110 = sub_23ADF6CD4();

  v111 = sub_23AAB3058(v110);
  objc_msgSend(v109, sel_setEffectiveContentPolicy_, sub_23AF9679C(v108, v111, v107));
  if (v71
    && (objc_msgSend(v109, sel_isExcludedFromSync) & 1) == 0
    && sub_23AA9F3D0(64, (uint64_t)objc_msgSend(v109, sel_capabilities)))
  {
    v112 = v343;
    sub_23AAA3120((uint64_t)v343);
    v339 = sub_23AA9F718(v108, v112);
    sub_23AA937BC((uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if (!(_QWORD)v390)
      goto LABEL_77;
  }
  else
  {
    v339 = 0;
    if (!(_QWORD)v390)
      goto LABEL_77;
  }
  sub_23AA724E8((uint64_t)v366, (uint64_t)v392, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v392) != 1 && (v393 & 1) != 0)
  {
    v113 = swift_bridgeObjectRetain();
    v114 = v361;
    sub_23B01FA48(v113);
    v361 = v114;
    swift_bridgeObjectRelease();
    sub_23AA9F52C(0, (unint64_t *)&unk_2542E1FD0);
    v115 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v109, sel_setConflictingVersions_, v115);
    sub_23AAB7E4C(v363, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);

    goto LABEL_78;
  }
LABEL_77:
  sub_23AAB7E4C(v363, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
LABEL_78:
  v116 = *(void **)(v357 + 32);
  v117 = objc_msgSend(v6, sel_itemID);
  v118 = objc_msgSend(v116, sel_getAlternateContentsURLWrapperForItemID_, v117);

  if (v118)
  {
    v119 = objc_msgSend(v118, "url");

    v120 = v348;
    sub_23B1C59CC();

    v122 = v355;
    v121 = v356;
    v123 = *(void (**)(uint64_t, char *, uint64_t))(v355 + 32);
    v123(v69, v120, v356);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56))(v69, 0, 1, v121);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v69, 1, v121) != 1)
    {
      v123(v354, (char *)v69, v121);
      v124 = sub_23B1C59D8();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE860);
      v125 = swift_allocObject();
      v126 = sub_23B1A1F64(v125, 2);
      v127 = (void *)*MEMORY[0x24BDBCC48];
      v128 = (void *)*MEMORY[0x24BDBCBE0];
      *v129 = *MEMORY[0x24BDBCC48];
      v129[1] = v128;
      v130 = nullsub_1(v126);
      v131 = sub_23AB6CF48(v130);
      v132 = v127;
      v133 = v128;
      if (v131)
        sub_23AA7A178(v130);
      v134 = v344;
      v135 = (uint64_t)v342;
      swift_bridgeObjectRelease();
      v136 = v361;
      sub_23B1C5900();
      if (v136)
      {

        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v135, 1, 1, v345);
        v361 = 0;
      }
      else
      {
        swift_bridgeObjectRelease();
        v137 = v345;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v134 + 56))(v135, 0, 1, v345);
        v138 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v135, 1, v137);
        v361 = 0;
        if (v138 != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v134 + 32))(v331, v135, v137);
          sub_23B1C5738();
          if ((v221 & 1) != 0)
            v222 = 0;
          else
            v222 = (void *)sub_23B1C6938();
          v316 = v329;
          objc_msgSend(v6, sel_setDocumentSize_, v222);

          sub_23B1C5720();
          v317 = sub_23B1C5BDC();
          v318 = *(_QWORD *)(v317 - 8);
          v319 = 0;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v318 + 48))(v316, 1, v317) != 1)
          {
            v319 = (void *)sub_23B1C5B64();
            (*(void (**)(char *, uint64_t))(v318 + 8))(v316, v317);
          }
          objc_msgSend(v6, sel_setContentModificationDate_, v319);

          (*(void (**)(char *, uint64_t))(v344 + 8))(v331, v345);
          if ((v124 & 1) == 0)
            goto LABEL_89;
          goto LABEL_88;
        }
      }
      sub_23AA8A05C(v135, &qword_2542E01F0);
      if ((v124 & 1) == 0)
      {
LABEL_89:
        (*(void (**)(uint64_t, uint64_t))(v355 + 8))(v354, v356);
        goto LABEL_90;
      }
LABEL_88:
      sub_23B1C59C0();
      goto LABEL_89;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v355 + 56))(v69, 1, 1, v356);
  }
  sub_23AA8A05C(v69, (uint64_t *)&unk_2542E6740);
LABEL_90:
  sub_23AA724E8(v485, (uint64_t)v411, (uint64_t *)&unk_2542E1498);
  v139 = sub_23ADF2D10((uint64_t)v411) != 1;
  objc_msgSend(v6, sel_setPinned_, v139 & v411[593]);
  if (objc_msgSend(v6, sel_isPinned))
  {
    v140 = *MEMORY[0x24BDC8218];
    *(_QWORD *)&v394[0] = objc_msgSend(v6, sel_capabilities);
    sub_23AAA0EC8(v366, v140);
    objc_msgSend(v6, sel_setCapabilities_, *(_QWORD *)&v394[0]);
  }
  sub_23AA724E8(v485, (uint64_t)v410, (uint64_t *)&unk_2542E1498);
  v141 = sub_23ADF2D10((uint64_t)v410) != 1;
  objc_msgSend(v6, sel_setInPinnedFolder_, v141 & v410[594]);
  if ((objc_msgSend(v6, sel_isInPinnedFolder) & 1) == 0)
  {
    type metadata accessor for FPFileTree();
    swift_dynamicCastClassUnconditional();
    v142 = swift_unknownObjectUnownedLoadStrong();
    v143 = objc_msgSend((id)v142, sel_providerDomainID);

    LOBYTE(v142) = FPPinningIsEnabledForDomainID();
    if ((v142 & 1) != 0)
    {
      v144 = objc_msgSend(v6, sel_contentType);
      v145 = v334;
      sub_23B1C5D14();

      v146 = v335;
      sub_23B1C5CE4();
      LOBYTE(v144) = sub_23B1C5D5C();
      v147 = *(void (**)(char *, uint64_t))(v336 + 8);
      v148 = v146;
      v149 = v337;
      v147(v148, v337);
      v147(v145, v149);
      if ((v144 & 1) == 0)
      {
        v150 = *MEMORY[0x24BDC8200];
        *(_QWORD *)&v394[0] = objc_msgSend(v6, sel_capabilities);
        sub_23AAA0EC8(v366, v150);
        objc_msgSend(v6, sel_setCapabilities_, *(_QWORD *)&v394[0]);
      }
    }
  }
  v366[0] = objc_msgSend(v6, sel_capabilities);
  sub_23AAB51CC(64);
  objc_msgSend(v6, sel_setCapabilities_, v366[0]);
  if (objc_msgSend(v6, sel_isFolder))
  {
    v151 = *MEMORY[0x24BDC8208];
    *(_QWORD *)&v394[0] = objc_msgSend(v6, sel_capabilities);
    sub_23AAA0EC8(v366, v151);
    objc_msgSend(v6, sel_setCapabilities_, *(_QWORD *)&v394[0]);
  }
  v152 = objc_msgSend(v6, sel_providerID);
  v153 = sub_23B1352B0();
  v155 = v154;

  if (v153 == 0xD00000000000002BLL && v155 == 0x800000023B1F8300)
    goto LABEL_100;
  v156 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v156 & 1) != 0)
    goto LABEL_102;
  v164 = objc_msgSend(v6, sel_providerID);
  v165 = sub_23B1352B0();
  v167 = v166;

  if (v165 == 0xD000000000000032 && v167 == 0x800000023B1F8330)
  {
LABEL_100:
    swift_bridgeObjectRelease();
  }
  else
  {
    v168 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v168 & 1) == 0)
    {
      sub_23AA724E8(v485, (uint64_t)v408, (uint64_t *)&unk_2542E1498);
      v169 = sub_23ADF2D10((uint64_t)v408);
      v158 = v350;
      if (v169 == 1)
        goto LABEL_106;
      if ((v409 & 1) != 0 || v408[71] <= 0)
      {
        sub_23AA724E8((uint64_t)v484, (uint64_t)v366, (uint64_t *)&unk_2542E1498);
      }
      else
      {
        v366[0] = objc_msgSend(v6, sel_capabilities);
        sub_23AAB51CC(32);
        objc_msgSend(v6, sel_setCapabilities_, v366[0]);
        sub_23AA724E8((uint64_t)v484, (uint64_t)v366, (uint64_t *)&unk_2542E1498);
      }
      v159 = v373;
      if ((v374 & 1) != 0)
        goto LABEL_106;
      goto LABEL_104;
    }
  }
LABEL_102:
  sub_23AA724E8(v485, (uint64_t)v406, (uint64_t *)&unk_2542E1498);
  v157 = sub_23ADF2D10((uint64_t)v406);
  v158 = v350;
  if (v157 == 1)
    goto LABEL_106;
  v159 = v406[73];
  if ((v407 & 1) != 0)
    goto LABEL_106;
LABEL_104:
  if (v159 >= 1)
  {
    v366[0] = objc_msgSend(v6, sel_capabilities);
    sub_23AAB51CC(128);
    objc_msgSend(v6, sel_setCapabilities_, v366[0]);
  }
LABEL_106:
  v160 = sub_23AA9F3D0(1, v360);
  if (!v160)
  {
    sub_23AA724E8(v485, (uint64_t)v404, (uint64_t *)&unk_2542E1498);
    v161 = sub_23ADF2D10((uint64_t)v404);
    v162 = 1;
    if (v161 != 1)
      v162 = (v405 == 2) | v405;
    objc_msgSend(v6, sel_setDownloaded_, (v162 & 1) == 0);
  }
  LODWORD(v356) = v160;
  sub_23AA724E8(v485, (uint64_t)v402, (uint64_t *)&unk_2542E1498);
  if (sub_23ADF2D10((uint64_t)v402) == 1
    || (memcpy(v403, v402, sizeof(v403)),
        sub_23AA724E8((uint64_t)&v403[536], (uint64_t)v414, (uint64_t *)&unk_2542E74F0),
        sub_23AA724E8((uint64_t)v414, (uint64_t)&v482, (uint64_t *)&unk_2542E74F0),
        (v483 & 1) != 0))
  {
    v163 = (unint64_t)objc_msgSend(v6, sel_isDownloaded);
  }
  else
  {
    v163 = v482 == 0;
  }
  v170 = v351;
  objc_msgSend(v6, sel_setRecursivelyDownloaded_, v163);
  objc_msgSend(v6, sel_setMostRecentVersionDownloaded_, objc_msgSend(v6, sel_isDownloaded));
  objc_msgSend(v6, sel_setSupportsMostRecentVersionDownloaded_, 1);
  v171 = objc_msgSend(v6, sel_childItemCount);
  if (!v171)
  {
    sub_23AA9F52C(0, (unint64_t *)&qword_2542E7568);
    v171 = (id)sub_23B1C6C38();
  }
  v172 = sub_23B1C74FC();

  if (v172 == 65533)
    objc_msgSend(v6, sel_setChildItemCount_, 0);
  if (sub_23AA9F3D0(8, v360))
  {
    v173 = sub_23AA9F4C8();
    v174 = sub_23AAA0E10();

    if ((v174 & 1) != 0
      || (v175 = sub_23AA9F4C8(), v176 = sub_23AAA0D58(), v175, (v176 & 1) != 0)
      || (objc_msgSend(v6, sel_isDownloaded) & 1) != 0)
    {
      v177 = v347;
      sub_23AF9CAE0();
      v178 = sub_23B1C5E40();
      v179 = sub_23B1C6A94();
      v180 = sub_23ACD83E4(0);
      if (os_log_type_enabled(v178, v179))
      {
        v181 = (uint8_t *)sub_23AFF5C30();
        *(_QWORD *)&v394[0] = 0;
        v392[0] = 0;
        *(_WORD *)v181 = 0;
        v366[0] = v181 + 2;
        v182 = v361;
        sub_23B0204FC(v180, (uint64_t)v366, (uint64_t)v394, (uint64_t)v392);
        v361 = v182;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v178, v179, "clearing capabilities besides .allowReading for notAuthenticated decoration", v181, 2u);
        sub_23AFF5C38();
      }

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v352 + 8))(v177, v353);
      v183 = (unint64_t)objc_msgSend(v6, sel_capabilities) & 1;
    }
    else
    {
      sub_23AF9CAE0();
      v216 = sub_23B1C5E40();
      v217 = sub_23B1C6A94();
      v218 = sub_23ACD83E4(0);
      if (os_log_type_enabled(v216, v217))
      {
        v219 = (uint8_t *)sub_23AFF5C30();
        *(_QWORD *)&v394[0] = 0;
        v392[0] = 0;
        *(_WORD *)v219 = 0;
        v366[0] = v219 + 2;
        v220 = v361;
        sub_23B0204FC(v218, (uint64_t)v366, (uint64_t)v394, (uint64_t)v392);
        v361 = v220;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v216, v217, "clearing all capabilities for notAuthenticated decoration", v219, 2u);
        sub_23AFF5C38();
      }

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v352 + 8))(v170, v353);
      v242 = sub_23ACD83CC(0);
      v183 = sub_23AFD7BC8(v242);
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v6, sel_setCapabilities_, v183);
  }
  v184 = sub_23AA9F4C8();
  v185 = sub_23AAA0D58();

  if ((v185 & 1) != 0)
  {
    sub_23AF9CAE0();
    v186 = sub_23B1C5E40();
    v187 = sub_23B1C6A94();
    v188 = sub_23ACD83E4(0);
    if (os_log_type_enabled(v186, v187))
    {
      v189 = (uint8_t *)sub_23AFF5C30();
      *(_QWORD *)&v394[0] = 0;
      v392[0] = 0;
      *(_WORD *)v189 = 0;
      v366[0] = v189 + 2;
      v190 = v361;
      sub_23B0204FC(v188, (uint64_t)v366, (uint64_t)v394, (uint64_t)v392);
      v361 = v190;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v186, v187, "Removing item capabilities for trash item", v189, 2u);
      sub_23AFF5C38();
    }

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v352 + 8))(v158, v353);
    v366[0] = objc_msgSend(v6, sel_capabilities);
    sub_23AAB51CC(8);
    objc_msgSend(v6, sel_setCapabilities_, v366[0]);
    v366[0] = objc_msgSend(v6, sel_capabilities);
    sub_23AAB51CC(4);
    objc_msgSend(v6, sel_setCapabilities_, v366[0]);
    v366[0] = objc_msgSend(v6, sel_capabilities);
    sub_23AAB51CC(32);
    objc_msgSend(v6, sel_setCapabilities_, v366[0]);
    v366[0] = objc_msgSend(v6, sel_capabilities);
    sub_23AAB51CC(16);
    objc_msgSend(v6, sel_setCapabilities_, v366[0]);
  }
  if (objc_msgSend(v6, sel_isIgnoreRoot))
    objc_msgSend(v6, sel_setExclusionType_, 1);
  sub_23AA724E8(v485, (uint64_t)v400, (uint64_t *)&unk_2542E1498);
  if (sub_23ADF2D10((uint64_t)v400) != 1)
  {
    memcpy(v401, v400, sizeof(v401));
    sub_23AA724E8((uint64_t)v401, (uint64_t)v392, qword_2542E6E20);
    sub_23AA724E8((uint64_t)v392, (uint64_t)v394, qword_2542E6E20);
    if (sub_23AAFC2A4((uint64_t)v394) != 1)
    {
      memcpy(v417, v394, sizeof(v417));
      sub_23AA724E8((uint64_t)v392, (uint64_t)&v376, qword_2542E6E20);
      sub_23ACFC940((uint64_t)&v376);
      if ((objc_msgSend(v6, sel_isIgnoreRoot) & 1) == 0 && sub_23AA9F3C4(16, *(uint64_t *)&v394[1]))
      {
        objc_msgSend(v6, sel_setExclusionType_, 2);
        objc_msgSend(v6, sel_setExcludedFromSync_, 1);
        objc_msgSend(v6, sel_setIgnoreRoot_, 1);
        v210 = v330;
        sub_23AF9CAE0();
        v211 = sub_23B1C5E40();
        v212 = sub_23B1C6A94();
        v213 = sub_23ACD83E4(0);
        if (os_log_type_enabled(v211, v212))
        {
          v214 = (uint8_t *)sub_23AFF5C30();
          v363[0] = 0;
          v362[0] = 0;
          *(_WORD *)v214 = 0;
          v366[0] = v214 + 2;
          v215 = v361;
          sub_23B0204FC(v213, (uint64_t)v366, (uint64_t)v363, (uint64_t)v362);
          v361 = v215;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23AA66000, v211, v212, "overriding item capabilities for vendor excluded item", v214, 2u);
          sub_23AFF5C38();
        }

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v352 + 8))(v210, v353);
        v229 = objc_msgSend(v6, sel_isFolder);
        objc_msgSend(v6, sel_isExcludedFromSync);
        v230 = (uint64_t)v343;
        sub_23AAA3120((uint64_t)v343);
        v231 = *(_WORD *)(v230 + 10);
        sub_23AA937BC(v230, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        type metadata accessor for FPFileTree();
        swift_dynamicCastClassUnconditional();
        v232 = (void *)swift_unknownObjectUnownedLoadStrong();
        v233 = objc_msgSend(v232, sel_supportsSyncingTrash);

        objc_msgSend(v6, sel_setCapabilities_, sub_23ADAEC30(v229, v231, v233));
      }
      v234 = sub_23AA9F4C8();
      v235 = sub_23AAA0E10();

      if ((v235 & 1) != 0 || (v236 = sub_23AA9F4C8(), v237 = sub_23AAA0D58(), v236, (v237 & 1) != 0))
      {
        v366[0] = objc_msgSend(v6, sel_capabilities);
        sub_23AAB51CC(128);
        objc_msgSend(v6, sel_setCapabilities_, v366[0]);
      }
      v238 = v338 | 0x10;
      if (!sub_23AA9F890())
        goto LABEL_177;
      if ((objc_msgSend(v6, sel_isDownloading) & 1) != 0)
        goto LABEL_174;
      v459 = v394[25];
      v460 = v394[26];
      v461 = *(_QWORD *)&v394[27];
      v455 = v394[21];
      v456 = v394[22];
      v457 = v394[23];
      v458 = v394[24];
      v451 = v394[17];
      v452 = v394[18];
      v453 = v394[19];
      v454 = v394[20];
      v449 = v394[15];
      v450 = v394[16];
      v239 = sub_23AABA6B4();
      sub_23AAFC2BC((uint64_t)&v394[15]);
      v240 = sub_23B006398(24, v239 & 1);
      sub_23AAFC540((uint64_t)&v394[15]);
      if (v240)
      {
LABEL_174:
        v241 = 1;
        goto LABEL_178;
      }
      if (LOBYTE(v394[2]) != 3)
        v241 = sub_23AA9F51C(v394[2], 0);
      else
LABEL_177:
        v241 = 0;
LABEL_178:
      objc_msgSend(v6, sel_setDownloading_, v241);
      if (objc_msgSend(v6, sel_isUploaded))
      {
        v446 = v394[12];
        v447 = v394[13];
        v448 = v394[14];
        v442 = v394[8];
        v443 = v394[9];
        v444 = v394[10];
        v445 = v394[11];
        v438 = v394[4];
        v439 = v394[5];
        v440 = v394[6];
        v441 = v394[7];
        v434 = v394[0];
        v435 = v394[1];
        v436 = v394[2];
        v437 = v394[3];
        v243 = sub_23AABA6B4();
        sub_23ACF4048((uint64_t)v394);
        v244 = sub_23B006430(v238, v243 & 1);
        sub_23ACF410C((uint64_t)v394);
        v245 = !v244;
      }
      else
      {
        v245 = 0;
      }
      objc_msgSend(v6, sel_setUploaded_, v245);
      if ((objc_msgSend(v6, sel_isUploading) & 1) != 0)
      {
        v246 = 1;
      }
      else
      {
        v431 = v394[12];
        v432 = v394[13];
        v433 = v394[14];
        v427 = v394[8];
        v428 = v394[9];
        v429 = v394[10];
        v430 = v394[11];
        v423 = v394[4];
        v424 = v394[5];
        v425 = v394[6];
        v426 = v394[7];
        v419 = v394[0];
        v420 = v394[1];
        v421 = v394[2];
        v422 = v394[3];
        v247 = sub_23AABA6B4();
        sub_23ACF4048((uint64_t)v394);
        v246 = sub_23B006430(v238, v247 & 1);
        sub_23ACF410C((uint64_t)v394);
      }
      objc_msgSend(v6, sel_setUploading_, v246);
      v248 = (objc_msgSend(v6, sel_fp_isLastModifiedByCurrentUser) & 1) != 0
          || sub_23AA9F3D0(8, *(uint64_t *)&v394[16]);
      objc_msgSend(v6, sel_setFp_lastModifiedByCurrentUser_, v248);
      v249 = objc_msgSend(v6, sel_isDownloaded);
      if (v249)
        LOBYTE(v249) = sub_23AA9F56C(24, *(_QWORD *)&v394[16]);
      objc_msgSend(v6, sel_setMostRecentVersionDownloaded_, v249 & 1);
      v250 = (objc_msgSend(v6, sel_isDownloaded) & 1) == 0
          && LOBYTE(v394[2]) != 3
          && sub_23AA9F51C(v394[2], 0);
      objc_msgSend(v6, sel_setFp_isDownloadRequested_, v250);
      v251 = v343;
      sub_23AAA3120((uint64_t)v343);
      v252 = *v251;
      sub_23AA937BC((uint64_t)v251, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      if (sub_23AAA0A58(v252))
      {
        if (objc_msgSend(v6, sel_isDownloaded))
        {
          if ((objc_msgSend(v6, sel_isInPinnedFolder) & 1) == 0)
          {
            type metadata accessor for FPFileTree();
            swift_dynamicCastClassUnconditional();
            v253 = (void *)swift_unknownObjectUnownedLoadStrong();
            v254 = objc_msgSend(v253, sel_provider);

            if (v254)
            {
              v255 = objc_msgSend(v254, sel_descriptor);

              v256 = objc_msgSend(v255, sel_allowsUserControlledEviction);
              if ((v256 & 1) != 0)
              {
                if (!sub_23AA9F51C(v339, 0) && (!sub_23AA9F51C(v339, 5) || (fpfs_supports_purge_reasons() & 1) != 0)
                  || (v257 = v327,
                      sub_23AAA3120((uint64_t)v327),
                      v258 = *v257,
                      sub_23AA937BC((uint64_t)v257, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata), sub_23AAB3058(v258))&& (sub_23AA724E8((uint64_t)v484, (uint64_t)v366, (uint64_t *)&unk_2542E1498), (v372 & 1) == 0)&& v371 > 0)
                {
                  v363[0] = objc_msgSend(v6, sel_capabilities);
                  sub_23AAA0EC8(v366, 64);
                  objc_msgSend(v6, sel_setCapabilities_, v363[0]);
                }
              }
            }
          }
        }
      }
      type metadata accessor for FPFileTree();
      swift_dynamicCastClassUnconditional();
      v259 = (void *)swift_unknownObjectUnownedLoadStrong();
      v260 = objc_msgSend(v259, sel_provider);

      if (v260)
      {
        v261 = objc_msgSend(v260, sel_descriptor);

        v262 = (uint64_t)objc_msgSend(v261, sel_allowsContextualMenuDownloadEntry);
      }
      else
      {
        v262 = 1;
      }
      objc_msgSend(v6, sel_setAllowsContextualMenuDownloadEntry_, v262);
      sub_23AA724E8((uint64_t)v484, (uint64_t)v366, (uint64_t *)&unk_2542E1498);
      if ((v368 & 1) == 0)
      {
        v263 = v370;
        if (v370 != 255)
        {
          v264 = v367;
          v265 = v369;
          objc_msgSend(v6, sel_setFileID_, v367);
          v266 = sub_23AA9F564(16, *(uint64_t *)&v394[1]);
          v267 = sub_23AA9F490(v266);
          if (sub_23AA9F490(*((uint64_t *)&v394[15] + 1)))
          {
            if (!v267)
              goto LABEL_216;
          }
          else if (BYTE8(v394[22]) == 2 || !v267)
          {
            goto LABEL_216;
          }
          v268 = sub_23AA9F57C();
          v418[0] = v264;
          v418[1] = v265;
          v418[2] = v263;
          v418[3] = v268;
          v418[4] = v269;
          v270 = v360;
          v271 = sub_23AA9F3D0(64, v360);
          v272 = sub_23AA9F3D0(2, v270);
          sub_23B053578(v6, (uint64_t)v418, v346, v271, v272);
          swift_bridgeObjectRelease();
        }
      }
LABEL_216:
      v273 = BYTE9(v394[8]);
      v274 = v356;
      if (BYTE9(v394[8]) != 6)
      {
        if (sub_23AA9F51C(SBYTE9(v394[8]), 0))
          objc_msgSend(v6, sel_setUploading_, 0);
        if (sub_23AA9F51C(v273, 4) && (BYTE10(v394[8]) & 1) == 0)
          objc_msgSend(v6, sel_setDownloading_, 0);
      }
      if ((v274 & 1) != 0 && (v275 = *(_QWORD *)&v394[18], *(_QWORD *)&v394[18] != 1))
      {
        v289 = v394[17];
        v290 = *((_QWORD *)&v394[18] + 1);
        v291 = *(_QWORD *)&v394[19];
        v355 = *((_QWORD *)&v394[20] + 1);
        v485 = *(_QWORD *)&v394[20];
        sub_23AA724E8((uint64_t)v375, (uint64_t)v363, &qword_2542E5050);
        if (sub_23AAFCF2C((uint64_t)v363) == 1)
        {
          v353 = 0;
          v354 = 0;
        }
        else
        {
          v353 = v365;
          v354 = v364;
          swift_bridgeObjectRetain();
        }
        sub_23AA9F52C(0, (unint64_t *)&unk_2542E1FD0);
        sub_23AAAE5C0(v289, *((unint64_t *)&v289 + 1), v275, v290, v291);
        sub_23AAAE668(v289, *((unint64_t *)&v289 + 1));
        sub_23AAAE668(v290, v291);
        v292 = sub_23AA9F638(v289, *((unint64_t *)&v289 + 1), v290, v291, v354, v353);
        objc_msgSend(v6, sel_setItemVersion_, v292);

        sub_23AAAE4D0(v289, *((unint64_t *)&v289 + 1), v275, v290, v291);
        v274 = v356;
      }
      else
      {
        v276 = objc_msgSend(v6, sel_itemVersion);
        if (v276)
        {
          v278 = v276;
          sub_23AA724E8((uint64_t)v375, (uint64_t)v363, &qword_2542E5050);
          if (sub_23AAFCF2C((uint64_t)v363) == 1 || (v279 = v365) == 0)
          {

          }
          else
          {
            v485 = v364;
            v355 = sub_23AA9F52C(0, (unint64_t *)&unk_2542E1FD0);
            swift_bridgeObjectRetain();
            v280 = objc_msgSend(v278, sel_contentVersion);
            v281 = sub_23B1C5AD4();
            v283 = v282;

            v284 = objc_msgSend(v278, sel_metadataVersion);
            v285 = sub_23B1C5AD4();
            v287 = v286;

            v274 = v356;
            v288 = sub_23AA9F638(v281, v283, v285, v287, v485, v279);
            objc_msgSend(v6, sel_setItemVersion_, v288);

          }
        }
      }
      if (BYTE8(v394[0]) != 255)
      {
        v277 = *(_QWORD *)&v394[0];
        if (BYTE8(v394[0]) == 1)
        {
          objc_msgSend(v6, sel_setFileID_, *(_QWORD *)&v394[0]);
        }
        else if (!BYTE8(v394[0]))
        {
          objc_msgSend(v6, sel_setDocumentID_, *(_QWORD *)&v394[0]);
        }
        v274 = 1;
      }
      LODWORD(v356) = v274;
      v191 = &selRef_url;
      v293 = objc_msgSend(v6, sel_uploadingError, v277);
      v294 = objc_msgSend(v6, sel_downloadingError);
      v295 = sub_23AA9F3D0(32, v360);
      v296 = v361;
      sub_23AA9F938(v359, v293, v294, v295, (uint64_t)v395);
      if (v296)
      {

        sub_23ADF2D34((uint64_t)v392, (voidsub_23AAAEC3C);
        goto LABEL_241;
      }

      v299 = objc_msgSend(v6, sel_uploadingError);
      if (v299)
      {

      }
      else
      {
        sub_23AA724E8((uint64_t)v395, (uint64_t)&v416, &qword_2542E7700);
        sub_23AA724E8((uint64_t)&v416, (uint64_t)&v480, &qword_2542E7700);
        v300 = v480;
        if (v480)
        {
          v301 = v6;
          sub_23ADF1BFC(&v416);
          sub_23B0A1318(v300, 1, v357, v301);

          sub_23AEB4600(&v416);
        }
      }
      if (objc_msgSend(v6, sel_isExcludedFromSync))
      {
        v302 = objc_msgSend(v6, sel_uploadingError);
        if (v302)
        {
          v303 = v302;
          _s3__C4CodeOMa_1(0);
          v363[0] = -2010;
          sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
          v304 = sub_23B1C575C();

          if ((v304 & 1) != 0)
            objc_msgSend(v6, sel_setExclusionType_, 2);
        }
      }
      v305 = objc_msgSend(v6, sel_downloadingError);
      if (v305)
      {

      }
      else
      {
        sub_23AA724E8((uint64_t)&v396, (uint64_t)&v415, &qword_2542E7700);
        sub_23AA724E8((uint64_t)&v415, (uint64_t)&v481, &qword_2542E7700);
        v306 = v481;
        if (v481)
        {
          v307 = v6;
          sub_23ADF1BFC(&v415);
          sub_23B09E0F4(v306, 1, v357, v307);

          sub_23AEB4600(&v415);
        }
      }
      if (v295 || (v308 = objc_msgSend(v6, sel_uploadingError)) == 0)
      {
        sub_23AAA05A4((uint64_t)v395);
        sub_23ADF2D34((uint64_t)v392, (voidsub_23AAAEC3C);
        v209 = v358;
        LOBYTE(v191) = v356;
        goto LABEL_155;
      }
      v363[0] = v308;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
      v309 = swift_dynamicCast();
      LOBYTE(v191) = v356;
      if ((v309 & 1) == 0)
      {
        sub_23AAA05A4((uint64_t)v395);
        sub_23ADF2D34((uint64_t)v392, (voidsub_23AAAEC3C);
LABEL_154:
        v209 = v358;
        goto LABEL_155;
      }
      v310 = v362[0];
      v311 = objc_msgSend(v362[0], sel_domain);
      v312 = sub_23B1C63E0();
      v314 = v313;

      if (v312 == sub_23B1C63E0() && v314 == v315)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v325 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v325 & 1) == 0)
        {
LABEL_277:
          sub_23AAA05A4((uint64_t)v395);
          sub_23ADF2D34((uint64_t)v392, (voidsub_23AAAEC3C);

          goto LABEL_154;
        }
      }
      v326 = objc_msgSend(v310, sel_code);
      if (v326 == (id)nullsub_1(*MEMORY[0x24BDC81C8]))
      {
        objc_msgSend(v6, sel_setUploadingError_, 0);
        objc_msgSend(v6, sel_setUploading_, 1);
      }
      goto LABEL_277;
    }
  }
  LOBYTE(v191) = v356;
  if ((v356 & 1) != 0)
  {
    v463 = 0;
    memset(v462, 0, sizeof(v462));
    v192 = v360;
    v193 = sub_23AA9F3D0(64, v360);
    v194 = sub_23AA9F3D0(2, v192);
    sub_23B053578(v6, (uint64_t)v462, v346, v193, v194);
  }
  v195 = sub_23AA9F4C8();
  v196 = sub_23AAA0E10();

  if ((v196 & 1) == 0)
  {
    v197 = sub_23AA9F4C8();
    v198 = sub_23AAA0D58();

    if ((v198 & 1) == 0)
    {
      *(_QWORD *)&v394[0] = objc_msgSend(v6, sel_capabilities);
      sub_23AAA0EC8(v366, 128);
      objc_msgSend(v6, sel_setCapabilities_, *(_QWORD *)&v394[0]);
    }
  }
  if ((objc_msgSend(v6, sel_isExcludedFromSync) & 1) != 0)
    goto LABEL_154;
  if (!sub_23AA9F3D0(16, v360))
    goto LABEL_154;
  v199 = objc_msgSend(v6, sel_itemIdentifier);
  v200 = sub_23AA8A0E0();
  v202 = v201;
  v203 = ~v201;

  if (!v203)
    goto LABEL_154;
  v191 = *(_UNKNOWN ***)(*(_QWORD *)(v359 + 32) + 16);
  type metadata accessor for VFSFileTree(0);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  v204 = sub_23B152B08();
  swift_release();
  sub_23AA724E8(v485, (uint64_t)v398, (uint64_t *)&unk_2542E1498);
  v205 = sub_23ADF2D10((uint64_t)v398);
  if (v205 == 1)
    v206 = 0;
  else
    v206 = v398[63];
  v207 = v361;
  v208 = sub_23B04F73C(v200, v202, v206, (v205 == 1) | (v399 & 1), v204);
  if (v207)
  {
    swift_release();
LABEL_241:
    v297 = v358;
    sub_23AAA0A68();
    sub_23AA937BC(v297, type metadata accessor for Signpost);
    return v191 & 1;
  }
  if ((v208 & 1) != 0)
  {
    v361 = 0;
    v223 = v328;
    sub_23AF9CAE0();
    v224 = sub_23B1C5E40();
    v225 = sub_23B1C6A94();
    v226 = sub_23ACD83E4(0);
    if (os_log_type_enabled(v224, v225))
    {
      v227 = (uint8_t *)sub_23AFF5C30();
      *(_QWORD *)&v394[0] = 0;
      v392[0] = 0;
      *(_WORD *)v227 = 0;
      v366[0] = v227 + 2;
      v228 = v361;
      sub_23B0204FC(v226, (uint64_t)v366, (uint64_t)v394, (uint64_t)v392);
      v361 = v228;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v224, v225, "overriding item capabilities for item inside vendor excluded directory", v227, 2u);
      sub_23AFF5C38();
    }

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v352 + 8))(v223, v353);
    objc_msgSend(v6, sel_setExcludedFromSync_, 1);
    v320 = objc_msgSend(v6, sel_isFolder);
    objc_msgSend(v6, sel_isExcludedFromSync);
    v321 = (uint64_t)v343;
    sub_23AAA3120((uint64_t)v343);
    v322 = *(_WORD *)(v321 + 10);
    sub_23AA937BC(v321, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    type metadata accessor for FPFileTree();
    swift_dynamicCastClassUnconditional();
    v323 = (void *)swift_unknownObjectUnownedLoadStrong();
    v324 = objc_msgSend(v323, sel_supportsSyncingTrash);

    objc_msgSend(v6, sel_setCapabilities_, sub_23ADAEC30(v320, v322, v324));
  }
  v209 = v358;
  swift_release();
  LOBYTE(v191) = v356;
LABEL_155:
  sub_23AAA0A68();
  sub_23AA937BC(v209, type metadata accessor for Signpost);
  return v191 & 1;
}

uint64_t sub_23AA9F2C8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  v4 = a1 + a2[7];
  v5 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(a1 + a2[8], v5);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(a1 + a2[33]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_23AAAE53C(*v9, v10);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Signpost(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2542E5368);
}

BOOL sub_23AA9F3C4(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

void sub_23AA9F3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t type metadata accessor for FPFileTree()
{
  uint64_t result;

  result = qword_2542DD500;
  if (!qword_2542DD500)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23AA9F454(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8(a2, a1);
  return a2;
}

BOOL sub_23AA9F490(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_23AA9F49C(uint64_t a1)
{
  sub_23AAAE668(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

id sub_23AA9F4C8()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_itemID);
  v2 = objc_msgSend(v1, sel_identifier);

  return v2;
}

BOOL sub_23AA9F51C(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23AA9F52C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23AA9F564(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_23AA9F570(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

uint64_t sub_23AA9F57C()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_filename);
  sub_23B1C63E0();

  sub_23AAA420C();
  v2 = sub_23B1C6CF8();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_23AA9F638(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v11 = (void *)sub_23B1C5AA4();
  v12 = (void *)sub_23B1C5AA4();
  if (a6)
  {
    v13 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v11, v12, v13);
  sub_23AAAE53C(a3, a4);
  sub_23AAAE53C(a1, a2);

  return v14;
}

uint64_t sub_23AA9F718(char a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  char *v12;
  char v14;
  char v15;
  uint64_t v16;

  v5 = type metadata accessor for ItemMetadata();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - v9;
  v11 = *a2;
  v12 = (char *)&v16 - v9;
  if (v11 == 2)
  {
    sub_23AA9BA80((uint64_t)a2, (uint64_t)v12);
LABEL_4:
    sub_23AA9F854((uint64_t)v10);
    sub_23AA9BA80((uint64_t)a2, (uint64_t)v8);
LABEL_5:
    sub_23AA9F854((uint64_t)v8);
    return 0;
  }
  sub_23AA9BA80((uint64_t)a2, (uint64_t)v12);
  if (v11 == 1)
    goto LABEL_4;
  v14 = v10[*(int *)(v5 + 48)];
  sub_23AA9F854((uint64_t)v10);
  sub_23AA9BA80((uint64_t)a2, (uint64_t)v8);
  if ((v14 & 1) != 0)
    goto LABEL_5;
  v15 = v8[*(int *)(v5 + 44)];
  sub_23AA9F854((uint64_t)v8);
  if ((v15 & 1) != 0)
    return 0;
  if ((a2[*(int *)(v5 + 48)] & 1) != 0)
    return 5;
  else
    return sub_23AEFF068(*(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216), a1 & 1, *a2 == 1);
}

uint64_t sub_23AA9F854(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ItemMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_23AA9F890()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[15];
  _BYTE v10[16];
  _BYTE v11[24];

  v1 = *(_OWORD *)(v0 + 208);
  v9[12] = *(_OWORD *)(v0 + 192);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(v0 + 224);
  v2 = *(_OWORD *)(v0 + 144);
  v9[8] = *(_OWORD *)(v0 + 128);
  v9[9] = v2;
  v3 = *(_OWORD *)(v0 + 176);
  v9[10] = *(_OWORD *)(v0 + 160);
  v9[11] = v3;
  v4 = *(_OWORD *)(v0 + 80);
  v9[4] = *(_OWORD *)(v0 + 64);
  v9[5] = v4;
  v5 = *(_OWORD *)(v0 + 112);
  v9[6] = *(_OWORD *)(v0 + 96);
  v9[7] = v5;
  v6 = *(_OWORD *)(v0 + 16);
  v9[0] = *(_OWORD *)v0;
  v9[1] = v6;
  v7 = *(_OWORD *)(v0 + 48);
  v9[2] = *(_OWORD *)(v0 + 32);
  v9[3] = v7;
  sub_23AA724E8((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_2542E7420);
  sub_23AA724E8((uint64_t)v10, (uint64_t)v11, (uint64_t *)&unk_2542E7420);
  return v11[8] != 255 && *(_QWORD *)(v0 + 240) != 0;
}

void sub_23AA9F938(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  int v45;
  unsigned int v46;
  void *v47;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void *v58;
  BOOL v59;
  char v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  char v73;
  unsigned int v74;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  _QWORD v81[2];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  void *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  _BYTE v101[128];
  uint64_t v102[20];
  _QWORD v103[16];
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;

  v7 = v6;
  v8 = (_QWORD *)v5;
  v96 = a1;
  v13 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v13);
  v92 = (char *)v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C5474();
  v93 = *(_QWORD *)(v15 - 8);
  v94 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v91 = (char *)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(unsigned __int8 *)(v5 + 8);
  v97 = *(_QWORD *)(v5 + 232);
  if (v17 == 255)
  {
    v25 = a3;
    v26 = a3;
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(v5 + 16);
  v19 = v8[3];
  v107 = *v8;
  v108 = v17;
  v20 = a3;
  v21 = a3;
  if (a2)
  {
LABEL_11:
    v27 = a2;
    v99 = 0;
    v98 = 0x200000046;
    goto LABEL_12;
  }
  v84 = v19;
  if (qword_2542E7190 != -1)
    swift_once();
  if ((qword_2542EDE38 | 0x10) & v84 | v18 & 0x51)
    v22 = 70;
  else
    v22 = 3;
  v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(**(_QWORD **)(v96 + 24) + 352))(&v107, v22);
  if (v6)
  {

    v24 = 0;
LABEL_28:

    return;
  }
  v83 = 0;
  v41 = *(_QWORD *)(v23 + 16);
  if (v41)
  {
    v81[1] = v23;
    v82 = v18 & 0x51;
    v86 = a4;
    v87 = a5;
    a2 = 0;
    v99 = 0;
    v42 = (_QWORD *)(v23 + 64);
    v98 = 0x200000046;
    v90 = a3;
    v95 = v8;
    while (1)
    {
      if (*((_BYTE *)v42 - 16) != 1)
        goto LABEL_35;
      v100 = a2;
      v43 = (void *)*(v42 - 4);
      v44 = *((unsigned __int8 *)v42 - 24);
      v45 = *((unsigned __int8 *)v42 - 23);
      v46 = *((unsigned __int8 *)v42 - 22);
      a2 = (void *)v42[3];
      v47 = (void *)v42[6];
      if (v46 < 4 || v46 == 6)
      {
        v85 = *v42;
        v49 = v47;
        sub_23AA88218(v43, v44, v45);
        sub_23AA88218(v43, v44, v45);
        v50 = a2;
        swift_bridgeObjectRetain();
        v51 = a2;
        swift_bridgeObjectRetain();
        sub_23AA862DC(v43, v44, v45);
        if (a2)
        {
          v89 = v49;
          LODWORD(v88) = v45;
          v104 = a2;
          v52 = a2;
          v53 = a2;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
          if ((swift_dynamicCast() & 1) != 0)
          {
            sub_23AA724E8((uint64_t)v103, (uint64_t)v101, (uint64_t *)&unk_2542E0950);
            sub_23AA724E8((uint64_t)v101, (uint64_t)v102, (uint64_t *)&unk_2542E0950);
            if (sub_23AC050A4((uint64_t)v102) == 11)
            {
              v54 = v43;
              v55 = v44;
              v56 = v88;
LABEL_56:
              sub_23AA862DC(v54, v55, v56);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_33;
            }
            sub_23AEB3CD8((uint64_t)v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AC04FC4);
          }
          v60 = v88;
          if (!v100)
          {
            swift_getErrorValue();
            if (sub_23AB6E894(v102[17]))
            {
              sub_23AA862DC(v43, v44, v60);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a2 = 0;
            }
            else
            {
              v67 = a2;
              sub_23AA88218(v43, v44, v60);

              swift_bridgeObjectRelease();
              sub_23AA88218(v43, v44, v60);
              sub_23AA862DC(v43, v44, v60);

              sub_23AA862DC(v43, v44, v60);
              swift_bridgeObjectRelease();
              sub_23AA862DC(v43, v44, v60);
              v98 = v46;
              v99 = v85;
            }
            goto LABEL_69;
          }
          v54 = v43;
          v55 = v44;
          v56 = v88;
          goto LABEL_56;
        }
        sub_23AA88218(v43, v44, v45);
        sub_23AA862DC(v43, v44, v45);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v46 == 23)
        {
          v57 = *v42;
          v58 = v100;
          if ((qword_2542EDE38 | 0x10) & v84 | v82)
            v59 = v100 == 0;
          else
            v59 = 0;
          if (!v59)
          {
            sub_23AA88218((id)*(v42 - 4), *((unsigned __int8 *)v42 - 24), *((_BYTE *)v42 - 23));
            a2 = v58;
            goto LABEL_67;
          }
          if (a2)
          {
            v104 = (void *)v42[3];
            v61 = v47;
            v62 = a2;
            sub_23AA88218(v43, v44, v45);
            v63 = a2;
            LODWORD(v88) = v45;
            sub_23AA88218(v43, v44, v45);
            v64 = a2;
            swift_bridgeObjectRetain();
            v65 = a2;
            v89 = v61;
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
            if ((swift_dynamicCast() & 1) == 0)
              goto LABEL_63;
            sub_23AA724E8((uint64_t)v103, (uint64_t)v101, (uint64_t *)&unk_2542E0950);
            sub_23AA724E8((uint64_t)v101, (uint64_t)v102, (uint64_t *)&unk_2542E0950);
            if (sub_23AC050A4((uint64_t)v102))
            {
              sub_23AEB3CD8((uint64_t)v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AC04FC4);
LABEL_63:
              LOBYTE(v45) = v88;
              v66 = a2;

              sub_23AA88218(v43, v44, v45);
              swift_bridgeObjectRelease();
              sub_23AA88218(v43, v44, v45);
              sub_23AA862DC(v43, v44, v45);

              sub_23AA862DC(v43, v44, v45);
              swift_bridgeObjectRelease();
              sub_23AA862DC(v43, v44, v45);
              v98 = 23;
LABEL_68:
              sub_23AA862DC(v43, v44, v45);
              v99 = v57;
LABEL_69:
              a3 = v90;
              goto LABEL_34;
            }
            nullsub_1(v102);

            swift_bridgeObjectRelease();
            sub_23AEB3CD8((uint64_t)v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AC04FC4);
            LOBYTE(v45) = v88;
            sub_23AA862DC(v43, v44, v88);

            swift_bridgeObjectRelease();
            a2 = 0;
          }
          else
          {
            sub_23AA88218((id)*(v42 - 4), *((unsigned __int8 *)v42 - 24), *((_BYTE *)v42 - 23));
          }
LABEL_67:
          v57 = v99;
          goto LABEL_68;
        }
        sub_23AA88218((id)*(v42 - 4), *((unsigned __int8 *)v42 - 24), *((_BYTE *)v42 - 23));
      }
      sub_23AA862DC(v43, v44, v45);
LABEL_33:
      a3 = v90;
      a2 = v100;
LABEL_34:
      v8 = v95;
LABEL_35:
      v42 += 11;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        v7 = v83;
        a5 = v87;
        a4 = v86;
        goto LABEL_12;
      }
    }
  }
  swift_bridgeObjectRelease();
  a2 = 0;
  v99 = 0;
  v98 = 0x200000046;
  v7 = v83;
LABEL_12:
  v28 = (void *)v8[30];
  if (v28)
  {
    v29 = v7;
    v30 = v8[31];
    v31 = v8[32];
    v103[0] = v8[30];
    v32 = v28;

    if (a3)
    {

      v96 = 0;
      LODWORD(v95) = 70;
      goto LABEL_16;
    }
    if (qword_2542E7190 != -1)
      swift_once();
    if ((qword_2542EDE38 | 0x10) & v31 | v30 & 0x51)
      v39 = 70;
    else
      v39 = 3;
    v40 = (*(uint64_t (**)(_QWORD *, uint64_t))(**(_QWORD **)(v96 + 24) + 344))(v103, v39);
    if (v29)
    {

      v24 = a2;
      goto LABEL_28;
    }
    v83 = 0;
    v68 = *(_QWORD *)(v40 + 16);
    if (!v68)
    {

      swift_bridgeObjectRelease();
      a3 = 0;
      v96 = 0;
      LODWORD(v95) = 70;
      goto LABEL_16;
    }
    a3 = 0;
    v96 = 0;
    v82 = v40;
    v69 = (_QWORD *)(v40 + 64);
    LODWORD(v95) = 70;
    v87 = a5;
    v86 = a4;
    v100 = a2;
    v89 = v32;
    while (1)
    {
      if (*((_BYTE *)v69 - 16) != 1)
        goto LABEL_75;
      v70 = a3;
      v71 = (void *)*(v69 - 4);
      v72 = *((unsigned __int8 *)v69 - 24);
      v73 = *((_BYTE *)v69 - 23);
      v74 = *((unsigned __int8 *)v69 - 22);
      if (v74 > 0x17 || ((1 << v74) & 0x80004F) == 0)
      {
        sub_23AB5692C((id)*(v69 - 4), *((unsigned __int8 *)v69 - 24), *((_BYTE *)v69 - 23));
        sub_23AB7C6B4(v71, v72, v73);
      }
      else
      {
        LODWORD(v90) = *((unsigned __int8 *)v69 - 22);
        v88 = *v69;
        v76 = (void *)v69[3];
        sub_23AB5692C(v71, v72, v73);
        sub_23AB5692C(v71, v72, v73);
        v77 = v76;
        swift_bridgeObjectRetain();
        v78 = v76;
        swift_bridgeObjectRetain();
        sub_23AB7C6B4(v71, v72, v73);
        if (!v70)
        {
          if (v76)
          {
            swift_getErrorValue();
            v84 = v106;
            v85 = v105;
            v79 = v76;
            if (sub_23AB6E894(v84))
            {
              sub_23AB7C6B4(v71, v72, v73);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              a3 = 0;
            }
            else
            {
              sub_23AB5692C(v71, v72, v73);
              v80 = v76;

              swift_bridgeObjectRelease();
              sub_23AB5692C(v71, v72, v73);
              sub_23AB7C6B4(v71, v72, v73);

              sub_23AB7C6B4(v71, v72, v73);
              swift_bridgeObjectRelease();
              sub_23AB7C6B4(v71, v72, v73);
              HIDWORD(v98) = 1;
              a3 = v76;
              v96 = v88;
              LODWORD(v95) = (_DWORD)v90;
            }
          }
          else
          {
            sub_23AB5692C(v71, v72, v73);
            sub_23AB7C6B4(v71, v72, v73);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AB7C6B4(v71, v72, v73);
            a3 = 0;
          }
          a5 = v87;
          LOBYTE(a4) = v86;
          goto LABEL_74;
        }
        sub_23AB7C6B4(v71, v72, v73);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a5 = v87;
        LOBYTE(a4) = v86;
      }
      a3 = v70;
LABEL_74:
      a2 = v100;
      v32 = v89;
LABEL_75:
      v69 += 11;
      if (!--v68)
      {

        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }

  v96 = 0;
  LODWORD(v95) = 70;
LABEL_16:
  if (!a2 && (a4 & 1) != 0 && (v97 & 3) != 0)
  {
    sub_23B1C53C0();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v33 = v91;
    v34 = v94;
    sub_23B1C5864();
    a2 = (void *)sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v33, v34);

  }
  v35 = a2;
  v36 = a3;

  v37 = v99;
  *(_QWORD *)a5 = a2;
  *(_QWORD *)(a5 + 8) = v37;
  *(_BYTE *)(a5 + 16) = v98;
  *(_BYTE *)(a5 + 17) = BYTE4(v98);
  v38 = v96;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = v38;
  *(_BYTE *)(a5 + 40) = (_BYTE)v95;
  *(_BYTE *)(a5 + 41) = 2;
}

uint64_t sub_23AAA05A4(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);

  return a1;
}

void sub_23AAA05D8()
{
  swift_retain();
  sub_23AAA0690();
}

uint64_t sub_23AAA060C(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_23AAA0634()
{
  swift_retain();
  sub_23AAA0690();
}

uint64_t sub_23AAA0668(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_23AAA0690()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
}

uint64_t sub_23AAA0768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  swift_getTupleTypeMetadata2();
  *(_QWORD *)(v4 - 72) = sub_23B1C6758();
  v11 = v1;
  v12 = v3;
  v13 = v0;
  v14 = v2;
  v15 = v7;
  v16 = v8;
  sub_23AAA0824((uint64_t)sub_23AA944E4, (uint64_t)&v10);
  v5 = *(_QWORD *)(v4 - 72);
  if (v9)
    swift_bridgeObjectRelease();
  return v5;
}

void type metadata accessor for ThrottlingKey()
{
  JUMPOUT(0x23B861318);
}

void sub_23AAA0824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = *(void **)(v2 + 24);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 32) = a2;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = sub_23AA94384;
  v7[3] = v6;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v7;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_116;
  v8 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v9 = objc_msgSend(v5, sel_fetchSwift_error_, v8, aBlock);
  _Block_release(v8);
  v10 = aBlock[0];
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  if (v9)
  {
    if (objc_msgSend(v9, sel_next))
    {
      MEMORY[0x23B8601A8]();
      sub_23AB786C4();
    }
    swift_release();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
  }
}

BOOL sub_23AAA0A58(char a1)
{
  return a1 != 2;
}

uint64_t sub_23AAA0A68()
{
  sub_23B1C6BD8();
  type metadata accessor for Signpost(0);
  return sub_23B1C5DA4();
}

uint64_t sub_23AAA0AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;

  v29 = a5;
  v30 = a1;
  LODWORD(v31) = a3;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C5DC8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a4, (uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v20 = a7;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  }
  v21 = (char)v31;
  v22 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(a8, v19, v16);
  v23 = type metadata accessor for Signpost(0);
  *(_QWORD *)(a8 + *(int *)(v23 + 20)) = a7;
  v24 = a8 + *(int *)(v23 + 24);
  *(_QWORD *)v24 = v22;
  *(_QWORD *)(v24 + 8) = a2;
  *(_BYTE *)(v24 + 16) = v21;
  if (a6)
  {
    v31 = a7;
    swift_bridgeObjectRetain();
    sub_23B1C6BE4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_23B1CA760;
    *(_QWORD *)(v25 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v25 + 64) = sub_23AAA0D14();
    *(_QWORD *)(v25 + 32) = v29;
    *(_QWORD *)(v25 + 40) = a6;
    sub_23B1C5D98();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = a7;
    sub_23B1C6BE4();
    sub_23B1C5DA4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

unint64_t sub_23AAA0D14()
{
  unint64_t result;

  result = qword_2542E7448;
  if (!qword_2542E7448)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2542E7448);
  }
  return result;
}

uint64_t sub_23AAA0D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  if (qword_2542E1FE8 != -1)
    swift_once();
  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23AAA0E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  if (qword_2542E1FE0 != -1)
    swift_once();
  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_23AAA0ECC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_23AAA0EF8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  int v30;
  uint64_t v32;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(a1, AssociatedTypeWitness);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = (v5 + a1 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v4(v6, AssociatedTypeWitness);
  v7 = v6 + v5;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  LODWORD(v4) = *(_DWORD *)(v9 + 80) & 0xF8;
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v7 + (v4 | v12 | 7)) & ~(unint64_t)(v4 | v12 | 7);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v13, v8);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))((v12 + 8 + ((v14 + v13) & 0xFFFFFFFFFFFFFFF8)) & ~v12, v10);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = v13
      + ((((v15 + ((v12 + 8 + (v14 & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v17 = sub_23B1C5BDC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v32 = (v16 + (v19 | 7) + 32) & ~(v19 | 7);
  v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v20((v19 + 12 + v32) & ~v19, v17);
  v21 = *(_QWORD *)(v18 + 64);
  v22 = (v21 + v19 + ((v19 + 12 + v32) & ~v19)) & ~v19;
  v20(v22, v17);
  swift_bridgeObjectRelease();
  v23 = (v19
       + 10
       + ((((((v21 + 12 + v22) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v19;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17))
    v20(v23, v17);
  if (*(_DWORD *)(v18 + 84))
    v24 = v21;
  else
    v24 = v21 + 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = (uint64_t *)((((((v23 + v24 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  if ((v26 & 0x3000000000000000) == 0)
    sub_23AAAE53C(*v25, v26);
  swift_bridgeObjectRelease();
  v27 = v32
      + ((((((((((((v19
                  + 10
                  + ((((((v21 + 12 + ((v21 + v19 + ((v19 + 12) & ~v19)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v19)
                + v24
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8);
  v28 = v27 + 16;
  v29 = *(void **)(v27 + 32);
  v30 = -1;
  if ((unint64_t)v29 < 0xFFFFFFFF)
    v30 = (int)v29;
  if (v30 - 1 < 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v28 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_23AAA12F0(*(_QWORD *)((((v28 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v28 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23AAA12B0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AAA12F0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if ((a2 >> 62) <= 1)
    return swift_release();
  return result;
}

uint64_t sub_23AAA1310@<X0>(id a1@<X1>, uint64_t a2@<X0>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _OWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  _QWORD *v30;

  objc_msgSend(a1, sel_columns);
  sub_23AAA5D34();
  v7 = (_QWORD *)sub_23B1C6230();
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
  {
LABEL_22:
    sub_23AAA7270((uint64_t)v7, a4);
    return swift_bridgeObjectRelease();
  }
  v25 = a4;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (!__OFADD__(a3, (_DWORD)v9))
  {
    v10 = *(unsigned __int8 *)(a2 + v9 + 32);
    sub_23AAA21EC(*(unsigned __int8 *)(a2 + v9 + 32));
    if (v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (!v28)
    {
      sub_23AA8A05C((uint64_t)&v27, qword_2542E5640);
      goto LABEL_19;
    }
    sub_23AAA159C(&v27, v29);
    sub_23AAA15AC((uint64_t)v29, (uint64_t)&v27);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = v7;
    v13 = sub_23AAA15E8(v10);
    v14 = v7[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      goto LABEL_27;
    v17 = v12;
    if (v7[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v7 = v30;
        if ((v12 & 1) == 0)
          goto LABEL_16;
      }
      else
      {
        sub_23B188DE4();
        v7 = v30;
        if ((v17 & 1) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_23AD14280(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_23AAA15E8(v10);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_29;
      v13 = v18;
      v7 = v30;
      if ((v17 & 1) == 0)
      {
LABEL_16:
        v7[(v13 >> 6) + 8] |= 1 << v13;
        *(_BYTE *)(v7[6] + v13) = v10;
        sub_23AAA159C(&v27, (_OWORD *)(v7[7] + 32 * v13));
        v21 = v7[2];
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
          goto LABEL_28;
        v7[2] = v23;
        goto LABEL_18;
      }
    }
    v20 = (_OWORD *)(v7[7] + 32 * v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    sub_23AAA159C(&v27, v20);
LABEL_18:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
LABEL_19:
    if (v9 == 0x7FFFFFFF)
      goto LABEL_26;
    if (v8 == ++v9)
    {
      swift_bridgeObjectRelease();
      a4 = v25;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

_OWORD *sub_23AAA159C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23AAA15AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23AAA15E8(uint64_t a1)
{
  return sub_23AAA15FC(a1, (void (*)(_BYTE *, uint64_t))sub_23AAA1660, sub_23AAA1770);
}

uint64_t sub_23AAA15FC(uint64_t a1, void (*a2)(_BYTE *, uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  _BYTE v8[72];

  sub_23B1C74A8();
  a2(v8, a1);
  v5 = sub_23B1C74E4();
  return a3(a1, v5);
}

void sub_23AAA1660(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

void sub_23AAA1690()
{
  char v0;
  uint64_t v1;

  sub_23B1C74B4();
  sub_23AAA1FDC(v1, v0);
}

uint64_t sub_23AAA16B8()
{
  sub_23B1C74B4();
  sub_23B1C64A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AAA1714()
{
  unsigned __int8 v0;

  return ((uint64_t (*)())((char *)sub_23AAA1734 + 4 * byte_23B1D7FF1[v0 - 48]))();
}

uint64_t sub_23AAA1734()
{
  return sub_23B1C74B4();
}

uint64_t sub_23AAA1770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X10 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

void sub_23AAA1FDC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23AAA2010()
{
  unsigned __int8 v0;
  uint64_t v1;

  v1 = sub_23B1C74B4();
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)sub_23AAA2048 + 4 * byte_23B1D7FDE[v0]))(v1, 0x64695F656C6966);
}

uint64_t sub_23AAA2048()
{
  sub_23B1C64A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AAA2174()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(11);
}

uint64_t sub_23AAA217C()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(12);
}

uint64_t sub_23AAA2184()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(13);
}

uint64_t sub_23AAA218C()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(14);
}

uint64_t sub_23AAA2194()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(15);
}

uint64_t sub_23AAA219C()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(16);
}

uint64_t sub_23AAA21A4()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(1);
}

uint64_t sub_23AAA21AC()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(2);
}

uint64_t sub_23AAA21B4()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(3);
}

uint64_t sub_23AAA21BC()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(4);
}

uint64_t sub_23AAA21C4()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(5);
}

uint64_t sub_23AAA21CC()
{
  return ((uint64_t (*)(uint64_t))sub_23B1C74B4)(6);
}

void sub_23AAA21EC(int a1)
{
  uint64_t v2;

  v2 = sub_23B1C6F74();
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

void sub_23AAA2270()
{
  char v0;

  sub_23AAA254C(v0);
}

void sub_23AAA254C(char a1)
{
  __asm { BR              X10 }
}

void sub_23AAA2598(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  _OWORD *v23;
  void *v24;
  char v25;

  if ((objc_msgSend(v24, sel_isNullAtIndex_, v22) & 1) != 0)
  {
    *v23 = 0u;
    v23[1] = 0u;
  }
  else
  {
    sub_23AD7FBC8(v25);
  }
}

void sub_23AAA2B20(char a1)
{
  __asm { BR              X10 }
}

void sub_23AAA2B68(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _OWORD *v21;
  void *v22;
  char v23;

  if ((objc_msgSend(v22, sel_isNullAtIndex_, v20) & 1) != 0)
  {
    *v21 = 0u;
    v21[1] = 0u;
  }
  else
  {
    sub_23AD7FBC8(v23);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for Filename(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FPItemVersionData(uint64_t a1)
{
  return sub_23AAAE53C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_23AAA3120@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  id v29;
  int v30;
  unsigned int v31;
  int v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _BYTE *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  _BYTE *v50;
  void (*v51)(_BYTE *, uint64_t);
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  int v55;
  id v56;
  unsigned __int8 v57;
  uint64_t v58;
  id v59;
  id v60;
  void *v61;
  uint64_t v62;
  id v63;
  void *v64;
  _BYTE *v65;
  uint64_t result;
  double v67;
  id v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  _QWORD *v73;
  id v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  char *v82;
  _BYTE v83[12];
  _DWORD v84[3];
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  unsigned int v99;
  uint64_t v100;
  id v101;

  v2 = v1;
  v91 = a1;
  v3 = sub_23B1C5E4C();
  *(_QWORD *)&v84[1] = *(_QWORD *)(v3 - 8);
  v85 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v86 = &v83[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_23B1C5BDC();
  v93 = *(_QWORD *)(v5 - 8);
  v94 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v89 = &v83[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v83[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = &v83[-v12];
  v14 = MEMORY[0x24BDAC7A8](v11);
  v96 = &v83[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v83[-v17];
  v19 = MEMORY[0x24BDAC7A8](v16);
  v92 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))&v83[-v20];
  MEMORY[0x24BDAC7A8](v19);
  v22 = &v83[-v21];
  v23 = sub_23B1C5D8C();
  v87 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = &v83[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v24);
  v28 = &v83[-v27];
  v29 = objc_msgSend(v1, sel_documentSize);
  if (!v29)
  {
    sub_23AA9F52C(0, (unint64_t *)&qword_2542E7568);
    v29 = (id)sub_23B1C6C38();
  }
  v90 = sub_23B1C746C();

  v30 = fpfs_supports_vfs_ignore_permissions_iopolicy();
  v95 = v13;
  v97 = v10;
  v98 = v22;
  v100 = v23;
  v88 = v28;
  if (v30)
    v31 = (objc_msgSend(v2, sel_fileSystemFlags) << 7) & 0x100;
  else
    v31 = 292;
  v32 = (32 * objc_msgSend(v2, sel_fileSystemFlags)) & 0x80;
  v99 = v32 & 0xFFFFFFBF | ((objc_msgSend(v2, sel_fileSystemFlags) & 1) << 6) | v31;
  v33 = objc_msgSend(v2, sel_itemID);
  v34 = objc_msgSend(v33, sel_identifier);

  v35 = sub_23B1C63E0();
  v37 = v36;
  if (v35 == sub_23B1C63E0() && v37 == v38)
    goto LABEL_8;
  v40 = sub_23B1C7388();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = v94;
  if ((v40 & 1) != 0)
    goto LABEL_10;
  v43 = objc_msgSend(v2, sel_itemID);
  v34 = objc_msgSend(v43, sel_identifier);

  v44 = sub_23B1C63E0();
  v46 = v45;
  if (v44 == sub_23B1C63E0() && v46 == v47)
  {
LABEL_8:

    swift_bridgeObjectRelease_n();
    v39 = v94;
LABEL_10:
    v41 = (uint64_t)v98;
    goto LABEL_11;
  }
  v48 = sub_23B1C7388();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v48 & 1) == 0)
  {
    v41 = (uint64_t)v98;
    v39 = v94;
    v42 = v26;
    goto LABEL_13;
  }
  v41 = (uint64_t)v98;
  v39 = v94;
LABEL_11:
  v42 = v26;
  if (!v99)
    v99 = v31 | 0x1C0;
LABEL_13:
  if ((objc_msgSend(v2, sel_isPackage) & 1) != 0)
  {
    LODWORD(v100) = 0;
  }
  else if ((objc_msgSend(v2, sel_isFolder) & 1) != 0)
  {
    LODWORD(v100) = 1;
  }
  else
  {
    v49 = objc_msgSend(v2, sel_contentType);
    v50 = v88;
    sub_23B1C5D14();

    sub_23B1C5CF0();
    LOBYTE(v49) = sub_23B1C5D5C();
    v51 = *(void (**)(_BYTE *, uint64_t))(v87 + 8);
    v52 = v42;
    v53 = v42;
    v54 = v100;
    v51(v52, v100);
    v51(v50, v54);
    if ((v49 & 1) != 0)
    {
      v55 = 2;
    }
    else
    {
      v56 = objc_msgSend(v2, sel_contentType);
      sub_23B1C5D14();

      sub_23B1C5D68();
      LOBYTE(v56) = sub_23B1C5D5C();
      v51(v53, v54);
      v51(v50, v54);
      if ((v56 & 1) != 0)
        v55 = 3;
      else
        v55 = 0;
    }
    LODWORD(v100) = v55;
    v39 = v94;
  }
  v57 = objc_msgSend(v2, sel_isPackage);
  v58 = v93;
  if (((v57 & 1) != 0 || objc_msgSend(v2, sel_isFolder))
    && (v59 = objc_msgSend(v2, sel_childItemCount), v59, !v59))
  {
    LODWORD(v87) = 0;
    LODWORD(v88) = 65533;
  }
  else
  {
    v60 = objc_msgSend(v2, sel_childItemCount);
    if (v60)
    {
      v61 = v60;
      LODWORD(v88) = objc_msgSend(v60, sel_unsignedIntValue);

      LODWORD(v87) = 0;
    }
    else
    {
      LODWORD(v88) = 0;
      LODWORD(v87) = 1;
    }
  }
  v62 = (uint64_t)v92;
  v63 = objc_msgSend(v2, sel_creationDate);
  if (v63)
  {
    v64 = v63;
    sub_23B1C5BAC();

    v65 = *(_BYTE **)(v58 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v65)(v62, 0, 1, v39);
  }
  else
  {
    v65 = *(_BYTE **)(v58 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v62, 1, 1, v39);
  }
  sub_23AA724E8(v62, v41, (uint64_t *)&unk_2542E4310);
  sub_23AA8EFC8(v41, (uint64_t)v18, (uint64_t *)&unk_2542E4310);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v58 + 48))(v18, 1, v39) == 1)
  {
    sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E4310);
LABEL_48:
    v75 = objc_msgSend(v2, sel_extendedAttributes);
    if (v75
      && (v76 = v75,
          v77 = sub_23B1C620C(),
          v76,
          v78 = *(_QWORD *)(v77 + 16),
          swift_bridgeObjectRelease(),
          v78)
      && (v79 = objc_msgSend(v2, sel_extendedAttributes)) != 0)
    {
      v80 = v79;
      v81 = sub_23B1C620C();

    }
    else
    {
      v81 = 0;
    }
    v82 = (char *)&loc_23AAA3A28 + dword_23ADAB614[v100];
    v94 = v81;
    __asm { BR              X10 }
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v58 + 32))(v89, v18, v39);
  result = sub_23B1C5B94();
  if ((~*(_QWORD *)&v67 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v67 <= -9.22337204e18)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v67 < 9.22337204e18)
  {
    if (fpfs_is_busy_date())
    {
      v92 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65;
      v68 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v69 = v2;
      v70 = sub_23B1C5E40();
      v71 = sub_23B1C6A94();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        v73 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v72 = 138543362;
        v101 = v69;
        v74 = v69;
        v39 = v94;
        sub_23B1C6CBC();
        *v73 = v69;

        v41 = (uint64_t)v98;
        _os_log_impl(&dword_23AA66000, v70, v71, "🏗 Dropping busy date for remotely provided file %{public}@", v72, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v73, -1, -1);
        MEMORY[0x23B8614BC](v72, -1, -1);
      }
      else
      {

      }
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)&v84[1] + 8))(v86, v85);
      (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v89, v39);
      sub_23AA8A05C(v41, (uint64_t *)&unk_2542E4310);
      v92(v41, 1, 1, v39);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v89, v39);
    }
    goto LABEL_48;
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ItemMetadata()
{
  uint64_t result;

  result = qword_2542E4698;
  if (!qword_2542E4698)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23AAA3E18(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23AAAE53C(a1, a2);
  return a1;
}

uint64_t sub_23AAA3E2C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23AAAE668(a1, a2);
  return a1;
}

uint64_t sub_23AAA3E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AAA3E88(unsigned __int8 a1)
{
  void *v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v5[248];
  _BYTE v6[208];
  uint64_t v7;

  if (a1 - 1 < 2)
    return 0;
  result = (uint64_t)objc_msgSend(v1, sel_isUploaded);
  if (!(_DWORD)result)
    return result;
  if ((objc_msgSend(v1, sel_isExcludedFromSync) & 1) != 0
    || (objc_msgSend(v1, sel_capabilities) & 0x40) == 0)
  {
    return 0;
  }
  sub_23AAA4B74((uint64_t)v5);
  sub_23AA724E8((uint64_t)v5, (uint64_t)v6, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v6) != 1)
  {
    v3 = v7;
    sub_23AAA5B2C((uint64_t)v5);
    if (v3 != 500)
      goto LABEL_10;
    return 0;
  }
  v3 = 0;
LABEL_10:
  if (v3 == 1002 || v3 == 3)
    return 5;
  else
    return 4;
}

uint64_t sub_23AAA3F54(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  if (!a1)
    return 0;
  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_4;
LABEL_22:
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      return v4;
    goto LABEL_23;
  }
LABEL_21:
  v2 = sub_23B1C7088();
  if (!v2)
    goto LABEL_22;
LABEL_4:
  v20 = MEMORY[0x24BEE4AF8];
  sub_23AAA49DC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = 0;
    v4 = v20;
    do
    {
      if (v2 == v3)
      {
        __break(1u);
        goto LABEL_21;
      }
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x23B85F860](v3, a1);
      else
        v5 = *(id *)(a1 + 8 * v3 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_label);
      sub_23B1C63E0();

      v19 = sub_23AAA420C();
      v18 = MEMORY[0x24BEE0D00];
      v8 = sub_23B1C6CF8();
      v10 = v9;
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(v6, sel_color, v18, v19, v19, v19);
      if ((v11 & 0x80000000) != 0)
        goto LABEL_27;
      v12 = v11;
      if (v11 >= 0x100)
        goto LABEL_27;

      if ((v12 & 0xFE) != 0)
        v13 = v12;
      else
        v13 = 1;
      v15 = *(_QWORD *)(v20 + 16);
      v14 = *(_QWORD *)(v20 + 24);
      if (v15 >= v14 >> 1)
        sub_23AAA49DC(v14 > 1, v15 + 1, 1);
      ++v3;
      *(_QWORD *)(v20 + 16) = v15 + 1;
      v16 = v20 + 24 * v15;
      *(_QWORD *)(v16 + 32) = v8;
      *(_QWORD *)(v16 + 40) = v10;
      *(_BYTE *)(v16 + 48) = v13;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v20 + 16))
      return v4;
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
LABEL_27:
  result = sub_23B1C7040();
  __break(1u);
  return result;
}

unint64_t sub_23AAA420C()
{
  unint64_t result;

  result = qword_2542E5490;
  if (!qword_2542E5490)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2542E5490);
  }
  return result;
}

uint64_t sub_23AAA4250(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v5 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + ((v4 + (v7 | 7) + 16) & ~v7 & 0xFFFFFFFFFFFFFFF8) + 12) & ~v7;
  v9 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v9(v8, v5);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = (v10 + v7 + v8) & ~v7;
  v9(v11, v5);
  swift_bridgeObjectRelease();
  v12 = (v7
       + ((((((v10 + v11 + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v7;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5))
    v9(v12, v5);
  v13 = v10 + v12;
  if (!*(_DWORD *)(v6 + 84))
    ++v13;
  v14 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(((v14 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  if ((v16 & 0x3000000000000000) == 0)
    sub_23AAAE53C(*v15, v16);
  return swift_bridgeObjectRelease();
}

_QWORD *_s9libfssync25JobLockRuleAssociatedJobsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_23AAA43E4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t result;
  uint64_t v10;

  v4 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23B1C5474();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (unint64_t)objc_msgSend(a1, sel_longAtIndex_, a2);
  if (result == 0x8000000000000000)
    return 1;
  if (result && (result & 0x8000000000000000) != 0)
  {
    result = -(uint64_t)result;
    if (HIDWORD(result))
    {
      sub_23B1C53FC();
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AB22974();
      sub_23B1C5864();
      sub_23B1C5354();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_23AAA4548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  const void *v32;
  unsigned int (*v33)(const void *, uint64_t, uint64_t);
  int v34;
  size_t v35;
  size_t v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  _QWORD *v54;
  _QWORD *v55;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v7 + v11 + 16) & v12;
  v14 = ((unint64_t)v8 + v11 + 16) & v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_BYTE *)(v14 + 8);
  *(_DWORD *)(v13 + 4) = *(_DWORD *)(v14 + 4);
  *(_BYTE *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 10) = *(_WORD *)(v14 + 10);
  v16 = (v11 + 12 + v13) & ~v11;
  v17 = (v11 + 12 + v14) & ~v11;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v18(v16, v17, v9);
  v19 = *(_QWORD *)(v10 + 64);
  v20 = (v19 + v11 + v16) & ~v11;
  v21 = (v19 + v11 + v17) & ~v11;
  v18(v20, v21, v9);
  v22 = (_BYTE *)(v20 + v19);
  *v22 = *(_BYTE *)(v21 + v19);
  v22[1] = *(_BYTE *)(v21 + v19 + 1);
  v22[2] = *(_BYTE *)(v21 + v19 + 2);
  v22[3] = *(_BYTE *)(v21 + v19 + 3);
  v22[4] = *(_BYTE *)(v21 + v19 + 4);
  v23 = (v20 + v19 + 12) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v21 + v19 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
  *(_BYTE *)(v23 + 17) = *(_BYTE *)(v24 + 17);
  *(_BYTE *)(v23 + 18) = *(_BYTE *)(v24 + 18);
  *(_BYTE *)(v23 + 19) = *(_BYTE *)(v24 + 19);
  v25 = (v23 + 27) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v24 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_BYTE *)(v25 + 9) = *(_BYTE *)(v26 + 9);
  *(_BYTE *)(v25 + 10) = *(_BYTE *)(v26 + 10);
  *(_BYTE *)(v25 + 11) = *(_BYTE *)(v26 + 11);
  *(_BYTE *)(v25 + 12) = *(_BYTE *)(v26 + 12);
  v27 = (_QWORD *)((v23 + 47) & 0xFFFFFFFFFFFFF8);
  v28 = (_QWORD *)((v24 + 47) & 0xFFFFFFFFFFFFF8);
  *v27 = *v28;
  v29 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  *(_BYTE *)(v29 + 9) = *(_BYTE *)(v30 + 9);
  v31 = (void *)((v11 + 10 + v29) & ~v11);
  v32 = (const void *)((v11 + 10 + v30) & ~v11);
  v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v33(v32, 1, v9))
  {
    v34 = *(_DWORD *)(v10 + 84);
    if (v34)
      v35 = v19;
    else
      v35 = v19 + 1;
    memcpy(v31, v32, v35);
  }
  else
  {
    v18((uint64_t)v31, (uint64_t)v32, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    v34 = *(_DWORD *)(v10 + 84);
  }
  if (v34)
    v36 = v19;
  else
    v36 = v19 + 1;
  v37 = (_QWORD *)(((unint64_t)v31 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v32 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = *(_QWORD *)v40;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  *(_QWORD *)v39 = v41;
  v42 = (_QWORD *)(((unint64_t)v37 + 31) & 0xFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v38 + 31) & 0xFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = ((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = (uint64_t *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  v46 = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v46 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v44 = *(_OWORD *)v45;
  }
  else
  {
    v47 = *v45;
    sub_23AAAE668(*v45, v46);
    *(_QWORD *)v44 = v47;
    *(_QWORD *)(v44 + 8) = v46;
  }
  v48 = (v44 + 19) & 0xFFFFFFFFFFFFFFF8;
  v49 = ((unint64_t)v45 + 19) & 0xFFFFFFFFFFFFFFF8;
  v50 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v48 = v50;
  *(_BYTE *)(v48 + 9) = *(_BYTE *)(v49 + 9);
  v51 = (v48 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v52 = (v49 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v53 = *(_DWORD *)v52;
  *(_BYTE *)(v51 + 4) = *(_BYTE *)(v52 + 4);
  *(_DWORD *)v51 = v53;
  v54 = (_QWORD *)((v48 + 25) & 0xFFFFFFFFFFFFFFF8);
  v55 = (_QWORD *)((v49 + 25) & 0xFFFFFFFFFFFFFFF8);
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  return a1;
}

id sub_23AAA48D4(uint64_t a1)
{
  void *v1;
  id result;
  _BYTE *v3;

  result = objc_msgSend(v1, sel_longAtIndex_, a1);
  if ((unint64_t)result > 4)
  {
    sub_23AB7B620();
    swift_allocError();
    *v3 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

void type metadata accessor for NSFileProviderItemIdentifier(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542E7548);
}

unint64_t sub_23AAA4950(uint64_t a1)
{
  void *v1;
  unint64_t v2;
  _BYTE *v3;

  v2 = (unint64_t)objc_msgSend(v1, sel_longAtIndex_, a1);
  if (v2 <= 4 && ((0x17u >> v2) & 1) != 0)
    return 0x300020100uLL >> (8 * v2);
  sub_23AB7B620();
  swift_allocError();
  *v3 = 0;
  return swift_willThrow();
}

uint64_t sub_23AAA49DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23AAA49F8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23AAA49F8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5890);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AAA4B74@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  void *v102;
  unsigned __int8 v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  unint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  id v138;
  id v139;
  char v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  char v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned __int8 v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170[9];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0208);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v107 - v8;
  v10 = objc_msgSend(v2, sel_ownerNameComponents);
  v128 = a1;
  if (v10)
  {
    v11 = v10;
    sub_23B1C57F8();

    v12 = sub_23B1C5804();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 0, 1, v12);
  }
  else
  {
    v13 = sub_23B1C5804();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  v129 = v2;
  v14 = objc_msgSend(v2, sel_preformattedOwnerName);
  if (v14)
  {
    v15 = v14;
    v16 = sub_23B1C63E0();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  v19 = sub_23AAA55E0(v16, v18);
  v126 = v20;
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v9, &qword_2542E0208);
  v21 = v129;
  v22 = objc_msgSend(v129, sel_mostRecentEditorNameComponents);
  v127 = v19;
  if (v22)
  {
    v23 = v22;
    sub_23B1C57F8();

    v24 = sub_23B1C5804();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v7, 0, 1, v24);
  }
  else
  {
    v25 = sub_23B1C5804();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
  }
  v26 = objc_msgSend(v21, sel_preformattedMostRecentEditorName);
  if (v26)
  {
    v27 = v26;
    v28 = sub_23B1C63E0();
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0;
  }
  v31 = sub_23AAA55E0(v28, v30);
  v124 = v32;
  v125 = v31;
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v7, &qword_2542E0208);
  v33 = objc_msgSend(v21, sel_decorations);
  if (v33)
  {
    type metadata accessor for NSFileProviderItemDecorationIdentifier(0);
    v34 = sub_23B1C6704();

    v35 = *(_QWORD *)(v34 + 16);
    if (v35)
    {
      v136 = (_QWORD *)MEMORY[0x24BEE4AF8];
      sub_23AAB5A68(0, v35, 0);
      v36 = 0;
      v33 = v136;
      do
      {
        v37 = sub_23B1C63E0();
        v39 = v38;
        v136 = v33;
        v41 = v33[2];
        v40 = v33[3];
        if (v41 >= v40 >> 1)
        {
          sub_23AAB5A68(v40 > 1, v41 + 1, 1);
          v33 = v136;
        }
        ++v36;
        v33[2] = v41 + 1;
        v42 = &v33[2 * v41];
        v42[4] = v37;
        v42[5] = v39;
      }
      while (v35 != v36);
      swift_bridgeObjectRelease();
      v21 = v129;
    }
    else
    {
      swift_bridgeObjectRelease();
      v33 = 0;
    }
  }
  v123 = v33;
  v43 = objc_msgSend(v21, sel_userInfo);
  if (v43)
  {
    v44 = v43;
    v45 = sub_23B1C620C();

    if (*(_QWORD *)(v45 + 16))
    {
      v46 = objc_allocWithZone(MEMORY[0x24BDC8398]);
      v47 = (void *)sub_23B1C61F4();
      swift_bridgeObjectRelease();
      v48 = objc_msgSend(v46, sel_initWithUserInfo_, v47);

      v49 = objc_msgSend(v48, sel_keys);
      v122 = sub_23B1C6704();

      v50 = objc_msgSend(v48, sel_values);
      v121 = sub_23B1C6704();

      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
  }
  v121 = 0;
  v122 = 0;
LABEL_26:
  v51 = objc_msgSend(v21, sel_conflictingVersions);
  if (!v51)
  {
    v113 = 0;
    goto LABEL_44;
  }
  v52 = v51;
  sub_23AA9F52C(0, (unint64_t *)&unk_2542E1FD0);
  v53 = sub_23B1C6704();

  if (v53 >> 62)
  {
    swift_bridgeObjectRetain();
    v54 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (v54)
      goto LABEL_29;
LABEL_43:
    swift_bridgeObjectRelease();
    v113 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_44;
  }
  v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v54)
    goto LABEL_43;
LABEL_29:
  v136 = (_QWORD *)MEMORY[0x24BEE4AF8];
  result = sub_23ADACC90(0, v54 & ~(v54 >> 63), 0);
  if (v54 < 0)
  {
    __break(1u);
    return result;
  }
  v56 = 0;
  v57 = v136;
  v130 = v53 & 0xC000000000000001;
  v131 = v54;
  v132 = (_QWORD *)v53;
  do
  {
    v58 = v57;
    if (v130)
      v59 = (id)MEMORY[0x23B85F860](v56, v53);
    else
      v59 = *(id *)(v53 + 8 * v56 + 32);
    v60 = v59;
    v61 = objc_msgSend(v59, sel_contentVersion);
    v133 = (id)sub_23B1C5AD4();
    v63 = v62;

    v64 = objc_msgSend(v60, sel_metadataVersion);
    v65 = sub_23B1C5AD4();
    v67 = v66;

    v68 = objc_msgSend(v60, sel_lastEditorDeviceName);
    if (v68)
    {
      v69 = v68;
      v70 = sub_23B1C63E0();
      v72 = v71;

    }
    else
    {

      v70 = 0;
      v72 = 0;
    }
    v57 = v58;
    v136 = v58;
    v73 = v58[2];
    v74 = v57[3];
    if (v73 >= v74 >> 1)
    {
      sub_23ADACC90(v74 > 1, v73 + 1, 1);
      v57 = v136;
    }
    ++v56;
    v57[2] = v73 + 1;
    v75 = &v57[8 * v73];
    v75[4] = v133;
    v75[5] = v63;
    v75[6] = 0;
    v75[7] = v65;
    v75[8] = v67;
    v75[9] = 0;
    v75[10] = v70;
    v75[11] = v72;
    v53 = (unint64_t)v132;
  }
  while (v131 != v56);
  v113 = v57;
  swift_bridgeObjectRelease();
  v21 = v129;
LABEL_44:
  v133 = objc_msgSend(v21, sel_collaborationIdentifier);
  v132 = objc_msgSend(v21, sel_capabilities);
  LODWORD(v131) = objc_msgSend(v21, sel_isUploading);
  LODWORD(v130) = objc_msgSend(v21, sel_isUploaded);
  v129 = objc_msgSend(v21, sel_uploadingError);
  v120 = objc_msgSend(v21, sel_downloadingError);
  v119 = objc_msgSend(v21, sel_isShared);
  v118 = objc_msgSend(v21, sel_isTopLevelSharedItem);
  v117 = objc_msgSend(v21, sel_isSharedByCurrentUser);
  v116 = objc_msgSend(v21, sel_fp_isLastModifiedByCurrentUser);
  v76 = objc_msgSend(v21, sel_sharingPermissions);
  if (v76)
  {
    v77 = v76;
    v78 = sub_23B1C63E0();
    v111 = v79;
    v112 = v78;

  }
  else
  {
    v111 = 0;
    v112 = 0;
  }
  v115 = objc_msgSend(v21, sel_isContainer);
  v114 = objc_msgSend(v21, sel_isContainerPristine);
  v80 = objc_msgSend(v21, sel_fp_appContainerBundleIdentifier);
  if (v80)
  {
    v81 = v80;
    v82 = sub_23B1C63E0();
    v109 = v83;
    v110 = v82;

  }
  else
  {
    v109 = 0;
    v110 = 0;
  }
  v84 = objc_msgSend(v21, sel_cloudContainerIdentifier);
  if (v84)
  {
    v85 = v84;
    v108 = sub_23B1C63E0();
    v87 = v86;

  }
  else
  {
    v108 = 0;
    v87 = 0;
  }
  v88 = objc_msgSend(v21, sel_containerDisplayName);
  if (v88)
  {
    v89 = v88;
    v90 = sub_23B1C63E0();
    v92 = v91;

  }
  else
  {
    v90 = 0;
    v92 = 0;
  }
  v93 = objc_msgSend(v21, sel_fp_displayName);
  if (v93)
  {
    v94 = v93;
    v95 = sub_23B1C63E0();
    v97 = v96;

    v136 = (_QWORD *)v95;
    v137 = v97;
    v170[0] = 58;
    v170[1] = 0xE100000000000000;
    v134 = 47;
    v135 = 0xE100000000000000;
    sub_23AAA420C();
    v98 = sub_23B1C6CF8();
    v100 = v99;
    swift_bridgeObjectRelease();
  }
  else
  {
    v98 = 0;
    v100 = 0;
  }
  v101 = objc_msgSend(v21, sel_hasUnresolvedConflicts);
  if (v101)
  {
    v102 = v101;
    v103 = objc_msgSend(v101, sel_BOOLValue);

  }
  else
  {
    v103 = 0;
  }
  v104 = objc_msgSend(v21, sel_contentPolicy);
  sub_23AAA5788(v170);
  v106 = v170[6];
  v105 = v170[7];
  swift_bridgeObjectRetain();
  sub_23AAA5CC8(v170);
  v136 = v132;
  LOBYTE(v137) = v131;
  BYTE1(v137) = v130;
  v138 = v129;
  v139 = v120;
  v140 = v119;
  v141 = v118;
  v142 = v117;
  v143 = v127;
  v144 = v126;
  v145 = v125;
  v146 = v124;
  v147 = v116;
  v148 = v112;
  v149 = v111;
  v150 = v133;
  v151 = v115;
  v152 = v114;
  v153 = v110;
  v154 = v109;
  v155 = v108;
  v156 = v87;
  v157 = v90;
  v158 = v92;
  v159 = v98;
  v160 = v100;
  v161 = v103;
  v162 = v123;
  v163 = v122;
  v164 = v121;
  v165 = v104;
  v166 = 0;
  v167 = v113;
  v168 = v106;
  v169 = v105;
  nullsub_1(&v136);
  return sub_23AA724E8((uint64_t)&v136, v128, &qword_2542E5050);
}

uint64_t sub_23AAA55E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0208);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C5804();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_23AA8EFC8(v2, (uint64_t)v7, &qword_2542E0208);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_23AA8A05C((uint64_t)v7, &qword_2542E0208);
      a1 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      if (qword_2569E12C0 != -1)
        swift_once();
      v12 = (void *)qword_256A079A8;
      v13 = (void *)sub_23B1C57EC();
      v14 = objc_msgSend(v12, sel_stringFromPersonNameComponents_, v13);

      a1 = sub_23B1C63E0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  swift_bridgeObjectRetain();
  return a1;
}

void sub_23AAA5788(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  _UNKNOWN **v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v4 = &selRef_url;
  v5 = objc_msgSend(v1, sel_itemVersion);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_contentVersion);

    v8 = sub_23B1C5AD4();
    v51 = v9;

  }
  else
  {
    v8 = 0;
    v51 = 0xC000000000000000;
  }
  v10 = objc_msgSend(v2, sel_itemVersion);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_equivalentContentVersions);

    v13 = sub_23B1C6704();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v48 = v2;
      v49 = v8;
      v52 = MEMORY[0x24BEE4AF8];
      sub_23ADACC74(0, v14, 0);
      v15 = v52;
      v16 = (unint64_t *)(v13 + 40);
      do
      {
        v17 = *(v16 - 1);
        v18 = *v16;
        sub_23AAAE668(v17, *v16);
        v20 = *(_QWORD *)(v52 + 16);
        v19 = *(_QWORD *)(v52 + 24);
        if (v20 >= v19 >> 1)
          sub_23ADACC74(v19 > 1, v20 + 1, 1);
        v16 += 2;
        *(_QWORD *)(v52 + 16) = v20 + 1;
        v21 = v52 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v17;
        *(_QWORD *)(v21 + 40) = v18;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v2 = v48;
      v8 = v49;
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x24BEE4AF8];
    }
    v4 = &selRef_url;
  }
  else
  {
    v15 = 0;
  }
  v22 = objc_msgSend(v2, sel_itemVersion);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, sel_metadataVersion);

    v25 = sub_23B1C5AD4();
    v27 = v26;

  }
  else
  {
    v25 = 0;
    v27 = 0xC000000000000000;
  }
  v28 = objc_msgSend(v2, sel_itemVersion);
  if (v28)
  {
    v29 = v28;
    v46 = v27;
    v47 = v25;
    v30 = objc_msgSend(v28, sel_equivalentMetadataVersions);

    v31 = sub_23B1C6704();
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
    {
      v50 = v8;
      v45 = a1;
      v53 = MEMORY[0x24BEE4AF8];
      sub_23ADACC74(0, v32, 0);
      v33 = v53;
      v34 = (unint64_t *)(v31 + 40);
      do
      {
        v36 = *(v34 - 1);
        v35 = *v34;
        sub_23AAAE668(v36, *v34);
        v38 = *(_QWORD *)(v53 + 16);
        v37 = *(_QWORD *)(v53 + 24);
        if (v38 >= v37 >> 1)
          sub_23ADACC74(v37 > 1, v38 + 1, 1);
        v34 += 2;
        *(_QWORD *)(v53 + 16) = v38 + 1;
        v39 = v53 + 16 * v38;
        *(_QWORD *)(v39 + 32) = v36;
        *(_QWORD *)(v39 + 40) = v35;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease();
      a1 = v45;
      v8 = v50;
      v4 = &selRef_url;
    }
    else
    {
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x24BEE4AF8];
    }
    v27 = v46;
    v25 = v47;
  }
  else
  {
    v33 = 0;
  }
  v40 = objc_msgSend(v2, (SEL)v4[121]);
  v41 = v40;
  if (!v40)
    goto LABEL_31;
  v42 = objc_msgSend(v40, sel_lastEditorDeviceName);

  if (!v42)
  {
    v41 = 0;
LABEL_31:
    v44 = 0;
    goto LABEL_32;
  }
  v41 = (void *)sub_23B1C63E0();
  v44 = v43;

LABEL_32:
  *a1 = v8;
  a1[1] = v51;
  a1[2] = v15;
  a1[3] = v25;
  a1[4] = v27;
  a1[5] = v33;
  a1[6] = (uint64_t)v41;
  a1[7] = v44;
}

uint64_t sub_23AAA5B2C(uint64_t a1)
{
  sub_23AAA5BA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(id *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(void **)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192));
  return a1;
}

uint64_t sub_23AAA5BA4(int a1, int a2, id a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t result;

  if (a3 != (id)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AAA5C9C(a25);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23AAA5C9C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_23AAA5CC8(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[3];
  v3 = a1[4];
  sub_23AAAE53C(*a1, a1[1]);
  swift_bridgeObjectRelease();
  sub_23AAAE53C(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23AAA5D34()
{
  unint64_t result;

  result = qword_2542E7150;
  if (!qword_2542E7150)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D81D8, &type metadata for ItemReconciliationSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E7150);
  }
  return result;
}

void sub_23AAA5D78(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, __int128 *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  __int128 v59;
  uint64_t v60;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v31 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v31 - v14;
  LOBYTE(v59) = 0;
  a2((uint64_t *)((char *)&v60 + 1), &v59);
  v16 = sub_23AAA6EEC(BYTE1(v60), a1, (uint64_t)&type metadata for FileItemKind, 0xD000000000000023, 0x800000023B207960);
  if (!v3)
  {
    v58 = v16;
    LOBYTE(v59) = 2;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v17 = sub_23AAA6D24(BYTE1(v60), a1);
    v55 = a3;
    v56 = v13;
    v57 = v15;
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v17);
    v19 = sub_23B1C746C();

    LOBYTE(v59) = 15;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v20 = sub_23AAA6D24(BYTE1(v60), a1);
    v54 = v19;
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v20);
    v22 = sub_23B1C746C();

    LOBYTE(v59) = 13;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v23 = sub_23AAA6B48(BYTE1(v60), a1);
    LOBYTE(v59) = 4;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    LODWORD(v21) = sub_23AAACE9C(BYTE1(v60), a1);
    LOBYTE(v59) = 5;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    sub_23AAA6730(BYTE1(v60), a1, (uint64_t)v57);
    v53 = v23;
    LOBYTE(v59) = 6;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    sub_23AAA6730(BYTE1(v60), a1, (uint64_t)v56);
    LOBYTE(v59) = 3;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v52 = sub_23AAAB19C(BYTE1(v60), a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    LOBYTE(v59) = 11;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v51 = sub_23AAAB19C(BYTE1(v60), a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    LOBYTE(v59) = 12;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v50 = sub_23AAAB19C(BYTE1(v60), a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    LOBYTE(v59) = 7;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    sub_23AAA6730(BYTE1(v60), a1, (uint64_t)v10);
    LOBYTE(v59) = 8;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v24 = sub_23AAAD5D4(BYTE1(v60), a1);
    LOBYTE(v59) = 9;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v49 = sub_23AAACCC4(BYTE1(v60), a1);
    v48 = v25;
    LOBYTE(v59) = 14;
    a2((uint64_t *)((char *)&v60 + 1), &v59);
    v47 = sub_23AAAD408(BYTE1(v60), a1);
    BYTE1(v60) = 20;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    sub_23AAACAE4(v60, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684, &v59);
    v26 = *((_QWORD *)&v59 + 1);
    v46 = v59;
    BYTE1(v60) = 23;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v45 = sub_23AAA70A8(v60, a1);
    BYTE1(v60) = 16;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v44 = sub_23AAA6EEC(v60, a1, (uint64_t)&type metadata for EvictionUrgency, 0xD000000000000026, 0x800000023B207810);
    BYTE1(v60) = 21;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v43 = sub_23AAAB19C(v60, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    BYTE1(v60) = 22;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v42 = sub_23AAAB19C(v60, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    BYTE1(v60) = 27;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v41 = sub_23AAAB19C(v60, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    BYTE1(v60) = 17;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v40 = sub_23AAAB19C(v60, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    BYTE1(v60) = 18;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v39 = sub_23AAAB19C(v60, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    BYTE1(v60) = 1;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v38 = sub_23AAAB19C(v60, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
    BYTE1(v60) = 10;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v37 = sub_23AAAD23C(v60, a1);
    BYTE1(v60) = 19;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v35 = sub_23AAA6984(v60, a1, qword_2542E72C8, 0xD000000000000029, 0x800000023B207700);
    v36 = v27;
    BYTE1(v60) = 24;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v34 = sub_23AAAD064(v60, a1);
    v33 = v28;
    BYTE1(v60) = 25;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v32 = sub_23AAA6B48(v60, a1);
    BYTE1(v60) = 26;
    a2(&v60, (__int128 *)((char *)&v60 + 1));
    v29 = sub_23AAA6984(v60, a1, (uint64_t *)&unk_2542E7460, 0xD000000000000027, 0x800000023B206FB0);
    sub_23AB58648(v58, v54, v22, 0, v53 | ((HIDWORD(v53) & 1) << 32), (int)v21, (uint64_t)v57, (uint64_t)v56, v55, v52 & 1, v51 & 1, v50 & 1, (uint64_t)v10, v24, v49, v48 & 1, v47, v46, v26,
      v45,
      v44,
      v43 & 1,
      v42 & 1,
      v41 & 1,
      v40 & 1,
      v39 & 1,
      v38 & 1,
      v37,
      2,
      v35,
      v36,
      v34,
      v33 & 1,
      v32 | ((HIDWORD(v32) & 1) << 32),
      0,
      v29,
      v30,
      0,
      0,
      0);
  }
}

_BYTE *sub_23AAA6724@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23AAA6730@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[4];
  _OWORD v21[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16) && (v9 = sub_23AAAFD94(a1), (v10 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v9, (uint64_t)v21);
  else
    memset(v21, 0, sizeof(v21));
  sub_23AA8EFC8((uint64_t)v21, (uint64_t)v20, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v12 = swift_dynamicCast();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  if ((v12 & 1) != 0)
  {
    v13(v8, 0, 1, v11);
    sub_23AA8A05C((uint64_t)v21, qword_2542E5640);
    return sub_23AA724E8((uint64_t)v8, a3, (uint64_t *)&unk_2542E4310);
  }
  else
  {
    v13(v8, 1, 1, v11);
    sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E67A0);
    sub_23AB23A94();
    swift_allocError();
    v16 = v15;
    sub_23AA8EFC8((uint64_t)v21, v15, qword_2542E5640);
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v18 = 0xD000000000000025;
    v19 = 0x800000023B2078E0;
    sub_23AA8EFC8((uint64_t)v21, (uint64_t)v20, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v17 = v19;
    *(_QWORD *)(v16 + 32) = v18;
    *(_QWORD *)(v16 + 40) = v17;
    *(_BYTE *)(v16 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v21, qword_2542E5640);
  }
}

uint64_t sub_23AAA6984(unsigned __int8 a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  _OWORD v17[2];

  if (*(_QWORD *)(a2 + 16) && (v10 = sub_23AAAFD94(a1), (v11 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)v17);
  else
    memset(v17, 0, sizeof(v17));
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
    return v15;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v14 = v13;
    sub_23AA8EFC8((uint64_t)v17, v13, qword_2542E5640);
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
  }
}

unint64_t sub_23AAA6B48(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  _QWORD v11[4];
  _OWORD v12[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v12);
  else
    memset(v12, 0, sizeof(v12));
  sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E75C0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
    return v9 | ((unint64_t)(v10 & 1) << 32);
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v12, v7, qword_2542E5640);
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000027;
    *(_QWORD *)(v8 + 40) = 0x800000023B207930;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
  }
}

uint64_t sub_23AAA6D24(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205B00;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA6EEC(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  _QWORD v15[4];
  _OWORD v16[2];

  if (*(_QWORD *)(a2 + 16) && (v9 = sub_23AAAFD94(a1), (v10 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v9, (uint64_t)v16);
  else
    memset(v16, 0, sizeof(v16));
  sub_23AA8EFC8((uint64_t)v16, (uint64_t)v15, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v16, qword_2542E5640);
    return v14;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v13 = v12;
    sub_23AA8EFC8((uint64_t)v16, v12, qword_2542E5640);
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v16, (uint64_t)v15, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v13 + 32) = a4;
    *(_QWORD *)(v13 + 40) = a5;
    *(_BYTE *)(v13 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v16, qword_2542E5640);
  }
}

uint64_t sub_23AAA70A8(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205CD0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA7270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[12];
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[112];
  __int128 v35;
  _BYTE v36[80];
  uint64_t v37;
  char v38;
  __int128 v39;
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int16 v47;
  char v48;
  __int128 v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  int v55;

  v5 = swift_bridgeObjectRetain();
  sub_23AAA88C0(v5, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724, 0, (uint64_t)&v37);
  if (v2)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = sub_23AAA7A28(50, a1);
  *(_QWORD *)&v32 = v37;
  BYTE8(v32) = v38;
  v33 = v39;
  v34[0] = v40;
  *(_OWORD *)&v34[8] = v41;
  *(_OWORD *)&v34[24] = v42;
  *(_OWORD *)&v34[40] = v43;
  *(_OWORD *)&v34[56] = v44;
  *(_OWORD *)&v34[72] = v45;
  *(_OWORD *)&v34[88] = v46;
  *(_WORD *)&v34[104] = v47;
  v34[106] = v48;
  v35 = v49;
  v36[0] = v50;
  *(_OWORD *)&v36[8] = v51;
  *(_OWORD *)&v36[24] = v52;
  *(_OWORD *)&v36[40] = v53;
  *(_OWORD *)&v36[56] = v54;
  *(_QWORD *)&v36[72] = v7;
  swift_bridgeObjectRetain();
  sub_23ACF4048((uint64_t)&v32);
  sub_23AAA7DB8(a1, (void (*)(unsigned __int8 *__return_ptr, unsigned __int8 *))sub_23AAA8510, 0, (uint64_t)v30);
  swift_bridgeObjectRelease();
  v8 = sub_23AAA9150(48, a1, &qword_2542E4690, 0xD00000000000002DLL, 0x800000023B205CA0);
  v9 = sub_23AAA7694(49, a1);
  swift_bridgeObjectRetain();
  v10 = sub_23AAA7860(32, a1);
  v11 = sub_23AAA7BF0(33, a1);
  swift_bridgeObjectRelease();
  v12 = sub_23AAA9EA8(51, a1);
  v55 = sub_23AAAB19C(52, a1, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
  v13 = sub_23AE76B18(53, a1);
  result = sub_23ACF410C((uint64_t)&v32);
  v14 = v30[10];
  v15 = v30[11];
  v16 = v30[8];
  *(_OWORD *)(a2 + 384) = v30[9];
  *(_OWORD *)(a2 + 400) = v14;
  *(_OWORD *)(a2 + 416) = v15;
  v17 = v30[6];
  v18 = v30[7];
  v19 = v30[4];
  *(_OWORD *)(a2 + 320) = v30[5];
  *(_OWORD *)(a2 + 336) = v17;
  *(_OWORD *)(a2 + 352) = v18;
  *(_OWORD *)(a2 + 368) = v16;
  v20 = v30[2];
  v21 = v30[3];
  v22 = v30[0];
  *(_OWORD *)(a2 + 256) = v30[1];
  *(_OWORD *)(a2 + 272) = v20;
  *(_QWORD *)(a2 + 432) = v31;
  *(_OWORD *)(a2 + 288) = v21;
  *(_OWORD *)(a2 + 304) = v19;
  v23 = *(_OWORD *)&v36[48];
  *(_OWORD *)(a2 + 192) = *(_OWORD *)&v36[32];
  *(_OWORD *)(a2 + 208) = v23;
  *(_OWORD *)(a2 + 224) = *(_OWORD *)&v36[64];
  *(_OWORD *)(a2 + 240) = v22;
  v24 = v35;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v34[96];
  *(_OWORD *)(a2 + 144) = v24;
  v25 = *(_OWORD *)&v36[16];
  *(_OWORD *)(a2 + 160) = *(_OWORD *)v36;
  *(_OWORD *)(a2 + 176) = v25;
  v26 = *(_OWORD *)&v34[48];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v34[32];
  *(_OWORD *)(a2 + 80) = v26;
  v27 = *(_OWORD *)&v34[80];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v34[64];
  *(_OWORD *)(a2 + 112) = v27;
  v28 = v33;
  *(_OWORD *)a2 = v32;
  *(_OWORD *)(a2 + 16) = v28;
  v29 = *(_OWORD *)&v34[16];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)v34;
  *(_OWORD *)(a2 + 48) = v29;
  *(_BYTE *)(a2 + 440) = v8;
  *(_QWORD *)(a2 + 448) = v9;
  *(_QWORD *)(a2 + 456) = v10;
  *(_QWORD *)(a2 + 464) = v11;
  *(_QWORD *)(a2 + 472) = v12;
  *(_BYTE *)(a2 + 480) = v55 & 1;
  *(_QWORD *)(a2 + 488) = v13;
  return result;
}

uint64_t sub_23AAA7638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;

  if (a9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23AAA7694(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7488);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000057;
    *(_QWORD *)(v8 + 40) = 0x800000023B205C40;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA7860(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000002CLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205C10;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA7A28(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000027;
    *(_QWORD *)(v8 + 40) = 0x800000023B205F20;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA7BF0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000024;
    *(_QWORD *)(v8 + 40) = 0x800000023B205BE0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA7DB8@<X0>(uint64_t a1@<X0>, void (*a2)(unsigned __int8 *__return_ptr, unsigned __int8 *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  __int128 v50;
  _QWORD v51[5];
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54[5];
  uint64_t v55[6];
  uint64_t v56;

  v49 = -60;
  a2(&v48, &v49);
  result = sub_23AAA8520(v48, a1, &v50);
  if (!v4)
  {
    v11 = *((_QWORD *)&v50 + 1);
    v10 = v50;
    v49 = -59;
    a2(&v48, &v49);
    sub_23AAA8520(v48, a1, &v50);
    v12 = 0;
    v13 = *((_QWORD *)&v50 + 1);
    v56 = v50;
    v14 = 1;
    if (v11 >> 60 == 15)
    {
      v15 = 0;
      v16 = 0;
      v17 = 0;
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = 0;
      if (*((_QWORD *)&v50 + 1) >> 60 != 15)
      {
        sub_23AAA3E2C(v10, v11);
        v18 = v11;
        v19 = v10;
        v20 = v13;
        v21 = v56;
        sub_23AAA3E2C(v56, v20);
        v14 = 0;
        v12 = v19;
        v15 = v18;
        v16 = v21;
        v13 = v20;
        v10 = v19;
        v11 = v18;
        v17 = v13;
      }
    }
    v44 = v15;
    v45 = v17;
    v22 = v12;
    v46 = v16;
    v47 = v14;
    LOBYTE(v50) = 0;
    a2(&v49, (unsigned __int8 *)&v50);
    sub_23AAA9314(v49, a1);
    if ((v23 & 1) != 0)
    {
      v37 = 0;
      v38 = 0;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 0;
      v39 = 0xB000000000000000;
    }
    else
    {
      v55[0] = a1;
      v55[1] = (uint64_t)a2;
      v55[2] = a3;
      v55[3] = (uint64_t)sub_23AD841E8;
      v55[4] = 0;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_23AE289A4(v55, (uint64_t)v51);
      v37 = v51[0];
      v38 = v51[1];
      v39 = v51[2];
      v40 = v51[3];
      v41 = v51[4];
      v42 = v52;
      v43 = v53;
      swift_release();
      swift_bridgeObjectRelease();
    }
    LOBYTE(v50) = 0x80;
    a2(&v49, (unsigned __int8 *)&v50);
    v36 = sub_23AAA86F4(v49, a1);
    LOBYTE(v50) = -127;
    a2(&v49, (unsigned __int8 *)&v50);
    v35 = sub_23AAA989C(v49, a1);
    LOBYTE(v50) = -126;
    a2(&v49, (unsigned __int8 *)&v50);
    v34 = sub_23AAA96D4(v49, a1);
    LOBYTE(v50) = -125;
    a2(&v49, (unsigned __int8 *)&v50);
    v32 = sub_23AAA9150(v49, a1, qword_2542E4E88, 0xD000000000000036, 0x800000023B205E10);
    LOBYTE(v50) = -124;
    sub_23AAAE5C0(v22, v44, v47, v46, v45);
    a2(&v49, (unsigned __int8 *)&v50);
    v33 = sub_23AAA9A64(v49, a1);
    LOBYTE(v50) = -123;
    a2(&v49, (unsigned __int8 *)&v50);
    v31 = sub_23AAA9150(v49, a1, &qword_2542E6CC0, 0xD000000000000031, 0x800000023B205DA0);
    LOBYTE(v50) = -122;
    a2(&v49, (unsigned __int8 *)&v50);
    v30 = sub_23AAAB19C(v49, a1, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
    v54[0] = a1;
    v54[1] = (uint64_t)a2;
    v54[2] = a3;
    v54[3] = (uint64_t)sub_23AAAA070;
    v54[4] = 0;
    swift_bridgeObjectRetain();
    swift_retain();
    v27 = sub_23AAA9C28(v54);
    v28 = v24;
    v29 = v25;
    swift_release();
    swift_bridgeObjectRelease();
    LOBYTE(v50) = -58;
    a2(&v49, (unsigned __int8 *)&v50);
    v26 = sub_23AAA94C0(v49, a1, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
    sub_23AAAE4D0(v22, v44, v47, v46, v45);
    sub_23AAA3E18(v56, v13);
    result = sub_23AAA3E18(v10, v11);
    *(_QWORD *)(a4 + 32) = v22;
    *(_QWORD *)(a4 + 40) = v44;
    *(_QWORD *)(a4 + 48) = v47;
    *(_QWORD *)(a4 + 56) = v46;
    *(_QWORD *)(a4 + 64) = v45;
    *(_QWORD *)(a4 + 72) = 0;
    *(_QWORD *)(a4 + 80) = 0;
    *(_QWORD *)(a4 + 88) = 0;
    *(_QWORD *)a4 = v36;
    *(_QWORD *)(a4 + 8) = v35;
    *(_QWORD *)(a4 + 16) = v34;
    *(_BYTE *)(a4 + 24) = v32;
    *(_BYTE *)(a4 + 96) = v33;
    *(_BYTE *)(a4 + 97) = v31;
    *(_BYTE *)(a4 + 98) = v30 & 1;
    *(_QWORD *)(a4 + 104) = v27;
    *(_QWORD *)(a4 + 112) = v28;
    *(_BYTE *)(a4 + 120) = v29;
    *(_QWORD *)(a4 + 128) = v37;
    *(_QWORD *)(a4 + 136) = v38;
    *(_QWORD *)(a4 + 144) = v39;
    *(_QWORD *)(a4 + 152) = v40;
    *(_QWORD *)(a4 + 160) = v41;
    *(_QWORD *)(a4 + 168) = v42;
    *(_QWORD *)(a4 + 176) = v43;
    *(_QWORD *)(a4 + 184) = v26;
    *(_QWORD *)(a4 + 192) = 0;
  }
  return result;
}

_BYTE *sub_23AAA8510@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result | 0x10;
  return result;
}

uint64_t sub_23AAA8520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  int v3;
  uint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD v12[4];
  _OWORD v13[2];

  v3 = a1;
  if (*(_QWORD *)(a2 + 16) && (v6 = sub_23AAA15E8(a1), (v7 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)v13);
  else
    memset(v13, 0, sizeof(v13));
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v12, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E6D00);
  if ((swift_dynamicCast() & 1) != 0)
  {
    result = sub_23AA8A05C((uint64_t)v13, qword_2542E5640);
    *a3 = v11;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v10 = v9;
    sub_23AA8EFC8((uint64_t)v13, v9, qword_2542E5640);
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v13, (uint64_t)v12, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v3);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 32) = 0xD000000000000032;
    *(_QWORD *)(v10 + 40) = 0x800000023B205EE0;
    *(_BYTE *)(v10 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v13, qword_2542E5640);
  }
  return result;
}

uint64_t sub_23AAA86F4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7550);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000003DLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205EA0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA88C0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v10;
  char v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  int v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61[5];
  uint64_t v62[6];
  int v63;
  uint64_t v64;

  BYTE1(v64) = -121;
  a2(&v64, (char *)&v64 + 1);
  result = sub_23AAA9314(v64, a1);
  if (!v4)
  {
    v11 = v10;
    if ((v10 & 1) != 0)
    {
      v55 = a4;
      v56 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
    }
    else
    {
      v25 = result;
      BYTE1(v64) = -64;
      a2(&v64, (char *)&v64 + 1);
      v12 = sub_23AAAA080(v64, a1, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
      BYTE1(v64) = -63;
      a2(&v64, (char *)&v64 + 1);
      v55 = a4;
      v56 = v25;
      v13 = sub_23AAAA254(v64, a1, (uint64_t *)&unk_2542E5630, 0xD000000000000026, 0x800000023B205D20);
      v14 = v26 & 1;
    }
    BYTE1(v64) = -62;
    a2(&v64, (char *)&v64 + 1);
    v15 = sub_23AAAA5F4(v64, a1);
    v17 = v16;
    if (v16 == 0xFF)
    {
      v23 = 0;
      v52 = 0;
      v53 = 0;
      v13 = 0;
      v54 = 0;
      v51 = 0;
      v24 = 0;
      v22 = 0;
    }
    else
    {
      v54 = v15;
      BYTE1(v64) = -61;
      a2(&v64, (char *)&v64 + 1);
      v18 = sub_23AA9B6DC(v64, a1, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
      if ((v11 & 1) != 0 || (v20 = v19) == 0)
      {
        v23 = 0;
        v13 = 0;
        v51 = 0;
        v52 = 0;
        v53 = 0;
        v54 = 0;
        v24 = 0;
        v22 = 0;
      }
      else
      {
        v21 = v18;
        v53 = v12;
        v51 = v17;
        v52 = v14;
        swift_bridgeObjectRetain();
        v22 = v20;
        v23 = v56;
        v24 = v21;
      }
    }
    BYTE1(v64) = 0;
    a2(&v64, (char *)&v64 + 1);
    sub_23AAA9314(v64, a1);
    if ((v27 & 1) != 0)
    {
      v44 = 0;
      v45 = 0;
      v47 = 0;
      v48 = 0;
      v49 = 0;
      v50 = 0;
      v46 = 0xB000000000000000;
    }
    else
    {
      v62[0] = a1;
      v62[1] = (uint64_t)a2;
      v62[2] = a3;
      v62[3] = (uint64_t)sub_23AD841E8;
      v62[4] = 0;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_23AE289A4(v62, (uint64_t)v58);
      v44 = v58[0];
      v45 = v58[1];
      v46 = v58[2];
      v47 = v58[3];
      v48 = v58[4];
      v49 = v59;
      v50 = v60;
      swift_release();
      swift_bridgeObjectRelease();
    }
    BYTE1(v64) = 0x80;
    a2(&v64, (char *)&v64 + 1);
    v28 = sub_23AAAA424(v64, a1);
    v63 = v29;
    v43 = v28;
    BYTE1(v64) = -127;
    a2(&v64, (char *)&v64 + 1);
    v42 = sub_23AAA989C(v64, a1);
    BYTE1(v64) = -126;
    a2(&v64, (char *)&v64 + 1);
    v40 = sub_23AAA96D4(v64, a1);
    v41 = v24;
    v57 = v23;
    BYTE1(v64) = -125;
    a2(&v64, (char *)&v64 + 1);
    v39 = sub_23AAA9150(v64, a1, qword_2542E4E88, 0xD000000000000036, 0x800000023B205E10);
    BYTE1(v64) = -124;
    sub_23AAA7638(v23, v53, v13, v52, 0, v54, v51, v24, v22);
    a2(&v64, (char *)&v64 + 1);
    v30 = sub_23AAA9A64(v64, a1);
    BYTE1(v64) = -123;
    a2(&v64, (char *)&v64 + 1);
    v31 = sub_23AAA9150(v64, a1, &qword_2542E6CC0, 0xD000000000000031, 0x800000023B205DA0);
    BYTE1(v64) = -122;
    a2(&v64, (char *)&v64 + 1);
    v32 = sub_23AAAB19C(v64, a1, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
    v61[0] = a1;
    v61[1] = (uint64_t)a2;
    v61[2] = a3;
    v61[3] = (uint64_t)sub_23AAAA070;
    v61[4] = 0;
    swift_bridgeObjectRetain();
    swift_retain();
    v36 = sub_23AAA9C28(v61);
    v37 = v33;
    v38 = v34;
    swift_release();
    swift_bridgeObjectRelease();
    BYTE1(v64) = -58;
    a2(&v64, (char *)&v64 + 1);
    v35 = sub_23AAA94C0(v64, a1, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
    sub_23AAAEE68(v57, v53, v13, v52, 0, v54, v51, v41, v22);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v55 = v43;
    *(_BYTE *)(v55 + 8) = v63;
    *(_QWORD *)(v55 + 40) = v57;
    *(_QWORD *)(v55 + 48) = v53;
    *(_QWORD *)(v55 + 56) = v13;
    *(_QWORD *)(v55 + 64) = v52;
    *(_QWORD *)(v55 + 72) = 0;
    *(_QWORD *)(v55 + 80) = v54;
    *(_QWORD *)(v55 + 88) = v51;
    *(_QWORD *)(v55 + 96) = v41;
    *(_QWORD *)(v55 + 104) = v22;
    *(_QWORD *)(v55 + 112) = 0;
    *(_QWORD *)(v55 + 120) = 0;
    *(_QWORD *)(v55 + 128) = 0;
    *(_QWORD *)(v55 + 16) = v42;
    *(_QWORD *)(v55 + 24) = v40;
    *(_BYTE *)(v55 + 32) = v39;
    *(_BYTE *)(v55 + 136) = v30;
    *(_BYTE *)(v55 + 137) = v31;
    *(_BYTE *)(v55 + 138) = v32 & 1;
    *(_QWORD *)(v55 + 144) = v36;
    *(_QWORD *)(v55 + 152) = v37;
    *(_BYTE *)(v55 + 160) = v38;
    *(_QWORD *)(v55 + 168) = v44;
    *(_QWORD *)(v55 + 176) = v45;
    *(_QWORD *)(v55 + 184) = v46;
    *(_QWORD *)(v55 + 192) = v47;
    *(_QWORD *)(v55 + 200) = v48;
    *(_QWORD *)(v55 + 208) = v49;
    *(_QWORD *)(v55 + 216) = v50;
    *(_QWORD *)(v55 + 224) = v35;
    *(_QWORD *)(v55 + 232) = 0;
  }
  return result;
}

uint64_t sub_23AAA9150(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  int v8;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  _QWORD v16[4];
  _OWORD v17[2];

  v8 = a1;
  if (*(_QWORD *)(a2 + 16) && (v10 = sub_23AAA15E8(a1), (v11 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)v17);
  else
    memset(v17, 0, sizeof(v17));
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
    return v15;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v14 = v13;
    sub_23AA8EFC8((uint64_t)v17, v13, qword_2542E5640);
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v8);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
  }
}

uint64_t sub_23AAA9314(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  _OWORD v11[2];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  v4 = sub_23AAA15E8(a1);
  if ((v5 & 1) == 0)
    return 0;
  sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v10);
  sub_23AAA159C(v10, v11);
  sub_23AAA15AC((uint64_t)v11, (uint64_t)v10);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AAA15AC((uint64_t)v11, v7);
    *(_QWORD *)&v10[0] = 0;
    *((_QWORD *)&v10[0] + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AAA15AC((uint64_t)v11, (uint64_t)v10);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v3);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205CD0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
}

uint64_t sub_23AAA94C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _OWORD v14[2];

  if (*(_QWORD *)(a2 + 16) && (v7 = a3(a1), (v8 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v7, (uint64_t)v14);
  else
    memset(v14, 0, sizeof(v14));
  sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5510);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
    return v12;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v11 = v10;
    sub_23AA8EFC8((uint64_t)v14, v10, qword_2542E5640);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23B1C7568();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    a4(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 32) = 0xD000000000000012;
    *(_QWORD *)(v11 + 40) = 0x800000023B205D80;
    *(_BYTE *)(v11 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
  }
}

uint64_t sub_23AAA96D4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205E50;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA989C(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000025;
    *(_QWORD *)(v8 + 40) = 0x800000023B205E70;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA9A64(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000024;
    *(_QWORD *)(v8 + 40) = 0x800000023B205DE0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAA9C28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t *__return_ptr, char *);
  void (*v5)(uint64_t *__return_ptr, char *);
  uint64_t v6;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  BYTE5(v11) = 0;
  v3 = *a1;
  v4 = (void (*)(uint64_t *__return_ptr, char *))a1[1];
  v5 = (void (*)(uint64_t *__return_ptr, char *))a1[3];
  v5((uint64_t *)((char *)&v11 + 4), (char *)&v11 + 5);
  v4((uint64_t *)((char *)&v11 + 3), (char *)&v11 + 4);
  v6 = sub_23AAA9EA8(BYTE3(v11), v3);
  if (!v1)
  {
    v2 = 1;
    switch(v6)
    {
      case 0:
        BYTE5(v9) = 1;
        ((void (*)(uint64_t *__return_ptr, char *, _QWORD, uint64_t))v5)((uint64_t *)((char *)&v9 + 4), (char *)&v9 + 5, 0, 4);
        v4((uint64_t *)((char *)&v9 + 3), (char *)&v9 + 4);
        v2 = sub_23AE76CE0(BYTE3(v9), v3);
        BYTE2(v9) = 2;
        v5((uint64_t *)((char *)&v9 + 1), (char *)&v9 + 2);
        v4(&v9, (char *)&v9 + 1);
        sub_23AE77070(v9, v3, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
        break;
      case 1:
        v10 = 2;
        ((void (*)(uint64_t *__return_ptr, char *, _QWORD, uint64_t))v5)((uint64_t *)((char *)&v9 + 7), &v10, 0, 4);
        v4((uint64_t *)((char *)&v9 + 6), (char *)&v9 + 7);
        v2 = sub_23AE77070(BYTE6(v9), v3, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
        break;
      case 2:
        BYTE2(v11) = 2;
        ((void (*)(uint64_t *__return_ptr, char *, _QWORD, uint64_t))v5)((uint64_t *)((char *)&v11 + 1), (char *)&v11 + 2, 0, 4);
        v4(&v11, (char *)&v11 + 1);
        v2 = sub_23AE77070(v11, v3, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC);
        break;
      case 3:
        sub_23AEB1308();
        v2 = swift_allocError();
        break;
      case 4:
        return v2;
      case 5:
        v2 = 0;
        break;
      default:
        sub_23AB7B620();
        swift_allocError();
        *v8 = 0;
        swift_willThrow();
        break;
    }
  }
  return v2;
}

uint64_t sub_23AAA9EA8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205B00;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

_BYTE *sub_23AAAA070@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result | 0x40;
  return result;
}

uint64_t sub_23AAAA080(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  _QWORD v13[4];
  _OWORD v14[2];

  if (*(_QWORD *)(a2 + 16) && (v7 = a3(a1), (v8 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v7, (uint64_t)v14);
  else
    memset(v14, 0, sizeof(v14));
  sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
    return v12;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v11 = v10;
    sub_23AA8EFC8((uint64_t)v14, v10, qword_2542E5640);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    a4(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v11 + 40) = 0x800000023B205F50;
    *(_BYTE *)(v11 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
  }
}

uint64_t sub_23AAAA254(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  int v8;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  _OWORD v17[2];

  v8 = a1;
  if (*(_QWORD *)(a2 + 16) && (v10 = sub_23AAA15E8(a1), (v11 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)v17);
  else
    memset(v17, 0, sizeof(v17));
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
    return v15;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v14 = v13;
    sub_23AA8EFC8((uint64_t)v17, v13, qword_2542E5640);
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v8);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
  }
}

uint64_t sub_23AAAA424(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7420);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205F90;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAAA5F4(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  _OWORD v11[2];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  v4 = sub_23AAA15E8(a1);
  if ((v5 & 1) == 0)
    return 0;
  sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v10);
  sub_23AAA159C(v10, v11);
  sub_23AAA15AC((uint64_t)v11, (uint64_t)v10);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AAA15AC((uint64_t)v11, v7);
    *(_QWORD *)&v10[0] = 0;
    *((_QWORD *)&v10[0] + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AAA15AC((uint64_t)v11, (uint64_t)v10);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v3);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000020;
    *(_QWORD *)(v8 + 40) = 0x800000023B205FC0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
}

uint64_t sub_23AAAA79C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  result = sub_23AAAC6C0(0, a1, type metadata accessor for NSFileProviderItemCapabilities, 0xD000000000000035, 0x800000023B207730);
  if (!v2)
  {
    v6 = result;
    v7 = sub_23AAAAFD0(1, a1);
    v8 = sub_23AAAAFD0(2, a1);
    v49 = sub_23AAAB538(3, a1, &qword_2542E7700, 0xD000000000000026, 0x800000023B207020);
    v9 = sub_23AAAB538(4, a1, &qword_2542E7700, 0xD000000000000026, 0x800000023B207020);
    v10 = sub_23AAAAFD0(6, a1);
    v48 = sub_23AAAAFD0(7, a1);
    v46 = sub_23AAAAFD0(8, a1);
    v11 = sub_23AAAB374(9, a1, (uint64_t *)&unk_2542E7460, 0xD000000000000027, 0x800000023B206FB0);
    v45 = v12;
    v43 = v11;
    v44 = sub_23AAAB374(10, a1, (uint64_t *)&unk_2542E7460, 0xD000000000000027, 0x800000023B206FB0);
    v47 = v13;
    v41 = a1;
    v42 = (id)v9;
    v40 = sub_23AAAAFD0(11, a1);
    v38 = sub_23AAAB374(12, a1, (uint64_t *)&unk_2542E7460, 0xD000000000000027, 0x800000023B206FB0);
    v39 = v14;
    v37 = sub_23AAAAFD0(13, a1);
    v36 = sub_23AAAAFD0(14, a1);
    v34 = sub_23AAAB374(15, a1, (uint64_t *)&unk_2542E7460, 0xD000000000000027, 0x800000023B206FB0);
    v35 = v15;
    v32 = sub_23AAAB374(16, a1, (uint64_t *)&unk_2542E7460, 0xD000000000000027, 0x800000023B206FB0);
    v33 = v16;
    v30 = sub_23AAAB374(17, a1, (uint64_t *)&unk_2542E7460, 0xD000000000000027, 0x800000023B206FB0);
    v31 = v17;
    v28 = sub_23AAAB374(18, a1, qword_2542E72C8, 0xD000000000000029, 0x800000023B207700);
    v29 = v18;
    v19 = sub_23AAAAFD0(19, a1);
    v27 = sub_23AAAB538(20, v41, &qword_2542E76D0, 0xD00000000000002ELL, 0x800000023B2076D0);
    v25 = sub_23AAAB374(21, v41, &qword_2542E76A0, 0xD000000000000029, 0x800000023B2076A0);
    v26 = v20;
    v24 = sub_23AAAC6C0(22, v41, type metadata accessor for NSFileProviderContentPolicy, 0xD000000000000032, 0x800000023B207660);
    v21 = sub_23AAAC6C0(23, v41, type metadata accessor for NSFileProviderContentPolicy, 0xD000000000000032, 0x800000023B207660);
    v22 = sub_23AAAB538(24, v41, &qword_2542E76C0, 0xD00000000000005DLL, 0x800000023B207600);
    result = sub_23AAAB374(25, v41, (uint64_t *)&unk_2542E7460, 0xD000000000000027, 0x800000023B206FB0);
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 16) = v49;
    *(_QWORD *)(a2 + 24) = v42;
    *(_QWORD *)(a2 + 40) = v43;
    *(_QWORD *)(a2 + 48) = v45;
    *(_BYTE *)(a2 + 8) = v7 & 1;
    *(_BYTE *)(a2 + 9) = v8 & 1;
    *(_BYTE *)(a2 + 32) = v10 & 1;
    *(_BYTE *)(a2 + 33) = v48 & 1;
    *(_BYTE *)(a2 + 34) = v46 & 1;
    *(_QWORD *)(a2 + 56) = v44;
    *(_QWORD *)(a2 + 64) = v47;
    *(_BYTE *)(a2 + 72) = v40 & 1;
    *(_QWORD *)(a2 + 80) = v38;
    *(_QWORD *)(a2 + 88) = v39;
    *(_QWORD *)(a2 + 96) = 0;
    *(_BYTE *)(a2 + 104) = v37 & 1;
    *(_BYTE *)(a2 + 105) = v36 & 1;
    *(_QWORD *)(a2 + 112) = v34;
    *(_QWORD *)(a2 + 120) = v35;
    *(_QWORD *)(a2 + 128) = v32;
    *(_QWORD *)(a2 + 136) = v33;
    *(_QWORD *)(a2 + 144) = v30;
    *(_QWORD *)(a2 + 152) = v31;
    *(_QWORD *)(a2 + 160) = v28;
    *(_QWORD *)(a2 + 168) = v29;
    *(_BYTE *)(a2 + 176) = v19 & 1;
    *(_QWORD *)(a2 + 184) = v27;
    *(_QWORD *)(a2 + 192) = v25;
    *(_QWORD *)(a2 + 200) = v26;
    *(_QWORD *)(a2 + 208) = v24;
    *(_QWORD *)(a2 + 216) = v21;
    *(_QWORD *)(a2 + 224) = v22;
    *(_QWORD *)(a2 + 232) = result;
    *(_QWORD *)(a2 + 240) = v23;
  }
  return result;
}

uint64_t sub_23AAAAFD0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  _QWORD v11[4];
  _OWORD v12[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAB9E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v12);
  else
    memset(v12, 0, sizeof(v12));
  sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
    v6 = v10 & 1;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v12, v7, qword_2542E5640);
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AAABA5C(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001BLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205BC0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
  }
  return v6 & 1;
}

uint64_t sub_23AAAB19C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _QWORD v14[4];
  _OWORD v15[2];

  if (*(_QWORD *)(a2 + 16) && (v7 = a3(a1), (v8 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v7, (uint64_t)v15);
  else
    memset(v15, 0, sizeof(v15));
  sub_23AA8EFC8((uint64_t)v15, (uint64_t)v14, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v15, qword_2542E5640);
    v9 = v13 & 1;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v11 = v10;
    sub_23AA8EFC8((uint64_t)v15, v10, qword_2542E5640);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v15, (uint64_t)v14, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    a4(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 32) = 0xD00000000000001BLL;
    *(_QWORD *)(v11 + 40) = 0x800000023B205BC0;
    *(_BYTE *)(v11 + 48) = 4;
    swift_willThrow();
    sub_23AA8A05C((uint64_t)v15, qword_2542E5640);
  }
  return v9 & 1;
}

uint64_t sub_23AAAB374(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v8;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  _OWORD v17[2];

  v8 = a1;
  if (*(_QWORD *)(a2 + 16) && (v10 = sub_23AAAB9E8(a1), (v11 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)v17);
  else
    memset(v17, 0, sizeof(v17));
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
    return v15;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v14 = v13;
    sub_23AA8EFC8((uint64_t)v17, v13, qword_2542E5640);
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AAABA5C(v8);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
  }
}

uint64_t sub_23AAAB538(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v8;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  _OWORD v17[2];

  v8 = a1;
  if (*(_QWORD *)(a2 + 16) && (v10 = sub_23AAAB9E8(a1), (v11 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)v17);
  else
    memset(v17, 0, sizeof(v17));
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
    return v15;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v14 = v13;
    sub_23AA8EFC8((uint64_t)v17, v13, qword_2542E5640);
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AAABA5C(v8);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
  }
}

uint64_t sub_23AAAB6FC@<X0>(id a1@<X1>, uint64_t a2@<X0>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _OWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[15];
  uint64_t v37;
  int v38;

  v38 = a3;
  objc_msgSend(a1, sel_columns);
  sub_23AAACAA0();
  v7 = (_QWORD *)sub_23B1C6230();
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
  {
LABEL_22:
    sub_23AAAA79C((uint64_t)v7, (uint64_t)v36);
    result = swift_bridgeObjectRelease();
    if (!v4)
    {
      v25 = v36[13];
      *(_OWORD *)(a4 + 192) = v36[12];
      *(_OWORD *)(a4 + 208) = v25;
      *(_OWORD *)(a4 + 224) = v36[14];
      *(_QWORD *)(a4 + 240) = v37;
      v26 = v36[9];
      *(_OWORD *)(a4 + 128) = v36[8];
      *(_OWORD *)(a4 + 144) = v26;
      v27 = v36[11];
      *(_OWORD *)(a4 + 160) = v36[10];
      *(_OWORD *)(a4 + 176) = v27;
      v28 = v36[5];
      *(_OWORD *)(a4 + 64) = v36[4];
      *(_OWORD *)(a4 + 80) = v28;
      v29 = v36[7];
      *(_OWORD *)(a4 + 96) = v36[6];
      *(_OWORD *)(a4 + 112) = v29;
      v30 = v36[1];
      *(_OWORD *)a4 = v36[0];
      *(_OWORD *)(a4 + 16) = v30;
      v31 = v36[3];
      *(_OWORD *)(a4 + 32) = v36[2];
      *(_OWORD *)(a4 + 48) = v31;
    }
    return result;
  }
  v32 = a4;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (!__OFADD__(v38, (_DWORD)v9))
  {
    v10 = *(unsigned __int8 *)(a2 + v9 + 32);
    sub_23AAAC300(*(_BYTE *)(a2 + v9 + 32));
    if (v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (!v34)
    {
      sub_23AA8A05C((uint64_t)&v33, qword_2542E5640);
      goto LABEL_19;
    }
    sub_23AAA159C(&v33, v35);
    sub_23AAA15AC((uint64_t)v35, (uint64_t)&v33);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = sub_23AAAB9E8(v10);
    v14 = v7[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      goto LABEL_28;
    v17 = v12;
    if (v7[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v12 & 1) == 0)
          goto LABEL_16;
      }
      else
      {
        sub_23B186824();
        if ((v17 & 1) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_23AD102BC(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_23AAAB9E8(v10);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_30;
      v13 = v18;
      if ((v17 & 1) == 0)
      {
LABEL_16:
        v7[(v13 >> 6) + 8] |= 1 << v13;
        *(_BYTE *)(v7[6] + v13) = v10;
        sub_23AAA159C(&v33, (_OWORD *)(v7[7] + 32 * v13));
        v21 = v7[2];
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
          goto LABEL_29;
        v7[2] = v23;
        goto LABEL_18;
      }
    }
    v20 = (_OWORD *)(v7[7] + 32 * v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    sub_23AAA159C(&v33, v20);
LABEL_18:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
LABEL_19:
    if (v9 == 0x7FFFFFFF)
      goto LABEL_27;
    if (v8 == ++v9)
    {
      swift_bridgeObjectRelease();
      a4 = v32;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AAAB9E8(uint64_t a1)
{
  uint64_t v2;

  sub_23B1C74A8();
  sub_23AAABA5C(a1);
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  v2 = sub_23B1C74E4();
  return sub_23AAABD28(a1, v2);
}

uint64_t sub_23AAABA5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AAABA98 + 4 * byte_23B1D8C38[a1]))(0x696C696261706163, 0xEC00000073656974);
}

uint64_t sub_23AAABA98()
{
  return 0x616F6C70755F7369;
}

uint64_t sub_23AAABAC8()
{
  return 0x6E6964616F6C7075;
}

unint64_t sub_23AAABAEC()
{
  return 0xD000000000000011;
}

uint64_t sub_23AAABD28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

void sub_23AAAC300(char a1)
{
  __asm { BR              X10 }
}

id sub_23AAAC344(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id result;

  result = objc_msgSend(v22, sel_BOOLAtIndex_, v20);
  *(_QWORD *)(v21 + 24) = MEMORY[0x24BEE1328];
  *(_BYTE *)v21 = (_BYTE)result;
  return result;
}

uint64_t sub_23AAAC6C0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  unsigned __int8 v8;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  _OWORD v17[2];

  v8 = a1;
  if (*(_QWORD *)(a2 + 16) && (v10 = sub_23AAAB9E8(a1), (v11 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)v17);
  else
    memset(v17, 0, sizeof(v17));
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  a3(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
    return v15;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v14 = v13;
    sub_23AA8EFC8((uint64_t)v17, v13, qword_2542E5640);
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v17, (uint64_t)v16, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AAABA5C(v8);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v14 + 32) = a4;
    *(_QWORD *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
  }
}

void sub_23AAAC888(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void type metadata accessor for NSFileProviderContentPolicy(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2542E76E0);
}

uint64_t destroy for JobLockRuleAssociatedJobs()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void type metadata accessor for NSFileProviderItemCapabilities(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542E76F0);
}

uint64_t sub_23AAAC91C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  if (objc_msgSend(v1, sel_isNullAtIndex_, a1))
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  if (swift_dynamicCastMetatype())
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  sub_23B1C5780();
  swift_allocObject();
  sub_23B1C5774();
  v4 = objc_msgSend(v1, sel_dataAtIndex_, a1);
  v5 = sub_23B1C5AD4();
  v7 = v6;

  sub_23AAACA5C();
  sub_23B1C5768();
  sub_23AAAE53C(v5, v7);
  result = swift_release();
  if (!v2)
    return v9;
  return result;
}

unint64_t sub_23AAACA5C()
{
  unint64_t result;

  result = qword_2542E7698;
  if (!qword_2542E7698)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0164, &type metadata for UserInfo);
    atomic_store(result, (unint64_t *)&qword_2542E7698);
  }
  return result;
}

unint64_t sub_23AAACAA0()
{
  unint64_t result;

  result = qword_2542E75F0;
  if (!qword_2542E75F0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8D38, &_s9SQLFieldsON_2);
    atomic_store(result, (unint64_t *)&qword_2542E75F0);
  }
  return result;
}

uint64_t sub_23AAACAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, void (*a4)(uint64_t)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD v15[4];
  _OWORD v16[2];

  if (*(_QWORD *)(a2 + 16) && (v9 = a3(a1), (v10 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v9, (uint64_t)v16);
  else
    memset(v16, 0, sizeof(v16));
  sub_23AA8EFC8((uint64_t)v16, (uint64_t)v15, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6780);
  if ((swift_dynamicCast() & 1) != 0)
  {
    result = sub_23AA8A05C((uint64_t)v16, qword_2542E5640);
    *a5 = v14;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v13 = v12;
    sub_23AA8EFC8((uint64_t)v16, v12, qword_2542E5640);
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v16, (uint64_t)v15, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    a4(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v13 + 32) = 0xD000000000000025;
    *(_QWORD *)(v13 + 40) = 0x800000023B205D50;
    *(_BYTE *)(v13 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v16, qword_2542E5640);
  }
  return result;
}

uint64_t sub_23AAACCC4(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75D0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000027;
    *(_QWORD *)(v8 + 40) = 0x800000023B207880;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAACE9C(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B207910;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAAD064(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5528);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000003DLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B2077A0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAAD23C(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74E0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000025;
    *(_QWORD *)(v8 + 40) = 0x800000023B2077E0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAAD408(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7458);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000039;
    *(_QWORD *)(v8 + 40) = 0x800000023B207840;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAAD5D4(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAAFD94(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5198);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000025;
    *(_QWORD *)(v8 + 40) = 0x800000023B2078B0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AAAD7A0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t result;
  unsigned __int8 v15;
  id v16;
  id v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  id v25;
  unsigned __int8 v26;
  id v27;
  int v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  id v108;
  unsigned __int8 v109;
  id v110;
  unsigned __int8 v111;
  id v112;
  unsigned __int8 v113;
  unsigned __int8 v114;
  __int16 v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  unsigned __int8 v123;
  uint64_t v124;
  id v125;
  unsigned __int8 v126;
  unsigned __int8 v127;
  unsigned __int8 v128;
  unsigned __int8 v129;
  id v130;
  unsigned __int8 v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  _OWORD v135[31];
  __int128 __dst;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int16 v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  char v171;
  id v172;
  unsigned __int8 v173;
  id v174;
  unsigned __int8 v175;
  id v176;
  unsigned __int8 v177;
  uint64_t v178;
  unsigned __int8 v179;
  __int16 v180;
  uint64_t v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  _BYTE v197[248];
  _QWORD __src[63];
  unint64_t v199;

  v13 = sub_23AAAF608();
  sub_23AAAF634(v13, a5, a2, a1);
  if (v6)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a5, sel_isNullAtIndex_, a3);
  if ((v15 & 1) != 0)
    v16 = 0;
  else
    v16 = objc_msgSend(a5, sel_longAtIndex_, a3);
  if (__OFADD__((_DWORD)a3, 1))
  {
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  v132 = v16;
  v131 = objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 1));
  if ((v131 & 1) != 0)
    v17 = 0;
  else
    v17 = objc_msgSend(a5, sel_longAtIndex_, (a3 + 1));
  if (__OFADD__((_DWORD)a3, 2))
    goto LABEL_112;
  v130 = v17;
  if ((objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 2)) & 1) != 0)
    v18 = 2;
  else
    v18 = objc_msgSend(a5, sel_BOOLAtIndex_, (a3 + 2));
  if (__OFADD__((_DWORD)a3, 3))
    goto LABEL_113;
  v129 = v18;
  if ((objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 3)) & 1) != 0)
    v19 = 2;
  else
    v19 = objc_msgSend(a5, sel_BOOLAtIndex_, (a3 + 3));
  if (__OFADD__((_DWORD)a3, 4))
    goto LABEL_114;
  v128 = v19;
  if ((objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 4)) & 1) != 0)
  {
    v134 = 0;
    v199 = 0xF000000000000000;
  }
  else
  {
    if (objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 4)))
      goto LABEL_119;
    if (swift_dynamicCastMetatype())
      goto LABEL_120;
    v20 = objc_msgSend(a5, sel_dataAtIndex_, (a3 + 4));
    v134 = sub_23B1C5AD4();
    v199 = v21;

  }
  if (__OFADD__((_DWORD)a3, 5))
  {
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  v127 = v15;
  if ((objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 5)) & 1) != 0)
  {
    v133 = 0;
    v22 = 0xF000000000000000;
    goto LABEL_30;
  }
  if (objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 5)))
    goto LABEL_119;
  if (swift_dynamicCastMetatype())
LABEL_120:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  v23 = objc_msgSend(a5, sel_dataAtIndex_, (a3 + 5));
  v133 = sub_23B1C5AD4();
  v22 = v24;

LABEL_30:
  if (__OFADD__((_DWORD)a3, 6))
  {
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  }
  v126 = objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 6));
  if ((v126 & 1) != 0)
    v25 = 0;
  else
    v25 = objc_msgSend(a5, sel_longAtIndex_, (a3 + 6));
  if (__OFADD__((_DWORD)a3, 7))
    goto LABEL_117;
  v125 = v25;
  v26 = objc_msgSend(a5, sel_isNullAtIndex_, (a3 + 7));
  if ((v26 & 1) != 0)
    v27 = 0;
  else
    v27 = objc_msgSend(a5, sel_longAtIndex_, (a3 + 7));
  v28 = a3 + 8;
  if (__OFADD__((_DWORD)a3, 8))
    goto LABEL_118;
  v124 = (uint64_t)v27;
  v29 = sub_23AAAE8F4();
  sub_23AAA1310(a5, v29, v28, (uint64_t)__src);
  swift_bridgeObjectRelease();
  if (__src[30])
  {
    v30 = sub_23AAAF0A8();
    sub_23AAAB6FC(a5, (uint64_t)v30, a4, (uint64_t)v135);
    swift_bridgeObjectRelease();
    v148 = v135[12];
    v149 = v135[13];
    v150 = v135[14];
    *(_QWORD *)&v151 = *(_QWORD *)&v135[15];
    v144 = v135[8];
    v145 = v135[9];
    v146 = v135[10];
    v147 = v135[11];
    v140 = v135[4];
    v141 = v135[5];
    v142 = v135[6];
    v143 = v135[7];
    __dst = v135[0];
    v137 = v135[1];
    v138 = v135[2];
    v139 = v135[3];
    nullsub_1(&__dst);
  }
  else
  {
    sub_23AAF8E48((uint64_t)&__dst);
  }
  sub_23AA724E8((uint64_t)&__dst, (uint64_t)v197, &qword_2542E5050);
  v31 = __src[13];
  v123 = v26;
  if (!__src[13])
    goto LABEL_88;
  if (__src[5] != *(_QWORD *)(a1 + 32) || LODWORD(__src[6]) != *(_DWORD *)(a1 + 40))
    goto LABEL_51;
  v32 = *(_BYTE *)(a1 + 56);
  if ((__src[8] & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 56) & 1) != 0)
      goto LABEL_54;
    goto LABEL_51;
  }
  if (__src[7] != *(_QWORD *)(a1 + 48))
    v32 = 1;
  if ((v32 & 1) != 0)
  {
LABEL_51:
    v33 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48);
    if ((*(_BYTE *)(v33 + *(int *)(type metadata accessor for ItemMetadata() + 80)) & 1) == 0 && (__src[3] & 8) == 0)
      __src[3] |= 8uLL;
  }
LABEL_54:
  v34 = __src[12];
  v35 = *(_QWORD *)(a1 + 72);
  v36 = *(unsigned __int8 *)(a1 + 80);
  v37 = *(_QWORD *)(a1 + 96);
  if (!LOBYTE(__src[11]))
  {
    if (!*(_BYTE *)(a1 + 80) && LODWORD(__src[10]) == (_DWORD)v35)
      goto LABEL_68;
LABEL_86:
    if ((~LOBYTE(__src[3]) & 3) != 0)
      __src[3] |= 3uLL;
    goto LABEL_88;
  }
  if (LOBYTE(__src[11]) != 1)
  {
    if (__src[10])
    {
      if (v36 == 2 && v35 == 1)
        goto LABEL_68;
    }
    else if (v36 == 2 && !v35)
    {
      goto LABEL_68;
    }
    goto LABEL_86;
  }
  if (v36 != 1 || __src[10] != v35)
    goto LABEL_86;
LABEL_68:
  v120 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRetain_n();
  v38 = v37;
  swift_bridgeObjectRetain();
  v118 = v34;
  v39 = sub_23AAAE580(v34, v31);
  v41 = v40;
  swift_bridgeObjectRelease();
  if (v41)
  {
    if (v39 == 12565487 && v41 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_73:
      swift_bridgeObjectRetain();
      v43 = sub_23B1C64B8();
      v119 = sub_23AA8A1BC(v43, v118, v31);
      v45 = v44;
      v47 = v46;
      v49 = v48;
      swift_bridgeObjectRelease();
      v50 = MEMORY[0x23B85ED8C](v119, v45, v47, v49);
      v117 = v51;
      v118 = v50;
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    v42 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v42 & 1) != 0)
      goto LABEL_73;
  }
  swift_bridgeObjectRetain();
  v117 = v31;
LABEL_75:
  swift_bridgeObjectRetain();
  v52 = sub_23AAAE580(v120, v38);
  v54 = v53;
  swift_bridgeObjectRelease();
  if (!v54)
    goto LABEL_81;
  if (v52 != 12565487 || v54 != 0xA300000000000000)
  {
    v55 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v55 & 1) != 0)
      goto LABEL_80;
LABEL_81:
    swift_bridgeObjectRetain();
    v65 = v38;
    v63 = v120;
    goto LABEL_82;
  }
  swift_bridgeObjectRelease();
LABEL_80:
  swift_bridgeObjectRetain();
  v56 = sub_23B1C64B8();
  v121 = sub_23AA8A1BC(v56, v120, v38);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  swift_bridgeObjectRelease();
  v63 = MEMORY[0x23B85ED8C](v121, v58, v60, v62);
  v65 = v64;
  swift_bridgeObjectRelease();
LABEL_82:
  if (v118 == v63 && v117 == v65)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_88;
  }
  v66 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v66 & 1) == 0)
    goto LABEL_86;
LABEL_88:
  v67 = __src[36];
  if (__src[36] != 1)
  {
    v68 = __src[34];
    v70 = __src[35];
    sub_23AAAE668(__src[34], __src[35]);
    if (v199 >> 60 == 15)
    {
      if (v70 >> 60 != 15)
        goto LABEL_95;
    }
    else
    {
      if (v70 >> 60 == 15)
        goto LABEL_95;
      v72 = v199;
      sub_23AAA3E2C(v134, v199);
      sub_23AAA3E2C(v134, v72);
      sub_23AAAE6AC(v134, v72);
      v122 = v73;
      sub_23AAA3E18(v68, v70);
      sub_23AAA3E18(v134, v72);
      sub_23AAA3E18(v134, v72);
      if ((v122 & 1) == 0)
      {
LABEL_96:
        if ((__src[32] & 8) == 0)
          __src[32] |= 8uLL;
        if (v67 == 1)
        {
          v69 = 0;
          v70 = 0xF000000000000000;
          goto LABEL_102;
        }
      }
    }
    v69 = __src[37];
    v70 = __src[38];
    sub_23AAAE668(__src[37], __src[38]);
    goto LABEL_102;
  }
  v68 = 0;
  v69 = 0;
  v70 = 0xF000000000000000;
  if (v199 >> 60 != 15)
  {
LABEL_95:
    v71 = v199;
    sub_23AAA3E2C(v134, v199);
    sub_23AAA3E18(v134, v71);
    sub_23AAA3E18(v68, v70);
    goto LABEL_96;
  }
LABEL_102:
  if (v22 >> 60 != 15)
  {
    if (v70 >> 60 != 15)
    {
      sub_23AAA3E2C(v133, v22);
      sub_23AAA3E2C(v133, v22);
      sub_23AAAE6AC(v133, v22);
      v75 = v74;
      sub_23AAA3E18(v69, v70);
      sub_23AAA3E18(v133, v22);
      sub_23AAA3E18(v133, v22);
      sub_23AAA3E18(v134, v199);
      sub_23AAA3E18(v133, v22);
      if ((v75 & 1) != 0)
        goto LABEL_110;
LABEL_108:
      if ((~LOBYTE(__src[32]) & 3) != 0)
        __src[32] |= 3uLL;
      goto LABEL_110;
    }
LABEL_106:
    sub_23AAA3E2C(v133, v22);
    sub_23AAA3E18(v133, v22);
    sub_23AAA3E18(v69, v70);
    sub_23AAA3E18(v134, v199);
    sub_23AAA3E18(v133, v22);
    goto LABEL_108;
  }
  if (v70 >> 60 != 15)
    goto LABEL_106;
  sub_23AAA3E18(v134, v199);
LABEL_110:
  memcpy(v135, __src, sizeof(v135));
  nullsub_1(v135);
  v76 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48);
  v77 = type metadata accessor for ItemMetadata();
  v78 = *(_BYTE *)(v76 + *(int *)(v77 + 80));
  LOBYTE(v76) = *(_BYTE *)(v76 + *(int *)(v77 + 72));
  v79 = *(_QWORD *)(a1 + 32);
  v80 = *(_QWORD *)(a1 + 16);
  v81 = *(_BYTE *)(a1 + 24);
  sub_23AA724E8((uint64_t)v135, (uint64_t)&__dst, qword_2542E6E20);
  LOBYTE(v167) = v78;
  HIBYTE(v167) = v76;
  v169 = 0;
  v168 = v79;
  v170 = v80;
  v171 = v81;
  v172 = v132;
  v173 = v127;
  v174 = v130;
  v175 = v131;
  v176 = v125;
  v177 = v126;
  v178 = v124;
  v179 = v123;
  LOBYTE(v180) = v129;
  HIBYTE(v180) = v128;
  sub_23AA724E8((uint64_t)v197, (uint64_t)&v181, &qword_2542E5050);
  v82 = v137;
  *(_OWORD *)a6 = __dst;
  *(_OWORD *)(a6 + 16) = v82;
  v83 = v139;
  *(_OWORD *)(a6 + 32) = v138;
  *(_OWORD *)(a6 + 48) = v83;
  v84 = v141;
  *(_OWORD *)(a6 + 64) = v140;
  *(_OWORD *)(a6 + 80) = v84;
  v85 = v143;
  *(_OWORD *)(a6 + 96) = v142;
  *(_OWORD *)(a6 + 112) = v85;
  v86 = v145;
  *(_OWORD *)(a6 + 128) = v144;
  *(_OWORD *)(a6 + 144) = v86;
  v87 = v147;
  *(_OWORD *)(a6 + 160) = v146;
  *(_OWORD *)(a6 + 176) = v87;
  v88 = v149;
  *(_OWORD *)(a6 + 192) = v148;
  *(_OWORD *)(a6 + 208) = v88;
  v89 = v151;
  *(_OWORD *)(a6 + 224) = v150;
  *(_OWORD *)(a6 + 240) = v89;
  v90 = v153;
  *(_OWORD *)(a6 + 256) = v152;
  *(_OWORD *)(a6 + 272) = v90;
  v91 = v155;
  *(_OWORD *)(a6 + 288) = v154;
  *(_OWORD *)(a6 + 304) = v91;
  v92 = v157;
  *(_OWORD *)(a6 + 320) = v156;
  *(_OWORD *)(a6 + 336) = v92;
  v93 = v159;
  *(_OWORD *)(a6 + 352) = v158;
  *(_OWORD *)(a6 + 368) = v93;
  v94 = v161;
  *(_OWORD *)(a6 + 384) = v160;
  *(_OWORD *)(a6 + 400) = v94;
  v95 = v163;
  *(_OWORD *)(a6 + 416) = v162;
  *(_OWORD *)(a6 + 432) = v95;
  v96 = v165;
  *(_OWORD *)(a6 + 448) = v164;
  *(_OWORD *)(a6 + 464) = v96;
  *(_OWORD *)(a6 + 480) = v166;
  v97 = v183;
  *(_OWORD *)(a6 + 608) = v182;
  *(_OWORD *)(a6 + 624) = v97;
  v98 = v185;
  *(_OWORD *)(a6 + 640) = v184;
  *(_OWORD *)(a6 + 656) = v98;
  v99 = v187;
  *(_OWORD *)(a6 + 672) = v186;
  *(_OWORD *)(a6 + 688) = v99;
  v100 = v189;
  *(_OWORD *)(a6 + 704) = v188;
  *(_OWORD *)(a6 + 720) = v100;
  v101 = v191;
  *(_OWORD *)(a6 + 736) = v190;
  *(_OWORD *)(a6 + 752) = v101;
  v102 = v193;
  *(_OWORD *)(a6 + 768) = v192;
  *(_OWORD *)(a6 + 784) = v102;
  v103 = v195;
  *(_OWORD *)(a6 + 800) = v194;
  *(_OWORD *)(a6 + 816) = v103;
  *(_OWORD *)(a6 + 832) = v196;
  v104 = v169;
  v105 = v168;
  v106 = v170;
  v107 = v171;
  v108 = v172;
  v109 = v173;
  v110 = v174;
  v111 = v175;
  v112 = v176;
  v113 = v177;
  result = v178;
  v114 = v179;
  v115 = v180;
  v116 = v181;
  *(_WORD *)(a6 + 496) = v167;
  *(_QWORD *)(a6 + 504) = v105;
  *(_BYTE *)(a6 + 512) = v104;
  *(_QWORD *)(a6 + 520) = v106;
  *(_BYTE *)(a6 + 528) = v107;
  *(_QWORD *)(a6 + 536) = v108;
  *(_BYTE *)(a6 + 544) = v109;
  *(_QWORD *)(a6 + 552) = v110;
  *(_BYTE *)(a6 + 560) = v111;
  *(_QWORD *)(a6 + 568) = v112;
  *(_BYTE *)(a6 + 576) = v113;
  *(_QWORD *)(a6 + 584) = result;
  *(_BYTE *)(a6 + 592) = v114;
  *(_WORD *)(a6 + 593) = v115;
  *(_QWORD *)(a6 + 600) = v116;
  return result;
}

id sub_23AAAE478(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      result = (id)swift_retain();
      break;
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23AAAE4B4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 60 != 11)
    return sub_23AAA3E2C(a2, a3);
  return result;
}

uint64_t sub_23AAAE4D0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a3 != 1)
  {
    sub_23AAAE53C(result, a2);
    swift_bridgeObjectRelease();
    sub_23AAAE53C(a4, a5);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23AAAE53C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23AAAE580(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_23B1C65A8();
  else
    return 0;
}

uint64_t sub_23AAAE5C0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a3 != 1)
  {
    sub_23AAAE668(result, a2);
    swift_bridgeObjectRetain();
    sub_23AAAE668(a4, a5);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FPItemVersionData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_23AAAE668(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t sub_23AAAE668(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_23AAAE6AC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_23AAAE6F8()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_23AAAE72C + *((int *)qword_23AEBE860 + (v0 >> 62))))();
}

uint64_t sub_23AAAE73C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_23AAAE8F4()
{
  return sub_23AAAF28C((uint64_t *)&unk_2542E6E10, &qword_2542E7498, (uint64_t (*)(uint64_t))sub_23AD826D0);
}

uint64_t sub_23AAAE910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_23AAAE9E4((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

void sub_23AAAE9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_23AAAEA44(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x23AAAEC28);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_23AAAEC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,char a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if (a57)
  {
    sub_23AAAEE68(a6, a7, a8, a9, a10, a11, a12, a13, a14);
    sub_23AAAEE10(a19, a20, a21);
    sub_23AAAEE4C(a22, a23, a24);

    sub_23AAAE4D0(a35, a36, a37, a38, a39);
    sub_23AAAEE10(a44, a45, a46);
    sub_23AAAEE4C(a47, a48, a49);
    swift_bridgeObjectRelease();

  }
}

void sub_23AAAEE10(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      swift_release();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_23AAAEE4C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 60 != 11)
    return sub_23AAA3E18(a2, a3);
  return result;
}

uint64_t sub_23AAAEE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;

  result = a9;
  if (a9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23AAAEEC4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  _QWORD *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[2];
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v8 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v9 = sub_23AAAF4C4(a1, a2), (v10 & 1) != 0))
  {
    sub_23AAA15AC(v8[7] + 32 * v9, (uint64_t)v14);
    sub_23AAA159C(v14, &v16);
    swift_endAccess();
    sub_23AAA159C(&v16, v14);
    __swift_instantiateConcreteTypeFromMangledName(a3);
    swift_dynamicCast();
    v11 = v15;
  }
  else
  {
    v12 = swift_endAccess();
    v11 = a4(v12);
    v17 = __swift_instantiateConcreteTypeFromMangledName(a3);
    *(_QWORD *)&v16 = v11;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23AD035F8((uint64_t)&v16, a1, a2);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v11;
}

void *sub_23AAAF0A8()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  void *v3;
  _OWORD v5[2];
  void *v6;
  __int128 v7;
  uint64_t v8;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v1 = sub_23AAAF4C4(0xD000000000000019, 0x800000023B202170), (v2 & 1) != 0))
  {
    sub_23AAA15AC(v0[7] + 32 * v1, (uint64_t)v5);
    sub_23AAA159C(v5, &v7);
    swift_endAccess();
    sub_23AAA159C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54D8);
    swift_dynamicCast();
    v3 = v6;
  }
  else
  {
    swift_endAccess();
    v3 = &unk_250BDC818;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54D8);
    *(_QWORD *)&v7 = &unk_250BDC818;
    swift_beginAccess();
    sub_23AD035F8((uint64_t)&v7, 0xD000000000000019, 0x800000023B202170);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

uint64_t sub_23AAAF28C(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v6 = sub_23B1C7568();
  v8 = v7;
  swift_beginAccess();
  v9 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v10 = sub_23AAAF4C4(v6, v8), (v11 & 1) != 0))
  {
    sub_23AAA15AC(v9[7] + 32 * v10, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v19 + 1))
  {
    sub_23AAA159C(&v18, &v21);
    swift_endAccess();
    sub_23AAA159C(&v21, &v18);
    __swift_instantiateConcreteTypeFromMangledName(a2);
    swift_dynamicCast();
    v12 = v20;
  }
  else
  {
    sub_23AA94C08((uint64_t)&v18);
    v13 = swift_endAccess();
    v12 = a3(v13);
    v14 = sub_23B1C7568();
    v16 = v15;
    v22 = __swift_instantiateConcreteTypeFromMangledName(a2);
    *(_QWORD *)&v21 = v12;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23AD035F8((uint64_t)&v21, v14, v16);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v12;
}

unint64_t sub_23AAAF4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23B1C74A8();
  sub_23B1C64A0();
  v4 = sub_23B1C74E4();
  return sub_23AAAF528(a1, a2, v4);
}

unint64_t sub_23AAAF528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23B1C7388() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23B1C7388() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_23AAAF608()
{
  return sub_23AAAEEC4(0xD000000000000015, 0x800000023B202190, &qword_2542E54D0, (uint64_t (*)(uint64_t))sub_23AD834B8);
}

uint64_t sub_23AAAF634@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  id v17;
  id v18;
  unint64_t v19;
  char v20;
  unsigned int v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  _OWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  int v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  ValueMetadata *v70;
  _OWORD v71[2];
  int v72;

  v5 = v4;
  v72 = a3;
  v59 = a4;
  v8 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5474();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = a2;
  objc_msgSend(a2, sel_columns);
  sub_23AAB0F80();
  v13 = (_QWORD *)sub_23B1C6230();
  v63 = *(_QWORD *)(a1 + 16);
  if (!v63)
  {
LABEL_41:
    sub_23AA9B290((uint64_t)v13, v59);
    return swift_bridgeObjectRelease();
  }
  v55 = v11;
  v56 = v10;
  swift_bridgeObjectRetain();
  v14 = 0;
  v60 = a1;
  while (2)
  {
    v15 = (v72 + v14);
    if (__OFADD__(v72, (_DWORD)v14))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      v70 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD0);
      *(_QWORD *)&v69 = swift_allocObject();
      sub_23B1C704C();
      __break(1u);
LABEL_51:
      sub_23B1C7418();
      __break(1u);
LABEL_52:
      sub_23B1C7040();
      __break(1u);
LABEL_53:
      sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
    }
    v16 = *(_BYTE *)(a1 + v14 + 32);
    switch(v16)
    {
      case 0x1Cu:
        v70 = &type metadata for VFSItemID;
        v17 = v64;
        v18 = objc_msgSend(v17, sel_longAtIndex_, v15);
        if (v18 == (id)0x8000000000000000)
          goto LABEL_23;
        v19 = (unint64_t)v18;
        if (!v18)
          goto LABEL_7;
        goto LABEL_14;
      case 0x1Du:
        v70 = &type metadata for VFSItemID;
        v17 = v64;
        v27 = objc_msgSend(v17, sel_longAtIndex_, v15);
        if (v27 == (id)0x8000000000000000)
        {
LABEL_23:
          v20 = 2;
          v19 = 1;
          goto LABEL_26;
        }
        v19 = (unint64_t)v27;
        if (!v27)
        {
LABEL_7:
          v20 = 2;
LABEL_26:

          *(_QWORD *)&v69 = v19;
          BYTE8(v69) = v20;
LABEL_27:
          sub_23AAA159C(&v69, v71);
          sub_23AAA15AC((uint64_t)v71, (uint64_t)&v69);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v65 = v13;
          v40 = sub_23AAAFD94(v16);
          v41 = v13[2];
          v42 = (v39 & 1) == 0;
          v43 = v41 + v42;
          if (__OFADD__(v41, v42))
            goto LABEL_48;
          v44 = v39;
          if (v13[3] >= v43)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_23B18AFF8();
          }
          else
          {
            sub_23AD18414(v43, isUniquelyReferenced_nonNull_native);
            v45 = sub_23AAAFD94(v16);
            if ((v44 & 1) != (v46 & 1))
              goto LABEL_51;
            v40 = v45;
          }
          v13 = v65;
          if ((v44 & 1) != 0)
          {
            v47 = (_OWORD *)(v65[7] + 32 * v40);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
            sub_23AAA159C(&v69, v47);
          }
          else
          {
            v65[(v40 >> 6) + 8] |= 1 << v40;
            *(_BYTE *)(v13[6] + v40) = v16;
            sub_23AAA159C(&v69, (_OWORD *)(v13[7] + 32 * v40));
            v48 = v13[2];
            v49 = __OFADD__(v48, 1);
            v50 = v48 + 1;
            if (v49)
              goto LABEL_49;
            v13[2] = v50;
          }
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
LABEL_38:
          if (v14 == 0x7FFFFFFF)
            goto LABEL_47;
          if (v63 == ++v14)
          {
            swift_bridgeObjectRelease();
            goto LABEL_41;
          }
          continue;
        }
LABEL_14:
        if ((v19 & 0x8000000000000000) == 0)
        {
          v20 = 1;
          goto LABEL_26;
        }
        v19 = -(uint64_t)v19;
        if (!HIDWORD(v19))
        {
          v20 = 0;
          goto LABEL_26;
        }
        sub_23B1C53FC();
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
        v52 = v58;
        v53 = v56;
        sub_23B1C5864();
        sub_23B1C5354();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v53);
        swift_willThrow();

        __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v69);
LABEL_45:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      case 0x1Eu:
        v70 = &type metadata for Filename;
        v22 = objc_msgSend(v64, sel_stringAtIndex_, v15);
        v23 = sub_23B1C63E0();
        v25 = v24;

        *(_QWORD *)&v69 = v23;
        *((_QWORD *)&v69 + 1) = v25;
        goto LABEL_27;
      case 0x1Fu:
        v26 = (unint64_t)objc_msgSend(v64, sel_longLongAtIndex_, v15);
        v70 = (ValueMetadata *)MEMORY[0x24BEE4568];
        if ((v26 & 0x8000000000000000) != 0)
          goto LABEL_52;
        *(_QWORD *)&v69 = v26;
        goto LABEL_27;
      case 0x20u:
        v21 = objc_msgSend(v64, sel_unsignedIntAtIndex_, v15);
        v70 = (ValueMetadata *)MEMORY[0x24BEE44F0];
        LODWORD(v69) = v21;
        goto LABEL_27;
      case 0x21u:
        v70 = &type metadata for VFSVersion;
        v61 = swift_allocObject();
        *(_QWORD *)&v69 = v61;
        v28 = v64;
        if (objc_msgSend(v28, sel_isNullAtIndex_, v15))
          goto LABEL_53;
        v62 = v5;
        if (swift_dynamicCastMetatype())
          sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
        sub_23B1C5780();
        swift_allocObject();
        sub_23B1C5774();
        v29 = objc_msgSend(v28, sel_dataAtIndex_, v15);
        v30 = sub_23B1C5AD4();
        v32 = v31;

        sub_23AC3F79C();
        v33 = v62;
        sub_23B1C5768();
        v5 = v33;
        if (v33)
        {
          sub_23AAAE53C(v30, v32);

          swift_release();
          __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v69);
          goto LABEL_45;
        }
        sub_23AAAE53C(v30, v32);

        swift_release();
        v34 = v66;
        v35 = v67;
        v36 = v68;
        a1 = v60;
        v37 = v61;
        *(_QWORD *)(v61 + 16) = v65;
        *(_DWORD *)(v37 + 24) = v34;
        *(_QWORD *)(v37 + 32) = v35;
        *(_BYTE *)(v37 + 40) = v36;
        goto LABEL_27;
      case 0x22u:
        goto LABEL_50;
      default:
        sub_23AAB096C(*(_BYTE *)(a1 + v14 + 32));
        if (v5)
          goto LABEL_45;
        if (v70)
          goto LABEL_27;
        sub_23AA8A05C((uint64_t)&v69, qword_2542E5640);
        goto LABEL_38;
    }
  }
}

unint64_t sub_23AAAFD94(unsigned __int8 a1)
{
  uint64_t v2;

  sub_23B1C74A8();
  switch(a1)
  {
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
      sub_23B1C74B4();
      break;
    default:
      sub_23B1C74B4();
      sub_23AAB0660(a1);
      sub_23B1C64A0();
      swift_bridgeObjectRelease();
      break;
  }
  v2 = sub_23B1C74E4();
  return sub_23AAAFE94(a1, v2);
}

unint64_t sub_23AAAFE94(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    while (2)
    {
      switch(*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        case 0x1C:
          if (a1 != 28)
            goto LABEL_4;
          break;
        case 0x1D:
          if (a1 != 29)
            goto LABEL_4;
          break;
        case 0x1E:
          if (a1 != 30)
            goto LABEL_4;
          break;
        case 0x1F:
          if (a1 != 31)
            goto LABEL_4;
          break;
        case 0x20:
          if (a1 != 32)
            goto LABEL_4;
          break;
        case 0x21:
          if (a1 != 33)
            goto LABEL_4;
          break;
        case 0x22:
          if (a1 != 34)
            goto LABEL_4;
          break;
        default:
          if (a1 - 28 >= 7)
            __asm { BR              X9 }
LABEL_4:
          v4 = (v4 + 1) & ~v3;
          if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
            continue;
          break;
      }
      break;
    }
  }
  return v4;
}

uint64_t sub_23AAB0660(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AAB068C + 4 * byte_23B1E67B8[a1]))(1684957547, 0xE400000000000000);
}

uint64_t sub_23AAB068C()
{
  return 0x6C617461645F7369;
}

uint64_t sub_23AAB06AC()
{
  return 1702521203;
}

uint64_t sub_23AAB06B8()
{
  return 0x656B636F6C5F7369;
}

unint64_t sub_23AAB0854()
{
  return 0xD000000000000013;
}

unint64_t sub_23AAB086C()
{
  return 0xD000000000000016;
}

uint64_t sub_23AAB0884()
{
  return 0x69746E6172617571;
}

uint64_t sub_23AAB08A8()
{
  return 0x72636E79735F7369;
}

uint64_t sub_23AAB08C8()
{
  return 0x726F6E67695F7369;
}

unint64_t sub_23AAB08EC()
{
  return 0xD000000000000010;
}

uint64_t sub_23AAB08F8()
{
  return 0x657079745F736FLL;
}

uint64_t sub_23AAB0910()
{
  return 0x756F635F6B6E696CLL;
}

void sub_23AAB0930()
{
  JUMPOUT(0x23AAB0944);
}

void sub_23AAB096C(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

id sub_23AAB0A28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id result;

  result = objc_msgSend(v22, sel_BOOLAtIndex_, v20);
  *(_QWORD *)(v21 + 24) = MEMORY[0x24BEE1328];
  *(_BYTE *)v21 = (_BYTE)result;
  return result;
}

id sub_23AAB0F04(uint64_t a1)
{
  return sub_23AAB0F18(a1);
}

id sub_23AAB0F18(uint64_t a1)
{
  void *v1;
  id result;
  _BYTE *v3;

  result = objc_msgSend(v1, sel_longAtIndex_, a1);
  if ((unint64_t)result > 5)
  {
    sub_23AB7B620();
    swift_allocError();
    *v3 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

unint64_t sub_23AAB0F80()
{
  unint64_t result;

  result = qword_2542E6EF0;
  if (!qword_2542E6EF0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DD2D8, &type metadata for SnapshotItemSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E6EF0);
  }
  return result;
}

uint64_t sub_23AAB0FC4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E76A8);
  if (objc_msgSend(v1, sel_isNullAtIndex_, a1))
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  if (swift_dynamicCastMetatype())
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  sub_23B1C5780();
  swift_allocObject();
  sub_23B1C5774();
  v4 = objc_msgSend(v1, sel_dataAtIndex_, a1);
  v5 = sub_23B1C5AD4();
  v7 = v6;

  sub_23AAB112C((unint64_t *)&unk_2542E76B0, &qword_2542E75D8, (uint64_t)&unk_23B1E4BE0, MEMORY[0x24BEE12D0]);
  sub_23B1C5768();
  sub_23AAAE53C(v5, v7);
  result = swift_release();
  if (!v2)
    return v9;
  return result;
}

uint64_t sub_23AAB112C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E76A8);
    v10 = sub_23AAB5A28(a2, &qword_2542E75E0, a3);
    result = MEMORY[0x23B8613CC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23AAB11B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_23B1C560C();
  v11 = result;
  if (result)
  {
    result = sub_23B1C5624();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_23B1C5618();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_23AAAE9E4(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_23AAB1264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[14];

  v12[8] = a1;
  v12[9] = a2;
  v12[7] = *(_QWORD *)(a4 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v12[3] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[6] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v12[1] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[2] = v8;
  v12[10] = v9;
  v12[11] = v10;
  v12[12] = v8;
  v12[13] = v11;
  v12[4] = v11;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AAB1310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  _BYTE v25[96];

  v4 = a1;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v25[-v9];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v3 - 152) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v12 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v14 = &v25[-v13];
  v15 = &v25[*(int *)(v12 + 48) - v13];
  v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16);
  v16(&v25[-v13], *(_BYTE **)(v3 - 128), v4);
  v16(v15, *(_BYTE **)(v3 - 120), v4);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v16(v10, v14, v4);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v21 = *(_QWORD *)(v3 - 144);
      v22 = *(_QWORD *)(v3 - 184);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v21 + 32))(v22, v15, v2);
      v19 = sub_23B1C63A4();
      v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v23(v22, v2);
      v23((uint64_t)v10, v2);
      goto LABEL_9;
    }
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v10, v2);
    goto LABEL_7;
  }
  v16(v8, v14, v4);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v8, v1);
LABEL_7:
    v19 = 0;
    v5 = *(_QWORD *)(v3 - 152);
    v4 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(v3 - 136);
  v18 = *(_QWORD *)(v3 - 168);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32))(v18, v15, v1);
  v19 = sub_23B1C63A4();
  v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v20(v18, v1);
  v20((uint64_t)v8, v1);
LABEL_9:
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v14, v4);
  return v19 & 1;
}

uint64_t sub_23AAB1550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  v10 = v8 == 1;
  if (v8 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

BOOL sub_23AAB1624(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v7;
  _BOOL4 v9;
  _BOOL4 v11;
  _BOOL4 v12;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  v5 = *a1 == *a2;
  if (*((_BYTE *)a2 + 8))
    v5 = 0;
  v7 = v4 == 1 && v2 == v3;
  v9 = v4 == 2 && v3 == 0;
  v11 = v4 == 2 && v3 == 1;
  if (v2)
    v12 = v11;
  else
    v12 = v9;
  if (*((_BYTE *)a1 + 8) == 1)
    v12 = v7;
  if (*((_BYTE *)a1 + 8))
    return v12;
  else
    return v5;
}

void sub_23AAB1684(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = a1 + *(_QWORD *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84))
    ++v4;
  v5 = (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v5 + (v8 | v11 | 7) + 9) & ~(unint64_t)(v8 | v11 | 7);
  v13 = *(unsigned int *)(v7 + 84);
  if (v13 <= *(_DWORD *)(v10 + 84))
    v14 = *(_DWORD *)(v10 + 84);
  else
    v14 = *(_DWORD *)(v7 + 84);
  if (v14 <= 0x7FFFFFFE)
    v15 = 2147483646;
  else
    v15 = v14;
  v16 = *(_QWORD *)(v7 + 64) + 7;
  v17 = v11 + 8;
  v18 = (((*(_QWORD *)(v10 + 64) + 7 + ((v11 + 8 + (v16 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = ~v11;
  if ((_DWORD)v13 == v15)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v12, v13, v6))
      goto LABEL_22;
LABEL_20:
    v19 = (uint64_t *)((v16 + v12) & 0xFFFFFFFFFFFFFFF8);
LABEL_21:
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v12, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(((unint64_t)v19 + v17) & v25, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v19 = (uint64_t *)((v16 + v12) & 0xFFFFFFFFFFFFFFF8);
  if (v14 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t))(v10 + 48))(((unint64_t)v19 + v17) & ~v11))
      goto LABEL_22;
    goto LABEL_20;
  }
  v20 = *v19;
  if ((unint64_t)*v19 >= 0xFFFFFFFF)
    LODWORD(v20) = -1;
  if ((v20 + 1) < 2)
    goto LABEL_21;
LABEL_22:
  v21 = v12 + v18;
  sub_23AAAEE10(*(void **)((v21 + 26) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v21 + 26) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v21 + 26) & 0xFFFFFFFFFFFFFFF8) + 16));
  v22 = (v21 + 50) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = ((4 * (v23 >> 60)) & 0xC | ((v23 >> 60) >> 2)) != 0xF && ((4 * (v23 >> 60)) & 0xC) != 0;
  if (v23 >> 60 != 15 && !v24)
    sub_23AAAE53C(*(_QWORD *)(v22 + 8), v23);

}

void *sub_23AAB1928(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  size_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  uint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(unint64_t, unint64_t, uint64_t);
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  void *v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t *v55;
  unint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  void *v60;
  uint64_t v61;
  __int128 v62;
  _QWORD *v63;
  void **v64;
  void *v65;
  id v66;
  uint64_t v68;
  uint64_t v69;
  void *v70;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  v10 = v9 + 7;
  v70 = a1;
  v11 = (_QWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 | v20 | 7;
  v22 = (char *)((v21 + 9 + v13) & ~v21);
  v23 = (char *)((v21 + 9 + v14) & ~v21);
  v24 = *(unsigned int *)(v16 + 84);
  if (v24 <= *(_DWORD *)(v19 + 84))
    v25 = *(_DWORD *)(v19 + 84);
  else
    v25 = *(_DWORD *)(v16 + 84);
  if (v25 <= 0x7FFFFFFE)
    v26 = 2147483646;
  else
    v26 = v25;
  v27 = *(_QWORD *)(v16 + 64) + 7;
  v28 = v20 + 8;
  v29 = *(_QWORD *)(v19 + 64) + 7;
  v30 = ((((v29 + ((v20 + 8 + (v27 & 0xFFFFFFFFFFFFFFF8)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v68 = ~v20;
  v69 = v18;
  if ((_DWORD)v24 == v26)
  {
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v23, v24, v15))
      goto LABEL_26;
LABEL_25:
    memcpy(v22, v23, v30);
    goto LABEL_28;
  }
  v31 = (uint64_t *)((unint64_t)&v23[v27] & 0xFFFFFFFFFFFFFFF8);
  if (v25 <= 0x7FFFFFFE)
  {
    v32 = *v31;
    if ((unint64_t)*v31 >= 0xFFFFFFFF)
      LODWORD(v32) = -1;
    if ((v32 + 1) < 2)
      goto LABEL_27;
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(unint64_t))(v19 + 48))(((unint64_t)v31 + v28) & ~v20))
    goto LABEL_25;
LABEL_26:
  v31 = (uint64_t *)((unint64_t)&v23[v27] & 0xFFFFFFFFFFFFFFF8);
LABEL_27:
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v23, v15);
  v33 = (_QWORD *)((unint64_t)&v22[v27] & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v31;
  v34 = ((unint64_t)v33 + v28) & v68;
  v35 = ((unint64_t)v31 + v28) & v68;
  v36 = *(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 16);
  swift_bridgeObjectRetain();
  v36(v34, v35, v69);
  v37 = (_QWORD *)((v29 + v34) & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)((v29 + v35) & 0xFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_28:
  v41 = (unint64_t)&v22[v30];
  v42 = (_BYTE *)((unint64_t)&v23[v30] | 1);
  v43 = (_BYTE *)((unint64_t)&v23[v30] | 2);
  v44 = (uint64_t)&v23[v30 + 10];
  v45 = &v23[v30];
  *(_BYTE *)v41 = *v45;
  v46 = v41 + 34;
  *(_BYTE *)(v41 | 1) = *v42;
  *(_BYTE *)(v41 | 2) = *v43;
  v47 = (v41 + 10) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(void **)(v44 & 0xFFFFFFFFFFFFFFF8);
  v49 = *(void **)((v44 & 0xFFFFFFFFFFFFFFF8) + 8);
  v50 = *(_BYTE *)((v44 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_23AAAE478(v48, v49, v50);
  *(_QWORD *)v47 = v48;
  *(_QWORD *)(v47 + 8) = v49;
  *(_BYTE *)(v47 + 16) = v50;
  v51 = v46 & 0xFFFFFFFFFFFFFFF8;
  v52 = (unint64_t)(v45 + 34) & 0xFFFFFFFFFFFFFFF8;
  v53 = *(_QWORD *)(v52 + 16) >> 60;
  if (4 * (v53 & 3))
    v54 = ((v53 >> 2) & 0xFFFFFFF3 | (4 * (v53 & 3))) == 15;
  else
    v54 = 1;
  if (v54)
  {
    v55 = (uint64_t *)(v52 + 8);
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v56 = *(_QWORD *)(v52 + 16);
    v60 = v70;
    if (v56 >> 60 == 15)
    {
      *(_OWORD *)(v51 + 8) = *(_OWORD *)v55;
    }
    else
    {
      v61 = *v55;
      sub_23AAAE668(*v55, *(_QWORD *)(v52 + 16));
      *(_QWORD *)(v51 + 8) = v61;
      *(_QWORD *)(v51 + 16) = v56;
    }
    v62 = *(_OWORD *)(v52 + 24);
    *(_BYTE *)(v51 + 40) = *(_BYTE *)(v52 + 40);
    *(_OWORD *)(v51 + 24) = v62;
    *(_QWORD *)(v51 + 48) = *(_QWORD *)(v52 + 48);
  }
  else
  {
    v57 = *(_OWORD *)v52;
    v58 = *(_OWORD *)(v52 + 16);
    v59 = *(_OWORD *)(v52 + 32);
    *(_QWORD *)(v51 + 48) = *(_QWORD *)(v52 + 48);
    *(_OWORD *)(v51 + 16) = v58;
    *(_OWORD *)(v51 + 32) = v59;
    *(_OWORD *)v51 = v57;
    v60 = v70;
  }
  v63 = (_QWORD *)((v51 + 63) & 0xFFFFFFFFFFFFF8);
  v64 = (void **)((v52 + 63) & 0xFFFFFFFFFFFFFFF8);
  v65 = *v64;
  *v63 = *v64;
  *(_QWORD *)(((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFF8);
  v66 = v65;
  return v60;
}

uint64_t sub_23AAB1D68(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  if (*(_DWORD *)(v3 + 84))
    v4 = *(_QWORD *)(v3 + 64);
  else
    v4 = *(_QWORD *)(v3 + 64) + 1;
  v53 = a1;
  v51 = v4 + 7;
  v5 = (((v4 + 7 + a1) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 | v11 | 7;
  v13 = (v12 + v5 + 9) & ~v12;
  v14 = *(unsigned int *)(v7 + 84);
  if (v14 <= *(_DWORD *)(v10 + 84))
    v15 = *(_DWORD *)(v10 + 84);
  else
    v15 = *(_DWORD *)(v7 + 84);
  if (v15 <= 0x7FFFFFFE)
    v16 = 2147483646;
  else
    v16 = v15;
  v17 = *(_QWORD *)(v7 + 64) + 7;
  v18 = v11 + 8;
  v48 = ~v11;
  v49 = ((((*(_QWORD *)(v10 + 64) + 7 + ((v11 + 8 + (v17 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if ((_DWORD)v14 == v16)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v13, v14, v6))
      goto LABEL_23;
LABEL_21:
    v19 = (uint64_t *)((v17 + v13) & 0xFFFFFFFFFFFFFFF8);
LABEL_22:
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(((unint64_t)v19 + v18) & v48, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v19 = (uint64_t *)((v17 + v13) & 0xFFFFFFFFFFFFFFF8);
  if (v15 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t))(v10 + 48))(((unint64_t)v19 + v18) & ~v11))
      goto LABEL_23;
    goto LABEL_21;
  }
  v20 = *v19;
  if ((unint64_t)*v19 >= 0xFFFFFFFF)
    LODWORD(v20) = -1;
  if ((v20 + 1) < 2)
    goto LABEL_22;
LABEL_23:
  sub_23AAAEE10(*(void **)((v49 + v13 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v49 + v13 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v49 + v13 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  v21 = (v49 + v13 + 34) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)(v21 + 16);
  v23 = ((4 * (v22 >> 60)) & 0xC | ((v22 >> 60) >> 2)) != 0xF && ((4 * (v22 >> 60)) & 0xC) != 0;
  if (v22 >> 60 != 15 && !v23)
    sub_23AAAE53C(*(_QWORD *)(v21 + 8), v22);

  v24 = ((((((((((v51 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 9) & ~v12) + v49 + 34) & 0xFFFFFFFFFFFFFFF8)
         + 63) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_DWORD *)(v26 + 80) & 0xF8;
  v52 = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(v52 - 8);
  v29 = *(_DWORD *)(v28 + 80) & 0xF8;
  v50 = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(v50 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = v29 | v31 | 7;
  v33 = (v53 + (v32 | v27) + v24 + 8) & ~(unint64_t)(v32 | v27);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v26 + 48))(v33, 1, v25))
    (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v33, v25);
  v34 = *(_QWORD *)(v26 + 64);
  if (!*(_DWORD *)(v26 + 84))
    ++v34;
  v35 = (v32 + 9 + (((((v33 | 7) + v34) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v32;
  v36 = *(unsigned int *)(v28 + 84);
  if (v36 <= *(_DWORD *)(v30 + 84))
    v37 = *(_DWORD *)(v30 + 84);
  else
    v37 = *(_DWORD *)(v28 + 84);
  if (v37 <= 0x7FFFFFFE)
    v38 = 2147483646;
  else
    v38 = v37;
  v39 = *(_QWORD *)(v28 + 64) + 7;
  v40 = v31 + 8;
  v41 = ((((*(_QWORD *)(v30 + 64) + 7 + ((v31 + 8 + (v39 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if ((_DWORD)v36 == v38)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v35, v36, v52))
      goto LABEL_50;
LABEL_48:
    v42 = (uint64_t *)((v39 + v35) & 0xFFFFFFFFFFFFFFF8);
LABEL_49:
    (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v35, v52);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v30 + 8))(((unint64_t)v42 + v40) & ~v31, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  v42 = (uint64_t *)((v39 + v35) & 0xFFFFFFFFFFFFFFF8);
  if (v37 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t))(v30 + 48))(((unint64_t)v42 + v40) & ~v31))
      goto LABEL_50;
    goto LABEL_48;
  }
  v43 = *v42;
  if ((unint64_t)*v42 >= 0xFFFFFFFF)
    LODWORD(v43) = -1;
  if ((v43 + 1) < 2)
    goto LABEL_49;
LABEL_50:
  sub_23AAAEE10(*(void **)((v41 + v35 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v41 + v35 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v41 + v35 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  v44 = (v41 + v35 + 34) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_QWORD *)(v44 + 16);
  v46 = ((4 * (v45 >> 60)) & 0xC | ((v45 >> 60) >> 2)) != 0xF && ((4 * (v45 >> 60)) & 0xC) != 0;
  if (v45 >> 60 != 15 && !v46)
    sub_23AAAE53C(*(_QWORD *)(v44 + 8), v45);

  return swift_bridgeObjectRelease();
}

void *sub_23AAB2344(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  size_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(unint64_t, unint64_t, uint64_t);
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  void *v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t *v52;
  unint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  _QWORD *v59;
  void **v60;
  void *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  const void *v74;
  unsigned int (*v75)(const void *, uint64_t, uint64_t);
  id v76;
  size_t v77;
  int v78;
  size_t v79;
  size_t v80;
  size_t v81;
  _QWORD *v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  void *v86;
  const void *v87;
  uint64_t v88;
  unsigned int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  void (*v103)(unint64_t, unint64_t, uint64_t);
  _QWORD *v104;
  unint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  id v114;
  void *v115;
  char v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  size_t v123;
  uint64_t *v124;
  unint64_t v125;
  uint64_t v126;
  __int128 v127;
  _QWORD *v128;
  void **v129;
  void *v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  _OWORD *v134;
  _OWORD *v135;
  unint64_t v136;
  unint64_t v137;
  id v138;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  size_t v145;
  unint64_t __n;
  size_t __na;
  size_t v148;
  unint64_t v149;
  const void *v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  v10 = v9 + 7;
  v153 = a1;
  v11 = (_QWORD *)(((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  v148 = v10;
  v150 = a2;
  v12 = (_QWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 | v20 | 7;
  v22 = (void *)((v21 + 9 + v13) & ~v21);
  v23 = (const void *)((v21 + 9 + v14) & ~v21);
  v24 = *(unsigned int *)(v16 + 84);
  if (v24 <= *(_DWORD *)(v19 + 84))
    v25 = *(_DWORD *)(v19 + 84);
  else
    v25 = *(_DWORD *)(v16 + 84);
  if (v25 <= 0x7FFFFFFE)
    v26 = 2147483646;
  else
    v26 = v25;
  v27 = *(_QWORD *)(v16 + 64) + 7;
  v28 = v20 + 8;
  v29 = *(_QWORD *)(v19 + 64) + 7;
  v144 = v18;
  __n = ((((v29 + ((v20 + 8 + (v27 & 0xFFFFFFFFFFFFFFF8)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v142 = ~v20;
  if ((_DWORD)v24 == v26)
  {
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v23, v24, v15))
      goto LABEL_26;
LABEL_25:
    v32 = __n;
    memcpy(v22, v23, __n);
    goto LABEL_28;
  }
  v30 = (uint64_t *)(((unint64_t)v23 + v27) & 0xFFFFFFFFFFFFFFF8);
  if (v25 <= 0x7FFFFFFE)
  {
    v31 = *v30;
    if ((unint64_t)*v30 >= 0xFFFFFFFF)
      LODWORD(v31) = -1;
    if ((v31 + 1) < 2)
      goto LABEL_27;
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(unint64_t))(v19 + 48))(((unint64_t)v30 + v28) & ~v20))
    goto LABEL_25;
LABEL_26:
  v30 = (uint64_t *)(((unint64_t)v23 + v27) & 0xFFFFFFFFFFFFFFF8);
LABEL_27:
  (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v22, v23, v15);
  v33 = (_QWORD *)(((unint64_t)v22 + v27) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v30;
  v34 = ((unint64_t)v33 + v28) & v142;
  v35 = ((unint64_t)v30 + v28) & v142;
  v36 = *(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 16);
  swift_bridgeObjectRetain();
  v36(v34, v35, v144);
  v37 = (_QWORD *)((v29 + v34) & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)((v29 + v35) & 0xFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = __n;
LABEL_28:
  v41 = (uint64_t)v23 + v32 + 34;
  *((_BYTE *)v22 + v32) = *((_BYTE *)v23 + v32);
  v42 = (uint64_t)v22 + v32 + 34;
  *(_BYTE *)(((unint64_t)v22 + v32) | 1) = *(_BYTE *)(((unint64_t)v23 + v32) | 1);
  *(_BYTE *)(((unint64_t)v22 + v32) | 2) = *(_BYTE *)(((unint64_t)v23 + v32) | 2);
  v43 = ((unint64_t)v22 + v32 + 10) & 0xFFFFFFFFFFFFFFF8;
  v44 = ((unint64_t)v23 + v32 + 10) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(id *)v44;
  v46 = *(void **)(v44 + 8);
  v47 = *(_BYTE *)(v44 + 16);
  sub_23AAAE478(*(id *)v44, v46, v47);
  *(_QWORD *)v43 = v45;
  *(_QWORD *)(v43 + 8) = v46;
  *(_BYTE *)(v43 + 16) = v47;
  v48 = v42 & 0xFFFFFFFFFFFFFFF8;
  v49 = v41 & 0xFFFFFFFFFFFFFFF8;
  v50 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  if (4 * (v50 & 3))
    v51 = ((v50 >> 2) & 0xFFFFFFF3 | (4 * (v50 & 3))) == 15;
  else
    v51 = 1;
  if (v51)
  {
    v52 = (uint64_t *)(v49 + 8);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    v53 = *(_QWORD *)(v49 + 16);
    if (v53 >> 60 == 15)
    {
      *(_OWORD *)(v48 + 8) = *(_OWORD *)v52;
    }
    else
    {
      v57 = *v52;
      sub_23AAAE668(*v52, *(_QWORD *)(v49 + 16));
      *(_QWORD *)(v48 + 8) = v57;
      *(_QWORD *)(v48 + 16) = v53;
    }
    v58 = *(_OWORD *)(v49 + 24);
    *(_BYTE *)(v48 + 40) = *(_BYTE *)(v49 + 40);
    *(_OWORD *)(v48 + 24) = v58;
    *(_QWORD *)(v48 + 48) = *(_QWORD *)(v49 + 48);
  }
  else
  {
    v54 = *(_OWORD *)v49;
    v55 = *(_OWORD *)(v49 + 16);
    v56 = *(_OWORD *)(v49 + 32);
    *(_QWORD *)(v48 + 48) = *(_QWORD *)(v49 + 48);
    *(_OWORD *)(v48 + 16) = v55;
    *(_OWORD *)(v48 + 32) = v56;
    *(_OWORD *)v48 = v54;
  }
  v59 = (_QWORD *)((v48 + 63) & 0xFFFFFFFFFFFFF8);
  v60 = (void **)((v49 + 63) & 0xFFFFFFFFFFFFFFF8);
  v61 = *v60;
  *v59 = *v60;
  *(_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFF8);
  v62 = ((((((((((v148 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v21 + 9) & ~v21) + v32 + 34) & 0xFFFFFFFFFFFFFFF8)
         + 63) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v63 = swift_getAssociatedTypeWitness();
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(_DWORD *)(v64 + 80) & 0xF8;
  v141 = swift_getAssociatedTypeWitness();
  v152 = *(_QWORD *)(v141 - 8);
  v66 = *(_DWORD *)(v152 + 80) & 0xF8;
  v140 = swift_getAssociatedTypeWitness();
  v67 = *(_QWORD *)(v140 - 8);
  v68 = *(unsigned __int8 *)(v67 + 80);
  v69 = v66 | v68 | 7;
  v70 = v69 | v65;
  v71 = v62 + v70 + 8;
  v72 = v153;
  v73 = ((unint64_t)v153 + v71) & ~v70;
  v74 = (const void *)(((unint64_t)v150 + v71) & ~v70);
  v75 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
  v76 = v61;
  v77 = (size_t)v74;
  if (v75(v74, 1, v63))
  {
    v78 = *(_DWORD *)(v64 + 84);
    v79 = *(_QWORD *)(v64 + 64);
    if (v78)
      v80 = v79;
    else
      v80 = v79 + 1;
    memcpy((void *)v73, (const void *)v77, v80);
  }
  else
  {
    (*(void (**)(uint64_t, const void *, uint64_t))(v64 + 16))(v73, v74, v63);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v73, 0, 1, v63);
    v78 = *(_DWORD *)(v64 + 84);
    v79 = *(_QWORD *)(v64 + 64);
  }
  if (v78)
    v81 = v79;
  else
    v81 = v79 + 1;
  v151 = v73;
  v145 = v81;
  __na = v77;
  v82 = (_QWORD *)(((v77 | 7) + v81) & 0xFFFFFFFFFFFFFFF8);
  v83 = (_QWORD *)(((v73 | 7) + v81) & 0xFFFFFFFFFFFFFFF8);
  *v83 = *v82;
  v84 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
  v85 = ((unint64_t)v82 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v84 = *(_QWORD *)v85;
  *(_BYTE *)(v84 + 8) = *(_BYTE *)(v85 + 8);
  v86 = (void *)((v69 + 9 + v84) & ~v69);
  v143 = v69 + 9;
  v87 = (const void *)((v69 + 9 + v85) & ~v69);
  v88 = *(unsigned int *)(v152 + 84);
  if (v88 <= *(_DWORD *)(v67 + 84))
    v89 = *(_DWORD *)(v67 + 84);
  else
    v89 = *(_DWORD *)(v152 + 84);
  if (v89 <= 0x7FFFFFFE)
    v90 = 2147483646;
  else
    v90 = v89;
  v91 = *(_QWORD *)(v152 + 64) + 7;
  v92 = ~v68;
  v93 = v68 + 8;
  v94 = *(_QWORD *)(v67 + 64) + 7;
  v149 = ((((v94 + ((v68 + 8 + (v91 & 0xFFFFFFFFFFFFFFF8)) & ~v68)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  if ((_DWORD)v88 == v90)
  {
    v95 = ~v68;
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v152 + 48))(v87, v88, v141))
      goto LABEL_62;
  }
  else
  {
    v96 = (_QWORD *)(((unint64_t)v87 + v91) & 0xFFFFFFFFFFFFFFF8);
    if (v89 > 0x7FFFFFFE)
    {
      v95 = ~v68;
      if (!(*(unsigned int (**)(unint64_t))(v67 + 48))(((unint64_t)v96 + v93) & v92))
      {
LABEL_62:
        v96 = (_QWORD *)(((unint64_t)v87 + v91) & 0xFFFFFFFFFFFFFFF8);
LABEL_63:
        (*(void (**)(void *, const void *, uint64_t))(v152 + 16))(v86, v87, v141);
        v99 = (_QWORD *)(((unint64_t)v86 + v91) & 0xFFFFFFFFFFFFFFF8);
        *v99 = *v96;
        v100 = v95;
        v101 = ((unint64_t)v99 + v93) & v95;
        v102 = ((unint64_t)v96 + v93) & v100;
        v103 = *(void (**)(unint64_t, unint64_t, uint64_t))(v67 + 16);
        swift_bridgeObjectRetain();
        v103(v101, v102, v140);
        v104 = (_QWORD *)((v94 + v101) & 0xFFFFFFFFFFFFF8);
        v105 = v94 + v102;
        v72 = v153;
        v105 &= 0xFFFFFFFFFFFFF8uLL;
        *v104 = *(_QWORD *)v105;
        v106 = (_QWORD *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFFFF8);
        v107 = (_QWORD *)((v105 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v106 = *v107;
        v106[1] = v107[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v98 = v149;
        goto LABEL_64;
      }
    }
    else
    {
      v95 = ~v68;
      v97 = *v96;
      if (*v96 >= 0xFFFFFFFFuLL)
        LODWORD(v97) = -1;
      if ((v97 + 1) < 2)
        goto LABEL_63;
    }
  }
  v98 = v149;
  memcpy(v86, v87, v149);
LABEL_64:
  v108 = (_BYTE *)(((unint64_t)v86 + v98) | 2);
  v109 = (uint64_t)v86 + v98 + 10;
  *((_BYTE *)v86 + v98) = *((_BYTE *)v87 + v98);
  v110 = (uint64_t)v86 + v98 + 34;
  *(_BYTE *)(((unint64_t)v86 + v98) | 1) = *(_BYTE *)(((unint64_t)v87 + v98) | 1);
  v111 = ~v69;
  *v108 = *(_BYTE *)(((unint64_t)v87 + v98) | 2);
  v112 = v109 & 0xFFFFFFFFFFFFFFF8;
  v113 = ((unint64_t)v87 + v98 + 10) & 0xFFFFFFFFFFFFFFF8;
  v114 = *(id *)v113;
  v115 = *(void **)(v113 + 8);
  v116 = *(_BYTE *)(v113 + 16);
  sub_23AAAE478(*(id *)v113, v115, v116);
  *(_QWORD *)v112 = v114;
  *(_QWORD *)(v112 + 8) = v115;
  *(_BYTE *)(v112 + 16) = v116;
  v117 = v110 & 0xFFFFFFFFFFFFFFF8;
  v118 = ((unint64_t)v87 + v98 + 34) & 0xFFFFFFFFFFFFFFF8;
  v119 = *(_QWORD *)(v118 + 16) >> 60;
  if (!(4 * (v119 & 3)) || ((v119 >> 2) & 0xFFFFFFF3 | (4 * (v119 & 3))) == 0xF)
  {
    v124 = (uint64_t *)(v118 + 8);
    *(_QWORD *)v117 = *(_QWORD *)v118;
    v125 = *(_QWORD *)(v118 + 16);
    if (v125 >> 60 == 15)
    {
      *(_OWORD *)(v117 + 8) = *(_OWORD *)v124;
    }
    else
    {
      v126 = *v124;
      sub_23AAAE668(*v124, *(_QWORD *)(v118 + 16));
      *(_QWORD *)(v117 + 8) = v126;
      *(_QWORD *)(v117 + 16) = v125;
    }
    v123 = __na;
    v127 = *(_OWORD *)(v118 + 24);
    *(_BYTE *)(v117 + 40) = *(_BYTE *)(v118 + 40);
    *(_OWORD *)(v117 + 24) = v127;
    *(_QWORD *)(v117 + 48) = *(_QWORD *)(v118 + 48);
  }
  else
  {
    v120 = *(_OWORD *)v118;
    v121 = *(_OWORD *)(v118 + 16);
    v122 = *(_OWORD *)(v118 + 32);
    *(_QWORD *)(v117 + 48) = *(_QWORD *)(v118 + 48);
    *(_OWORD *)(v117 + 16) = v121;
    *(_OWORD *)(v117 + 32) = v122;
    *(_OWORD *)v117 = v120;
    v123 = __na;
  }
  v128 = (_QWORD *)((v117 + 63) & 0xFFFFFFFFFFFFF8);
  v129 = (void **)((v118 + 63) & 0xFFFFFFFFFFFFFFF8);
  v130 = *v129;
  *v128 = *v129;
  *(_QWORD *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFF8);
  v131 = ((((((((v143 + ((((v145 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v111) + v98 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  v132 = v131 + v151;
  v133 = v131 + v123;
  *(_BYTE *)v132 = *(_BYTE *)v133;
  v132 &= 0xFFFFFFFFFFFFFFF8;
  v133 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v132 + 8) = *(_QWORD *)(v133 + 8);
  v134 = (_OWORD *)((v132 + 23) & 0xFFFFFFFFFFFFFFF8);
  v135 = (_OWORD *)((v133 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v134 = *v135;
  v136 = ((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8;
  v137 = ((unint64_t)v135 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v136 = *(_QWORD *)v137;
  *(_BYTE *)(v136 + 8) = *(_BYTE *)(v137 + 8);
  *(_QWORD *)(((unint64_t)v134 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v135 + 39) & 0xFFFFFFFFFFFFF8);
  v138 = v130;
  swift_bridgeObjectRetain();
  return v72;
}

uint64_t storeEnumTagSinglePayload for VFSItemID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23AAB2D2C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23AAB2DA8 + 4 * byte_23B1DC820[v10]))();
  }
}

uint64_t getEnumTagSinglePayload for VFSItemID(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_23AAB2E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23AAB2EDC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  if (objc_msgSend(v1, sel_isNullAtIndex_, a1))
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  if (swift_dynamicCastMetatype())
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  sub_23B1C5780();
  swift_allocObject();
  sub_23B1C5774();
  v4 = objc_msgSend(v1, sel_dataAtIndex_, a1);
  v5 = sub_23B1C5AD4();
  v7 = v6;

  sub_23AAB3014();
  sub_23B1C5768();
  sub_23AAAE53C(v5, v7);
  result = swift_release();
  if (!v2)
    return v9;
  return result;
}

unint64_t sub_23AAB3014()
{
  unint64_t result;

  result = qword_2569E2488;
  if (!qword_2569E2488)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DD870, &type metadata for Tags);
    atomic_store(result, (unint64_t *)&qword_2569E2488);
  }
  return result;
}

BOOL sub_23AAB3058(char a1)
{
  return a1 == 1;
}

void sub_23AAB3068(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unint64_t v6;
  char v7;
  char v8;

  v6 = sub_23AAA43E4(a1, a2);
  v8 = v7;

  if (!v3)
  {
    *(_QWORD *)a3 = v6;
    *(_BYTE *)(a3 + 8) = v8;
  }
}

uint64_t storeEnumTagSinglePayload for Tags.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23AAB3100 + 4 * byte_23B1DD6E8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23AAB3120 + 4 * byte_23B1DD6ED[v4]))();
}

_BYTE *sub_23AAB3100(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23AAB3120(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23AAB3128(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23AAB3130(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23AAB3138(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23AAB3140(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for LifetimeError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_23AAB319C()
{
  return 1936154996;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B8613B4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23AAB326C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, unint64_t, uint64_t);
  char *v27;
  uint64_t result;
  uint64_t v29;
  void (*v30)(_OWORD *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(__int128 *__return_ptr, char *, void *, _QWORD);
  void *v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _OWORD v48[2];
  uint64_t v49;

  v7 = v6;
  v42 = a3;
  v36 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v39 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  v34 = v19;
  MEMORY[0x24BDAC7A8](v16);
  v43 = (char *)&v33 - v20;
  v41 = a2;
  objc_msgSend(a2, sel_columns);
  v44 = a4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v21 = *(_QWORD *)(AssociatedConformanceWitness + 16);
  v37 = MEMORY[0x24BEE4AD8] + 8;
  v38 = v21;
  v22 = sub_23B1C6230();
  v49 = v22;
  v23 = swift_bridgeObjectRetain();
  if (MEMORY[0x23B85F0E0](v23, AssociatedTypeWitness))
  {
    v24 = 0;
    v40 = *(void (**)(__int128 *__return_ptr, char *, void *, _QWORD))(a5 + 24);
    v45 = a5;
    while (1)
    {
      v25 = sub_23B1C6770();
      sub_23B1C6734();
      if ((v25 & 1) != 0)
      {
        v26 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
        v27 = v43;
        v26(v43, a1+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v24, AssociatedTypeWitness);
      }
      else
      {
        result = sub_23B1C6F38();
        v27 = v43;
        if (v34 != 8)
          goto LABEL_21;
        *(_QWORD *)&v48[0] = result;
        v26 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
        v26(v43, (unint64_t)v48, AssociatedTypeWitness);
        swift_unknownObjectRelease();
      }
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v18, v27, AssociatedTypeWitness);
      if (__OFADD__(v42, (_DWORD)v24))
        break;
      v40(&v46, v18, v41, (v42 + v24));
      if (v7)
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v18, AssociatedTypeWitness);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v47)
      {
        sub_23AAA159C(&v46, v48);
        v26(v39, (unint64_t)v18, AssociatedTypeWitness);
        sub_23AAA15AC((uint64_t)v48, (uint64_t)&v46);
        sub_23B1C629C();
        sub_23B1C62C0();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
        result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v18, AssociatedTypeWitness);
        result = sub_23AA94C08((uint64_t)&v46);
      }
      a5 = v45;
      if (v24 == 0x7FFFFFFF)
        goto LABEL_20;
      ++v24;
      v7 = 0;
      if (v24 == MEMORY[0x23B85F0E0](a1, AssociatedTypeWitness))
      {
        swift_bridgeObjectRelease();
        v22 = v49;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_17:
    *(_QWORD *)&v48[0] = v22;
    v30 = *(void (**)(_OWORD *, uint64_t, uint64_t))(a5 + 32);
    v31 = type metadata accessor for SQLCodableDictionaryWrapper(0, AssociatedTypeWitness, AssociatedConformanceWitness, v29);
    v32 = MEMORY[0x23B8613CC](&unk_23B1E1DCC, v31);
    v30(v48, v31, v32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23AAB3634(unsigned __int8 *a1)
{
  sub_23AAB3658(*a1);
}

void sub_23AAB3658(int a1)
{
  uint64_t v2;

  v2 = sub_23B1C6F74();
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

void sub_23AAB36EC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  sub_23AAB3B50(v1, v0, *(_DWORD *)(v2 - 116), *(_QWORD *)(v2 - 128));
}

void sub_23AAB3B50(char a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  int v11;

  v11 = a3;
  v10[5] = a4;
  v10[6] = a2;
  v10[3] = swift_getAssociatedTypeWitness();
  v5 = sub_23B1C6C98();
  v10[0] = *(_QWORD *)(v5 - 8);
  v10[1] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[2] = (char *)v10 - v6;
  swift_getAssociatedTypeWitness();
  v7 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v7);
  v10[4] = swift_getAssociatedTypeWitness();
  v8 = sub_23B1C6C98();
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  __asm { BR              X10 }
}

void sub_23AAB3CD4()
{
  char v0;
  uint64_t v1;
  _OWORD *v2;

  if (objc_msgSend(*(id *)(v1 - 96), sel_isNullAtIndex_, *(unsigned int *)(v1 - 84)))
  {
    v2 = *(_OWORD **)(v1 - 104);
    *v2 = 0u;
    v2[1] = 0u;
  }
  else
  {
    sub_23AD7FBC8(v0);
  }
}

void sub_23AAB4494(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_23AAB44B4(a2, *a1, a3, a4);
}

void sub_23AAB44B4(id a1@<X1>, char a2@<W0>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  unsigned int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(id, uint64_t, uint64_t, uint64_t);

  switch(a2)
  {
    case 28:
    case 29:
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v9 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
      goto LABEL_9;
    case 30:
      a4[3] = (uint64_t)&type metadata for Filename;
      v11 = objc_msgSend(a1, sel_stringAtIndex_, a3);
      v12 = sub_23B1C63E0();
      v14 = v13;

      *a4 = v12;
      a4[1] = v14;
      break;
    case 31:
      v15 = (uint64_t)objc_msgSend(a1, sel_longLongAtIndex_, a3);
      a4[3] = MEMORY[0x24BEE4568];
      if (v15 < 0)
      {
        sub_23B1C7040();
        __break(1u);
      }
      else
      {
        *a4 = v15;
      }
      break;
    case 32:
      v10 = objc_msgSend(a1, sel_unsignedIntAtIndex_, a3);
      a4[3] = MEMORY[0x24BEE44F0];
      *(_DWORD *)a4 = v10;
      break;
    case 33:
    case 34:
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v9 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 32);
LABEL_9:
      v16 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v9 + 16);
      a4[3] = AssociatedTypeWitness;
      __swift_allocate_boxed_opaque_existential_0(a4);
      v16(a1, a3, AssociatedTypeWitness, v9);
      if (v4)
        __swift_deallocate_boxed_opaque_existential_0((uint64_t)a4);
      break;
    default:
      sub_23AAB096C(a2);
      break;
  }
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_23AAB47B0(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B8613C0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23AAB4858()
{
  return sub_23AA7B734();
}

uint64_t sub_23AAB4860(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v17;
  uint64_t v18;

  v17 = a7;
  v18 = a2;
  v10 = sub_23B1C5570();
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a6);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(a1);
  v15 = __swift_instantiateConcreteTypeFromMangledName(v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  sub_23AA8A660((uint64_t)v14, v18, a6);
  return 0;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

uint64_t objectdestroy_359Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23B1C5A08();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v2 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  if (swift_getEnumCaseMultiPayload() == 1)

  else
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_1()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t objectdestroy_120Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_120Tm_0(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  swift_release();
  swift_release();
  a2(*(_QWORD *)(v2 + 40));
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_1924Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_82Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void objectdestroy_62Tm()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
}

void sub_23AAB50D8()
{
  swift_release();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AAB510C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
    v3 = v1;
  else
    v3 = v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2);
  return swift_deallocObject();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t objectdestroy_18Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAB51D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = *v1 & a1;
  if (result)
    *v1 &= ~a1;
  return result;
}

void sub_23AAB51F4()
{
  sub_23B1C5AD4();
  __asm { BR              X10 }
}

uint64_t sub_23AAB523C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (BYTE6(v0) == 8)
  {
    v3 = 0;
    sub_23AABED38((uint64_t)&v3, 1, 0, 0, 1, v1, v0);
    sub_23AAAE53C(v1, v0);
    return v3;
  }
  else
  {
    sub_23AAAE53C(v1, v0);
    return 0;
  }
}

id sub_23AAB52F0(id a1)
{
  return a1;
}

void sub_23AAB52FC(id a1)
{

}

uint64_t sub_23AAB5308(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  __int16 v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 0x1FF;
  return v3(&v5);
}

uint64_t sub_23AAB5344(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 9) << 8));
}

id sub_23AAB5380(id a1)
{
  return a1;
}

void sub_23AAB538C(id a1)
{

}

uint64_t sub_23AAB5398(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_23AAB53D0(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_23AAB53DC(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_23AAB53DC(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_23AAB5418(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAB5420(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_23AAB5420(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

id sub_23AAB5450(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return a1;
  swift_bridgeObjectRetain();
  return (id)swift_bridgeObjectRetain();
}

uint64_t sub_23AAB547C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

void sub_23AAB54B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AAB54E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_BYTE *);
  _BYTE v4[40];

  v2 = *(uint64_t (**)(_BYTE *))(v1 + 16);
  sub_23AA724E8(a1, (uint64_t)v4, &qword_2542DE8A0);
  return v2(v4);
}

id sub_23AAB5520(id a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return a1;
  swift_retain();
  return (id)swift_bridgeObjectRetain();
}

void sub_23AAB555C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_23AAB5588(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD v7[3];
  char v8;

  v5 = *(uint64_t (**)(_QWORD *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  v8 = a4 & 1;
  return v5(v7);
}

uint64_t sub_23AAB55C4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAB55FC(a1, *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_23AAB55CC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_23AAB55FC(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  return a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_23AAB5630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E17A8);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_2542DE870;
  else
    v2 = (uint64_t *)&unk_2542E2130;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

unint64_t sub_23AAB567C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23B1C749C();
  return sub_23AAB56AC(a1, v2);
}

unint64_t sub_23AAB56AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

_OWORD *sub_23AAB5748(_OWORD *a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), uint64_t *a6, void (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD **v12;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _OWORD *v24;
  _OWORD *result;
  uint64_t v26;
  char v27;

  v12 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = a4(a2);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a3 & 1) != 0)
    {
LABEL_7:
      v23 = *v12;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = (_OWORD *)(v23[7] + 32 * v17);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        return sub_23AAA159C(a1, v24);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_23AD19370(v20, a3 & 1, a6);
    v26 = a4(a2);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v12;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23AD28288(v17, (uint64_t)a2, a1, v23);
      return a2;
    }
  }
  a7(0);
  result = (_OWORD *)sub_23B1C7418();
  __break(1u);
  return result;
}

_OWORD *sub_23AAB5894(_OWORD *a1, void *a2, char a3)
{
  return sub_23AAB5748(a1, a2, a3, (uint64_t (*)(void *))sub_23AA88CF8, (void (*)(void))sub_23B189C74, &qword_2569E1D20, type metadata accessor for URLResourceKey);
}

uint64_t sub_23AAB58B8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23AAB567C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_23AD286D8(a1, v16[7] + 16 * v10);
      return sub_23AAB59C4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23B189AB4();
      goto LABEL_7;
    }
    sub_23AD1638C(v13, a3 & 1);
    v18 = sub_23AAB567C(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_23AD286D8(a1, v16[7] + 16 * v10);
      return sub_23AAB59C4(v10, a2, a1, v16);
    }
  }
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AAB59C4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_23AABABF4(a3, a4[7] + 16 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_23AAB5A28(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B8613CC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23AAB5A68(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23AA75478(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

id sub_23AAB5A84()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  uint64_t v11;

  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
    return 0;
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v6 == v7)
  {
LABEL_8:
    v0 = 0;
    *(_BYTE *)(v1 + 32) = 1;
    return v0;
  }
  if (v6 >= v7)
  {
    __break(1u);
LABEL_10:
    sub_23AA88218(v0, v2, v3);
    swift_bridgeObjectRetain();
    v11 = sub_23B1C7088();
    result = (id)swift_bridgeObjectRelease();
    if (v4 == v11)
      goto LABEL_7;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)v1 + 16 * v6;
  v0 = *(void **)(v8 + 32);
  v2 = *(unsigned __int8 *)(v8 + 40);
  v3 = *(_BYTE *)(v8 + 41);
  *(_QWORD *)(v1 + 8) = v6 + 1;
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  if (v5 >> 62)
    goto LABEL_10;
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_23AA88218(v0, v2, v3);
  if (v4 == v9)
  {
LABEL_7:
    sub_23AA862DC(v0, v2, v3);
    goto LABEL_8;
  }
LABEL_11:
  if ((v5 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      result = *(id *)(v5 + 8 * v4 + 32);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_21;
  }
  result = (id)MEMORY[0x23B85F860](v4, v5);
LABEL_15:
  if (!__OFADD__(v4, 1))
  {
    *(_QWORD *)(v1 + 24) = v4 + 1;
    return v0;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_23AAB5BF8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23B1C6CC8();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23AFF5D08(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23B1C6F80();
  if (!v8)
  {
    sub_23B1C7040();
    __break(1u);
LABEL_17:
    result = sub_23B1C70B8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void sub_23AAB5DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  uint64_t v12;
  id v13;

  sub_23AA9F52C(0, &qword_2542E7560);
  v11 = (void *)sub_23B1C66F8();
  if (a5)
    v12 = sub_23B1C5870();
  else
    v12 = 0;
  v13 = (id)v12;
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(a6 + 16))(a6, v11, a2, a3, a4);

}

void sub_23AAB5E60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_23AAB5E68(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16));
}

void sub_23AAB5E68(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;

  sub_23AA9F52C(0, &qword_2542E7560);
  v12 = (void *)sub_23B1C66F8();
  sub_23AA9F52C(0, (unint64_t *)&unk_2542E2010);
  v13 = (void *)sub_23B1C66F8();
  if (a6)
    v14 = sub_23B1C5870();
  else
    v14 = 0;
  v15 = (id)v14;
  (*(void (**)(uint64_t, void *, void *, _QWORD, uint64_t, uint64_t))(a7 + 16))(a7, v12, v13, a3 & 1, a4, a5);

}

void sub_23AAB5F54(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_23AAB5FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_23B1C5870();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_23AAB602C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x24BEE5400];
  v3 = sub_23B1C6020();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23AAB6074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BEE5418];
  v3 = sub_23B1C6020();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id sub_23AAB60B8(uint64_t a1, char a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_23B1C5954();
  v13[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_wrapperWithURL_readonly_error_, v4, a2 & 1, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_23B1C5A08();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_23B1C587C();

    swift_willThrow();
    v11 = sub_23B1C5A08();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

void sub_23AAB61D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23AAB61DC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_23AAB61DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;

  if (a3)
    v7 = sub_23B1C5870();
  else
    v7 = 0;
  v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);

}

uint64_t sub_23AAB6244()
{
  sub_23B1C602C();
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AA81D34();
  return sub_23B1C6DE8();
}

unint64_t sub_23AAB62D8()
{
  unint64_t result;

  result = qword_2542E7520;
  if (!qword_2542E7520)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542E7520);
  }
  return result;
}

unint64_t sub_23AAB6314()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E1F80;
  if (!qword_2542E1F80)
  {
    v1 = sub_23B1C6B78();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE57D0], v1);
    atomic_store(result, (unint64_t *)&qword_2542E1F80);
  }
  return result;
}

unint64_t sub_23AAB635C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E7510;
  if (!qword_2542E7510)
  {
    v1 = sub_23AA9F52C(255, (unint64_t *)&qword_2542E5500);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_2542E7510);
  }
  return result;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542DE740);
}

void sub_23AAB63CC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_23AAB63D4(*(id *)(v2 + 16), a1, a2);
}

void sub_23AAB63D4(id a1@<X1>, _QWORD *a2@<X0>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(a1, sel_bindLongParameter_, *a2);
  v5 = sub_23B1C63E0();
  v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

char *sub_23AAB6430@<X0>(char *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = qword_23B1DB328[*result];
  return result;
}

uint64_t sub_23AAB644C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2() & 1;
}

uint64_t sub_23AAB6470(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

uint64_t sub_23AAB64AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

void sub_23AAB64E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23AAB5FCC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23AAB64F8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5498);
  if (objc_msgSend(v1, sel_isNullAtIndex_, a1))
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  if (swift_dynamicCastMetatype())
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  sub_23B1C5780();
  swift_allocObject();
  sub_23B1C5774();
  v4 = objc_msgSend(v1, sel_dataAtIndex_, a1);
  v5 = sub_23B1C5AD4();
  v7 = v6;

  sub_23AAB748C(&qword_2542E7450, (uint64_t (*)(void))sub_23AB5EC6C, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  sub_23B1C5768();
  sub_23AAAE53C(v5, v7);
  result = swift_release();
  if (!v2)
    return v9;
  return result;
}

void sub_23AAB6660(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23AAB6668(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_23AAB6668(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    type metadata accessor for URLResourceKey(0);
    sub_23AA7E38C((unint64_t *)&unk_2542E1F50, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23B1CB368);
    v5 = (void *)sub_23B1C61F4();
  }
  if (a2)
    v6 = sub_23B1C5870();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_23AAB671C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  int v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_23AAB7928(a2);
  if ((v8 & 1) != 0)
    goto LABEL_17;
  v9 = *(_DWORD *)(a2 + 36);
  if (v9 != v7)
  {
    __break(1u);
    goto LABEL_12;
  }
  v10 = 1 << *(_BYTE *)(a2 + 32);
  if (v10 < result)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 8);
  if (v9 != (_DWORD)v11)
    goto LABEL_13;
  if (*(_QWORD *)a1 < result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    v12 = *(_QWORD *)(a1 + 32);
    if (v9 == (_DWORD)v12)
    {
      v13 = *(_QWORD *)(a1 + 24);
      if (v10 >= v13)
      {
        *(_QWORD *)a3 = *(_QWORD *)a1;
        *(_QWORD *)(a3 + 8) = v11;
        *(_BYTE *)(a3 + 16) = 0;
        *(_QWORD *)(a3 + 24) = v13;
        *(_QWORD *)(a3 + 32) = v12;
        *(_BYTE *)(a3 + 40) = 0;
        *(_QWORD *)(a3 + 48) = a2;
        return swift_bridgeObjectRetain();
      }
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23AAB67F0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23B1C74A8();
    if (a2)
    {
      sub_23B1C74B4();
      if (a2 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
    v6 = sub_23B1C74E4();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v9 = ~v7;
      v10 = a2 == 2;
      v11 = a1 == 1 && a2 == 2;
      if (a1)
        v10 = 0;
      do
      {
        v12 = *(_QWORD *)(a3 + 48) + 16 * v8;
        v13 = *(_QWORD *)v12;
        v14 = *(unsigned __int8 *)(v12 + 8);
        if (v14)
        {
          if (v14 == 1)
          {
            if (a2 == 1 && v13 == a1)
              return 1;
          }
          else if (v13)
          {
            if (v11)
              return 1;
          }
          else if (v10)
          {
            return 1;
          }
        }
        else if (!a2 && (_DWORD)v13 == (_DWORD)a1)
        {
          return 1;
        }
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_23AAB6960(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23AAB69A0(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23B1C7088();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x23B85F86C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_23B1C7088();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23B1C671C();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AAB6B5C(unint64_t a1)
{
  return sub_23AAB69A0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23AAB6B68);
}

uint64_t sub_23AAB6B68(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23AAB5A28((unint64_t *)&unk_2569E68D0, &qword_2569E68C8, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E68C8);
          v12 = sub_23ACDBA38(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23AA9F52C(0, &qword_2542E7560);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AAB6D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = sub_23B1C63E0();
  v5 = v4;
  if (v3 == sub_23B1C63E0() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v8 = sub_23B1C7388();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = 5;
  while (1)
  {
    v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
      break;
    v12 = sub_23B1C63E0();
    v14 = v13;
    if (v12 == sub_23B1C63E0() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v17 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_7;
    ++v10;
    if (v11 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AAB6ED8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = v3;
  v46 = a2;
  v47 = a3;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2358);
  v6 = MEMORY[0x24BDAC7A8](v53);
  v45 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v52 = (char *)&v42 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t *)((char *)&v42 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - v12;
  v60 = MEMORY[0x24BEE4AF8];
  v15 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v16 = *(_BYTE *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 32);
  v54 = *(unsigned __int8 *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  sub_23AAB75B0(v15, v14, v16);
  v55 = v14;
  v56 = v15;
  sub_23AAB75B0(v15, v14, v16);
  sub_23AAB75B0(v17, v18, v54);
  result = swift_bridgeObjectRetain();
  if ((v16 & 1) != 0 || (v54 & 1) != 0)
    goto LABEL_45;
  v58 = v19 + 64;
  v43 = v17;
  v44 = v18;
  v42 = v19 + 80;
  v21 = v55;
  v22 = v56;
  v49 = v13;
  v50 = v19;
  v48 = v18;
  while ((_DWORD)v21 == (_DWORD)v18)
  {
    if (v22 == v17)
    {
      sub_23AB3D0AC(v56, v55, 0);
      sub_23AB3D0AC(v17, v18, 0);
      swift_bridgeObjectRelease();
      sub_23AB3D0AC(v17, v21, 0);
      return v60;
    }
    if (v22 < v56)
      goto LABEL_36;
    if ((_DWORD)v18 != (_DWORD)v55)
      goto LABEL_37;
    if (v22 >= v17)
      goto LABEL_38;
    if (v22 < 0 || v22 >= 1 << *(_BYTE *)(v19 + 32))
      goto LABEL_39;
    v23 = (unint64_t)v22 >> 6;
    if ((*(_QWORD *)(v58 + 8 * ((unint64_t)v22 >> 6)) & (1 << v22)) == 0)
      goto LABEL_40;
    if (*(_DWORD *)(v19 + 36) != (_DWORD)v18)
      goto LABEL_41;
    v57 = v4;
    v24 = (uint64_t)v52;
    v25 = v53;
    v26 = (uint64_t)&v52[*(int *)(v53 + 48)];
    v27 = *(_QWORD *)(v19 + 56);
    v28 = *(_QWORD *)(v19 + 48) + 16 * v22;
    v29 = *(_QWORD *)v28;
    v30 = *(_BYTE *)(v28 + 8);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    sub_23AA8EFC8(v27 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v22, v26, (uint64_t *)&unk_2542E6B00);
    *(_QWORD *)v24 = v29;
    *(_BYTE *)(v24 + 8) = v30;
    v32 = v51;
    *v51 = v29;
    *((_BYTE *)v32 + 8) = v30;
    v19 = v50;
    sub_23AA8EFC8(v26, (uint64_t)v32 + *(int *)(v25 + 48), (uint64_t *)&unk_2542E6B00);
    sub_23AA8A05C(v24, &qword_2542E2358);
    v33 = (uint64_t)v32;
    v34 = (uint64_t)v49;
    result = sub_23AA724E8(v33, (uint64_t)v49, &qword_2542E2358);
    v35 = 1 << *(_BYTE *)(v19 + 32);
    if (v22 >= v35)
      goto LABEL_42;
    v36 = *(_QWORD *)(v58 + 8 * v23);
    if ((v36 & (1 << v22)) == 0)
      goto LABEL_43;
    v18 = v48;
    if (*(_DWORD *)(v19 + 36) != (_DWORD)v48)
      goto LABEL_44;
    v37 = v36 & (-2 << (v22 & 0x3F));
    if (v37)
    {
      v22 = __clz(__rbit64(v37)) | v22 & 0xFFFFFFFFFFFFFFC0;
      v4 = v57;
LABEL_27:
      v17 = v43;
      goto LABEL_28;
    }
    v38 = v23 + 1;
    v39 = (unint64_t)(v35 + 63) >> 6;
    v4 = v57;
    if (v23 + 1 >= v39)
    {
      v22 = 1 << *(_BYTE *)(v19 + 32);
      goto LABEL_27;
    }
    v40 = *(_QWORD *)(v58 + 8 * v38);
    v17 = v43;
    if (v40)
    {
LABEL_25:
      v22 = __clz(__rbit64(v40)) + (v38 << 6);
    }
    else
    {
      while (v39 - 2 != v23)
      {
        v40 = *(_QWORD *)(v42 + 8 * v23++);
        if (v40)
        {
          v38 = v23 + 1;
          goto LABEL_25;
        }
      }
      v22 = 1 << *(_BYTE *)(v19 + 32);
    }
LABEL_28:
    v41 = v45;
    sub_23AA724E8(v34, v45, &qword_2542E2358);
    sub_23AEC43FC(v41, v46, v47, &v59);
    result = sub_23AA8A05C(v41, &qword_2542E2358);
    if (v4)
    {
      sub_23AB3D0AC(v56, v55, 0);
      sub_23AB3D0AC(v17, v18, 0);
      swift_bridgeObjectRelease();
      sub_23AB3D0AC(v22, v44, 0);
      return swift_bridgeObjectRelease();
    }
    if (v59)
    {
      MEMORY[0x23B85F008](result);
      if (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23B1C6740();
      sub_23B1C6788();
      result = sub_23B1C671C();
    }
    v21 = v44;
    if (v54)
      goto LABEL_45;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_23AAB7370(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  BOOL v5;
  char v6;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v3 = v2;
  if (*a1)
    v5 = 0;
  else
    v5 = a1[1] == 1;
  if (v5)
  {
    sub_23AA8A05C((uint64_t)a1, qword_2542DDB78);
    v8 = sub_23AAB567C(a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12 = *v2;
      v14 = *v3;
      *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23B189AB4();
        v12 = v14;
      }
      sub_23AABABF4(*(_QWORD *)(v12 + 56) + 16 * v10, (uint64_t)&v15);
      sub_23B1857D0(v10, v12);
      *v3 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = xmmword_23B1CFA60;
    }
    return sub_23AA8A05C((uint64_t)&v15, qword_2542DDB78);
  }
  else
  {
    sub_23AABABF4((uint64_t)a1, (uint64_t)&v15);
    v6 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_23AAB58B8((uint64_t)&v15, a2, v6);
    *v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AAB748C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5498);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B8613CC](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23AAB7500(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23AAB7528(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23AAB7550(uint64_t a1)
{
  sub_23AB3D0AC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_23AAB7580(uint64_t a1)
{
  sub_23AAB75B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_23AAB75B0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_23AAB75BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5578);
  v2 = sub_23B1C70AC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v6, (uint64_t)&v15, &qword_2542E1EA0);
    v7 = v15;
    v8 = v16;
    result = sub_23AC3F074(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23AAA159C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAB76F0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;

  v27 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v12 = (_QWORD *)sub_23B1C70AC();
    v26 = &v10[*(int *)(v7 + 48)];
    v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_23AA8EFC8(v13, (uint64_t)v10, v27);
      v15 = *(_QWORD *)v10;
      v16 = v10[8];
      result = sub_23AA97254(*(_QWORD *)v10, v16);
      if ((v18 & 1) != 0)
        break;
      v19 = result;
      *(_QWORD *)((char *)v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v20 = v12[6] + 16 * result;
      *(_QWORD *)v20 = v15;
      *(_BYTE *)(v20 + 8) = v16;
      v21 = v12[7];
      v22 = __swift_instantiateConcreteTypeFromMangledName(a4);
      result = sub_23AA724E8((uint64_t)v26, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, a4);
      v23 = v12[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
        goto LABEL_10;
      v12[2] = v25;
      v13 += v14;
      if (!--v11)
        return (unint64_t)v12;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23AAB786C(uint64_t a1)
{
  return sub_23AAB76F0(a1, (uint64_t *)&unk_2542E1E18, &qword_2542E3650, (uint64_t *)&unk_2542E6B00);
}

uint64_t sub_23AAB7888(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 88);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23AAB792C()
{
  uint64_t v0;

  return sub_23AAB7940(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23AAB7934()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23AAB7940(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_23AAB7948(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for Ingestion.FetchChildrenMetadata()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for Ingestion.ReSnapshotChildren()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for Ingestion.FetchItemMetadata()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for FSOrFPJob()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AAB7994@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_23AA73F88(v1, a1);
}

uint64_t sub_23AAB79AC()
{
  void *v0;

  return sub_23AABC838(v0, (void (*)(uint64_t *__return_ptr))sub_23AAB7994) & 1;
}

uint64_t storeEnumTagSinglePayload for JobCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 69 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 69) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xBB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xBA)
    return ((uint64_t (*)(void))((char *)&loc_23AAB7A34 + 4 * byte_23B1E3445[v4]))();
  *a1 = a2 + 69;
  return ((uint64_t (*)(void))((char *)sub_23AAB7A68 + 4 * byte_23B1E3440[v4]))();
}

uint64_t sub_23AAB7A68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AAB7A70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AAB7A78);
  return result;
}

uint64_t sub_23AAB7A84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AAB7A8CLL);
  *(_BYTE *)result = a2 + 69;
  return result;
}

uint64_t sub_23AAB7A90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AAB7A98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for JobCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xBB)
    goto LABEL_17;
  if (a2 + 69 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 69) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 69;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 69;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 69;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x46;
  v8 = v6 - 70;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

void type metadata accessor for ItemJob()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AAB7B40(void *a1)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;

  v2 = sub_23AA8A0E0();
  if (v3 == -1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = a1;
    *(_WORD *)(v6 + 24) = 256;
    *(_BYTE *)(v6 + 42) = 0;
    *(_QWORD *)(v6 + 32) = a1;
    *(_WORD *)(v6 + 40) = 256;
    v7 = a1;
  }
  else
  {
    v4 = v2;
    v5 = v3;

    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_BYTE *)(v6 + 24) = v5;
    *(_BYTE *)(v6 + 25) = 0;
    *(_QWORD *)(v6 + 32) = v4;
    *(_BYTE *)(v6 + 40) = v5;
    *(_WORD *)(v6 + 41) = 0;
  }
  return v6;
}

void sub_23AAB7BF4()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AAB7C24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v2;
}

void sub_23AAB7C4C()
{
  sub_23AAB7BF4();
}

uint64_t sub_23AAB7C58()
{
  return swift_deallocClassInstance();
}

void type metadata accessor for ReconciliationIDObjectCacheValue()
{
  JUMPOUT(0x23B861318);
}

void sub_23AAB7C7C()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AAB7CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v4, v3, a1);
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = v1;
  return v2;
}

void sub_23AAB7CF4()
{
  swift_allocObject();
  sub_23AAB7C7C();
}

uint64_t sub_23AAB7D2C()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23AAB7D40()
{
  unint64_t result;

  result = qword_2542E16B0;
  if (!qword_2542E16B0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D82A0, &type metadata for ItemReconciliationHalfSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E16B0);
  }
  return result;
}

uint64_t type metadata accessor for SQLCodableDictionaryWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SQLCodableDictionaryWrapper);
}

void sub_23AAB7D90(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_23AA6D8E0(a1, *(uint64_t **)(v2 + 16), *(_DWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 28), a2);
}

uint64_t sub_23AAB7DB0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_fsgetpath();
  *a1 = result;
  return result;
}

uint64_t sub_23AAB7DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

_QWORD *sub_23AAB7E4C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29],
    a1[30]);
  return a1;
}

uint64_t sub_23AAB7EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DummyEnumeratorObserver()
{
  return objc_opt_self();
}

uint64_t sub_23AAB7F6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v2 = *(_QWORD *)(a1 + 600);
  v3 = *(_QWORD *)(a1 + 608);
  v4 = *(void **)(a1 + 616);
  v5 = *(void **)(a1 + 624);
  v6 = *(_QWORD *)(a1 + 632);
  v7 = *(_QWORD *)(a1 + 640);
  v8 = *(_QWORD *)(a1 + 648);
  v9 = *(_QWORD *)(a1 + 656);
  v31 = *(_OWORD *)(a1 + 680);
  v32 = *(_OWORD *)(a1 + 664);
  v29 = *(_OWORD *)(a1 + 712);
  v30 = *(_OWORD *)(a1 + 696);
  v27 = *(_OWORD *)(a1 + 744);
  v28 = *(_OWORD *)(a1 + 728);
  v25 = *(_OWORD *)(a1 + 776);
  v26 = *(_OWORD *)(a1 + 760);
  v24 = *(_OWORD *)(a1 + 792);
  v22 = *(_OWORD *)(a1 + 416);
  v23 = *(_OWORD *)(a1 + 432);
  v20 = *(_OWORD *)(a1 + 384);
  v21 = *(_OWORD *)(a1 + 400);
  v18 = *(_OWORD *)(a1 + 352);
  v19 = *(_OWORD *)(a1 + 368);
  v16 = *(_OWORD *)(a1 + 320);
  v17 = *(_OWORD *)(a1 + 336);
  v14 = *(_OWORD *)(a1 + 288);
  v15 = *(_OWORD *)(a1 + 304);
  v12 = *(_OWORD *)(a1 + 256);
  v13 = *(_OWORD *)(a1 + 272);
  v11 = *(_OWORD *)(a1 + 224);
  sub_23AA88348(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(void **)(a1 + 144),
    *(void **)(a1 + 152),
    *(_OWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    (void *)v11,
    *((uint64_t *)&v11 + 1),
    *(void **)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((unint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((void **)&v17 + 1),
    (void *)v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((void **)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    *(_QWORD *)(a1 + 448));
  sub_23AA88224(v2, v3, v4, v5, v6, v7, v8, v9, v32, *((uint64_t *)&v32 + 1), v31, *((uint64_t *)&v31 + 1), (void *)v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v28, *((uint64_t *)&v28 + 1), v27,
    *((uint64_t *)&v27 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24);
  return a1;
}

uint64_t sub_23AAB8130(void *a1)
{
  uint64_t v1;

  return sub_23AA7816C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_23AAB8144(void *a1)
{
  uint64_t v1;

  return sub_23AAB8150(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_23AAB8150(void *a1, unint64_t a2, char a3)
{
  id v6;
  uint64_t v8;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  if (!a3)
    goto LABEL_5;
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  v6 = objc_msgSend(a1, sel_bindLongParameter_, a2, 0, 0xE000000000000000);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v8;
}

uint64_t sub_23AAB8268(void *a1)
{
  uint64_t v1;

  return sub_23AA6BEC8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23AAB8278(void *a1)
{
  uint64_t v1;

  return sub_23AA7E8CC(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AAB8284(char a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;

  return sub_23AA732BC(a1 & 1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_23AAB8290()
{
  return sub_23AAB829C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA6BE28);
}

uint64_t sub_23AAB829C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

id sub_23AAB82B0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 624)), sel_removeAllObjects);
}

uint64_t sub_23AAB82C8()
{
  id *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)MEMORY[0x23B8615C4]((char *)v0[2] + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_session);

    objc_msgSend(v3, sel_unregisterLifetimeExtensionForObject_, v0[3]);
    swift_unknownObjectRelease();
  }

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FPFSOperationServicer()
{
  return objc_opt_self();
}

uint64_t sub_23AAB8384(void *a1, void *a2)
{
  uint64_t v2;
  objc_class *v5;
  char *v6;
  id v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  objc_super v14;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  v5 = (objc_class *)type metadata accessor for FPFSServicerExtender();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC9libfssync20FPFSServicerExtender_request] = a2;
  v14.receiver = v6;
  v14.super_class = v5;
  v7 = a2;
  v8 = a1;
  *(_QWORD *)(v2 + 24) = objc_msgSendSuper2(&v14, sel_init);
  v9 = (void *)MEMORY[0x23B8615C4](&v8[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_session, v14.receiver, v14.super_class);

    v12 = *(id *)(v2 + 24);
    objc_msgSend(v11, sel_registerLifetimeExtensionForObject_, v12);

    swift_unknownObjectRelease();
  }

  return v2;
}

void sub_23AAB847C(void *a1, void *a2)
{
  uint64_t v2;

  sub_23AAB8488(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(_QWORD, _QWORD))(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_23AAB8488(void *a1, void *a2, uint64_t a3, void *a4, void (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  _QWORD *v11;
  _BYTE *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  unint64_t v25;

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a6;
  if (a1)
  {
    v12 = *(_BYTE **)(a3 + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_23B1CE680;
    *(_QWORD *)(v13 + 32) = a1;
    v25 = v13;
    sub_23B1C671C();
    v14 = a2;
    v15 = a4;
    swift_retain();
    v16 = a1;
    v17 = a2;
    v18 = v15;
    swift_retain();
    v19 = v16;
    swift_retain();
    sub_23AAB8828(v25, 16, v12, (void (*)(_QWORD))sub_23AC03B60, (uint64_t)v11);

    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v20 = a2;
    v21 = a4;
    swift_retain();
    v22 = a2;
    v23 = v21;
    swift_retain();
    sub_23ABFABF8(0, (uint64_t)a2, v23, a5, a6);
  }
  swift_release();

  swift_release();
}

uint64_t type metadata accessor for FPFSServicerExtender()
{
  return objc_opt_self();
}

uint64_t sub_23AAB86B4(_BYTE *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[16];
  id v9;
  uint64_t v10;

  v3 = objc_sync_enter(v1);
  if ((_DWORD)v3)
  {
    MEMORY[0x24BDAC7A8](v3);
    v9 = v1;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ABD7708, (uint64_t)v8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
  }
  *a1 = *((_BYTE *)v1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_urlsAreInTransientState);
  v4 = v1;
  if (objc_sync_enter(v4))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v4);
  sub_23AA71B80((uint64_t)v4, &v10);
  if (objc_sync_exit(v4))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v4);

  v5 = v10;
  v6 = objc_sync_exit(v4);
  if ((_DWORD)v6)
  {
    MEMORY[0x24BDAC7A8](v6);
    v9 = v4;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ABD7710, (uint64_t)v8, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
  }
  return v5;
}

uint64_t sub_23AAB8828(unint64_t a1, uint64_t a2, _BYTE *a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t result;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  const void *v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  _BYTE *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD);
  uint64_t v42;
  _QWORD aBlock[6];

  v10 = sub_23B1C602C();
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C60A4();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  v41 = a4;
  *(_QWORD *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_23ACF2260;
  v17[3] = v16;
  v17[4] = a1;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = sub_23ACF2260;
  v18[5] = v16;
  v19 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v20 = (void *)MEMORY[0x23B8615C4](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain();
  if (!v20)
    goto LABEL_10;
  if (!objc_msgSend(v20, sel_unableToStartup))
  {

LABEL_10:
    if ((a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
    {
      v26 = (void *)MEMORY[0x23B8615C4](v19);
      if (v26)
      {
        v27 = v26;
        v41 = (void (*)(_QWORD))objc_msgSend(v26, sel_serialQueue);

        aBlock[4] = nullsub_1;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_23AA698FC;
        aBlock[3] = &block_descriptor_2066;
        v36 = _Block_copy(aBlock);
        sub_23B1C6068();
        v42 = MEMORY[0x24BEE4AF8];
        sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
        sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
        v28 = v40;
        sub_23B1C6DE8();
        v29 = v36;
        v30 = v41;
        MEMORY[0x23B85F470](0, v15, v12, v36);
        _Block_release(v29);

        (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v28);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
      }
    }
    v31 = *(void **)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
    v32 = *(void **)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = a3;
    v33[3] = sub_23ACE289C;
    v33[4] = v17;
    v33[5] = sub_23ACF22A8;
    v33[6] = v18;
    v34 = a3;
    swift_retain();
    swift_retain();
    sub_23AA81A30((uint64_t)"decorate(_:options:completionHandler:)", 38, 2, v31, v32, (uint64_t)sub_23AAB92FC, (uint64_t)v33);
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_14;
  }
  v21 = sub_23AC61E18();
  if (!(a1 >> 62))
  {
    v22 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v22)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  result = sub_23B1C7088();
  if (!result)
    goto LABEL_16;
LABEL_5:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_17:
    v24 = (id)MEMORY[0x23B85F860](0, a1);
    goto LABEL_8;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v24 = *(id *)(a1 + 32);
LABEL_8:
    v25 = v24;
    swift_bridgeObjectRelease();
    v41(v25);

    swift_release();
    swift_release();

LABEL_14:
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  __break(1u);
  return result;
}

void sub_23AAB8C80(void *a1, __int16 a2)
{
  uint64_t v2;

  sub_23AA69B98(a1, a2 & 0x1FF, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_23AAB8C98(void *a1, __int16 a2)
{
  uint64_t v2;

  sub_23AAB8CAC(a1, a2 & 0x1FF, *(void (**)(id, id))(v2 + 16));
}

void sub_23AAB8CAC(id a1, __int16 a2, void (*a3)(id, id))
{
  id v5;
  id v6;
  id v7;

  if ((a2 & 0x100) != 0)
  {
    v5 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    swift_willThrowTypedImpl();
    v6 = a1;
    a3(0, a1);
    sub_23AAB52FC(a1);
    sub_23AAB52FC(a1);
  }
  else
  {
    v7 = a1;
    a3(a1, 0);

  }
}

void sub_23AAB8E6C(void *a1, char a2)
{
  uint64_t v2;

  sub_23AA6BAE0(a1, a2 & 1, *(void (**)(void *, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_23AAB8E7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AA80AFC(*(_QWORD *)(v0 + 16), v0 + v2, *(uint8_t **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(char *, uint64_t))(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

void sub_23AAB8EF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AA92C60(a1, *(void (**)(char *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_23AAB8F5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AA7AFF0(*(_BYTE **)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(void (**)(id, uint64_t))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_23AAB8FB8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = objc_msgSend(a2, sel_identifier);
  *(_QWORD *)(v12 + 24) = a3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a4;
  *(_QWORD *)(v13 + 24) = a5;
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_23ACFF92C;
  v15[3] = v13;
  v15[4] = v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_23ACFB298;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = a3;
  swift_retain();
  v18 = a2;
  v19 = sub_23AAB7B40(objc_msgSend(v18, sel_identifier));

  v20 = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AABB820(v19, a6, v12 | 6, a1, v12 | 6, a7, a1, v20, (void (*)(void *, id, id))sub_23ACFB2AC, v16);
  swift_release();
  swift_release_n();
  swift_release();

  return swift_release_n();
}

uint64_t sub_23AAB917C(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAB9188(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t sub_23AAB9188(uint64_t a1, void *a2, void *a3, void (*a4)(void))
{
  type metadata accessor for FPFSOperationServicer();
  swift_allocObject();
  sub_23AAB8384(a2, a3);
  a4();
  return swift_release();
}

void sub_23AAB92E4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_errorGenerationRecord);
}

uint64_t sub_23AAB92FC()
{
  return sub_23AA85308((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA8531C);
}

uint64_t sub_23AAB9308(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_23AAB9320(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E53C0(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t *)&unk_2542E6740, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_23AAB934C(uint64_t a1)
{
  return sub_23B1A0F3C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB9368);
}

uint64_t sub_23AAB9368@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a6;
  v25 = a7;
  v32 = *MEMORY[0x24BDAC8D0];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v24 - v16;
  v18 = sub_23B1C5A08();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  v20 = *((_QWORD *)a1 + 3);
  v28 = *a1;
  v29 = *((_QWORD *)a1 + 2);
  v30 = v20;
  v31 = *((_QWORD *)a1 + 4);
  v21 = v27;
  sub_23B0E0928((uint64_t)&v28, a2, a3, a4, (uint64_t)v17, a5, v26);
  if (v21)
    return sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542E6740);
  v22 = v25;
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_2542E6740);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v22, v15, v18);
    return sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542E6740);
  }
  __break(1u);
  return result;
}

uint64_t sub_23AAB9514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_23B1C5DEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_23AAB954C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AAB9558()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AAB9564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t type metadata accessor for TelemetrySignposter(uint64_t a1)
{
  return sub_23AA94094(a1, (uint64_t *)&unk_2542E4E60);
}

uint64_t sub_23AAB9600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 < 1)
  {
    if (*(uint64_t *)(v0 + 16) < 1)
      return 0;
    else
      return *(unsigned __int8 *)(v0 + 50);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = __OFADD__(v2, v3);
    v5 = v2 + v3;
    if (v4)
      __break(1u);
    else
      return v5 >= v1;
  }
  return result;
}

uint64_t sub_23AAB9644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  v6 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v4;
}

uint64_t sub_23AAB968C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  v6 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SnapshotItemObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotItemObject);
}

uint64_t sub_23AAB96EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  v7 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a1, v7);
  return v4;
}

uint64_t sub_23AAB9744(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  v3 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  v5 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)v2 + 80), *(_QWORD *)(*(_QWORD *)v2 + 88), v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, a1, v5);
  return v2;
}

uint64_t sub_23AAB97B0(void *a1)
{
  uint64_t v1;

  return sub_23AA77BD8(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_23AAB97C0()
{
  type metadata accessor for ItemJob();
}

uint64_t sub_23AAB9808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v8 - 72) = sub_23B1C6758();
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  v18 = v3;
  v19 = v2;
  v11[2] = v8 - 72;
  v12 = v1;
  sub_23ABEB8E0((uint64_t)sub_23AAB97B0, (uint64_t)&v13, 0, 0, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ABF6F58, (uint64_t)v11);
  v9 = *(_QWORD *)(v8 - 72);
  if (v0)
    swift_bridgeObjectRelease();
  return v9;
}

void type metadata accessor for PersistenceTrigger()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AAB9898()
{
  unint64_t result;

  result = qword_2542E1130;
  if (!qword_2542E1130)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E3860, &_s9SQLFieldsON_0);
    atomic_store(result, (unint64_t *)&qword_2542E1130);
  }
  return result;
}

uint64_t sub_23AAB98DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD v14[2];

  LOBYTE(v14[0]) = 0;
  sub_23AA94830((uint64_t)v14, MEMORY[0x24BEE1768], a2, MEMORY[0x24BEE1768], a3);
  if (!v3)
  {
    v4 = 1;
    switch(v14[1])
    {
      case 0:
        LOBYTE(v13) = 1;
        sub_23AA84870(a2, (uint64_t)&type metadata for JobWaitCondition);
        sub_23AA94830((uint64_t)&v13, (uint64_t)&type metadata for JobWaitCondition, a2, (uint64_t)&type metadata for JobWaitCondition, a3);
        v4 = v14[0];
        v12 = 2;
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4680);
        sub_23AA84870(a2, v8);
        sub_23AA94830((uint64_t)&v12, v8, a2, v8, a3);
        break;
      case 1:
        LOBYTE(v13) = 2;
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4680);
        sub_23AA84870(a2, v10);
        sub_23AA94830((uint64_t)&v13, v10, a2, v10, a3);
        v4 = v14[0];
        break;
      case 2:
        LOBYTE(v13) = 2;
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4680);
        sub_23AA84870(a2, v11);
        sub_23AA94830((uint64_t)&v13, v11, a2, v11, a3);
        v4 = v14[0];
        break;
      case 3:
        sub_23AEB1308();
        v4 = swift_allocError();
        break;
      case 4:
        return v4;
      case 5:
        v4 = 0;
        break;
      default:
        sub_23AB7B620();
        swift_allocError();
        *v9 = 0;
        swift_willThrow();
        break;
    }
  }
  return v4;
}

unint64_t sub_23AAB9B4C()
{
  unint64_t result;

  result = qword_2542E1118;
  if (!qword_2542E1118)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E377C, &_s9SQLFieldsON_1);
    atomic_store(result, (unint64_t *)&qword_2542E1118);
  }
  return result;
}

ValueMetadata *sub_23AAB9B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  ValueMetadata *v6;
  char v8;
  _QWORD v9[2];

  LOBYTE(v9[0]) = 0;
  v6 = &type metadata for JobSchedulingPriority;
  sub_23AA84870(a2, (uint64_t)&type metadata for JobSchedulingPriority);
  sub_23AA94830((uint64_t)v9, (uint64_t)&type metadata for JobSchedulingPriority, a2, (uint64_t)&type metadata for JobSchedulingPriority, a3);
  if (!v3)
  {
    v6 = (ValueMetadata *)v9[1];
    v8 = 1;
    sub_23AA84870(a2, (uint64_t)&type metadata for NSecTimestamp);
    sub_23AA94830((uint64_t)&v8, (uint64_t)&type metadata for NSecTimestamp, a2, (uint64_t)&type metadata for NSecTimestamp, a3);
  }
  return v6;
}

void sub_23AAB9C6C()
{
  sub_23AA81D80();
}

_BYTE *sub_23AAB9C94@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result | 0x20;
  return result;
}

uint64_t sub_23AAB9CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for TelemetrySignposter(0) + 24);
  v2 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_release();
}

uint64_t sub_23AAB9D00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AAB9D0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AAB9D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = type metadata accessor for TelemetrySignposter(0);
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  v11 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for TelemetrySignpost(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2542DDE78);
}

uint64_t getEnumTagSinglePayload for FPItemVersionData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

void sub_23AAB9E2C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_23AAB9F20()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23AAB9F98);
}

void sub_23AAB9F28(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x23AAB9F30);
  JUMPOUT(0x23AAB9F98);
}

void sub_23AAB9F74()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AAB9F98);
}

void sub_23AAB9F7C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AAB9F98);
}

uint64_t sub_23AAB9F84(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x23AAB9F90);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x23AAB9F98);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for ItemStateVersion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ItemStateVersion);
}

uint64_t sub_23AAB9FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  result = type metadata accessor for ItemStateVersion(0, a4, a5, v11);
  v13 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v13 = a2;
  v13[1] = a3;
  return result;
}

uint64_t sub_23AABA02C(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x60)]);
}

uint64_t type metadata accessor for FileItemIDObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileItemIDObject);
}

uint64_t sub_23AABA064()
{
  return sub_23B1C62E4();
}

id sub_23AABA0A4(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_23AA6B2E4(a1);
}

uint64_t sub_23AABA0D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AABA13C(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + v2), *(uint64_t (**)(uint64_t, _QWORD))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AABA13C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD), uint64_t a4, unint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t *, _OWORD *, _QWORD, uint64_t, void (*)(uint64_t), _QWORD *);
  _BYTE __dst[496];
  _BYTE v21[504];
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  _OWORD __src[32];

  v11 = *(_QWORD *)(a1 + 16);
  v12 = *a2;
  v13 = *((unsigned __int8 *)a2 + 8);
  v24 = *a2;
  v25 = v13;
  v26 = 0;
  (*(void (**)(_OWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v11 + 168))(__src, &v24, 1);
  if (v5)
  {

    goto LABEL_6;
  }
  sub_23AA724E8((uint64_t)__src, (uint64_t)v21, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v21, (uint64_t)&v22, (uint64_t *)&unk_2542E4CB0);
  if (sub_23AAFC2A4((uint64_t)&v22) == 1)
  {
LABEL_6:
    v14 = a2[2];
    v15 = *((unsigned __int8 *)a2 + 24);
    if (*((_BYTE *)a2 + 24))
    {
      if (v15 == 1)
      {
        if (v13 != 1 || v14 != v12)
        {
LABEL_21:
          v17 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
          v22 = a2[2];
          v23 = v15;
          memset(__src, 0, 96);
          v18 = (_QWORD *)swift_allocObject();
          v18[2] = a3;
          v18[3] = a4;
          v18[4] = a1;
          v18[5] = a5;
          v19 = *(void (**)(uint64_t *, _OWORD *, _QWORD, uint64_t, void (*)(uint64_t), _QWORD *))(*(_QWORD *)v17 + 136);
          swift_retain();
          swift_retain();
          swift_retain();
          sub_23AA93780(a5);
          v19(&v22, __src, 0, 2, sub_23ACFA998, v18);
          swift_release();
          swift_release();
          return sub_23AAAEE68(*(uint64_t *)&__src[0], *((uint64_t *)&__src[0] + 1), *(uint64_t *)&__src[1], *((uint64_t *)&__src[1] + 1), *(uint64_t *)&__src[2], *((uint64_t *)&__src[2] + 1), *(uint64_t *)&__src[3], *((uint64_t *)&__src[3] + 1), *(uint64_t *)&__src[4]);
        }
      }
      else if (v14)
      {
        if (v13 != 2 || v12 != 1)
          goto LABEL_21;
      }
      else if (v13 != 2 || v12)
      {
        goto LABEL_21;
      }
    }
    else if (v13 || (_DWORD)v14 != (_DWORD)v12)
    {
      goto LABEL_21;
    }
    return a3(0, 0);
  }
  memcpy(__dst, __src, sizeof(__dst));
  if ((__dst[16] & 0x10) == 0)
  {
    sub_23AAFC3AC((uint64_t)__dst);
    goto LABEL_6;
  }
  a3(1, 0);
  return sub_23AAFC3AC((uint64_t)__dst);
}

uint64_t sub_23AABA398(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23AABA3C4()
{
  return sub_23AABA398((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA75C60);
}

uint64_t sub_23AABA3E0()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = ((uint64_t (*)(void))(*v0)[68])();
  v2 = (*(uint64_t (**)(uint64_t))(*v0[2] + 504))(v1);
  v3 = (*(uint64_t (**)(uint64_t))(*v0[4] + 696))(v2);
  return (*(uint64_t (**)(uint64_t))(*v0[5] + 696))(v3);
}

uint64_t sub_23AABA448()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

void sub_23AABA450(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + qword_2542E6C88);
}

uint64_t sub_23AABA464()
{
  void *v0;

  return sub_23AABC838(v0, (void (*)(uint64_t *__return_ptr))sub_23AABA450) & 1;
}

uint64_t sub_23AABA4A0()
{
  uint64_t v0;

  sub_23B1C60A4();
  return sub_23AA69FDC(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_23AABA4F0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AA7252C(a1, v1 + v4, *(void (**)(uint64_t))(v1 + v5), *(void (**)(uint64_t))(v1 + v5 + 8), *(char **)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + v7), *(_BYTE *)(v1 + v7 + 8), *(_BYTE *)(v1 + v7 + 9), *(_QWORD *)(v1 + ((v7 + 17) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AABA5A0()
{
  uint64_t v0;

  if ((fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v0 + 168) + 16)) & 1) != 0)
    return 1;
  else
    return *(unsigned __int8 *)(v0 + 152);
}

uint64_t sub_23AABA5D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (!v1)
    return sub_23AABA3E0();
  return result;
}

uint64_t sub_23AABA604()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 25) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AA774A4(v0 + v2, *(uint64_t (**)(uint64_t))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v5 + 8), *(unsigned __int8 *)(v0 + v5 + 16), *(unsigned __int8 *)(v0 + v5 + 17), *(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8), *(_BYTE **)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE **)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23AABA6B4()
{
  return 0;
}

void type metadata accessor for Materialization.EvictItem()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for Materialization.MaterializeItem()
{
  JUMPOUT(0x23B861318);
}

uint64_t *sub_23AABA6D4(uint64_t *a1)
{
  sub_23AAA7638(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  return a1;
}

void sub_23AABA724(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  v9 = *(unsigned __int8 *)(v6 + 80);
  if (v8 >= a3)
  {
    v12 = 0;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((((*(_DWORD *)(v6 + 64) + (((_DWORD)v9 + ((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 8) & ~(_DWORD)v9) + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v10 = a3 - v8 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X4 }
  }
  if (((((*(_DWORD *)(v6 + 64) + (((_DWORD)v9 + ((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 8) & ~(_DWORD)v9) + 7) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v13 = ~v8 + a2;
    bzero(a1, ((((*(_QWORD *)(v6 + 64) + ((v9 + ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v13;
  }
  __asm { BR              X10 }
}

void sub_23AABA854()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23AABA8FCLL);
}

void sub_23AABA85C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x23AABA864);
  JUMPOUT(0x23AABA8FCLL);
}

void sub_23AABA8AC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AABA8FCLL);
}

void sub_23AABA8B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AABA8FCLL);
}

void sub_23AABA8BC(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (a2)
  {
    if (v2 == v4)
      JUMPOUT(0x23AABA8D8);
    if (v3 > 0x7FFFFFFE)
      JUMPOUT(0x23AABA8C8);
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x23AABA8ECLL);
    *(_QWORD *)((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) = a2;
  }
  JUMPOUT(0x23AABA8FCLL);
}

uint64_t sub_23AABA914(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t *v15;
  unint64_t v16;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v5 <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v4 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  if (!a2)
    return 0;
  v9 = *(_QWORD *)(v4 + 64);
  v10 = *(unsigned __int8 *)(v6 + 80);
  if (v8 >= a2)
  {
    if (v5 == v8)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 48))(a1, *(unsigned int *)(v4 + 84), v3);
    }
    else
    {
      v15 = (unint64_t *)((a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v7 > 0x7FFFFFFE)
      {
        return (*(uint64_t (**)(unint64_t))(v6 + 48))(((unint64_t)v15 + v10 + 8) & ~v10);
      }
      else
      {
        v16 = *v15;
        if (v16 >= 0xFFFFFFFF)
          LODWORD(v16) = -1;
        if ((v16 + 1) >= 2)
          return v16;
        else
          return 0;
      }
    }
  }
  else
  {
    if (((((((*(_QWORD *)(v6 + 64) + ((v10 + ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v8 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23AABA9C8 + 4 * byte_23B1E4B75[v13]))();
  }
}

uint64_t storeEnumTagSinglePayload for EvictionUrgency(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23AABAAD0 + 4 * byte_23B1DEDA1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23AABAB04 + 4 * byte_23B1DED9C[v4]))();
}

uint64_t sub_23AABAB04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AABAB0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AABAB14);
  return result;
}

uint64_t sub_23AABAB20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AABAB28);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23AABAB2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AABAB34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AABAB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E48C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23AABAB88()
{
  unint64_t result;

  result = qword_2542E0B98;
  if (!qword_2542E0B98)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8368, &_s9SQLFieldsON);
    atomic_store(result, (unint64_t *)&qword_2542E0B98);
  }
  return result;
}

uint64_t initializeWithTake for WeakEnumerator(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t sub_23AABABF4(uint64_t a1, uint64_t a2)
{
  initializeWithTake for WeakEnumerator(a2, a1);
  return a2;
}

uint64_t sub_23AABAC30@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  return sub_23AABAC48(*(stat **)(v1 + 24), a1);
}

uint64_t sub_23AABAC48@<X0>(stat *a1@<X1>, int *a2@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t result;

  sub_23B1C59E4();
  v4 = sub_23B1C6458();
  swift_bridgeObjectRelease();
  v5 = lstat((const char *)(v4 + 32), a1);
  result = swift_release();
  *a2 = v5;
  return result;
}

void sub_23AABACB8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  unsigned int v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  id v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v3 = v1;
  v55 = *MEMORY[0x24BDAC8D0];
  v37 = sub_23B1C545C();
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23B1C5A08();
  v38 = *(_QWORD *)(v39 - 8);
  v7 = MEMORY[0x24BDAC7A8](v39);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 48) & 1) == 0)
  {
    v28 = *(_QWORD *)(v1 + 40);
    v44 = 0;
    v45 = 0;
    v47 = 0;
    v46 = 0;
    v48 = 0u;
    v49 = 0u;
    v50 = 0u;
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    v54 = 0u;
    MEMORY[0x24BDAC7A8](v7);
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AABAC30);
    v12 = v2;
    if (!v2)
    {
      if (*(_DWORD *)(v1 + 16) == (_DWORD)v44)
      {
        if (v28 != v45)
        {
          *(_QWORD *)(v1 + 40) = v45;
          *(_BYTE *)(v1 + 48) = 0;
        }
        return;
      }
LABEL_34:
      sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSLookupScope.swift", 126, 2, 150);
    }
LABEL_22:
    v24 = v12;
LABEL_23:
    v29 = v24;
    LODWORD(v44) = sub_23B1C54F8();
    sub_23AB6CD48();
    v30 = sub_23B1C575C();

    if ((v30 & 1) != 0)
    {

      *(_QWORD *)(v3 + 40) = 0;
      *(_BYTE *)(v3 + 48) = 1;
    }
    return;
  }
  v10 = sub_23B1C59E4();
  LOBYTE(v44) = 2;
  sub_23B0E1840(4294967294, v10, v11, 0x200000, 0, 0, (uint64_t)&v44, (uint64_t)sub_23AFE3734, v1);
  v12 = v2;
  if (v2)
    goto LABEL_22;
  if (v44 == 2)
  {
    __break(1u);
    goto LABEL_34;
  }
  if ((v44 & 1) != 0)
  {
    v33 = v1;
    v13 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_fp_maximumBounceLevel);
    if ((v13 & 0x8000000000000000) != 0)
      goto LABEL_32;
    v14 = 0;
    v35 = v33 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL;
    v34 = v13;
    while (1)
    {
      if (v14 != 1)
      {
        if (qword_2569E12A0 != -1)
          swift_once();
        v44 = (id)qword_256A07990;
        v45 = *(_QWORD *)algn_256A07998;
        v42 = 47;
        v43 = 0xE100000000000000;
        v40 = 58;
        v41 = 0xE100000000000000;
        sub_23AAA420C();
        v15 = (void *)sub_23B1C6CF8();
        if (v14 >= 2)
        {
          v44 = v15;
          v45 = v16;
          sub_23B1C64F4();
          v42 = v14;
          sub_23B1C7304();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
        }
        sub_23B1C5984();
        swift_bridgeObjectRelease();
        v17 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
        v18 = a1;
        v19 = (void *)sub_23B1C5954();
        v20 = (void *)sub_23B1C5954();
        v44 = 0;
        v21 = objc_msgSend(v17, sel_moveItemAtURL_toURL_error_, v19, v20, &v44);

        if (v21)
        {
          v22 = v44;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
        }
        else
        {
          v23 = v44;
          v24 = (void *)sub_23B1C587C();

          swift_willThrow();
          v25 = v24;
          sub_23B1C5390();
          sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
          v26 = v37;
          LOBYTE(v23) = sub_23B1C575C();

          (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v26);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
          if ((v23 & 1) == 0)
          {
            v3 = v33;
            goto LABEL_23;
          }

        }
        a1 = v18;
        v13 = v34;
      }
      if (v13 == v14)
      {
        v31 = v33;
        *(_QWORD *)(v33 + 40) = 0;
        *(_BYTE *)(v31 + 48) = 1;
        return;
      }
      if (__OFADD__(v14++, 1))
      {
        __break(1u);
LABEL_32:
        __break(1u);
      }
    }
  }
}

uint64_t sub_23AABB244(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[4];
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  int v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[26];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;

  v16 = a1;
  v38 = *MEMORY[0x24BDAC8D0];
  v3 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2542E5360 != -1)
    swift_once();
  v21 = qword_2542EDE40;
  v22 = *(_QWORD *)algn_2542EDE48;
  v20[0] = 47;
  v20[1] = 0xE100000000000000;
  v18 = 58;
  v19 = 0xE100000000000000;
  sub_23AAA420C();
  sub_23B1C6CF8();
  sub_23B1C5984();
  swift_bridgeObjectRelease();
  sub_23AABACB8((uint64_t)v8);
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v17);
    return v9 & 1;
  }
  if (*(_BYTE *)(v1 + 48) != 1 || (v16 & 1) == 0 || *(_BYTE *)(v1 + 49) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v17);
    v9 = 0;
    return v9 & 1;
  }
  BYTE6(v21) = 0;
  WORD2(v21) = 0;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0;
  v29 = 0;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  memset(v33, 0, sizeof(v33));
  v35 = 0;
  v36 = 0;
  v34 = 0;
  v37 = 0;
  LODWORD(v21) = 2;
  LOWORD(v22) = 448;
  sub_23AB6CEB8((uint64_t)&v21);
  sub_23B1C5BD0();
  *((_QWORD *)&v23 + 1) = sub_23AD675A8((uint64_t)v5);
  *(_QWORD *)&v24 = v11;
  sub_23B1C5BD0();
  *((_QWORD *)&v24 + 1) = sub_23AD675A8((uint64_t)v5);
  *(_QWORD *)&v25 = v12;
  MEMORY[0x24BDAC7A8](*((_QWORD *)&v24 + 1));
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AFE384C);
  v13 = sub_23B1C59E4();
  LOBYTE(v20[0]) = 1;
  result = sub_23B0E1010(4294967294, v13, v14, 0x200000, 0, 0, (uint64_t)v20, (uint64_t)sub_23AFE3864, v1);
  if ((v20[0] & 1) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v17);
    v9 = 1;
    return v9 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AABB590(uint64_t a1, uint64_t a2)
{
  return sub_23AA6F854(a1, a2, 0xD00000000000001ALL, 0x800000023B2075C0, (uint64_t (*)(uint64_t))sub_23AAAF0A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA8FA0);
}

uint64_t sub_23AABB5BC(uint64_t a1, uint64_t a2)
{
  return sub_23AA7E454(a1, a2, (uint64_t *)&unk_2542E6E10, (uint64_t (*)(uint64_t))sub_23AAAE8F4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA9348);
}

uint64_t sub_23AABB5D8(uint64_t a1, uint64_t a2)
{
  return sub_23AA6F854(a1, a2, 0xD000000000000016, 0x800000023B2075E0, (uint64_t (*)(uint64_t))sub_23AAAF608, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA962C);
}

void sub_23AABB604()
{
  sub_23AABB638();
}

void sub_23AABB624()
{
  sub_23AABB7E8();
}

void sub_23AABB638()
{
  type metadata accessor for ItemJob();
}

uint64_t sub_23AABB678()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  swift_getMetatypeMetadata();
  v1 = sub_23B1C67DC();
  v2 = MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v1);
  result = sub_23AD7E264((void (*)(char *, char *))sub_23AABB624, (uint64_t)&v5, v1, (uint64_t)&type metadata for JobCode, MEMORY[0x24BEE4078], v2, MEMORY[0x24BEE40A8], v3);
  *v0 = result;
  return result;
}

void sub_23AABB6EC()
{
  type metadata accessor for ItemJob();
}

void sub_23AABB744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;

  swift_getMetatypeMetadata();
  sub_23B1C67DC();
  sub_23B1C6C98();
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1EE0);
  sub_23B0C6934((void (*)(char *, char *))sub_23AABB604, (uint64_t)&a9, MEMORY[0x24BEE4078], v15, v16, (uint64_t)&a15);
  sub_23AAB97C0();
}

uint64_t sub_23AABB7B8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_23AABB7E8()
{
  sub_23AA6FB08();
}

uint64_t sub_23AABB808(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

void sub_23AABB820(uint64_t a1, int a2, unint64_t a3, uint64_t a4, unint64_t a5, int a6, uint64_t a7, void *a8, void (*a9)(void *, id, id), uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  int v24;
  _BOOL4 v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(void *, id, id);
  int v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[4];

  v72 = a4;
  v62 = a2;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2930);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a5;
  v67 = a6;
  *(_BYTE *)(v20 + 24) = a6;
  *(_QWORD *)(v20 + 32) = a7;
  *(_QWORD *)(v20 + 40) = a8;
  v66 = a9;
  *(_QWORD *)(v20 + 48) = a9;
  *(_QWORD *)(v20 + 56) = a10;
  v69 = a5;
  v70 = v20;
  sub_23AA93780(a5);
  swift_retain();
  v21 = a8;
  v68 = a10;
  swift_retain();
  v22 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain();
  sub_23AA93780(a3);
  swift_retain();
  sub_23AA93780(a3);
  v23 = sub_23B1C5E40();
  v24 = sub_23B1C6A94();
  v25 = os_log_type_enabled(v23, (os_log_type_t)v24);
  v63 = (uint64_t)v21;
  if (v25)
  {
    v59 = v24;
    v60 = a3;
    v61 = a7;
    v26 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v74[0] = v58;
    *(_DWORD *)v26 = 136446466;
    swift_beginAccess();
    v27 = *(void **)(a1 + 32);
    v28 = *(unsigned __int8 *)(a1 + 40);
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      swift_retain();
      sub_23AA88218(v27, v28, 1);
      v29 = sub_23AA7B734();
      v31 = v30;
      sub_23AA862DC(v27, v28, 1);
      swift_release();
    }
    else
    {
      v29 = sub_23AA96F18(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      v31 = v32;
    }
    v73 = sub_23AABEC68(v29, v31, v74);
    sub_23B1C6CBC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    a3 = v60;
    sub_23AA93780(v60);
    sub_23AE5BC48(a3);
    v34 = v33;
    v36 = v35;
    sub_23AC03BE4(a3);
    v73 = sub_23AABEC68(v34, v36, v74);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AC03BE4(a3);
    sub_23AC03BE4(a3);
    _os_log_impl(&dword_23AA66000, v23, (os_log_type_t)v59, "resolving URL for %{public}s for %{public}s", (uint8_t *)v26, 0x16u);
    v37 = v58;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v37, -1, -1);
    MEMORY[0x23B8614BC](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v71);
    a7 = v61;
  }
  else
  {
    swift_release_n();
    sub_23AC03BE4(a3);
    sub_23AC03BE4(a3);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v71);
  }
  swift_beginAccess();
  v38 = *(void **)(a1 + 32);
  v39 = *(unsigned __int8 *)(a1 + 40);
  if (*(_BYTE *)(a1 + 41) != 1)
  {
    v46 = v72;
    if (!v38 && (_DWORD)v39 == 2)
      goto LABEL_15;
    goto LABEL_19;
  }
  v40 = qword_2542E1FE0;
  v41 = v38;
  if (v40 != -1)
    swift_once();
  v42 = sub_23B1C63E0();
  v44 = v43;
  if (v42 != sub_23B1C63E0() || v44 != v45)
  {
    v52 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AA862DC(v38, v39, 1);
    v46 = v72;
    if ((v52 & 1) != 0)
      goto LABEL_15;
LABEL_19:
    v53 = *(_QWORD *)(v46 + 16);
    v54 = objc_allocWithZone(MEMORY[0x24BDD1768]);
    swift_retain();
    v55 = v70;
    swift_retain();
    swift_retain();
    v56 = objc_msgSend(v54, sel_init);
    sub_23AA93780(a3);
    sub_23AAF0F2C(a1, 1, v62 & 1, a3, v56, 0, v53, a3, (void (*)(char *))sub_23B0BB580, v55, v46, a1);
    sub_23AC03BE4(a3);
    swift_release();
    swift_release();
    swift_release_n();

    return;
  }
  swift_bridgeObjectRelease_n();
  sub_23AA862DC(v38, v39, 1);
LABEL_15:
  type metadata accessor for VFSFileTree(0);
  v47 = (_QWORD *)swift_dynamicCastClassUnconditional();
  swift_retain();
  if (objc_sync_enter(v47))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v47);
  v48 = v47[20];
  swift_retain();
  if (objc_sync_exit(v47))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v47);
  swift_release();
  v49 = v48 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL;
  v50 = sub_23B1C5A08();
  v51 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v65, v49, v50);
  swift_release();
  swift_storeEnumTagMultiPayload();
  sub_23AC83DF8(v51, v69, v67 & 1, a7, v63, v66, v68);
  sub_23AA8A05C(v51, &qword_2569E2930);
  swift_release();
}

uint64_t type metadata accessor for FPFSEnumerator()
{
  uint64_t result;

  result = qword_2542E09D8;
  if (!qword_2542E09D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23AABC060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23AA790B0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(unsigned __int8 *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(uint64_t **)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD **)(v4 + 72));
}

void sub_23AABC0F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5E4C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AA6ED90(a1, v1 + v4, *(void **)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v1+ ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23AABC344(uint64_t a1, _BYTE *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v9, a1);
  result = 0;
  *a2 = v9;
  return result;
}

uint64_t sub_23AABC510(uint64_t a1)
{
  uint64_t v1;

  return sub_23AABC344(a1, *(_BYTE **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23AABC52C(uint64_t a1)
{
  uint64_t v1;

  return sub_23AABC538(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23AABC538(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  char v11;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v10, a1);
  result = 0;
  v9 = v11;
  *(_QWORD *)a2 = v10;
  *(_BYTE *)(a2 + 8) = v9;
  return result;
}

uint64_t sub_23AABC70C(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAB4860(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), qword_2542E5250, &qword_2542E72C0);
}

uint64_t sub_23AABC738(uint64_t a1)
{
  uint64_t v1;

  return sub_23AABC754(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_23AABC754(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  *(_QWORD *)(a2 + 24) = a1;
  return a3(a2);
}

uint64_t storeEnumTagSinglePayload for ContentStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23AABC7C8 + 4 * byte_23B1E5105[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23AABC7FC + 4 * byte_23B1E5100[v4]))();
}

uint64_t sub_23AABC7FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AABC804(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AABC80CLL);
  return result;
}

uint64_t sub_23AABC818(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AABC820);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23AABC824(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AABC82C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AABC838(void *a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v2;
  char v5;
  uint64_t v7;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a2(&v7);
  if (v2)
  {
    if (!objc_sync_exit(a1))
      return v5 & 1;
LABEL_9:
    swift_unknownObjectRetain();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  if (objc_sync_exit(a1))
    goto LABEL_9;
  v5 = v7;
  return v5 & 1;
}

void sub_23AABC900()
{
  sub_23AA6E1EC();
}

uint64_t type metadata accessor for SnapshotItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotItem);
}

void sub_23AABC92C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X7>, uint64_t a5@<X8>, uint64_t a6)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v9 = (int *)type metadata accessor for SnapshotItem(0, a4, a6, a3);
  v10 = a5 + v9[14];
  *(_QWORD *)v10 = 0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_BYTE *)(v10 + 24) = 1;
  v11 = a5 + v9[15];
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16);
  v13(a5, a1, AssociatedTypeWitness);
  v13(a5 + v9[9], a2, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

double sub_23AABCAA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(uint64_t, uint64_t);
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v13, a1);
  v7 = (_QWORD *)(v1 + v3[11]);
  *v7 = v15;
  v7[1] = v16;
  sub_23AA9BA80(v17, v1 + v3[12]);
  sub_23AAB7EC8(v18, v14);
  sub_23AA9F854(v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, a1);
  v8 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v8(v10, v4);
  v8(v12, v4);
  *(_QWORD *)(v1 + v3[16]) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + v3[17]) = xmmword_23B1D2320;
  return result;
}

unint64_t sub_23AABCB60()
{
  unint64_t result;

  result = qword_2542E08E0;
  if (!qword_2542E08E0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E6924, &_s14descr250C16931O9SQLFieldsON);
    atomic_store(result, (unint64_t *)&qword_2542E08E0);
  }
  return result;
}

uint64_t sub_23AABCBA4@<X0>(int a1@<W0>, char *a2@<X8>)
{
  return sub_23AA94154(a1, a2);
}

uint64_t sub_23AABCBBC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_get_is_ignore_root();
  *a1 = result;
  return result;
}

uint64_t sub_23AABCBF0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_fget_parent_id();
  *a1 = result;
  return result;
}

uint64_t sub_23AABCC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  id v15;
  uint64_t v17;

  v1 = v0;
  v2 = sub_23B1C5A08();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5750();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 152);
  if ((_DWORD)v10 == 3)
  {
    v11 = (void *)swift_retain();
    if (objc_sync_enter(v11))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v1);
    v12 = *(_QWORD *)(v1 + 160);
    swift_retain();
    if (objc_sync_exit((id)v1))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v1);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v2);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE860);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
    v14 = (void *)*MEMORY[0x24BDBCE08];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCE08];
    v15 = v14;
    sub_23AA7A178(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    sub_23B1C5900();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease();
    v10 = sub_23B1C572C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_BYTE *)(v1 + 152) = v10;
  }
  return v10;
}

uint64_t sub_23AABCE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  int v10;
  _BYTE v12[96];

  v9 = *(_QWORD *)a1;
  v10 = *(unsigned __int8 *)(a1 + 8);
  sub_23AA724E8(a2, (uint64_t)v12, (uint64_t *)&unk_2542E4948);
  return sub_23AA7BAC4(v9, v10, (uint64_t)v12, 0, a4, a5, a6);
}

uint64_t sub_23AABCED8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23AABCF7C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_BYTE *)(v2 + 72));
}

uint64_t sub_23AABCF0C@<X0>(_DWORD *a1@<X8>)
{
  int is_package_root2;
  uint64_t result;

  sub_23B1C6458();
  is_package_root2 = fpfs_pkg_is_package_root2();
  result = swift_release();
  *a1 = is_package_root2;
  return result;
}

uint64_t sub_23AABCF7C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t result;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t ObjectType;
  uint64_t v26;
  int v27;
  id v28;
  char *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD v53[2];
  int v54;
  uint64_t v55;
  os_log_t v56;
  int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[5];

  v66 = a4;
  v59 = a8;
  v60 = a7;
  v61 = a6;
  v62 = a9;
  v64 = a5;
  v65 = a3;
  v88[3] = *MEMORY[0x24BDAC8D0];
  v12 = sub_23B1C5A08();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = 0;
  v63 = a1;
  v81 = a1;
  v82 = a2;
  v83 = v65;
  v84 = &v69;
  v20 = v67;
  v85 = v66;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AABCF0C);
  if (!v20)
  {
    v58 = v15;
    v65 = v13;
    v66 = v17;
    v67 = v19;
    v22 = v63;
    v23 = v62;
    if ((v69 & 4) != 0)
      goto LABEL_4;
    v70 = 0;
    v71 = 0;
    v73 = 0;
    v72 = 0;
    v74 = 0u;
    v75 = 0u;
    v76 = 0u;
    v77 = 0u;
    v78 = 0u;
    v79 = 0u;
    v80 = 0u;
    MEMORY[0x24BDAC7A8](result);
    v24 = v22;
    LODWORD(v53[-2]) = v22;
    v53[-1] = &v70;
    result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ACFEA08);
    if ((BYTE4(v79) & 0x40) == 0)
      goto LABEL_4;
    ObjectType = swift_getObjectType();
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v71, ObjectType);
    LODWORD(v64) = v27;
    v61 = v26;
    v28 = (id)fpfs_current_or_default_log();
    v29 = v67;
    sub_23B1C5E58();
    swift_retain_n();
    v30 = sub_23B1C5E40();
    v57 = sub_23B1C6A94();
    if (os_log_type_enabled(v30, (os_log_type_t)v57))
    {
      v56 = v30;
      v54 = a10;
      v31 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v88[0] = v55;
      *(_DWORD *)v31 = 136316162;
      v53[1] = v31 + 4;
      v32 = swift_projectBox();
      swift_beginAccess();
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
      v53[0] = v12;
      v33(v58, v32, v12);
      v34 = (void *)sub_23B1C5954();
      v35 = objc_msgSend(v34, sel_fp_shortDescription);

      v36 = sub_23B1C63E0();
      v38 = v37;

      (*(void (**)(char *, _QWORD))(v65 + 8))(v58, v53[0]);
      v87 = sub_23AABEC68(v36, v38, v88);
      sub_23B1C6CBC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2048;
      swift_beginAccess();
      v86 = v71;
      sub_23B1C6CBC();
      *(_WORD *)(v31 + 22) = 1024;
      swift_beginAccess();
      LODWORD(v68) = v69;
      sub_23B1C6CBC();
      v39 = v64;
      v40 = (uint8_t *)v31;
      *(_WORD *)(v31 + 28) = 2080;
      if (v39 == -1)
      {
        v43 = 0xE600000000000000;
        v41 = 0x29656E6F6E28;
      }
      else
      {
        v41 = sub_23AA96F18(v61, v39);
        v43 = v42;
      }
      v68 = sub_23AABEC68(v41, v43, v88);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 38) = 2080;
      if ((_BYTE)v54 == 0xFF)
      {
        v46 = 0xE600000000000000;
        v24 = v22;
        v47 = v66;
        v44 = 0x29656E6F6E28;
      }
      else
      {
        v44 = sub_23AA96F18(v59, v54);
        v46 = v45;
        v24 = v22;
        v47 = v66;
      }
      v48 = v40;
      v68 = sub_23AABEC68(v44, v46, v88);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v49 = v56;
      _os_log_impl(&dword_23AA66000, v56, (os_log_type_t)v57, "📦 x-validated query for %s ino:%llu status:%x snapshotID:%s expected:%s", v40, 0x30u);
      v50 = v55;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v50, -1, -1);
      MEMORY[0x23B8614BC](v48, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v67, v16);
    }
    else
    {

      swift_release_n();
      result = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v29, v16);
    }
    v51 = v61;
    v52 = v64;
    if (v64 <= 1u)
    {
      if ((_BYTE)v64)
      {
        MEMORY[0x24BDAC7A8](result);
        LODWORD(v53[-2]) = v24;
        result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADA97F0);
LABEL_4:
        *(_QWORD *)v23 = 0;
        *(_BYTE *)(v23 + 8) = -1;
        return result;
      }
      result = swift_beginAccess();
      if ((v69 & 0xA) == 0)
      {
        MEMORY[0x24BDAC7A8](result);
        LODWORD(v53[-2]) = v24;
        result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADA97C0);
      }
    }
    *(_QWORD *)v23 = v51;
    *(_BYTE *)(v23 + 8) = v52;
  }
  return result;
}

void sub_23AABD5BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23AABD5E0(a1, a2);
}

void sub_23AABD5E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  id v16;
  char v17;
  uint64_t v18;
  _QWORD v19[3];
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  int v29;

  v4 = MEMORY[0x24BDAC7A8](a1);
  v19[2] = v8;
  v20 = v4;
  v21 = v9;
  v22 = v10;
  v23 = v11;
  v24 = v12;
  v25 = v13;
  v26 = 0;
  v27 = -1;
  v14 = 0x100000000;
  if (!v15)
    v14 = 0;
  v28 = 0;
  sub_23B1AA0D0(v4, v5, v7, v14 | v6, (uint64_t)sub_23AA8ABA0, (uint64_t)v19, a2);
  if (v2)
  {
    v16 = v2;
    v29 = sub_23B1C54A4();
    sub_23AB6CD48();
    v17 = sub_23B1C575C();

    if ((v17 & 1) != 0)
    {

      v18 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
    }
  }
}

void sub_23AABD714(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  int v33;

  v5 = MEMORY[0x24BDAC7A8](a1);
  v23 = v2;
  v24 = v5;
  v25 = v11;
  v26 = v10;
  v27 = v12;
  v28 = v13;
  v29 = v14;
  v30 = v15;
  v31 = v16;
  v17 = 0x100000000;
  if (!v18)
    v17 = 0;
  v32 = v7;
  sub_23B1AA0D0(v5, v6, v8, v17 | v9, (uint64_t)sub_23AA8ABA0, (uint64_t)&v22, a2);
  if (v3)
  {
    v19 = v3;
    v33 = sub_23B1C54A4();
    sub_23AB6CD48();
    v20 = sub_23B1C575C();

    if ((v20 & 1) != 0)
    {

      v21 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
    }
  }
}

void type metadata accessor for UserRequest()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AABD858(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  return sub_23AA6DEEC(a1);
}

uint64_t sub_23AABD8C4(uint64_t a1)
{
  return sub_23AABD858(a1);
}

id sub_23AABD8D0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_2542E69F8), sel_removeAllObjects);
}

BOOL sub_23AABD8E8(uint64_t a1)
{
  uint64_t v1;

  return sub_23AABDA0C(a1, *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(void ***)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16));
}

void sub_23AABD8F8(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, void **a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, BOOL *a6@<X8>)
{
  void *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a4;
  v19 = a1;
  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - v14;
  a2(v13);
  if (v6)
  {
    v16 = *a3;
    *a3 = v6;

    v17 = 0;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 56))(v15, 0, 1, a5);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v19, v15, v11);
    v17 = *(_QWORD *)(v20 + qword_2542E69D8) == 0;
  }
  *a6 = v17;
}

BOOL sub_23AABDA0C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void **a5, uint64_t a6, uint64_t a7)
{
  void *v12;
  BOOL v14;

  v12 = (void *)MEMORY[0x23B8601A8]();
  sub_23AABD8F8(a2, a3, a5, a6, a7, &v14);
  objc_autoreleasePoolPop(v12);
  return v14;
}

void sub_23AABDA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v1 = v0;
  v2 = sub_23B1C5DC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  v12 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (*(_BYTE *)(v0 + qword_2542EDE58) == 1)
  {

  }
  else
  {
    v27 = v15;
    sub_23AABA448();
    if ((sub_23AAB9600() & 1) != 0
      || (v16 = v0 + qword_2542E69D0,
          swift_beginAccess(),
          v17 = *(_QWORD *)(*(_QWORD *)v16 + 16),
          v17 >= (int)objc_msgSend(v27, sel_sqlDatabaseOnNextDurableFlushTriggerThreshold)))
    {
      if (qword_2542E6818 != -1)
        swift_once();
      v18 = (void *)qword_2542EDD28;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
      sub_23AA8EFC8((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_2542E67B8);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2);
      v26 = v1;
      if (v19 == 1)
      {
        v20 = v18;
        sub_23B1C5DB0();
        sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E67B8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
      }
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v14, v5, v2);
      v25 = *(int *)(v12 + 20);
      *(_QWORD *)&v14[v25] = v18;
      v21 = &v14[*(int *)(v12 + 24)];
      *(_QWORD *)v21 = "SQLDB: Force flush of database";
      *((_QWORD *)v21 + 1) = 30;
      v21[16] = 2;
      v22 = v18;
      sub_23B1C6BE4();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v23 + 64) = sub_23AAA0D14();
      *(_QWORD *)(v23 + 32) = 0xD00000000000001CLL;
      *(_QWORD *)(v23 + 40) = 0x800000023B206E10;
      sub_23B1C5D98();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E67B8);
      v24 = *(void **)(v26 + qword_2542EE110);
      objc_msgSend(v24, sel_forceBatchStart);
      objc_msgSend(v24, sel_flush);
      sub_23B1C6BD8();
      sub_23B1C5DA4();

      sub_23AA937BC((uint64_t)v14, type metadata accessor for Signpost);
    }
    else
    {

    }
  }
}

void type metadata accessor for Propagation.UpdateItem()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for Propagation.DeleteItem()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for Propagation.CreateItem()
{
  JUMPOUT(0x23B861318);
}

uint64_t type metadata accessor for JobLockRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JobLockRule);
}

uint64_t storeEnumTagSinglePayload for VFSVersion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VFSVersion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23AABDF04(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  char v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  unint64_t v44;
  void *v45;
  id v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  const void *v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[848];
  _BYTE v67[848];
  _QWORD v68[110];
  char v69;
  uint64_t v70;

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v2;
  v10 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
  v11 = swift_dynamicCastClassUnconditional();
  if (a1 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v12 = sub_23B1C7088();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  v13 = MEMORY[0x24BEE4AF8];
  v61 = a2;
  v62 = a1;
  v58 = v10;
  v59 = v9;
  if (!v12)
  {
LABEL_18:
    v40 = v13;
    v41 = sub_23AA7F2F4(v13, a2 & 1);
    if (v4)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v42 = v41;
    v68[106] = v40;
    v68[107] = 0;
    v68[108] = v62;
    v68[109] = 0;
    v69 = 0;
    swift_bridgeObjectRetain();
    v43 = sub_23AAB5A84();
    if (!v45)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v61 & 4) != 0)
        sub_23AA88520(v62);
      return swift_release();
    }
    v46 = v43;
    v47 = v44;
    v48 = v45;
    v49 = (uint64_t)v59;
    while (1)
    {
      if (!*(_QWORD *)(v42 + 16))
        goto LABEL_26;
      sub_23AA88218(v46, v47, BYTE1(v47) & 1);
      v50 = sub_23AA85F34(v46, v47 | (((v47 >> 8) & 1) << 8));
      if ((v51 & 1) == 0)
        break;
      v52 = (const void *)(*(_QWORD *)(v42 + 56) + 848 * v50);
      memcpy(v66, v52, sizeof(v66));
      memmove(v67, v52, 0x350uLL);
      nullsub_1(v67);
      sub_23AAB7F6C((uint64_t)v66);
      sub_23AA862DC(v46, v47, BYTE1(v47) & 1);
LABEL_27:
      sub_23AF26904((uint64_t)v67, (uint64_t)v68);
      sub_23AF26904((uint64_t)v68, (uint64_t)&v70);
      v53 = sub_23B1C5A08();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v49, 1, 1, v53);
      sub_23AA9BF04((uint64_t)v48);
      sub_23AD2BAF8(v49);
      sub_23AA862DC(v46, v47, BYTE1(v47) & 1);
      sub_23AF2694C((uint64_t)v68);

      v46 = sub_23AAB5A84();
      v47 = v54;
      v48 = v55;
      if (!v55)
        goto LABEL_28;
    }
    sub_23AA862DC(v46, v47, BYTE1(v47) & 1);
LABEL_26:
    sub_23AF26884((uint64_t)v67);
    goto LABEL_27;
  }
  v68[0] = MEMORY[0x24BEE4AF8];
  result = sub_23ADACD84(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    v64 = v12;
    v56 = v11;
    v57 = v3;
    v15 = 0;
    v13 = v68[0];
    v63 = a1 & 0xC000000000000001;
    while (1)
    {
      v65 = v13;
      v16 = v63 ? (id)MEMORY[0x23B85F860](v15, a1) : *(id *)(a1 + 8 * v15 + 32);
      v17 = v16;
      v18 = objc_msgSend(v16, sel_itemIdentifier, v56, v57, v58);
      sub_23B1C63E0();
      v19 = sub_23AA8A4F8();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
        break;
      v20 = sub_23B1C63E0();
      v22 = sub_23AA8A1BC(0x80007uLL, v20, v21);
      v24 = v23;
      v26 = v25;
      v28 = v27;
      swift_bridgeObjectRelease();
      v29 = v26;
      a1 = v62;
      v30 = MEMORY[0x23B85ED8C](v22, v24, v29, v28);
      v32 = v31;
      swift_bridgeObjectRelease();
      v33 = (id)sub_23AA8A208(v30, v32);
      v35 = v34;
      LODWORD(v28) = ~v34;

      if (!(_DWORD)v28)
        goto LABEL_13;

      v36 = 0;
LABEL_14:
      v13 = v65;
      v68[0] = v65;
      v38 = *(_QWORD *)(v65 + 16);
      v37 = *(_QWORD *)(v65 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_23ADACD84(v37 > 1, v38 + 1, 1);
        v13 = v68[0];
      }
      *(_QWORD *)(v13 + 16) = v38 + 1;
      v39 = v13 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v33;
      ++v15;
      *(_BYTE *)(v39 + 40) = v35;
      *(_BYTE *)(v39 + 41) = v36;
      if (v64 == v15)
      {
        LOBYTE(a2) = v61;
        v4 = v57;
        goto LABEL_18;
      }
    }

LABEL_13:
    v33 = objc_msgSend(v17, sel_itemIdentifier);

    v35 = 0;
    v36 = 1;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_23AABE428(uint64_t a1, void (*a2)(__int128 *), char *a3)
{
  void *v6;
  uint64_t Strong;
  uint64_t v8;
  id v9;
  id v10;
  void *v11[4];
  char v12;
  _BYTE v13[40];
  void *v14;
  _BYTE v15[40];

  sub_23AA724E8(a1, (uint64_t)&v14, &qword_2542DE8A0);
  v6 = v14;
  sub_23AA724E8(a1, (uint64_t)v13, &qword_2542DE8A0);
  sub_23AA724E8(a1, (uint64_t)v15, &qword_2542DE8A0);
  if ((v15[32] & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2((__int128 *)v13);
    goto LABEL_5;
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    swift_retain();
    sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB5450);
    sub_23B0B3BE0(v6, 0, v8, a2, a3);
    swift_release();
    swift_release();
LABEL_5:
    sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
    return;
  }
  v9 = v6;
  v10 = (id)FPDomainUnavailableError();
  if (v10)
  {
    v11[0] = v10;
    v12 = 1;
    a2((__int128 *)v11);
    sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
    sub_23AAB54B4(v11[0], (uint64_t)v11[1], (uint64_t)v11[2], (uint64_t)v11[3], v12);
  }
  else
  {
    __break(1u);
  }
}

void sub_23AABE598(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(__int128 *);
  char *v3;
  _BYTE v4[40];

  v2 = *(void (**)(__int128 *))(v1 + 16);
  v3 = *(char **)(v1 + 24);
  sub_23AA724E8(a1, (uint64_t)v4, &qword_2542DE8A0);
  sub_23AABE428((uint64_t)v4, v2, v3);
}

void sub_23AABE5EC(void *a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(__int128 *), char *a6)
{
  uint64_t Strong;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  id v18;
  _QWORD v19[3];
  char v20;
  _QWORD v21[3];
  char v22;

  v21[0] = a1;
  v21[1] = a2;
  v21[2] = a3;
  v22 = a4 & 1;
  if ((a4 & 1) == 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    a5((__int128 *)v21);
    sub_23AAB555C(a1, a2, a3, 0);
    return;
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v12 = Strong;
    swift_retain();
    sub_23AAB5520(a1, a2, a3, 1);
    sub_23B0B2374(a1, 0, v12, a5, a6);
    swift_release();
    swift_release();
    v13 = a1;
    v14 = a2;
    v15 = a3;
    v16 = 1;
LABEL_7:
    sub_23AAB555C(v13, v14, v15, v16);
    return;
  }
  v17 = a1;
  v18 = (id)FPDomainUnavailableError();
  if (v18)
  {
    v19[0] = v18;
    v20 = 1;
    a5((__int128 *)v19);
    sub_23AAB555C(a1, a2, a3, 1);
    v13 = (void *)v19[0];
    v14 = v19[1];
    v15 = v19[2];
    v16 = v20;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_23AABE758(uint64_t a1)
{
  uint64_t v1;

  sub_23AABE5EC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(void (**)(__int128 *))(v1 + 16), *(char **)(v1 + 24));
}

void sub_23AABE774(void *a1, __int16 a2, void (*a3)(void **), char *a4)
{
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  __int16 v16;

  v15 = a1;
  v16 = a2 & 0x1FF;
  if ((a2 & 0x100) == 0)
  {
    v10 = a1;
    a3(&v15);
    sub_23AAB52FC(a1);
    return;
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    sub_23AAB52F0(a1);
    swift_retain();
    sub_23B0B8324(a1, 0, v8, (unint64_t)a3, a4);
    swift_release();
    swift_release();
    v9 = a1;
LABEL_7:
    sub_23AAB52FC(v9);
    return;
  }
  v11 = a1;
  v12 = (id)FPDomainUnavailableError();
  if (v12)
  {
    v13 = v12;
    v14 = 1;
    a3(&v13);
    sub_23AAB52FC(a1);
    v9 = v13;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_23AABE8C0(uint64_t a1)
{
  uint64_t v1;

  sub_23AABE774(*(void **)a1, *(unsigned __int8 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 9) << 8), *(void (**)(void **))(v1 + 16), *(char **)(v1 + 24));
}

void sub_23AABE8E8(void *a1, char a2, void (*a3)(void **), char *a4)
{
  uint64_t Strong;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  char v16;

  v15 = a1;
  v16 = a2 & 1;
  if ((a2 & 1) == 0)
  {
    v10 = a1;
    a3(&v15);
    sub_23AAB538C(a1);
    return;
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    sub_23AAB5380(a1);
    swift_retain();
    sub_23B0B6BB8(a1, 0, v8, (unint64_t)a3, a4);
    swift_release();
    swift_release();
    v9 = a1;
LABEL_7:
    sub_23AAB538C(v9);
    return;
  }
  v11 = a1;
  v12 = (id)FPDomainUnavailableError();
  if (v12)
  {
    v13 = v12;
    v14 = 1;
    a3(&v13);
    sub_23AAB538C(a1);
    v9 = v13;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_23AABEA0C(uint64_t a1)
{
  uint64_t v1;

  sub_23AABE8E8(*(void **)a1, *(_BYTE *)(a1 + 8), *(void (**)(void **))(v1 + 16), *(char **)(v1 + 24));
}

void sub_23AABEA24(uint64_t a1, void *a2, void (*a3)(uint64_t *, id), uint64_t a4, uint64_t a5)
{
  sub_23AABEA74(a1, a2, a3, a4, a5, (uint64_t)&unk_250BE7E50, (uint64_t *)&unk_2569E2810, (void (*)(uint64_t))MEMORY[0x24BEE4F80], (void (*)(id))sub_23AC04D60);
}

void sub_23AABEA64(uint64_t *a1, void *a2)
{
  uint64_t v2;

  sub_23AABEA24(*a1, a2, *(void (**)(uint64_t *, id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_23AABEA74(uint64_t a1, void *a2, void (*a3)(uint64_t *, id), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, void (*a8)(uint64_t), void (*a9)(id))
{
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  if (a2)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v19 = a1;
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = a3;
      *(_QWORD *)(v15 + 24) = a4;
      sub_23AA724E8((uint64_t)&v19, v15 + 32, a7);
      v16 = a2;
      a8(a1);
      swift_retain();
      sub_23AC00D60(a2, 0, a9, (char *)v15);
      swift_release();

      swift_release();
    }
    else
    {
      v17 = a2;
      v18 = (id)FPDomainUnavailableError();
      a3(&v20, v18);

    }
  }
  else
  {
    ((void (*)(uint64_t *))a3)(&v20);
  }
}

uint64_t sub_23AABEBB8@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;

  v10 = sub_23AA7C074(a3, *(_QWORD *)(a4 + 8));
  sub_23AAB326C(v10, a1, a2, a3, a4, a5);
  return swift_bridgeObjectRelease();
}

id sub_23AABEC3C@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  v1 = (void *)*MEMORY[0x24BDC8228];
  *a1 = *MEMORY[0x24BDC8228];
  return v1;
}

uint64_t sub_23AABEC50(uint64_t a1)
{
  uint64_t v1;

  return sub_23AA6BB94(a1, *(unsigned __int8 *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void (**)(_QWORD))(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_23AABEC68(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23AAB5BF8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23AAA15AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23AAA15AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

void sub_23AABED38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __asm { BR              X11 }
}

uint64_t sub_23AABED68(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = BYTE6(a7);
  if (!BYTE6(a7))
    return 0;
  if ((a5 & 1) != 0)
  {
LABEL_11:
    if (v7)
    {
      if (v7 == 1)
        v8 = (int)a6;
      else
        v8 = *(_QWORD *)(a6 + 16);
    }
    else
    {
      v8 = 0;
    }
    if ((unint64_t)(a2 - 0x1000000000000000) >> 61 == 7)
    {
      if (v9 >= 8 * a2)
        v9 = 8 * a2;
      v10 = v8 + v9;
      if (!__OFADD__(v8, v9))
      {
        if (v10 >= v8)
          goto LABEL_21;
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  if (v8 == a4)
    return 0;
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
    goto LABEL_30;
  v9 = a4 - v8;
  if (__OFSUB__(a4, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v7 = 8 * a2;
  if (v9 >= 8 * a2)
    v9 = 8 * a2;
  v10 = v8 + v9;
  if (__OFADD__(v8, v9))
    goto LABEL_32;
  if (v10 < v8)
  {
    __break(1u);
    goto LABEL_11;
  }
LABEL_21:
  if (v8 == v10)
    return 0;
  if (result)
  {
    result = sub_23B1C5A98();
    v11 = v10 - v8;
    if (!__OFSUB__(v10, v8))
      return v11;
    goto LABEL_29;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23AABEE98(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_23AABEF58(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 1) & 1;
}

void sub_23AABF768(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 + 208), 8);
  _Block_object_dispose((const void *)(v1 + 256), 8);
  _Block_object_dispose((const void *)(v1 + 304), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_23AABFB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Block_object_dispose((const void *)(v27 - 112), 8);
  _Block_object_dispose((const void *)(v27 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_23AAC0614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23AAC06FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

uint64_t getFPDDomainFPFSBackendClass()
{
  return objc_opt_class();
}

uint64_t getFPFSSQLBackupManagerClass()
{
  return objc_opt_class();
}

uint64_t getFPFSSQLRestoreManagerClass()
{
  return objc_opt_class();
}

uint64_t getFPCKTaskClass()
{
  return objc_opt_class();
}

uint64_t getFPDPurgerClass()
{
  return objc_opt_class();
}

fp_task_tracker *fp_task_tracker_create(const char *a1)
{
  fp_task_tracker *v2;
  const char *v3;
  dispatch_group_t v4;
  OS_dispatch_group *group;

  v2 = objc_alloc_init(fp_task_tracker);
  if (a1)
    v3 = a1;
  else
    v3 = "unlabeled";
  v2->label = strdup(v3);
  v4 = dispatch_group_create();
  group = v2->group;
  v2->group = (OS_dispatch_group *)v4;

  return v2;
}

uint64_t __fp_task_tracker_async_and_qos_block_invoke(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void fp_task_tracker_async(void *a1, void *a2, void *a3, void *a4)
{
  fp_task_tracker_async_and_qos(a1, a2, DISPATCH_BLOCK_INHERIT_QOS_CLASS, QOS_CLASS_UNSPECIFIED, a3, a4);
}

void fp_task_tracker_cancel(void *a1)
{
  unsigned __int8 *v1;

  v1 = a1;
  if (!v1)
    fp_task_tracker_cancel_cold_1();
  atomic_store(1u, v1 + 24);

}

intptr_t fp_task_tracker_wait_timeout(uint64_t a1, dispatch_time_t a2)
{
  return dispatch_group_wait(*(dispatch_group_t *)(a1 + 16), a2);
}

intptr_t fp_task_tracker_wait(uint64_t a1)
{
  return dispatch_group_wait(*(dispatch_group_t *)(a1 + 16), 0xFFFFFFFFFFFFFFFFLL);
}

void fp_task_tracker_sync(void *a1, void *a2, void *a3)
{
  void (**v5)(void);
  void (**v6)(void);
  void (**v7)(void);
  unsigned __int8 v8;
  void (**v9)(void);
  id v10;

  v10 = a1;
  v5 = a2;
  v6 = a3;
  if (!v10)
    fp_task_tracker_sync_cold_1();
  v7 = v6;
  dispatch_group_enter(*((dispatch_group_t *)v10 + 2));
  v8 = atomic_load((unsigned __int8 *)v10 + 24);
  if ((v8 & 1) != 0)
    v9 = v7;
  else
    v9 = v5;
  v9[2]();
  dispatch_group_leave(*((dispatch_group_t *)v10 + 2));

}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

char *fpfs_fsevent_stream_open(const char *a1, uint64_t a2, uint64_t a3, const __CFArray *a4, FSEventStreamEventId a5, FSEventStreamCreateFlags a6, void *a7, void *a8, CFTimeInterval a9)
{
  NSObject *v17;
  id v18;
  char *v19;
  char *v20;
  NSObject *v21;
  __FSEventStream *v22;
  FSEventStreamContext context;

  v17 = a7;
  v18 = a8;
  v19 = (char *)malloc_type_calloc(1uLL, 0x78uLL, 0x10A00402B02E0F8uLL);
  v20 = v19;
  if (v19)
  {
    snprintf(v19, 0x41uLL, "%s", a1);
    *((_QWORD *)v20 + 10) = a2;
    *((_QWORD *)v20 + 11) = a3;
    objc_storeStrong((id *)v20 + 12, a8);
    *((_DWORD *)v20 + 28) = 0;
    fp_current_or_default_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
      fpfs_fsevent_stream_open_cold_1();

    context.version = 0;
    memset(&context.retain, 0, 24);
    context.info = v20;
    v22 = FSEventStreamCreate(0, (FSEventStreamCallback)_internalFSEventStreamCallback, &context, a4, a5, a9, a6);
    *((_QWORD *)v20 + 9) = v22;
    FSEventStreamSetDispatchQueue(v22, v17);
  }

  return v20;
}

uint64_t _internalFSEventStreamCallback(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  os_unfair_lock_s *v12;
  _xpc_activity_s *v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;

  if (a2)
  {
    v11 = result;
    v12 = (os_unfair_lock_s *)(a2 + 112);
    os_unfair_lock_lock((os_unfair_lock_t)(a2 + 112));
    v13 = *(_xpc_activity_s **)(a2 + 104);
    if (v13 && xpc_activity_should_defer(v13))
    {
      fp_current_or_default_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        _internalFSEventStreamCallback_cold_2();

      FSEventStreamStop(*(FSEventStreamRef *)(a2 + 72));
      if (!xpc_activity_set_state(*(xpc_activity_t *)(a2 + 104), 3))
      {
        fp_current_or_default_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          _internalFSEventStreamCallback_cold_1();

      }
      v16 = *(void **)(a2 + 104);
      *(_QWORD *)(a2 + 104) = 0;

    }
    os_unfair_lock_unlock(v12);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 80))(v11, *(_QWORD *)(a2 + 88), a3, a4, a5, a6);
  }
  return result;
}

uint64_t fpfs_fsevent_stream_get_wrapped(uint64_t result)
{
  if (result)
    return *(_QWORD *)(result + 72);
  return result;
}

void fpfs_fsevent_stream_flush(uint64_t a1)
{
  if (a1)
    FSEventStreamFlushSync(*(FSEventStreamRef *)(a1 + 72));
}

void fpfs_fsevent_stream_suspend(uint64_t a1)
{
  NSObject *v2;

  if (a1)
  {
    fp_current_or_default_log();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
      fpfs_fsevent_stream_suspend_cold_1();

    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
    FSEventStreamStop(*(FSEventStreamRef *)(a1 + 72));
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  }
}

void fpfs_fsevent_stream_resume(uint64_t a1)
{
  os_unfair_lock_s *v2;
  NSObject *v3;
  void *v4;
  _QWORD handler[5];

  if (a1)
  {
    v2 = (os_unfair_lock_s *)(a1 + 112);
    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
    if (*(_QWORD *)(a1 + 104) || !*(_QWORD *)(a1 + 96))
    {
      fp_current_or_default_log();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
        fpfs_fsevent_stream_resume_cold_1();

      FSEventStreamStart(*(FSEventStreamRef *)(a1 + 72));
      os_unfair_lock_unlock(v2);
    }
    else
    {
      os_unfair_lock_unlock(v2);
      v4 = *(void **)(a1 + 96);
      handler[0] = MEMORY[0x24BDAC760];
      handler[1] = 3221225472;
      handler[2] = __fpfs_fsevent_stream_resume_block_invoke;
      handler[3] = &__block_descriptor_40_e33_v16__0__NSObject_OS_xpc_object__8l;
      handler[4] = a1;
      xpc_activity_register((const char *)a1, v4, handler);
    }
  }
}

void __fpfs_fsevent_stream_resume_block_invoke(uint64_t a1, void *a2)
{
  _xpc_activity_s *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2;
  if (xpc_activity_get_state(v4) == 2)
  {
    if (!xpc_activity_set_state(v4, 4))
      abort();
    fp_current_or_default_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      __fpfs_fsevent_stream_resume_block_invoke_cold_1(a1, v5, v6, v7, v8, v9, v10, v11);

    os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 112));
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 104), a2);
    FSEventStreamStart(*(FSEventStreamRef *)(*(_QWORD *)(a1 + 32) + 72));
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 112));
  }

}

void fpfs_fsevent_stream_close(uint64_t a1)
{
  os_unfair_lock_s *v2;
  _xpc_activity_s *v3;
  NSObject *v4;
  NSObject *v5;
  void *v6;
  __FSEventStream *v7;
  void *v8;

  if (a1)
  {
    v2 = (os_unfair_lock_s *)(a1 + 112);
    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
    v3 = *(_xpc_activity_s **)(a1 + 104);
    if (v3)
    {
      if (!xpc_activity_set_state(v3, 5))
      {
        fp_current_or_default_log();
        v4 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
          fpfs_fsevent_stream_close_cold_2();

      }
      fp_current_or_default_log();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
        fpfs_fsevent_stream_close_cold_1();

      v6 = *(void **)(a1 + 104);
      *(_QWORD *)(a1 + 104) = 0;

    }
    v7 = *(__FSEventStream **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = 0;
    FSEventStreamStop(v7);
    os_unfair_lock_unlock(v2);
    xpc_activity_unregister((const char *)a1);
    FSEventStreamInvalidate(v7);
    FSEventStreamRelease(v7);
    v8 = *(void **)(a1 + 96);
    *(_QWORD *)(a1 + 96) = 0;

    free((void *)a1);
  }
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id FPDFPCKServiceXPCInterface()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;

  objc_msgSend(MEMORY[0x24BDD1990], "interfaceWithProtocol:", &unk_256A1B360);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = (void *)MEMORY[0x24BDBCF20];
  v2 = objc_opt_class();
  v3 = objc_opt_class();
  v4 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v2, v3, v4, objc_opt_class(), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v5, sel_prepareFPCKForDomain_domainUserInfo_domainRootURL_databaseBackupPath_accessingPaths_urls_volumeRole_options_reason_fpfs_iCDPackageDetection_completionHandler_, 1, 0);

  v6 = (void *)MEMORY[0x24BDBCF20];
  v7 = objc_opt_class();
  objc_msgSend(v6, "setWithObjects:", v7, objc_opt_class(), 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v8, sel_prepareFPCKForDomain_domainUserInfo_domainRootURL_databaseBackupPath_accessingPaths_urls_volumeRole_options_reason_fpfs_iCDPackageDetection_completionHandler_, 4, 0);

  v9 = (void *)MEMORY[0x24BDBCF20];
  v10 = objc_opt_class();
  objc_msgSend(v9, "setWithObjects:", v10, objc_opt_class(), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v11, sel_prepareFPCKForDomain_domainUserInfo_domainRootURL_databaseBackupPath_accessingPaths_urls_volumeRole_options_reason_fpfs_iCDPackageDetection_completionHandler_, 5, 0);

  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", objc_msgSend(MEMORY[0x24BDD1990], "interfaceWithProtocol:", &unk_256A112A0), sel_runFPCKWithPauseHandler_completionHandler_, 0, 0);
  return v0;
}

uint64_t FPDFPCKPauseCheckingXPCInterface()
{
  return objc_msgSend(MEMORY[0x24BDD1990], "interfaceWithProtocol:", &unk_256A112A0);
}

char *wharf_step_file_system_representation(unsigned int a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_250BDC120[a1];
}

uint64_t fpfs_wharf_open(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  const char *v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  int v13;
  stat v15;
  stat v16;

  v5 = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 12) = -1;
  if (asprintf((char **)a1, "%s/wharf", a2) < 0 || mkdir(*(const char **)a1, 0x1EDu) < 0 && *__error() != 17)
    return v5;
  v6 = open(*(const char **)a1, 33028);
  *(_DWORD *)(a1 + 12) = v6;
  if (v6 < 0)
    goto LABEL_31;
  memset(&v15, 0, sizeof(v15));
  if (fstat(v6, &v15) < 0)
    goto LABEL_30;
  v7 = 0;
  *(_DWORD *)(a1 + 8) = v15.st_dev;
  while (1)
  {
    if (!(_DWORD)v7)
    {
      v8 = "ingest";
      goto LABEL_18;
    }
    if ((_DWORD)v7 != 1)
      break;
    v16.st_dev = 0;
    if (fpfs_num_entries_at())
      v9 = 1;
    else
      v9 = v16.st_dev == 0;
    if (!v9)
      fpfs_wharf_delete_item_at(a1, *(_DWORD *)(a1 + 12), "propagate");
    v8 = "propagate";
LABEL_18:
    if (mkdirat(*(_DWORD *)(a1 + 12), v8, 0x1EDu) < 0 && *__error() != 17)
      goto LABEL_30;
    v10 = openat(*(_DWORD *)(a1 + 12), v8, 33028);
    if (v10 < 0)
      goto LABEL_30;
    v11 = v10;
    if (*(_DWORD *)(a1 + 16))
      fcntl(v10, 64, *(unsigned int *)(a1 + 16));
    memset(&v16, 0, sizeof(v16));
    if (fstat(v11, &v16) < 0)
    {
      v12 = *__error();
      close(v11);
LABEL_29:
      *__error() = v12;
      goto LABEL_30;
    }
    close(v11);
    if (*(_DWORD *)(a1 + 8) != v16.st_dev)
    {
      v12 = 18;
      goto LABEL_29;
    }
    *(_QWORD *)(a1 + 8 * v7++ + 24) = v16.st_ino;
    if (v7 == 3)
    {
      v5 = 0;
      *(_QWORD *)(a1 + 48) = strdup(a3);
      return v5;
    }
  }
  if ((_DWORD)v7 == 2)
  {
    v8 = "delete";
    goto LABEL_18;
  }
  *__error() = 22;
LABEL_30:
  v13 = *__error();
  close(*(_DWORD *)(a1 + 12));
  *(_DWORD *)(a1 + 12) = -1;
  *__error() = v13;
LABEL_31:
  free(*(void **)a1);
  *(_QWORD *)a1 = 0;
  return 0xFFFFFFFFLL;
}

void fpfs_wharf_close(uint64_t a1)
{
  close(*(_DWORD *)(a1 + 12));
  *(_DWORD *)(a1 + 12) = -1;
  free(*(void **)a1);
  free(*(void **)(a1 + 48));
  *(_QWORD *)a1 = 0;
}

uint64_t fpfs_wharf_load_by_id()
{
  return fpfs_openbyid_ext();
}

uint64_t __fpfs_wharf_load_by_id_block_invoke(uint64_t a1, int a2)
{
  int v3;
  uint64_t v4;
  BOOL v5;
  char v6;
  int v7;
  int v8;
  NSObject *v9;
  int *v10;
  int v11;
  int v12;
  stat v14;
  char __str[16];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[31];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 40);
  memset(&v14, 0, sizeof(v14));
  if (fstat(a2, &v14) < 0)
    return 0xFFFFFFFFLL;
  if (v3)
    v5 = 0;
  else
    v5 = (v14.st_mode & 0xF000) == 0x8000;
  v6 = !v5;
  if (v5 && flock(a2, 5) < 0)
  {
    if (*__error() != 35)
      return 0xFFFFFFFFLL;
    v10 = __error();
    v11 = 77;
LABEL_29:
    *v10 = v11;
    return 0xFFFFFFFFLL;
  }
  v28 = 0u;
  memset(v29, 0, sizeof(v29));
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  *(_OWORD *)__str = 0u;
  snprintf(__str, 0xFFuLL, "%s/%llu", "ingest", v14.st_ino);
  fpfs_wharf_delete_item_at(v4, *(_DWORD *)(v4 + 12), __str);
  if ((v14.st_mode & 0xF000) == 0x4000)
  {
    if ((fpfs_fchdir() & 0x80000000) == 0)
      goto LABEL_13;
  }
  else if ((fclonefileat(a2, *(_DWORD *)(v4 + 12), __str, 0) & 0x80000000) == 0)
  {
LABEL_13:
    if (((v6 & 1) != 0 || (flock(a2, 8) & 0x80000000) == 0) && (fpfs_is_dataless_fault_at() & 0x80000000) == 0)
      *__error() = 79;
    v12 = *__error();
    fpfs_wharf_delete_item_at(v4, *(_DWORD *)(v4 + 12), __str);
    fpfs_wharf_delete_item_at(v4, *(_DWORD *)(v4 + 12), 0);
    *__error() = v12;
    free(0);
    return 0xFFFFFFFFLL;
  }
  v7 = *__error();
  if ((v6 & 1) == 0)
    flock(a2, 8);
  *__error() = v7;
  v8 = *__error();
  v9 = fpfs_current_or_default_log();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    __fpfs_wharf_load_by_id_block_invoke_cold_1();
  *__error() = v8;
  if ((*__error() == 45 || *__error() == 9) && (v14.st_flags & 0x20) != 0)
  {
    v10 = __error();
    v11 = 96;
    goto LABEL_29;
  }
  return 0xFFFFFFFFLL;
}

uint64_t __fpfs_wharf_load_by_id_block_invoke_2()
{
  return fpfs_fgethandle();
}

uint64_t __fpfs_wharf_load_by_id_block_invoke_3(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _QWORD))(a1[4] + 16))(a1[4], a1[5], a2, a1[6]);
}

uint64_t fpfs_wharf_create(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t result;
  int v16;
  int v17;
  stat v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  _OWORD *v37;
  const char *v38;
  _OWORD __str[16];
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v5 = a3[11];
  v6 = a3[12];
  v7 = a3[9];
  v29 = a3[10];
  v30 = v5;
  v8 = a3[13];
  v31 = v6;
  v32 = v8;
  v9 = a3[7];
  v10 = a3[8];
  v11 = a3[5];
  v25 = a3[6];
  v26 = v9;
  v27 = v10;
  v28 = v7;
  v12 = a3[3];
  v13 = a3[4];
  v14 = a3[1];
  v21 = a3[2];
  v22 = v12;
  v23 = v13;
  v24 = v11;
  v19 = *a3;
  v20 = v14;
  WORD4(v19) = 511;
  DWORD1(v19) &= ~0x100u;
  if ((*((_BYTE *)a3 + 4) & 1) != 0)
  {
    if ((fpfs_create_dataless_fault_at() & 0x80000000) == 0 || *__error() == 17)
      return fpfs_openat();
    return 0xFFFFFFFFLL;
  }
  if (*(_DWORD *)a3 == 2)
    return fpfs_openat();
  memset(__str, 0, 255);
  snprintf((char *)__str, 0xFFuLL, "%s/%llu", "ingest", a2);
  memset(&v18, 0, sizeof(v18));
  if (fstatat(*(_DWORD *)(a1 + 12), (const char *)__str, &v18, 32) < 0)
    return 0xFFFFFFFFLL;
  fpfs_wharf_delete_item_at(a1, *(_DWORD *)(a1 + 12), "propagate/doc");
  v16 = v18.st_mode & 0xF000;
  if (*(_DWORD *)a3 != 4)
  {
    if (v16 == 40960)
    {
      v17 = 79;
      goto LABEL_14;
    }
LABEL_15:
    if (v16 == 0x4000)
    {
      v33 = MEMORY[0x24BDAC760];
      v34 = 0x40000000;
      v35 = __fpfs_wharf_copyfileat_block_invoke;
      v36 = &__block_descriptor_tmp_32;
      v37 = __str;
      v38 = "propagate/doc";
      if ((fpfs_fchdir() & 0x80000000) == 0)
        return fpfs_openat();
    }
    else if ((clonefileat(*(_DWORD *)(a1 + 12), (const char *)__str, *(_DWORD *)(a1 + 12), "propagate/doc", 1u) & 0x80000000) == 0)
    {
      return fpfs_openat();
    }
    return 0xFFFFFFFFLL;
  }
  if (v16 == 40960)
    goto LABEL_15;
  if (*((uint64_t *)a3 + 2) > 1024)
  {
    v17 = 63;
LABEL_14:
    *__error() = v17;
    return 0xFFFFFFFFLL;
  }
  result = fpfs_openat();
  if ((result & 0x80000000) == 0)
    return fpfs_openat();
  return result;
}

uint64_t fpfs_wharf_delete_item_at(uint64_t a1, int a2, const char *a3)
{
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char __s[16];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unsigned __int8 v26[31];
  unsigned __int8 uu[8];
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)uu = 0;
  v28 = 0;
  MEMORY[0x23B8616A8](uu);
  v24 = xmmword_23B1CA6A8;
  v25 = unk_23B1CA6B8;
  memset(v26, 0, sizeof(v26));
  v20 = xmmword_23B1CA668;
  v21 = unk_23B1CA678;
  v22 = xmmword_23B1CA688;
  v23 = unk_23B1CA698;
  v16 = xmmword_23B1CA628;
  v17 = unk_23B1CA638;
  v18 = xmmword_23B1CA648;
  v19 = unk_23B1CA658;
  *(_OWORD *)__s = *(_OWORD *)"delete/";
  v13 = unk_23B1CA5F8;
  v14 = xmmword_23B1CA608;
  v15 = unk_23B1CA618;
  v6 = strlen(__s);
  uuid_unparse(uu, &__s[v6]);
  v7 = renameatx_np(a2, a3, *(_DWORD *)(a1 + 12), __s, 0);
  if ((v7 & 0x80000000) != 0 && *__error() == 63)
  {
    if (fpfs_supports_long_paths())
    {
      v8 = fpfs_openat_longparent();
      v7 = v8;
      if ((v8 & 0x80000000) == 0)
      {
        v9 = renameatx_np(v8, 0, *(_DWORD *)(a1 + 12), __s, 0);
        v10 = *__error();
        close(v7);
        *__error() = v10;
        return v9;
      }
    }
  }
  return v7;
}

uint64_t __fpfs_wharf_create_block_invoke(uint64_t a1, int a2)
{
  ssize_t v4;
  char v6[1025];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  bzero(v6, 0x401uLL);
  *__error() = 0;
  v4 = read(a2, v6, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16));
  if (v4 == *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v6[v4] = 0;
    return symlinkat(v6, *(_DWORD *)(*(_QWORD *)(a1 + 40) + 12), *(const char **)(a1 + 48));
  }
  else
  {
    if (!*__error())
      *__error() = 22;
    return 0xFFFFFFFFLL;
  }
}

uint64_t __fpfs_wharf_create_block_invoke_2(uint64_t a1, int a2)
{
  int v3;
  int should_be_tracked;
  stat v6;
  char __str[16];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[31];
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v20 = 0u;
  memset(v21, 0, sizeof(v21));
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  *(_OWORD *)__str = 0u;
  memset(&v6, 0, sizeof(v6));
  if (fstat(a2, &v6) < 0)
    return 0xFFFFFFFFLL;
  snprintf(__str, 0xFFuLL, "%s/%llu", "propagate", v6.st_ino);
  if (renameatx_np(*(_DWORD *)(*(_QWORD *)(a1 + 40) + 12), *(const char **)(a1 + 48), *(_DWORD *)(*(_QWORD *)(a1 + 40) + 12), __str, 0) < 0)return 0xFFFFFFFFLL;
  if (**(_DWORD **)(a1 + 56) == 2
    && ((fpfs_filename_contains_ext() & 1) != 0 || fpfs_path_is_safe_save_temp_filename())
    && (fpfs_pkg_demote() & 0x80000000) != 0)
  {
    return 0xFFFFFFFFLL;
  }
  LOBYTE(v6.st_dev) = *(_BYTE *)(a1 + 72);
  v3 = **(_DWORD **)(a1 + 56);
  if (!LOBYTE(v6.st_dev))
  {
    if (v3 == 3)
      fpfs_pkg_enable_dirstat();
    return fpfs_fgethandle();
  }
  if (v3 == 3)
  {
    LOBYTE(v6.st_dev) = 1;
  }
  else
  {
    should_be_tracked = fpfs_should_be_tracked();
    if (should_be_tracked < 0)
      return 0xFFFFFFFFLL;
    if (!LOBYTE(v6.st_dev))
      return fpfs_fgethandle();
  }
  if ((fpfs_track_document() & 0x80000000) == 0)
    return fpfs_fgethandle();
  return 0xFFFFFFFFLL;
}

uint64_t __fpfs_wharf_create_block_invoke_3(uint64_t a1, uint64_t a2)
{
  stat v5;

  if (!*(_BYTE *)(a1 + 44) && *(_DWORD *)(a2 + 16))
  {
    fpfs_untrack_document();
    *(_DWORD *)(a2 + 16) = 0;
  }
  memset(&v5, 0, sizeof(v5));
  if (fstat(*(_DWORD *)(a1 + 40), &v5) < 0)
    return 0xFFFFFFFFLL;
  else
    return (*(uint64_t (**)(_QWORD, uint64_t, BOOL))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2, (v5.st_mode & 0xF000) == 0x4000);
}

uint64_t fpfs_wharf_resurrect(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v8;
  int v10;
  char v11[766];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v8 = malloc_type_calloc(0x306uLL, 1uLL, 0xFF573B51uLL);
  if (fgetxattr(a2, "com.apple.fileprovider.resurrection_info", v8, 0x306uLL, 0, 0) > 9)
  {
    *((_BYTE *)v8 + 773) = 0;
    if ((fpfs_unset_dataless_cmpfs_attrs() & 0x80000000) == 0)
    {
      bzero(v11, 0x2FEuLL);
      basename_r((const char *)v8 + 8, v11);
      if ((fpfs_openbyid() & 0x80000000) == 0)
      {
        free(v8);
        return 0;
      }
      if (a6)
      {
        v10 = fpfs_openbyid();
        free(v8);
        return (v10 >> 31);
      }
    }
  }
  else
  {
    *__error() = 22;
    *__error() = 93;
  }
  free(v8);
  return 0xFFFFFFFFLL;
}

uint64_t __fpfs_wharf_resurrect_block_invoke(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  stat v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 32);
  v14 = 0;
  v15 = &v14;
  v16 = 0x2000000000;
  v17 = 0;
  if ((fpfs_fget_parent_syncroot() & 0x80000000) != 0)
    goto LABEL_9;
  if (v15[3])
  {
    v5 = MEMORY[0x24BDAC760];
    while (!(*(unsigned int (**)(uint64_t))(v4 + 16))(v4))
    {
      v9 = v5;
      v10 = 0x40000000;
      v11 = __fpfs_wharf_parent_dir_in_domain_block_invoke;
      v12 = &unk_250BDC050;
      v13 = &v14;
      fpfs_openbyid();
      if (!v15[3])
        goto LABEL_6;
    }
    _Block_object_dispose(&v14, 8);
    return fpfs_wharf_resurrect_bounce(*(char **)(a1 + 48), *(char **)(a1 + 56), *(const char **)(a1 + 64), a2, *(_DWORD *)(a1 + 72));
  }
LABEL_6:
  memset(&v8, 0, sizeof(v8));
  if (fstat(a2, &v8) < 0)
  {
LABEL_9:
    _Block_object_dispose(&v14, 8);
    goto LABEL_10;
  }
  v6 = (*(uint64_t (**)(uint64_t, __darwin_ino64_t))(v4 + 16))(v4, v8.st_ino);
  _Block_object_dispose(&v14, 8);
  if ((v6 & 1) == 0)
  {
LABEL_10:
    *__error() = 22;
    return 0xFFFFFFFFLL;
  }
  return fpfs_wharf_resurrect_bounce(*(char **)(a1 + 48), *(char **)(a1 + 56), *(const char **)(a1 + 64), a2, *(_DWORD *)(a1 + 72));
}

uint64_t fpfs_wharf_resurrect_bounce(char *a1, char *a2, const char *a3, int a4, int a5)
{
  int v10;
  uint64_t v11;
  const char *v12;
  int v13;
  const char *v14;

  v10 = 2;
  while (renameatx_np(a5, a2, a4, a1, 4u))
  {
    if (*__error() != 17)
      return 0xFFFFFFFFLL;
    v11 = fpfs_extension_in_filename();
    if (v11)
    {
      v12 = (const char *)v11;
      v13 = v11 - (_DWORD)a3;
      v14 = ".";
    }
    else
    {
      v13 = strlen(a3);
      v12 = "";
      v14 = "";
    }
    if (snprintf(a1, 0x2FEuLL, "%*s %d%s%s", v13, a3, v10, v14, v12) >= 766)
      *__error() = 63;
    if (++v10 == 99)
    {
      *__error() = 22;
      return 0xFFFFFFFFLL;
    }
  }
  return fpfs_openat();
}

uint64_t __fpfs_wharf_resurrect_block_invoke_2(uint64_t a1, int a2)
{
  return fpfs_wharf_resurrect_bounce(*(char **)(a1 + 32), *(char **)(a1 + 40), *(const char **)(a1 + 48), a2, *(_DWORD *)(a1 + 56));
}

uint64_t fpfs_wharf_unload(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, int a10)
{
  int v14;
  int v15;
  int v16;
  int v17;
  char __str[16];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[31];
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v32 = 0u;
  memset(v33, 0, sizeof(v33));
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  *(_OWORD *)__str = 0u;
  snprintf(__str, 0xFFuLL, "%s/%llu", "propagate", *(_QWORD *)a4);
  if (a10 == 1)
  {
    if (*(_DWORD *)(a4 + 16))
      fpfs_wharf_unload_cold_1();
    if ((fpfs_openat() & 0x80000000) != 0)
      return 0xFFFFFFFFLL;
  }
  else if (!a10)
  {
    if ((fpfs_fset_metadata() & 0x80000000) != 0)
      return 0xFFFFFFFFLL;
    if (renameatx_np(*(_DWORD *)(a1 + 12), __str, -2, a2, 4u) < 0)
    {
      if (*__error() != 63)
        return 0xFFFFFFFFLL;
      if (!fpfs_supports_long_paths())
        return 0xFFFFFFFFLL;
      v14 = fpfs_openat_longparent();
      if (v14 < 0)
        return 0xFFFFFFFFLL;
      v15 = v14;
      v16 = renameatx_np(*(_DWORD *)(a1 + 12), __str, v14, 0, 4u);
      v17 = *__error();
      close(v15);
      *__error() = v17;
      if (v16 < 0)
        return 0xFFFFFFFFLL;
    }
  }
  fpfs_fgethandle();
  if ((a8 & 0x18000000) != 0 && (*(_WORD *)(a4 + 44) & 0x120) != 0)
    return fpfs_fset_metadata();
  else
    return 0;
}

uint64_t __fpfs_wharf_unload_block_invoke(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;

  v2 = *(_QWORD **)(a1 + 32);
  *v2 = *a2;
  v2[2] = a2[2];
  return 0;
}

uint64_t fpfs_wharf_delete_resurrectable_at()
{
  return fpfs_openat();
}

uint64_t __fpfs_wharf_delete_resurrectable_at_block_invoke()
{
  return fpfs_fgetfileattrs();
}

uint64_t __fpfs_wharf_delete_resurrectable_at_block_invoke_2(uint64_t a1, uint64_t a2)
{
  int v3;

  v3 = *(_DWORD *)(a2 + 40);
  if (v3 != 1)
  {
    if ((v3 & 0xFFFFFFFE) == 2)
      return fpfs_wharf_delete_item_at(*(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 80), *(const char **)(a1 + 48));
    return fpfs_lp_unlinkat();
  }
  if (*(_DWORD *)(a2 + 144) > 1u || (*(_BYTE *)(a2 + 44) & 0x40) != 0 || (fpfs_openat() & 0x80000000) != 0)
    return fpfs_lp_unlinkat();
  if (!fpfs_item_handle_gencmp())
    return fpfs_wharf_delete_item_at(*(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 80), *(const char **)(a1 + 48));
  if ((*(_BYTE *)(a2 + 45) & 0x80) != 0)
    return 0;
  else
    return fpfs_wharf_resurrect(*(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 84), *(unsigned int *)(a1 + 80), *(_QWORD *)(a1 + 48), a2, *(_QWORD *)(a1 + 72));
}

uint64_t fpfs_wharf_delete_wharfed_item(uint64_t a1, unsigned int a2, uint64_t a3)
{
  const char *v4;
  char __str[16];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[31];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  if (a2 > 2)
    v4 = 0;
  else
    v4 = off_250BDC120[a2];
  v19 = 0u;
  memset(v20, 0, sizeof(v20));
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  *(_OWORD *)__str = 0u;
  snprintf(__str, 0xFFuLL, "%s/%llu", v4, a3);
  return fpfs_wharf_delete_item_at(a1, *(_DWORD *)(a1 + 12), __str);
}

uint64_t fpfs_wharf_gc_deleted_items()
{
  return fpfs_opendirat();
}

uint64_t __fpfs_wharf_gc_deleted_items_block_invoke(int a1, int a2, uint64_t a3)
{
  stat v4;

  memset(&v4, 0, sizeof(v4));
  if ((fstatat(a2, (const char *)(a3 + 21), &v4, 32) & 0x80000000) == 0)
    fpfs_recursive_unlinkat();
  return 0;
}

uint64_t __fpfs_wharf_fload_block_invoke(uint64_t a1, int a2)
{
  int v3;
  NSObject *v4;
  stat v6;

  if (*(_DWORD *)(*(_QWORD *)(a1 + 40) + 16))
    fcntl(a2, 64, *(unsigned int *)(*(_QWORD *)(a1 + 40) + 16));
  memset(&v6, 0, sizeof(v6));
  if (fstat(a2, &v6) < 0)
    return 0xFFFFFFFFLL;
  v3 = v6.st_mode & 0xF000;
  if ((v3 == 0x8000 || v3 == 0x4000 && !fpfs_pkg_enable_dirstat())
    && (fpfs_set_purgeable_non_evictable() & 0x80000000) != 0)
  {
    v4 = fpfs_current_or_default_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      __fpfs_wharf_fload_block_invoke_cold_1();
  }
  return fpfs_fgethandle();
}

uint64_t __fpfs_wharf_fload_block_invoke_2(uint64_t a1)
{
  int v2;
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  stat v9;

  v2 = *(_DWORD *)(a1 + 328);
  if ((fpfs_fchflags() & 0x80000000) != 0)
  {
    v4 = fpfs_current_or_default_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      __fpfs_wharf_fload_block_invoke_2_cold_1();
  }
  else
  {
    memset(&v9, 0, sizeof(v9));
    if (fstat(v2, &v9) < 0)
    {
      v5 = fpfs_current_or_default_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        __fpfs_wharf_fload_block_invoke_2_cold_2();
    }
    else if ((v9.st_mode & 0x1FF | 0x180) != (v9.st_mode & 0x1FF) && fchmod(v2, v9.st_mode & 0x7F | 0x180) < 0)
    {
      v7 = fpfs_current_or_default_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        __fpfs_wharf_fload_block_invoke_2_cold_5();
    }
    else if ((fpfs_clear_acl() & 0x80000000) != 0)
    {
      v6 = fpfs_current_or_default_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        __fpfs_wharf_fload_block_invoke_2_cold_3();
    }
    else if ((fpfs_delete_xattrs() & 0x80000000) != 0)
    {
      v3 = fpfs_current_or_default_log();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        __fpfs_wharf_fload_block_invoke_2_cold_4();
    }
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __fpfs_wharf_fcopyfileat_block_invoke(uint64_t a1)
{
  uint64_t v2;
  _copyfile_state *v3;
  int v4;
  int src;
  char __str[1024];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  bzero(__str, 0x400uLL);
  if (snprintf(__str, 0x400uLL, "%s/%s", **(const char ***)(a1 + 32), *(const char **)(a1 + 40)) < 1024)
  {
    src = 0;
    v3 = copyfile_state_alloc();
    copyfile_state_set(v3, 6u, fpfs_wharf_fcopyfileat_status_cb);
    copyfile_state_set(v3, 7u, &src);
    v2 = copyfile(".", __str, v3, 0x10C8000u);
    copyfile_state_free(v3);
    if ((v2 & 0x80000000) != 0)
    {
      v4 = src;
      if (src)
        *__error() = v4;
    }
  }
  else
  {
    *__error() = 63;
    return 0xFFFFFFFFLL;
  }
  return v2;
}

uint64_t fpfs_wharf_fcopyfileat_status_cb(int a1, int a2, uint64_t a3, const char *a4, uint64_t a5, int *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int v12;
  int v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  stat v31;
  uint64_t v32;
  uint64_t v33;

  result = 0;
  if (a1 == 1 && a2 == 3)
  {
    v32 = v6;
    v33 = v7;
    v12 = *__error();
    memset(&v31, 0, sizeof(v31));
    if ((lstat(a4, &v31) & 0x80000000) == 0)
    {
      v13 = v31.st_mode & 0xF000;
      if (v13 != 0x4000)
      {
        if (v13 == 0x8000)
        {
          if ((v31.st_flags & 0x20) != 0 && v12 == 9)
          {
            v22 = fpfs_current_or_default_log();
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
              fpfs_wharf_fcopyfileat_status_cb_cold_2(v22, v23, v24, v25, v26, v27, v28, v29);
            return 1;
          }
        }
        else if (v13 != 40960)
        {
          v14 = fpfs_current_or_default_log();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
            fpfs_wharf_fcopyfileat_status_cb_cold_1(v14, v15, v16, v17, v18, v19, v20, v21);
          return 1;
        }
      }
    }
    v30 = fpfs_current_or_default_log();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      fpfs_wharf_fcopyfileat_status_cb_cold_3(v30);
    *a6 = *__error();
    return 2;
  }
  return result;
}

uint64_t __fpfs_wharf_copyfileat_block_invoke(uint64_t a1)
{
  _copyfile_state *v2;
  uint64_t v3;
  int v4;
  int src;

  src = 0;
  v2 = copyfile_state_alloc();
  copyfile_state_set(v2, 6u, fpfs_wharf_fcopyfileat_status_cb);
  copyfile_state_set(v2, 7u, &src);
  v3 = copyfile(*(const char **)(a1 + 32), *(const char **)(a1 + 40), v2, 0x10C8000u);
  copyfile_state_free(v2);
  if ((v3 & 0x80000000) != 0)
  {
    v4 = src;
    if (src)
      *__error() = v4;
  }
  return v3;
}

uint64_t __fpfs_wharf_parent_dir_in_domain_block_invoke()
{
  return fpfs_fget_parent_syncroot();
}

uint64_t __fpfs_wharf_resurrect_bounce_block_invoke()
{
  if ((fpfs_set_resurrected() & 0x80000000) != 0)
    return 0xFFFFFFFFLL;
  else
    return fpfs_make_fsevent();
}

uint64_t ___wharf_updateat_block_invoke(int a1, int a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  stat v8;

  memset(&v8, 0, sizeof(v8));
  if (fstat(a2, &v8) < 0)
    return 0xFFFFFFFFLL;
  v3 = v8.st_mode & 0xF000;
  if (v3 == 0x8000 && flock(a2, 6) < 0)
  {
    if (*__error() == 35)
      *__error() = 77;
    return 0xFFFFFFFFLL;
  }
  v4 = fpfs_fgethandle();
  v5 = v4;
  if (v3 == 0x8000)
  {
    if ((v4 & 0x80000000) != 0)
    {
      v7 = *__error();
      flock(a2, 8);
      *__error() = v7;
    }
    else if (flock(a2, 8) < 0)
    {
      return 0xFFFFFFFFLL;
    }
    else
    {
      return v5;
    }
  }
  return v5;
}

uint64_t ___wharf_updateat_block_invoke_2(uint64_t a1)
{
  if ((fpfs_transfer_xattrs() & 0x80000000) != 0
    || (fpfs_fset_metadata() & 0x80000000) != 0
    || renameatx_np(*(_DWORD *)(a1 + 104), *(const char **)(a1 + 64), -2, *(const char **)(a1 + 72), 2u) < 0)
  {
    return 0xFFFFFFFFLL;
  }
  fpfs_openat();
  return 0;
}

uint64_t __fpfs_wharf_item_preserve_at_block_invoke(uint64_t a1, int a2)
{
  uint64_t v2;
  const char *v3;
  const char *v4;
  size_t v5;
  size_t v6;
  char *v7;
  char *v8;
  stat v10;
  char v11[1024];
  char __s[766];
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 32);
  if ((*(_BYTE *)(v2 + 44) & 1) != 0)
    return ftruncate(a2, 0);
  v3 = *(const char **)(a1 + 40);
  bzero(__s, 0x2FEuLL);
  if (v3)
    v4 = v3;
  else
    v4 = (const char *)(v2 + 280);
  basename_r(v4, __s);
  v5 = strlen(__s);
  v6 = v5 + 1;
  v7 = (char *)malloc_type_calloc(v5 + 9, 1uLL, 0x3B38B3DFuLL);
  strlcpy(v7 + 8, __s, v6);
  memset(&v10, 0, sizeof(v10));
  bzero(v11, 0x400uLL);
  v8 = dirname_r(v4, v11);
  if (lstat(v8, &v10) < 0
    || (*(_QWORD *)v7 = v10.st_ino, (fpfs_set_dataless_cmpfs_attrs() & 0x80000000) != 0)
    || (fpfs_fsetxattr() & 0x80000000) != 0)
  {
    free(v7);
    return 0xFFFFFFFFLL;
  }
  else
  {
    free(v7);
    return 0;
  }
}

void OUTLINED_FUNCTION_0_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

int *OUTLINED_FUNCTION_3_0()
{
  return __error();
}

void OUTLINED_FUNCTION_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

dispatch_workloop_t FPCreateWorkloop(const char *a1)
{
  return dispatch_workloop_create(a1);
}

void sub_23AAC7C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23AAC7CC8(_Unwind_Exception *a1)
{
  __fp_pop_log();
  _Unwind_Resume(a1);
}

void sub_23AAC7E68(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23AAC8050(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23AAC810C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23AAC831C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23AAC83E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void fseventsCallback(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  int v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  FSChangeRecord *v22;
  _BYTE *v23;
  unsigned int v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  void *context;
  int v30;
  void *v31;
  void *v32;
  _BYTE *v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v11 = (void *)MEMORY[0x23B860C70]();
  if (a3)
  {
    context = v11;
    v33 = a2;
    fpfs_adopt_log();
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = a4;
    v31 = (void *)objc_opt_new();
    v32 = v12;
    if (v12 && objc_msgSend(v12, "count") == a3)
    {
      v13 = a3 - 1;
      if (a3 >= 1)
      {
        v30 = 0;
        while (1)
        {
          v14 = (void *)MEMORY[0x23B860C70]();
          if (!v33[81])
            break;
          fp_current_or_default_log();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 134217984;
            v36 = (void *)(v13 + 1);
            _os_log_debug_impl(&dword_23AA66000, v15, OS_LOG_TYPE_DEBUG, "[DEBUG] draining %zd fsevents", buf, 0xCu);
          }
          v16 = 1;
LABEL_21:

          objc_autoreleasePoolPop(v14);
          if (v16 != 7 && v16)
            goto LABEL_32;
          if ((unint64_t)--v13 >= 0xFFFFFFFFFFFFFFFELL)
            goto LABEL_31;
        }
        v17 = *(unsigned int *)(a5 + 4 * v13);
        objc_msgSend(v32, "objectAtIndexedSubscript:", v13);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "objectForKey:", CFSTR("path"));
        v15 = objc_claimAutoreleasedReturnValue();

        objc_msgSend(v32, "objectAtIndexedSubscript:", v13);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "objectForKey:", CFSTR("fileID"));
        v20 = (void *)objc_claimAutoreleasedReturnValue();

        if (v20)
          v21 = objc_msgSend(v20, "unsignedLongLongValue");
        else
          v21 = 0;
        v22 = -[FSChangeRecord initWithPath:fileID:flags:eventID:]([FSChangeRecord alloc], "initWithPath:fileID:flags:eventID:", v15, v21, v17, *(_QWORD *)(a6 + 8 * v13));
        v23 = v33;
        objc_sync_enter(v23);
        if (v33[85])
        {
          v24 = (-[FSChangeRecord flags](v22, "flags") >> 19) & 1;
          if ((v24 & v30) != 0)
          {
            objc_sync_exit(v23);

            v16 = 7;
            v30 = 1;
LABEL_20:

            goto LABEL_21;
          }
          v30 |= v24;
        }
        objc_sync_exit(v23);

        fp_current_or_default_log();
        v25 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134218498;
          v36 = (void *)(v13 + 1);
          v37 = 2048;
          v38 = a3;
          v39 = 2112;
          v40 = (uint64_t)v22;
          _os_log_debug_impl(&dword_23AA66000, v25, OS_LOG_TYPE_DEBUG, "[DEBUG] Enqueuing event: %zd/%zd %@", buf, 0x20u);
        }

        objc_msgSend(v31, "insertObject:atIndex:", v22, 0);
        v16 = 0;
        goto LABEL_20;
      }
      LOBYTE(v30) = 0;
LABEL_31:
      objc_msgSend(v33, "queueEvents:markSelfEncountered:", v31, v30 & 1);
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDD16A8], "string");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = 0;
      do
      {
        objc_msgSend(v26, "appendFormat:", CFSTR("<id:%llu,flg:0x%x> "), *(_QWORD *)(a6 + 8 * v27), *(unsigned int *)(a5 + 4 * v27));
        ++v27;
      }
      while (a3 != v27);
      fp_current_or_default_log();
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218754;
        v36 = v32;
        v37 = 2048;
        v38 = a3;
        v39 = 2048;
        v40 = objc_msgSend(v32, "count");
        v41 = 2112;
        v42 = v26;
        _os_log_error_impl(&dword_23AA66000, v28, OS_LOG_TYPE_ERROR, "[ERROR] Dropping FSEvent, eventPaths=%p with numEvents=%zd (eventInfo.count=%lu): %@", buf, 0x2Au);
      }

      objc_msgSend(v33, "resetWithReason:newFSEventID:", 7, -1);
    }
LABEL_32:

    __fp_pop_log();
    v11 = context;
  }
  objc_autoreleasePoolPop(v11);
}

void sub_23AAC8AEC(_Unwind_Exception *a1)
{
  __fp_pop_log();
  _Unwind_Resume(a1);
}

void sub_23AAC929C(_Unwind_Exception *a1)
{
  __fp_pop_log();
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void sub_23AAC96D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23AACA54C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23AACA690(_Unwind_Exception *a1)
{
  __fp_leave_section_Debug();
  _Unwind_Resume(a1);
}

void sub_23AACA848(_Unwind_Exception *a1)
{
  __fp_pop_log();
  _Unwind_Resume(a1);
}

void sub_23AACA94C(_Unwind_Exception *a1)
{
  __fp_leave_section_Debug();
  _Unwind_Resume(a1);
}

void sub_23AACABB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_23AACACA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void fpfs_generate_fsevent_at()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;

  objc_msgSend(MEMORY[0x24BDD1880], "UUID");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v0 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(v5, "UUIDString");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR(".notify.%@.nosync"), v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  v3 = objc_retainAutorelease(v2);
  objc_msgSend(v3, "fileSystemRepresentation");
  v6 = v3;
  v4 = v3;
  fpfs_openat();

}

uint64_t __fpfs_generate_fsevent_at_block_invoke(uint64_t a1)
{
  return unlinkat(*(_DWORD *)(a1 + 40), (const char *)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "fileSystemRepresentation"), 0);
}

NSObject *fpfs_set_unlock_timer_handler(int a1, void *a2, void *a3)
{
  NSObject *v5;
  void (**v6)(_QWORD);
  int v7;
  int v8;
  dispatch_source_t v9;
  uint64_t v10;
  NSObject *v11;
  dispatch_block_t v12;
  dispatch_time_t v13;
  _QWORD handler[4];
  int v16;
  _QWORD block[4];
  void (**v18)(_QWORD);
  int v19;

  v5 = a2;
  v6 = a3;
  v7 = dup(a1);
  if (v7 < 0)
  {
    v6[2](v6);
    v11 = 0;
  }
  else
  {
    v8 = v7;
    v9 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, v5);
    v10 = MEMORY[0x24BDAC760];
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __fpfs_set_unlock_timer_handler_block_invoke;
    block[3] = &unk_250BDC398;
    v19 = v8;
    v18 = v6;
    v11 = v9;
    v12 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_UTILITY, 0, block);
    dispatch_source_set_event_handler(v11, v12);

    handler[0] = v10;
    handler[1] = 3221225472;
    handler[2] = __fpfs_set_unlock_timer_handler_block_invoke_2;
    handler[3] = &__block_descriptor_36_e5_v8__0l;
    v16 = v8;
    dispatch_source_set_cancel_handler(v11, handler);
    v13 = dispatch_time(0, 60000000000);
    dispatch_source_set_timer(v11, v13, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
    dispatch_resume(v11);

  }
  return v11;
}

uint64_t __fpfs_set_unlock_timer_handler_block_invoke(uint64_t a1)
{
  uint64_t result;

  result = fpfs_file_is_flocked();
  if ((result & 1) == 0)
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return result;
}

uint64_t __fpfs_set_unlock_timer_handler_block_invoke_2(uint64_t a1)
{
  return close(*(_DWORD *)(a1 + 32));
}

NSObject *fpfs_set_unlock_handler(int a1, void *a2, void *a3)
{
  NSObject *v5;
  void (**v6)(_QWORD);
  unsigned int v7;
  unsigned int v8;
  NSObject *v9;
  uint64_t v10;
  void (**v11)(_QWORD);
  NSObject *v12;
  _QWORD v14[4];
  unsigned int v15;
  _QWORD handler[4];
  id v17;
  unsigned int v18;

  v5 = a2;
  v6 = a3;
  v7 = dup(a1);
  if ((v7 & 0x80000000) != 0)
  {
    v6[2](v6);
    v12 = 0;
  }
  else
  {
    v8 = v7;
    v9 = dispatch_source_create(MEMORY[0x24BDACA28], v7, 0x141uLL, v5);
    v10 = MEMORY[0x24BDAC760];
    handler[0] = MEMORY[0x24BDAC760];
    handler[1] = 3221225472;
    handler[2] = __fpfs_set_unlock_handler_block_invoke;
    handler[3] = &unk_250BDC398;
    v18 = v8;
    v11 = v6;
    v17 = v11;
    dispatch_source_set_event_handler(v9, handler);
    v14[0] = v10;
    v14[1] = 3221225472;
    v14[2] = __fpfs_set_unlock_handler_block_invoke_2;
    v14[3] = &__block_descriptor_36_e5_v8__0l;
    v15 = v8;
    dispatch_source_set_cancel_handler(v9, v14);
    dispatch_resume(v9);
    if ((fpfs_file_is_flocked() & 1) != 0)
    {
      v12 = v9;
    }
    else
    {
      dispatch_source_cancel(v9);
      v11[2](v11);
      v12 = 0;
    }

  }
  return v12;
}

uint64_t __fpfs_set_unlock_handler_block_invoke(uint64_t a1)
{
  uint64_t result;

  result = fpfs_file_is_flocked();
  if ((result & 1) == 0)
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return result;
}

uint64_t __fpfs_set_unlock_handler_block_invoke_2(uint64_t a1)
{
  return close(*(_DWORD *)(a1 + 32));
}

void OUTLINED_FUNCTION_1_2(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_4_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, a3, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_11(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xEu);
}

uint64_t checkFault(int fd, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  int v9;
  off_t v10;
  off_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  BOOL v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  double v22;
  double v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;

  v7 = *(_QWORD *)(a4 + 24);
  v8 = *(_DWORD *)(v7 + 116);
  v9 = v8 & 0x40000020;
  if ((v8 & 0x40000020) == 0x20)
  {
    *a3 |= 0x1000000uLL;
    goto LABEL_18;
  }
  if ((v8 & 0x40000000) != 0)
  {
    if ((*(_WORD *)(v7 + 4) & 0xF000) == 0x8000 && *(_QWORD *)(v7 + 104))
    {
      if (!fpfs_supports_partial_materialization())
      {
        v12 = 32;
        goto LABEL_11;
      }
      v10 = lseek(fd, 0, 4);
      v11 = lseek(fd, 0, 3);
      if (!v10 && v11 == *(_QWORD *)(v7 + 96))
      {
        v12 = 0x8000000000;
LABEL_11:
        *a3 |= v12;
      }
    }
    if ((*(_WORD *)(v7 + 4) & 0xF000) == 0x4000)
    {
      v28 = 0;
      v29 = &v28;
      v30 = 0x2020000000;
      v31 = 1;
      fpfs_fopendir();
      v13 = *((unsigned __int8 *)v29 + 24);
      _Block_object_dispose(&v28, 8);
      if (!v13)
        *a3 |= 0x40uLL;
    }
    if (*(_BYTE *)(a4 + 3))
      *a3 |= 0x80000000uLL;
    if ((fpck_validate_decmpfs_xattr(fd, a4, a3) & 0x80000000) != 0)
      return 0xFFFFFFFFLL;
  }
LABEL_18:
  v14 = *(_QWORD *)(a4 + 16);
  if ((*(_DWORD *)(v14 + 44) & 0x20) == 0)
  {
    v15 = 0;
    goto LABEL_42;
  }
  if (*(_DWORD *)(v14 + 40) == 3)
  {
    v16 = 0;
    if ((fpfs_eviction_urgency() & 0x80000000) != 0)
      return 0xFFFFFFFFLL;
  }
  else
  {
    v16 = (*(_DWORD *)(v14 + 44) & 0x20u) >> 5;
  }
  v28 = 0;
  if ((fpfs_get_purgeable_info() & 0x80000000) != 0)
    return 0xFFFFFFFFLL;
  if (v28 && v28 != *(_QWORD *)(*(_QWORD *)(a4 + 16) + 160))
    *a3 |= 0x40000000000000uLL;
  *a3 |= 0x20000000000uLL;
  if (*(_BYTE *)(a4 + 3))
    *a3 |= 0x100000000uLL;
  if (*(_BYTE *)(a4 + 4))
    *a3 |= 0x400000000uLL;
  v17 = *(_QWORD *)(a4 + 16);
  if ((*(_BYTE *)(v17 + 44) & 0x80) != 0 && *(_QWORD *)(v17 + 240) != 0x8000)
  {
    *a3 |= 0x80000000000000uLL;
    v17 = *(_QWORD *)(a4 + 16);
  }
  v18 = *(_QWORD *)(v17 + 96);
  if (v18)
  {
    v19 = *(_QWORD *)(v17 + 240);
    if (v19 == 2048 || v19 == 1024)
    {
      objc_msgSend(MEMORY[0x24BDBCE60], "dateWithTimeIntervalSince1970:", (double)v18);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDBCE60], "now");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "timeIntervalSinceDate:", v20);
      v23 = v22;

      if (v23 >= 7776000.0)
        *a3 |= 0x100000000000000uLL;

    }
  }
  v24 = fpck_validate_decmpfs_xattr(fd, a4, a3);
  v15 = v16 != 0;
  if (v24 < 0)
    return 0xFFFFFFFFLL;
LABEL_42:
  if (!v9 && !v15 && (fgetxattr(fd, "com.apple.decmpfs", 0, 0, 0, 32) & 0x8000000000000000) == 0)
    *a3 |= 8uLL;
  if ((*(_WORD *)(*(_QWORD *)(a4 + 24) + 4) & 0xF000) == 0x4000 && *(_BYTE *)(a4 + 4))
  {
    v25 = *(_DWORD *)(*(_QWORD *)(a4 + 16) + 44);
    if (*(_BYTE *)(a4 + 5))
    {
      if ((v25 & 0x100) != 0)
      {
        v26 = 0x1000000000;
LABEL_57:
        result = 0;
        *a3 |= v26;
        return result;
      }
    }
    else if (*(_BYTE *)(a4 + 3))
    {
      if ((v25 & 0x100) != 0)
      {
        v26 = 0x800000000;
        goto LABEL_57;
      }
    }
    else if ((v25 & 0x100) == 0)
    {
      v26 = 0x200000000;
      goto LABEL_57;
    }
  }
  return 0;
}

void sub_23AACB98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t checkContent(int a1, void *a2, uint64_t *a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  int v18;
  void *v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  ssize_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t j;
  __int128 __s2;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE __buf[1024];
  _QWORD v34[4];

  v34[2] = *MEMORY[0x24BDAC8D0];
  v7 = a2;
  bzero(__buf, 0x400uLL);
  bzero(&__s2, 0x400uLL);
  v8 = *(_QWORD *)(a4 + 24);
  if ((*(_DWORD *)(v8 + 116) & 0x40000020) == 0 && (*(_WORD *)(v8 + 4) & 0xF000) == 0x8000)
  {
    if (lseek(a1, 0, 4))
    {
      lseek(a1, 0, 0);
    }
    else
    {
      v25 = pread(a1, __buf, 0x400uLL, 0);
      if (v25 < 0)
      {
        if (*__error() != 1 || *(_DWORD *)(*(_QWORD *)(a4 + 16) + 208) > 2u)
        {
          v23 = 0xFFFFFFFFLL;
          goto LABEL_26;
        }
      }
      else if (v25 && !memcmp(__buf, &__s2, v25))
      {
        *a3 |= 0x80uLL;
      }
    }
  }
  objc_msgSend(v7, "pathExtension");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "lowercaseString");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:", CFSTR("wal"), CFSTR("download"), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "length"))
  {
    v31 = 0u;
    v32 = 0u;
    __s2 = 0u;
    v30 = 0u;
    v12 = v11;
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &__s2, __buf, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v30;
      while (2)
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v30 != v15)
            objc_enumerationMutation(v12);
          if ((objc_msgSend(v10, "containsString:", *(_QWORD *)(*((_QWORD *)&__s2 + 1) + 8 * i)) & 1) != 0)
          {

            goto LABEL_25;
          }
        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &__s2, __buf, 16);
        if (v14)
          continue;
        break;
      }
    }

    if ((*(_DWORD *)(*(_QWORD *)(a4 + 24) + 116) & 0x40000020) == 0)
    {
      v34[0] = (id)*MEMORY[0x24BDF8510];
      objc_msgSend(MEMORY[0x24BDF8238], "fp_cachedTypeWithIdentifier:", CFSTR("com.apple.icloud-file-fault"));
      v34[1] = objc_claimAutoreleasedReturnValue();
      v17 = *(_QWORD *)(a4 + 24);
      v18 = *(_WORD *)(v17 + 4) & 0xF000;
      if (v18 == 0x4000)
      {
        if (!*(_DWORD *)(*(_QWORD *)(a4 + 16) + 144))
        {
          v26 = *a3;
          if (*(_BYTE *)(a4 + 5))
            v27 = v26 | 0x200000;
          else
            v27 = v26 | 0x400000;
          *a3 = v27;
        }
      }
      else if (v18 == 0x8000 && *(uint64_t *)(v17 + 96) <= 0)
      {
        objc_msgSend(MEMORY[0x24BDF8238], "typeWithFilenameExtension:conformingToType:", v10, *MEMORY[0x24BDF8430]);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        if (v19)
        {
          v20 = 0;
          v21 = 1;
          while (1)
          {
            v22 = v21;
            if ((objc_msgSend(v19, "conformsToType:", v34[v20]) & 1) != 0)
              break;
            v21 = 0;
            v20 = 1;
            if ((v22 & 1) == 0)
              goto LABEL_22;
          }
        }
        else
        {
LABEL_22:
          *a3 |= 0x100000uLL;
        }

      }
      for (j = 1; j != -1; --j)

    }
  }
LABEL_25:

  v23 = 0;
LABEL_26:

  return v23;
}

uint64_t checkPermissions(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  int v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 + 24) + 16);
  if (v5 != getuid())
  {
    v6 = 0x40000;
    if (!v5)
      v6 = 0x20000;
    *a2 |= v6;
  }
  v7 = *(_DWORD *)(*(_QWORD *)(a3 + 16) + 208);
  v8 = v7 > 4;
  v9 = (1 << v7) & 0x19;
  if (v8 || v9 == 0)
    *a2 |= 0x800000uLL;
  return 0;
}

uint64_t checkSideFault(const char *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  char v7[766];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  if ((*(_WORD *)(*(_QWORD *)(a4 + 24) + 4) & 0xF000) != 0x8000)
    return 0;
  bzero(v7, 0x2FEuLL);
  if (!basename_r(a1, v7))
    return 0xFFFFFFFFLL;
  result = _CFURLCStringIsPromiseName();
  if ((_DWORD)result)
  {
    result = 0;
    *a3 |= 0x80000uLL;
  }
  return result;
}

uint64_t checkDetachedRoot(_QWORD *a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + 45) & 0x40) != 0)
  {
    if (!*(_BYTE *)(a2 + 7))
      *a1 |= 0x400000000000uLL;
    if (*(_BYTE *)(a2 + 1))
      *a1 |= 0x800000000000uLL;
    if (*(_BYTE *)(a2 + 8))
      *a1 |= 0x1000000000000uLL;
    if (*(_BYTE *)(a2 + 9))
      *a1 |= 0x2000000000000uLL;
    if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + 45) & 1) == 0)
      *a1 |= 0x4000000000000uLL;
  }
  return 0;
}

uint64_t checkMetadata(int a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  ssize_t v6;
  void *v7;
  void *v8;
  __darwin_ino64_t v9;
  uint64_t v10;
  ssize_t v11;
  ssize_t v12;
  size_t v13;
  _BYTE *v14;
  _BYTE *v15;
  stat v17;
  _OWORD value[8];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a3 + 24);
  if ((*(_WORD *)(v5 + 4) & 0xF000) == 0x8000 && *(unsigned __int16 *)(v5 + 6) >= 2u)
    *a2 |= 0x4000000000uLL;
  if (fpfs_is_busy_date())
    *a2 |= 0x8000000000000uLL;
  v6 = fgetxattr(a1, "com.apple.metadata:_kMDItemUserTags", 0, 0, 0, 0);
  if (v6 < 0)
  {
    if (*__error() == 93)
    {
LABEL_14:
      v10 = 0;
      goto LABEL_18;
    }
  }
  else
  {
    if (!v6)
    {
      v10 = 0;
      *a2 |= 0x100uLL;
      goto LABEL_18;
    }
    v7 = malloc_type_malloc(v6, 0x15B585AEuLL);
    if (v7)
    {
      v8 = v7;
      v9 = fpfs_fgetxattr_checked();
      if ((v9 & 0x8000000000000000) == 0)
      {
        v17.st_ino = v9;
        *(_QWORD *)&v17.st_dev = v8;
        value[0] = 0uLL;
        *(_QWORD *)&v17.st_uid = (int)fpfs_get_finder_info() < 0;
        if ((fpfs_deserialize_tags() & 0x80000000) != 0)
          *a2 |= 0x100uLL;
        free(v8);
        goto LABEL_14;
      }
      free(v8);
    }
  }
  v10 = 0xFFFFFFFFLL;
LABEL_18:
  *(_OWORD *)&v17.st_dev = 0uLL;
  if (fgetxattr(a1, "com.apple.lastuseddate#PS", &v17, 0x10uLL, 0, 0) < 0)
  {
    if (*__error() == 93)
      v10 = v10;
    else
      v10 = 0xFFFFFFFFLL;
  }
  else
  {
    value[0] = 0uLL;
    if ((fpfs_deserialize_last_use_date() & 0x80000000) != 0)
      *a2 |= 0x200uLL;
  }
  memset(value, 0, sizeof(value));
  v11 = fgetxattr(a1, "com.apple.metadata:kMDItemFavoriteRank", value, 0x80uLL, 0, 0);
  if (v11 < 0)
  {
    if (*__error() != 93)
    {
      v10 = 0xFFFFFFFFLL;
      goto LABEL_37;
    }
    if (fgetxattr(a1, "com.apple.favorite-rank.number#PS", 0, 0, 0, 0) < 0)
      goto LABEL_37;
  }
  else
  {
    if (!v11 || (*(_QWORD *)&v17.st_dev = 0, (fpfs_deserialize_favorite_rank() & 0x80000000) != 0))
      *a2 |= 0x400uLL;
    if (fgetxattr(a1, "com.apple.favorite-rank.number#PS", 0, 0, 0, 0) < 0)
      goto LABEL_33;
  }
  *a2 |= 0x80000000000uLL;
LABEL_33:
  memset(&v17, 0, sizeof(v17));
  if ((fstat(a1, &v17) & 0x80000000) == 0 && (v17.st_mode & 0xF000) != 0x4000)
    *a2 |= 0x100000000000uLL;
LABEL_37:
  v12 = fgetxattr(a1, "com.apple.fileprovider.before-bounce#P", 0, 0, 0, 0);
  if (v12 >= 1)
  {
    v13 = v12;
    v14 = malloc_type_malloc(v12 + 1, 0xA3197595uLL);
    if (v14)
    {
      v15 = v14;
      if (fgetxattr(a1, "com.apple.fileprovider.before-bounce#P", v14, v13, 0, 0) == v13)
      {
        v15[v13] = 0;
        if (!*v15)
          *a2 |= 0x200000000000uLL;
      }
      else
      {
        v10 = 0xFFFFFFFFLL;
      }
      free(v15);
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return v10;
}

uint64_t checkDocumentTracking(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  if (*(_BYTE *)(a3 + 10))
    return 0;
  v6 = *(_DWORD *)(*(_QWORD *)(a3 + 24) + 116);
  if ((fpfs_should_be_tracked_internal() & 0x80000000) != 0)
    return 0xFFFFFFFFLL;
  if ((v6 & 0x40) == 0)
    return 0;
  *a2 |= 0x800uLL;
  v7 = *(_QWORD *)(a3 + 16);
  if (!*(_DWORD *)(v7 + 16))
  {
    v9 = 0x2000;
    goto LABEL_18;
  }
  v8 = GSLibraryResolveDocumentId2();
  if (!v8)
  {
    v10 = *__error();
    if ((v10 - 16) <= 0x36 && ((1 << (v10 - 16)) & 0x40000000080001) != 0)
    {
      v9 = 0x8000;
      goto LABEL_18;
    }
    if (v10 == 2)
    {
      v9 = 0x4000;
      goto LABEL_18;
    }
    return 0;
  }
  if (v8 == *(_QWORD *)v7)
    return 0;
  v9 = 0x10000;
LABEL_18:
  result = 0;
  *a2 |= v9;
  return result;
}

uint64_t checkInvariants(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  const char *v8;
  void *v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;

  if (*(_BYTE *)(a4 + 6)
    && (*(_BYTE *)(*(_QWORD *)(a4 + 16) + 45) & 1) != 0
    && ((fpfs_fget_parent_syncroot() & 0x80000000) != 0 || (fpfs_pkg_is_demoted() & 0x80000000) != 0))
  {
    return 0xFFFFFFFFLL;
  }
  v8 = (const char *)(a1 + 104);
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = checkContent(a2, v9, (uint64_t *)a3, a4);

  if (v10 < 0)
    return 0xFFFFFFFFLL;
  checkPermissions(v11, (_QWORD *)a3, a4);
  checkDetachedRoot((_QWORD *)a3, a4);
  if (*(_BYTE *)(a4 + 1))
  {
    if (*(_BYTE *)a4)
    {
      v12 = *(_DWORD *)(*(_QWORD *)(a4 + 16) + 44);
      if ((v12 & 1) != 0)
      {
        *(_QWORD *)a3 |= 0x20000000uLL;
        v12 = *(_DWORD *)(*(_QWORD *)(a4 + 16) + 44);
      }
      if ((v12 & 0x20) != 0)
      {
        result = 0;
        *(_QWORD *)a3 |= 0x40000000uLL;
        return result;
      }
    }
    return 0;
  }
  if ((*(_WORD *)(*(_QWORD *)(a4 + 24) + 4) & 0xF000) == 0x4000)
  {
    if ((fpfs_pkg_is_promoted() & 0x80000000) != 0
      || fpfs_filename_contains_ext() && (fpfs_pkg_system_lookup() & 0x80000000) != 0
      || (fpfs_get_finder_info_buffer() & 0x80000000) != 0)
    {
      return 0xFFFFFFFFLL;
    }
    fpfs_finder_info_deserialize();
  }
  if ((checkFault(a2, 0, (_QWORD *)a3, a4) & 0x80000000) == 0
    && (!*(_BYTE *)a4
     || (checkSideFault(v8, v14, (_QWORD *)a3, a4) & 0x80000000) == 0
     && (checkMetadata(a2, (_QWORD *)a3, a4) & 0x80000000) == 0
     && ((*(_BYTE *)(a3 + 6) & 8) != 0 || (checkDocumentTracking(a2, (_QWORD *)a3, a4) & 0x80000000) == 0)))
  {
    return 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t fpck_validate_decmpfs_xattr(int a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int value;
  int v15;
  unsigned int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  bzero(&value, 0xEDAuLL);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_DWORD *)(v6 + 116) & 0x40000000;
  v8 = *(_DWORD *)(*(_QWORD *)(a2 + 16) + 44) & 0x20;
  v9 = v7 | v8;
  if ((_DWORD)v9)
  {
    v10 = fgetxattr(a1, "com.apple.decmpfs", &value, 0xEDAuLL, 0, 32);
    if ((v10 & 0x8000000000000000) != 0)
    {
      if (*__error() == 93)
      {
        if (v7)
          *a3 |= 4uLL;
        if (v8)
        {
          v11 = 16;
LABEL_25:
          v9 = 0;
          *a3 |= v11;
          return v9;
        }
        return 0;
      }
      else
      {
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      v11 = 2;
      if (v10 < 0x10 || value != 1668116582)
        goto LABEL_25;
      v9 = v8 | v7;
      if ((_DWORD)v9)
      {
        if (v15 == -2147483646)
        {
          if ((*(_WORD *)(v6 + 4) & 0xF000) != 0x4000 || !*(_BYTE *)(a2 + 5))
            goto LABEL_24;
        }
        else
        {
          if (v15 != -2147483647)
            goto LABEL_24;
          v12 = *(_WORD *)(v6 + 4) & 0xF000;
          if (v12 != 0x8000 && (v12 != 0x4000 || !v7 || *(_BYTE *)(a2 + 5)))
            goto LABEL_24;
        }
        v9 = 0;
        if (v10 >= 0x14 && v16 >= 8)
        {
LABEL_24:
          v11 = 2;
          goto LABEL_25;
        }
      }
    }
  }
  return v9;
}

uint64_t ___is_empty_directory_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = strcasecmp((const char *)(a2 + 21), ".Trash");
  if ((_DWORD)result)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
    return 1;
  }
  return result;
}

uint64_t __check_tag_data_block_invoke()
{
  return 0;
}

uint64_t sub_23AACCB44()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23AC3E1F8();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v1 = *(void **)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70) + 52));
  if (v1)
  {
    v2 = v1;
    sub_23AA7B734();

  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 980641340;
}

uint64_t sub_23AACCCFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_23B1C6C98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - v6;
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7340();
  sub_23B1C64F4();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1 + *(int *)(a1 + 52), v4);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness) != 1)
  {
    swift_getAssociatedConformanceWitness();
    sub_23B1C7304();
    v5 = v8;
    v4 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v10[0];
}

void sub_23AACCF5C(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AACCFC4(int *a1)
{
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = v4 + a1[13];
  swift_getAssociatedTypeWitness();
  v7 = sub_23B1C6C98();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v3, v7);
  *(_BYTE *)(v4 + a1[14]) = v2;
  *(_BYTE *)(v4 + a1[15]) = v1;
  return result;
}

void sub_23AACD044()
{
  type metadata accessor for ReconciliationID();
}

void sub_23AACD098(uint64_t a1)
{
  uint64_t v1;

  v1 = MEMORY[0x24BDAC7A8](a1);
  sub_23AF4EB60(v1);
}

void sub_23AACD0C8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  if ((a1 & 1) != 0)
  {
    *(_QWORD *)(v9 - 112) = v5;
    *(_QWORD *)(v9 - 104) = v6;
    *(_QWORD *)(v9 - 96) = v7;
    *(_QWORD *)(v9 - 88) = v8;
    type metadata accessor for FPFSID();
  }
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v4 + 568);
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(v4 + 576);
  v11 = *(_QWORD *)(v4 + 592);
  v12 = *(_QWORD *)(v9 - 120);
  *(_QWORD *)(v10 + 40) = v11;
  *(_QWORD *)(v10 + 48) = v12;
  *(_QWORD *)(v10 + 56) = v3;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v2;
  v13[3] = v1;
  v13[4] = v12;
  v13[5] = v3;
  swift_retain_n();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v9 - 112) = v5;
  *(_QWORD *)(v9 - 104) = v6;
  *(_QWORD *)(v9 - 96) = v7;
  *(_QWORD *)(v9 - 88) = v8;
  type metadata accessor for FPFSID();
}

void sub_23AACD1B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23ACFF994((uint64_t)"findParentID(for:completionHandler:)", 36, 2, (uint64_t)sub_23AAFAE70, v1, (uint64_t)sub_23AAFAEA0, v2, a1);
  swift_release();
  JUMPOUT(0x23AACD1F4);
}

void sub_23AACD21C(uint64_t a1, _QWORD *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(_OWORD *__return_ptr, id *);
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void (*v25)(id *, _OWORD *, void *, _QWORD, void (*)(uint64_t), uint64_t);
  uint64_t v26;
  void *v27;
  id v28;
  _QWORD *v29;
  void (*v30)(id *, _OWORD *, void *, _QWORD, void (*)(uint64_t), _QWORD *);
  void *v31;
  char v32;
  _OWORD v33[4];
  __int128 v34;
  __int128 v35;
  id v36;
  char v37;

  sub_23AAEEE70((uint64_t)a2, 0);
  if (!v4)
  {
    v10 = v8;
    v11 = v9;
    if ((v9 & 0x100) == 0)
    {
      v36 = v8;
      v37 = v9;
      v12 = (_QWORD *)a2[4];
      (*(void (**)(_OWORD *__return_ptr, id *))(*v12 + 280))(v33, &v36);
      v13 = BYTE8(v33[0]);
      if (BYTE8(v33[0]) != 255)
      {
        v14 = *(_QWORD *)&v33[0];
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
        v15 = swift_allocObject();
        *(_QWORD *)(v15 + 16) = v14;
        *(_BYTE *)(v15 + 24) = v13;
        *(_BYTE *)(v15 + 25) = 0;
        *(_QWORD *)(v15 + 32) = v14;
        *(_BYTE *)(v15 + 40) = v13;
        *(_WORD *)(v15 + 41) = 0;
        a3();
        swift_release();
        return;
      }
      v21 = v12[2];
      v34 = 0u;
      v35 = 0u;
      memset(v33, 0, sizeof(v33));
      swift_retain();
      swift_retain();
      if (!objc_sync_enter(a2))
      {
        v22 = *(void **)((char *)a2 + qword_2542E6C70);
        v23 = v22;
        if (!objc_sync_exit(a2))
        {
          swift_release();
          v31 = v10;
          v32 = v11;
          v24 = swift_allocObject();
          *(_QWORD *)(v24 + 16) = a3;
          *(_QWORD *)(v24 + 24) = a4;
          sub_23AA9F454((uint64_t *)&v31, v24 + 32);
          v25 = *(void (**)(id *, _OWORD *, void *, _QWORD, void (*)(uint64_t), uint64_t))(*(_QWORD *)v21 + 136);
          swift_retain();
          v25(&v36, v33, v22, 0, sub_23AAFCD8C, v24);
          swift_release();

          swift_release();
          sub_23AAAEE68(*(uint64_t *)&v33[0], *((uint64_t *)&v33[0] + 1), *(uint64_t *)&v33[1], *((uint64_t *)&v33[1] + 1), *(uint64_t *)&v33[2], *((uint64_t *)&v33[2] + 1), *(uint64_t *)&v33[3], *((uint64_t *)&v33[3] + 1), v34);
          return;
        }
LABEL_15:
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
      }
LABEL_14:
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
    }
    v36 = v8;
    v16 = (_QWORD *)a2[5];
    v17 = *(void (**)(_OWORD *__return_ptr, id *))(*v16 + 280);
    sub_23AA88218(v8, v9, 1);
    v17(v33, &v36);
    v18 = *(void **)&v33[0];
    if (*(_QWORD *)&v33[0])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v18;
      *(_WORD *)(v19 + 24) = 256;
      *(_BYTE *)(v19 + 42) = 0;
      *(_QWORD *)(v19 + 32) = v18;
      *(_WORD *)(v19 + 40) = 256;
      v20 = v18;
      ((void (*)(uint64_t, _QWORD))a3)(v19, 0);

      swift_release();
      sub_23AA862DC(v10, v11, 1);
    }
    else
    {
      v26 = v16[2];
      v33[0] = 0uLL;
      *(_QWORD *)&v33[1] = 1;
      memset((char *)&v33[1] + 8, 0, 40);
      swift_retain();
      swift_retain();
      if (objc_sync_enter(a2))
        goto LABEL_14;
      v27 = *(void **)((char *)a2 + qword_2542E6C70);
      v28 = v27;
      if (objc_sync_exit(a2))
        goto LABEL_15;
      swift_release();
      v29 = (_QWORD *)swift_allocObject();
      v29[2] = a3;
      v29[3] = a4;
      v29[4] = v10;
      v30 = *(void (**)(id *, _OWORD *, void *, _QWORD, void (*)(uint64_t), _QWORD *))(*(_QWORD *)v26 + 136);
      sub_23AA88218(v10, v11, 1);
      swift_retain();
      v30(&v36, v33, v27, 0, sub_23AAFCD50, v29);
      swift_release();

      swift_release();
      sub_23AAAE4D0(*(uint64_t *)&v33[0], *((unint64_t *)&v33[0] + 1), *(uint64_t *)&v33[1], *((uint64_t *)&v33[1] + 1), *(unint64_t *)&v33[2]);

    }
  }
}

void sub_23AACD5F0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AACD6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  uint64_t v29;

  *(_QWORD *)(v11 - 272) = a1;
  v12 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 256) = v12;
  *(_QWORD *)(v11 - 264) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v11 - 240) = (char *)&a9 - v13;
  v14 = *(_QWORD *)(v9 + 88);
  v15 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 304) = v15;
  *(_QWORD *)(v11 - 320) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v11 - 152) = (char *)&a9 - v17;
  *(_QWORD *)(v11 - 160) = *(_QWORD *)(v14 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v11 - 280) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v11 - 296) = (char *)&a9 - v21;
  *(_QWORD *)(v11 - 288) = v22;
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v11 - 184) = (char *)&a9 - v23;
  v24 = *(_QWORD *)(v10 + 584);
  v25 = *(_QWORD *)(v10 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 168) = v24;
  *(_QWORD *)(v11 - 232) = v25;
  v29 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v11 - 112) = v27;
  *(_QWORD *)(v11 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v11 - 96) = v29;
  type metadata accessor for FileItemVersion();
}

void sub_23AACD884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v11 - 336) = a1;
  v12 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 312) = v12;
  *(_QWORD *)(v11 - 328) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v11 - 248) = (char *)&a9 - v13;
  v14 = v9[10];
  v15 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 360) = v15;
  *(_QWORD *)(v11 - 368) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v11 - 192) = (char *)&a9 - v17;
  v18 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v11 - 176) = v18;
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v11 - 344) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v11 - 352) = (char *)&a9 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = v9[12];
  v23 = v9[13];
  *(_QWORD *)(v11 - 120) = v14;
  *(_QWORD *)(v11 - 112) = v10;
  *(_QWORD *)(v11 - 144) = v10;
  *(_QWORD *)(v11 - 104) = v24;
  *(_QWORD *)(v11 - 96) = v23;
  type metadata accessor for ReconciliationID();
}

void sub_23AACD9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v10);
  sub_23AF4E47C(*(_QWORD *)(v9 - 72), 0, (uint64_t)&a9 - v11);
}

void sub_23AACDA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, void *, _QWORD, void (*)(), char *);
  uint64_t v39;
  void *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, void *, _QWORD, void (*)(), char *);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;

  if (!v1)
  {
    *(_QWORD *)(v9 - 392) = v8;
    *(_QWORD *)(v9 - 384) = v7;
    *(_QWORD *)(v9 - 400) = v0;
    *(_QWORD *)(v9 - 136) = v3;
    *(_QWORD *)(v9 - 128) = 0;
    v10 = *(_QWORD *)(v9 - 160);
    v11 = *(_QWORD *)(v9 - 152);
    v12 = *(_QWORD *)(v9 - 176);
    v13 = *(_QWORD *)(v9 - 168);
    v14 = *(_QWORD *)(v9 - 144);
    *(_QWORD *)(v9 - 376) = v5;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = v10;
      v16 = *(_QWORD *)(v9 - 184);
      v17 = v14;
      v18 = *(void (**)(void))(v10 + 32);
      v18();
      v19 = *(_QWORD **)(*(_QWORD *)(v9 - 72) + 40);
      v20 = v11;
      v21 = *(_QWORD *)(v9 - 128);
      (*(void (**)(uint64_t))(*v19 + 280))(v16);
      if (v21)
      {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
      }
      else
      {
        *(_QWORD *)(v9 - 128) = 0;
        v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v17);
        v30 = *(_QWORD *)(v9 - 208);
        if (v29 != 1)
        {
          ((void (*)(_QWORD, uint64_t, uint64_t))v18)(*(_QWORD *)(v9 - 296), v20, v17);
          *(_QWORD *)(v9 - 120) = v4;
          *(_QWORD *)(v9 - 112) = v17;
          v53 = *(_QWORD *)(v9 - 384);
          *(_QWORD *)(v9 - 104) = *(_QWORD *)(v9 - 392);
          *(_QWORD *)(v9 - 96) = v53;
          type metadata accessor for FPFSID();
        }
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 320) + 8))(v20, *(_QWORD *)(v9 - 304));
        v31 = v19[2];
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 - 272) - 8) + 56))(*(_QWORD *)(v9 - 240), 1, 1);
        swift_retain();
        *(_QWORD *)(v9 - 72) = sub_23AFB5ED0();
        v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
        *(_QWORD *)(v9 - 136) = v18;
        v33 = *(_QWORD *)(v9 - 280);
        v32(v33, v16, v17);
        v34 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        v35 = (char *)swift_allocObject();
        v36 = *(_QWORD *)(v9 - 224);
        *((_QWORD *)v35 + 2) = *(_QWORD *)(v9 - 232);
        *((_QWORD *)v35 + 3) = v36;
        v37 = *(_QWORD *)(v9 - 216);
        *((_QWORD *)v35 + 4) = v13;
        *((_QWORD *)v35 + 5) = v37;
        *((_QWORD *)v35 + 6) = *(_QWORD *)(v9 - 200);
        *((_QWORD *)v35 + 7) = v30;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 - 136))(&v35[v34], v33, v17);
        v38 = *(void (**)(uint64_t, uint64_t, void *, _QWORD, void (*)(), char *))(*(_QWORD *)v31 + 136);
        swift_retain();
        v39 = *(_QWORD *)(v9 - 240);
        v40 = *(void **)(v9 - 72);
        v38(v16, v39, v40, 0, sub_23AAFAF48, v35);
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 264) + 8))(v39, *(_QWORD *)(v9 - 256));
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
      }
    }
    else
    {
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
      v23 = v2;
      v24 = v2;
      v25 = v4;
      v22(v24, v6, v4);
      v26 = *(_QWORD **)(*(_QWORD *)(v9 - 72) + 32);
      v27 = *(_QWORD *)(v9 - 192);
      v28 = *(_QWORD *)(v9 - 128);
      (*(void (**)(uint64_t))(*v26 + 280))(v23);
      if (v28)
      {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v23, v25);
      }
      else
      {
        *(_QWORD *)(v9 - 152) = v22;
        *(_QWORD *)(v9 - 128) = 0;
        v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v27, 1, v25);
        v42 = *(_QWORD *)(v9 - 208);
        if (v41 != 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 - 152))(*(_QWORD *)(v9 - 352), v27, v25);
          *(_QWORD *)(v9 - 120) = v25;
          *(_QWORD *)(v9 - 112) = v14;
          v54 = *(_QWORD *)(v9 - 384);
          *(_QWORD *)(v9 - 104) = *(_QWORD *)(v9 - 392);
          *(_QWORD *)(v9 - 96) = v54;
          type metadata accessor for FPFSID();
        }
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 368) + 8))(v27, *(_QWORD *)(v9 - 360));
        v43 = v26[2];
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 - 336) - 8) + 56))(*(_QWORD *)(v9 - 248), 1, 1);
        swift_retain();
        v44 = v23;
        *(_QWORD *)(v9 - 72) = sub_23AFB5ED0();
        v45 = *(_QWORD *)(v9 - 344);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v45, v23, v25);
        v46 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
        v47 = (char *)swift_allocObject();
        v48 = *(_QWORD *)(v9 - 224);
        *((_QWORD *)v47 + 2) = *(_QWORD *)(v9 - 232);
        *((_QWORD *)v47 + 3) = v48;
        v49 = *(_QWORD *)(v9 - 216);
        *((_QWORD *)v47 + 4) = v13;
        *((_QWORD *)v47 + 5) = v49;
        *((_QWORD *)v47 + 6) = *(_QWORD *)(v9 - 200);
        *((_QWORD *)v47 + 7) = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 - 152))(&v47[v46], v45, v25);
        v50 = *(void (**)(uint64_t, uint64_t, void *, _QWORD, void (*)(), char *))(*(_QWORD *)v43 + 136);
        swift_retain();
        v51 = *(_QWORD *)(v9 - 248);
        v52 = *(void **)(v9 - 72);
        v50(v44, v51, v52, 0, sub_23AAFB054, v47);
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 328) + 8))(v51, *(_QWORD *)(v9 - 312));
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v44, v25);
      }
    }
  }
}

void sub_23AACDF84()
{
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FPFSID();
}

void sub_23AACE098()
{
  uint64_t v0;
  void *v1;
  char v2;
  void (*v3)(void *, _QWORD);
  void *v4;
  unsigned __int8 v5;

  sub_23AACE5A4((void (*)(char *))sub_23AAFB0D4, v0, (uint64_t)&v4);
  v1 = v4;
  v2 = v5;
  v3(v4, v5);
  sub_23AAFCD98(v1, v2);
}

void sub_23AACE0F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD v19[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VFSItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v8, &qword_2542E72C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    sub_23AA94050((uint64_t)v8, (uint64_t)v12, type metadata accessor for VFSItem);
    v14 = *((_QWORD *)v12 + 2);
    v15 = v12[24];
    sub_23AA937BC((uint64_t)v12, type metadata accessor for VFSItem);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v14;
    *(_BYTE *)(v16 + 24) = v15;
    *(_BYTE *)(v16 + 25) = 0;
    *(_QWORD *)(v16 + 32) = v14;
    *(_BYTE *)(v16 + 40) = v15;
    *(_WORD *)(v16 + 41) = 0;
    return;
  }
  sub_23AA8A05C((uint64_t)v8, &qword_2542E72C0);
  if (a3 == 2 && !a2)
  {
    v13 = (id *)MEMORY[0x24BDC8228];
LABEL_9:
    v17 = *v13;
    goto LABEL_11;
  }
  if (a3 == 2 && a2 == 1)
  {
    v13 = (id *)MEMORY[0x24BDC8230];
    goto LABEL_9;
  }
  v19[0] = 0x2F73662F70665F5FLL;
  v19[1] = 0xE800000000000000;
  sub_23AA96F18(a2, a3);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v17 = (id)sub_23B1C63BC();
  swift_bridgeObjectRelease();
LABEL_11:
  v18 = (id)FPItemNotFoundError();

  if (!v18)
    __break(1u);
}

void sub_23AACE314()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23AACE3F0(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[96];

  *(_QWORD *)(v5 - 152) = a1;
  MEMORY[0x24BDAC7A8](a1);
  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v16[-v9];
  v11 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v4, v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v2) != 1)
  {
LABEL_4:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v10, v2);
    *(_QWORD *)(v5 - 112) = v1;
    *(_QWORD *)(v5 - 104) = v3;
    v14 = *(_QWORD *)(v5 - 160);
    *(_QWORD *)(v5 - 96) = *(_QWORD *)(v5 - 120);
    *(_QWORD *)(v5 - 88) = v14;
    type metadata accessor for FPFSID();
  }
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
  v13 = sub_23AFA9F44(*(_QWORD *)(v5 - 144), 1, (uint64_t)v1, *(_QWORD *)(v5 - 120));
  v1 = (id)FPItemNotFoundError();

  if (!v1)
  {
    __break(1u);
    goto LABEL_4;
  }
  v15 = *(_QWORD *)(v5 - 128);
  *(_QWORD *)v15 = v1;
  *(_BYTE *)(v15 + 8) = 1;
}

uint64_t sub_23AACE5A4@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 32))(a3, v12, *(_QWORD *)(a2 + 24));
    sub_23B1C74F0();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void sub_23AACE6F0(id a1, char a2, void (*a3)(id, uint64_t), uint64_t a4, void *a5)
{
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v13;
  id v14;

  v6 = a1;
  if ((a2 & 1) != 0)
  {
    v11 = a1;
    v10 = 1;
  }
  else if (a1)
  {
    v7 = a1;
    v8 = sub_23ADAB49C();
    sub_23AAB538C(v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
    v6 = (id)swift_allocObject();
    *((_QWORD *)v6 + 2) = v8;
    *((_WORD *)v6 + 12) = 256;
    *((_BYTE *)v6 + 42) = 0;
    *((_QWORD *)v6 + 4) = v8;
    *((_WORD *)v6 + 20) = 256;
    v9 = v8;
    v10 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0960);
    sub_23AAB5A28(qword_2542DD8D0, (uint64_t *)&unk_2542E0960, (uint64_t)&unk_23B1D40CC);
    v6 = (id)swift_allocError();
    *(_QWORD *)v13 = a5;
    *(_QWORD *)(v13 + 8) = 0;
    v10 = 1;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 1;
    *(_OWORD *)(v13 + 32) = 0u;
    *(_OWORD *)(v13 + 48) = 0u;
    *(_OWORD *)(v13 + 64) = 0u;
    *(_BYTE *)(v13 + 80) = 0;
    v14 = a5;
  }
  a3(v6, v10);
  sub_23AAFCD98(v6, v10);
}

void sub_23AACE81C()
{
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FPFSID();
}

void sub_23AACE930()
{
  uint64_t v0;
  void *v1;
  char v2;
  void (*v3)(void *, _QWORD);
  void *v4;
  unsigned __int8 v5;

  sub_23AACE5A4((void (*)(char *))sub_23AAFB0E0, v0, (uint64_t)&v4);
  v1 = v4;
  v2 = v5;
  v3(v4, v5);
  sub_23AAFCD98(v1, v2);
}

void sub_23AACE990()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23AACEA68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[96];

  *(_QWORD *)(v5 - 152) = a1;
  MEMORY[0x24BDAC7A8](a1);
  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v22[-v9];
  v11 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 16))(v10, *(_QWORD *)(v5 - 136), v6);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v2);
  *(_DWORD *)(v5 - 136) = v14;
  if (v14 == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
    v16 = type metadata accessor for FileTreeError(0, v2, v3, v15);
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v16);
    swift_allocError();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v18 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v20 = swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v5 - 112) = AssociatedTypeWitness;
    *(_QWORD *)(v5 - 104) = v18;
    *(_QWORD *)(v5 - 96) = AssociatedConformanceWitness;
    *(_QWORD *)(v5 - 88) = v20;
    type metadata accessor for FileItemVersion();
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v10, v2);
  v21 = *(_QWORD *)(v5 - 128);
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v21;
  *(_QWORD *)(v5 - 96) = *(_QWORD *)(v5 - 160);
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for FPFSID();
}

void sub_23AACECE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  swift_storeEnumTagMultiPayload();
  sub_23AF4E3A4();
}

void sub_23AACED60(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v6;
  *(_BYTE *)(v13 + 32) = a3;
  *(_BYTE *)(v13 + 33) = a2;
  *(_QWORD *)(v13 + 40) = a5;
  *(_QWORD *)(v13 + 48) = a6;
  *(_QWORD *)(v13 + 56) = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA93780(a4);
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AACEE08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23B1C6C98();
  sub_23ACFF994((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, v1, v0, (uint64_t)sub_23AAFABA8, v2, v3);
  return swift_release();
}

void sub_23AACEE68()
{
  type metadata accessor for ItemLookupResult();
}

void sub_23AACEED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;

  *(_QWORD *)(v10 - 216) = a1;
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v11 = sub_23B1C74F0();
  *(_QWORD *)(v10 - 232) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v10 - 224) = v11;
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v10 - 240) = (char *)&a9 - v12;
  v13 = sub_23B1C5E4C();
  *(_QWORD *)(v10 - 256) = v13;
  *(_QWORD *)(v10 - 264) = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v10 - 184) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v10 - 192) = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v10 - 328) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v10 - 272) = (char *)&a9 - v19;
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v10 - 168) = (char *)&a9 - v20;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v10 - 112) = v22;
  *(_QWORD *)(v10 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v10 - 96) = v24;
  type metadata accessor for FileItemVersion();
}

void sub_23AACF09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v13 - 432) = a1;
  v14 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 416) = v14;
  *(_QWORD *)(v13 - 424) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - v15;
  v17 = type metadata accessor for ItemReconciliationHalf(0, v12, v9, v16);
  *(_QWORD *)(v13 - 448) = v17;
  *(_QWORD *)(v13 - 400) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 456) = (char *)&a9 - v18;
  *(_QWORD *)(v13 - 296) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 312) = v12;
  *(_QWORD *)(v13 - 288) = v10;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v9;
  *(_QWORD *)(v13 - 304) = v9;
  type metadata accessor for ItemReconciliation();
}

void sub_23AACF174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v12 = sub_23B1C6C98();
  *(_QWORD *)(v10 - 472) = v12;
  *(_QWORD *)(v10 - 480) = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v10 - 336) = (char *)&a9 - v14;
  *(_QWORD *)(v10 - 376) = a1;
  *(_QWORD *)(v10 - 352) = *(_QWORD *)(a1 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v10 - 464) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v10 - 408) = (char *)&a9 - v17;
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v10 - 160) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v10 - 360) = v19;
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v10 - 440) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v10 - 384) = (char *)&a9 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v10 - 344) = (char *)&a9 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v10 - 280) = (char *)&a9 - v27;
  v28 = *(_QWORD *)(*(_QWORD *)(v10 - 152) + 80);
  v29 = *(_QWORD *)(v28 - 8);
  *(_QWORD *)(v10 - 176) = v29;
  v30 = *(_QWORD *)(v29 + 64);
  v31 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v10 - 368) = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v10 - 488) = (char *)&a9 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v10 - 496) = (char *)&a9 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = *(_QWORD *)(v36 + 96);
  v37 = *(_QWORD *)(v36 + 104);
  *(_QWORD *)(v10 - 120) = v28;
  *(_QWORD *)(v10 - 112) = v9;
  *(_QWORD *)(v10 - 152) = v9;
  *(_QWORD *)(v10 - 104) = v38;
  *(_QWORD *)(v10 - 96) = v37;
  type metadata accessor for ReconciliationID();
}

void sub_23AACF3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  MEMORY[0x24BDAC7A8](a1);
  sub_23AF4E47C(*(_QWORD *)(v9 - 128), 0, (uint64_t)&a9 - v10);
}

void sub_23AACF3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BOOL4 v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, _QWORD, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  void (*v69)(uint64_t, uint64_t, void *, _QWORD, void (*)(), _QWORD *);
  uint64_t v70;
  void *v71;

  if (!v1)
  {
    *(_QWORD *)(v8 - 544) = v7;
    *(_QWORD *)(v8 - 520) = v4;
    *(_QWORD *)(v8 - 536) = v2;
    *(_QWORD *)(v8 - 528) = v6;
    *(_QWORD *)(v8 - 136) = v0;
    *(_QWORD *)(v8 - 512) = v3;
    v9 = *(_QWORD *)(v8 - 160);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)(v8 - 144) = 0;
      v10 = *(_QWORD *)(v8 - 192);
      v11 = *(_QWORD *)(v8 - 168);
      v12 = *(_QWORD *)(v8 - 152);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v11, v5, v12);
      v13 = (id)fpfs_current_or_default_log();
      v14 = *(_QWORD *)(v8 - 184);
      sub_23B1C5E58();
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v16 = *(_QWORD *)(v8 - 272);
      v15(v16, v11, v12);
      v17 = *(_QWORD *)(v8 - 248);
      sub_23AA93780(v17);
      sub_23AA93780(v17);
      v18 = sub_23B1C5E40();
      v19 = sub_23B1C6A94();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        *(_QWORD *)(v8 - 128) = v21;
        *(_QWORD *)(v8 - 120) = v21;
        *(_DWORD *)v20 = 136315394;
        *(_QWORD *)(v8 - 136) = v20 + 4;
        v22 = *(_QWORD *)(v8 - 328);
        v15(v22, v16, v12);
        v23 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
        v23(v16, v12);
        v24 = sub_23B1C7304();
        v26 = v25;
        v23(v22, v12);
        *(_QWORD *)(v8 - 72) = sub_23AABEC68(v24, v26, (uint64_t *)(v8 - 120));
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        sub_23AF9E228();
      }
      sub_23AAB47B0(v17);
      v31 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v31(v16, v12);
      sub_23AAB47B0(v17);

      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 264) + 8))(v14, *(_QWORD *)(v8 - 256));
      v32 = *(void (**)(uint64_t))(v8 - 208);
      v33 = *(_QWORD *)(v8 - 224);
      v35 = *(_QWORD *)(v8 - 240);
      v34 = *(_QWORD *)(v8 - 232);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 - 216) - 8) + 56))(v35, 1, 1);
      swift_storeEnumTagMultiPayload();
      v32(v35);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v33);
      v31(*(_QWORD *)(v8 - 168), v12);
    }
    else
    {
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 176) + 32);
      v28 = *(_QWORD *)(v8 - 136);
      v29 = *(_QWORD *)(v8 - 512);
      *(_QWORD *)(v8 - 168) = v27;
      v27(v28, v5, v29);
      v30 = *(_QWORD *)(v8 - 128);
      if ((sub_23AABA464() & 1) != 0)
        sub_23AB00114();
      v36 = *(_QWORD *)(v8 - 344);
      (*(void (**)(uint64_t))(**(_QWORD **)(v30 + 16) + 160))(v28);
      v37 = *(_QWORD *)(v8 - 152);
      *(_QWORD *)(v8 - 144) = 0;
      v38 = *(_QWORD *)(v8 - 280);
      v39 = v9;
      v40 = *(_QWORD *)(v8 - 360);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v36, v39);
      v41 = *(_QWORD *)(v8 - 384);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v41, v38, v39);
      v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 192) + 48))(v41, 1, v37) != 1;
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v39);
      v43 = *(_QWORD *)(v8 - 320);
      v44 = *(_QWORD **)(v30 + 32);
      v45 = *(_QWORD *)(v8 - 144);
      v46 = *(_QWORD *)(v8 - 136);
      (*(void (**)(uint64_t))(*v44 + 616))(v46);
      *(_QWORD *)(v8 - 144) = v45;
      if (v45)
      {
        (*(void (**)(_QWORD, uint64_t))(v40 + 8))(*(_QWORD *)(v8 - 280), v39);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 176) + 8))(v46, v29);
      }
      else
      {
        v47 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 - 432) - 8) + 48))(v43, 1);
        v48 = 3;
        if (v47 == 1)
          v48 = 515;
        *(_QWORD *)(v8 - 192) = v48;
        v49 = v39;
        v50 = v44[2];
        swift_retain();
        *(_QWORD *)(v8 - 128) = sub_23AFB5ED0();
        v51 = *(_QWORD *)(v8 - 176);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v51 + 16))(*(_QWORD *)(v8 - 368), v46, v29);
        v52 = *(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 16);
        *(_DWORD *)(v8 - 152) = v42;
        v53 = *(_QWORD *)(v8 - 440);
        v52(v53, *(_QWORD *)(v8 - 280), v49);
        v54 = (*(unsigned __int8 *)(v51 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        v55 = *(unsigned __int8 *)(v40 + 80);
        v56 = *(_QWORD *)(v8 - 536) + v55 + v54;
        *(_DWORD *)(v8 - 184) = 0;
        v57 = v56 & ~v55;
        v58 = v57 + *(_QWORD *)(v8 - 528);
        v59 = (_QWORD *)swift_allocObject();
        v60 = *(_QWORD *)(v8 - 312);
        v59[2] = *(_QWORD *)(v8 - 296);
        v59[3] = v60;
        v61 = *(_QWORD *)(v8 - 304);
        v59[4] = *(_QWORD *)(v8 - 288);
        v59[5] = v61;
        v62 = (char *)v59 + v54;
        v63 = *(_QWORD *)(v8 - 200);
        v59[6] = *(_QWORD *)(v8 - 208);
        v59[7] = v63;
        (*(void (**)(char *, _QWORD, uint64_t))(v8 - 168))(v62, *(_QWORD *)(v8 - 368), v29);
        v64 = (char *)v59 + v57;
        v65 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
        v66 = v40;
        v67 = *(_QWORD *)(v8 - 160);
        v65(v64, v53, v67);
        v68 = (char *)v59 + v58;
        *v68 = *(_DWORD *)(v8 - 184) & 1;
        v68[1] = *(_DWORD *)(v8 - 152);
        v69 = *(void (**)(uint64_t, uint64_t, void *, _QWORD, void (*)(), _QWORD *))(*(_QWORD *)v50 + 136);
        swift_retain();
        v70 = *(_QWORD *)(v8 - 320);
        v71 = *(void **)(v8 - 128);
        v69(v46, v70, v71, *(_QWORD *)(v8 - 192), sub_23AAFACD8, v59);
        swift_release();
        swift_release();

        (*(void (**)(_QWORD, uint64_t))(v66 + 8))(*(_QWORD *)(v8 - 280), v67);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 176) + 8))(v46, *(_QWORD *)(v8 - 512));
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 424) + 8))(v70, *(_QWORD *)(v8 - 416));
      }
    }
  }
}

uint64_t sub_23AACFD84(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, void *a6, char a7, int a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  void *v25;

  v23 = a8;
  v24 = a5;
  v25 = a6;
  v22 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t *)((char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v16, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v19 = *v16;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_23AA724E8((uint64_t)v16, (uint64_t)v13, &qword_2542E72C0);
    sub_23AAD0088((uint64_t)v13, v22, v24, v25, a7 & 1, v23 & 1, v19);
    sub_23AA8A05C((uint64_t)v13, &qword_2542E72C0);
  }
  a2(v19);
  return sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E2190);
}

void sub_23AACFF30()
{
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AACFF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v6 = sub_23B1C74F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - v8;
  *(_QWORD *)(v5 - 176) = v2;
  *(_QWORD *)(v5 - 168) = v0;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 152) = v1;
  v10 = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v5 - 144) = v4;
  *(_QWORD *)(v5 - 136) = v10;
  *(_BYTE *)(v5 - 128) = *(_DWORD *)(v5 - 224);
  *(_BYTE *)(v5 - 127) = *(_DWORD *)(v5 - 220);
  sub_23B1C6C98();
  v11 = sub_23B1C74F0();
  sub_23AACE5A4((void (*)(char *))sub_23AAFADCC, v11, (uint64_t)v9);
  (*(void (**)(char *))(v5 - 200))(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23AAD0088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  BOOL v40;
  id v41;
  int *v42;
  uint64_t v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t *v51;
  char *v52;

  v46 = a6;
  v47 = a5;
  v50 = a4;
  v51 = a7;
  LODWORD(v49) = a3;
  v48 = a2;
  v52 = (char *)a1;
  v7 = type metadata accessor for ItemMetadata();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v44 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for VFSItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v44 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v44 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v44 - v27;
  sub_23AA8EFC8((uint64_t)v52, (uint64_t)v15, &qword_2542E72C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    v52 = v20;
    v49 = v10;
    v31 = v51;
    sub_23AA94050((uint64_t)v15, (uint64_t)v28, type metadata accessor for VFSItem);
    sub_23AA907B0((uint64_t)v28, (uint64_t)v26, type metadata accessor for VFSItem);
    sub_23AA907B0((uint64_t)v28, (uint64_t)v23, type metadata accessor for VFSItem);
    v45 = v26;
    if ((v47 & 1) != 0)
    {
      sub_23AA907B0((uint64_t)&v23[*(int *)(v16 + 28)], (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      v32 = v50;
      sub_23AA937BC((uint64_t)v23, type metadata accessor for VFSItem);
      v33 = v12[*(int *)(v7 + 64)];
      sub_23AA937BC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      v34 = (uint64_t)v52;
      sub_23AA907B0((uint64_t)v28, (uint64_t)v52, type metadata accessor for VFSItem);
      v35 = (uint64_t)v31;
      v36 = v46;
      if ((v33 & 1) == 0)
      {
        v37 = v34 + *(int *)(v16 + 28);
        v38 = (uint64_t)v49;
        sub_23AA907B0(v37, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        sub_23AA937BC(v34, type metadata accessor for VFSItem);
        sub_23AA937BC((uint64_t)v28, type metadata accessor for VFSItem);
        v39 = *(unsigned __int8 *)(v38 + *(int *)(v7 + 68));
        sub_23AA937BC(v38, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        v40 = v39 == 2 || (v39 & 1) == 0;
        goto LABEL_10;
      }
    }
    else
    {
      v41 = v50;
      sub_23AA937BC((uint64_t)v23, type metadata accessor for VFSItem);
      v34 = (uint64_t)v52;
      sub_23AA907B0((uint64_t)v28, (uint64_t)v52, type metadata accessor for VFSItem);
      v35 = (uint64_t)v31;
      v36 = v46;
    }
    sub_23AA937BC(v34, type metadata accessor for VFSItem);
    sub_23AA937BC((uint64_t)v28, type metadata accessor for VFSItem);
    v40 = 0;
LABEL_10:
    v42 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
    *(_QWORD *)(v35 + v42[13]) = v50;
    sub_23AA94050((uint64_t)v45, v35, type metadata accessor for VFSItem);
    *(_BYTE *)(v35 + v42[14]) = v40;
    *(_BYTE *)(v35 + v42[15]) = v36 & 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v42 - 1) + 56))(v35, 0, 1, v42);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
    return swift_storeEnumTagMultiPayload();
  }
  sub_23AA8A05C((uint64_t)v15, &qword_2542E72C0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
  v29 = swift_allocError();
  *(_QWORD *)v30 = v48;
  *(_BYTE *)(v30 + 8) = (_BYTE)v49;
  *(_OWORD *)(v30 + 16) = 0u;
  *(_OWORD *)(v30 + 32) = 0u;
  *(_OWORD *)(v30 + 48) = 0u;
  *(_OWORD *)(v30 + 64) = 0u;
  *(_OWORD *)(v30 + 80) = 0u;
  *(_OWORD *)(v30 + 96) = 0u;
  *(_QWORD *)(v30 + 112) = 0;
  sub_23AAFC630(v30);
  *v51 = v29;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  return swift_storeEnumTagMultiPayload();
}

void sub_23AAD04C8(char *a1@<X0>, void (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t AssociatedTypeWitness;
  uint64_t v38;
  uint64_t AssociatedConformanceWitness;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  void (*v61)(uint64_t, uint64_t);
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v66 = a8;
  v67 = a1;
  v62 = a5;
  v60 = a4;
  v59 = a3;
  v61 = a2;
  v65 = a9;
  v56 = type metadata accessor for ItemMetadata();
  v12 = MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v55 = (char *)&v51 - v14;
  v63 = a10;
  v64 = a7;
  swift_getAssociatedTypeWitness();
  v15 = sub_23B1C6C98();
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v51 - v16;
  v18 = sub_23B1C6C98();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v51 - v21;
  v23 = *(_QWORD *)(a6 - 8);
  v24 = MEMORY[0x24BDAC7A8](v20);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v51 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v51 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v51 - v33;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v67, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    v36 = type metadata accessor for FileTreeError(0, a6, v66, v35);
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v36);
    swift_allocError();
    swift_getAssociatedTypeWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v38 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v40 = swift_getAssociatedConformanceWitness();
    v68 = AssociatedTypeWitness;
    v69 = v38;
    v70 = AssociatedConformanceWitness;
    v71 = v40;
    type metadata accessor for FileItemVersion();
  }
  v67 = v26;
  v41 = v66;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v34, v22, a6);
  v42 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v42(v32, v34, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v17, v59, v58);
  v42(v29, v34, a6);
  v52 = v32;
  v53 = v17;
  if ((v60 & 1) != 0)
  {
    v43 = v41;
    v44 = *(void (**)(uint64_t, uint64_t))(v41 + 104);
    v45 = (uint64_t)v55;
    v61 = v44;
    v44(a6, v43);
    v46 = *(void (**)(char *, uint64_t))(v23 + 8);
    v46(v29, a6);
    v47 = *(_BYTE *)(v45 + *(int *)(v56 + 64));
    sub_23AA937BC(v45, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v48 = v67;
    v42(v67, v34, a6);
    v49 = v65;
    if ((v47 & 1) == 0)
    {
      v50 = (uint64_t)v54;
      v61(a6, v43);
      v46(v48, a6);
      v46(v34, a6);
      sub_23AA937BC(v50, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      goto LABEL_8;
    }
  }
  else
  {
    v46 = *(void (**)(char *, uint64_t))(v23 + 8);
    v46(v29, a6);
    v48 = v67;
    v42(v67, v34, a6);
    v49 = v65;
  }
  v46(v48, a6);
  v46(v34, a6);
LABEL_8:
  sub_23AACCF5C((uint64_t)v52, a6, v49);
}

void sub_23AAD0A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v0;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = v3;
  type metadata accessor for ItemLookupResult();
}

void sub_23AAD0A6C(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  JUMPOUT(0x23AAD0ACCLL);
}

uint64_t sub_23AAD0AF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v32 = a2;
  v27 = a4;
  v28 = a3;
  v8 = *v4;
  v9 = *(_QWORD *)(*v4 + 592);
  v29 = *(_QWORD *)(*v4 + 576);
  v30 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v27 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, AssociatedTypeWitness);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  v20 = v29;
  *((_QWORD *)v19 + 2) = *(_QWORD *)(v8 + 568);
  *((_QWORD *)v19 + 3) = v20;
  v21 = v30;
  *((_QWORD *)v19 + 4) = *(_QWORD *)(v8 + 584);
  *((_QWORD *)v19 + 5) = v21;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v16], v14, AssociatedTypeWitness);
  v22 = v31;
  v23 = v32;
  *(_QWORD *)&v19[v17] = v32;
  *(_QWORD *)&v19[v18] = v22;
  v24 = &v19[(v18 + 15) & 0xFFFFFFFFFFFFFFF8];
  v25 = v27;
  *(_QWORD *)v24 = v28;
  *((_QWORD *)v24 + 1) = v25;
  swift_retain_n();
  sub_23AA93780(v23);
  swift_retain();
  sub_23AFABBFC((uint64_t)"propagateToFS(itemID:request:completion:)", 41, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v15, (uint64_t)sub_23AAFB3EC, (uint64_t)v19);
  swift_release();
  return swift_release();
}

void sub_23AAD0CBC(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  char *v43;
  os_log_type_t v44;
  void (*v45)(void);
  void (*v46)(void);
  void (*v47)(void);
  uint64_t v48;
  id v49;
  char *v50;
  double v51;
  double v52;
  double v53;
  void *v54;
  uint64_t v55;
  os_log_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v64 = a4;
  v65 = a5;
  v66 = a3;
  v8 = sub_23B1C5BDC();
  v68 = *(_QWORD *)(v8 - 8);
  v69 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v70 - 8);
  v11 = MEMORY[0x24BDAC7A8](v70);
  v63 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v55 - v13;
  v15 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v16 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a2);
  sub_23AA93780(a2);
  v17 = a1;
  v18 = v15;
  v19 = sub_23B1C5E40();
  v20 = sub_23B1C6A94();
  v21 = v20;
  v22 = os_log_type_enabled(v19, v20);
  v62 = v18;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v58 = v21;
    v25 = v17;
    v26 = (_QWORD *)v24;
    v57 = v24;
    v59 = swift_slowAlloc();
    v72 = v59;
    *(_DWORD *)v23 = 138412802;
    v60 = v10;
    v27 = objc_msgSend(v18, sel_enter);
    v61 = v5;
    v28 = v27;
    v71 = (uint64_t)v27;
    v56 = v19;
    sub_23B1C6CBC();
    *v26 = v28;
    v17 = v25;

    *(_WORD *)(v23 + 12) = 2080;
    v29 = sub_23AA7B734();
    v71 = sub_23AABEC68(v29, v30, &v72);
    sub_23B1C6CBC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    sub_23AE5DE58(a2);
    v32 = v31;
    v34 = v33;
    sub_23AAB47B0(a2);
    v71 = sub_23AABEC68(v32, v34, &v72);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a2);
    v35 = v56;
    _os_log_impl(&dword_23AA66000, v56, (os_log_type_t)v58, "%@ 🥄 Request to propagate item with ID %s for %s", (uint8_t *)v23, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    v36 = v57;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v36, -1, -1);
    v37 = v59;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v37, -1, -1);
    MEMORY[0x23B8614BC](v23, -1, -1);

    v38 = *(void (**)(char *, uint64_t))(v60 + 8);
  }
  else
  {
    sub_23AAB47B0(a2);

    sub_23AAB47B0(a2);
    v38 = *(void (**)(char *, uint64_t))(v10 + 8);
  }
  v38(v14, v70);
  v39 = sub_23ADF3744(a2);
  v41 = v40;
  v42 = (id)fpfs_current_or_default_log();
  v43 = v63;
  sub_23B1C5E58();
  v44 = sub_23B1C6A94();
  v45 = (void (*)(void))sub_23AA6DC74(v44, (uint64_t)"propagation to FS", 17, 2, v64, v65);
  v47 = v46;
  v38(v43, v70);
  sub_23AAD185C(v17, a2, v41, v45, v47);
  swift_release();
  sub_23AE4F234();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)(v48 + 16) = 0;
  *(_BYTE *)(v48 + 40) = 1;
  *(_OWORD *)(v48 + 48) = 0u;
  *(_OWORD *)(v48 + 64) = 0u;
  *(_QWORD *)(v48 + 80) = 0;
  *(_QWORD *)(v48 + 112) = v39;
  *(_QWORD *)(v48 + 120) = v41;
  *(_QWORD *)(v48 + 128) = 0x800000;
  *(_QWORD *)(v48 + 136) = v17;
  *(_OWORD *)(v48 + 88) = xmmword_23B1CA750;
  *(_BYTE *)(v48 + 104) = 0;
  v49 = v17;
  sub_23AAAE478((id)0x40100, 0, 0);
  sub_23AAAEE10((void *)0x40100, 0, 0);
  v50 = v67;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v52 = v51;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v69);
  v53 = v52 * 1000000000.0;
  if ((~COERCE__INT64(v52 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v53 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v53 < 9.22337204e18)
  {
    sub_23ADF3A98(v48, (uint64_t)v53);
    swift_release();
    swift_release();
    v54 = v62;
    sub_23AAD2D6C(v62);

    return;
  }
LABEL_10:
  __break(1u);
}

void sub_23AAD11E8(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  void (*v24)(char *, uint64_t, uint64_t);
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  void *v35;
  id v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  id v43;
  char *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[5];

  v58 = a4;
  v59 = a5;
  v62 = a3;
  v7 = *a3;
  v8 = sub_23B1C5BDC();
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v7 + 592);
  v54 = v7;
  v11 = *(_QWORD *)(v7 + 576);
  v68 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v52 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - v16;
  v67 = sub_23B1C5E4C();
  v56 = *(_QWORD *)(v67 - 8);
  v18 = MEMORY[0x24BDAC7A8](v67);
  v57 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v46 - v20;
  v22 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v23 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v63 = a1;
  v24(v17, a1, AssociatedTypeWitness);
  sub_23AA93780(a2);
  sub_23AA93780(a2);
  v25 = v22;
  v55 = v21;
  v26 = sub_23B1C5E40();
  v27 = sub_23B1C6A94();
  v28 = v27;
  v29 = os_log_type_enabled(v26, v27);
  v53 = v25;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v60 = v11;
    v31 = v30;
    v32 = swift_slowAlloc();
    v47 = v13;
    v33 = (_QWORD *)v32;
    v49 = v32;
    v51 = swift_slowAlloc();
    v70[0] = v51;
    *(_DWORD *)v31 = 138412802;
    v50 = v26;
    v34 = objc_msgSend(v25, sel_enter);
    v48 = v28;
    v35 = v25;
    v36 = v34;
    v69 = (uint64_t)v34;
    v61 = a2;
    sub_23B1C6CBC();
    *v33 = v36;

    *(_WORD *)(v31 + 12) = 2080;
    v37 = v52;
    v24(v52, (uint64_t)v17, AssociatedTypeWitness);
    v38 = *(void (**)(char *, uint64_t))(v47 + 8);
    v38(v17, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    v39 = sub_23B1C7304();
    v41 = v40;
    v38(v37, AssociatedTypeWitness);
    v69 = sub_23AABEC68(v39, v41, v70);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2080;
    sub_23AF9E228();
  }
  sub_23AAB47B0(a2);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, AssociatedTypeWitness);

  sub_23AAB47B0(a2);
  v42 = *(void (**)(char *, uint64_t))(v56 + 8);
  v42(v55, v67);
  v61 = sub_23AF9D794(a2, v11, *(_QWORD *)(v54 + 568), v68, *(_QWORD *)(v54 + 584));
  v43 = (id)fpfs_current_or_default_log();
  v44 = v57;
  sub_23B1C5E58();
  v45 = sub_23B1C6A94();
  sub_23AA6DC74(v45, (uint64_t)"propagation to FS", 17, 2, v58, v59);
  v42(v44, v67);
  sub_23AFAB2E4();
}

void sub_23AAD1740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = swift_release();
  sub_23AFABBF8(v4);
  *(_QWORD *)(v3 - 120) = v2;
  *(_QWORD *)(v3 - 112) = v1;
  *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v3 - 96) = v0;
  type metadata accessor for Ingestion.FetchItemMetadata();
}

void sub_23AAD1768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B126E1C(v1, *(_QWORD *)(v2 - 192), v0, 0x800000);
}

void sub_23AAD1780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  void *v7;

  v3 = *(_QWORD *)(v1 - 168);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v5 = v4;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v3, *(_QWORD *)(v1 - 152));
  v6 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 9.22337204e18)
  {
    sub_23AEBEFD4(a1);
    swift_release();
    swift_release();
    v7 = *(void **)(v1 - 264);
    sub_23AAD2D6C(v7);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_23AAD185C(void *a1, unint64_t a2, unint64_t a3, void (*a4)(void), void (*a5)(void))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  char v33;
  char v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (**v45)(void);
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t *, uint64_t);
  void (*v50)(void);
  void (*v51)(void);
  _QWORD *v52;
  uint64_t v53;
  uint64_t *v54;
  char v55;
  void *v56;
  void (*v57)(void);
  void (*v58)(void);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  void (**v63)(void);
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  unint64_t *v68;
  _QWORD *v69;
  uint64_t v70;
  id v71;
  char isUniquelyReferenced_nonNull_native;
  char v73;
  uint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  char *v85;
  _QWORD *v86;
  unint64_t *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(void);
  void (*v97)(void);
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;

  v96 = a4;
  v97 = a5;
  v95 = a3;
  v98 = a2;
  v92 = a1;
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF200);
  v89 = *(_QWORD *)(v91 - 8);
  v6 = *(_QWORD *)(v89 + 64);
  v7 = MEMORY[0x24BDAC7A8](v91);
  v8 = (uint64_t *)((char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v86 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v85 = (char *)&v82 - v13;
  v93 = sub_23B1C6050();
  v14 = *(_QWORD *)(v93 - 8);
  v15 = MEMORY[0x24BDAC7A8](v93);
  v88 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v84 = (char *)&v82 - v17;
  v94 = sub_23B1C60A4();
  v90 = *(_QWORD *)(v94 - 8);
  v18 = MEMORY[0x24BDAC7A8](v94);
  v20 = (uint64_t *)((char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v82 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v87 = v8;
  v24 = sub_23B1C60EC();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (uint64_t *)((char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = *(void **)(v5 + 64);
  *v27 = v28;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BEE5610], v24);
  v29 = v28;
  LOBYTE(v28) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v27, v24);
  if ((v28 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (*(_BYTE *)(v5 + 152) == 1)
  {
    v23 = (char *)(id)FPDomainUnavailableError();
    v96();
LABEL_24:

    return;
  }
  v30 = v5 + qword_2542EE000;
  swift_beginAccess();
  v31 = *(_QWORD *)(*(_QWORD *)v30 + 16);
  v32 = v92;
  v83 = (uint64_t *)v30;
  if (v31)
  {
    swift_bridgeObjectRetain();
    sub_23AA88CF8(v32);
    v34 = v33;
    swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
    {
      v35 = v32;
      sub_23AA93780(v98);
      qos_class_self();
      v36 = (uint64_t)v85;
      sub_23B1C6038();
      v37 = v93;
      v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v36, 1, v93);
      v92 = v35;
      if (v38 == 1)
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v84, *MEMORY[0x24BEE5498], v37);
        sub_23AA8A05C(v36, qword_2542E02D0);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v84, v36, v37);
      }
      v58 = v96;
      v57 = v97;
      v59 = v90;
      v60 = v91;
      sub_23B1C608C();
      v61 = v86;
      v62 = (char *)v86 + *(int *)(v60 + 64);
      v63 = (void (**)(void))((char *)v86 + *(int *)(v60 + 80));
      v64 = v98;
      v65 = v94;
      v66 = v95;
      *v86 = v98;
      v61[1] = v66;
      v67 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      v67(v62, v23, v65);
      *v63 = v58;
      v63[1] = v57;
      v68 = v87;
      *v87 = v64;
      v68[1] = v66;
      v67((char *)v68 + *(int *)(v60 + 64), v62, v65);
      v69 = (unint64_t *)((char *)v68 + *(int *)(v60 + 80));
      v70 = swift_allocObject();
      *(_QWORD *)(v70 + 16) = v58;
      *(_QWORD *)(v70 + 24) = v57;
      *v69 = sub_23AB0008C;
      v69[1] = v70;
      v20 = v83;
      swift_beginAccess();
      v71 = v92;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v100 = *v20;
      v5 = v100;
      *v20 = 0x8000000000000000;
      v23 = (char *)v71;
      v14 = sub_23AA88CF8(v23);
      v74 = *(_QWORD *)(v5 + 16);
      v75 = (v73 & 1) == 0;
      v76 = v74 + v75;
      if (!__OFADD__(v74, v75))
      {
        v77 = v73;
        if (*(_QWORD *)(v5 + 24) >= v76)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v73 & 1) == 0)
              goto LABEL_29;
          }
          else
          {
            sub_23B187724();
            if ((v77 & 1) == 0)
              goto LABEL_29;
          }
        }
        else
        {
          sub_23AD11918(v76, isUniquelyReferenced_nonNull_native);
          v78 = sub_23AA88CF8(v23);
          if ((v77 & 1) != (v79 & 1))
          {
LABEL_30:
            type metadata accessor for NSFileProviderItemIdentifier(0);
            sub_23B1C7418();
            __break(1u);
            return;
          }
          v14 = v78;
          if ((v77 & 1) == 0)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
        }
        v5 = *(_QWORD *)(*(_QWORD *)(v100 + 56) + 8 * v14);
        v99 = v5;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
LABEL_21:
          v81 = *(_QWORD *)(v5 + 16);
          v80 = *(_QWORD *)(v5 + 24);
          if (v81 >= v80 >> 1)
            v5 = sub_23AF98978(v80 > 1, v81 + 1, 1, v5);
          *(_QWORD *)(v5 + 16) = v81 + 1;
          sub_23AA724E8((uint64_t)v87, v5+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v81, &qword_2542DF200);
          v99 = v5;
          sub_23B18CD60((uint64_t *)&v99, 1, &v100, v14, v23);

          swift_bridgeObjectRelease();
          *v20 = v100;

          swift_endAccess();
          goto LABEL_24;
        }
LABEL_27:
        v5 = sub_23AF98978(0, *(_QWORD *)(v5 + 16) + 1, 1, v5);
        goto LABEL_21;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6450);
  v39 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_23B1CA760;
  v89 = v40;
  v41 = (unint64_t *)(v40 + v39);
  v92 = v32;
  sub_23AA93780(v98);
  qos_class_self();
  sub_23B1C6038();
  v42 = v93;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v93) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v88, *MEMORY[0x24BEE5498], v42);
    sub_23AA8A05C((uint64_t)v12, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v88, v12, v42);
  }
  sub_23B1C608C();
  v43 = v91;
  v44 = (char *)v8 + *(int *)(v91 + 64);
  v45 = (void (**)(void))((char *)v8 + *(int *)(v91 + 80));
  v46 = v98;
  v47 = v94;
  v48 = v95;
  *v8 = v98;
  v8[1] = v48;
  v49 = *(void (**)(char *, uint64_t *, uint64_t))(v90 + 32);
  v49(v44, v20, v47);
  v51 = v96;
  v50 = v97;
  *v45 = v96;
  v45[1] = v50;
  *v41 = v46;
  v41[1] = v48;
  v49((char *)v41 + *(int *)(v43 + 64), (uint64_t *)v44, v47);
  v52 = (unint64_t *)((char *)v41 + *(int *)(v43 + 80));
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = v51;
  *(_QWORD *)(v53 + 24) = v50;
  *v52 = sub_23AB0008C;
  v52[1] = v53;
  v54 = v83;
  swift_beginAccess();
  swift_retain();
  v55 = swift_isUniquelyReferenced_nonNull_native();
  v100 = *v54;
  *v54 = 0x8000000000000000;
  v56 = v92;
  sub_23AD25230(v89, v92, v55);
  *v54 = v100;

  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t sub_23AAD2010(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v31 = a2;
  v26 = a4;
  v27 = a3;
  v8 = *v4;
  v9 = *(_QWORD *)(*v4 + 584);
  v28 = *(_QWORD *)(*v4 + 568);
  v29 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v26 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, AssociatedTypeWitness);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = v28;
  v20 = v29;
  *((_QWORD *)v19 + 3) = *(_QWORD *)(v8 + 576);
  *((_QWORD *)v19 + 4) = v20;
  *((_QWORD *)v19 + 5) = *(_QWORD *)(v8 + 592);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v16], v14, AssociatedTypeWitness);
  v21 = v30;
  v22 = v31;
  *(_QWORD *)&v19[v17] = v31;
  *(_QWORD *)&v19[v18] = v21;
  v23 = &v19[(v18 + 15) & 0xFFFFFFFFFFFFFFF8];
  v24 = v26;
  *(_QWORD *)v23 = v27;
  *((_QWORD *)v23 + 1) = v24;
  swift_retain_n();
  sub_23AA93780(v22);
  swift_retain();
  sub_23AFABBFC((uint64_t)"propagateToFP(itemID:request:completion:)", 41, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v15, (uint64_t)sub_23AAFAB1C, (uint64_t)v19);
  swift_release();
  return swift_release();
}

void sub_23AAD21E0(uint64_t a1, int a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  os_log_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  char *v40;
  os_log_type_t v41;
  void (*v42)(void);
  void (*v43)(void);
  void (*v44)(void);
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  double v49;
  double v50;
  double v51;
  void *v52;
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v61 = a5;
  v65 = a4;
  v66 = a2;
  v67 = a1;
  v8 = sub_23B1C5BDC();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v60 - 8);
  v11 = MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v53 - v13;
  v15 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v16 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a3);
  sub_23AA93780(a3);
  v17 = v15;
  v18 = sub_23B1C5E40();
  v19 = sub_23B1C6A94();
  v20 = os_log_type_enabled(v18, v19);
  v58 = v17;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    v69 = v56;
    *(_DWORD *)v21 = 138412802;
    v57 = a6;
    v23 = objc_msgSend(v17, sel_enter);
    v54 = v18;
    v55 = v10;
    v24 = v23;
    v68 = (uint64_t)v23;
    sub_23B1C6CBC();
    *v22 = v24;

    *(_WORD *)(v21 + 12) = 2080;
    v25 = sub_23AA96F18(v67, v66);
    v68 = sub_23AABEC68(v25, v26, &v69);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    sub_23AE5BC48(a3);
    v28 = v27;
    v30 = v29;
    sub_23AAB47B0(a3);
    v31 = v28;
    a6 = v57;
    v68 = sub_23AABEC68(v31, v30, &v69);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a3);
    v32 = v54;
    _os_log_impl(&dword_23AA66000, v54, v19, "%@ 🥄 Request to propagate item with ID %s for %s", (uint8_t *)v21, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v22, -1, -1);
    v33 = v56;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v33, -1, -1);
    MEMORY[0x23B8614BC](v21, -1, -1);

    v34 = *(void (**)(char *, uint64_t))(v55 + 8);
  }
  else
  {
    sub_23AAB47B0(a3);

    sub_23AAB47B0(a3);
    v34 = *(void (**)(char *, uint64_t))(v10 + 8);
  }
  v35 = v60;
  v34(v14, v60);
  v36 = sub_23ADF3730(a3);
  v38 = v37;
  v39 = (id)fpfs_current_or_default_log();
  v40 = v59;
  sub_23B1C5E58();
  v41 = sub_23B1C6A94();
  v42 = (void (*)(void))sub_23AA6DC74(v41, (uint64_t)"propagation to FP", 17, 2, v61, a6);
  v44 = v43;
  v34(v40, v35);
  v45 = v67;
  v46 = v66;
  sub_23AAD2F24(v67, v66, a3, v38, v42, v44);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
  v47 = swift_allocObject();
  *(_BYTE *)(v47 + 144) = v46;
  *(_QWORD *)(v47 + 24) = 0;
  *(_QWORD *)(v47 + 32) = 0;
  *(_QWORD *)(v47 + 16) = 0;
  *(_BYTE *)(v47 + 40) = 1;
  *(_OWORD *)(v47 + 48) = 0u;
  *(_OWORD *)(v47 + 64) = 0u;
  *(_QWORD *)(v47 + 80) = 0;
  *(_QWORD *)(v47 + 112) = v36;
  *(_QWORD *)(v47 + 120) = v38;
  *(_QWORD *)(v47 + 128) = 0x800000;
  *(_QWORD *)(v47 + 136) = v45;
  *(_OWORD *)(v47 + 88) = xmmword_23B1CA750;
  *(_BYTE *)(v47 + 104) = 0;
  sub_23AAAEE10((void *)0x40100, 0, 0);
  v48 = v62;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v50 = v49;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v64);
  v51 = v50 * 1000000000.0;
  if ((~COERCE__INT64(v50 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v51 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v51 < 9.22337204e18)
  {
    sub_23ADF3A98(v47, (uint64_t)v51);
    swift_release();
    v52 = v58;
    sub_23AAD2D6C(v58);

    return;
  }
LABEL_10:
  __break(1u);
}

void sub_23AAD26E4(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t);
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  id v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(char *, unint64_t);
  unint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  os_log_type_t v44;
  _QWORD v45[2];
  int v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  char *v50;
  id v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[5];

  v59 = a4;
  v60 = a5;
  v65 = a3;
  v7 = *a3;
  v8 = sub_23B1C5BDC();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v7 + 584);
  v53 = v7;
  v54 = *(_QWORD *)(v7 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v50 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v45 - v15;
  v58 = sub_23B1C5E4C();
  v56 = *(_QWORD *)(v58 - 8);
  v17 = MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v45 - v19;
  v21 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v22 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v61 = a1;
  v23(v16, a1, AssociatedTypeWitness);
  sub_23AA93780(a2);
  sub_23AA93780(a2);
  v24 = v21;
  v55 = v20;
  v25 = sub_23B1C5E40();
  v26 = sub_23B1C6A94();
  v27 = v26;
  v28 = os_log_type_enabled(v25, v26);
  v66 = v10;
  v51 = v24;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v45[0] = v12;
    v31 = (_QWORD *)v30;
    v47 = v30;
    v49 = swift_slowAlloc();
    v68[0] = v49;
    *(_DWORD *)v29 = 138412802;
    v48 = v25;
    v32 = objc_msgSend(v24, sel_enter);
    v46 = v27;
    v52 = a2;
    v33 = v32;
    v67 = (uint64_t)v32;
    v45[1] = v68;
    sub_23B1C6CBC();
    *v31 = v33;

    *(_WORD *)(v29 + 12) = 2080;
    v34 = v50;
    v23(v50, (uint64_t)v16, AssociatedTypeWitness);
    v35 = *(void (**)(char *, uint64_t))(v45[0] + 8);
    v35(v16, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    v36 = sub_23B1C7304();
    v38 = v37;
    v35(v34, AssociatedTypeWitness);
    v67 = sub_23AABEC68(v36, v38, v68);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2080;
    sub_23AF9E228();
  }
  sub_23AAB47B0(a2);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, AssociatedTypeWitness);

  sub_23AAB47B0(a2);
  v39 = *(void (**)(char *, unint64_t))(v56 + 8);
  v40 = v58;
  v39(v55, v58);
  v41 = *(_QWORD *)(v53 + 592);
  v56 = *(_QWORD *)(v53 + 576);
  v58 = sub_23AF9D794(a2, v54, v56, v10, v41);
  v42 = (id)fpfs_current_or_default_log();
  v43 = v57;
  sub_23B1C5E58();
  v44 = sub_23B1C6A94();
  sub_23AA6DC74(v44, (uint64_t)"propagation to FP", 17, 2, v59, v60);
  v39(v43, v40);
  sub_23AFAC27C();
}

void sub_23AAD2C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release();
  v3 = *(_QWORD *)(v2 - 216);
  *(_QWORD *)(v2 - 120) = v0;
  *(_QWORD *)(v2 - 112) = v3;
  *(_QWORD *)(v2 - 104) = *(_QWORD *)(v2 - 136);
  *(_QWORD *)(v2 - 96) = v1;
  type metadata accessor for Ingestion.FetchItemMetadata();
}

void sub_23AAD2C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B126E1C(v1, *(_QWORD *)(v2 - 200), v0, 0x800000);
}

void sub_23AAD2C98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  void *v7;

  v3 = *(_QWORD *)(v1 - 168);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v5 = v4;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v3, *(_QWORD *)(v1 - 152));
  v6 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 9.22337204e18)
  {
    sub_23AEBEFD4(a1);
    swift_release();
    v7 = *(void **)(v1 - 264);
    sub_23AAD2D6C(v7);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_23AAD2D6C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint8_t *v14;
  _QWORD v16[2];

  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v7 = a1;
  v8 = sub_23B1C5E40();
  v9 = sub_23B1C6A94();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v16[0] = v2;
    v11 = (uint8_t *)v10;
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = -[NSObject leave](v7, sel_leave);
    v16[1] = v13;
    sub_23B1C6CBC();
    *v12 = v13;

    _os_log_impl(&dword_23AA66000, v8, v9, "%@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v12, -1, -1);
    v14 = v11;
    v2 = v16[0];
    MEMORY[0x23B8614BC](v14, -1, -1);
  }
  else
  {

    v8 = v7;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_23AAD2F24(uint64_t a1, int a2, unint64_t a3, unint64_t a4, void (*a5)(void), void (*a6)(void))
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  id v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  char *v44;
  void (**v45)(void);
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  void (*v48)(void);
  void (*v49)(void);
  _QWORD *v50;
  uint64_t v51;
  unint64_t *v52;
  char isUniquelyReferenced_nonNull_native;
  void (*v54)(void);
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  void (**v60)(void);
  uint64_t v61;
  unint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  void (*v64)(void);
  unint64_t *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t *v83;
  char *v84;
  _QWORD *v85;
  unint64_t *v86;
  unint64_t *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(void);
  void (*v97)(void);
  uint64_t v98;
  int v99;
  unint64_t v100;

  v96 = a6;
  v97 = a5;
  v93 = a4;
  v95 = a3;
  v99 = a2;
  v98 = a1;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F0);
  v89 = *(_QWORD *)(v94 - 8);
  v7 = *(_QWORD *)(v89 + 64);
  v8 = MEMORY[0x24BDAC7A8](v94);
  v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v87 = (unint64_t *)((char *)&v82 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v85 = (uint64_t *)((char *)&v82 - v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v82 - v14;
  v91 = sub_23B1C6050();
  v16 = *(_QWORD *)(v91 - 8);
  v17 = MEMORY[0x24BDAC7A8](v91);
  v88 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v84 = (char *)&v82 - v19;
  v92 = sub_23B1C60A4();
  v90 = *(_QWORD *)(v92 - 8);
  v20 = MEMORY[0x24BDAC7A8](v92);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v82 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v86 = (unint64_t *)((char *)&v82 - v9);
  v26 = sub_23B1C60EC();
  v27 = *(unint64_t **)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (uint64_t *)((char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = *(void **)(v6 + 64);
  *v29 = v30;
  ((void (*)(_QWORD *, _QWORD, unint64_t))v27[13])(v29, *MEMORY[0x24BEE5610], v26);
  v31 = v30;
  LOBYTE(v30) = sub_23B1C6104();
  ((void (*)(_QWORD *, unint64_t))v27[1])(v29, v26);
  if ((v30 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (*(_BYTE *)(v6 + 152) == 1)
  {
    v32 = (id)FPDomainUnavailableError();
    v97();

    return;
  }
  v33 = v6 + qword_2542EE008;
  swift_beginAccess();
  v83 = (unint64_t *)v33;
  if (!*(_QWORD *)(*(_QWORD *)v33 + 16) || (sub_23AA97254(v98, v99), (v34 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C40);
    v36 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23B1CA760;
    v89 = v37;
    v38 = (unint64_t *)(v37 + v36);
    v39 = v95;
    sub_23AA93780(v95);
    qos_class_self();
    sub_23B1C6038();
    v40 = v91;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v91) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v88, *MEMORY[0x24BEE5498], v40);
      sub_23AA8A05C((uint64_t)v13, qword_2542E02D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v88, v13, v40);
    }
    sub_23B1C608C();
    v42 = v93;
    v41 = v94;
    v43 = v87;
    v44 = (char *)v87 + *(int *)(v94 + 64);
    v45 = (void (**)(void))((char *)v87 + *(int *)(v94 + 80));
    *v87 = v39;
    v43[1] = v42;
    v46 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
    v47 = v92;
    v46(v44, v22, v92);
    v48 = v96;
    v49 = v97;
    *v45 = v97;
    v45[1] = v48;
    *v38 = v39;
    v38[1] = v42;
    v46((char *)v38 + *(int *)(v41 + 64), v44, v47);
    v50 = (unint64_t *)((char *)v38 + *(int *)(v41 + 80));
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = v49;
    *(_QWORD *)(v51 + 24) = v48;
    *v50 = sub_23AAFC250;
    v50[1] = v51;
    v52 = v83;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v100 = *v52;
    *v52 = 0x8000000000000000;
    sub_23AD25380(v89, v98, v99, isUniquelyReferenced_nonNull_native);
    *v52 = v100;
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  sub_23AA93780(v95);
  qos_class_self();
  sub_23B1C6038();
  v35 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v91) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v84, *MEMORY[0x24BEE5498], v35);
    sub_23AA8A05C((uint64_t)v15, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v84, v15, v35);
  }
  v54 = v96;
  v27 = v83;
  v55 = v90;
  sub_23B1C608C();
  v57 = v94;
  v56 = v95;
  v58 = v85;
  v59 = (char *)v85 + *(int *)(v94 + 64);
  v60 = (void (**)(void))((char *)v85 + *(int *)(v94 + 80));
  v61 = v92;
  v62 = v93;
  *v85 = v95;
  v58[1] = v62;
  v63 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v63(v59, v25, v61);
  v64 = v97;
  *v60 = v97;
  v60[1] = v54;
  v65 = v86;
  *v86 = v56;
  v65[1] = v62;
  v66 = v61;
  v16 = (uint64_t)v65;
  v63((char *)v65 + *(int *)(v57 + 64), v59, v66);
  v67 = (_QWORD *)(v16 + *(int *)(v57 + 80));
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = v64;
  *(_QWORD *)(v68 + 24) = v54;
  *v67 = sub_23AB0008C;
  v67[1] = v68;
  swift_beginAccess();
  swift_retain();
  v69 = swift_isUniquelyReferenced_nonNull_native();
  v100 = *v27;
  v6 = v100;
  *v27 = 0x8000000000000000;
  v70 = v98;
  v71 = v99;
  v26 = sub_23AA97254(v98, v99);
  v73 = *(_QWORD *)(v6 + 16);
  v74 = (v72 & 1) == 0;
  v75 = v73 + v74;
  if (__OFADD__(v73, v74))
    goto LABEL_26;
  v76 = v72;
  if (*(_QWORD *)(v6 + 24) >= v75)
  {
    if ((v69 & 1) != 0)
    {
      if ((v72 & 1) != 0)
        goto LABEL_20;
    }
    else
    {
      sub_23B1878CC();
      if ((v76 & 1) != 0)
        goto LABEL_20;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_23AD11C34(v75, v69);
  v77 = sub_23AA97254(v70, v71);
  if ((v76 & 1) == (v78 & 1))
  {
    v26 = v77;
    if ((v76 & 1) == 0)
      goto LABEL_29;
LABEL_20:
    v6 = *(_QWORD *)(*(_QWORD *)(v100 + 56) + 8 * v26);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_21:
      v80 = *(_QWORD *)(v6 + 16);
      v79 = *(_QWORD *)(v6 + 24);
      if (v80 >= v79 >> 1)
        v6 = sub_23AF9898C(v79 > 1, v80 + 1, 1, v6);
      *(_QWORD *)(v6 + 16) = v80 + 1;
      sub_23AA724E8(v16, v6+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v80, &qword_2542DF1F0);
      v81 = v100;
      *(_QWORD *)(*(_QWORD *)(v100 + 56) + 8 * v26) = v6;
      *v27 = v81;
LABEL_24:
      swift_endAccess();
      return;
    }
LABEL_27:
    v6 = sub_23AF9898C(0, *(_QWORD *)(v6 + 16) + 1, 1, v6);
    goto LABEL_21;
  }
LABEL_30:
  sub_23B1C7418();
  __break(1u);
}

uint64_t sub_23AAD3688(uint64_t a1, int a2, int a3, int a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a7;
  v48 = a4;
  LODWORD(v9) = a3;
  LODWORD(v10) = a2;
  v12 = sub_23B1C5E4C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a5);
  sub_23AA93780(a5);
  swift_retain();
  v17 = sub_23B1C5E40();
  v18 = sub_23B1C6A94();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    v41 = v15;
    v42 = v13;
    v40 = v18;
    v43 = v12;
    v44 = v9;
    v45 = a6;
    v46 = v10;
    v10 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v51 = v19;
    *(_DWORD *)v10 = 136315394;
    swift_beginAccess();
    v20 = *(void **)(a1 + 32);
    v21 = *(unsigned __int8 *)(a1 + 40);
    v22 = v47;
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v23 = v20;
      v24 = sub_23AA7B734();
      v26 = v25;
      sub_23AA862DC(v20, v21, 1);
    }
    else
    {
      v24 = sub_23AA96F18(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      v26 = v29;
    }
    v50 = sub_23AABEC68(v24, v26, &v51);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    sub_23AE5DE58(a5);
    v31 = v30;
    v9 = v32;
    sub_23AAB47B0(a5);
    v50 = sub_23AABEC68(v31, v9, &v51);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a5);
    _os_log_impl(&dword_23AA66000, v17, (os_log_type_t)v40, "looking up VFS item for %s request %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v19, -1, -1);
    MEMORY[0x23B8614BC](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
    v27 = v49;
    v28 = v48;
    LOBYTE(v10) = v46;
    a6 = v45;
    LOBYTE(v9) = v44;
  }
  else
  {
    sub_23AAB47B0(a5);
    swift_release();
    sub_23AAB47B0(a5);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v22 = v47;
    v27 = v49;
    v28 = v48;
  }
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = a1;
  *(_QWORD *)(v33 + 24) = a5;
  *(_QWORD *)(v33 + 32) = a6;
  *(_QWORD *)(v33 + 40) = v27;
  *(_BYTE *)(v33 + 48) = v9 & 1;
  *(_QWORD *)(v33 + 56) = v22;
  v34 = v10 & 1;
  *(_BYTE *)(v33 + 64) = v10 & 1;
  v35 = v28 & 1;
  *(_BYTE *)(v33 + 65) = v35;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = a1;
  *(_QWORD *)(v36 + 24) = v22;
  *(_BYTE *)(v36 + 32) = v35;
  *(_BYTE *)(v36 + 33) = v34;
  *(_QWORD *)(v36 + 40) = sub_23AAFCB74;
  *(_QWORD *)(v36 + 48) = v33;
  *(_QWORD *)(v36 + 56) = a5;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_23AAFCB74;
  *(_QWORD *)(v37 + 24) = v33;
  sub_23AA93780(a5);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA93780(a5);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v37, (uint64_t)sub_23AABA3C4, v36);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AAD3A98(uint64_t a1, int a2, int a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD v24[5];
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;

  v28 = a6;
  v27 = a3;
  v29 = a2;
  v12 = sub_23B1C5E4C();
  v25 = *(_QWORD *)(v12 - 8);
  v26 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a5);
  sub_23AA93780(a5);
  swift_retain();
  v16 = sub_23B1C5E40();
  v17 = sub_23B1C6A94();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v24[4] = v7;
    v19 = (_DWORD *)v18;
    v20 = swift_slowAlloc();
    v24[1] = v20;
    v30 = v20;
    *v19 = 136315394;
    v24[3] = a7;
    sub_23AF4E7D4(v20);
  }
  sub_23AAB47B0(a5);
  swift_release();
  sub_23AAB47B0(a5);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v26);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a5;
  *(_QWORD *)(v21 + 32) = v28;
  *(_QWORD *)(v21 + 40) = a7;
  *(_BYTE *)(v21 + 48) = v27 & 1;
  *(_QWORD *)(v21 + 56) = v7;
  v22 = v29 & 1;
  *(_BYTE *)(v21 + 64) = v29 & 1;
  v23 = a4 & 1;
  *(_BYTE *)(v21 + 65) = v23;
  sub_23AA93780(a5);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AACED60(a1, v22, v23, a5, (uint64_t)sub_23AAFB2D4, v21);
}

uint64_t sub_23AAD3D7C()
{
  return swift_release();
}

void sub_23AAD3DA4(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t), uint64_t a5, int a6, uint64_t a7, int a8, char a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  id *v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  char *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t);
  uint64_t v86;
  uint64_t v87;
  id *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;

  v79 = a6;
  v80 = a8;
  v90 = a7;
  v85 = a4;
  v86 = a5;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v84 = *(_QWORD *)(v89 - 8);
  v12 = MEMORY[0x24BDAC7A8](v89);
  v78 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v71 - v14;
  v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  v16 = MEMORY[0x24BDAC7A8](v87);
  v88 = (id *)((char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v16);
  v83 = (uint64_t)&v71 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v71 - v20;
  v22 = sub_23B1C5E4C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA8EFC8(a1, (uint64_t)v21, (uint64_t *)&unk_2542E2190);
  sub_23AA93780(a3);
  sub_23AA93780(a3);
  swift_retain();
  v27 = sub_23B1C5E40();
  v82 = sub_23B1C6A94();
  if (os_log_type_enabled(v27, (os_log_type_t)v82))
  {
    v73 = v27;
    v74 = v23;
    v75 = v22;
    v76 = a1;
    v81 = v15;
    v77 = a3;
    v28 = swift_slowAlloc();
    v72 = swift_slowAlloc();
    v92 = v72;
    *(_DWORD *)v28 = 136315650;
    swift_beginAccess();
    v29 = *(void **)(a2 + 32);
    v30 = *(unsigned __int8 *)(a2 + 40);
    v31 = a2;
    if ((*(_BYTE *)(a2 + 41) & 1) != 0)
    {
      v32 = v29;
      v33 = sub_23AA7B734();
      v35 = v34;
      sub_23AA862DC(v29, v30, 1);
    }
    else
    {
      v33 = sub_23AA96F18(*(_QWORD *)(a2 + 32), *(_BYTE *)(a2 + 40));
      v35 = v37;
    }
    v91 = sub_23AABEC68(v33, v35, &v92);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    a3 = v77;
    sub_23AE5DE58(v77);
    v39 = v38;
    v41 = v40;
    sub_23AAB47B0(a3);
    v91 = sub_23AABEC68(v39, v41, &v92);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a3);
    *(_WORD *)(v28 + 22) = 2080;
    sub_23AA8EFC8((uint64_t)v21, v83, (uint64_t *)&unk_2542E2190);
    v42 = sub_23B1C6434();
    v91 = sub_23AABEC68(v42, v43, &v92);
    a2 = v31;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v21, (uint64_t *)&unk_2542E2190);
    v44 = v73;
    _os_log_impl(&dword_23AA66000, v73, (os_log_type_t)v82, "finished VFS item lookup for %s request %s: %s", (uint8_t *)v28, 0x20u);
    v45 = v72;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v45, -1, -1);
    MEMORY[0x23B8614BC](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v25, v75);
    v36 = v90;
    v15 = v81;
    a1 = v76;
  }
  else
  {
    sub_23AAB47B0(a3);
    swift_release();
    sub_23AAB47B0(a3);
    sub_23AA8A05C((uint64_t)v21, (uint64_t *)&unk_2542E2190);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    v36 = v90;
  }
  v46 = v88;
  sub_23AA8EFC8(a1, (uint64_t)v88, (uint64_t *)&unk_2542E2190);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v48 = v89;
  if (EnumCaseMultiPayload == 1)
  {

LABEL_9:
    v85(a1);
    return;
  }
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v84 + 48))(v46, 1, v89) != 1)
  {
    sub_23AA724E8((uint64_t)v46, (uint64_t)v15, &qword_2542E0F70);
    if ((v15[*(int *)(v48 + 56)] & 1) != 0)
    {
LABEL_14:
      v55 = a2;
      v56 = *(_QWORD *)v15;
      v81 = v15;
      v57 = v15[8];
      if (((a3 >> 1) & 3 | (a3 >> 58) & 0x3C) == 0x1E)
      {
        v58 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF9) + 0x10);
        v59 = v58;
      }
      else
      {
        v65 = swift_allocObject();
        *(_QWORD *)(v65 + 16) = a3;
        v59 = v65 | 0x7000000000000004;
        v58 = a3;
      }
      sub_23AA93780(v58);
      v66 = swift_allocObject();
      *(_QWORD *)(v66 + 16) = v55;
      *(_QWORD *)(v66 + 24) = a3;
      v67 = v86;
      *(_QWORD *)(v66 + 32) = v85;
      *(_QWORD *)(v66 + 40) = v67;
      *(_QWORD *)(v66 + 48) = v36;
      *(_BYTE *)(v66 + 56) = v80 & 1;
      *(_BYTE *)(v66 + 57) = a9 & 1;
      v68 = swift_allocObject();
      *(_QWORD *)(v68 + 16) = sub_23AAFCC6C;
      *(_QWORD *)(v68 + 24) = v66;
      v92 = v56;
      v93 = v57;
      v69 = (_QWORD *)swift_allocObject();
      sub_23AA9F454(&v92, (uint64_t)(v69 + 2));
      v69[4] = v59;
      v69[5] = v36;
      v69[6] = sub_23AAFCC6C;
      v69[7] = v66;
      swift_retain();
      swift_retain();
      sub_23AA93780(a3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_23AA93780(v59);
      sub_23ADF3D40((uint64_t)"propagateToFP(itemID:request:completion:)", 41, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v68, (uint64_t)sub_23AAFC23C, (uint64_t)v69);
      swift_release();
      swift_release();
      swift_release();
      sub_23AAB47B0(v59);
      v70 = (uint64_t)v81;
      goto LABEL_23;
    }
    v60 = v78;
    sub_23AA8EFC8((uint64_t)v15, v78, &qword_2542E0F70);
    if ((v79 & 1) != 0)
    {
      v61 = *(void **)(v60 + *(int *)(v48 + 52));
      v62 = v61;
      v63 = v60;
      v64 = v62;
      sub_23AA8A05C(v63, &qword_2542E0F70);
      if (!v61)
        goto LABEL_14;

    }
    else
    {
      sub_23AA8A05C(v60, &qword_2542E0F70);
    }
    v85(a1);
    v70 = (uint64_t)v15;
LABEL_23:
    sub_23AA8A05C(v70, &qword_2542E0F70);
    return;
  }
  if ((*(_BYTE *)(a2 + 25) & 1) == 0)
    goto LABEL_9;
  v49 = *(void **)(a2 + 16);
  v50 = *(unsigned __int8 *)(a2 + 24);
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = a2;
  *(_QWORD *)(v51 + 24) = a3;
  v52 = v86;
  *(_QWORD *)(v51 + 32) = v85;
  *(_QWORD *)(v51 + 40) = v52;
  *(_QWORD *)(v51 + 48) = v36;
  *(_BYTE *)(v51 + 56) = v80 & 1;
  *(_BYTE *)(v51 + 57) = a9 & 1;
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = sub_23AAFCBC4;
  *(_QWORD *)(v53 + 24) = v51;
  v54 = (_QWORD *)swift_allocObject();
  v54[2] = v49;
  v54[3] = a3;
  v54[4] = v36;
  v54[5] = sub_23AAFCBC4;
  v54[6] = v51;
  sub_23AA93780(a3);
  swift_retain();
  sub_23AA88218(v49, v50, 1);
  swift_retain();
  sub_23AA93780(a3);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA88218(v49, v50, 1);
  sub_23ADF3D40((uint64_t)"propagateToFS(itemID:request:completion:)", 41, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v53, (uint64_t)sub_23AAFCC0C, (uint64_t)v54);
  swift_release();
  swift_release();
  swift_release();
  sub_23AA862DC(v49, v50, 1);
}

void sub_23AAD4634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, _QWORD *a7, int a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[7];
  int v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a8;
  v20 = a6;
  v33 = a4;
  v34 = a5;
  v8 = (_QWORD *)*a7;
  v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 88) - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v21 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(v11 + 80);
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v22 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23B1C6C98();
  v26 = *(_QWORD *)(v27 - 8);
  v13 = MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v19[5] = (char *)v19 - v15;
  v16 = v8[71];
  v17 = v8[73];
  v18 = v8[74];
  v30 = v8[72];
  v31 = v16;
  v35 = v16;
  v36 = v30;
  v32 = v17;
  v37 = v17;
  v38 = v18;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAD47A4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  id v24;
  void (*v25)(id *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(id *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  void (*v34)(id *, uint64_t, uint64_t);
  id *v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  int v48;
  uint64_t v49;
  int v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[96];

  *(_QWORD *)(v7 - 232) = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v7 - 352) = &v60[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v7 - 168) = &v60[-v10];
  *(_QWORD *)(v7 - 160) = v11;
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v12 = v1;
  v13 = sub_23B1C74F0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v7 - 176) = &v60[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v7 - 240) = &v60[-v18];
  MEMORY[0x24BDAC7A8](v17);
  v20 = (id *)&v60[-v19];
  v21 = sub_23B1C5E4C();
  *(_QWORD *)(v7 - 192) = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v7 - 184) = v21;
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v60[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  *(_QWORD *)(v7 - 200) = v14;
  v25 = *(void (**)(id *, uint64_t, uint64_t))(v14 + 16);
  *(_QWORD *)(v7 - 152) = v6;
  v26 = v6;
  v27 = v25;
  v25(v20, v26, v13);
  sub_23AA93780(v2);
  sub_23AA93780(v2);
  swift_retain();
  v28 = sub_23B1C5E40();
  v29 = sub_23B1C6A94();
  *(_DWORD *)(v7 - 244) = v29;
  v30 = os_log_type_enabled(v28, v29);
  *(_QWORD *)(v7 - 264) = v2;
  *(_QWORD *)(v7 - 328) = v3;
  if (v30)
  {
    v31 = swift_slowAlloc();
    *(_QWORD *)(v7 - 368) = v4;
    v32 = (_DWORD *)v31;
    v33 = swift_slowAlloc();
    *(_QWORD *)(v7 - 384) = v33;
    *(_QWORD *)(v7 - 120) = v33;
    *v32 = 136315650;
    *(_QWORD *)(v7 - 400) = v27;
    *(_QWORD *)(v7 - 392) = v28;
    sub_23AF4E7D4(v33);
  }
  sub_23AAB47B0(v2);
  swift_release();
  sub_23AAB47B0(v2);
  (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 200) + 8))(v20, v13);

  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v7 - 192) + 8))(v23, *(_QWORD *)(v7 - 184));
  v34 = v27;
  v35 = *(id **)(v7 - 176);
  v36 = *(_QWORD *)(v7 - 152);
  v34(v35, v36, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v38 = *(_QWORD *)(v7 - 168);
  v39 = *(_QWORD *)(v7 - 160);
  if (EnumCaseMultiPayload == 1)
  {

    return (*(uint64_t (**)(uint64_t))(v7 - 144))(v36);
  }
  v40 = *(unsigned __int8 *)(v7 + 16);
  v41 = *(_QWORD *)(v7 - 232);
  if ((*(unsigned int (**)(id *, uint64_t, _QWORD))(v41 + 48))(v35, 1, *(_QWORD *)(v7 - 160)) == 1)
    sub_23AF4ED18();
  *(_DWORD *)(v7 - 184) = v40;
  (*(void (**)(uint64_t, id *, uint64_t))(v41 + 32))(v38, v35, v39);
  v43 = *(_QWORD *)(v7 - 208);
  if ((*(_BYTE *)(v38 + *(int *)(v39 + 56)) & 1) != 0)
    goto LABEL_11;
  v44 = *(_QWORD *)(v7 - 352);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v44, v38, v39);
  if ((*(_DWORD *)(v7 - 340) & 1) != 0)
  {
    v45 = *(_QWORD *)(v7 - 360);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 288) + 16))(v45, v44 + *(int *)(v39 + 52), *(_QWORD *)(v7 - 280));
    v46 = v44;
    v47 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v47(v46, v39);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 256) + 48))(v45, 1, v5);
    v49 = v12;
    v50 = v48;
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 288) + 8))(v45, *(_QWORD *)(v7 - 280));
    v51 = v50 == 1;
    v12 = v49;
    if (!v51)
      goto LABEL_13;
LABEL_11:
    v52 = v38;
    v53 = *(_QWORD *)(v7 - 320);
    (*(void (**)(_QWORD, uint64_t))(v43 + 64))(*(_QWORD *)(v7 - 216), v43);
    v54 = *(_QWORD *)(v7 - 264);
    v55 = v12;
    v56 = sub_23AF9DA80(v54);
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v55;
    *(_QWORD *)(v57 + 24) = v54;
    v58 = *(_QWORD *)(v7 - 136);
    *(_QWORD *)(v57 + 32) = *(_QWORD *)(v7 - 144);
    *(_QWORD *)(v57 + 40) = v58;
    *(_QWORD *)(v57 + 48) = v4;
    *(_BYTE *)(v57 + 56) = *(_DWORD *)(v7 - 268) & 1;
    *(_BYTE *)(v57 + 57) = *(_DWORD *)(v7 - 184) & 1;
    sub_23AA93780(v54);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AAD2010(v53, v56, (uint64_t)sub_23AAFB2F4, v57);
    swift_release();
    sub_23AAB47B0(v56);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 312) + 8))(v53, *(_QWORD *)(v7 - 304));
    return (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v52, v39);
  }
  v59 = v44;
  v47 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v47(v59, v39);
LABEL_13:
  (*(void (**)(uint64_t))(v7 - 144))(v36);
  return ((uint64_t (*)(uint64_t, uint64_t))v47)(v38, v39);
}

uint64_t sub_23AAD4F5C(void *a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  id v34;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void (*v55)(_QWORD);
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v57 = a8;
  v58 = a7;
  v59 = a5;
  v60 = a6;
  v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v56);
  v13 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_23B1C5E4C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain();
  sub_23AA93780(a3);
  v19 = a1;
  swift_retain();
  sub_23AA93780(a3);
  v20 = a1;
  v21 = sub_23B1C5E40();
  v22 = sub_23B1C6A94();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    v50 = v22;
    v51 = v21;
    v52 = v15;
    v53 = v14;
    v55 = a4;
    v23 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v62 = v49;
    *(_DWORD *)v23 = 136315650;
    swift_beginAccess();
    v24 = *(void **)(a2 + 32);
    v25 = *(unsigned __int8 *)(a2 + 40);
    if ((*(_BYTE *)(a2 + 41) & 1) != 0)
    {
      v26 = v24;
      v27 = sub_23AA7B734();
      v29 = v28;
      sub_23AA862DC(v24, v25, 1);
    }
    else
    {
      v27 = sub_23AA96F18(*(_QWORD *)(a2 + 32), *(_BYTE *)(a2 + 40));
      v29 = v36;
    }
    swift_release();
    v61 = sub_23AABEC68(v27, v29, &v62);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    v54 = v13;
    *(_WORD *)(v23 + 12) = 2080;
    sub_23AE5DE58(a3);
    v38 = v37;
    v40 = v39;
    sub_23AAB47B0(a3);
    v61 = sub_23AABEC68(v38, v40, &v62);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a3);
    *(_WORD *)(v23 + 22) = 2080;
    v61 = (uint64_t)a1;
    v41 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7700);
    v42 = sub_23B1C6434();
    v61 = sub_23AABEC68(v42, v43, &v62);
    v13 = v54;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();

    v44 = v51;
    _os_log_impl(&dword_23AA66000, v51, (os_log_type_t)v50, "finished propagating to FP %s request %s: %s", (uint8_t *)v23, 0x20u);
    v45 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v45, -1, -1);
    MEMORY[0x23B8614BC](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v53);
    v30 = v59;
    v31 = v60;
    v32 = v58;
    a4 = v55;
    v33 = v57;
    if (!a1)
      goto LABEL_8;
LABEL_5:
    *v13 = a1;
    swift_storeEnumTagMultiPayload();
    v34 = a1;
    a4(v13);
    return sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E2190);
  }
  sub_23AAB47B0(a3);
  swift_release_n();
  sub_23AAB47B0(a3);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v30 = v59;
  v31 = v60;
  v32 = v58;
  v33 = v57;
  if (a1)
    goto LABEL_5;
LABEL_8:
  v46 = (_QWORD *)swift_allocObject();
  v46[2] = a2;
  v46[3] = a3;
  v46[4] = a4;
  v46[5] = v30;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = a2;
  *(_QWORD *)(v47 + 24) = v31;
  *(_BYTE *)(v47 + 32) = v33 & 1;
  *(_BYTE *)(v47 + 33) = v32 & 1;
  *(_QWORD *)(v47 + 40) = sub_23AAFCC9C;
  *(_QWORD *)(v47 + 48) = v46;
  *(_QWORD *)(v47 + 56) = a3;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_23AAFCC9C;
  *(_QWORD *)(v48 + 24) = v46;
  swift_retain();
  sub_23AA93780(a3);
  swift_retain();
  swift_retain();
  sub_23AA93780(a3);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v48, (uint64_t)sub_23AABA3C4, v47);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AAD545C()
{
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAD54C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  void (*v29)(_QWORD *);
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[96];

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v9 = v0;
  v10 = sub_23B1C74F0();
  *(_QWORD *)(v8 - 184) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 - 176) = v10;
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v8 - 192) = &v34[-v11];
  v12 = sub_23B1C5E4C();
  *(_QWORD *)(v8 - 168) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 - 160) = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain();
  sub_23AA93780(v2);
  v16 = v6;
  swift_retain();
  sub_23AA93780(v2);
  v17 = v6;
  v18 = sub_23B1C5E40();
  v19 = sub_23B1C6A94();
  *(_DWORD *)(v8 - 196) = v19;
  v20 = os_log_type_enabled(v18, v19);
  *(_QWORD *)(v8 - 216) = v5;
  *(_QWORD *)(v8 - 208) = v4;
  *(_QWORD *)(v8 - 224) = v9;
  if (v20)
  {
    v21 = swift_slowAlloc();
    *(_QWORD *)(v8 - 240) = v3;
    v22 = (_DWORD *)v21;
    v23 = swift_slowAlloc();
    *(_QWORD *)(v8 - 256) = v23;
    *(_QWORD *)(v8 - 120) = v23;
    *v22 = 136315650;
    *(_DWORD *)(v8 - 244) = v7;
    *(_QWORD *)(v8 - 264) = v18;
    sub_23AF4E7D4(v23);
  }
  sub_23AAB47B0(v2);
  swift_release_n();
  sub_23AAB47B0(v2);

  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v8 - 168) + 8))(v14, *(_QWORD *)(v8 - 160));
  v28 = *(_QWORD *)(v8 - 144);
  v29 = *(void (**)(_QWORD *))(v8 - 136);
  v30 = *(_QWORD *)(v8 - 152);
  if (!v6)
  {
    v31 = (_QWORD *)swift_allocObject();
    v32 = *(_QWORD *)(v8 - 216);
    v31[2] = *(_QWORD *)(v8 - 208);
    v31[3] = v32;
    v31[4] = v28;
    v31[5] = v30;
    v33 = *(_QWORD *)(v8 - 224);
    v31[6] = v33;
    v31[7] = v2;
    v31[8] = v29;
    v31[9] = v1;
    swift_retain();
    sub_23AA93780(v2);
    swift_retain();
    sub_23AACED60(v33, *(_DWORD *)(v8 - 200) & 1, v7 & 1, v2, (uint64_t)sub_23AAFB304, (uint64_t)v31);
  }
  v24 = *(_QWORD **)(v8 - 192);
  *v24 = v6;
  v25 = *(_QWORD *)(v8 - 176);
  swift_storeEnumTagMultiPayload();
  v26 = v6;
  v29(v24);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 184) + 8))(v24, v25);
}

uint64_t sub_23AAD591C(void *a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  id v34;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void (*v55)(_QWORD);
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v57 = a8;
  v58 = a7;
  v59 = a5;
  v60 = a6;
  v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v56);
  v13 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_23B1C5E4C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain();
  sub_23AA93780(a3);
  v19 = a1;
  swift_retain();
  sub_23AA93780(a3);
  v20 = a1;
  v21 = sub_23B1C5E40();
  v22 = sub_23B1C6A94();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    v50 = v22;
    v51 = v21;
    v52 = v15;
    v53 = v14;
    v55 = a4;
    v23 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v62 = v49;
    *(_DWORD *)v23 = 136315650;
    swift_beginAccess();
    v24 = *(void **)(a2 + 32);
    v25 = *(unsigned __int8 *)(a2 + 40);
    if ((*(_BYTE *)(a2 + 41) & 1) != 0)
    {
      v26 = v24;
      v27 = sub_23AA7B734();
      v29 = v28;
      sub_23AA862DC(v24, v25, 1);
    }
    else
    {
      v27 = sub_23AA96F18(*(_QWORD *)(a2 + 32), *(_BYTE *)(a2 + 40));
      v29 = v36;
    }
    swift_release();
    v61 = sub_23AABEC68(v27, v29, &v62);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    v54 = v13;
    *(_WORD *)(v23 + 12) = 2080;
    sub_23AE5DE58(a3);
    v38 = v37;
    v40 = v39;
    sub_23AAB47B0(a3);
    v61 = sub_23AABEC68(v38, v40, &v62);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a3);
    *(_WORD *)(v23 + 22) = 2080;
    v61 = (uint64_t)a1;
    v41 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7700);
    v42 = sub_23B1C6434();
    v61 = sub_23AABEC68(v42, v43, &v62);
    v13 = v54;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();

    v44 = v51;
    _os_log_impl(&dword_23AA66000, v51, (os_log_type_t)v50, "finished propagating to FS %s request %s: %s", (uint8_t *)v23, 0x20u);
    v45 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v45, -1, -1);
    MEMORY[0x23B8614BC](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v53);
    v30 = v59;
    v31 = v60;
    v32 = v58;
    a4 = v55;
    v33 = v57;
    if (!a1)
      goto LABEL_8;
LABEL_5:
    *v13 = a1;
    swift_storeEnumTagMultiPayload();
    v34 = a1;
    a4(v13);
    return sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E2190);
  }
  sub_23AAB47B0(a3);
  swift_release_n();
  sub_23AAB47B0(a3);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v30 = v59;
  v31 = v60;
  v32 = v58;
  v33 = v57;
  if (a1)
    goto LABEL_5;
LABEL_8:
  *(_BYTE *)(a2 + 42) = 0;
  v46 = (_QWORD *)swift_allocObject();
  v46[2] = a2;
  v46[3] = a3;
  v46[4] = a4;
  v46[5] = v30;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = a2;
  *(_QWORD *)(v47 + 24) = v31;
  *(_BYTE *)(v47 + 32) = v33 & 1;
  *(_BYTE *)(v47 + 33) = v32 & 1;
  *(_QWORD *)(v47 + 40) = sub_23AAFCCFC;
  *(_QWORD *)(v47 + 48) = v46;
  *(_QWORD *)(v47 + 56) = a3;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_23AAFCCFC;
  *(_QWORD *)(v48 + 24) = v46;
  swift_retain();
  sub_23AA93780(a3);
  swift_retain();
  swift_retain();
  sub_23AA93780(a3);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v48, (uint64_t)sub_23AABA3C4, v47);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AAD5E20()
{
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAD5E90()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  void (*v22)(_QWORD *);
  _QWORD *v23;
  id v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[96];

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v8 = sub_23B1C74F0();
  *(_QWORD *)(v7 - 184) = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v7 - 192) = &v29[-v9];
  v10 = sub_23B1C5E4C();
  *(_QWORD *)(v7 - 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 - 144) = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain();
  sub_23AA93780(v1);
  v14 = v4;
  swift_retain();
  sub_23AA93780(v1);
  v15 = v4;
  v16 = sub_23B1C5E40();
  v17 = sub_23B1C6A94();
  *(_DWORD *)(v7 - 196) = v17;
  v18 = os_log_type_enabled(v16, v17);
  *(_QWORD *)(v7 - 208) = v2;
  if (v18)
  {
    v19 = swift_slowAlloc();
    *(_QWORD *)(v7 - 224) = v3;
    v20 = (_DWORD *)v19;
    v21 = swift_slowAlloc();
    *(_QWORD *)(v7 - 240) = v21;
    *(_QWORD *)(v7 - 120) = v21;
    *v20 = 136315650;
    *(_DWORD *)(v7 - 228) = v6;
    *(_QWORD *)(v7 - 248) = v16;
    sub_23AF4E7D4(v21);
  }
  sub_23AAB47B0(v1);
  swift_release_n();
  sub_23AAB47B0(v1);

  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v7 - 152) + 8))(v12, *(_QWORD *)(v7 - 144));
  v22 = *(void (**)(_QWORD *))(v7 - 136);
  if (!v4)
  {
    *(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 128)) = 0;
    v26 = (_QWORD *)swift_allocObject();
    v27 = *(_QWORD *)(v7 - 168);
    v26[2] = *(_QWORD *)(v7 - 160);
    v26[3] = v27;
    v28 = *(_QWORD *)(v7 - 208);
    v26[4] = *(_QWORD *)(v7 - 176);
    v26[5] = v28;
    v26[6] = v5;
    v26[7] = v1;
    v26[8] = v22;
    v26[9] = v0;
    swift_retain();
    sub_23AA93780(v1);
    swift_retain();
    sub_23AACED60(v5, *(_DWORD *)(v7 - 200) & 1, v6 & 1, v1, (uint64_t)sub_23AAFB4AC, (uint64_t)v26);
  }
  v23 = *(_QWORD **)(v7 - 192);
  *v23 = v4;
  swift_storeEnumTagMultiPayload();
  v24 = v4;
  v22(v23);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 184) + 8))(v23, v8);
}

uint64_t sub_23AAD62C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, const char *a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  NSObject *v19;
  int v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  char *v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  v48 = a6;
  v50 = a5;
  v51 = a4;
  v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  v9 = MEMORY[0x24BDAC7A8](v49);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v39 - v12;
  v14 = sub_23B1C5E4C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA8EFC8(a1, (uint64_t)v13, (uint64_t *)&unk_2542E2190);
  sub_23AA93780(a3);
  sub_23AA93780(a3);
  swift_retain();
  v19 = sub_23B1C5E40();
  v20 = sub_23B1C6A94();
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    v42 = v17;
    v43 = v11;
    v41 = v20;
    v44 = v19;
    v45 = v15;
    v46 = v14;
    v47 = a1;
    v21 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    v53 = v40;
    *(_DWORD *)v21 = 136315650;
    swift_beginAccess();
    v22 = *(void **)(a2 + 32);
    v23 = *(unsigned __int8 *)(a2 + 40);
    v24 = v48;
    if ((*(_BYTE *)(a2 + 41) & 1) != 0)
    {
      v25 = v22;
      v26 = sub_23AA7B734();
      v28 = v27;
      sub_23AA862DC(v22, v23, 1);
    }
    else
    {
      v26 = sub_23AA96F18(*(_QWORD *)(a2 + 32), *(_BYTE *)(a2 + 40));
      v28 = v30;
    }
    v52 = sub_23AABEC68(v26, v28, &v53);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    sub_23AE5DE58(a3);
    v32 = v31;
    v34 = v33;
    sub_23AAB47B0(a3);
    v52 = sub_23AABEC68(v32, v34, &v53);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a3);
    *(_WORD *)(v21 + 22) = 2080;
    sub_23AA8EFC8((uint64_t)v13, (uint64_t)v43, (uint64_t *)&unk_2542E2190);
    v35 = sub_23B1C6434();
    v52 = sub_23AABEC68(v35, v36, &v53);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E2190);
    v37 = v44;
    _os_log_impl(&dword_23AA66000, v44, (os_log_type_t)v41, v24, (uint8_t *)v21, 0x20u);
    v38 = v40;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v38, -1, -1);
    MEMORY[0x23B8614BC](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v46);
    return v51(v47);
  }
  else
  {
    sub_23AAB47B0(a3);
    swift_release();
    sub_23AAB47B0(a3);
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E2190);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v51(a1);
  }
}

void sub_23AAD6688()
{
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAD66E0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  _BYTE v21[96];

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v4 = sub_23B1C74F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v3 - 184) = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v21[-v8];
  v10 = sub_23B1C5E4C();
  *(_QWORD *)(v3 - 144) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  *(_QWORD *)(v3 - 136) = v0;
  *(_QWORD *)(v3 - 200) = v14;
  v14(v9, v0, v4);
  sub_23AA93780(v2);
  sub_23AA93780(v2);
  swift_retain();
  v15 = sub_23B1C5E40();
  v16 = sub_23B1C6A94();
  *(_DWORD *)(v3 - 188) = v16;
  if (os_log_type_enabled(v15, v16))
  {
    *(_QWORD *)(v3 - 232) = *(_QWORD *)(v3 + 24);
    v17 = swift_slowAlloc();
    *(_QWORD *)(v3 - 208) = v1;
    v18 = (_DWORD *)v17;
    v19 = swift_slowAlloc();
    *(_QWORD *)(v3 - 240) = v19;
    *(_QWORD *)(v3 - 120) = v19;
    *v18 = 136315650;
    *(_QWORD *)(v3 - 224) = v10;
    *(_QWORD *)(v3 - 248) = v15;
    sub_23AF4E7D4(v19);
  }
  sub_23AAB47B0(v2);
  swift_release();
  sub_23AAB47B0(v2);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);

  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v12, v10);
  return v1(*(_QWORD *)(v3 - 136));
}

uint64_t sub_23AAD6A5C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23B1C6050();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  qos_class_self();
  sub_23B1C6038();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5498], v3);
    sub_23AA8A05C((uint64_t)v2, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  }
  return sub_23B1C608C();
}

id sub_23AAD6B78(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  id v39;
  id v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t AssociatedTypeWitness;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD aBlock[7];

  v53 = a5;
  v54 = a3;
  v51 = a4;
  v56 = a2;
  v43 = a1;
  v7 = (_QWORD *)*v5;
  v52 = sub_23B1C60A4();
  v58 = *(_QWORD *)(v52 - 8);
  v55 = *(_QWORD *)(v58 + 64);
  MEMORY[0x24BDAC7A8](v52);
  v60 = v7[73];
  v61 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v7[71];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v50 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_discreteProgressWithTotalUnitCount_, 1);
  objc_msgSend(v14, sel_setCancellable_, 1);
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = swift_allocObject();
  v41 = v14;
  swift_unknownObjectWeakInit();
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17 = a1;
  v18 = AssociatedTypeWitness;
  v42(v13, v17, AssociatedTypeWitness);
  v19 = *(unsigned __int8 *)(v9 + 80);
  v45 = v19 | 7;
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = v59;
  v48 = v7[72];
  v21 = v60;
  *((_QWORD *)v20 + 3) = v48;
  *((_QWORD *)v20 + 4) = v21;
  v46 = v7[74];
  *((_QWORD *)v20 + 5) = v46;
  *((_QWORD *)v20 + 6) = v15;
  *((_QWORD *)v20 + 7) = v16;
  v47 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v22 = v18;
  v47(&v20[(v19 + 64) & ~v19], v13, v18);
  aBlock[4] = sub_23AAFA0F4;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698FC;
  aBlock[3] = &block_descriptor;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23AAFA320((uint64_t)sub_23AAFA0F4);
  swift_release();
  objc_msgSend(v14, sel_setCancellationHandler_, v23);
  _Block_release(v23);
  swift_release();
  swift_release();
  swift_release();
  v24 = swift_allocObject();
  v25 = v50;
  v26 = v51;
  v27 = v53;
  *(_QWORD *)(v24 + 16) = v51;
  *(_QWORD *)(v24 + 24) = v27;
  v42(v25, v43, v22);
  v28 = v58;
  v29 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v61, v54, v52);
  v30 = (v19 + 72) & ~v19;
  v31 = (v44 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + *(unsigned __int8 *)(v28 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v34 = (char *)swift_allocObject();
  v35 = v48;
  *((_QWORD *)v34 + 2) = v59;
  *((_QWORD *)v34 + 3) = v35;
  v36 = v46;
  *((_QWORD *)v34 + 4) = v60;
  *((_QWORD *)v34 + 5) = v36;
  *((_QWORD *)v34 + 6) = v26;
  *((_QWORD *)v34 + 7) = v27;
  *((_QWORD *)v34 + 8) = v49;
  v47(&v34[v30], v25, AssociatedTypeWitness);
  v37 = v56;
  *(_QWORD *)&v34[v31] = v56;
  v38 = v41;
  *(_QWORD *)&v34[v32] = v41;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(&v34[v33], v61, v29);
  swift_retain_n();
  swift_retain();
  sub_23AA93780(v37);
  v39 = v38;
  sub_23AFABBFC((uint64_t)"materialize(_:request:qos:completion:)", 38, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA698D4, v24, (uint64_t)sub_23AAFA278, (uint64_t)v34);
  swift_release();
  swift_release();
  return v39;
}

void sub_23AAD6FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)&v27 - v15;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v18 = Strong;
    swift_beginAccess();
    v19 = MEMORY[0x23B8615C4](a2 + 16);
    if (v19)
    {
      v20 = (void *)v19;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a3, AssociatedTypeWitness);
      v21 = *(unsigned __int8 *)(v13 + 80);
      v27 = a7;
      v22 = (v21 + 56) & ~v21;
      v23 = (char *)swift_allocObject();
      v24 = v28;
      *((_QWORD *)v23 + 2) = a4;
      *((_QWORD *)v23 + 3) = v24;
      v25 = v27;
      *((_QWORD *)v23 + 4) = a6;
      *((_QWORD *)v23 + 5) = v25;
      *((_QWORD *)v23 + 6) = v18;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v22], v16, AssociatedTypeWitness);
      *(_QWORD *)&v23[(v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8] = v20;
      swift_retain();
      v26 = v20;
      sub_23ACFFA68((uint64_t)"materialize(_:request:qos:completion:)", 38, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AAFA3D8, (uint64_t)v23);
      swift_release();
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

void sub_23AAD71CC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  os_log_type_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v26 = a6;
  v27 = a7;
  v25 = *a3;
  v24 = sub_23B1C5BDC();
  v23[1] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v23[2] = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C5E4C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v18 = sub_23B1C6A94();
  v19 = sub_23AA6DC74(v18, (uint64_t)"materialization waiter", 22, 2, a1, a2);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v22 = (uint64_t)v27;
  v27 = a3;
  sub_23AFAEB6C(a4, a5, v26, v22, (uint64_t)v19, v21);
}

void sub_23AAD7544(uint64_t a1, int a2, int a3, int a4, unint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  unint64_t *v8;
  unint64_t *v9;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  id v71;
  _QWORD v72[3];
  _QWORD *v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  int v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  unint64_t *v91;
  unint64_t v92;
  uint64_t v93;

  v9 = v8;
  v87 = a8;
  v88 = a6;
  v84 = a7;
  v85 = a3;
  v86 = a4;
  v83 = a2;
  v12 = *v8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v13);
  v78 = (uint64_t)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90);
  v79 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v82 = (uint64_t)v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v72 - v18;
  v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6F0);
  MEMORY[0x24BDAC7A8](v20);
  v73 = (_QWORD *)((char *)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_23B1C5E4C();
  v76 = *(_QWORD *)(v22 - 8);
  v77 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v74 = (a5 >> 58) & 0x3C;
  v75 = (a5 >> 1) & 3;
  sub_23AA93780(a5);
  sub_23AA93780(a5);
  swift_retain();
  v26 = sub_23B1C5E40();
  v27 = sub_23B1C6A94();
  v28 = os_log_type_enabled(v26, v27);
  v91 = v8;
  v92 = a5;
  v89 = a1;
  v90 = v19;
  v81 = v12;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v72[2] = v20;
    v30 = (_DWORD *)v29;
    v31 = swift_slowAlloc();
    v72[1] = v31;
    v93 = v31;
    *v30 = 136315394;
    sub_23AF4E7D4(v31);
  }
  sub_23AAB47B0(a5);
  swift_release();
  sub_23AAB47B0(a5);

  (*(void (**)(char *, uint64_t))(v76 + 8))(v24, v77);
  if ((v75 | v74) == 2)
  {
    v32 = (_QWORD *)swift_projectBox();
    v33 = v20[12];
    v34 = v73;
    v35 = (char *)v73 + v33;
    v36 = v20[16];
    v37 = v20[20];
    v38 = (char *)v32 + v33;
    v39 = v32[1];
    *v73 = *v32;
    v34[1] = v39;
    v40 = sub_23B1C5A08();
    v41 = *(_QWORD *)(v40 - 8);
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v35, v38, v40);
    *(_QWORD *)((char *)v34 + v36) = *(_QWORD *)((char *)v32 + v36);
    v42 = *(_QWORD *)((char *)v32 + v37);
    *(_QWORD *)((char *)v34 + v37) = v42;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v40);
  }
  else
  {
    v42 = 0;
  }
  v43 = v78;
  sub_23AA8EFC8((uint64_t)v9 + qword_2542EDD58, v78, &qword_2542E4E70);
  v44 = type metadata accessor for TelemetrySignposter(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44) == 1)
  {
    sub_23AA8A05C(v43, &qword_2542E4E70);
    v45 = type metadata accessor for TelemetrySignpost(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v19, 1, 1, v45);
  }
  else
  {
    sub_23AA78A84(v42, (uint64_t)v19);
    sub_23AA937BC(v43, type metadata accessor for TelemetrySignposter);
    v46 = type metadata accessor for TelemetrySignpost(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v19, 0, 1, v46);
  }
  v47 = (_QWORD *)v81;
  v48 = v82;
  sub_23AA8EFC8((uint64_t)v19, v82, (uint64_t *)&unk_2542DDE90);
  v49 = v80;
  v50 = *(unsigned __int8 *)(v79 + 80);
  v51 = (v50 + 48) & ~v50;
  v79 = v50 | 7;
  v52 = (v80 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  v53 = (_QWORD *)swift_allocObject();
  v78 = v47[71];
  v53[2] = v78;
  v77 = v47[72];
  v53[3] = v77;
  v76 = v47[73];
  v53[4] = v76;
  v54 = v47[74];
  v53[5] = v54;
  sub_23AA724E8(v48, (uint64_t)v53 + v51, (uint64_t *)&unk_2542DDE90);
  v55 = (_QWORD *)((char *)v53 + v52);
  v56 = v84;
  v57 = v87;
  *v55 = v84;
  v55[1] = v57;
  sub_23AA8EFC8((uint64_t)v19, v48, (uint64_t *)&unk_2542DDE90);
  v58 = (v50 + 56) & ~v50;
  v59 = (v58 + v49 + 31) & 0xFFFFFFFFFFFFFFF8;
  v80 = (v58 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v81 = (v59 + 15) & 0xFFFFFFFFFFFFFFF8;
  v60 = (v59 + 31) & 0xFFFFFFFFFFFFFFF8;
  v61 = (_QWORD *)swift_allocObject();
  v62 = v77;
  v61[2] = v78;
  v61[3] = v62;
  v61[4] = v76;
  v61[5] = v54;
  v63 = (uint64_t)v61 + v58;
  v64 = v92;
  v61[6] = v92;
  sub_23AA724E8(v48, v63, (uint64_t *)&unk_2542DDE90);
  v65 = (char *)v61 + v80;
  *(_QWORD *)v65 = v56;
  *((_QWORD *)v65 + 1) = v57;
  v66 = v83 & 1;
  v65[16] = v66;
  *(_QWORD *)((char *)v61 + v59) = v91;
  v67 = (char *)v61 + v81;
  v69 = v88;
  v68 = v89;
  *(_QWORD *)v67 = v89;
  v67[8] = v85 & 1;
  *(_QWORD *)((char *)v61 + v60) = v69;
  v70 = (char *)v61 + ((v60 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v70 = sub_23AAFB700;
  *((_QWORD *)v70 + 1) = v53;
  v70[16] = v86 & 1;
  swift_retain();
  sub_23AA93780(v64);
  swift_retain();
  swift_retain();
  swift_retain();
  v71 = v69;
  swift_retain();
  sub_23AADA7A4(v68, v66, 0, v64, (uint64_t)sub_23AAFB8AC, (uint64_t)v61);
}

uint64_t sub_23AAD7BC4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return sub_23AA8A05C(*(_QWORD *)(v0 - 128), (uint64_t *)&unk_2542DDE90);
}

uint64_t sub_23AAD7C04(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);

  v31 = a7;
  v32 = a4;
  v33 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v16 = sub_23B1C74F0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v30 - v19;
  v21 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v20, a5);
    sub_23AA8EFC8(a2, (uint64_t)v13, (uint64_t *)&unk_2542DDE90);
    v25 = type metadata accessor for TelemetrySignpost(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v13, 1, v25) == 1)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, a5);
      sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542DDE90);
      return v33(a1);
    }
    v27 = sub_23B1A261C(a5, v31);
    sub_23B1A2738(v27, v28 & 1 | 0x40);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, a5);
    v26 = (uint64_t)v13;
LABEL_8:
    sub_23AA937BC(v26, type metadata accessor for TelemetrySignpost);
    return v33(a1);
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  sub_23AA8EFC8(a2, (uint64_t)v15, (uint64_t *)&unk_2542DDE90);
  v24 = type metadata accessor for TelemetrySignpost(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v15, 1, v24) != 1)
  {
    sub_23B1A2738(0, 128);
    v26 = (uint64_t)v15;
    goto LABEL_8;
  }
  sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542DDE90);
  return v33(a1);
}

char *sub_23AAD7E94(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, int a6, _QWORD *a7, _QWORD *a8, unsigned __int8 a9, void (*a10)(char *, uint64_t, uint64_t), void (*a11)(char *), uint64_t a12, unsigned __int8 a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void **v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, void **, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_QWORD *);
  _QWORD *v63;
  void (*v64)(char *, unint64_t);
  id v65;
  char *result;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  char v73;
  char *v74;
  char *v75;
  unint64_t v76;
  char *v77;
  char v78;
  char *v79;
  void **v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void **v87;
  uint64_t v88;
  void (**v89)(char *);
  uint64_t v90;
  char *v91;
  unint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  char *v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  id v98;
  char *v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void **v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(_QWORD *);
  uint64_t v120;
  uint64_t v121;
  int v122;
  void (*v123)(char *, unint64_t);
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  void **v127;
  void (*v128)(char *);
  uint64_t v129;
  unint64_t v130;
  void (*v131)(char *, uint64_t, uint64_t);
  char *v132;
  uint64_t v133;
  uint64_t v134;

  v122 = a6;
  v119 = a4;
  v120 = a5;
  v121 = a3;
  v113 = a7;
  v15 = *a7;
  v112 = a8;
  v16 = *a8;
  v111 = sub_23B1C60A4();
  v110 = *(_QWORD *)(v111 - 8);
  v17 = MEMORY[0x24BDAC7A8](v111);
  v108 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = *(_QWORD *)(v16 + 80);
  v107 = *(_QWORD *)(v109 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v116 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = v15;
  v21 = *(void (**)(_QWORD))(v15 + 568);
  v22 = *((_QWORD *)v21 - 1);
  v23 = MEMORY[0x24BDAC7A8](v19);
  v106 = (void **)((char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = MEMORY[0x24BDAC7A8](v23);
  v115 = (char *)&v102 - v26;
  v105 = v27;
  MEMORY[0x24BDAC7A8](v25);
  v132 = (char *)&v102 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v114 = (uint64_t)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v118 = (uint64_t)&v102 - v32;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v128 = (void (*)(char *))v21;
  v33 = sub_23B1C74F0();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v127 = (void **)((char *)&v102 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v102 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v102 - v40;
  v42 = sub_23B1C5E4C();
  v125 = *(_QWORD *)(v42 - 8);
  v126 = v42;
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v102 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v131 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v131(v41, a1, v33);
  sub_23AA93780(a2);
  sub_23AA93780(a2);
  v46 = sub_23B1C5E40();
  v47 = sub_23B1C6A94();
  v48 = os_log_type_enabled(v46, v47);
  v130 = v33;
  v124 = v39;
  if (v48)
  {
    v49 = swift_slowAlloc();
    v104 = a1;
    v50 = v49;
    v103 = swift_slowAlloc();
    v134 = v103;
    *(_DWORD *)v50 = 136315394;
    v117 = v22;
    v131(v39, (uint64_t)v41, v33);
    v51 = sub_23B1C6434();
    v133 = sub_23AABEC68(v51, v52, &v134);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v123 = *(void (**)(char *, unint64_t))(v34 + 8);
    v123(v41, v130);
    *(_WORD *)(v50 + 12) = 2080;
    sub_23AF9E228();
  }
  sub_23AAB47B0(a2);
  v123 = *(void (**)(char *, unint64_t))(v34 + 8);
  v123(v41, v33);
  sub_23AAB47B0(a2);

  (*(void (**)(char *, uint64_t))(v125 + 8))(v44, v126);
  v53 = (uint64_t)v128;
  v54 = v127;
  v131((char *)v127, a1, v33);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v55 = *v54;
    v56 = v118;
    sub_23AA8EFC8(v121, v118, (uint64_t *)&unk_2542DDE90);
    v57 = type metadata accessor for TelemetrySignpost(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v56, 1, v57) == 1)
    {
      sub_23AA8A05C(v56, (uint64_t *)&unk_2542DDE90);
    }
    else
    {
      sub_23B1A2738(0, 128);
      sub_23AA937BC(v56, type metadata accessor for TelemetrySignpost);
    }
    v62 = v119;
    v64 = v123;
    v63 = v124;
    *v124 = v55;
    swift_storeEnumTagMultiPayload();
    v65 = v55;
    v62(v63);

    return (char *)((uint64_t (*)(_QWORD *, uint64_t))v64)(v63, v33);
  }
  v58 = *(void (**)(char *, void **, uint64_t))(v22 + 32);
  v58(v132, v54, v53);
  v59 = *(_QWORD *)(v129 + 584);
  if ((sub_23AF21910(v53, v59) & 1) != 0 || (v122 & 1) != 0)
  {
    v128 = (void (*)(char *))a11;
    v67 = a10;
    v68 = v22;
    v69 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v70 = v115;
    v69(v115, v132, v53);
    v117 = v68;
    v131 = a10;
    if ((v122 & 1) != 0)
    {
      v71 = *(void (**)(char *, uint64_t))(v68 + 8);
      v71(v70, v53);
      if ((a9 & 1) == 0)
      {
LABEL_21:
        LODWORD(v125) = a9;
        v126 = a12;
        v127 = (void **)v71;
        v130 = a2;
        result = (char *)objc_msgSend(v67, sel_totalUnitCount);
        if (__OFADD__(result, 1))
        {
          __break(1u);
        }
        else
        {
          LODWORD(v124) = a13;
          objc_msgSend(v67, sel_setTotalUnitCount_, result + 1);
          v79 = v132;
          (*(void (**)(uint64_t, uint64_t))(v59 + 64))(v53, v59);
          v80 = v106;
          v69((char *)v106, v79, v53);
          v81 = (*(unsigned __int8 *)(v117 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
          v82 = (v105 + v81 + 7) & 0xFFFFFFFFFFFFFFF8;
          v83 = (v82 + 23) & 0xFFFFFFFFFFFFFFF8;
          v123 = (void (*)(char *, unint64_t))((v83 + 15) & 0xFFFFFFFFFFFFFFF8);
          v84 = (v83 + 31) & 0xFFFFFFFFFFFFFFF8;
          v85 = swift_allocObject();
          *(_QWORD *)(v85 + 16) = v53;
          v86 = v129;
          *(_QWORD *)(v85 + 24) = *(_QWORD *)(v129 + 576);
          *(_QWORD *)(v85 + 32) = v59;
          *(_QWORD *)(v85 + 40) = *(_QWORD *)(v86 + 592);
          v87 = v80;
          v88 = v53;
          v58((char *)(v85 + v81), v87, v53);
          v89 = (_QWORD *)(v85 + v82);
          v90 = v126;
          *v89 = v128;
          v89[1] = v90;
          *(_QWORD *)(v85 + v83) = v113;
          v91 = (char *)v123 + v85;
          v92 = v130;
          v93 = v131;
          *(_QWORD *)v91 = v130;
          v91[8] = v124 & 1;
          v94 = (char *)(v85 + v84);
          *(_QWORD *)v94 = v112;
          v94[8] = v122 & 1;
          v94[9] = v125 & 1;
          *(_QWORD *)(v85 + ((v84 + 17) & 0xFFFFFFFFFFFFFFF8)) = v93;
          sub_23AA93780(v92);
          swift_retain();
          swift_retain();
          swift_retain();
          v95 = v93;
          v96 = (uint64_t)v108;
          sub_23AAD6A5C();
          v97 = v116;
          v98 = sub_23AAD6B78(v116, v92, v96, (uint64_t)sub_23AAFBC00, v85);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v96, v111);
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v97, v109);
          objc_msgSend(v95, sel_addChild_withPendingUnitCount_, v98, 1);

          return (char *)((uint64_t (*)(char *, uint64_t))v127)(v132, v88);
        }
        return result;
      }
    }
    else
    {
      v77 = v70;
      v78 = sub_23AF21910(v53, v59);
      v71 = *(void (**)(char *, uint64_t))(v68 + 8);
      v71(v77, v53);
      if ((v78 & 1) != 0)
        sub_23AAD7544(v112, 1, a9 & 1, 1, a2, v131, v128, a12);
      v67 = v131;
      if ((a9 & 1) == 0)
        goto LABEL_21;
    }
    if (sub_23AF219A4(v53, v59) != 1)
    {
      v99 = (char *)v124;
      v100 = v132;
      v69((char *)v124, v132, v53);
      v101 = v130;
      swift_storeEnumTagMultiPayload();
      v128(v99);
      v123(v99, v101);
      return (char *)((uint64_t (*)(char *, uint64_t))v71)(v100, v53);
    }
    goto LABEL_21;
  }
  v60 = v114;
  sub_23AA8EFC8(v121, v114, (uint64_t *)&unk_2542DDE90);
  v61 = type metadata accessor for TelemetrySignpost(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v60, 1, v61) == 1)
  {
    sub_23AA8A05C(v60, (uint64_t *)&unk_2542DDE90);
  }
  else
  {
    v72 = sub_23B1A261C(v53, v59);
    sub_23B1A2738(v72, v73 & 1);
    sub_23AA937BC(v60, type metadata accessor for TelemetrySignpost);
  }
  v74 = (char *)v124;
  v75 = v132;
  (*(void (**)(_QWORD *, char *, uint64_t))(v22 + 16))(v124, v132, v53);
  v76 = v130;
  swift_storeEnumTagMultiPayload();
  v119(v74);
  v123(v74, v76);
  return (char *)(*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v75, v53);
}

void sub_23AAD88F0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AAD89E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  id v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  BOOL v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  id v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  void *v91;
  void (*v92)(uint64_t, uint64_t, void *, _QWORD, void (*)(uint64_t), char *);
  id v93;
  uint64_t v94;
  void *v95;
  _BYTE v96[96];

  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v96[-v8];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v10 = sub_23B1C74F0();
  *(_QWORD *)(v4 - 248) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 - 240) = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v4 - 256) = &v96[-v12];
  v13 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v4 - 216) = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v4 - 168) = &v96[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v4 - 136) = v16;
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = &v96[-v20];
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v4 - 232) = &v96[-v22];
  v23 = sub_23B1C5E4C();
  v24 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v4 - 152) = &v96[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = *(void **)(v4 - 192);
  *(_QWORD *)(v4 - 184) = v29;
  *(_QWORD *)(v4 - 176) = v26;
  if (v28)
  {
    v30 = v13;
    v31 = v28;
    v32 = v28;
    v33 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 136) + 16))(v21, *(_QWORD *)(v4 - 160), v1);
    v34 = v31;
    v35 = v31;
    v36 = sub_23B1C5E40();
    v37 = sub_23B1C6AA0();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc();
      *(_QWORD *)(v4 - 224) = swift_slowAlloc();
      v40 = swift_slowAlloc();
      *(_QWORD *)(v4 - 160) = v40;
      *(_QWORD *)(v4 - 120) = v40;
      *(_DWORD *)v39 = 136315394;
      *(_QWORD *)(v4 - 264) = v39 + 4;
      v41 = *(_QWORD *)(v4 - 144);
      v42 = *(void (**)(uint64_t, uint64_t))(v41 + 64);
      v43 = *(_QWORD *)(v4 - 168);
      *(_DWORD *)(v4 - 232) = v38;
      v42(v1, v41);
      swift_getAssociatedConformanceWitness();
      v44 = sub_23B1C7304();
      v46 = v45;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 216) + 8))(v43, v30);
      *(_QWORD *)(v4 - 128) = sub_23AABEC68(v44, v46, (uint64_t *)(v4 - 120));
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v21, v1);
      *(_WORD *)(v39 + 12) = 2112;
      v47 = (void *)sub_23B1C5870();
      v48 = objc_msgSend(v47, sel_fp_prettyDescription);

      *(_QWORD *)(v4 - 128) = v48;
      sub_23B1C6CBC();
      v49 = *(_QWORD **)(v4 - 224);
      *v49 = v48;

      _os_log_impl(&dword_23AA66000, v36, (os_log_type_t)*(_DWORD *)(v4 - 232), "requestMaterialization(%s) failed for vfsItemID: %@", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v49, -1, -1);
      v50 = *(_QWORD *)(v4 - 160);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v50, -1, -1);
      MEMORY[0x23B8614BC](v39, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v21, v1);

    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(*(_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 176));
    v71 = *(_QWORD **)(v4 - 256);
    *v71 = v31;
    v72 = *(_QWORD *)(v4 - 240);
    swift_storeEnumTagMultiPayload();
    v73 = v31;
    (*(void (**)(_QWORD *))(v4 - 208))(v71);

    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 248) + 8))(v71, v72);
  }
  else
  {
    *(_QWORD *)(v4 - 248) = a1;
    *(_QWORD *)(v4 - 240) = &v96[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
    *(_QWORD *)(v4 - 192) = v9;
    *(_QWORD *)(v4 - 304) = v2;
    *(_QWORD *)(v4 - 296) = v7;
    *(_QWORD *)(v4 - 288) = v6;
    v51 = v13;
    *(_QWORD *)(v4 - 312) = *(_QWORD *)(v4 + 24);
    *(_DWORD *)(v4 - 316) = *(unsigned __int8 *)(v4 + 17);
    *(_DWORD *)(v4 - 320) = *(unsigned __int8 *)(v4 + 16);
    v52 = &v96[-v27];
    v53 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 16);
    v55 = *(_QWORD *)(v4 - 232);
    v56 = *(_QWORD *)(v4 - 160);
    *(_QWORD *)(v4 - 336) = v54;
    v54(v55, v56, v1);
    *(_QWORD *)(v4 - 256) = v52;
    v57 = sub_23B1C5E40();
    v58 = sub_23B1C6A94();
    v59 = v58;
    v60 = os_log_type_enabled(v57, v58);
    v61 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(v4 - 328) = v51;
    if (v60)
    {
      *(_DWORD *)(v4 - 340) = v59;
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      *(_QWORD *)(v4 - 352) = v63;
      *(_QWORD *)(v4 - 120) = v63;
      *(_DWORD *)v62 = 136315138;
      *(_QWORD *)(v4 - 360) = v62 + 4;
      v64 = *(void (**)(uint64_t, uint64_t))(v61 + 64);
      v65 = *(_QWORD *)(v4 - 168);
      v66 = *(_QWORD *)(v4 - 232);
      *(_QWORD *)(v4 - 152) = v64;
      v64(v1, v61);
      swift_getAssociatedConformanceWitness();
      v67 = sub_23B1C7304();
      v69 = v68;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 216) + 8))(v65, v51);
      *(_QWORD *)(v4 - 128) = sub_23AABEC68(v67, v69, (uint64_t *)(v4 - 120));
      v56 = *(_QWORD *)(v4 - 160);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v66, v1);
      _os_log_impl(&dword_23AA66000, v57, (os_log_type_t)*(_DWORD *)(v4 - 340), "requestMaterialization completed for vfsItemID %s", v62, 0xCu);
      v70 = *(_QWORD *)(v4 - 352);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v70, -1, -1);
      MEMORY[0x23B8614BC](v62, -1, -1);

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(*(_QWORD *)(v4 - 256), *(_QWORD *)(v4 - 176));
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(*(_QWORD *)(v4 - 232), v1);

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(*(_QWORD *)(v4 - 256), *(_QWORD *)(v4 - 176));
      *(_QWORD *)(v4 - 152) = *(_QWORD *)(v61 + 64);
    }
    v75 = *(_QWORD *)(v4 - 192);
    v76 = *(_QWORD *)(v4 - 248);
    v77 = *(_QWORD *)(v4 - 240);
    *(_QWORD *)(v4 - 176) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 - 224) + 32) + 16);
    swift_retain();
    (*(void (**)(uint64_t, _QWORD))(v4 - 152))(v1, *(_QWORD *)(v4 - 144));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 1, 1, v76);
    *(_QWORD *)(v4 - 152) = sub_23AFB5ED0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 336))(v77, v56, v1);
    v78 = *(_QWORD *)(v4 - 136);
    v79 = (*(unsigned __int8 *)(v78 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    v80 = (v17 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    v81 = (v80 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v4 - 160) = (v81 + 15) & 0xFFFFFFFFFFFFFFF8;
    v82 = (v81 + 31) & 0xFFFFFFFFFFFFFFF8;
    v83 = (char *)swift_allocObject();
    *((_QWORD *)v83 + 2) = v1;
    v84 = *(_QWORD *)(v4 - 304);
    v85 = *(_QWORD *)(v4 - 144);
    *((_QWORD *)v83 + 3) = *(_QWORD *)(v84 + 576);
    *((_QWORD *)v83 + 4) = v85;
    *((_QWORD *)v83 + 5) = *(_QWORD *)(v84 + 592);
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(&v83[v79], v77, v1);
    v86 = &v83[v80];
    v87 = *(_QWORD *)(v4 - 200);
    *(_QWORD *)v86 = *(_QWORD *)(v4 - 208);
    *((_QWORD *)v86 + 1) = v87;
    v88 = *(_QWORD *)(v4 - 272);
    *(_QWORD *)&v83[v81] = v88;
    v89 = &v83[*(_QWORD *)(v4 - 160)];
    *(_QWORD *)v89 = *(_QWORD *)(v4 - 224);
    v89[8] = *(_DWORD *)(v4 - 276) & 1;
    v90 = &v83[v82];
    *(_QWORD *)v90 = *(_QWORD *)(v4 - 264);
    v90[8] = *(_DWORD *)(v4 - 320) & 1;
    v90[9] = *(_DWORD *)(v4 - 316) & 1;
    v91 = *(void **)(v4 - 312);
    *(_QWORD *)&v83[(v82 + 17) & 0xFFFFFFFFFFFFFFF8] = v91;
    v92 = *(void (**)(uint64_t, uint64_t, void *, _QWORD, void (*)(uint64_t), char *))(**(_QWORD **)(v4 - 176) + 136);
    swift_retain();
    sub_23AA93780(v88);
    swift_retain();
    swift_retain();
    v93 = v91;
    v94 = *(_QWORD *)(v4 - 168);
    v95 = *(void **)(v4 - 152);
    v92(v94, v75, v95, 0, sub_23AAFBD5C, v83);
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 296) + 8))(v75, *(_QWORD *)(v4 - 288));
    return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 216) + 8))(v94, *(_QWORD *)(v4 - 328));
  }
}

void sub_23AAD9318(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, NSObject *a5, _QWORD *a6, int a7, _QWORD *a8, unsigned __int8 a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  id v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  NSObject *v71;
  os_log_type_t v72;
  int v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  os_log_t v83;
  uint8_t *v84;
  os_log_t v85;
  void (*v86)(char *);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  id v90;
  void (*v91)(_QWORD *, void **, uint64_t);
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void *v98;
  os_log_t v99;
  id v100;
  objc_class *v101;
  os_log_t v102;
  uint64_t v103;
  char v104;
  id v105;
  char *v106;
  char *v107;
  uint8_t *v108;
  char *v109;
  NSObject *v110;
  os_log_type_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  os_log_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint8_t *v122;
  id v123;
  uint8_t *v124;
  NSObject *v125;
  os_log_type_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  void (*v135)(uint8_t *, uint64_t);
  void (*v136)(char *);
  uint64_t v137;
  char *v138;
  _QWORD *v139;
  void **v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  unint64_t v146;
  os_log_t v147;
  uint64_t v148;
  void *v149;
  id v150;
  uint8_t *v151;
  int v152;
  uint64_t v153;
  char *v154;
  void **v155;
  int v156;
  _QWORD *v157;
  _QWORD *v158;
  char *v159;
  os_log_t v160;
  uint64_t v161;
  os_log_t v162;
  uint8_t *v163;
  os_log_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  os_log_t v180;

  v156 = a7;
  v162 = a5;
  v173 = a3;
  v174 = a4;
  v177 = a2;
  v158 = a6;
  v12 = *a6;
  v157 = a8;
  v13 = *a8;
  v169 = v12;
  v14 = *(_QWORD *)(v12 + 568);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v15 = sub_23B1C74F0();
  v171 = *(_QWORD *)(v15 - 8);
  v172 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v160 = (os_log_t)((char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v16);
  v168 = (char *)&v151 - v19;
  v161 = v13;
  v167 = *(_QWORD *)(v13 + 80);
  v166 = *(_QWORD *)(v167 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v170 = (char *)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v14 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  v24 = MEMORY[0x24BDAC7A8](v20);
  v163 = (uint8_t *)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v155 = (void **)((char *)&v151 - v26);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v154 = (char *)&v151 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v165 = (uint8_t **)((char *)&v151 - v30);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v151 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v151 - v34;
  v36 = sub_23B1C5E4C();
  v175 = *(_QWORD *)(v36 - 8);
  v176 = v36;
  v37 = MEMORY[0x24BDAC7A8](v36);
  v164 = (os_log_t)((char *)&v151 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = MEMORY[0x24BDAC7A8](v37);
  v159 = (char *)&v151 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v151 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v151 - v44;
  sub_23B1C6C98();
  v46 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v46);
  v48 = (void **)((char *)&v151 - v47);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))((char *)&v151 - v47, a1, v46);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = *v48;
    v51 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v35, v177, v14);
    v52 = v50;
    v53 = v50;
    v54 = sub_23B1C5E40();
    v55 = sub_23B1C6A94();
    v56 = v55;
    if (os_log_type_enabled(v54, v55))
    {
      v57 = swift_slowAlloc();
      v165 = (_QWORD *)swift_slowAlloc();
      v177 = swift_slowAlloc();
      v180 = (os_log_t)v177;
      *(_DWORD *)v57 = 136315394;
      v163 = (uint8_t *)(v57 + 4);
      v164 = v54;
      v58 = v14;
      v59 = *(_QWORD *)(v169 + 584);
      v60 = *(void (**)(uint64_t, uint64_t))(v59 + 64);
      LODWORD(v169) = v56;
      v61 = v170;
      v60(v14, v59);
      v62 = v167;
      swift_getAssociatedConformanceWitness();
      v63 = sub_23B1C7304();
      v65 = v64;
      (*(void (**)(char *, uint64_t))(v166 + 8))(v61, v62);
      v179 = sub_23AABEC68(v63, v65, (uint64_t *)&v180);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v35, v58);
      *(_WORD *)(v57 + 12) = 2112;
      swift_getErrorValue();
      v66 = sub_23B0D9CF0(v178);
      v179 = (uint64_t)v66;
      sub_23B1C6CBC();
      v67 = v165;
      *v165 = v66;

      v54 = v164;
      _os_log_impl(&dword_23AA66000, v164, (os_log_type_t)v169, "requestMaterialization(%s) post-materialization lookup returned an error %@", (uint8_t *)v57, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v67, -1, -1);
      v68 = v177;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v68, -1, -1);
      MEMORY[0x23B8614BC](v57, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v35, v14);

    }
    (*(void (**)(char *, uint64_t))(v175 + 8))(v45, v176);
    v86 = v173;
    v88 = v171;
    v87 = v172;
    v89 = v168;
    *(_QWORD *)v168 = v50;
    swift_storeEnumTagMultiPayload();
    v90 = v50;
    v86(v89);

    (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v87);
    return;
  }
  v69 = v22;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v22 + 48))(v48, 1, v14) == 1)
  {
    v70 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v33, v177, v14);
    v71 = sub_23B1C5E40();
    v72 = sub_23B1C6A94();
    v73 = v72;
    if (os_log_type_enabled(v71, v72))
    {
      LODWORD(v165) = v73;
      v74 = (uint8_t *)swift_slowAlloc();
      v164 = (os_log_t)swift_slowAlloc();
      v180 = v164;
      v163 = v74;
      *(_DWORD *)v74 = 136315138;
      v159 = (char *)(v74 + 4);
      v75 = *(_QWORD *)(v169 + 584);
      v162 = v71;
      v168 = *(char **)(v75 + 64);
      v169 = v69;
      v76 = v14;
      v77 = (uint64_t)v170;
      ((void (*)(uint64_t, uint64_t))v168)(v14, v75);
      v78 = v167;
      swift_getAssociatedConformanceWitness();
      v79 = sub_23B1C7304();
      v81 = v80;
      v82 = v166;
      (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v77, v78);
      v179 = sub_23AABEC68(v79, v81, (uint64_t *)&v180);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v169 + 8))(v33, v76);
      v83 = v162;
      v84 = v163;
      _os_log_impl(&dword_23AA66000, v162, (os_log_type_t)v165, "requestMaterialization(%s) post-materialization lookup returned no item", v163, 0xCu);
      v85 = v164;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v85, -1, -1);
      MEMORY[0x23B8614BC](v84, -1, -1);

      (*(void (**)(char *, uint64_t))(v175 + 8))(v43, v176);
      ((void (*)(uint64_t, uint64_t))v168)(v76, v75);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v33, v14);

      (*(void (**)(char *, uint64_t))(v175 + 8))(v43, v176);
      v77 = (uint64_t)v170;
      v82 = v166;
      v78 = v167;
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v169 + 584) + 64))(v14, *(_QWORD *)(v169 + 584));
    }
    v100 = sub_23AFA9F44(v77, 1, v78, *(_QWORD *)(v161 + 96));
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v77, v78);
    v101 = (objc_class *)(id)FPItemNotFoundError();

    if (v101)
    {
      v102 = v160;
      v160->isa = v101;
      v103 = v172;
      swift_storeEnumTagMultiPayload();
      v173((char *)v102);
      (*(void (**)(os_log_t, uint64_t))(v171 + 8))(v102, v103);
    }
    else
    {
      __break(1u);
    }
    return;
  }
  v91 = *(void (**)(_QWORD *, void **, uint64_t))(v22 + 32);
  v92 = (uint8_t *)v165;
  v91(v165, v48, v14);
  v93 = *(_QWORD *)(v169 + 576);
  v94 = *(_QWORD *)(v169 + 584);
  v95 = *(_QWORD *)(v169 + 592);
  v96 = sub_23AF9DAF0((unint64_t)v162);
  v97 = (uint64_t)v170;
  if (v96)
  {
    v98 = v96;
    objc_msgSend(v96, sel_requestedExtent);

    v99 = v164;
LABEL_18:
    v123 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v124 = v163;
    v169 = *(_QWORD *)(v22 + 16);
    ((void (*)(uint8_t *, uint8_t *, uint64_t))v169)(v163, v92, v14);
    v125 = sub_23B1C5E40();
    v126 = sub_23B1C6A94();
    if (os_log_type_enabled(v125, v126))
    {
      v127 = swift_slowAlloc();
      v128 = swift_slowAlloc();
      v180 = (os_log_t)v128;
      *(_DWORD *)v127 = 136315138;
      v162 = (os_log_t)(v127 + 4);
      (*(void (**)(uint64_t, uint64_t))(v94 + 64))(v14, v94);
      v129 = v97;
      v130 = v167;
      swift_getAssociatedConformanceWitness();
      v131 = sub_23B1C7304();
      v161 = v14;
      v132 = v131;
      v134 = v133;
      (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v129, v130);
      v179 = sub_23AABEC68(v132, v134, (uint64_t *)&v180);
      v92 = (uint8_t *)v165;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v135 = *(void (**)(uint8_t *, uint64_t))(v22 + 8);
      v14 = v161;
      v135(v163, v161);
      _os_log_impl(&dword_23AA66000, v125, v126, "requestMaterialization(%s) post-materialization lookup succeeded", (uint8_t *)v127, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v128, -1, -1);
      MEMORY[0x23B8614BC](v127, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v175 + 8))(v164, v176);
    }
    else
    {
      v135 = *(void (**)(uint8_t *, uint64_t))(v22 + 8);
      v135(v124, v14);

      (*(void (**)(os_log_t, uint64_t))(v175 + 8))(v99, v176);
    }
    v136 = v173;
    v137 = v172;
    v138 = v168;
    ((void (*)(char *, uint64_t, uint64_t))v169)(v168, v177, v14);
    swift_storeEnumTagMultiPayload();
    v136(v138);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v138, v137);
    v135(v92, v14);
    return;
  }
  v161 = v93;
  v104 = sub_23AF21910(v14, v94);
  v99 = v164;
  if ((v104 & 1) == 0)
    goto LABEL_18;
  v177 = a11;
  LODWORD(v172) = a10;
  LODWORD(v171) = a9;
  v105 = (id)fpfs_current_or_default_log();
  v106 = v159;
  sub_23B1C5E58();
  v169 = v22;
  v107 = v154;
  v108 = v92;
  v109 = v106;
  v168 = *(char **)(v22 + 16);
  ((void (*)(char *, uint8_t *, uint64_t))v168)(v154, v108, v14);
  v110 = sub_23B1C5E40();
  v111 = sub_23B1C6A94();
  v112 = v111;
  if (os_log_type_enabled(v110, v111))
  {
    v160 = v110;
    v113 = swift_slowAlloc();
    v152 = v112;
    v114 = v113;
    v153 = swift_slowAlloc();
    v180 = (os_log_t)v153;
    v151 = (uint8_t *)v114;
    *(_DWORD *)v114 = 136315138;
    v163 = *(uint8_t **)(v94 + 64);
    v164 = (os_log_t)(v114 + 4);
    ((void (*)(uint64_t, uint64_t))v163)(v14, v94);
    v115 = v167;
    swift_getAssociatedConformanceWitness();
    v116 = sub_23B1C7304();
    v118 = v117;
    (*(void (**)(char *, uint64_t))(v166 + 8))(v170, v115);
    v179 = sub_23AABEC68(v116, v118, (uint64_t *)&v180);
    v97 = (uint64_t)v170;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v164 = *(os_log_t *)(v169 + 8);
    ((void (*)(char *, uint64_t))v164)(v107, v14);
    v119 = v160;
    v120 = v151;
    _os_log_impl(&dword_23AA66000, v160, (os_log_type_t)v152, "requestMaterialization(%s) post-materialization lookup returned a dataless item - force ingestion", v151, 0xCu);
    v121 = v153;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v121, -1, -1);
    MEMORY[0x23B8614BC](v120, -1, -1);

    (*(void (**)(char *, uint64_t))(v175 + 8))(v159, v176);
    v122 = v163;
  }
  else
  {
    v164 = *(os_log_t *)(v169 + 8);
    ((void (*)(char *, uint64_t))v164)(v107, v14);

    (*(void (**)(char *, uint64_t))(v175 + 8))(v109, v176);
    v122 = *(uint8_t **)(v94 + 64);
  }
  v139 = v165;
  ((void (*)(uint64_t, uint64_t))v122)(v14, v94);
  v140 = v155;
  ((void (*)(void **, _QWORD *, uint64_t))v168)(v155, v139, v14);
  v141 = (*(unsigned __int8 *)(v169 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80);
  v142 = swift_allocObject();
  v143 = v161;
  *(_QWORD *)(v142 + 16) = v14;
  *(_QWORD *)(v142 + 24) = v143;
  *(_QWORD *)(v142 + 32) = v94;
  *(_QWORD *)(v142 + 40) = v95;
  v144 = v174;
  *(_QWORD *)(v142 + 48) = v173;
  *(_QWORD *)(v142 + 56) = v144;
  *(_BYTE *)(v142 + 64) = v156 & 1;
  v145 = v157;
  *(_QWORD *)(v142 + 72) = v158;
  *(_QWORD *)(v142 + 80) = v145;
  *(_BYTE *)(v142 + 88) = v171 & 1;
  *(_BYTE *)(v142 + 89) = v172 & 1;
  v146 = v142 + v141;
  v147 = v162;
  v148 = v14;
  v149 = (void *)v177;
  *(_QWORD *)(v142 + 96) = v162;
  *(_QWORD *)(v142 + 104) = v149;
  v91((_QWORD *)v146, v140, v148);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA93780((unint64_t)v147);
  v150 = v149;
  sub_23AAD2010(v97, (unint64_t)v147, (uint64_t)sub_23AAFBE84, v142);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v97, v167);
  ((void (*)(_QWORD *, uint64_t))v164)(v165, v148);
}

uint64_t sub_23AADA268(void *a1, void (*a2)(uint64_t *), uint64_t a3, int a4, NSObject *a5, _QWORD *a6, int a7, int a8, unint64_t a9, void *a10, uint64_t a11)
{
  NSObject v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  int v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  os_log_t v66;
  uint8_t *v67;
  uint64_t v68;
  void (*v69)(uint64_t *);
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint8_t *v73;
  uint8_t *v74;
  int v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  Class isa;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  os_log_t v86;
  char *v87;
  uint64_t *v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  void (*v92)(uint64_t *);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  LODWORD(v90) = a8;
  LODWORD(v88) = a7;
  LODWORD(v87) = a4;
  v92 = a2;
  v93 = a3;
  v86 = a5;
  v12.isa = a5->isa;
  v89 = a6;
  v13 = *a6;
  v14 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v14);
  v83 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C5474();
  v84 = *(_QWORD *)(v16 - 8);
  v85 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v91 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v13 + 80);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v17);
  v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = v12.isa;
  v24 = *((_QWORD *)v12.isa + 71);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23B1C5E4C();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v32 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v32);
  v36 = (uint64_t *)((char *)&v73 - v35);
  if (a1)
  {
    *v36 = (uint64_t)a1;
    v37 = v36;
    v38 = v33;
    v39 = v34;
    swift_storeEnumTagMultiPayload();
    v40 = a1;
    v92(v37);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v39 + 8))(v37, v38);
  }
  else
  {
    v77 = v23;
    v78 = v20;
    v79 = v19;
    v80 = v29;
    v81 = v28;
    v42 = v91;
    v43 = v84;
    v44 = v85;
    if ((v87 & 1) != 0)
      sub_23AAD7544((uint64_t)v89, v88 & 1, v90 & 1, 0, a9, a10, (uint64_t)v92, v93);
    v88 = v36;
    v89 = (_QWORD *)v34;
    v90 = v33;
    v45 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v46 = v25;
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v48 = v24;
    v47(v27, a11, v24);
    v49 = sub_23B1C5E40();
    v50 = sub_23B1C6A94();
    v51 = v50;
    v52 = os_log_type_enabled(v49, v50);
    v53 = v43;
    v54 = v81;
    if (v52)
    {
      v86 = v49;
      v55 = swift_slowAlloc();
      v75 = v51;
      v56 = (uint8_t *)v55;
      v76 = swift_slowAlloc();
      v95 = v76;
      v87 = v31;
      v74 = v56;
      *(_DWORD *)v56 = 136315138;
      v73 = v56 + 4;
      v57 = v44;
      v58 = v77;
      (*(void (**)(uint64_t, _QWORD))(*((_QWORD *)isa + 73) + 64))(v48, *((_QWORD *)isa + 73));
      v59 = v53;
      v60 = v79;
      swift_getAssociatedConformanceWitness();
      v61 = sub_23B1C7304();
      v63 = v62;
      v64 = v58;
      v44 = v57;
      v65 = v60;
      v53 = v59;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v64, v65);
      v94 = sub_23AABEC68(v61, v63, &v95);
      sub_23B1C6CBC();
      v42 = v91;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v48);
      v66 = v86;
      v67 = v74;
      _os_log_impl(&dword_23AA66000, v86, (os_log_type_t)v75, "requestMaterialization(%s) post-materialization retry failed", v74, 0xCu);
      v68 = v76;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v68, -1, -1);
      MEMORY[0x23B8614BC](v67, -1, -1);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v81);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v48);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v31, v54);
    }
    v69 = v92;
    sub_23B1C53E4();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_23B1C5864();
    v70 = sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v44);
    v71 = v88;
    *v88 = v70;
    v72 = v90;
    swift_storeEnumTagMultiPayload();
    v69(v71);
    return ((uint64_t (*)(uint64_t *, uint64_t))v89[1])(v71, v72);
  }
}

void sub_23AADA7A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v11 = *(_OWORD *)(*(_QWORD *)v6 + 584);
  v12 = *(_OWORD *)(*(_QWORD *)v6 + 568);
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1768]), sel_init);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v12;
  *(_OWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = a4;
  swift_retain();
  sub_23AA93780(a4);
  sub_23AAE0620();
}

uint64_t sub_23AADA878()
{
  void *v0;

  return swift_release();
}

uint64_t sub_23AADA8A0(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5)
{
  uint64_t v5;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *);
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  _QWORD v34[5];
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v10 = *(_QWORD **)v5;
  v11 = *(_QWORD *)(*(_QWORD *)v5 + 568);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v12 = sub_23B1C74F0();
  v37 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v36 = (_QWORD *)((char *)v34 - v13);
  v14 = sub_23B1C5E4C();
  v38 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v40 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v41 = v11;
  v16[2] = v11;
  v17 = a5;
  v18 = v10[72];
  v16[3] = v18;
  v43 = v10[73];
  v16[4] = v43;
  v19 = v10[74];
  v20 = a4;
  v42 = v19;
  v16[5] = v19;
  v16[6] = a4;
  v16[7] = v17;
  v21 = swift_retain();
  if (a3 < 51)
    sub_23AF4E9A8(v21);
  v35 = v12;
  swift_retain();
  v22 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a2);
  sub_23AA93780(a2);
  swift_retain();
  v23 = sub_23B1C5E40();
  v24 = sub_23B1C6AAC();
  v25 = os_log_type_enabled(v23, v24);
  v34[4] = v18;
  if (v25)
  {
    v26 = (_DWORD *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v34[3] = v27;
    v44 = v27;
    *v26 = 136446466;
    v34[1] = v26 + 1;
    v34[2] = v23;
    sub_23AF4E7D4(v27);
  }
  sub_23AAB47B0(a2);
  swift_release();
  sub_23AAB47B0(a2);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v39);
  v28 = v41;
  v29 = (void *)sub_23B1C63BC();
  v30 = (id)FPInvalidParameterError();

  if (v30)
  {
    v31 = (uint64_t)v36;
    *v36 = v30;
    v32 = v35;
    swift_storeEnumTagMultiPayload();
    sub_23AADADDC(v31, v20, v17, v28);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v31, v32);
  }
  else
  {
    result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t sub_23AADADDC(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void **v19;
  void *v20;
  id v21;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(_QWORD *);
  char *v30;

  v28 = *(_QWORD *)(a4 - 8);
  v29 = a2;
  MEMORY[0x24BDAC7A8](a1);
  v27 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v30 = (char *)&v27 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v13 = sub_23B1C74F0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char **)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v19 = (void **)((char *)&v27 - v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v27 - v18, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *v19;
    *v17 = v20;
    swift_storeEnumTagMultiPayload();
    v21 = v20;
    v29(v17);

    return (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v17, v13);
  }
  else
  {
    v23 = v30;
    (*(void (**)(char *, void **, uint64_t))(v8 + 32))(v30, v19, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v23, v7);
    v24 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, a4) == 1)
    {
      v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v11, v7);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v17, 1, 1, a4);
      swift_storeEnumTagMultiPayload();
      v29(v17);
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v17, v13);
      return ((uint64_t (*)(char *, uint64_t))v25)(v30, v7);
    }
    else
    {
      v26 = v27;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v27, v11, a4);
      (*(void (**)(_QWORD *, char *, uint64_t))(v24 + 16))(v17, v26, a4);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v17, 0, 1, a4);
      swift_storeEnumTagMultiPayload();
      v29(v17);
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v17, v13);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, a4);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v30, v7);
    }
  }
}

void sub_23AADB0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[14];

  v15[7] = a3;
  v15[8] = a2;
  v11 = sub_23B1C6C98();
  v15[1] = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v15[4] = (char *)v15 - v13;
  v15[5] = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15[3] = (char *)v15 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[10] = a4;
  v15[11] = a5;
  v15[12] = a6;
  v15[13] = a7;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AADB194(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t (*v18)(void **, uint64_t);
  void (*v19)(void **);
  void **v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[96];

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 144) = &v35[-v7];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  *(_QWORD *)(v4 - 176) = v3;
  v8 = sub_23B1C74F0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (void **)&v35[-v10];
  sub_23B1C6C98();
  v12 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (void **)&v35[-v13];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(&v35[-v13], v1, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = *v14;
    *v11 = *v14;
    swift_storeEnumTagMultiPayload();
    v17 = v16;
    (*(void (**)(void **))(v4 - 128))(v11);

    v18 = *(uint64_t (**)(void **, uint64_t))(v9 + 8);
LABEL_5:
    v20 = v11;
    v21 = v8;
    return v18(v20, v21);
  }
  *(_QWORD *)(v4 - 192) = v9;
  v19 = *(void (**)(void **))(v4 - 128);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(v14, 1, a1) == 1)
  {
    *(_DWORD *)(v4 - 116) = sub_23B1C54F8();
    swift_dynamicCast();
    *v11 = *(void **)(v4 - 112);
    swift_storeEnumTagMultiPayload();
    v19(v11);
    v18 = *(uint64_t (**)(void **, uint64_t))(*(_QWORD *)(v4 - 192) + 8);
    goto LABEL_5;
  }
  v22 = v6;
  v23 = *(void ***)(v4 - 144);
  (*(void (**)(void))(v6 + 32))();
  v24 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = v8;
  if ((*((_BYTE *)v23 + *(int *)(a1 + 56)) & 1) != 0)
  {
    v27 = 1;
    v28 = *(_QWORD *)(v4 - 160);
    v29 = *(_QWORD *)(v4 - 152);
  }
  else
  {
    v28 = *(_QWORD *)(v4 - 160);
    (*(void (**)(uint64_t, void **, _QWORD))(v25 + 16))(v28, v23, *(_QWORD *)(a1 + 16));
    v27 = 0;
    v29 = *(_QWORD *)(v4 - 152);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v28, v27, 1, v24);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v28, 1, v2);
  v31 = v28;
  v32 = *(_QWORD *)(v4 - 192);
  if (v30 == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(v31, *(_QWORD *)(v4 - 176));
    (*(void (**)(void **, uint64_t, uint64_t, uint64_t))(v29 + 56))(v11, 1, 1, v2);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void **))(v4 - 128))(v11);
    (*(void (**)(void **, uint64_t))(v32 + 8))(v11, v26);
  }
  else
  {
    v33 = *(_QWORD *)(v4 - 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v33, v31, v2);
    (*(void (**)(void **, uint64_t, uint64_t))(v29 + 16))(v11, v33, v2);
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v29 + 56))(v11, 0, 1, v2);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void **))(v4 - 128))(v11);
    (*(void (**)(void **, uint64_t))(v32 + 8))(v11, v26);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v2);
  }
  v18 = *(uint64_t (**)(void **, uint64_t))(v22 + 8);
  v20 = v23;
  v21 = a1;
  return v18(v20, v21);
}

void sub_23AADB4F0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23AADB5D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for FPFSID();
}

void sub_23AADB610()
{
  uint64_t v0;

  (*(void (**)(void))(**(_QWORD **)(*(_QWORD *)(v0 + 40) + 16) + 96))();
  swift_storeEnumTagMultiPayload();
  sub_23AF4E3A4();
}

void sub_23AADB648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v2 - 136);
  v5 = sub_23AF9DA80(v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = *(_QWORD *)(v2 - 128);
  v6[3] = *(_QWORD *)(v2 - 120);
  v6[4] = v4;
  v6[5] = v1;
  swift_retain();
  sub_23AA93780(v4);
  swift_retain();
  sub_23AACED60(a1, 1, 0, v5, (uint64_t)sub_23AAFAA3C, (uint64_t)v6);
}

uint64_t sub_23AADB6CC()
{
  unint64_t v0;

  swift_release();
  sub_23AAB47B0(v0);
  return swift_release();
}

void sub_23AADB704(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[28];

  v19[10] = a7;
  v19[11] = a8;
  v19[16] = a6;
  v19[18] = a5;
  v19[19] = a3;
  v19[20] = a1;
  v19[21] = a2;
  v19[12] = a4;
  v8 = (_QWORD *)*a4;
  v9 = sub_23B1C5E4C();
  v19[8] = *(_QWORD *)(v9 - 8);
  v19[9] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v19[17] = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v8[71];
  v12 = sub_23B1C6C98();
  v19[5] = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v19[7] = (char *)v19 - v14;
  v19[6] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v19[4] = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v8[72];
  v17 = v8[73];
  v18 = v8[74];
  v19[23] = v11;
  v19[24] = v16;
  v19[13] = v16;
  v19[14] = v17;
  v19[25] = v17;
  v19[26] = v18;
  v19[15] = v18;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AADB820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  unint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _BYTE v32[96];

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = &v32[-v5];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v7 = sub_23B1C74F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (void **)&v32[-v9];
  sub_23B1C6C98();
  v11 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (void **)&v32[-v12];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 16))(&v32[-v12], *(_QWORD *)(v2 - 144), v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    *(_QWORD *)(v2 - 296) = v10;
    *(_QWORD *)(v2 - 288) = v7;
    *(_QWORD *)(v2 - 144) = v6;
    v18 = *(_QWORD *)(v2 - 168);
    *(_QWORD *)(v2 - 280) = v1;
    v19 = *(_QWORD *)(v2 - 160);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v4 + 48))(v13, 1, a1) == 1)
    {
      v20 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      sub_23AA93780(v19);
      sub_23AA93780(v19);
      swift_retain();
      v21 = sub_23B1C5E40();
      v22 = sub_23B1C6A94();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (_DWORD *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        *(_QWORD *)(v2 - 120) = v24;
        *v23 = 136315394;
        sub_23AF4E7D4(v24);
      }
      sub_23AAB47B0(v19);
      swift_release();
      sub_23AAB47B0(v19);

      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 240) + 8))(v18, *(_QWORD *)(v2 - 232));
      v26 = *(_QWORD *)(v2 - 152);
      v27 = *(_QWORD *)(v2 - 208);
      v29 = *(_QWORD *)(v2 - 224);
      v28 = *(_QWORD *)(v2 - 216);
      v30 = *(_QWORD *)(v2 + 16);
      v31 = (_QWORD *)swift_allocObject();
      v31[2] = *(_QWORD *)(v2 - 136);
      v31[3] = v26;
      v31[4] = v27;
      v31[5] = v19;
      v31[6] = v29;
      v31[7] = v28;
      v31[8] = v30;
      sub_23AA93780(v19);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_23AACD044();
    }
    v25 = *(_QWORD *)(v2 - 144);
    (*(void (**)(uint64_t, void **, uint64_t))(v4 + 32))(v25, v13, a1);
    sub_23AAF0164(v25, 1, v19, *(_QWORD *)(v2 - 280), *(_QWORD *)(v2 - 200), *(_QWORD *)(v2 - 192), *(_QWORD *)(v2 - 184));
  }
  v15 = *v13;
  *v10 = *v13;
  swift_storeEnumTagMultiPayload();
  v16 = v15;
  (*(void (**)(void **))(v2 - 136))(v10);

  return (*(uint64_t (**)(void **, uint64_t))(v8 + 8))(v10, v7);
}

void sub_23AADBE10(void *a1, char a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, void (*a8)(_QWORD *), uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void (*v21)(_QWORD *);

  v21 = a3;
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v14 = sub_23B1C74F0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v20 - v16);
  if ((a2 & 1) != 0)
  {
    *v17 = a1;
    swift_storeEnumTagMultiPayload();
    v19 = a1;
    v21(v17);
    (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  }
  else if (__OFADD__(a7, 1))
  {
    __break(1u);
  }
  else
  {
    v18 = swift_retain();
    sub_23AADA8A0(v18, a6, a7 + 1, a8, a9);
    sub_23AAFCD98(a1, 0);
  }
}

uint64_t sub_23AADBF54(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v9 = sub_23B1C5E4C();
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a2);
  sub_23AA93780(a2);
  swift_retain();
  v13 = sub_23B1C5E40();
  v14 = sub_23B1C6A94();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v20[1] = a3;
    v16 = (_DWORD *)v15;
    v17 = swift_slowAlloc();
    v20[0] = v17;
    v23 = v17;
    *v16 = 136315394;
    v20[2] = a4;
    sub_23AF4E7D4(v17);
  }
  sub_23AAB47B0(a2);
  swift_release();
  sub_23AAB47B0(a2);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a2;
  v18[5] = a1;
  v18[6] = v4;
  sub_23AA93780(a2);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AADA8A0(a1, a2, 0, (void (*)(_QWORD *))sub_23AAFA964, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_23AADC22C(uint64_t a1, void (*a2)(void **), uint64_t a3, unint64_t a4, _QWORD *a5, _QWORD *a6)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  void *v36;
  id v37;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  id v44;
  NSObject *v45;
  void (*v46)(char *, char *, uint64_t);
  unint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  _BOOL4 v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(NSObject *, uint64_t);
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _DWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  char *v77;
  unint64_t v78;
  char *v79;
  _DWORD v80[4];
  NSObject *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  void **v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  uint64_t v98;
  _QWORD *v99;
  NSObject *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(void **);
  uint64_t v109[5];

  v103 = a4;
  v104 = a6;
  v107 = a3;
  v108 = a2;
  v99 = a5;
  v7 = *a5;
  v8 = (_QWORD *)*a6;
  v9 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v9);
  v92 = (char *)v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5474();
  v93 = *(_QWORD *)(v11 - 8);
  v94 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v91 = (char *)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_23B1C5E4C();
  v98 = *(_QWORD *)(v102 - 8);
  v13 = MEMORY[0x24BDAC7A8](v102);
  v100 = ((char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v13);
  v97 = ((char *)v80 - v16);
  v105 = v8;
  v17 = v8[71];
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v15);
  v101 = (char *)v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v80 - v22;
  v96 = v24;
  MEMORY[0x24BDAC7A8](v21);
  v106 = (char *)v80 - v25;
  v26 = *(_QWORD *)(v7 + 80);
  v27 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v95 = v27;
  v28 = sub_23B1C74F0();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (void **)((char *)v80 - v30);
  sub_23B1C6C98();
  v32 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (void **)((char *)v80 - v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))((char *)v80 - v33, a1, v32);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v36 = *v34;
    *v31 = *v34;
    swift_storeEnumTagMultiPayload();
    v37 = v36;
    v108(v31);

    return (*(uint64_t (**)(void **, uint64_t))(v29 + 8))(v31, v28);
  }
  else
  {
    v89 = v31;
    v87 = v29;
    v90 = v28;
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v18 + 48))(v34, 1, v17) != 1)
    {
      v41 = v18;
      v42 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      v43 = v106;
      v84 = v42;
      v42(v106, (char *)v34, v17);
      v44 = (id)fpfs_current_or_default_log();
      v45 = v97;
      sub_23B1C5E58();
      v46 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      v46(v23, v43, v17);
      v47 = v103;
      sub_23AA93780(v103);
      sub_23AA93780(v47);
      v48 = sub_23B1C5E40();
      v49 = sub_23B1C6A94();
      v50 = v49;
      v51 = os_log_type_enabled(v48, v49);
      v85 = v41;
      v83 = v46;
      if (v51)
      {
        v52 = swift_slowAlloc();
        v82 = swift_slowAlloc();
        v109[0] = v82;
        *(_DWORD *)v52 = 136315394;
        v88 = v52 + 4;
        v81 = v48;
        v53 = v101;
        v46(v101, v23, v17);
        v54 = *(void (**)(char *, uint64_t))(v41 + 8);
        v54(v23, v17);
        v80[3] = v50;
        v55 = v105[73];
        v56 = sub_23B1C7304();
        v58 = v57;
        v86 = v54;
        v54(v53, v17);
        v109[4] = sub_23AABEC68(v56, v58, v109);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v52 + 12) = 2080;
        v88 = v55;
        sub_23AF9E228();
      }
      sub_23AAB47B0(v47);
      v86 = *(void (**)(char *, uint64_t))(v41 + 8);
      v86(v23, v17);
      sub_23AAB47B0(v47);

      v59 = *(void (**)(NSObject *, uint64_t))(v98 + 8);
      v59(v45, v102);
      v88 = v105[73];
      v60 = v100;
      if ((sub_23AF21910(v17, v88) & 1) != 0)
      {
        v61 = v105[72];
        v62 = v105[74];
        v109[0] = v17;
        v109[1] = v61;
        v109[2] = v88;
        v109[3] = v62;
        type metadata accessor for SQLJobRegistry();
      }
      v63 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v64 = v103;
      sub_23AA93780(v103);
      sub_23AA93780(v64);
      swift_retain();
      v65 = sub_23B1C5E40();
      v66 = sub_23B1C6A94();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = (_DWORD *)swift_slowAlloc();
        v68 = swift_slowAlloc();
        v98 = v68;
        v109[0] = v68;
        *v67 = 136315394;
        v97 = v65;
        sub_23AF4E7D4(v68);
      }
      sub_23AAB47B0(v64);
      swift_release();
      sub_23AAB47B0(v64);

      v59(v60, v102);
      v69 = v105[72];
      v105 = (_QWORD *)v105[74];
      v70 = v107;
      v71 = v43;
      v72 = v83;
      v73 = v69;
      v74 = v88;
      v75 = v105;
      v76 = sub_23AF9DA80(v64);
      v77 = v101;
      v72(v101, v71, v17);
      v78 = (*(unsigned __int8 *)(v85 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
      v79 = (char *)swift_allocObject();
      *((_QWORD *)v79 + 2) = v17;
      *((_QWORD *)v79 + 3) = v73;
      *((_QWORD *)v79 + 4) = v74;
      *((_QWORD *)v79 + 5) = v75;
      *((_QWORD *)v79 + 6) = v108;
      *((_QWORD *)v79 + 7) = v70;
      v84(&v79[v78], v77, v17);
      swift_retain();
      sub_23AAD3A98((uint64_t)v99, 1, 1, 0, v76, (uint64_t)sub_23AAFB104, (uint64_t)v79);
    }
    v39 = v89;
    (*(void (**)(void **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v89, 1, 1, v26);
    v40 = v90;
    swift_storeEnumTagMultiPayload();
    v108(v39);
    return (*(uint64_t (**)(void **, uint64_t))(v87 + 8))(v39, v40);
  }
}

void sub_23AADCDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[14];

  v14[2] = a4;
  v14[8] = a3;
  v14[9] = a2;
  v12 = sub_23B1C6C98();
  v14[5] = *(_QWORD *)(v12 - 8);
  v14[6] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14[4] = (char *)v14 - v13;
  v14[10] = a5;
  v14[11] = a6;
  v14[12] = a7;
  v14[13] = a8;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AADCE78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t (*v19)(void **, uint64_t);
  void **v20;
  uint64_t v21;
  void (*v22)(void **, void **, uint64_t);
  void **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  void (*v30)(void **);
  uint64_t v31;
  _BYTE v33[96];

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 136) = &v33[-v7];
  *(_QWORD *)(v4 - 168) = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v9 = sub_23B1C74F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (void **)&v33[-v11];
  sub_23B1C6C98();
  v13 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (void **)&v33[-v14];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(&v33[-v14], v1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = *v15;
    *v12 = *v15;
    swift_storeEnumTagMultiPayload();
    v18 = v17;
    (*(void (**)(void **))(v4 - 120))(v12);

    v19 = *(uint64_t (**)(void **, uint64_t))(v10 + 8);
LABEL_5:
    v20 = v12;
    v21 = v9;
    return v19(v20, v21);
  }
  *(_QWORD *)(v4 - 184) = v10;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(v15, 1, a1) == 1)
  {
    (*(void (**)(void **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void **))(v4 - 120))(v12);
    v19 = *(uint64_t (**)(void **, uint64_t))(*(_QWORD *)(v4 - 184) + 8);
    goto LABEL_5;
  }
  *(_QWORD *)(v4 - 192) = v6;
  v22 = *(void (**)(void **, void **, uint64_t))(v6 + 32);
  v23 = *(void ***)(v4 - 136);
  v22(v23, v15, a1);
  v24 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*((_BYTE *)v23 + *(int *)(a1 + 56)) & 1) != 0)
  {
    v26 = 1;
    v27 = *(_QWORD *)(v4 - 160);
  }
  else
  {
    v27 = *(_QWORD *)(v4 - 160);
    (*(void (**)(uint64_t, void **, _QWORD))(v25 + 16))(v27, v23, *(_QWORD *)(a1 + 16));
    v26 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v27, v26, 1, v24);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v27, 1, v3);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 152) + 8))(v27, *(_QWORD *)(v4 - 144));
  v29 = v28 == 1;
  v30 = *(void (**)(void **))(v4 - 120);
  v31 = *(_QWORD *)(v4 - 184);
  if (v29)
  {
    (*(void (**)(void **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 168) + 64))(v3);
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v12, 0, 1, AssociatedTypeWitness);
  }
  swift_storeEnumTagMultiPayload();
  v30(v12);
  (*(void (**)(void **, uint64_t))(v31 + 8))(v12, v9);
  v19 = *(uint64_t (**)(void **, uint64_t))(*(_QWORD *)(v4 - 192) + 8);
  v20 = v23;
  v21 = a1;
  return v19(v20, v21);
}

uint64_t sub_23AADD1A0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  double v26;
  double v27;
  uint64_t result;
  double v29;
  void (*v30)(_QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void (*v52)(_QWORD, _QWORD);
  uint64_t AssociatedTypeWitness;

  v46 = a6;
  v48 = a4;
  v49 = a3;
  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + 552);
  v42 = *(_QWORD *)(v9 - 8);
  v43 = a5;
  MEMORY[0x24BDAC7A8](a1);
  v39[1] = v10;
  v40 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23B1C60A4();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v44 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C5BDC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v8;
  v16 = *(_QWORD *)(v8 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v50 = (uint64_t)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v39 - v20;
  v51 = (id)a1[5];
  v22 = *(void (**)(uint64_t, uint64_t))(v16 + 64);
  v39[0] = a2;
  v23 = v16;
  v24 = v16;
  v25 = v22;
  v22(v9, v24);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v27 = v26;
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v29 = v27 * 1000000000.0;
  if ((~COERCE__INT64(v27 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v30 = v52;
  sub_23B1B6F30(v21, 0x20uLL, (uint64_t)v29);
  if (!v30)
  {
    v52 = *(void (**)(_QWORD, _QWORD))(v17 + 8);
    v52(v21, AssociatedTypeWitness);
    v51 = objc_msgSend((id)objc_opt_self(), sel_discreteProgressWithTotalUnitCount_, 1);
    v31 = v39[0];
    v25(v9, v23);
    v32 = (uint64_t)v44;
    sub_23B1C605C();
    v33 = v42;
    v34 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v31, v9);
    v35 = (*(unsigned __int8 *)(v33 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v36 = (char *)swift_allocObject();
    *((_QWORD *)v36 + 2) = v9;
    v37 = v41;
    *((_QWORD *)v36 + 3) = *(_QWORD *)(v41 + 560);
    *((_QWORD *)v36 + 4) = v23;
    v38 = v43;
    *((_QWORD *)v36 + 5) = *(_QWORD *)(v37 + 576);
    *((_QWORD *)v36 + 6) = v38;
    *((_QWORD *)v36 + 7) = v46;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v36[v35], v34, v9);
    swift_retain();
    sub_23AFAEB6C(v50, v48, (uint64_t)v51, v32, (uint64_t)sub_23AAFB2AC, (uint64_t)v36);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, AssociatedTypeWitness);
}

uint64_t sub_23AADD528(void *a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v12 = sub_23B1C74F0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v18 - v14);
  if (a1)
  {
    *v15 = a1;
    swift_storeEnumTagMultiPayload();
    v16 = a1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a7 + 64))(a5, a7);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v15, 0, 1, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
  }
  a2(v15);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_23AADD684(uint64_t a1, uint64_t a2, int a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, _QWORD, void *, void (*)(), uint64_t, void (*)(void *, char), uint64_t);
  NSObject *v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  NSObject *v46;
  uint64_t v47;
  void *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *AssociatedTypeWitness;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;

  v64 = a5;
  v65 = a6;
  v50 = a4;
  v67 = a3;
  v59 = a2;
  v53 = a1;
  v11 = (_QWORD *)*v8;
  v12 = *(_QWORD *)(*(_QWORD *)(a7 - 8) + 64);
  v62 = *(_QWORD *)(a7 - 8);
  v63 = v12;
  MEMORY[0x24BDAC7A8](a1);
  v61 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v11[73];
  v56 = v11[71];
  AssociatedTypeWitness = (_QWORD *)swift_getAssociatedTypeWitness();
  v58 = *(AssociatedTypeWitness - 1);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v49 = (char *)&v47 - v14;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_BYTE *)(v15 + 24) = -1;
  v16 = dispatch_group_create();
  dispatch_group_enter(v16);
  v17 = *(_QWORD *)(v8[4] + 16);
  v18 = *(void (**)(uint64_t, uint64_t))(a8 + 64);
  swift_retain();
  v51 = a7;
  v52 = a8;
  v19 = a8;
  v18(a7, a8);
  v54 = v11[72];
  v57 = v11[74];
  v20 = v50;
  v48 = sub_23AF9DAF0(v50);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = v19;
  *(_QWORD *)(v21 + 32) = v16;
  *(_QWORD *)(v21 + 40) = v15;
  *(_BYTE *)(v21 + 48) = v67;
  v22 = v47;
  *(_QWORD *)(v21 + 56) = v47;
  *(_QWORD *)(v21 + 64) = v20;
  v23 = v20;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v16;
  *(_QWORD *)(v24 + 24) = v15;
  v25 = *(void (**)(char *, uint64_t, _QWORD, void *, void (*)(), uint64_t, void (*)(void *, char), uint64_t))(*(_QWORD *)v17 + 144);
  v26 = v16;
  swift_retain_n();
  v55 = v26;
  v27 = v22;
  swift_retain();
  sub_23AA93780(v23);
  v29 = v48;
  v28 = v49;
  v25(v49, v59, 0, v48, sub_23AAFA734, v21, sub_23AAFA74C, v24);
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(char *, _QWORD *))(v58 + 8))(v28, AssociatedTypeWitness);
  v30 = v27;
  AssociatedTypeWitness = (_QWORD *)sub_23AFD7BC0();
  v32 = v61;
  v31 = v62;
  v33 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v53, v51);
  v34 = v31;
  v35 = (*(unsigned __int8 *)(v31 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v36 = v35 + v63;
  v37 = (v35 + v63) & 0xFFFFFFFFFFFFFFF8;
  v38 = (char *)swift_allocObject();
  v39 = v54;
  *((_QWORD *)v38 + 2) = v56;
  *((_QWORD *)v38 + 3) = v39;
  v40 = v33;
  v41 = v66;
  *((_QWORD *)v38 + 4) = v33;
  *((_QWORD *)v38 + 5) = v41;
  v42 = v52;
  *((_QWORD *)v38 + 6) = v57;
  *((_QWORD *)v38 + 7) = v42;
  v43 = v64;
  v44 = v65;
  *((_QWORD *)v38 + 8) = v15;
  *((_QWORD *)v38 + 9) = v43;
  *((_QWORD *)v38 + 10) = v44;
  *((_QWORD *)v38 + 11) = v30;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v38[v35], v32, v40);
  v38[v36] = v67;
  *(_QWORD *)&v38[v37 + 8] = v23;
  swift_retain();
  swift_retain();
  sub_23AA93780(v23);
  v45 = AssociatedTypeWitness;
  swift_retain();
  v46 = v55;
  sub_23AA81A30((uint64_t)"materializeIgnoredItem(_:continuation:duringDiskImport:request:completionHandler:)", 82, 2, 0, v45, (uint64_t)sub_23AAFA7F0, (uint64_t)v38);
  swift_release();
  swift_release();

}

void sub_23AADDA18()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AADE048(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;
  uint64_t v13;

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v6 = sub_23B1C74F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v13 - v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - v8, a1, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *v9;
    swift_beginAccess();
    v11 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v10;
    v12 = *(_BYTE *)(a2 + 24);
    *(_BYTE *)(a2 + 24) = 1;
    sub_23AAFA84C(v11, v12);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  }
  dispatch_group_leave(a3);
}

void sub_23AADE180(void *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  v5 = a3 + 16;
  v6 = a1;
  sub_23B0D9E34(a2, a1, v5);
  dispatch_group_leave(a2);
}

uint64_t sub_23AADE1D0(uint64_t a1, int a2, int a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t AssociatedTypeWitness;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v41 = a6;
  v39 = a5;
  v44 = a4;
  v42 = a3;
  v40 = a2;
  v12 = (_QWORD *)*v8;
  v13 = sub_23B1C60A4();
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v37 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a7 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v12[73];
  v34 = v12[71];
  v35 = v19;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v21 = (char *)&v33 - v20;
  v33 = a8;
  (*(void (**)(uint64_t, uint64_t))(a8 + 64))(a7, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, a7);
  v22 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v23 = (v17 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = v34;
  *((_QWORD *)v25 + 3) = v12[72];
  *((_QWORD *)v25 + 4) = a7;
  *((_QWORD *)v25 + 5) = v35;
  v26 = v33;
  *((_QWORD *)v25 + 6) = v12[74];
  *((_QWORD *)v25 + 7) = v26;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v25[v22], v18, a7);
  v27 = &v25[v23];
  v28 = v41;
  *(_QWORD *)v27 = v39;
  *((_QWORD *)v27 + 1) = v28;
  v29 = &v25[v24];
  *(_QWORD *)v29 = v36;
  v29[8] = v40;
  v29[9] = v42;
  v30 = v44;
  *(_QWORD *)&v25[(v24 + 17) & 0xFFFFFFFFFFFFFFF8] = v44;
  swift_retain();
  swift_retain();
  sub_23AA93780(v30);
  v31 = (uint64_t)v37;
  sub_23AAD6A5C();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v31, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v21, AssociatedTypeWitness);
}

void sub_23AADE440(void *a1, char a2, NSObject *a3, uint64_t a4)
{
  uint64_t v6;
  char v7;

  v6 = a4 + 16;
  v7 = a2 & 1;
  sub_23AAFCDA4(a1, a2 & 1);
  sub_23B0D9F3C(a3, v6, a1, v7);
  dispatch_group_leave(a3);
}

void sub_23AADE49C(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v16;
  void *v17;

  swift_beginAccess();
  v16 = *(unsigned __int8 *)(a1 + 24);
  if (v16 == 255)
    goto LABEL_5;
  v17 = *(void **)(a1 + 16);
  if ((v16 & 1) != 0)
  {
    sub_23AAFCDA4(v17, 1);
    a2(v17);
    goto LABEL_7;
  }
  if (!v17)
  {
LABEL_5:
    a2(0);
    return;
  }
  sub_23AAFCDA4(v17, 0);
  sub_23AADD684(a5, v17, a6 & 1, a7, a2, a3, a8, a9);
LABEL_7:
  sub_23AAFA84C(v17, v16);
}

void sub_23AADE590(void *a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, _BOOL4 a6, int a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(uint64_t, uint64_t);
  id v28;
  id v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  void (*v42)(char *, _BOOL4, void (*)(void *), char *);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unint64_t v54;
  char *v55;
  void (*v56)(void *);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v54 = a8;
  v53 = a7;
  v46 = a6;
  v56 = a3;
  v13 = a10;
  v14 = *(_QWORD *)(a9 - 8);
  v58 = a4;
  v59 = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](a1);
  v49 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v44 - v17;
  v20 = *(_QWORD *)(v19 + 584);
  v50 = v19;
  v47 = *(_QWORD *)(v19 + 568);
  v48 = v20;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v51 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v52 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v23 = (char *)&v44 - v22;
  v24 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a5;
  v55 = v23;
  if (a1)
  {
    v27 = *(void (**)(uint64_t, uint64_t))(a10 + 104);
    v28 = a1;
    v44 = a10;
    v45 = a2;
    v27(a9, a10);
    LODWORD(v27) = v26[*(int *)(v24 + 80)];
    sub_23AA937BC((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if ((_DWORD)v27 == 1)
    {
      v29 = a1;
      v56(a1);

      return;
    }

    a5 = v57;
    v13 = v44;
    a2 = v45;
  }
  v30 = *(_QWORD *)(*(_QWORD *)(a5 + 32) + 16);
  v31 = *(void (**)(uint64_t, uint64_t))(v13 + 64);
  swift_retain();
  v31(a9, v13);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v32(v18, a2, a9);
  v45 = v30;
  v46 = v46 && sub_23AF219A4(a9, v13) == 1;
  v33 = v59;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v18, a9);
  v34 = v49;
  v32(v49, a2, a9);
  v35 = (*(unsigned __int8 *)(v33 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v36 = (v35 + v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v37 = (char *)swift_allocObject();
  *((_QWORD *)v37 + 2) = v47;
  v38 = v50;
  *((_QWORD *)v37 + 3) = *(_QWORD *)(v50 + 576);
  *((_QWORD *)v37 + 4) = a9;
  *((_QWORD *)v37 + 5) = v48;
  *((_QWORD *)v37 + 6) = *(_QWORD *)(v38 + 592);
  *((_QWORD *)v37 + 7) = v13;
  v39 = v58;
  *((_QWORD *)v37 + 8) = v56;
  *((_QWORD *)v37 + 9) = v39;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v37[v35], v34, a9);
  v40 = &v37[(v35 + v15 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v40 = v57;
  v40[8] = v53 & 1;
  v41 = v54;
  *(_QWORD *)&v37[v36] = v54;
  v42 = *(void (**)(char *, _BOOL4, void (*)(void *), char *))(*(_QWORD *)v45 + 776);
  swift_retain();
  swift_retain();
  sub_23AA93780(v41);
  v43 = v55;
  v42(v55, v46, sub_23AAFA65C, v37);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v52);
}

void sub_23AADE8F8(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  id v12;

  if (a1)
  {
    v12 = a1;
    a2(a1);

  }
  else if (sub_23AF219A4(a8, a9) == 1)
  {
    sub_23AADD684(a4, 0, a6 & 1, a7, (uint64_t)a2, a3, a8, a9);
  }
  else
  {
    a2(0);
  }
}

uint64_t sub_23AADE9CC(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t, _QWORD), uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, _QWORD);
  uint64_t v47;

  v46 = a3;
  v47 = a4;
  v43 = a2;
  v42 = (_QWORD *)*v6;
  v10 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v40 = v12;
  v41 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v40 - v13;
  v15 = type metadata accessor for ItemMetadata();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v40 - v19;
  v21 = *(void (**)(uint64_t, uint64_t))(a6 + 104);
  v45 = a6;
  v21(a5, a6);
  v22 = v20[*(int *)(v15 + 64)];
  sub_23AA937BC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v23 = v10;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v25 = a1;
  v24(v14, a1, a5);
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, a5);
  }
  else
  {
    v21(a5, v45);
    v26 = v23;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, a5);
    v27 = v18[*(int *)(v15 + 68)];
    sub_23AA937BC((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if ((v27 & 1) == 0)
    {
      v28 = v41;
      v24(v41, v25, a5);
      v29 = (*(unsigned __int8 *)(v26 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v30 = (v40 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
      v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
      v32 = (char *)swift_allocObject();
      v33 = v42;
      *((_QWORD *)v32 + 2) = v42[71];
      *((_QWORD *)v32 + 3) = v33[72];
      *((_QWORD *)v32 + 4) = a5;
      *((_QWORD *)v32 + 5) = v33[73];
      v35 = v44;
      v34 = v45;
      *((_QWORD *)v32 + 6) = v33[74];
      *((_QWORD *)v32 + 7) = v34;
      *((_QWORD *)v32 + 8) = v35;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v32[v29], v28, a5);
      v36 = &v32[v30];
      v37 = v47;
      *(_QWORD *)v36 = v46;
      *((_QWORD *)v36 + 1) = v37;
      v38 = v43;
      *(_QWORD *)&v32[v31] = v43;
      swift_retain();
      swift_retain();
      sub_23AA93780(v38);
      sub_23ACFFC70((uint64_t)"checkIsInIgnoredHierarchy(_:request:completion:)", 48, 2, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AAFB588, (uint64_t)v32);
      return swift_release();
    }
  }
  return v46(1, 0);
}

void sub_23AADEC80()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AADED5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v12 - 272) = a1;
  v13 = sub_23B1C6C98();
  *(_QWORD *)(v12 - 256) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v12 - 248) = v13;
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v12 - 264) = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v12 - 168) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v12 - 160) = AssociatedTypeWitness;
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v12 - 208) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v12 - 200) = (char *)&a9 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v20 = *(_QWORD *)(v10 + 576);
  v21 = *(_QWORD *)(v10 + 592);
  *(_QWORD *)(v12 - 120) = v9;
  *(_QWORD *)(v12 - 112) = v20;
  *(_QWORD *)(v12 - 104) = v11;
  *(_QWORD *)(v12 - 96) = v21;
  type metadata accessor for ItemReconciliation();
}

void sub_23AADEE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = sub_23B1C6C98();
  *(_QWORD *)(v0 - 232) = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v0 - 224) = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = *(_QWORD *)(v0 - 136);
  v4 = *(void (**)(uint64_t))(*(_QWORD *)(v0 - 128) + 64);
  *(_QWORD *)(v0 - 216) = v4;
  v4(v3);
  sub_23AB00114();
}

uint64_t sub_23AADEEE4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  void (*v46)(uint64_t, uint64_t, _QWORD, uint64_t, void (*)(uint64_t), _QWORD *);
  uint64_t v47;

  if (v21)
  {

    v29 = *(_QWORD *)(v28 - 160);
    v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 168) + 8);
    *(_QWORD *)(v28 - 144) = v30;
    v30(v20, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v24, 1, 1, v25);
    *(_QWORD *)(v28 - 192) = 0;
LABEL_5:
    v33 = *(_QWORD *)(v28 - 136);
    v32 = *(_QWORD *)(v28 - 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v28 - 232) + 8))(v24, *(_QWORD *)(v28 - 224));
    goto LABEL_6;
  }
  *(_QWORD *)(v28 - 192) = 0;
  v29 = *(_QWORD *)(v28 - 160);
  v31 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 168) + 8);
  v31(v20, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v25) == 1)
  {
    *(_QWORD *)(v28 - 144) = v31;
    goto LABEL_5;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v27, v24, v25);
  if ((*(_BYTE *)(v27 + *(int *)(type metadata accessor for ItemReconciliationHalf(0, v22, v26, v47) + 36)) & 0x10) != 0)
  {
    (*(void (**)(uint64_t, _QWORD))(v28 - 184))(1, 0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v27, v25);
  }
  *(_QWORD *)(v28 - 144) = v31;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, v25);
  v33 = *(_QWORD *)(v28 - 136);
  v32 = *(_QWORD *)(v28 - 128);
LABEL_6:
  v34 = *(void (**)(uint64_t, uint64_t))(v32 + 72);
  v35 = *(_QWORD *)(v28 - 200);
  *(_QWORD *)(v28 - 128) = v34;
  v34(v33, v32);
  v36 = *(_QWORD *)(v28 - 208);
  (*(void (**)(uint64_t, uint64_t))(v28 - 216))(v33, v32);
  v37 = v35;
  swift_getAssociatedConformanceWitness();
  LOBYTE(v35) = sub_23B1C63A4();
  v38 = *(void (**)(uint64_t, uint64_t))(v28 - 144);
  v38(v36, v29);
  v38(v37, v29);
  if ((v35 & 1) != 0)
    return (*(uint64_t (**)(_QWORD, _QWORD))(v28 - 184))(0, 0);
  *(_QWORD *)(v28 - 144) = v38;
  v40 = *(_QWORD *)(v28 - 152);
  v41 = *(_QWORD *)(*(_QWORD *)(v40 + 32) + 16);
  swift_retain();
  (*(void (**)(uint64_t, uint64_t))(v28 - 128))(v33, v32);
  v42 = *(_QWORD *)(v28 - 264);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v28 - 272) - 8) + 56))(v42, 1, 1);
  v43 = v37;
  v44 = (_QWORD *)swift_allocObject();
  v44[2] = v33;
  v44[3] = v32;
  v44[4] = *(_QWORD *)(v28 - 184);
  v44[5] = *(_QWORD *)(v28 - 176);
  v44[6] = v40;
  v45 = *(_QWORD *)(v28 - 240);
  v44[7] = v45;
  v46 = *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, void (*)(uint64_t), _QWORD *))(*(_QWORD *)v41 + 136);
  swift_retain();
  swift_retain();
  sub_23AA93780(v45);
  v46(v43, v42, 0, 2, sub_23AAFB610, v44);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v28 - 256) + 8))(v42, *(_QWORD *)(v28 - 248));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v28 - 144))(v43, v29);
}

void sub_23AADF1B4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t *a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;

  v20 = a5;
  v8 = *a4;
  v9 = *(_QWORD *)(*a4 + 568);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v13 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (id *)((char *)&v19 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v19 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = *v15;
    v18 = *v15;
    a2((uint64_t)v17, 1);

  }
  else if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
    a2(0, 0);
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_23AADE9CC((uint64_t)v12, v20, a2, a3, v9, *(_QWORD *)(v8 + 584));
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_23AADF360(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;

  v35 = a3;
  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (id *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v15, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    return a2(a1);
  }
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) != 1)
  {
    sub_23AA8A05C((uint64_t)v15, &qword_2542E0F78);
    return a2(a1);
  }
  v17 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a4);
  v18 = sub_23B1C5E40();
  v19 = sub_23B1C6A94();
  if (os_log_type_enabled(v18, v19))
  {
    v34 = a5;
    v20 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v38 = v33;
    *(_DWORD *)v20 = 136315138;
    v32 = v20 + 4;
    sub_23AE5BC48(a4);
    v36 = sub_23AABEC68(v21, v22, &v38);
    sub_23B1C6CBC();
    a5 = v34;
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a4);
    _os_log_impl(&dword_23AA66000, v18, v19, "Waiting for propagation of root to the FP request %s", v20, 0xCu);
    v23 = v33;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v23, -1, -1);
    MEMORY[0x23B8614BC](v20, -1, -1);
  }
  else
  {
    sub_23AAB47B0(a4);
  }

  v25 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(a5 + 32) + 16) + 96))(&v38, v25);
  v26 = (_QWORD *)swift_allocObject();
  v27 = v35;
  v26[2] = a2;
  v26[3] = v27;
  v26[4] = a4;
  v26[5] = a5;
  v28 = v38;
  v29 = v39;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_23AAFC22C;
  *(_QWORD *)(v30 + 24) = v26;
  v36 = v28;
  v37 = v29;
  v31 = (_QWORD *)swift_allocObject();
  sub_23AA9F454(&v36, (uint64_t)(v31 + 2));
  v31[4] = a4;
  v31[5] = a5;
  v31[6] = sub_23AAFC22C;
  v31[7] = v26;
  sub_23AA93780(a4);
  swift_retain();
  swift_retain();
  sub_23AA93780(a4);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23ADF3D40((uint64_t)"propagateToFP(itemID:request:completion:)", 41, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v30, (uint64_t)sub_23AAFC23C, (uint64_t)v31);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AADF720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[18];

  v13[7] = a4;
  v13[11] = a2;
  v13[12] = a3;
  v13[3] = a5;
  v5 = *a5;
  v6 = *(_QWORD *)(*a5 + 584);
  v7 = *(_QWORD *)(*a5 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13[5] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13[6] = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13[4] = (char *)v13 - v9;
  v10 = sub_23B1C5E4C();
  v13[8] = *(_QWORD *)(v10 - 8);
  v13[9] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v11 = *(_QWORD *)(v5 + 576);
  v12 = *(_QWORD *)(v5 + 592);
  v13[14] = v7;
  v13[15] = v11;
  v13[16] = v6;
  v13[17] = v12;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AADF800(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  _BOOL4 v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _BYTE v32[96];

  v8 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v9 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (id *)&v32[-v10];
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
  *(_QWORD *)(v6 - 144) = v3;
  v13(&v32[-v10], v3, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    return (*(uint64_t (**)(_QWORD))(v6 - 136))(*(_QWORD *)(v6 - 144));
  }
  *(_QWORD *)(v6 - 224) = v5;
  *(_QWORD *)(v6 - 216) = v4;
  *(_QWORD *)(v6 - 208) = v1;
  v14 = *(_QWORD *)(v6 - 160);
  v15 = *(_QWORD *)(v6 - 152);
  v17 = *(_QWORD *)(v6 - 176);
  v16 = *(_QWORD *)(v6 - 168);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v11, 1, a1) != 1)
  {
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v11, v8);
    return (*(uint64_t (**)(_QWORD))(v6 - 136))(*(_QWORD *)(v6 - 144));
  }
  v18 = (id)fpfs_current_or_default_log();
  v19 = v2;
  sub_23B1C5E58();
  sub_23AA93780(v16);
  v20 = sub_23B1C5E40();
  v21 = sub_23B1C6A94();
  v22 = v21;
  v23 = os_log_type_enabled(v20, v21);
  v24 = *(_QWORD *)(v6 - 200);
  if (v23)
  {
    *(_DWORD *)(v6 - 144) = v22;
    v25 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v6 - 112) = swift_slowAlloc();
    *v25 = 136315138;
    sub_23AF9E228();
  }
  sub_23AAB47B0(v16);

  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v19, v15);
  v29 = *(_QWORD *)(v6 - 192);
  v28 = *(_QWORD *)(v6 - 184);
  (*(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v24 + 32) + 16) + 96))(v27);
  v30 = (_QWORD *)swift_allocObject();
  v31 = *(_QWORD *)(v6 - 128);
  v30[2] = *(_QWORD *)(v6 - 136);
  v30[3] = v31;
  v30[4] = v16;
  v30[5] = v24;
  sub_23AA93780(v16);
  swift_retain();
  swift_retain();
  sub_23AAD2010(v29, v16, (uint64_t)sub_23AAFAA58, (uint64_t)v30);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v29, v17);
}

uint64_t sub_23AADFB04(void *a1, void (*a2)(_QWORD *), uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v19;
  unsigned int v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD v41[2];
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD);
  uint64_t v47;
  void *v48;

  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (_QWORD *)((char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    *v16 = a1;
    swift_storeEnumTagMultiPayload();
    v17 = a1;
    a2(v16);
    return sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E2190);
  }
  else
  {
    v46 = (void (*)(_QWORD))a2;
    v19 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v20 = (a4 >> 1) & 3;
    v21 = (a4 >> 58) & 0x3C;
    sub_23AA93780(a4);
    v22 = sub_23B1C5E40();
    v23 = sub_23B1C6A94();
    if (os_log_type_enabled(v22, v23))
    {
      v45 = a5;
      v24 = swift_slowAlloc();
      v43 = (a4 >> 1) & 3;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc();
      v44 = a3;
      v27 = v26;
      v48 = (void *)v26;
      v42 = (a4 >> 58) & 0x3C;
      *(_DWORD *)v25 = 136315138;
      v41[1] = v25 + 4;
      sub_23AE5BC48(a4);
      v47 = sub_23AABEC68(v28, v29, (uint64_t *)&v48);
      LODWORD(v21) = v42;
      sub_23B1C6CBC();
      a5 = v45;
      swift_bridgeObjectRelease();
      sub_23AAB47B0(a4);
      _os_log_impl(&dword_23AA66000, v22, v23, "Root propagated, retry lookup request %s", v25, 0xCu);
      swift_arrayDestroy();
      v30 = v27;
      a3 = v44;
      MEMORY[0x23B8614BC](v30, -1, -1);
      v31 = v25;
      v20 = v43;
      MEMORY[0x23B8614BC](v31, -1, -1);
    }
    else
    {
      sub_23AAB47B0(a4);
    }

    v32 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(void **__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(a5 + 40) + 16) + 96))(&v48, v32);
    v33 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v33;
    *(_WORD *)(v34 + 24) = 256;
    *(_BYTE *)(v34 + 42) = 0;
    *(_QWORD *)(v34 + 32) = v33;
    *(_WORD *)(v34 + 40) = 256;
    v35 = v46;
    if ((v20 | v21) == 0x1E)
    {
      a4 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      v36 = a4;
    }
    else
    {
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = a4;
      v36 = v37 | 0x7000000000000004;
    }
    sub_23AA93780(a4);
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = v34;
    *(_QWORD *)(v38 + 24) = a5;
    *(_WORD *)(v38 + 32) = 256;
    *(_QWORD *)(v38 + 40) = v35;
    *(_QWORD *)(v38 + 48) = a3;
    *(_QWORD *)(v38 + 56) = v36;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v35;
    *(_QWORD *)(v39 + 24) = a3;
    swift_retain_n();
    v40 = v33;
    swift_retain();
    swift_retain();
    sub_23AA93780(v36);
    sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v39, (uint64_t)sub_23AABA3C4, v38);
    swift_release();
    swift_release();
    sub_23AAB47B0(v36);
    return swift_release();
  }
}

void sub_23AADFECC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23AADFFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 184) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v4;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AADFFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[96];

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v6 = sub_23B1C74F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v27[-v8];
  v10 = sub_23B1C5E4C();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *(_QWORD *)(v5 - 152);
  if (!v15)
  {
    *(_QWORD *)(v5 - 224) = v12;
    *(_QWORD *)(v5 - 216) = v11;
    *(_QWORD *)(v5 - 232) = v1;
    *(_QWORD *)(v5 - 248) = v0;
    *(_QWORD *)(v5 - 152) = v2;
    *(_QWORD *)(v5 - 208) = v4;
    v19 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v20 = *(_QWORD *)(v5 - 160);
    sub_23AA93780(v20);
    v21 = sub_23B1C5E40();
    v22 = sub_23B1C6A94();
    v23 = os_log_type_enabled(v21, v22);
    *(_QWORD *)(v5 - 240) = v3;
    if (v23)
    {
      v24 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)(v5 - 120) = swift_slowAlloc();
      *v24 = 136315138;
      *(_QWORD *)(v5 - 256) = v24 + 1;
      sub_23AF9E228();
    }
    sub_23AAB47B0(v20);

    (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v5 - 224) + 8))(v14, *(_QWORD *)(v5 - 216));
    v25 = *(_QWORD *)(v5 - 248);
    *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 176);
    *(_QWORD *)(v5 - 112) = v25;
    v26 = *(_QWORD *)(v5 - 200);
    *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 192);
    *(_QWORD *)(v5 - 96) = v26;
    type metadata accessor for FPFSID();
  }
  v16 = *(void **)(v5 - 152);
  *v9 = v15;
  swift_storeEnumTagMultiPayload();
  v17 = v16;
  (*(void (**)(_QWORD *))(v5 - 144))(v9);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_23AAE0344()
{
  _s14LookupBehaviorOMa();
}

uint64_t sub_23AAE0374(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1CE31C, a1);
  return sub_23B1C73B8() & 1;
}

uint64_t sub_23AAE03B8(char a1)
{
  if (!a1)
    return 0xD000000000000013;
  if (a1 == 1)
    return 0x74616761706F7270;
  return 0xD000000000000010;
}

uint64_t sub_23AAE0420()
{
  unint64_t v0;

  v0 = sub_23B1C7118();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_23AAE0468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B8613CC](&unk_23B1CE31C, a3);
  return sub_23B1C73B8();
}

uint64_t sub_23AAE04BC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1CE31C, a1);
  return sub_23B1C6698();
}

uint64_t sub_23AAE0508()
{
  MEMORY[0x23B8613CC](&unk_23B1CE31C);
  return sub_23B1C66B0();
}

uint64_t sub_23AAE0558()
{
  MEMORY[0x23B8613CC](&unk_23B1CE31C);
  return sub_23B1C66A4();
}

uint64_t sub_23AAE05A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AAE0420();
  *a1 = result;
  return result;
}

uint64_t sub_23AAE05E0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23AAE03B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23AAE0610()
{
  char *v0;

  return sub_23AAE03B8(*v0);
}

void sub_23AAE0620()
{
  type metadata accessor for ItemLookupResult();
}

void sub_23AAE0698()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t (*v19)(_BYTE *, uint64_t);
  uint64_t v20;
  void (*v21)(_QWORD *);
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  void *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  _BYTE v33[96];

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v4 = sub_23B1C74F0();
  *(_QWORD *)(v3 - 240) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 - 232) = v4;
  MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v3 - 248) = &v33[-v5];
  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v33[-v11];
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v1);
  sub_23AA93780(v1);
  swift_retain();
  v14 = sub_23B1C5E40();
  v15 = sub_23B1C6A94();
  v16 = os_log_type_enabled(v14, v15);
  *(_QWORD *)(v3 - 184) = v2;
  if (v16)
  {
    *(_QWORD *)(v3 - 272) = v7;
    *(_QWORD *)(v3 - 216) = v10;
    *(_QWORD *)(v3 - 208) = v6;
    *(_QWORD *)(v3 - 200) = v0;
    v17 = (_DWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_QWORD *)(v3 - 280) = v18;
    *(_QWORD *)(v3 - 120) = v18;
    *v17 = 136315906;
    sub_23AF4E7D4(v18);
  }
  sub_23AAB47B0(v1);
  swift_release();
  sub_23AAB47B0(v1);

  v19 = *(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8);
  v20 = v19(v12, v6);
  v21 = *(void (**)(_QWORD *))(v3 - 136);
  if (*(uint64_t *)(v3 - 176) < 51)
    sub_23AF4E9A8(v20);
  v22 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v1);
  sub_23AA93780(v1);
  swift_retain();
  v23 = sub_23B1C5E40();
  v24 = sub_23B1C6AAC();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    *(_QWORD *)(v3 - 208) = v6;
    v27 = (_DWORD *)v26;
    v28 = swift_slowAlloc();
    *(_QWORD *)(v3 - 120) = v28;
    *v27 = 136446466;
    *(_QWORD *)(v3 - 200) = v0;
    *(_DWORD *)(v3 - 176) = v25;
    sub_23AF4E7D4(v28);
  }
  sub_23AAB47B0(v1);
  swift_release();
  sub_23AAB47B0(v1);

  v19(v10, v6);
  v29 = (void *)sub_23B1C63BC();
  v30 = (id)FPInvalidParameterError();

  if (v30)
  {
    v31 = *(_QWORD **)(v3 - 248);
    *v31 = v30;
    v32 = *(_QWORD *)(v3 - 232);
    swift_storeEnumTagMultiPayload();
    v21(v31);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 240) + 8))(v31, v32);
  }
  else
  {
    __break(1u);
  }
}

void sub_23AAE0D84(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, int a5, unint64_t a6, uint64_t a7, int a8, void *a9, unint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  char *v27;
  char v28;
  id v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  id v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t (*v104)(uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113[3];
  uint64_t v114;
  char v115;
  uint64_t v116[4];

  v108 = a8;
  v110 = a6;
  v111 = a7;
  LODWORD(v112) = a5;
  v109 = a4;
  v13 = sub_23B1C5E4C();
  v106 = *(_QWORD *)(v13 - 8);
  v107 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v103 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v100 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v105 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (id *)((char *)&v100 - v25);
  sub_23AA8EFC8(a1, (uint64_t)&v100 - v25, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    a2(a1);
    return;
  }
  v104 = a2;
  v102 = a3;
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v26, 1, v18) != 1)
  {
    sub_23AA724E8((uint64_t)v26, (uint64_t)v21, &qword_2542E0F70);
    if ((_BYTE)v112)
    {
      v44 = v102;
      v31 = v110;
      v45 = v104;
      if (v112 != 1)
      {
        v61 = 1;
        goto LABEL_19;
      }
    }
    else
    {
      v44 = v102;
      v31 = v110;
      v45 = v104;
    }
    v61 = sub_23B1C7388();
LABEL_19:
    swift_bridgeObjectRelease();
    if ((sub_23AAEFADC((uint64_t)v21, v61 & 1, v31) & 1) != 0)
    {
      v45(a1);
      sub_23AA8A05C((uint64_t)v21, &qword_2542E0F70);
      return;
    }
    sub_23AA8A05C((uint64_t)v21, &qword_2542E0F70);
    v32 = v111;
    goto LABEL_30;
  }
  if (!(_BYTE)v112)
  {
    swift_bridgeObjectRelease();
    v27 = v17;
    goto LABEL_13;
  }
  v27 = v17;
  v28 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
  {
LABEL_13:
    v46 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v47 = v110;
    sub_23AA93780(v110);
    v48 = v111;
    swift_retain();
    sub_23AA93780(v47);
    v49 = sub_23B1C5E40();
    v50 = sub_23B1C6A94();
    if (os_log_type_enabled(v49, v50))
    {
      v112 = v19;
      v51 = v48;
      v52 = swift_slowAlloc();
      v53 = swift_slowAlloc();
      v113[0] = v53;
      *(_DWORD *)v52 = 136315394;
      swift_beginAccess();
      v54 = *(void **)(v51 + 32);
      v55 = *(unsigned __int8 *)(v51 + 40);
      v56 = *(_BYTE *)(v51 + 41);
      v101 = v18;
      if ((v56 & 1) != 0)
      {
        v57 = v54;
        v58 = sub_23AA7B734();
        v60 = v59;
        sub_23AA862DC(v54, v55, 1);
      }
      else
      {
        v58 = sub_23AA96F18((uint64_t)v54, v55);
        v60 = v62;
      }
      v114 = sub_23AABEC68(v58, v60, v113);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2080;
      v111 = v52 + 14;
      v63 = v110;
      sub_23AE5BC48(v110);
      v65 = v64;
      v67 = v66;
      sub_23AAB47B0(v63);
      v114 = sub_23AABEC68(v65, v67, v113);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AAB47B0(v63);
      _os_log_impl(&dword_23AA66000, v49, v50, "Item cannot be found on disk, only looking for existing item %s, request %s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v53, -1, -1);
      MEMORY[0x23B8614BC](v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v106 + 8))(v27, v107);
      v18 = v101;
      v19 = v112;
    }
    else
    {
      sub_23AAB47B0(v47);
      swift_release();
      sub_23AAB47B0(v47);

      (*(void (**)(char *, uint64_t))(v106 + 8))(v27, v107);
    }
    v68 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v105, 1, 1, v18);
    swift_storeEnumTagMultiPayload();
    v104(v68);
    sub_23AA8A05C(v68, (uint64_t *)&unk_2542E2190);
    return;
  }
  v29 = (id)fpfs_current_or_default_log();
  v30 = v103;
  sub_23B1C5E58();
  v31 = v110;
  sub_23AA93780(v110);
  v32 = v111;
  swift_retain();
  sub_23AA93780(v31);
  v33 = sub_23B1C5E40();
  v34 = sub_23B1C6A94();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v116[0] = v36;
    *(_DWORD *)v35 = 136315394;
    swift_beginAccess();
    v37 = *(void **)(v32 + 32);
    v38 = *(unsigned __int8 *)(v32 + 40);
    v39 = *(_BYTE *)(v32 + 41);
    v105 = (char *)v36;
    if ((v39 & 1) != 0)
    {
      v40 = v37;
      v41 = sub_23AA7B734();
      v43 = v42;
      sub_23AA862DC(v37, v38, 1);
    }
    else
    {
      v41 = sub_23AA96F18((uint64_t)v37, v38);
      v43 = v69;
    }
    v114 = sub_23AABEC68(v41, v43, v116);
    sub_23B1C6CBC();
    v70 = v111;
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    v31 = v110;
    sub_23AE5BC48(v110);
    v72 = v71;
    v74 = v73;
    sub_23AAB47B0(v31);
    v114 = sub_23AABEC68(v72, v74, v116);
    v32 = v70;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v31);
    _os_log_impl(&dword_23AA66000, v33, v34, "Item cannot be found on disk, looking for parent for %s request %s", (uint8_t *)v35, 0x16u);
    v75 = v105;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v75, -1, -1);
    MEMORY[0x23B8614BC](v35, -1, -1);
  }
  else
  {
    sub_23AAB47B0(v31);
    swift_release();
    sub_23AAB47B0(v31);
  }

  (*(void (**)(char *, uint64_t))(v106 + 8))(v30, v107);
  v44 = v102;
  v45 = v104;
LABEL_30:
  v76 = swift_allocObject();
  *(_QWORD *)(v76 + 16) = v45;
  *(_QWORD *)(v76 + 24) = v44;
  *(_QWORD *)(v76 + 32) = v109;
  *(_BYTE *)(v76 + 40) = v112;
  *(_BYTE *)(v76 + 41) = v108 & 1;
  *(_QWORD *)(v76 + 48) = v31;
  *(_QWORD *)(v76 + 56) = a9;
  v110 = a10;
  *(_QWORD *)(v76 + 64) = a10;
  *(_QWORD *)(v76 + 72) = v32;
  swift_beginAccess();
  v77 = *(void **)(v32 + 32);
  v78 = *(unsigned __int8 *)(v32 + 40);
  if (*(_BYTE *)(v32 + 41) == 1)
  {
    swift_retain();
    swift_retain();
    sub_23AA93780(v31);
    v79 = a9;
    swift_retain_n();
    sub_23AA93780(v31);
    swift_retain();
    swift_retain();
    v80 = v79;
    sub_23AA88218(v77, v78, 1);
    if (qword_2542E1FE8 != -1)
      goto LABEL_43;
    while (1)
    {
      v81 = sub_23B1C63E0();
      v83 = v82;
      if (v81 == sub_23B1C63E0() && v83 == v84)
      {
        swift_bridgeObjectRelease_n();
        sub_23AA862DC(v77, v78, 1);
        v45 = v104;
      }
      else
      {
        v95 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AA862DC(v77, v78, 1);
        v45 = v104;
        if ((v95 & 1) == 0)
          goto LABEL_40;
      }
LABEL_37:
      v87 = v109;
      (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(*(_QWORD *)(v109 + 32) + 16) + 96))(&v114);
      v88 = v114;
      v89 = v115;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE240);
      v90 = swift_allocObject();
      *(_QWORD *)(v90 + 16) = v88;
      *(_BYTE *)(v90 + 24) = v89;
      *(_BYTE *)(v90 + 25) = 0;
      *(_QWORD *)(v90 + 32) = v88;
      *(_BYTE *)(v90 + 40) = v89;
      *(_WORD *)(v90 + 41) = 0;
      v78 = v110 + 1;
      if (!__OFADD__(v110, 1))
        break;
      __break(1u);
LABEL_43:
      swift_once();
    }
    v91 = v90;
    v92 = v111;
    swift_retain();
    sub_23AA93780(v31);
    swift_retain();
    swift_retain();
    v93 = a9;
    v94 = swift_retain();
    sub_23AAF19D4(v94, v112, v108 & 1, v31, v93, (void (*)(char *, uint64_t))v78, v87, v45, v44, v112, v92, v31, v87, v108 & 1, v91, v93);
    swift_release();
    swift_release();

    sub_23AAB47B0(v31);
    swift_release();
    swift_release();
    swift_release_n();
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_23AA93780(v31);
    v85 = a9;
    swift_retain_n();
    sub_23AA93780(v31);
    swift_retain();
    swift_retain();
    v86 = v85;
    if (v78 >= 2 && v77)
      goto LABEL_37;
LABEL_40:
    v96 = swift_allocObject();
    *(_QWORD *)(v96 + 16) = sub_23AAFC680;
    *(_QWORD *)(v96 + 24) = v76;
    v97 = (_QWORD *)swift_allocObject();
    v98 = v109;
    v97[2] = v111;
    v97[3] = v98;
    v97[4] = sub_23AAFC680;
    v97[5] = v76;
    v99 = swift_allocObject();
    *(_QWORD *)(v99 + 16) = sub_23AAFC6D4;
    *(_QWORD *)(v99 + 24) = v96;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA901C4((uint64_t)"findParentID(for:completionHandler:)", 36, 2, sub_23AAFC754, v99, (uint64_t)sub_23AAFC738, (uint64_t)v97);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release();
  sub_23AAB47B0(v31);
  swift_release();

}

void sub_23AAE19A0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD v16[12];
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v16[10] = a8;
  v20 = a7;
  v27 = a6;
  v28 = a3;
  v24 = a5;
  v29 = a2;
  v17 = a4;
  v8 = (_QWORD *)*a4;
  v9 = sub_23B1C5E4C();
  v18 = *(_QWORD *)(v9 - 8);
  v19 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v26 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v25 = (char *)v16 - v12;
  v13 = v8[71];
  v14 = v8[73];
  v15 = v8[74];
  v21 = v8[72];
  v22 = v13;
  v30 = v13;
  v31 = v21;
  v23 = v14;
  v32 = v14;
  v33 = v15;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAE1A68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  id *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[96];

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v19[-v6];
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v8 = sub_23B1C74F0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = (id *)&v19[-v13];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v19[-v13], v2, v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    *(_QWORD *)(v3 - 288) = v2;
    *(_QWORD *)(v3 - 272) = v12;
    *(_QWORD *)(v3 - 264) = v9;
    *(_QWORD *)(v3 - 280) = v8;
    v16 = *(_QWORD *)(v3 - 208);
    *(_QWORD *)(v3 - 256) = v1;
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v5 + 48))(v14, 1, a1) == 1)
    {
      *(_QWORD *)(v3 - 288) = v5;
      *(_BYTE *)(v3 - 136) = *(_DWORD *)(v3 - 184);
      *(_BYTE *)(v3 - 121) = 0;
      v17 = *(_QWORD *)(v3 - 192);
      *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 200);
      *(_QWORD *)(v3 - 112) = v16;
      v18 = *(_QWORD *)(v3 - 256);
      *(_QWORD *)(v3 - 104) = v17;
      *(_QWORD *)(v3 - 96) = v18;
      _s14LookupBehaviorOMa();
    }
    (*(void (**)(_BYTE *, id *, uint64_t))(v5 + 32))(v7, v14, a1);
    sub_23AAE0344();
  }

  return (*(uint64_t (**)(uint64_t))(v3 - 144))(v2);
}

uint64_t sub_23AAE219C(void *a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, int a6, int a7, unint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  id v26;
  int v27;

  v27 = a7;
  v26 = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  result = MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) != 0)
  {
    *v21 = a1;
    swift_storeEnumTagMultiPayload();
    v23 = a1;
    a3((uint64_t)v21);
    return sub_23AA8A05C((uint64_t)v21, (uint64_t *)&unk_2542E2190);
  }
  else
  {
    v25 = a3;
    if (__OFADD__(a10, 1))
    {
      __break(1u);
    }
    else
    {
      sub_23AAFCDA4(a1, 0);
      swift_retain();
      swift_retain();
      sub_23AA93780(a8);
      swift_retain();
      v22 = v26;
      sub_23AAF19D4((uint64_t)a1, a6, v27 & 1, a8, v22, (void (*)(char *, uint64_t))(a10 + 1), a5, v25, a4, a6, a11, a8, a5, v27 & 1, (uint64_t)a1, v22);

      sub_23AAFCD98(a1, 0);
      swift_release();
      sub_23AAB47B0(a8);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

void sub_23AAE2354()
{
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAE23BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  __int128 v20;
  _BYTE v21[96];

  v8 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  *(_QWORD *)(v7 - 152) = v8;
  v9 = sub_23B1C74F0();
  result = MEMORY[0x24BDAC7A8](v9);
  if ((v5 & 1) != 0)
  {
    *(_QWORD *)(v7 - 128) = v1;
    *(_BYTE *)(v7 - 120) = 1;
    MEMORY[0x24BDAC7A8](result);
    *(_QWORD *)&v21[-32] = v2;
    *(_QWORD *)&v21[-24] = v4;
    *(_QWORD *)&v21[-16] = v0;
    *(_QWORD *)&v21[-8] = v6;
    v19 = *(_QWORD *)(v7 - 160);
    v20 = *(_OWORD *)(v19 + 96);
    *(_OWORD *)(v7 - 112) = *(_OWORD *)(v19 + 80);
    *(_OWORD *)(v7 - 96) = v20;
    type metadata accessor for FPFSID();
  }
  v12 = *(_QWORD *)(v7 - 144);
  v11 = *(_QWORD *)(v7 - 136);
  if (!__OFADD__(*(_QWORD *)(v7 + 24), 1))
  {
    v13 = *(void **)(v7 + 16);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v12;
    *(_QWORD *)(v14 + 24) = v11;
    v15 = *(_DWORD *)(v7 - 184);
    *(_BYTE *)(v14 + 32) = *(_DWORD *)(v7 - 180);
    v17 = *(_QWORD *)(v7 - 176);
    v16 = *(_QWORD *)(v7 - 168);
    *(_QWORD *)(v14 + 40) = v3;
    *(_QWORD *)(v14 + 48) = v17;
    *(_QWORD *)(v14 + 56) = v16;
    *(_BYTE *)(v14 + 64) = v15 & 1;
    *(_QWORD *)(v14 + 72) = v1;
    *(_QWORD *)(v14 + 80) = v13;
    sub_23AAFCDA4(v1, 0);
    sub_23AAFCDA4(v1, 0);
    swift_retain();
    swift_retain();
    sub_23AA93780(v17);
    swift_retain();
    v18 = v13;
    sub_23AAE0620();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AAE25C0@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 32))(a3, v12, *(_QWORD *)(a2 + 24));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  sub_23B1C74F0();
  return swift_storeEnumTagMultiPayload();
}

char *sub_23AAE2714(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, id a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id *v42;
  char *result;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  int v49;
  char *v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char *v71;
  NSObject *v72;
  os_log_type_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char **v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  int v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  char v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  os_log_t v142;
  unint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)(uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;

  v157 = a8;
  v158 = a7;
  v163 = a6;
  v164 = a5;
  v165 = a4;
  v168 = a2;
  v169 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v11);
  v151 = (char *)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_23B1C6050();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v155 = (char *)&v139 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_23B1C60A4();
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x24BDAC7A8](v154);
  v152 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_23B1C5E4C();
  v160 = *(_QWORD *)(v162 - 8);
  v15 = MEMORY[0x24BDAC7A8](v162);
  v145 = (char *)&v139 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v144 = (char *)&v139 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v156 = (char *)&v139 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v161 = (char *)&v139 - v21;
  v159 = type metadata accessor for VFSItem(0);
  v146 = *(_QWORD *)(v159 - 8);
  v22 = MEMORY[0x24BDAC7A8](v159);
  v148 = (uint64_t)&v139 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = v23;
  MEMORY[0x24BDAC7A8](v22);
  v167 = (uint64_t)&v139 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v139 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v139 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)&v139 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v166 = (uint64_t)&v139 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v139 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v42 = (id *)((char *)&v139 - v41);
  sub_23AA8EFC8(a1, (uint64_t)&v139 - v41, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    return (char *)v168(a1);
  }
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v26 + 48))(v42, 1, v25) == 1)
    return (char *)v168(a1);
  v44 = v166;
  sub_23AA724E8((uint64_t)v42, v166, &qword_2542E0F70);
  if ((*(_BYTE *)(v44 + *(int *)(v25 + 56)) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v40, 1, 1, v25);
    swift_storeEnumTagMultiPayload();
    v168((uint64_t)v40);
    sub_23AA8A05C((uint64_t)v40, (uint64_t *)&unk_2542E2190);
    return (char *)sub_23AA8A05C(v44, &qword_2542E0F70);
  }
  sub_23AA907B0(v44, v167, type metadata accessor for VFSItem);
  v143 = (unint64_t)"_content";
  if ((_BYTE)v165)
  {
    v45 = v163;
    if (v165 != 1)
    {
      swift_bridgeObjectRelease();
      sub_23AA8EFC8(v44, (uint64_t)v35, &qword_2542E0F70);
      goto LABEL_15;
    }
  }
  else
  {
    v45 = v163;
  }
  v46 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  sub_23AA8EFC8(v44, (uint64_t)v35, &qword_2542E0F70);
  if ((v46 & 1) != 0)
  {
LABEL_15:
    sub_23AA8A05C((uint64_t)v35, &qword_2542E0F70);
    goto LABEL_16;
  }
  v47 = v35[*(int *)(v25 + 60)];
  sub_23AA8A05C((uint64_t)v35, &qword_2542E0F70);
  if ((v47 & 1) != 0)
  {
    v48 = v164;
    swift_beginAccess();
    v49 = *(unsigned __int8 *)(v48 + 41);
    goto LABEL_17;
  }
LABEL_16:
  v49 = 1;
LABEL_17:
  v50 = v161;
  v51 = v162;
  v52 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA8EFC8(v44, (uint64_t)v32, &qword_2542E0F70);
  sub_23AA93780(v45);
  sub_23AA93780(v45);
  v53 = sub_23B1C5E40();
  v54 = sub_23B1C6A94();
  if (os_log_type_enabled(v53, (os_log_type_t)v54))
  {
    v141 = v54;
    v142 = v53;
    v55 = swift_slowAlloc();
    v140 = swift_slowAlloc();
    v171 = v140;
    *(_DWORD *)v55 = 136315906;
    sub_23AA8EFC8((uint64_t)v32, (uint64_t)v29, &qword_2542E0F70);
    sub_23AA8A05C((uint64_t)v32, &qword_2542E0F70);
    v56 = sub_23AACCB44();
    v58 = v57;
    sub_23AA8A05C((uint64_t)v29, &qword_2542E0F70);
    v173 = sub_23AABEC68(v56, v58, &v171);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    if ((_BYTE)v165)
    {
      if (v165 == 1)
        v59 = 0x74616761706F7270;
      else
        v59 = 0xD000000000000010;
      if (v165 == 1)
        v60 = 0xED000053466F5465;
      else
        v60 = 0x800000023B1F7040;
    }
    else
    {
      v59 = 0xD000000000000013;
      v60 = v143 | 0x8000000000000000;
    }
    v62 = a9;
    v173 = sub_23AABEC68(v59, v60, &v171);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 22) = 1024;
    LODWORD(v173) = v49;
    sub_23B1C6CBC();
    *(_WORD *)(v55 + 28) = 2080;
    sub_23AE5BC48(v45);
    v64 = v63;
    v66 = v65;
    sub_23AAB47B0(v45);
    v173 = sub_23AABEC68(v64, v66, &v171);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v45);
    v67 = v142;
    _os_log_impl(&dword_23AA66000, v142, (os_log_type_t)v141, "Found parent %s, behavior: %s, shouldReconcile: %{BOOL}d request %s", (uint8_t *)v55, 0x26u);
    v68 = v140;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v68, -1, -1);
    MEMORY[0x23B8614BC](v55, -1, -1);

    v61 = *(void (**)(char *, uint64_t))(v160 + 8);
    v61(v161, v51);
  }
  else
  {
    sub_23AAB47B0(v45);
    sub_23AA8A05C((uint64_t)v32, &qword_2542E0F70);
    sub_23AAB47B0(v45);

    v61 = *(void (**)(char *, uint64_t))(v160 + 8);
    v61(v50, v51);
    v62 = a9;
  }
  v69 = v167 + *(int *)(v159 + 28);
  LOBYTE(v69) = *(_BYTE *)(v69 + *(int *)(type metadata accessor for ItemMetadata() + 80));
  v70 = (id)fpfs_current_or_default_log();
  if ((v69 & 1) == 0)
  {
    if ((v49 & 1) == 0)
    {
      v92 = v45 >> 58;
      v93 = v145;
      sub_23B1C5E58();
      sub_23AA93780(v45);
      sub_23AA93780(v45);
      v94 = v164;
      swift_retain();
      v95 = sub_23B1C5E40();
      v96 = sub_23B1C6A94();
      if (os_log_type_enabled(v95, v96))
      {
        v161 = (char *)(v45 >> 58);
        v97 = v61;
        v98 = swift_slowAlloc();
        v99 = v94;
        v100 = swift_slowAlloc();
        v173 = v100;
        *(_DWORD *)v98 = 136315394;
        swift_beginAccess();
        v101 = *(void **)(v99 + 32);
        v102 = *(unsigned __int8 *)(v99 + 40);
        if ((*(_BYTE *)(v99 + 41) & 1) != 0)
        {
          v103 = v101;
          v104 = sub_23AA7B734();
          v106 = v105;
          sub_23AA862DC(v101, v102, 1);
        }
        else
        {
          v104 = sub_23AA96F18(*(_QWORD *)(v99 + 32), *(_BYTE *)(v99 + 40));
          v106 = v132;
        }
        v170 = sub_23AABEC68(v104, v106, &v173);
        sub_23B1C6CBC();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 12) = 2080;
        v45 = v163;
        sub_23AE5BC48(v163);
        v92 = v133;
        v135 = v134;
        sub_23AAB47B0(v45);
        v170 = sub_23AABEC68(v92, v135, &v173);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        sub_23AAB47B0(v45);
        _os_log_impl(&dword_23AA66000, v95, v96, "Parent item is not dataless, lookup and propagate %s request %s", (uint8_t *)v98, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v100, -1, -1);
        MEMORY[0x23B8614BC](v98, -1, -1);

        v97(v145, v162);
        LOBYTE(v92) = (_BYTE)v161;
      }
      else
      {
        sub_23AAB47B0(v45);
        swift_release();
        sub_23AAB47B0(v45);

        v61(v93, v51);
      }
      if ((_BYTE)v165 && v165 != 1)
        v136 = 1;
      else
        v136 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if (((v45 >> 1) & 3 | v92 & 0x3C) == 0x1E)
      {
        v45 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFFF9) + 0x10);
        v137 = v45;
      }
      else
      {
        v138 = swift_allocObject();
        *(_QWORD *)(v138 + 16) = v45;
        v137 = v138 | 0x7000000000000004;
      }
      v44 = v166;
      sub_23AA93780(v45);
      sub_23AAD3688(v164, 1, v136 & 1, v157 & 1, v137, (uint64_t)v168, v169);
      sub_23AAB47B0(v137);
      sub_23AA937BC(v167, type metadata accessor for VFSItem);
      return (char *)sub_23AA8A05C(v44, &qword_2542E0F70);
    }
    v71 = v144;
    sub_23B1C5E58();
    sub_23AA93780(v45);
    sub_23AA93780(v45);
    swift_retain();
    v72 = sub_23B1C5E40();
    v83 = sub_23B1C6A94();
    if (os_log_type_enabled(v72, v83))
    {
      v74 = v61;
      v84 = swift_slowAlloc();
      v85 = swift_slowAlloc();
      v173 = v85;
      *(_DWORD *)v84 = 136315394;
      swift_beginAccess();
      v86 = *(void **)(v62 + 32);
      v87 = *(unsigned __int8 *)(v62 + 40);
      if ((*(_BYTE *)(v62 + 41) & 1) != 0)
      {
        v88 = v86;
        v89 = sub_23AA7B734();
        v91 = v90;
        sub_23AA862DC(v86, v87, 1);
      }
      else
      {
        v89 = sub_23AA96F18(*(_QWORD *)(v62 + 32), *(_BYTE *)(v62 + 40));
        v91 = v114;
      }
      v170 = sub_23AABEC68(v89, v91, &v173);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 12) = 2080;
      v115 = v163;
      sub_23AE5BC48(v163);
      v117 = v116;
      v119 = v118;
      sub_23AAB47B0(v115);
      v170 = sub_23AABEC68(v117, v119, &v173);
      sub_23B1C6CBC();
      v45 = v115;
      swift_bridgeObjectRelease();
      sub_23AAB47B0(v115);
      _os_log_impl(&dword_23AA66000, v72, v83, "Parent item must be imported, materializing %s request %s", (uint8_t *)v84, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v85, -1, -1);
      MEMORY[0x23B8614BC](v84, -1, -1);

      v113 = (char **)&v172;
      goto LABEL_45;
    }
LABEL_36:
    sub_23AAB47B0(v45);
    swift_release();
    sub_23AAB47B0(v45);

    v61(v71, v51);
    goto LABEL_46;
  }
  v71 = v156;
  sub_23B1C5E58();
  sub_23AA93780(v45);
  sub_23AA93780(v45);
  swift_retain();
  v72 = sub_23B1C5E40();
  v73 = sub_23B1C6A94();
  if (!os_log_type_enabled(v72, v73))
    goto LABEL_36;
  v74 = v61;
  v75 = swift_slowAlloc();
  v76 = swift_slowAlloc();
  v173 = v76;
  *(_DWORD *)v75 = 136315394;
  swift_beginAccess();
  v77 = *(void **)(v62 + 32);
  v78 = *(unsigned __int8 *)(v62 + 40);
  if ((*(_BYTE *)(v62 + 41) & 1) != 0)
  {
    v79 = v77;
    v80 = sub_23AA7B734();
    v82 = v81;
    sub_23AA862DC(v77, v78, 1);
  }
  else
  {
    v80 = sub_23AA96F18(*(_QWORD *)(v62 + 32), *(_BYTE *)(v62 + 40));
    v82 = v107;
  }
  v170 = sub_23AABEC68(v80, v82, &v173);
  sub_23B1C6CBC();
  swift_release();
  swift_bridgeObjectRelease();
  *(_WORD *)(v75 + 12) = 2080;
  v108 = v163;
  sub_23AE5BC48(v163);
  v110 = v109;
  v112 = v111;
  sub_23AAB47B0(v108);
  v170 = sub_23AABEC68(v110, v112, &v173);
  sub_23B1C6CBC();
  v45 = v108;
  swift_bridgeObjectRelease();
  sub_23AAB47B0(v108);
  _os_log_impl(&dword_23AA66000, v72, v73, "Parent item is dataless, materializing %s request %s", (uint8_t *)v75, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x23B8614BC](v76, -1, -1);
  MEMORY[0x23B8614BC](v75, -1, -1);

  v113 = (char **)&v174;
LABEL_45:
  v74(*(v113 - 32), v162);
LABEL_46:
  result = (char *)objc_msgSend(a10, sel_totalUnitCount);
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(a10, sel_setTotalUnitCount_, result + 1);
    v163 = *(_QWORD *)v167;
    v120 = *(unsigned __int8 *)(v167 + 8);
    v121 = v148;
    sub_23AA907B0(v167, v148, type metadata accessor for VFSItem);
    v122 = (*(unsigned __int8 *)(v146 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
    v123 = (v147 + v122 + 7) & 0xFFFFFFFFFFFFFFF8;
    v124 = (_QWORD *)swift_allocObject();
    v125 = v169;
    v124[2] = v168;
    v124[3] = v125;
    v124[4] = v164;
    v124[5] = v45;
    sub_23AA94050(v121, (uint64_t)v124 + v122, type metadata accessor for VFSItem);
    v126 = (char *)v124 + v123;
    *(_QWORD *)v126 = v158;
    v126[8] = v157 & 1;
    v126[9] = v165;
    sub_23AA93780(v45);
    swift_retain();
    swift_retain();
    swift_retain();
    qos_class_self();
    v127 = (uint64_t)v151;
    sub_23B1C6038();
    v128 = v149;
    v129 = v150;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48))(v127, 1, v150) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v155, *MEMORY[0x24BEE5498], v129);
      sub_23AA8A05C(v127, qword_2542E02D0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v155, v127, v129);
    }
    v130 = (uint64_t)v152;
    sub_23B1C608C();
    v131 = sub_23ADF4384(v163, v120, v45, v130, (uint64_t)sub_23AAFCABC, (uint64_t)v124);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v130, v154);
    objc_msgSend(a10, sel_addChild_withPendingUnitCount_, v131, 1);

    sub_23AA937BC(v167, type metadata accessor for VFSItem);
    return (char *)sub_23AA8A05C(v166, &qword_2542E0F70);
  }
  return result;
}

void sub_23AAE3930(uint64_t a1, uint64_t a2, uint64_t a3, int a4, _QWORD *a5, uint64_t a6, _QWORD *a7, int a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v42 = a8;
  v55 = a6;
  v51 = a4;
  v57 = a2;
  v58 = a3;
  v47 = a5;
  v8 = *a5;
  v43 = a7;
  v9 = (_QWORD *)*a7;
  v38 = sub_23B1C60A4();
  v37 = *(_QWORD *)(v38 - 8);
  v10 = MEMORY[0x24BDAC7A8](v38);
  v36 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v8 + 80);
  v39 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v35 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23B1C5E4C();
  v46 = *(_QWORD *)(v48 - 8);
  v14 = MEMORY[0x24BDAC7A8](v48);
  v32 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v31 = (char *)v29 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v41 = (char *)v29 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v49 = (char *)v29 - v20;
  v40 = v12;
  v30 = sub_23B1C6C98();
  v29[3] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29[2] = (char *)v29 - v21;
  v22 = v9[71];
  v45 = sub_23B1C6C98();
  v44 = *(_QWORD *)(v45 - 8);
  v23 = MEMORY[0x24BDAC7A8](v45);
  v54 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v34 = (char *)v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v25;
  MEMORY[0x24BDAC7A8](v24);
  v26 = v9[72];
  v27 = v9[73];
  v28 = v9[74];
  v56 = v22;
  v59 = v22;
  v60 = v26;
  v52 = v26;
  v53 = v28;
  v50 = v27;
  v61 = v27;
  v62 = v28;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAE3BD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  id *v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  _BYTE v33[96];

  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 312) = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v4 - 248) = &v33[-v10];
  v11 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v4 - 176) = &v33[-v12];
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v13 = sub_23B1C74F0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v33[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = (id *)&v33[-v18];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(&v33[-v18], v1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    return (*(uint64_t (**)(uint64_t))(v4 - 144))(v1);
  }
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v19, 1, a1) == 1)
    return (*(uint64_t (**)(uint64_t))(v4 - 144))(v1);
  *(_QWORD *)(v4 - 408) = v2;
  v21 = *(_QWORD *)(v4 - 176);
  (*(void (**)(uint64_t, id *, uint64_t))(v6 + 32))(v21, v19, a1);
  v22 = *(_BYTE *)(v21 + *(int *)(a1 + 56));
  *(_QWORD *)(v4 - 416) = a1;
  v23 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)(v23 - 8);
  if ((v22 & 1) != 0)
  {
    v25 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v24 + 16))(v3, v21, *(_QWORD *)(a1 + 16));
    v25 = 0;
  }
  v26 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v3, v25, 1, v23);
  v27 = *(_QWORD *)(v4 - 168);
  v28 = *(_QWORD *)(v4 - 152);
  v29 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v3, 1, v28) == 1;
  v30 = *(_QWORD *)(v4 - 408);
  if (!v29)
  {
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
    *(_QWORD *)(v4 - 264) = v32;
    v32(v30, v3, v28);
    sub_23AAE0344();
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 264) + 8))(v3, *(_QWORD *)(v4 - 256));
  v31 = *(_QWORD *)(v4 - 416);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, 1, 1, v31);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *))(v4 - 144))(v17);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v26, v31);
}

unint64_t sub_23AAE4AC8(void *a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  os_log_t v49;
  uint64_t v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD);
  uint64_t v58;
  unint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _BYTE v65[12];
  int v66;
  os_log_t v67;
  unint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  void (*v75)(_QWORD);
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v76 = a4;
  v77 = a5;
  v15 = sub_23B1C5E4C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v65[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v65[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    *v21 = a1;
    swift_storeEnumTagMultiPayload();
    v22 = a1;
    a2(v21);
    return sub_23AA8A05C((uint64_t)v21, (uint64_t *)&unk_2542E2190);
  }
  else
  {
    v72 = v16;
    v73 = v15;
    v24 = a3;
    v74 = a8;
    v75 = (void (*)(_QWORD))a2;
    v25 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v26 = v77;
    v27 = v77 >> 58;
    sub_23AA93780(v77);
    sub_23AA93780(v26);
    v28 = v76;
    swift_retain();
    v29 = sub_23B1C5E40();
    v30 = sub_23B1C6A94();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      v66 = v30;
      v67 = v29;
      v68 = v27;
      v69 = v18;
      v70 = v24;
      v71 = a7;
      v31 = v28;
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v79 = v33;
      *(_DWORD *)v32 = 136315394;
      swift_beginAccess();
      v34 = *(void **)(v31 + 32);
      v35 = *(unsigned __int8 *)(v31 + 40);
      v36 = v31;
      v37 = a6;
      if ((*(_BYTE *)(v31 + 41) & 1) != 0)
      {
        v38 = v34;
        v39 = sub_23AA7B734();
        v41 = v40;
        sub_23AA862DC(v34, v35, 1);
      }
      else
      {
        v39 = sub_23AA96F18(*(_QWORD *)(v31 + 32), *(_BYTE *)(v31 + 40));
        v41 = v44;
      }
      v45 = v73;
      v78 = sub_23AABEC68(v39, v41, &v79);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      sub_23AE5BC48(v26);
      v27 = v46;
      v48 = v47;
      sub_23AAB47B0(v26);
      v78 = sub_23AABEC68(v27, v48, &v79);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AAB47B0(v26);
      v49 = v67;
      _os_log_impl(&dword_23AA66000, v67, (os_log_type_t)v66, "Parent is materialized, lookup %s again request %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v33, -1, -1);
      v50 = v32;
      v28 = v36;
      MEMORY[0x23B8614BC](v50, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v69, v45);
      v43 = v70;
      v42 = v71;
      LOBYTE(v27) = v68;
    }
    else
    {
      sub_23AAB47B0(v26);
      swift_release();
      sub_23AAB47B0(v26);

      (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v18, v73);
      v42 = a7;
      v37 = a6;
      v43 = v24;
    }
    v51 = (v26 >> 1) & 3;
    v52 = v27 & 0x3C;
    *(_BYTE *)(v28 + 42) = 0;
    v53 = v37 + *(int *)(type metadata accessor for VFSItem(0) + 28);
    if (*(_BYTE *)(v53 + *(int *)(type metadata accessor for ItemMetadata() + 80)) == 1)
    {
      if ((v51 | v52) == 0x1E)
      {
        v26 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF9) + 0x10);
        v54 = v26;
      }
      else
      {
        v55 = swift_allocObject();
        *(_QWORD *)(v55 + 16) = v26;
        v54 = v55 | 0x7000000000000004;
      }
      sub_23AA93780(v26);
      v56 = swift_allocObject();
      *(_QWORD *)(v56 + 16) = v28;
      *(_QWORD *)(v56 + 24) = v42;
      *(_BYTE *)(v56 + 32) = v74 & 1;
      *(_BYTE *)(v56 + 33) = 1;
      v57 = v75;
      *(_QWORD *)(v56 + 40) = v75;
      *(_QWORD *)(v56 + 48) = v43;
      *(_QWORD *)(v56 + 56) = v54;
      v58 = swift_allocObject();
      *(_QWORD *)(v58 + 16) = v57;
      *(_QWORD *)(v58 + 24) = v43;
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_23AA93780(v54);
      sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v58, (uint64_t)sub_23AABA3C4, v56);
      swift_release();
      swift_release();
      v59 = v54;
    }
    else
    {
      if (a9 && a9 != 1)
        v60 = 1;
      else
        v60 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v51 | v52) == 0x1E)
      {
        v26 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF9) + 0x10);
        v61 = v26;
      }
      else
      {
        v62 = swift_allocObject();
        *(_QWORD *)(v62 + 16) = v26;
        v61 = v62 | 0x7000000000000004;
      }
      v63 = (uint64_t)v75;
      v64 = v74;
      sub_23AA93780(v26);
      sub_23AAD3688(v28, 1, v60 & 1, v64 & 1, v61, v63, v43);
      v59 = v61;
    }
    return sub_23AAB47B0(v59);
  }
}

void sub_23AAE5090()
{
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAE50F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  id v16;
  id v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  _BYTE v32[96];

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v7 = sub_23B1C74F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v32[-v9];
  v11 = sub_23B1C5E4C();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!v0)
  {
    *(_QWORD *)(v6 - 232) = v13;
    *(_QWORD *)(v6 - 224) = v12;
    *(_QWORD *)(v6 - 216) = v5;
    *(_QWORD *)(v6 - 208) = v3;
    *(_QWORD *)(v6 - 200) = v1;
    *(_QWORD *)(v6 - 192) = v4;
    *(_QWORD *)(v6 - 184) = v2;
    v18 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v19 = *(_QWORD *)(v6 - 176);
    sub_23AA93780(v19);
    sub_23AA93780(v19);
    v20 = *(_QWORD *)(v6 - 152);
    swift_retain();
    v21 = sub_23B1C5E40();
    v22 = sub_23B1C6A94();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (_DWORD *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_QWORD *)(v6 - 240) = v24;
      *(_QWORD *)(v6 - 120) = v24;
      *v23 = 136315394;
      sub_23AF4E7D4(v24);
    }
    sub_23AAB47B0(v19);
    swift_release();
    sub_23AAB47B0(v19);

    (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(v15, *(_QWORD *)(v6 - 224));
    v25 = *(_QWORD *)(v6 - 200);
    v26 = *(_QWORD *)(v6 - 216);
    *(_BYTE *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 128)) = 0;
    v27 = sub_23AF21910(v26, v25);
    v28 = *(_QWORD *)(v6 - 144);
    v29 = *(_QWORD *)(v6 - 136);
    v30 = *(_DWORD *)(v6 - 164);
    if ((v27 & 1) != 0)
    {
      v31 = sub_23AF9DA80(v19);
      sub_23AACED60(v20, 1, v30 & 1, v31, v29, v28);
    }
    sub_23AAE0344();
  }
  *v10 = v0;
  swift_storeEnumTagMultiPayload();
  v16 = v0;
  (*(void (**)(_QWORD *))(v6 - 136))(v10);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23AAE54C4(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v17;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F78);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v12, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v15 = *v12;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_23AA724E8((uint64_t)v12, (uint64_t)v9, &qword_2542E0F78);
    sub_23AAE5780((uint64_t)v9, a4, v15);
    sub_23AA8A05C((uint64_t)v9, &qword_2542E0F78);
  }
  a2(v15);
  return sub_23AA8A05C((uint64_t)v15, &qword_2542E21C0);
}

void sub_23AAE5650()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v0 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAE5700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23B1C6C98();
  v4 = sub_23B1C74F0();
  sub_23AACE5A4((void (*)(char *))sub_23AAFBB30, v4, v1);
  (*(void (**)(uint64_t))(v3 - 184))(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23AAE5780@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  double v36;
  char is_busy_date;
  id v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t *v56;

  v55 = a2;
  v56 = a3;
  v4 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5474();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5E4C();
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v48);
  v49 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F78);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v45 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for VFSItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v50 = (uint64_t)&v45 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v45 - v28;
  v51 = a1;
  sub_23AA8EFC8(a1, (uint64_t)v17, &qword_2542E0F78);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48);
  if (v31(v17, 1, v30) == 1)
  {
    sub_23AA8A05C((uint64_t)v17, &qword_2542E0F78);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
  }
  else
  {
    if ((v17[*(int *)(v30 + 56)] & 1) != 0)
    {
      v32 = 1;
    }
    else
    {
      sub_23AA907B0((uint64_t)v17, (uint64_t)v20, type metadata accessor for VFSItem);
      v32 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, v32, 1, v21);
    sub_23AA8A05C((uint64_t)v17, &qword_2542E0F70);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) != 1)
    {
      sub_23AA94050((uint64_t)v20, (uint64_t)v29, type metadata accessor for VFSItem);
      sub_23AA94050((uint64_t)v29, (uint64_t)v56, type metadata accessor for VFSItem);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
      return swift_storeEnumTagMultiPayload();
    }
  }
  sub_23AA8A05C((uint64_t)v20, &qword_2542E72C0);
  if (((v55 >> 58) & 0x3C | (v55 >> 1) & 3) != 3)
  {
LABEL_19:
    sub_23B1C53E4();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v43 = v54;
    sub_23B1C5864();
    v44 = sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v8, v43);
    *v56 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
    return swift_storeEnumTagMultiPayload();
  }
  sub_23AA8EFC8(v51, (uint64_t)v15, &qword_2542E0F78);
  if (v31(v15, 1, v30) == 1)
  {
    sub_23AA8A05C((uint64_t)v15, &qword_2542E0F78);
    goto LABEL_19;
  }
  sub_23AA907B0((uint64_t)v15, (uint64_t)v25, type metadata accessor for VFSItem);
  sub_23AA8A05C((uint64_t)v15, &qword_2542E0F70);
  v33 = v50;
  sub_23AA94050((uint64_t)v25, v50, type metadata accessor for VFSItem);
  v34 = v49;
  sub_23AA907B0(v33 + *(int *)(v21 + 28), v49, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  result = sub_23B1C5B94();
  if ((~*(_QWORD *)&v36 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v36 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v36 < 9.22337204e18)
  {
    is_busy_date = fpfs_is_busy_date();
    sub_23AA937BC(v34, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if ((is_busy_date & 1) != 0)
    {
      v38 = (id)fpfs_current_or_default_log();
      v39 = v45;
      sub_23B1C5E58();
      v40 = sub_23B1C5E40();
      v41 = sub_23B1C6A94();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_23AA66000, v40, v41, "🏗 Forcing busy item return for URL resolution", v42, 2u);
        MEMORY[0x23B8614BC](v42, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v47);
      sub_23AA94050(v33, (uint64_t)v56, type metadata accessor for VFSItem);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
      return swift_storeEnumTagMultiPayload();
    }
    sub_23AA937BC(v33, type metadata accessor for VFSItem);
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_23AAE5D7C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata2;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v32 = a2;
  v33 = a7;
  v34 = a1;
  v11 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v11);
  v29 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C5474();
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v28 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23B1C5E4C();
  v19[2] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v21 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v22);
  v23 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
  v27 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v26 = (char *)v19 - v18;
  v35 = a3;
  v36 = a4;
  v24 = a5;
  v37 = a5;
  v38 = a6;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAE5F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  uint64_t result;
  double v48;
  int is_busy_date;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[96];

  v4 = sub_23B1C6C98();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v2 - 200) = &v58[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v58[-v8];
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)&v58[-v13];
  v15 = *(_QWORD *)(v1 - 8);
  v16 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v2 - 280) = &v58[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v2 - 264) = &v58[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)&v58[-v20];
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v23 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)(v2 - 224) = v22;
  v22(v9, v23, v4);
  v24 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 - 152) = v24;
  v25 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48);
  *(_QWORD *)(v2 - 232) = v25;
  v26 = v25(v9, 1, a1);
  *(_QWORD *)(v2 - 272) = v5;
  if (v26 == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, 1, 1, v1);
    v27 = v15;
    v28 = *(uint64_t **)(v2 - 136);
  }
  else
  {
    v27 = v15;
    *(_QWORD *)(v2 - 312) = v1;
    v29 = *(_QWORD *)(a1 + 16);
    v30 = *(_QWORD *)(v29 - 8);
    if ((v9[*(int *)(a1 + 56)] & 1) != 0)
    {
      v31 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, _BYTE *, _QWORD))(v30 + 16))(v14, v9, *(_QWORD *)(a1 + 16));
      v31 = 0;
    }
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v14, v31, 1, v29);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v9, a1);
    v1 = *(_QWORD *)(v2 - 312);
    v32 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48))(v14, 1, v1);
    v28 = *(uint64_t **)(v2 - 136);
    if (v32 != 1)
    {
      v41 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v27 + 32);
      v41(v21, v14, v1);
      v41(v28, v21, v1);
      goto LABEL_18;
    }
  }
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v14, v10);
  if (((*(_QWORD *)(v2 - 144) >> 58) & 0x3C | (*(_QWORD *)(v2 - 144) >> 1) & 3) != 3)
  {
LABEL_20:
    sub_23B1C53E4();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v55 = *(_QWORD *)(v2 - 184);
    v56 = *(_QWORD *)(v2 - 160);
    sub_23B1C5864();
    v57 = sub_23B1C5354();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v55, v56);
    *v28 = v57;
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
    sub_23B1C74F0();
    return swift_storeEnumTagMultiPayload();
  }
  v33 = v27;
  v34 = v1;
  v35 = swift_projectBox();
  v36 = *(_QWORD *)(v2 - 208);
  v37 = *(int *)(*(_QWORD *)(v2 - 216) + 48);
  v38 = *(_QWORD *)(v2 - 192);
  v39 = *(_QWORD *)(v38 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v36, v35, v38);
  *(_QWORD *)(v36 + v37) = *(_QWORD *)(v35 + v37);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v36, v38);
  v40 = *(_QWORD *)(v2 - 200);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 - 224))(v40, *(_QWORD *)(v2 - 128), v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 - 232))(v40, 1, a1) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v40, v4);
    goto LABEL_20;
  }
  v42 = *(_QWORD *)(v2 - 280);
  v43 = v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v42, v40, v34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v40, a1);
  v44 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v33 + 32);
  v45 = *(uint64_t **)(v2 - 264);
  v44(v45, v42, v34);
  v46 = *(_QWORD *)(v2 - 248);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 240) + 104))(v34);
  result = sub_23B1C5B94();
  if ((~*(_QWORD *)&v48 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v48 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v48 < 9.22337204e18)
  {
    is_busy_date = fpfs_is_busy_date();
    sub_23AA937BC(v46, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if (!is_busy_date)
    {
      (*(void (**)(uint64_t *, uint64_t))(v33 + 8))(v45, v34);
      goto LABEL_20;
    }
    v50 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v51 = sub_23B1C5E40();
    v52 = sub_23B1C6A94();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_23AA66000, v51, v52, "🏗 Forcing busy item return for URL resolution", v53, 2u);
      v54 = v53;
      v43 = v34;
      MEMORY[0x23B8614BC](v54, -1, -1);
    }

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 304) + 8))(*(_QWORD *)(v2 - 288), *(_QWORD *)(v2 - 296));
    v44(v28, (uint64_t)v45, v43);
LABEL_18:
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
    sub_23B1C74F0();
    return swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  __break(1u);
  return result;
}

id sub_23AAE6514(uint64_t a1, char a2, unint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t aBlock;
  uint64_t v44;
  uint64_t (*v45)();
  void *v46;
  void (*v47)();
  uint64_t v48;
  uint64_t v49;
  char v50;

  v35 = a6;
  v40 = a7;
  v41 = a3;
  v42 = a5;
  v38 = a4;
  v37 = sub_23B1C60A4();
  v9 = *(_QWORD *)(v37 - 8);
  v39 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_discreteProgressWithTotalUnitCount_, 1);
  objc_msgSend(v11, sel_setCancellable_, 1);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = swift_allocObject();
  v33 = v11;
  swift_unknownObjectWeakInit();
  v49 = a1;
  v50 = a2;
  v14 = a2;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v12;
  *(_QWORD *)(v15 + 24) = v13;
  sub_23AA9F454(&v49, v15 + 32);
  v47 = sub_23AAFD438;
  v48 = v15;
  aBlock = MEMORY[0x24BDAC760];
  v44 = 1107296256;
  v45 = sub_23AA698FC;
  v46 = &block_descriptor_444;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_23AAFA320((uint64_t)sub_23AAFD438);
  swift_release();
  objc_msgSend(v11, sel_setCancellationHandler_, v16);
  _Block_release(v16);
  swift_release();
  swift_release();
  swift_release();
  v17 = swift_allocObject();
  v18 = v35;
  v19 = v40;
  *(_QWORD *)(v17 + 16) = v35;
  *(_QWORD *)(v17 + 24) = v19;
  aBlock = a1;
  LOBYTE(v44) = v14;
  v20 = v9;
  v32 = v9;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23 = v36;
  v22 = v37;
  v21(v36, v38, v37);
  v24 = (*(unsigned __int8 *)(v20 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = v24 + v39;
  v26 = (char *)swift_allocObject();
  *((_QWORD *)v26 + 2) = v34;
  *((_QWORD *)v26 + 3) = v18;
  *((_QWORD *)v26 + 4) = v19;
  sub_23AA9F454(&aBlock, (uint64_t)(v26 + 40));
  v27 = v41;
  v28 = v32;
  v29 = v33;
  *((_QWORD *)v26 + 7) = v41;
  *((_QWORD *)v26 + 8) = v29;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v26[v24], v23, v22);
  v26[v25] = v42;
  swift_retain_n();
  swift_retain();
  sub_23AA93780(v27);
  v30 = v29;
  sub_23ADF3D40((uint64_t)"evict(_:request:qos:evictionReason:completion:)", 47, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v17, (uint64_t)sub_23AAFD4D8, (uint64_t)v26);
  swift_release();
  swift_release();
  return v30;
}

void sub_23AAE683C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    swift_beginAccess();
    v9 = MEMORY[0x23B8615C4](a2 + 16);
    if (v9)
    {
      v10 = (void *)v9;
      v13 = a3;
      v14 = a4;
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v8;
      sub_23AA9F454(&v13, v11 + 24);
      *(_QWORD *)(v11 + 40) = v10;
      swift_retain();
      v12 = v10;
      sub_23ADF3D40((uint64_t)"evict(_:request:qos:evictionReason:completion:)", 47, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AAFD5A0, v11);
      swift_release();
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

void sub_23AAE6960(_BYTE *a1, void (*a2)(void *), void (*a3)(void), _QWORD *a4, int a5, unint64_t a6, void *a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  char v27;
  void *v28;
  id v29;
  os_log_type_t v30;
  void (*v31)(void);
  void (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  unint64_t v38;
  void *v39;
  char *v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  unint64_t v60;
  _QWORD *v61;
  int v62;
  void (*v63)(void *);
  void (*v64)(void);
  uint64_t v65;
  int v66;

  v64 = a3;
  v59 = a7;
  v60 = a6;
  v62 = a5;
  v61 = a4;
  v63 = a2;
  v52 = sub_23B1C5BDC();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C6050();
  v53 = *(_QWORD *)(v14 - 8);
  v54 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v55 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C60A4();
  v57 = *(_QWORD *)(v16 - 8);
  v58 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v56 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23B1C5E4C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23B1C5570();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (void *)swift_retain();
  if (objc_sync_enter(v26))
LABEL_19:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  v27 = a1[qword_2542E6C88];
  if (objc_sync_exit(a1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  swift_release();
  if ((v27 & 1) != 0)
  {
    v66 = 35;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    v28 = (void *)sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    v63(v28);

    return;
  }
  v29 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v30 = sub_23B1C6A94();
  v31 = (void (*)(void))sub_23AA6DC74(v30, (uint64_t)"eviction waiter", 15, 2, (uint64_t)v63, (uint64_t)v64);
  v64 = v32;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  qos_class_self();
  sub_23B1C6038();
  v33 = v53;
  v34 = v54;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v13, 1, v54) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v55, *MEMORY[0x24BEE5498], v34);
    sub_23AA8A05C((uint64_t)v13, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v55, v13, v34);
  }
  v35 = v65;
  v36 = v62;
  v38 = v60;
  v37 = v61;
  v39 = v59;
  v40 = v56;
  sub_23B1C608C();
  LODWORD(v39) = sub_23AA6C330(1u, (uint64_t)v37, v36, v38, v39, v40, v31, v64);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v40, v58);
  if ((_DWORD)v39 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
    inited = swift_initStackObject();
    v42 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 24) = v42;
    *(_QWORD *)(inited + 32) = v42;
    *(_QWORD *)(inited + 40) = v42;
    *(_QWORD *)(inited + 48) = 0;
    v43 = sub_23ADF3730(v38);
    sub_23AAE6EB0(v37, v36, 4, v43, v44, 0x800000, (uint64_t)a1, a9, inited);
    if (!v35)
    {
      v45 = v50;
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v47 = v46;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v45, v52);
      v48 = v47 * 1000000000.0;
      if ((~COERCE__INT64(v47 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v48 > -9.22337204e18)
        {
          if (v48 < 9.22337204e18)
          {
            sub_23ADF6900((_QWORD *)inited, (uint64_t)v48);
            swift_release();
            swift_setDeallocating();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            return;
          }
          goto LABEL_18;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    swift_release();
  }
  swift_release();
}

uint64_t sub_23AAE6EB0(_QWORD *a1, unsigned __int8 a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void (*v42)(_QWORD *__return_ptr, id *);
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(void);
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  _QWORD v75[5];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  int v81;
  id v82[62];
  _BYTE v83[504];
  _BYTE v84[504];
  _QWORD *v85;
  __int16 v86;
  _QWORD v87[63];
  _QWORD *v88;
  unsigned __int8 v89;
  _QWORD v90[31];
  _BYTE v91[256];
  id v92;

  v73 = a1;
  LODWORD(v71) = a8;
  v69 = a5;
  v70 = a6;
  v68 = a4;
  LODWORD(v72) = a3;
  v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v67);
  v66 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v63 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v63 - v23;
  v25 = (uint64_t)v74;
  v88 = v73;
  v89 = a2;
  result = (*(uint64_t (**)(_QWORD **, uint64_t))(**(_QWORD **)(a7 + 32) + 240))(&v88, 1);
  if (v25)
    return result;
  v73 = (_QWORD *)a7;
  v74 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E4750);
  v27 = v72;
  v28 = (uint64_t)v14;
  v29 = (uint64_t)v74;
  sub_23AA724E8(v28, (uint64_t)v74, (uint64_t *)&unk_2542E6B00);
  sub_23AA8EFC8(v29, (uint64_t)v22, (uint64_t *)&unk_2542E6B00);
  if (v27 == 4)
    v27 = v22[*(int *)(v15 + 48)];
  sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542E6B00);
  if (v27 == 2)
    return sub_23AA8A05C(v29, (uint64_t *)&unk_2542E6B00);
  LODWORD(v72) = v27;
  v30 = v29 + *(int *)(v15 + 48);
  v31 = type metadata accessor for ItemMetadata();
  LOBYTE(v30) = *(_BYTE *)(v30 + *(int *)(v31 + 64));
  sub_23AA8EFC8(v29, (uint64_t)v19, (uint64_t *)&unk_2542E6B00);
  if ((v30 & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E6B00);
    return sub_23AA8A05C(v29, (uint64_t *)&unk_2542E6B00);
  }
  v32 = v19[*(int *)(v15 + 48) + *(int *)(v31 + 68)];
  sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E6B00);
  if ((v32 & 1) != 0)
    return sub_23AA8A05C(v29, (uint64_t *)&unk_2542E6B00);
  v33 = v73;
  v34 = v73[2];
  v35 = v88;
  v36 = v89;
  v85 = v88;
  v86 = v89;
  (*(void (**)(_QWORD *__return_ptr, _QWORD **, uint64_t))(*(_QWORD *)v34 + 168))(v87, &v85, 1);
  v64 = (uint64_t)v35;
  v65 = v36;
  sub_23AA724E8((uint64_t)v87, (uint64_t)v83, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v83, (uint64_t)v84, (uint64_t *)&unk_2542E4CB0);
  if (sub_23AAFC2A4((uint64_t)v84) == 1)
    return sub_23AA8A05C(v29, (uint64_t *)&unk_2542E6B00);
  memcpy(v82, v87, sizeof(v82));
  if (((uint64_t)v82[2] & 0x10) != 0 || !LOBYTE(v82[20]) && (BYTE2(v82[18]) & 4) != 0)
  {
    sub_23AAFC3AC((uint64_t)v82);
    return sub_23AA8A05C(v29, (uint64_t *)&unk_2542E6B00);
  }
  v37 = v33;
  if (v71 == 2)
  {
    v38 = 0x20000000002;
    v39 = v64;
    v40 = v65;
    v41 = v72;
  }
  else
  {
    v40 = v65;
    v41 = v72;
    if (v82[30])
    {
      v92 = v82[30];
      v42 = *(void (**)(_QWORD *__return_ptr, id *))(*(_QWORD *)v37[5] + 264);
      v43 = v82[30];
      v42(v90, &v92);
      sub_23AA724E8((uint64_t)v90, (uint64_t)v91, &qword_2542E5050);
      if (sub_23AAFCF2C((uint64_t)v91) != 1)
      {
        (*(void (**)(void))(*v73 + 512))();
        __asm { BR              X11 }
      }

      v37 = v73;
    }
    v38 = 2;
    v39 = v64;
  }
  v44 = v37[3];
  sub_23AAB5630();
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v45 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0DD0);
  v46 = (*(uint64_t (**)(_QWORD **, uint64_t))(*(_QWORD *)v44 + 272))(&v88, v45);
  swift_bridgeObjectRelease();
  v73 = 0;
  v72 = a9;
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    v52 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (v52)
      goto LABEL_28;
  }
  else if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    if ((v46 & 0xC000000000000001) != 0)
    {
      v47 = MEMORY[0x23B85F860](0, v46);
    }
    else
    {
      if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x23AAE76F4);
      }
      v47 = *(_QWORD *)(v46 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v47 + 104) == 1)
    {
      v48 = *(void **)(v47 + 88);
      v49 = *(void **)(v47 + 96);
      *(_QWORD *)(v47 + 88) = 0;
      *(_QWORD *)(v47 + 96) = 0;
      *(_BYTE *)(v47 + 104) = 4;
      sub_23AAAEE10(v48, v49, 1);
      v50 = *(void (**)(uint64_t))(*(_QWORD *)v72 + 144);
      v51 = swift_retain();
      v50(v51);
      swift_release_n();
    }
    else
    {
      swift_release();
    }
    goto LABEL_36;
  }
  swift_bridgeObjectRelease();
LABEL_36:
  v53 = v38 | v70;
  swift_allocObject();
  v54 = v39;
  v55 = v40;
  v56 = v40;
  v57 = v39;
  v58 = v68;
  v59 = v69;
  sub_23AAECEFC(v54, v55, v68, v69, v53);
  v60 = v72;
  v71 = *(void (**)(void))(*(_QWORD *)v72 + 144);
  v71();
  swift_release();
  if (v41 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6110);
    v61 = swift_allocObject();
    v62 = v61;
    *(_BYTE *)(v61 + 144) = v56;
    *(_QWORD *)(v61 + 24) = 0;
    *(_QWORD *)(v61 + 32) = 0;
    *(_QWORD *)(v61 + 16) = 0;
    *(_BYTE *)(v61 + 40) = 1;
    *(_OWORD *)(v61 + 48) = 0u;
    *(_OWORD *)(v61 + 64) = 0u;
    *(_QWORD *)(v61 + 80) = 0;
    *(_OWORD *)(v61 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v61 + 104) = 0;
    *(_QWORD *)(v61 + 112) = v58;
    *(_QWORD *)(v61 + 120) = v59;
    *(_QWORD *)(v61 + 128) = v53;
    *(_QWORD *)(v61 + 136) = v57;
    if ((v70 & 0x8000) != 0)
    {
      *(_QWORD *)(v61 + 88) = 2359552;
      *(_BYTE *)(v61 + 104) = 0;
      sub_23AAAEE10((void *)0x40100, 0, 0);
    }
    v60 = v72;
    ((void (*)(uint64_t))v71)(v62);
    swift_release();
    v56 = v65;
  }
  v75[0] = v57;
  v75[1] = v56;
  v75[2] = 259;
  v75[3] = v58;
  v75[4] = v59;
  v76 = 0u;
  v77 = 0u;
  v78 = 0u;
  v79 = 0u;
  v80 = 0;
  v81 = 151781376;
  (*(void (**)(_QWORD *))(*(_QWORD *)v60 + 136))(v75);
  sub_23AAFC3AC((uint64_t)v82);
  return sub_23AA8A05C((uint64_t)v74, (uint64_t *)&unk_2542E6B00);
}

void sub_23AAE770C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, unint64_t a5, int a6, void *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void (**v50)(void);
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  void (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t (**v67)();
  uint64_t (*v68)();
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (**v99)(void);
  void (*v100)(void *);
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t (*v137)();
  uint64_t v138;
  char *v139;
  void (*v140)(void);
  uint64_t v141;
  id v142;
  unsigned __int8 v143;

  v135 = a7;
  LODWORD(v132) = a6;
  v133 = a5;
  v131 = a4;
  v140 = a2;
  v141 = a3;
  v139 = (char *)a1;
  v127 = sub_23B1C5E4C();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v128 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VFSItem(0);
  v138 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v138 + 64);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v130 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v129 = (char *)&v118 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v134 = (uint64_t)&v118 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v137 = (uint64_t (*)())((char *)&v118 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v136 = (uint64_t)&v118 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v118 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v118 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (id *)((char *)&v118 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8((uint64_t)v139, (uint64_t)v29, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = *v29;
    v31 = *v29;
    ((void (*)(id))v140)(v30);

  }
  else
  {
    v33 = (uint64_t)v137;
    v32 = v138;
    v124 = v9;
    v122 = v20;
    v123 = (uint64_t)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    v125 = v24;
    v139 = v26;
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v29, 1, v18) == 1)
    {
      ((void (*)(_QWORD))v140)(0);
    }
    else
    {
      v34 = v19;
      v35 = v18;
      v36 = (uint64_t)v139;
      sub_23AA724E8((uint64_t)v29, (uint64_t)v139, &qword_2542E0F70);
      if ((*(_BYTE *)(v36 + *(int *)(v35 + 56)) & 1) != 0)
      {
        sub_23AAFCEE8();
        v37 = (void *)swift_allocError();
        *v38 = 1;
        v140();

        sub_23AA8A05C(v36, &qword_2542E0F70);
      }
      else
      {
        v121 = v35;
        v39 = v136;
        sub_23AA907B0(v36, v136, type metadata accessor for VFSItem);
        sub_23AA8EFC8(v36, (uint64_t)v125, &qword_2542E0F70);
        v40 = v39;
        v41 = v33;
        sub_23AA907B0(v40, v33, type metadata accessor for VFSItem);
        sub_23AA907B0(v33, v134, type metadata accessor for VFSItem);
        v42 = *(unsigned __int8 *)(v32 + 80);
        v43 = (v42 + 24) & ~v42;
        v44 = (v43 + v124 + 7) & 0xFFFFFFFFFFFFFFF8;
        v45 = (v43 + v124 + 23) & 0xFFFFFFFFFFFFFFF8;
        v138 = v42 | 7;
        v46 = swift_allocObject();
        v47 = v131;
        *(_QWORD *)(v46 + 16) = v131;
        sub_23AA94050(v41, v46 + v43, type metadata accessor for VFSItem);
        v48 = v46 + v44;
        v49 = v133;
        *(_QWORD *)v48 = v133;
        *(_BYTE *)(v48 + 8) = v132;
        v50 = (void (**)(void))(v46 + v45);
        v52 = (uint64_t)v140;
        v51 = v141;
        *v50 = v140;
        v50[1] = (void (*)(void))v51;
        v53 = v135;
        *(_QWORD *)(v46 + ((v45 + 23) & 0xFFFFFFFFFFFFFFF8)) = v135;
        if (((v49 >> 58) & 0x3C | (v49 >> 1) & 3) == 0x1B)
        {
          v54 = v53;
          v55 = swift_allocObject();
          *(_QWORD *)(v55 + 16) = sub_23AAFCE9C;
          *(_QWORD *)(v55 + 24) = v46;
          v56 = *(void (**)(void))(v47 + 24);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
          v57 = swift_dynamicCastClass();
          if (v57)
          {
            v58 = v57;
            v59 = swift_allocObject();
            v137 = (uint64_t (*)())v55;
            v138 = v59;
            v60 = v141;
            *(_QWORD *)(v59 + 16) = v52;
            *(_QWORD *)(v59 + 24) = v60;
            v61 = v123;
            sub_23AA8EFC8((uint64_t)v125, v123, &qword_2542E0F70);
            v62 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
            v140 = v56;
            v63 = (v122 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
            v64 = swift_allocObject();
            v65 = v135;
            sub_23AA724E8(v61, v64 + v62, &qword_2542E0F70);
            *(_QWORD *)(v64 + v63) = v58;
            v66 = v65;
            v49 = v133;
            v67 = (uint64_t (**)())(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8));
            v68 = v137;
            *v67 = sub_23AA8A65C;
            v67[1] = v68;
            swift_retain_n();
            swift_retain();
            sub_23AA93780(v49);
            v69 = v66;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_23AA93780(v49);
            v70 = v69;
            swift_retain();
            swift_retain();
            swift_retain();
            sub_23ADF3D40((uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v138, (uint64_t)sub_23AAFCEBC, v64);
            v71 = (uint64_t)v125;
            swift_release();
            swift_release_n();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v72 = v134;
          }
          else
          {
            v83 = v141;
            swift_retain();
            swift_retain();
            sub_23AA93780(v49);
            v66 = v54;
            v84 = v54;
            swift_retain();
            swift_retain();
            swift_retain();
            sub_23AA93780(v49);
            v85 = v84;
            swift_retain();
            v72 = v134;
            sub_23AAE8704(v47, v134, v49, v132, v52, v83, v85);
            swift_release();
            swift_release_n();
            swift_release();
            v71 = (uint64_t)v125;
          }
          sub_23AA937BC(v72, type metadata accessor for VFSItem);
          sub_23AAB47B0(v49);

          swift_release();
          sub_23AA8A05C(v71, &qword_2542E0F70);
          sub_23AA8A05C((uint64_t)v139, &qword_2542E0F70);
          sub_23AA937BC(v136, type metadata accessor for VFSItem);
        }
        else
        {
          v73 = v47;
          v119 = v34;
          v120 = ~v42;
          v143 = 1;
          v74 = swift_allocObject();
          v137 = (uint64_t (*)())v74;
          *(_BYTE *)(v74 + 16) = 1;
          v75 = *(void **)(v36 + *(int *)(v121 + 52));
          v121 = v46;
          v76 = v42;
          if (v75)
          {
            v118 = v42;
            v142 = v75;
            MEMORY[0x24BDAC7A8](v74);
            *(&v118 - 6) = v73;
            *(&v118 - 5) = (uint64_t)&v142;
            *((_BYTE *)&v118 - 32) = v132;
            v77 = v136;
            *(&v118 - 3) = v78;
            v116 = v77;
            v117 = &v143;
            swift_retain();
            swift_retain();
            sub_23AA93780(v49);
            v79 = v135;
            swift_retain();
            swift_retain();
            sub_23AA93780(v49);
            v80 = v79;
            v81 = (void *)MEMORY[0x23B8601A8](v75);
            sub_23ADDA710(v73, (uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AAFCED0, (uint64_t)(&v118 - 8), v82);
            objc_autoreleasePoolPop(v81);

            v88 = (uint64_t)v129;
            v89 = v124;
            v90 = v141;
            v76 = v118;
          }
          else
          {
            v90 = v141;
            swift_retain();
            swift_retain();
            sub_23AA93780(v49);
            v86 = v135;
            swift_retain();
            swift_retain();
            sub_23AA93780(v49);
            v87 = v86;
            v77 = v136;
            v88 = (uint64_t)v129;
            v89 = v124;
          }
          v91 = v143;
          sub_23AA907B0(v77, v88, type metadata accessor for VFSItem);
          sub_23AA907B0(v88, v130, type metadata accessor for VFSItem);
          v92 = (v76 + 16) & v120;
          v93 = (v89 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
          v94 = (v93 + 23) & 0xFFFFFFFFFFFFFFF8;
          v95 = (v94 + 15) & 0xFFFFFFFFFFFFFFF8;
          v96 = swift_allocObject();
          v97 = v88;
          v98 = v96;
          sub_23AA94050(v97, v96 + v92, type metadata accessor for VFSItem);
          v99 = (void (**)(void))(v98 + v93);
          v100 = (void (*)(void *))v140;
          *v99 = v140;
          v99[1] = (void (*)(void))v90;
          v101 = v90;
          v102 = (uint64_t)v137;
          *(_QWORD *)(v98 + v94) = v137;
          *(_QWORD *)(v98 + v95) = v73;
          v103 = (_QWORD *)(v98 + ((v95 + 15) & 0xFFFFFFFFFFFFFFF8));
          v104 = v121;
          *v103 = sub_23AAFCE9C;
          v103[1] = v104;
          if (v91 == 1
            && (__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0),
                (v105 = swift_dynamicCastClass()) != 0))
          {
            v106 = v105;
            v107 = swift_allocObject();
            *(_QWORD *)(v107 + 16) = v100;
            *(_QWORD *)(v107 + 24) = v101;
            v108 = v123;
            sub_23AA8EFC8((uint64_t)v125, v123, &qword_2542E0F70);
            v109 = (*(unsigned __int8 *)(v119 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
            v110 = (v122 + v109 + 7) & 0xFFFFFFFFFFFFFFF8;
            v111 = (v110 + 15) & 0xFFFFFFFFFFFFFFF8;
            v112 = swift_allocObject();
            sub_23AA724E8(v108, v112 + v109, &qword_2542E0F70);
            *(_QWORD *)(v112 + v110) = v106;
            v113 = v133;
            v114 = (_QWORD *)(v112 + v111);
            *v114 = sub_23AAFCEB4;
            v114[1] = v98;
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            swift_retain();
            sub_23ADF3D40((uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v107, (uint64_t)sub_23AAFCEBC, v112);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v115 = v130;
          }
          else
          {
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            v115 = v130;
            sub_23AAE8D88(v130, v100, v101, v102, v73, (void (*)(uint64_t))sub_23AAFCE9C, v104);
            swift_release();
            v113 = v133;
          }
          sub_23AA937BC(v115, type metadata accessor for VFSItem);
          swift_release_n();
          swift_release_n();
          swift_release();
          swift_release();
          sub_23AA937BC(v134, type metadata accessor for VFSItem);
          sub_23AAB47B0(v113);

          swift_release();
          sub_23AA8A05C((uint64_t)v125, &qword_2542E0F70);
          sub_23AA8A05C((uint64_t)v139, &qword_2542E0F70);
          sub_23AA937BC(v136, type metadata accessor for VFSItem);
          swift_release();
        }
      }
    }
  }
}

uint64_t sub_23AAE84DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  _QWORD *v19;
  id v20;
  uint8_t *v21;
  _QWORD v23[2];
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  id v26;
  uint64_t v27;

  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23AEA3208(*(void **)a1, *(unsigned __int8 *)(a1 + 8), 8uLL);
  if (v4)
  {
    v25 = v9;
    v13 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v14 = v4;
    v15 = sub_23B1C5E40();
    v16 = sub_23B1C6AA0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v24 = a3;
      v18 = (uint8_t *)v17;
      v19 = (_QWORD *)swift_slowAlloc();
      v23[0] = v8;
      v23[1] = a4;
      *(_DWORD *)v18 = 138412290;
      swift_getErrorValue();
      v20 = sub_23B0D9CF0(v27);
      v26 = v20;
      v8 = v23[0];
      sub_23B1C6CBC();
      *v19 = v20;

      _os_log_impl(&dword_23AA66000, v15, v16, "⏰ Failed to remove pending downloads %@", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v19, -1, -1);
      v21 = v18;
      a3 = v24;
      MEMORY[0x23B8614BC](v21, -1, -1);

    }
    else
    {

    }
    v12 = (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v8);
  }
  return a3(v12);
}

void sub_23AAE8704(uint64_t a1, uint64_t a2, unint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, _QWORD, void (*)(void *), _QWORD *);
  id v31;
  uint64_t v32;
  char v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  id v43;

  v43 = a7;
  v39 = a5;
  v40 = a6;
  v42 = a4;
  v41 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C6050();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C60A4();
  v37 = *(_QWORD *)(v16 - 8);
  v38 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for VFSItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v23 = (a3 >> 58) & 0x3C | (a3 >> 1) & 3;
  v24 = *(unsigned __int8 *)(a2 + *(int *)(v22 + 28)) - 1 > 1 || v23 == 6;
  if (v24
    || v23 == 9
    && (objc_msgSend(*(id *)((a3 & 0xFFFFFFFFFFFFFFF9) + 0x18), sel_isProviderInitiated) & 1) == 0)
  {
    v25 = v41;
    v26 = *(_QWORD *)(*(_QWORD *)(v41 + 32) + 16);
    sub_23AA907B0(a2, (uint64_t)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for VFSItem);
    v27 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v28 = (_QWORD *)swift_allocObject();
    v29 = v40;
    v28[2] = v39;
    v28[3] = v29;
    v28[4] = v25;
    sub_23AA94050((uint64_t)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v28 + v27, type metadata accessor for VFSItem);
    *(_QWORD *)((char *)v28 + ((v21 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
    v30 = *(uint64_t (**)(uint64_t, _QWORD, void (*)(void *), _QWORD *))(*(_QWORD *)v26 + 696);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(a3);
    v31 = (id)v30(a2, v42, sub_23AAFD3B4, v28);
    swift_release();
    swift_release();
  }
  else
  {
    v32 = *(_QWORD *)a2;
    v33 = *(_BYTE *)(a2 + 8);
    qos_class_self();
    sub_23B1C6038();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5498], v12);
      sub_23AA8A05C((uint64_t)v11, qword_2542E02D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    }
    sub_23B1C608C();
    v31 = sub_23AAE6514(v32, v33, a3, (uint64_t)v18, v42, v39, v40);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v38);
  }
  v34 = v43;
  v35 = (char *)objc_msgSend(v43, sel_totalUnitCount);
  if (__OFADD__(v35, 1))
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v34, sel_setTotalUnitCount_, v35 + 1);
    objc_msgSend(v34, sel_addChild_withPendingUnitCount_, v31, 1);

  }
}

void sub_23AAE8A4C(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  id v9;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;

  if (a1)
  {
    v9 = a1;
    a2(a1);

  }
  else
  {
    v12 = *(_QWORD *)a5;
    v13 = *(_BYTE *)(a5 + 8);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a2;
    *(_QWORD *)(v14 + 24) = a3;
    v16 = v12;
    v17 = v13;
    v15 = (_QWORD *)swift_allocObject();
    sub_23AA9F454(&v16, (uint64_t)(v15 + 2));
    v15[4] = a6;
    v15[5] = a4;
    v15[6] = a2;
    v15[7] = a3;
    swift_retain_n();
    sub_23AA93780(a6);
    swift_retain();
    sub_23ADF3D40((uint64_t)"propagateToFP(itemID:request:completion:)", 41, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v14, (uint64_t)sub_23AAFC23C, (uint64_t)v15);
    swift_release();
    swift_release();
  }
}

_QWORD *sub_23AAE8B8C(uint64_t a1, void *a2, char a3, BOOL *a4, uint64_t a5, BOOL *a6)
{
  uint64_t v6;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, void **, uint64_t);
  id v17;
  uint64_t v18;
  BOOL v19;
  BOOL *v20;
  uint64_t v21;
  _BYTE v22[496];
  _DWORD v23[124];
  _BYTE v24[504];
  _BYTE v25[504];
  void *v26;
  __int16 v27;
  _QWORD __src[63];
  _QWORD v29[31];
  _BYTE v30[208];
  uint64_t v31;
  uint64_t v32;
  _BYTE __dst[504];
  void *v34;

  v34 = a2;
  result = (*(_QWORD *(**)(_QWORD *__return_ptr, void **))(**(_QWORD **)(a1 + 40) + 264))(v29, &v34);
  if (!v6)
  {
    sub_23AA724E8((uint64_t)v29, (uint64_t)v30, &qword_2542E5050);
    result = (_QWORD *)sub_23AAFCF2C((uint64_t)v30);
    if ((_DWORD)result != 1)
    {
      v20 = a6;
      v21 = v31;
      v14 = v32;
      v15 = *(_QWORD *)(a1 + 16);
      v26 = a2;
      v27 = 256;
      v16 = *(void (**)(_QWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v15 + 168);
      v17 = a2;
      v16(__src, &v26, 1);

      sub_23AA724E8((uint64_t)__src, (uint64_t)v24, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_2542E4CB0);
      if (sub_23AAFC2A4((uint64_t)v25) == 1)
      {
        return (_QWORD *)sub_23AAA5B2C((uint64_t)v29);
      }
      else
      {
        memcpy(__dst, __src, 0x1F0uLL);
        sub_23AFFD9BC((uint64_t)v22);
        sub_23AAFC3AC((uint64_t)__dst);
        memcpy(v23, v22, sizeof(v23));
        v18 = sub_23AEFF0F4(v21, v14, 0, (*(_QWORD *)(a1 + 80) & 0x200) != 0, 1u, v23[122] & 1);
        if (v18 == 3 && a3 != 2)
          *a4 = 0;
        sub_23AAA5B2C((uint64_t)v29);
        sub_23AAFCF50((uint64_t)v23);
        result = (_QWORD *)type metadata accessor for VFSItem(0);
        if (*(_BYTE *)(a5 + *((int *)result + 7)) == 1)
        {
          v19 = v18 != 500 && v18 != 3;
          *v20 = v19;
          *a4 = v18 != 3;
        }
      }
    }
  }
  return result;
}

void sub_23AAE8D88(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unsigned __int8 *v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  void (*v37)(void *);
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  void *v46;
  id v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  void (*v68)(void *);
  uint64_t v69;
  _QWORD aBlock[6];

  v65 = a7;
  v66 = a6;
  v67 = a5;
  v68 = a2;
  v10 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v10);
  v56 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_23B1C5474();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v55 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C602C();
  v63 = *(_QWORD *)(v13 - 8);
  v64 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v62 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C60A4();
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v59 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for VFSItem(0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v54 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v54 - v28;
  v30 = (unsigned __int8 *)(a1 + *(int *)(v27 + 28));
  if (v30[v17[20]] == 1)
  {
    v54 = a4;
    v31 = *v30;
    sub_23AA907B0(a1, (uint64_t)&v54 - v28, type metadata accessor for VFSItem);
    if (v31 == 1)
    {
      v32 = (uint64_t)v29;
LABEL_16:
      sub_23AA937BC(v32, type metadata accessor for VFSItem);
      goto LABEL_17;
    }
    v33 = v29[*(int *)(v20 + 28) + v17[27]];
    sub_23AA937BC((uint64_t)v29, type metadata accessor for VFSItem);
    if (v33 == 1)
      goto LABEL_17;
    v34 = fpfs_supports_partial_materialization();
    sub_23AA907B0(a1, (uint64_t)v26, type metadata accessor for VFSItem);
    if (!v34)
    {
      v32 = (uint64_t)v26;
      goto LABEL_16;
    }
    sub_23AA907B0((uint64_t)&v26[*(int *)(v20 + 28)], (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA937BC((uint64_t)v26, type metadata accessor for VFSItem);
    v35 = *(_QWORD *)&v19[v17[26]];
    sub_23AA937BC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    a4 = v54;
    if (!v35)
    {
LABEL_17:
      v68(0);
      return;
    }
  }
  swift_beginAccess();
  v36 = *(unsigned __int8 *)(a4 + 16);
  v37 = v68;
  if (v36 == 1)
  {
    v38 = *v30;
    sub_23AA907B0(a1, (uint64_t)v23, type metadata accessor for VFSItem);
    if (v38 == 1)
    {
      v39 = sub_23AA937BC((uint64_t)v23, type metadata accessor for VFSItem);
LABEL_11:
      v66(v39);
      return;
    }
    sub_23AA907B0((uint64_t)&v23[*(int *)(v20 + 28)], (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA937BC((uint64_t)v23, type metadata accessor for VFSItem);
    v40 = v19[v17[21]];
    v39 = sub_23AA937BC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if (v40)
      goto LABEL_11;
  }
  v41 = swift_allocBox();
  sub_23AA907B0(a1, v42, type metadata accessor for VFSItem);
  type metadata accessor for VFSFileTree(0);
  v43 = swift_dynamicCastClass();
  if (v43)
  {
    v44 = *(void **)(v43 + 216);
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v41;
    v45[3] = v37;
    v45[4] = a3;
    aBlock[4] = sub_23AB00094;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23AA698FC;
    aBlock[3] = &block_descriptor_424;
    v46 = _Block_copy(aBlock);
    swift_retain();
    v47 = v44;
    swift_retain();
    swift_retain();
    v48 = v59;
    sub_23B1C6068();
    v69 = MEMORY[0x24BEE4AF8];
    sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
    sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
    v49 = v62;
    v50 = v64;
    sub_23B1C6DE8();
    MEMORY[0x23B85F470](0, v48, v49, v46);
    _Block_release(v46);
    swift_release();

    (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v50);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v48, v61);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    sub_23B1C536C();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v51 = v55;
    v52 = v58;
    sub_23B1C5864();
    v53 = (void *)sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v52);
    v37(v53);

  }
}

void sub_23AAE938C(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void (*v19)(id);
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void *);

  v29 = a3;
  v30 = a2;
  v3 = sub_23B1C5E4C();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23B1C5474();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C5A08();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for VFSItem(0);
  swift_projectBox();
  swift_beginAccess();
  sub_23AC380C8(v13);
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E6740);
    sub_23B1C536C();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_23B1C5864();
    v18 = (void *)sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v30(v18);

  }
  else
  {
    v19 = v30;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v20 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v21 = sub_23B1C5E40();
    v22 = sub_23B1C6AA0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_23AA66000, v21, v22, "Should not procedd with eviction due to content policy prevention", v23, 2u);
      MEMORY[0x23B8614BC](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
    v24 = (void *)sub_23B1C5954();
    v25 = (id)FPMissingAllowsEvictingCapabilitiesError();

    v19(v25);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_23AAE96B4(uint64_t *a1, void (*a2)(uint64_t *), uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t *v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  void (*v65)(uint64_t *);
  uint64_t v66;
  char v67;
  void (*v68)(uint64_t *, void (*)(_QWORD), uint64_t);
  void (*v69)(uint64_t *);
  uint64_t *v70;
  _QWORD v72[2];
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  void (*v85)(uint64_t *);
  uint64_t v86;
  char v87;
  uint64_t v88;

  v75 = a5;
  v79 = a4;
  v84 = a3;
  v85 = a2;
  v83 = a1;
  v5 = sub_23B1C5E4C();
  v80 = *(_QWORD *)(v5 - 8);
  v81 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v77 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v76 = (char *)v72 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v74 = (uint64_t)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v73 = (_QWORD *)((char *)v72 - v14);
  MEMORY[0x24BDAC7A8](v13);
  v82 = (uint64_t)v72 - v15;
  v16 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v16);
  v17 = sub_23B1C5474();
  v78 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (_QWORD *)((char *)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (void **)((char *)v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8((uint64_t)v83, (uint64_t)v25, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = *v25;
    *v22 = (uint64_t)*v25;
    swift_storeEnumTagMultiPayload();
    v27 = v26;
    v85(v22);

LABEL_5:
    v29 = &qword_2542E21C0;
    v30 = (uint64_t)v22;
    return sub_23AA8A05C(v30, v29);
  }
  v72[1] = v20;
  v83 = v22;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v10 + 48))(v25, 1, v9) == 1)
  {
    sub_23B1C536C();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_23B1C5864();
    v28 = sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v19, v17);
    v22 = v83;
    *v83 = v28;
    swift_storeEnumTagMultiPayload();
    v85(v22);
    goto LABEL_5;
  }
  v31 = v82;
  sub_23AA724E8((uint64_t)v25, v82, &qword_2542E0F70);
  v32 = v31 + *(int *)(type metadata accessor for VFSItem(0) + 28);
  LODWORD(v32) = *(unsigned __int8 *)(v32 + *(int *)(type metadata accessor for ItemMetadata() + 72));
  v33 = (id)fpfs_current_or_default_log();
  if ((_DWORD)v32 == 1)
  {
    v34 = v76;
    sub_23B1C5E58();
    v35 = v73;
    sub_23AA8EFC8(v31, (uint64_t)v73, &qword_2542E0F70);
    v36 = v79;
    sub_23AA93780(v79);
    sub_23AA93780(v36);
    v37 = sub_23B1C5E40();
    v38 = sub_23B1C6A94();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v86 = v40;
      *(_DWORD *)v39 = 136315394;
      v41 = (uint64_t)v35;
      v42 = *v35;
      v43 = *(_BYTE *)(v41 + 8);
      sub_23AA8A05C(v41, &qword_2542E0F70);
      v44 = sub_23AA96F18(v42, v43);
      v88 = sub_23AABEC68(v44, v45, &v86);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      sub_23AE5BC48(v36);
      v47 = v46;
      v49 = v48;
      sub_23AAB47B0(v36);
      v88 = sub_23AABEC68(v47, v49, &v86);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AAB47B0(v36);
      _os_log_impl(&dword_23AA66000, v37, v38, "attaching %s for %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v40, -1, -1);
      MEMORY[0x23B8614BC](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v76, v81);
    }
    else
    {
      sub_23AAB47B0(v36);
      sub_23AA8A05C((uint64_t)v35, &qword_2542E0F70);
      sub_23AAB47B0(v36);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v34, v81);
    }
    v65 = v85;
    v66 = *(_QWORD *)(*(_QWORD *)(v75 + 32) + 16);
    v67 = *(_BYTE *)(v31 + 8);
    v86 = *(_QWORD *)v31;
    v87 = v67;
    v68 = *(void (**)(uint64_t *, void (*)(_QWORD), uint64_t))(*(_QWORD *)v66 + 792);
    swift_retain();
    v68(&v86, (void (*)(_QWORD))v65, v84);
    swift_release();
  }
  else
  {
    v50 = v77;
    sub_23B1C5E58();
    v51 = v74;
    sub_23AA8EFC8(v31, v74, &qword_2542E0F70);
    v52 = v79;
    sub_23AA93780(v79);
    sub_23AA93780(v52);
    v53 = sub_23B1C5E40();
    v54 = sub_23B1C6A94();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      v56 = swift_slowAlloc();
      v86 = v56;
      *(_DWORD *)v55 = 136315394;
      v57 = *(_QWORD *)v51;
      v58 = *(_BYTE *)(v51 + 8);
      sub_23AA8A05C(v51, &qword_2542E0F70);
      v59 = sub_23AA96F18(v57, v58);
      v88 = sub_23AABEC68(v59, v60, &v86);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      sub_23AE5BC48(v52);
      v62 = v61;
      v64 = v63;
      sub_23AAB47B0(v52);
      v88 = sub_23AABEC68(v62, v64, &v86);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AAB47B0(v52);
      _os_log_impl(&dword_23AA66000, v53, v54, "not reattaching already attached item %s for %s", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v56, -1, -1);
      MEMORY[0x23B8614BC](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v81);
    }
    else
    {
      sub_23AAB47B0(v52);
      sub_23AA8A05C(v51, &qword_2542E0F70);
      sub_23AAB47B0(v52);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v50, v81);
    }
    v69 = v85;
    v70 = v83;
    sub_23AA907B0(v31, (uint64_t)v83, type metadata accessor for VFSItem);
    swift_storeEnumTagMultiPayload();
    v69(v70);
    sub_23AA8A05C((uint64_t)v70, &qword_2542E21C0);
  }
  v29 = &qword_2542E0F70;
  v30 = v31;
  return sub_23AA8A05C(v30, v29);
}

unint64_t sub_23AAE9EB4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5578);
  v2 = sub_23B1C70AC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v6, (uint64_t)&v15, &qword_2542E1EA0);
    v7 = v15;
    v8 = v16;
    result = sub_23AAAF4C4(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23AAA159C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAE9FE8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5588);
  v2 = sub_23B1C70AC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v6, (uint64_t)v15, (uint64_t *)&unk_2542E7590);
    result = sub_23ACD5A68((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_23AAA159C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEA128(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5558);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23AAAF4C4(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEA248(uint64_t a1)
{
  return sub_23AAEA67C(a1, &qword_2569E1C30);
}

unint64_t sub_23AAEA254(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1D40);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_23AA88CF8(v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEA35C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1C48);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_23AA88CF8(v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v5;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEA464(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5568);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23AAAF4C4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEA574(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1B08);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_23AA88CF8(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEA670(uint64_t a1)
{
  return sub_23AAEA67C(a1, &qword_2569E1C38);
}

unint64_t sub_23AAEA67C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_bridgeObjectRetain();
    result = sub_23ACD5B4C((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEA780(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E14D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2078);
  v6 = sub_23B1C70AC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v12, (uint64_t)v5, &qword_2542E14D0);
    result = sub_23ACD5C3C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
    result = sub_23AA94050((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEA918(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1500);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1D58);
  v6 = sub_23B1C70AC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v12, (uint64_t)v5, (uint64_t *)&unk_2542E1500);
    result = sub_23ACD5B98((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
    sub_23AA94050((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    v19 = v7[7];
    v20 = sub_23B1C5BDC();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEAAD0(uint64_t a1)
{
  return sub_23AAEBC18(a1, &qword_2542E1E98, &qword_2569E1B40, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

unint64_t sub_23AAEAAEC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AC8);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_23AA88CF8(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEABF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4C00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AA8);
  v6 = sub_23B1C70AC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v12, (uint64_t)v5, &qword_2542E4C00);
    result = sub_23ACD5CF0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
    result = sub_23AA724E8((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, &qword_2542DDDB0);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEAD8C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  unint64_t result;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A98);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = (void *)*(v4 - 3);
    v6 = (void *)*(v4 - 2);
    v7 = (void *)*(v4 - 1);
    v8 = *v4;
    swift_retain();
    v9 = v5;
    v10 = v6;
    v11 = v7;
    result = sub_23AA88CF8(v9);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v9;
    v14 = (_QWORD *)(v2[7] + 24 * result);
    *v14 = v10;
    v14[1] = v7;
    v14[2] = v8;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEAEC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4778);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7D0);
  v6 = sub_23B1C70AC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v12, (uint64_t)v5, &qword_2542E4778);
    v14 = *v5;
    result = sub_23ACD5CDC(*v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v7[6] + result) = v14;
    v18 = v7[7];
    v19 = type metadata accessor for SyncState();
    result = sub_23AA94050(v9, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB060(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A90);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 1);
    v6 = *v4;
    v7 = *((id *)v4 - 2);
    result = sub_23AA88CF8(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v7;
    v10 = v2[7] + 16 * result;
    *(_QWORD *)v10 = v5;
    *(_BYTE *)(v10 + 8) = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 24;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB16C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1B28);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *((_BYTE *)v4 - 8);
    v7 = *v4;
    v8 = (id)*(v4 - 3);
    result = sub_23AA88CF8(v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v8;
    v11 = v2[7] + 24 * result;
    *(_QWORD *)v11 = v5;
    *(_BYTE *)(v11 + 8) = v6;
    *(_QWORD *)(v11 + 16) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB294(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A88);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 64);
  while (1)
  {
    v5 = (void *)*((_QWORD *)v4 - 4);
    v6 = (void *)*((_QWORD *)v4 - 3);
    v7 = (void *)*((_QWORD *)v4 - 2);
    v8 = *((unsigned __int8 *)v4 - 8);
    v15 = *v4;
    sub_23AAFA44C(v5, v6, v7, *((_BYTE *)v4 - 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23ACD5FA0((uint64_t)v5, (uint64_t)v6, (uint64_t)v7, v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = v2[6] + 32 * result;
    *(_QWORD *)v11 = v5;
    *(_QWORD *)(v11 + 8) = v6;
    *(_QWORD *)(v11 + 16) = v7;
    *(_BYTE *)(v11 + 24) = v8;
    *(_OWORD *)(v2[7] + 16 * result) = v15;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB3F0(uint64_t a1)
{
  return sub_23AAEB408(a1, &qword_2569E1A80);
}

unint64_t sub_23AAEB3FC(uint64_t a1)
{
  return sub_23AAEB408(a1, &qword_2569E1A68);
}

unint64_t sub_23AAEB408(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 2);
    v7 = *((_QWORD *)v5 - 1);
    v14 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23AAAF4C4(v6, v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB538(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1AE8);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    result = sub_23AAAF4C4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB650(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1AF0);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 72);
  while (1)
  {
    v5 = (void *)*(v4 - 5);
    v6 = (void *)*(v4 - 4);
    v7 = (void *)*(v4 - 3);
    v8 = *((unsigned __int8 *)v4 - 16);
    v10 = *(v4 - 1);
    v9 = *v4;
    sub_23AAFA44C(v5, v6, v7, *((_BYTE *)v4 - 16));
    swift_bridgeObjectRetain();
    result = sub_23ACD5FA0((uint64_t)v5, (uint64_t)v6, (uint64_t)v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = v2[6] + 32 * result;
    *(_QWORD *)v13 = v5;
    *(_QWORD *)(v13 + 8) = v6;
    *(_QWORD *)(v13 + 16) = v7;
    *(_BYTE *)(v13 + 24) = v8;
    v14 = (_QWORD *)(v2[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB7A0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C28);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *(v4 - 1);
    v5 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    result = sub_23ACD6138(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB8A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C20);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_23AA88CF8(v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEB9B0(uint64_t a1)
{
  return sub_23AAEC08C(a1, &qword_2569E1D38);
}

unint64_t sub_23AAEB9BC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20B0);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23AAAF4C4(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEBAD0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1D20);
  v2 = sub_23B1C70AC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v6, (uint64_t)&v13, (uint64_t *)&unk_2569E1D28);
    v7 = v13;
    result = sub_23AA88CF8(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_23AAA159C(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEBBFC(uint64_t a1)
{
  return sub_23AAEBC18(a1, &qword_2569E1CA0, &qword_2569E1CA8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

unint64_t sub_23AAEBC18(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t (*v30)(_QWORD);
  uint64_t *v31;

  v30 = a4;
  v31 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v10 = sub_23B1C70AC();
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  v13 = (char *)v9 + *(int *)(v6 + 48);
  v14 = v10 + 64;
  v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v29[1] = a1;
  v16 = a1 + v15;
  v17 = *(_QWORD *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v16, (uint64_t)v9, v31);
    v18 = *v9;
    v19 = v9[1];
    result = sub_23AAAF4C4(*v9, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v11[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v11[7];
    v25 = v30(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, v13, v25);
    v26 = v11[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v11[2] = v28;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEBDB4(uint64_t a1)
{
  return sub_23AAEBDDC(a1, &qword_2569E1D10, &qword_2569E1D18);
}

unint64_t sub_23AAEBDC8(uint64_t a1)
{
  return sub_23AAEBDDC(a1, &qword_2569E1CF8, &qword_2569E1D00);
}

unint64_t sub_23AAEBDDC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v26 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v9 = sub_23B1C70AC();
  v10 = (_QWORD *)v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  v12 = *(int *)(v5 + 48);
  v13 = v9 + 64;
  v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v25 = a1;
  v15 = a1 + v14;
  v16 = *(_QWORD *)(v6 + 72);
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v15, (uint64_t)v8, v26);
    result = sub_23ACD5CF0((uint64_t)v8);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v13 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = v10[6];
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
    result = sub_23AA724E8((uint64_t)v8, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v19, &qword_2542DDDB0);
    *(_QWORD *)(v10[7] + 8 * v19) = *(_QWORD *)&v8[v12];
    v22 = v10[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v10[2] = v24;
    v15 += v16;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEBF6C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1D08);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_23ACD6190((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v5;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEC074(uint64_t a1)
{
  return sub_23AAEC08C(a1, &qword_2569E1CF0);
}

unint64_t sub_23AAEC080(uint64_t a1)
{
  return sub_23AAEC08C(a1, (uint64_t *)&unk_2569E1B50);
}

unint64_t sub_23AAEC08C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_23AAAF4C4(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEC1A0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1CC0);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_23AAAF4C4(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEC2B8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1CB0);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23AA8EFC8(v4, (uint64_t)v13, &qword_2569E1CB8);
    result = sub_23ACD5A68((uint64_t)v13);
    if ((v6 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v7 = v2[6] + 40 * result;
    v8 = v13[0];
    v9 = v13[1];
    *(_QWORD *)(v7 + 32) = v14;
    *(_OWORD *)v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    *(_QWORD *)(v2[7] + 8 * result) = v15;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEC3E0(uint64_t a1)
{
  return sub_23AAEC410(a1, (uint64_t *)&unk_2542DF3C0);
}

unint64_t sub_23AAEC3EC(uint64_t a1)
{
  return sub_23AAEC410(a1, (uint64_t *)&unk_2542DF3D8);
}

unint64_t sub_23AAEC3F8(uint64_t a1)
{
  return sub_23AAEC410(a1, &qword_2542DF3D0);
}

unint64_t sub_23AAEC404(uint64_t a1)
{
  return sub_23AAEC410(a1, &qword_2542DF3E8);
}

unint64_t sub_23AAEC410(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_retain();
    result = sub_23AA88CF8(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEC514(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1B48);
  v2 = sub_23B1C70AC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (_QWORD *)(a1 + 72);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 5);
    v7 = *(v5 - 4);
    v9 = *(v5 - 3);
    v8 = *(v5 - 2);
    v10 = *((_BYTE *)v5 - 8);
    v11 = *((_BYTE *)v5 - 7);
    v12 = *((_BYTE *)v5 - 6);
    v13 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23AAAF4C4(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = v3[7] + 32 * result;
    *(_QWORD *)v17 = v9;
    *(_QWORD *)(v17 + 8) = v8;
    *(_BYTE *)(v17 + 16) = v10;
    *(_BYTE *)(v17 + 17) = v11;
    *(_BYTE *)(v17 + 18) = v12;
    *(_QWORD *)(v17 + 24) = v13;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v3[2] = v20;
    v5 += 6;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEC670(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  id v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1CE8);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    v11 = *v4;
    v5 = *((id *)v4 - 1);
    swift_retain();
    result = sub_23AA88CF8(v5);
    if ((v7 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    v8 = v2[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      goto LABEL_11;
    v2[2] = v10;
    v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23AAEC78C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1A40);
  v2 = (_QWORD *)sub_23B1C70AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    result = sub_23AA88CF8(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v7;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23AAEC8A0()
{
  return 0x100000000;
}

uint64_t sub_23AAEC8BC()
{
  return 0;
}

uint64_t sub_23AAEC8C8()
{
  return 2;
}

uint64_t sub_23AAEC8D0@<X0>(uint64_t a1@<X8>)
{
  return sub_23AAECE30((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_23AAEC8DC()
{
  return 0;
}

uint64_t sub_23AAEC8E4()
{
  return 0;
}

uint64_t sub_23AAEC8F0()
{
  return 0;
}

uint64_t sub_23AAEC8FC@<X0>(uint64_t a1@<X8>)
{
  return sub_23AAECE30((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], a1);
}

uint64_t sub_23AAEC908@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_23AAEC948()
{
  return 0;
}

unint64_t sub_23AAEC954()
{
  return 0xF000000000000007;
}

unint64_t sub_23AAEC95C()
{
  return sub_23AAF0A08(MEMORY[0x24BEE4AF8]);
}

id sub_23AAEC96C()
{
  if (qword_2542E1F48 != -1)
    swift_once();
  return (id)qword_2542EDC78;
}

id sub_23AAEC9B0()
{
  if (FPFeatureFlagSpaceAttributionIsEnabled())
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEAFB98]), sel_init);
  else
    return 0;
}

uint64_t sub_23AAEC9EC@<X0>(uint64_t a1@<X8>)
{
  return sub_23AAECE30(type metadata accessor for FPDDomainFPFSBackend.PendingSetState, a1);
}

void sub_23AAEC9F8(void *a1, void (*a2)(_QWORD *))
{
  id v4;
  _QWORD v5[3];
  char v6;

  v5[1] = 0;
  v5[2] = 0;
  v5[0] = a1;
  v6 = 1;
  v4 = a1;
  a2(v5);

}

void sub_23AAECA4C(void *a1, void (*a2)(_QWORD *))
{
  id v4;
  _QWORD v5[4];
  char v6;

  v5[0] = a1;
  memset(&v5[1], 0, 24);
  v6 = 1;
  v4 = a1;
  a2(v5);

}

uint64_t sub_23AAECAA0(void *a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = a1;
  swift_storeEnumTagMultiPayload();
  v7 = a1;
  a2(v6);
  return sub_23AA8A05C((uint64_t)v6, (uint64_t *)&unk_2542E2190);
}

void sub_23AAECB48(void *a1, void (*a2)(void **))
{
  id v4;
  void *v5;
  __int16 v6;

  v5 = a1;
  v6 = 256;
  v4 = a1;
  a2(&v5);

}

void sub_23AAECB98(void *a1, void (*a2)(void **))
{
  id v4;
  void *v5;
  char v6;

  v5 = a1;
  v6 = 1;
  v4 = a1;
  a2(&v5);

}

uint64_t sub_23AAECBE8()
{
  return MEMORY[0x24BEE4B00];
}

uint64_t sub_23AAECBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[4];

  v0 = sub_23B1C5C54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5C48();
  v8[2] = sub_23B1C5BF4();
  v8[3] = v4;
  v8[0] = 45;
  v8[1] = 0xE100000000000000;
  sub_23AAA420C();
  v5 = sub_23B1C6CD4();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = *(_QWORD *)(v5 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23AAECCE8()
{
  uint64_t v0;

  v0 = sub_23AAF8CA8((uint64_t)&unk_250BDEA88);
  swift_arrayDestroy();
  return v0;
}

unint64_t sub_23AAECD2C()
{
  return sub_23AAF8460(MEMORY[0x24BEE4AF8], &qword_2542DF3B8, (uint64_t (*)(uint64_t))sub_23ACD61DC);
}

unint64_t sub_23AAECD58()
{
  return sub_23AAF8460(MEMORY[0x24BEE4AF8], &qword_2569E1CE0, (uint64_t (*)(uint64_t))sub_23ACD61E8);
}

unint64_t sub_23AAECD84()
{
  return sub_23AAF8460(MEMORY[0x24BEE4AF8], &qword_2569E1CD8, (uint64_t (*)(uint64_t))sub_23ACD61E8);
}

unint64_t sub_23AAECDB0()
{
  return sub_23AAF8460(MEMORY[0x24BEE4AF8], &qword_2569E1CD0, (uint64_t (*)(uint64_t))sub_23ACD61DC);
}

unint64_t sub_23AAECDDC()
{
  return sub_23AAF8460(MEMORY[0x24BEE4AF8], &qword_2569E1CC8, (uint64_t (*)(uint64_t))sub_23ACD61E8);
}

uint64_t sub_23AAECE08()
{
  return 0x69737265762D6F6ELL;
}

uint64_t sub_23AAECE24()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23AAECE30@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_23AAECE70@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[248];

  sub_23AAF8E48((uint64_t)v3);
  return sub_23AA724E8((uint64_t)v3, a1, &qword_2542E5050);
}

uint64_t sub_23AAECEB0()
{
  return 0;
}

uint64_t sub_23AAECEC4()
{
  return 0;
}

uint64_t sub_23AAECED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

unint64_t sub_23AAECEF0()
{
  return sub_23AAF7D10(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_23AAECEFC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t result;

  *(_BYTE *)(v5 + 144) = a2;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_BYTE *)(v5 + 40) = 1;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_QWORD *)(v5 + 80) = 0;
  *(_OWORD *)(v5 + 88) = xmmword_23B1CA770;
  *(_QWORD *)(v5 + 112) = a3;
  *(_QWORD *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 128) = a5;
  *(_QWORD *)(v5 + 136) = a1;
  if ((a5 & 0x8000) != 0
    && (*(_QWORD *)(v5 + 88) = 2359552,
        *(_BYTE *)(v5 + 104) = 0,
        sub_23AAAEE10((void *)0x40100, 0, 0),
        *(_BYTE *)(v5 + 104)))
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v5 + 88);
    v6 = *(void **)(v5 + 96);
    *(_QWORD *)(v5 + 88) = v7 | 0x40;
    *(_BYTE *)(v5 + 104) = 0;
    swift_retain();
    sub_23AAAEE10((void *)v7, v6, 0);
    return v5;
  }
  return result;
}

uint64_t sub_23AAED004()
{
  return 3;
}

void sub_23AAED00C()
{
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_23B1C7088())
      sub_23AAF8534(MEMORY[0x24BEE4AF8]);
  }
}

unint64_t sub_23AAED050()
{
  return sub_23AAF7E68(MEMORY[0x24BEE4AF8], &qword_2569E1C78);
}

uint64_t sub_23AAED074()
{
  uint64_t v0;
  uint64_t v1;
  fp_task_tracker *v2;
  uint64_t result;

  type metadata accessor for TaskTracker();
  v0 = swift_allocObject();
  v1 = sub_23B1C6458();
  v2 = fp_task_tracker_create((const char *)(v1 + 32));
  result = swift_release();
  if (v2)
  {
    *(_QWORD *)(v0 + 16) = v2;
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_23AAED0F4@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 41) = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_23AAED108@<X0>(_QWORD *a1@<X8>)
{
  type metadata accessor for VFSCounters(0);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  return sub_23B1C5BB8();
}

uint64_t sub_23AAED140()
{
  return 1;
}

unint64_t sub_23AAED148()
{
  return sub_23AAF80B4(MEMORY[0x24BEE4AF8], &qword_2569E1C70);
}

void sub_23AAED16C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23AAED174(uint64_t a1, uint64_t a2)
{
  return sub_23AAEEB2C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

void sub_23AAED18C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23AAED194()
{
  return sub_23B1C6DDC();
}

uint64_t sub_23AAED1AC(uint64_t a1, uint64_t a2)
{
  return sub_23AAEEA14(a1, a2, MEMORY[0x24BDCDCA0]);
}

uint64_t sub_23AAED1C4()
{
  sub_23AA7E38C((unint64_t *)&unk_2542E1E50, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CB930);
  return sub_23B1C7430();
}

uint64_t sub_23AAED204()
{
  sub_23AA7E38C((unint64_t *)&unk_2542E1E50, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CB930);
  return sub_23B1C7424();
}

uint64_t sub_23AAED248()
{
  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  return sub_23B1C5810();
}

uint64_t sub_23AAED288@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23AAED290(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23B1C5ABC();
  *a2 = 0;
  return result;
}

uint64_t sub_23AAED31C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23B1C5AC8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23AAED3B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = sub_23B1C5AD4();
  v4 = v3;
  v5 = sub_23B1C5AA4();
  result = sub_23AAAE53C(v2, v4);
  *a1 = v5;
  return result;
}

uint64_t sub_23AAED404@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23B1C5AD4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_23AAED430(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_23AAED438@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_23AAED44C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_23AAED460@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23AAED474(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_23AAED4A4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_23AAED4D0@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_23AAED4F4(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_23AAED508(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_23AAED51C(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_23AAED530@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23AAED544(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23AAED558(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23AAED56C(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23AAED580()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_23AAED590(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_23AAED5A4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_23AAED5B4(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_DWORD *sub_23AAED5C0@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_23AAED5CC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_23AAED5E0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23AAED5EC()
{
  sub_23AA7E38C(&qword_2569E2048, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CD4C4);
  return sub_23B1C7430();
}

uint64_t sub_23AAED62C()
{
  sub_23AA7E38C(&qword_2569E2048, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CD4C4);
  return sub_23B1C7424();
}

uint64_t sub_23AAED66C()
{
  sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
  return sub_23B1C5810();
}

BOOL sub_23AAED6AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unsigned __int8 *sub_23AAED6C0@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23AAED6D0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_QWORD *sub_23AAED6DC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_23AAED6F0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_23AAED704@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23AAED718(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23AAED748@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23AAED774@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_23AAED798(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_23AAED7AC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_23AAED7C0(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_23AAED7D4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23AAED7E8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23AAED7FC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23AAED810(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23AAED824()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_23AAED834(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_23AAED84C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v0 = sub_23B1C5AD4();
  v2 = v1;
  v3 = sub_23B1C5AD4();
  v5 = v4;
  sub_23AAAE6AC(v0, v2);
  v7 = v6;
  sub_23AAAE53C(v3, v5);
  sub_23AAAE53C(v0, v2);
  return v7 & 1;
}

uint64_t sub_23AAED8CC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23B1C63C8();
  *a2 = 0;
  return result;
}

uint64_t sub_23AAED940(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23B1C63D4();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23AAED9BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23B1C63E0();
  v2 = sub_23B1C63BC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

id sub_23AAED9FC()
{
  id *v0;

  return *v0;
}

uint64_t sub_23AAEDA08()
{
  return sub_23B1C74B4();
}

uint64_t sub_23AAEDA34()
{
  sub_23B1C74A8();
  sub_23B1C74B4();
  return sub_23B1C74E4();
}

uint64_t sub_23AAEDA78()
{
  sub_23B1C74A8();
  sub_23B1C74B4();
  return sub_23B1C74E4();
}

uint64_t sub_23AAEDAB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_23AFD7BC8(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_23AAEDAF4()
{
  return sub_23B1C63E0();
}

uint64_t sub_23AAEDB04()
{
  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  return sub_23B1C5858();
}

uint64_t sub_23AAEDB44()
{
  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  return sub_23B1C5828();
}

uint64_t sub_23AAEDB84(void *a1)
{
  id v2;

  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  v2 = a1;
  return sub_23B1C581C();
}

uint64_t sub_23AAEDBE8()
{
  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  return sub_23B1C584C();
}

uint64_t sub_23AAEDC3C()
{
  sub_23AA7E38C(&qword_2569E19C0, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_23B1CC19C);
  sub_23AA7E38C(&qword_2569E19C8, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_23B1CC144);
  return sub_23B1C710C();
}

uint64_t sub_23AAEDCC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23B1C63E0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23AAEDCE8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_23AFD7C10(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_23AAEDD24()
{
  sub_23AA7E38C(&qword_2569E20D8, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_23B1CCF18);
  sub_23AA7E38C(&qword_2569E20E0, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_23B1CCEB8);
  return sub_23B1C710C();
}

uint64_t sub_23AAEDDA8()
{
  sub_23AA7E38C(&qword_2569E19D0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderPage, (uint64_t)&unk_23B1CC054);
  sub_23AA7E38C(&qword_2569E19D8, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderPage, (uint64_t)&unk_23B1CBFF4);
  sub_23AAF9FD4();
  return sub_23B1C710C();
}

uint64_t sub_23AAEDE30()
{
  return sub_23B1C63E0();
}

uint64_t sub_23AAEDE40()
{
  sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
  return sub_23B1C5858();
}

uint64_t sub_23AAEDE80()
{
  sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
  return sub_23B1C5828();
}

uint64_t sub_23AAEDEC0(void *a1)
{
  id v2;

  sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
  v2 = a1;
  return sub_23B1C581C();
}

uint64_t sub_23AAEDF24()
{
  sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
  return sub_23B1C584C();
}

_QWORD *sub_23AAEDF74@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_23AAEDF84(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_23AAEDF90(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23AAEDFA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = sub_23B1C5AA4();
  result = sub_23AAAE53C(v3, v4);
  *a2 = v5;
  return result;
}

uint64_t sub_23AAEDFEC()
{
  return sub_23B1C63E0();
}

uint64_t sub_23AAEDFFC()
{
  sub_23AA7E38C(&qword_2569E2008, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE184);
  return sub_23B1C5858();
}

uint64_t sub_23AAEE03C()
{
  sub_23AA7E38C(&qword_2569E2008, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE184);
  return sub_23B1C5828();
}

uint64_t sub_23AAEE07C(void *a1)
{
  id v2;

  sub_23AA7E38C(&qword_2569E2008, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE184);
  v2 = a1;
  return sub_23B1C581C();
}

uint64_t sub_23AAEE0E0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_23B1C6C68();

  return v2;
}

uint64_t sub_23AAEE114()
{
  sub_23AA7E38C(&qword_2569E2008, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE184);
  return sub_23B1C584C();
}

uint64_t sub_23AAEE164()
{
  sub_23B1C74A8();
  sub_23B1C62D8();
  return sub_23B1C74E4();
}

uint64_t sub_23AAEE1C0()
{
  sub_23AA7E38C(&qword_2542E7530, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_23B1CC88C);
  sub_23AA7E38C((unint64_t *)&unk_2569E1A30, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_23B1CAD88);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE244()
{
  sub_23AA7E38C(&qword_2569E1A18, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderSyncAnchor, (uint64_t)&unk_23B1CB080);
  sub_23AA7E38C((unint64_t *)&unk_2569E1A20, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderSyncAnchor, (uint64_t)&unk_23B1CB020);
  sub_23AAF9FD4();
  return sub_23B1C710C();
}

uint64_t sub_23AAEE2CC()
{
  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  return sub_23B1C5834();
}

uint64_t sub_23AAEE324()
{
  sub_23AA7E38C(&qword_2569E20C8, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_23B1CD0C0);
  sub_23AA7E38C(&qword_2569E20D0, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_23B1CD068);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE3A8()
{
  sub_23AA7E38C(&qword_2569E2098, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDomainIdentifier, (uint64_t)&unk_23B1CD884);
  sub_23AA7E38C(&qword_2569E20A0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDomainIdentifier, (uint64_t)&unk_23B1CD824);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE42C()
{
  sub_23AA7E38C((unint64_t *)&unk_2542E1F50, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23B1CB368);
  sub_23AA7E38C(&qword_2569E1A10, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23B1CB308);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE4B0()
{
  sub_23AA7E38C(&qword_2569E2088, (uint64_t (*)(uint64_t))type metadata accessor for FPPreflightAction, (uint64_t)&unk_23B1CDD74);
  sub_23AA7E38C(&qword_2569E2090, (uint64_t (*)(uint64_t))type metadata accessor for FPPreflightAction, (uint64_t)&unk_23B1CDD1C);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE534(uint64_t a1, uint64_t a2)
{
  return sub_23AAEEA14(a1, a2, MEMORY[0x24BDCDDB0]);
}

uint64_t sub_23AAEE548()
{
  sub_23AA7E38C(&qword_2569E19B0, (uint64_t (*)(uint64_t))type metadata accessor for FileOperationKind, (uint64_t)&unk_23B1CC490);
  sub_23AA7E38C(&qword_2569E19B8, (uint64_t (*)(uint64_t))type metadata accessor for FileOperationKind, (uint64_t)&unk_23B1CC430);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE5CC()
{
  sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
  return sub_23B1C5834();
}

uint64_t sub_23AAEE624()
{
  sub_23AA7E38C(&qword_2569E3260, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23B1CE3BC);
  sub_23AA7E38C(&qword_2569E20C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23B1CD1B0);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE6A8()
{
  sub_23AA7E38C(&qword_2569E2078, (uint64_t (*)(uint64_t))type metadata accessor for FPDiagnosticAttributeKey, (uint64_t)&unk_23B1CE08C);
  sub_23AA7E38C(&qword_2569E2080, (uint64_t (*)(uint64_t))type metadata accessor for FPDiagnosticAttributeKey, (uint64_t)&unk_23B1CDFEC);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE72C()
{
  sub_23AA7E38C(&qword_2569E19F8, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemDecorationIdentifier, (uint64_t)&unk_23B1CB7B8);
  sub_23AA7E38C((unint64_t *)&unk_2569E1A00, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemDecorationIdentifier, (uint64_t)&unk_23B1CB758);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE7B0()
{
  sub_23AA7E38C(&qword_2569E19E8, (uint64_t (*)(uint64_t))type metadata accessor for SWCollaborationIdentifier, (uint64_t)&unk_23B1CBB9C);
  sub_23AA7E38C(&qword_2569E19F0, (uint64_t (*)(uint64_t))type metadata accessor for SWCollaborationIdentifier, (uint64_t)&unk_23B1CBB3C);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23B1C63BC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23AAEE878()
{
  sub_23AA7E38C(&qword_2569E20A8, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_23B1CE104);
  sub_23AA7E38C((unint64_t *)&unk_2569E20B0, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_23B1CD6D4);
  return sub_23B1C710C();
}

uint64_t sub_23AAEE8FC()
{
  sub_23AA7E38C(&qword_2569E2010, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE2D8);
  return sub_23B1C7430();
}

uint64_t sub_23AAEE93C()
{
  sub_23AA7E38C(&qword_2569E2010, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE2D8);
  return sub_23B1C7424();
}

uint64_t sub_23AAEE97C()
{
  sub_23AA7E38C(&qword_2569E2008, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE184);
  return sub_23B1C5810();
}

uint64_t sub_23AAEE9BC()
{
  sub_23AA7E38C(&qword_2569E2008, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE184);
  return sub_23B1C5834();
}

uint64_t sub_23AAEEA14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = sub_23B1C5AD4();
  v6 = v5;
  v7 = a3();
  sub_23AAAE53C(v4, v6);
  return v7;
}

uint64_t sub_23AAEEA60()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = sub_23B1C5AD4();
  v2 = v1;
  sub_23B1C5AEC();
  return sub_23AAAE53C(v0, v2);
}

uint64_t sub_23AAEEAAC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_23B1C5AD4();
  v2 = v1;
  sub_23B1C74A8();
  sub_23B1C5AEC();
  v3 = sub_23B1C74E4();
  sub_23AAAE53C(v0, v2);
  return v3;
}

uint64_t sub_23AAEEB20(uint64_t a1, uint64_t a2)
{
  return sub_23AAEEB2C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23AAEEB2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23B1C63E0();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23AAEEB68()
{
  sub_23B1C63E0();
  sub_23B1C64A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AAEEBA8()
{
  uint64_t v0;

  sub_23B1C63E0();
  sub_23B1C74A8();
  sub_23B1C64A0();
  v0 = sub_23B1C74E4();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_23AAEEC18(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (void **)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_QWORD *)a4;
  v14 = *(_BYTE *)(a4 + 8);
  sub_23AA8EFC8(a1, (uint64_t)v12, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = *v12;
    v16 = 1;
  }
  else
  {
    sub_23AA724E8((uint64_t)v12, (uint64_t)v9, &qword_2542E72C0);
    sub_23AACE0F8((uint64_t)v9, v13, v14);
    v15 = v17;
    v16 = v18 & 1;
    sub_23AA8A05C((uint64_t)v9, &qword_2542E72C0);
  }
  a2(v15, v16);
  sub_23AAFCD98(v15, v16);
}

void sub_23AAEED68(void **a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23AAD0CBC(*a1, a2, a3, a4, a5);
}

void sub_23AAEED80(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23AAD21E0(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), a2, a3, a4, a5);
}

uint64_t sub_23AAEEDB0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  v5 = swift_checkMetadataState();
  if ((v4(v5, AssociatedConformanceWitness) & 1) != 0)
    return 0;
  if (a2 <= 6u)
    return (0x23u >> a2) & 1;
  return 1;
}

void sub_23AAEEE70(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void **v5;
  unsigned __int8 *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(void **__return_ptr, void **);
  id v11;
  unsigned __int8 v12;
  void *v13;
  char v14;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  void *v18;

  if (*(_BYTE *)(v2 + 42) != 1 || (a2 & 1) != 0)
  {
    *(_BYTE *)(v2 + 42) = 1;
    v5 = (void **)(v2 + 32);
    swift_beginAccess();
    v6 = (unsigned __int8 *)(v2 + 40);
    v7 = (char *)(v2 + 41);
    if (*(_BYTE *)(v2 + 41) == 1)
    {
      v8 = *v5;
      v9 = *v6;
      v18 = v8;
      v10 = *(void (**)(void **__return_ptr, void **))(**(_QWORD **)(a1 + 16) + 152);
      v11 = v8;
      v10(&v16, &v18);
      sub_23AA862DC(v8, v9, 1);
      if (!v3)
      {
        v12 = v17;
        if (v17 != 255)
        {
          v13 = *v5;
          v14 = *v7;
          *v5 = v16;
          v15 = *v6;
          *v6 = v12;
          *v7 = 0;
          sub_23AA862DC(v13, v15, v14);
        }
      }
    }
  }
  else
  {
    swift_beginAccess();
  }
}

unint64_t sub_23AAEEFA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E90);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1A50);
    v7 = (_QWORD *)sub_23B1C70AC();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_23AA8EFC8(v9, (uint64_t)v5, &qword_2542E1E90);
      v11 = *v5;
      result = sub_23AAB567C(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
      result = sub_23AA724E8(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, &qword_2542E6A10);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23AAEF10C(uint64_t a1, int a2, int a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *), uint64_t a9, unint64_t a10)
{
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  BOOL v46;
  char *v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  unint64_t result;
  uint64_t v88;
  uint64_t v89;
  os_log_t v90;
  unint64_t v91;
  int v92;
  void *v93;
  uint64_t v94;
  _QWORD *v95;
  void (*v96)(uint64_t *);
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[4];

  v102 = a7;
  v103 = a6;
  v93 = a5;
  v92 = a3;
  v101 = a2;
  v14 = a9;
  v13 = a10;
  v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v94);
  v95 = (uint64_t *)((char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v104 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v88 - v20;
  v22 = (_QWORD *)swift_allocObject();
  v96 = a8;
  v22[2] = a8;
  v22[3] = a9;
  v22[4] = a10;
  swift_retain();
  sub_23AA93780(a10);
  v23 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a4);
  sub_23AA93780(a4);
  swift_retain();
  v24 = sub_23B1C5E40();
  v25 = sub_23B1C6A94();
  if (os_log_type_enabled(v24, v25))
  {
    v90 = v24;
    v91 = a4;
    v97 = v16;
    v98 = a9;
    v99 = a10;
    v100 = v22;
    v26 = swift_slowAlloc();
    v89 = swift_slowAlloc();
    v107[0] = v89;
    *(_DWORD *)v26 = 136315906;
    swift_beginAccess();
    v27 = *(void **)(a1 + 32);
    v28 = *(unsigned __int8 *)(a1 + 40);
    v29 = *(_BYTE *)(a1 + 41);
    v88 = v17;
    if ((v29 & 1) != 0)
    {
      v30 = v27;
      v31 = sub_23AA7B734();
      v33 = v32;
      sub_23AA862DC(v27, v28, 1);
    }
    else
    {
      v31 = sub_23AA96F18((uint64_t)v27, v28);
      v33 = v37;
    }
    v106 = sub_23AABEC68(v31, v33, v107);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    a4 = v91;
    if ((_BYTE)v101)
    {
      if (v101 == 1)
        v38 = 0x74616761706F7270;
      else
        v38 = 0xD000000000000010;
      if (v101 == 1)
        v39 = 0xED000053466F5465;
      else
        v39 = 0x800000023B1F7040;
    }
    else
    {
      v38 = 0xD000000000000013;
      v39 = 0x800000023B1F7010;
    }
    v106 = sub_23AABEC68(v38, v39, v107);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    sub_23AE5BC48(a4);
    v41 = v40;
    v43 = v42;
    sub_23AAB47B0(a4);
    v106 = sub_23AABEC68(v41, v43, v107);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a4);
    *(_WORD *)(v26 + 32) = 2048;
    v36 = v103;
    v106 = v103;
    sub_23B1C6CBC();
    v44 = v90;
    _os_log_impl(&dword_23AA66000, v90, v25, "Lookup itemID %s with behavior %s request %s iteration %ld", (uint8_t *)v26, 0x2Au);
    v45 = v89;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v45, -1, -1);
    MEMORY[0x23B8614BC](v26, -1, -1);

    v35 = *(void (**)(char *, uint64_t))(v88 + 8);
    v16 = v97;
    v35(v21, v97);
    v13 = v99;
    v22 = v100;
    v14 = v98;
    v34 = v102;
  }
  else
  {
    v34 = v102;
    sub_23AAB47B0(a4);
    swift_release();
    sub_23AAB47B0(a4);

    v35 = *(void (**)(char *, uint64_t))(v17 + 8);
    v35(v21, v16);
    v36 = v103;
  }
  v46 = v36 < 51;
  v47 = v104;
  if (v46)
  {
    swift_beginAccess();
    v58 = *(void **)(a1 + 32);
    v59 = *(unsigned __int8 *)(a1 + 40);
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v60 = qword_2542E1FE0;
      v61 = v58;
      v62 = v34;
      if (v60 != -1)
        swift_once();
      v63 = sub_23B1C63E0();
      v65 = v64;
      if (v63 == sub_23B1C63E0() && v65 == v66)
      {
        swift_bridgeObjectRelease_n();
        sub_23AA862DC(v58, v59, 1);
LABEL_28:
        sub_23AA6A4E4(a4, (uint64_t)sub_23AAFC1C8, (uint64_t)v22);
        return swift_release();
      }
      v67 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v58, v59, 1);
      if ((v67 & 1) != 0)
        goto LABEL_28;
    }
    else
    {
      v62 = v34;
      if (!v58 && (_DWORD)v59 == 2)
        goto LABEL_28;
    }
    if (((a4 >> 1) & 3 | (a4 >> 58) & 0x3C) == 0x1E)
    {
      v68 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      v69 = v68;
    }
    else
    {
      v79 = swift_allocObject();
      *(_QWORD *)(v79 + 16) = a4;
      v69 = v79 | 0x7000000000000004;
      v68 = a4;
    }
    sub_23AA93780(v68);
    v80 = swift_allocObject();
    *(_QWORD *)(v80 + 16) = sub_23AAFC1C8;
    *(_QWORD *)(v80 + 24) = v22;
    *(_QWORD *)(v80 + 32) = v62;
    *(_BYTE *)(v80 + 40) = v101;
    *(_QWORD *)(v80 + 48) = a4;
    *(_QWORD *)(v80 + 56) = a1;
    v81 = v92 & 1;
    *(_BYTE *)(v80 + 64) = v92 & 1;
    v82 = v93;
    v83 = v103;
    *(_QWORD *)(v80 + 72) = v93;
    *(_QWORD *)(v80 + 80) = v83;
    v84 = swift_allocObject();
    *(_QWORD *)(v84 + 16) = a1;
    *(_QWORD *)(v84 + 24) = v62;
    *(_BYTE *)(v84 + 32) = v81;
    *(_BYTE *)(v84 + 33) = 0;
    *(_QWORD *)(v84 + 40) = sub_23AAFC1FC;
    *(_QWORD *)(v84 + 48) = v80;
    *(_QWORD *)(v84 + 56) = v69;
    v85 = swift_allocObject();
    *(_QWORD *)(v85 + 16) = sub_23AAFC1FC;
    *(_QWORD *)(v85 + 24) = v80;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(a4);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v86 = v82;
    sub_23AA93780(v69);
    sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AAFC20C, v85, (uint64_t)sub_23AABA3C4, v84);
    swift_release();
    swift_release();
    swift_release();
    sub_23AAB47B0(v69);
    return swift_release();
  }
  v48 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a4);
  sub_23AA93780(a4);
  swift_retain();
  v49 = sub_23B1C5E40();
  v50 = sub_23B1C6AAC();
  if (os_log_type_enabled(v49, v50))
  {
    v97 = v16;
    v98 = v14;
    v99 = v13;
    v100 = v22;
    v51 = swift_slowAlloc();
    v103 = swift_slowAlloc();
    v106 = v103;
    *(_DWORD *)v51 = 136446466;
    swift_beginAccess();
    v52 = *(void **)(a1 + 32);
    v53 = *(unsigned __int8 *)(a1 + 40);
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v54 = v52;
      v55 = sub_23AA7B734();
      v57 = v56;
      sub_23AA862DC(v52, v53, 1);
    }
    else
    {
      v55 = sub_23AA96F18(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      v57 = v70;
    }
    v105 = sub_23AABEC68(v55, v57, &v106);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2082;
    sub_23AE5BC48(a4);
    v72 = v71;
    v74 = v73;
    sub_23AAB47B0(a4);
    v105 = sub_23AABEC68(v72, v74, &v106);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a4);
    _os_log_impl(&dword_23AA66000, v49, v50, "Recursion too deep for lookup of itemID %{public}s request %{public}s", (uint8_t *)v51, 0x16u);
    v75 = v103;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v75, -1, -1);
    MEMORY[0x23B8614BC](v51, -1, -1);

    v35(v104, v97);
    v13 = v99;
    v14 = v98;
  }
  else
  {
    sub_23AAB47B0(a4);
    swift_release();
    sub_23AAB47B0(a4);

    v35(v47, v16);
  }
  v76 = (void *)sub_23B1C63BC();
  v77 = (id)FPInvalidParameterError();

  if (v77)
  {
    v78 = (uint64_t)v95;
    *v95 = v77;
    swift_storeEnumTagMultiPayload();
    sub_23AAE54C4(v78, v96, v14, v13);
    sub_23AA8A05C(v78, (uint64_t *)&unk_2542E2190);
    return swift_release();
  }
  swift_release();
  result = sub_23AAB47B0(v13);
  __break(1u);
  return result;
}

uint64_t sub_23AAEFADC(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t result;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v59 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v59 - v16;
  v18 = sub_23B1C5E4C();
  v61 = *(_QWORD *)(v18 - 8);
  v62 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v59 - v24;
  if (*(_BYTE *)(a1 + *(int *)(v9 + 56)) == 1)
  {
    v26 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA8EFC8(a1, (uint64_t)v17, &qword_2542E0F70);
    sub_23AA93780(a3);
    sub_23AA93780(a3);
    v27 = sub_23B1C5E40();
    v28 = sub_23B1C6A94();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v60 = swift_slowAlloc();
      v64 = v60;
      *(_DWORD *)v29 = 136315394;
      sub_23AA907B0((uint64_t)v17, (uint64_t)v8, type metadata accessor for VFSItem);
      sub_23AA8A05C((uint64_t)v17, &qword_2542E0F70);
      v30 = sub_23AC3E1F8();
      v32 = v31;
      sub_23AA937BC((uint64_t)v8, type metadata accessor for VFSItem);
      v63 = sub_23AABEC68(v30, v32, &v64);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      sub_23AE5BC48(a3);
      v34 = v33;
      v36 = v35;
      sub_23AAB47B0(a3);
      v63 = sub_23AABEC68(v34, v36, &v64);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AAB47B0(a3);
      _os_log_impl(&dword_23AA66000, v27, v28, "Found item on disk, but item is not accessible yet %s, request %s", (uint8_t *)v29, 0x16u);
      v37 = v60;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v37, -1, -1);
      MEMORY[0x23B8614BC](v29, -1, -1);
    }
    else
    {
      sub_23AAB47B0(a3);
      sub_23AA8A05C((uint64_t)v17, &qword_2542E0F70);
      sub_23AAB47B0(a3);
    }

    (*(void (**)(char *, uint64_t))(v61 + 8))(v25, v62);
    return 0;
  }
  v38 = v23;
  sub_23AA8EFC8(a1, (uint64_t)v15, &qword_2542E0F70);
  if ((a2 & 1) != 0)
  {
    v39 = *(void **)&v15[*(int *)(v9 + 52)];
    v40 = v39;
    sub_23AA8A05C((uint64_t)v15, &qword_2542E0F70);
    if (!v39)
    {
      v46 = (id)fpfs_current_or_default_log();
      v47 = v38;
      sub_23B1C5E58();
      sub_23AA8EFC8(a1, (uint64_t)v12, &qword_2542E0F70);
      sub_23AA93780(a3);
      sub_23AA93780(a3);
      v48 = sub_23B1C5E40();
      v49 = sub_23B1C6A94();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc();
        v60 = swift_slowAlloc();
        v64 = v60;
        *(_DWORD *)v50 = 136315394;
        sub_23AA907B0((uint64_t)v12, (uint64_t)v8, type metadata accessor for VFSItem);
        sub_23AA8A05C((uint64_t)v12, &qword_2542E0F70);
        v51 = sub_23AC3E1F8();
        v53 = v52;
        sub_23AA937BC((uint64_t)v8, type metadata accessor for VFSItem);
        v63 = sub_23AABEC68(v51, v53, &v64);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 12) = 2080;
        sub_23AE5BC48(a3);
        v55 = v54;
        v57 = v56;
        sub_23AAB47B0(a3);
        v63 = sub_23AABEC68(v55, v57, &v64);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        sub_23AAB47B0(a3);
        _os_log_impl(&dword_23AA66000, v48, v49, "Found item on disk, but item is not reconciled yet %s, request %s", (uint8_t *)v50, 0x16u);
        v58 = v60;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v58, -1, -1);
        MEMORY[0x23B8614BC](v50, -1, -1);
      }
      else
      {
        sub_23AAB47B0(a3);
        sub_23AA8A05C((uint64_t)v12, &qword_2542E0F70);
        sub_23AAB47B0(a3);
      }

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v47, v62);
      return 0;
    }

  }
  else
  {
    sub_23AA8A05C((uint64_t)v15, &qword_2542E0F70);
  }
  result = 1;
  if (*(_BYTE *)(a1 + 8) == 2 && *(_QWORD *)a1 == 1)
  {
    v42 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v43 = sub_23B1C5E40();
    v44 = sub_23B1C6A94();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_23AA66000, v43, v44, "Found item on the trash, lookup the root to make sure it's materialized", v45, 2u);
      MEMORY[0x23B8614BC](v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v61 + 8))(v21, v62);
    return 0;
  }
  return result;
}

void sub_23AAF0164(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[9];
  uint64_t AssociatedTypeWitness;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v18 = a3;
  v17 = a2;
  v21 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15[7] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15[8] = (char *)v15 - v11;
  swift_getAssociatedTypeWitness();
  v12 = sub_23B1C6C98();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15[4] = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15[3] = (char *)v15 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a4;
  v20 = a6;
  v22 = a4;
  v23 = a5;
  v15[5] = a5;
  v15[6] = a7;
  v24 = a6;
  v25 = a7;
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAF02A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _BYTE *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t, uint64_t);
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t);
  int v49;
  id v50;
  uint64_t v51;
  _BYTE *v52;
  unint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t AssociatedConformanceWitness;
  char v69;
  id v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  _BYTE v76[96];

  *(_QWORD *)(v5 - 136) = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = &v76[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = &v76[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v76[-v13];
  v15 = sub_23B1C5E4C();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v22 = &v76[-v21];
  v23 = a1;
  v24 = *(int *)(a1 + 56);
  v25 = *(_QWORD *)(v5 - 144);
  LODWORD(v24) = *(unsigned __int8 *)(v25 + v24);
  *(_QWORD *)(v5 - 160) = v26;
  *(_QWORD *)(v5 - 152) = v18;
  if ((_DWORD)v24 == 1)
  {
    v27 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 136) + 16))(v14, v25, v23);
    v28 = *(_QWORD *)(v5 - 184);
    sub_23AA93780(v28);
    sub_23AA93780(v28);
    v29 = sub_23B1C5E40();
    v30 = sub_23B1C6A94();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      *(_QWORD *)(v5 - 144) = v33;
      *(_QWORD *)(v5 - 120) = v33;
      *(_DWORD *)v32 = 136315394;
      *(_QWORD *)(v5 - 200) = v32 + 4;
      v34 = *(_QWORD *)(v5 - 240);
      v35 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v34 + 16);
      *(_DWORD *)(v5 - 192) = v31;
      v36 = *(_QWORD *)(v5 - 248);
      v37 = *(_QWORD *)(v5 - 176);
      v35(v36, v14, v37);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 136) + 8))(v14, v23);
      v38 = sub_23B1C7304();
      v40 = v39;
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v37);
      *(_QWORD *)(v5 - 128) = sub_23AABEC68(v38, v40, (uint64_t *)(v5 - 120));
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      sub_23AF9E228();
    }
    sub_23AAB47B0(v28);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 136) + 8))(v14, v23);
    sub_23AAB47B0(v28);

    (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v5 - 160) + 8))(v22, *(_QWORD *)(v5 - 152));
  }
  else
  {
    v41 = v4;
    *(_QWORD *)(v5 - 264) = v20;
    *(_QWORD *)(v5 - 272) = v9;
    *(_QWORD *)(v5 - 256) = v19;
    v42 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 136) + 16);
    v43 = v25;
    v44 = v25;
    v45 = v23;
    v42(v12, v44, v23);
    if ((*(_DWORD *)(v5 - 192) & 1) != 0)
    {
      v46 = v42;
      v47 = v3;
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v1 + 16))(v41, &v12[*(int *)(v45 + 52)], v3);
      v48 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 136) + 8);
      v48(v12, v45);
      v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v41, 1, v2);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v41, v47);
      if (v49 == 1)
      {
        v50 = (id)fpfs_current_or_default_log();
        v51 = *(_QWORD *)(v5 - 256);
        sub_23B1C5E58();
        v52 = *(_BYTE **)(v5 - 272);
        v46(v52, v43, v45);
        v53 = *(_QWORD *)(v5 - 184);
        sub_23AA93780(v53);
        sub_23AA93780(v53);
        v54 = sub_23B1C5E40();
        v55 = sub_23B1C6A94();
        v56 = v55;
        if (os_log_type_enabled(v54, v55))
        {
          v57 = swift_slowAlloc();
          *(_DWORD *)(v5 - 144) = v56;
          v58 = v57;
          v59 = swift_slowAlloc();
          *(_QWORD *)(v5 - 136) = v59;
          *(_QWORD *)(v5 - 120) = v59;
          *(_DWORD *)v58 = 136315394;
          *(_QWORD *)(v5 - 192) = v58 + 4;
          v60 = *(_QWORD *)(v5 - 248);
          v61 = *(_QWORD *)(v5 - 240);
          v62 = *(_QWORD *)(v5 - 176);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v61 + 16))(v60, v52, v62);
          v48(v52, v45);
          v63 = sub_23B1C7304();
          v65 = v64;
          (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
          *(_QWORD *)(v5 - 128) = sub_23AABEC68(v63, v65, (uint64_t *)(v5 - 120));
          sub_23B1C6CBC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v58 + 12) = 2080;
          sub_23AF9E228();
        }
        sub_23AAB47B0(v53);
        v48(v52, v45);
        sub_23AAB47B0(v53);

        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 160) + 8))(v51, *(_QWORD *)(v5 - 152));
        return 0;
      }
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 136) + 8))(v12, v23);
    }
    v66 = *(_QWORD *)(v5 - 208);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 168) + 64))(*(_QWORD *)(v5 - 176), *(_QWORD *)(v5 - 168));
    v67 = *(_QWORD *)(v5 - 200);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v69 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v67, AssociatedConformanceWitness);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 216) + 8))(v66, v67);
    if ((v69 & 1) == 0)
      return 1;
    v70 = (id)fpfs_current_or_default_log();
    v71 = *(_QWORD *)(v5 - 264);
    sub_23B1C5E58();
    v72 = sub_23B1C5E40();
    v73 = sub_23B1C6A94();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v74 = 0;
      _os_log_impl(&dword_23AA66000, v72, v73, "Found item on the trash, lookup the root to make sure it's materialized", v74, 2u);
      MEMORY[0x23B8614BC](v74, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 160) + 8))(v71, *(_QWORD *)(v5 - 152));
  }
  return 0;
}

unint64_t sub_23AAF0A08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20A0);
    v3 = (_QWORD *)sub_23B1C70AC();
    for (i = a1 + 32; ; i += 24)
    {
      sub_23AA8EFC8(i, (uint64_t)&v11, &qword_2569E1D68);
      v5 = v11;
      result = sub_23AAB567C(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      result = sub_23AABABF4((uint64_t)&v12, v3[7] + 16 * result);
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23AAF0B08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  _BYTE v14[48];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1A70);
  v3 = (_QWORD *)sub_23B1C70AC();
  sub_23AA724E8(a1 + 32, (uint64_t)v14, (uint64_t *)&unk_2542E05B0);
  v13 = *(_OWORD *)(a1 + 80);
  v4 = sub_23ACD6024((uint64_t)v14);
  if ((v5 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t)v3;
  }
  v6 = v4;
  v7 = a1 + 96;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    result = sub_23AA724E8((uint64_t)v14, v3[6] + 48 * v6, (uint64_t *)&unk_2542E05B0);
    *(_OWORD *)(v3[7] + 16 * v6) = v13;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23AA724E8(v7, (uint64_t)v14, (uint64_t *)&unk_2542E05B0);
    v13 = *(_OWORD *)(v7 + 48);
    v6 = sub_23ACD6024((uint64_t)v14);
    v7 += 64;
    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23AAF0C70(uint64_t a1)
{
  return sub_23AAB76F0(a1, &qword_2542E5488, (uint64_t *)&unk_2542DE7E0, &qword_2542E1568);
}

unint64_t sub_23AAF0C8C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1AA0);
    v3 = (_QWORD *)sub_23B1C70AC();
    for (i = (_BYTE *)(a1 + 56); ; i += 32)
    {
      v5 = *((_QWORD *)i - 3);
      v6 = *(i - 16);
      v7 = *((_QWORD *)i - 1);
      v8 = *i;
      result = sub_23AA97254(v5, v6);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v11 = v3[6] + 16 * result;
      *(_QWORD *)v11 = v5;
      *(_BYTE *)(v11 + 8) = v6;
      v12 = v3[7] + 16 * result;
      *(_QWORD *)v12 = v7;
      *(_BYTE *)(v12 + 8) = v8;
      v13 = v3[2];
      v14 = __OFADD__(v13, 1);
      v15 = v13 + 1;
      if (v14)
        goto LABEL_10;
      v3[2] = v15;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23AAF0D88(uint64_t a1, unint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v20;
  uint64_t v21;

  v20 = a2;
  v21 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F78);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v15, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v18 = *v15;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_23AA724E8((uint64_t)v15, (uint64_t)v12, &qword_2542E0F78);
    sub_23AAE5780((uint64_t)v12, v20, v18);
    sub_23AA8A05C((uint64_t)v12, &qword_2542E0F78);
  }
  sub_23B091D20((uint64_t)v18, a3, a4, a5, v21);
  return sub_23AA8A05C((uint64_t)v18, &qword_2542E21C0);
}

unint64_t sub_23AAF0F2C(uint64_t a1, int a2, int a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(char *), uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  NSObject *v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  os_log_t v46;
  _BYTE *v47;
  id v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  unint64_t result;
  _BYTE v96[12];
  int v97;
  os_log_t v98;
  uint64_t v99;
  int v100;
  void *v101;
  uint64_t v102;
  void (*v103)(char *);
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[4];

  v105 = a7;
  v114 = a6;
  v101 = a5;
  v116 = a4;
  v100 = a3;
  LODWORD(v111) = a2;
  v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v102);
  v104 = &v96[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_23B1C5E4C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v115 = &v96[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v96[-v19];
  v21 = (_QWORD *)swift_allocObject();
  v103 = a9;
  v21[2] = a9;
  v21[3] = a10;
  v21[4] = a11;
  v21[5] = a12;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = sub_23AAFCDE4;
  v22[3] = v21;
  v22[4] = a8;
  v106 = a10;
  swift_retain();
  v107 = a11;
  swift_retain();
  v108 = a12;
  swift_retain();
  swift_retain();
  v109 = a8;
  v23 = a8;
  v24 = v116;
  sub_23AA93780(v23);
  v25 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v24);
  sub_23AA93780(v24);
  swift_retain();
  v26 = sub_23B1C5E40();
  v27 = sub_23B1C6A94();
  v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
  v112 = v21;
  v113 = a1;
  if (v28)
  {
    v97 = v27;
    v98 = v26;
    v99 = v16;
    v110 = v22;
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v119[0] = v30;
    *(_DWORD *)v29 = 136315906;
    swift_beginAccess();
    v31 = *(void **)(a1 + 32);
    v32 = *(unsigned __int8 *)(a1 + 40);
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v33 = v31;
      v34 = sub_23AA7B734();
      v36 = v35;
      sub_23AA862DC(v31, v32, 1);
    }
    else
    {
      v34 = sub_23AA96F18(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      v36 = v39;
    }
    v118 = sub_23AABEC68(v34, v36, v119);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    if ((_BYTE)v111)
    {
      if (v111 == 1)
        v40 = 0x74616761706F7270;
      else
        v40 = 0xD000000000000010;
      if (v111 == 1)
        v41 = 0xED000053466F5465;
      else
        v41 = 0x800000023B1F7040;
    }
    else
    {
      v40 = 0xD000000000000013;
      v41 = 0x800000023B1F7010;
    }
    v118 = sub_23AABEC68(v40, v41, v119);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2080;
    v24 = v116;
    sub_23AE5BC48(v116);
    v43 = v42;
    v45 = v44;
    sub_23AAB47B0(v24);
    v118 = sub_23AABEC68(v43, v45, v119);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v24);
    *(_WORD *)(v29 + 32) = 2048;
    v38 = v114;
    v118 = v114;
    sub_23B1C6CBC();
    v46 = v98;
    _os_log_impl(&dword_23AA66000, v98, (os_log_type_t)v97, "Lookup itemID %s with behavior %s request %s iteration %ld", (uint8_t *)v29, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v30, -1, -1);
    MEMORY[0x23B8614BC](v29, -1, -1);

    v37 = *(void (**)(_BYTE *, uint64_t))(v99 + 8);
    v37(v20, v15);
    v22 = v110;
  }
  else
  {
    sub_23AAB47B0(v24);
    swift_release();
    sub_23AAB47B0(v24);

    v37 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
    v37(v20, v15);
    v38 = v114;
  }
  v47 = v115;
  if (v38 < 51)
  {
    v61 = v24;
    v62 = v113;
    swift_beginAccess();
    v63 = *(void **)(v62 + 32);
    v64 = *(unsigned __int8 *)(v62 + 40);
    if ((*(_BYTE *)(v62 + 41) & 1) != 0)
    {
      v65 = qword_2542E1FE0;
      v66 = v63;
      if (v65 != -1)
        swift_once();
      v67 = sub_23B1C63E0();
      v69 = v68;
      if (v67 == sub_23B1C63E0() && v69 == v70)
      {
        swift_bridgeObjectRelease_n();
        sub_23AA862DC(v63, v64, 1);
LABEL_28:
        sub_23AA6A4E4(v61, (uint64_t)sub_23AAFFF94, (uint64_t)v22);
LABEL_38:
        swift_release();
        return swift_release();
      }
      v71 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v63, v64, 1);
      if ((v71 & 1) != 0)
        goto LABEL_28;
    }
    else if (!v63 && (_DWORD)v64 == 2)
    {
      goto LABEL_28;
    }
    if (((v61 >> 1) & 3 | (v61 >> 58) & 0x3C) == 0x1E)
    {
      v72 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      v73 = v72;
    }
    else
    {
      v87 = swift_allocObject();
      *(_QWORD *)(v87 + 16) = v61;
      v73 = v87 | 0x7000000000000004;
      v72 = v61;
    }
    sub_23AA93780(v72);
    v88 = swift_allocObject();
    *(_QWORD *)(v88 + 16) = sub_23AAFFF94;
    *(_QWORD *)(v88 + 24) = v22;
    v89 = v105;
    *(_QWORD *)(v88 + 32) = v105;
    *(_BYTE *)(v88 + 40) = v111;
    *(_QWORD *)(v88 + 48) = v61;
    *(_QWORD *)(v88 + 56) = v62;
    v90 = v100 & 1;
    *(_BYTE *)(v88 + 64) = v100 & 1;
    v91 = v101;
    *(_QWORD *)(v88 + 72) = v101;
    *(_QWORD *)(v88 + 80) = v38;
    v92 = swift_allocObject();
    *(_QWORD *)(v92 + 16) = v62;
    *(_QWORD *)(v92 + 24) = v89;
    *(_BYTE *)(v92 + 32) = v90;
    *(_BYTE *)(v92 + 33) = 0;
    *(_QWORD *)(v92 + 40) = sub_23AAFC1FC;
    *(_QWORD *)(v92 + 48) = v88;
    *(_QWORD *)(v92 + 56) = v73;
    v93 = swift_allocObject();
    *(_QWORD *)(v93 + 16) = sub_23AAFC1FC;
    *(_QWORD *)(v93 + 24) = v88;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(v61);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v94 = v91;
    sub_23AA93780(v73);
    sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v93, (uint64_t)sub_23AABA3C4, v92);
    swift_release();
    swift_release();
    swift_release();
    sub_23AAB47B0(v73);
    goto LABEL_38;
  }
  v48 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v24);
  sub_23AA93780(v24);
  v49 = v113;
  swift_retain();
  v50 = sub_23B1C5E40();
  v51 = sub_23B1C6AAC();
  if (os_log_type_enabled(v50, v51))
  {
    v114 = v15;
    v110 = v22;
    v52 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v118 = v53;
    *(_DWORD *)v52 = 136446466;
    swift_beginAccess();
    v54 = *(void **)(v49 + 32);
    v55 = *(unsigned __int8 *)(v49 + 40);
    v56 = *(_BYTE *)(v49 + 41);
    v111 = v53;
    if ((v56 & 1) != 0)
    {
      v57 = v54;
      v58 = sub_23AA7B734();
      v60 = v59;
      sub_23AA862DC(v54, v55, 1);
    }
    else
    {
      v58 = sub_23AA96F18((uint64_t)v54, v55);
      v60 = v74;
    }
    v117 = sub_23AABEC68(v58, v60, &v118);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2082;
    v75 = v116;
    sub_23AE5BC48(v116);
    v77 = v76;
    v79 = v78;
    sub_23AAB47B0(v75);
    v117 = sub_23AABEC68(v77, v79, &v118);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v75);
    _os_log_impl(&dword_23AA66000, v50, v51, "Recursion too deep for lookup of itemID %{public}s request %{public}s", (uint8_t *)v52, 0x16u);
    v80 = v111;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v80, -1, -1);
    MEMORY[0x23B8614BC](v52, -1, -1);

    v37(v115, v114);
  }
  else
  {
    sub_23AAB47B0(v24);
    swift_release();
    sub_23AAB47B0(v24);

    v37(v47, v15);
  }
  v81 = (void *)sub_23B1C63BC();
  v82 = (id)FPInvalidParameterError();

  if (v82)
  {
    v83 = (uint64_t)v104;
    *v104 = v82;
    swift_storeEnumTagMultiPayload();
    v84 = v106;
    swift_retain();
    v85 = v107;
    swift_retain();
    v86 = v108;
    swift_retain();
    sub_23AAF0D88(v83, v109, v103, v84, v85, v86);
    swift_release();
    swift_release();
    swift_release();
    sub_23AA8A05C(v83, (uint64_t *)&unk_2542E2190);
    goto LABEL_38;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = sub_23AAB47B0(v109);
  __break(1u);
  return result;
}

uint64_t sub_23AAF19D4(uint64_t a1, int a2, int a3, unint64_t a4, void *a5, void (*a6)(char *, uint64_t), uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, unsigned __int8 a10, uint64_t a11, unint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, void *a16)
{
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  BOOL v53;
  char *v54;
  id v55;
  unint64_t v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  os_log_type_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  void *v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t result;
  uint64_t v104;
  char *v105;
  int v106;
  void *v107;
  uint64_t v108;
  _QWORD *v109;
  int v110;
  int v111;
  uint64_t (*v112)(uint64_t);
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  char *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  void (*v129)(_QWORD, _QWORD);
  uint64_t v130[4];

  v114 = a7;
  v124 = a6;
  v107 = a5;
  v127 = a4;
  v106 = a3;
  v120 = a2;
  v122 = a1;
  v18 = a12;
  v17 = a13;
  v19 = a15;
  v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v108);
  v109 = (uint64_t *)((char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126 = sub_23B1C5E4C();
  v123 = *(_QWORD *)(v126 - 8);
  v21 = MEMORY[0x24BDAC7A8](v126);
  v125 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v104 - v23;
  v25 = swift_allocObject();
  v112 = a8;
  *(_QWORD *)(v25 + 16) = a8;
  *(_QWORD *)(v25 + 24) = a9;
  v110 = a10;
  *(_BYTE *)(v25 + 32) = a10;
  *(_QWORD *)(v25 + 40) = a11;
  *(_QWORD *)(v25 + 48) = a12;
  *(_QWORD *)(v25 + 56) = a13;
  v111 = a14;
  *(_BYTE *)(v25 + 64) = a14;
  v26 = v122;
  *(_QWORD *)(v25 + 72) = a15;
  *(_QWORD *)(v25 + 80) = a16;
  v121 = v25;
  swift_retain();
  v115 = a11;
  v27 = v127;
  swift_retain();
  sub_23AA93780(a12);
  swift_retain();
  swift_retain();
  v28 = a16;
  v29 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v27);
  sub_23AA93780(v27);
  swift_retain();
  v30 = sub_23B1C5E40();
  v31 = sub_23B1C6A94();
  if (os_log_type_enabled(v30, v31))
  {
    v105 = v24;
    v113 = v28;
    v116 = a9;
    v117 = a15;
    v118 = a12;
    v119 = a13;
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v130[0] = v33;
    *(_DWORD *)v32 = 136315906;
    swift_beginAccess();
    v34 = *(void **)(v26 + 32);
    v35 = *(unsigned __int8 *)(v26 + 40);
    if ((*(_BYTE *)(v26 + 41) & 1) != 0)
    {
      v36 = v34;
      v37 = sub_23AA7B734();
      v39 = v38;
      sub_23AA862DC(v34, v35, 1);
    }
    else
    {
      v37 = sub_23AA96F18(*(_QWORD *)(v26 + 32), *(_BYTE *)(v26 + 40));
      v39 = v45;
    }
    v129 = (void (*)(_QWORD, _QWORD))sub_23AABEC68(v37, v39, v130);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    if ((_BYTE)v120)
    {
      if (v120 == 1)
        v46 = 0x74616761706F7270;
      else
        v46 = 0xD000000000000010;
      if (v120 == 1)
        v47 = 0xED000053466F5465;
      else
        v47 = 0x800000023B1F7040;
    }
    else
    {
      v46 = 0xD000000000000013;
      v47 = 0x800000023B1F7010;
    }
    v129 = (void (*)(_QWORD, _QWORD))sub_23AABEC68(v46, v47, v130);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 22) = 2080;
    v48 = v127;
    sub_23AE5BC48(v127);
    v50 = v49;
    v52 = v51;
    sub_23AAB47B0(v48);
    v129 = (void (*)(_QWORD, _QWORD))sub_23AABEC68(v50, v52, v130);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v48);
    *(_WORD *)(v32 + 32) = 2048;
    v44 = (uint64_t)v124;
    v129 = (void (*)(_QWORD, _QWORD))v124;
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v30, v31, "Lookup itemID %s with behavior %s request %s iteration %ld", (uint8_t *)v32, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v33, -1, -1);
    MEMORY[0x23B8614BC](v32, -1, -1);

    v42 = *(void (**)(char *, uint64_t))(v123 + 8);
    v43 = v126;
    v42(v105, v126);
    v18 = v118;
    v17 = v119;
    v40 = v116;
    v19 = v117;
    v28 = v113;
  }
  else
  {
    v40 = a9;
    v41 = v127;
    sub_23AAB47B0(v127);
    swift_release();
    sub_23AAB47B0(v41);

    v42 = *(void (**)(char *, uint64_t))(v123 + 8);
    v43 = v126;
    v42(v24, v126);
    v44 = (uint64_t)v124;
  }
  v53 = v44 < 51;
  v54 = v125;
  if (v53)
  {
    swift_beginAccess();
    v67 = *(void **)(v26 + 32);
    v68 = *(unsigned __int8 *)(v26 + 40);
    if ((*(_BYTE *)(v26 + 41) & 1) != 0)
    {
      v69 = qword_2542E1FE0;
      v70 = v67;
      v71 = v121;
      v72 = v114;
      if (v69 != -1)
        swift_once();
      v73 = sub_23B1C63E0();
      v75 = v74;
      if (v73 == sub_23B1C63E0() && v75 == v76)
      {
        swift_bridgeObjectRelease_n();
        sub_23AA862DC(v67, v68, 1);
LABEL_28:
        sub_23AA6A4E4(v127, (uint64_t)sub_23AAFC7F0, v71);
        return swift_release();
      }
      v79 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v67, v68, 1);
      if ((v79 & 1) != 0)
        goto LABEL_28;
    }
    else
    {
      v71 = v121;
      v72 = v114;
      if (!v67 && (_DWORD)v68 == 2)
        goto LABEL_28;
    }
    if (((v127 >> 1) & 3 | (v127 >> 58) & 0x3C) == 0x1E)
    {
      v80 = *(_QWORD *)((v127 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      v81 = v80;
    }
    else
    {
      v93 = swift_allocObject();
      v94 = v127;
      *(_QWORD *)(v93 + 16) = v127;
      v81 = v93 | 0x7000000000000004;
      v80 = v94;
    }
    sub_23AA93780(v80);
    v95 = swift_allocObject();
    *(_QWORD *)(v95 + 16) = sub_23AAFC7F0;
    *(_QWORD *)(v95 + 24) = v71;
    *(_QWORD *)(v95 + 32) = v72;
    *(_BYTE *)(v95 + 40) = v120;
    v96 = v127;
    *(_QWORD *)(v95 + 48) = v127;
    *(_QWORD *)(v95 + 56) = v26;
    v97 = v106 & 1;
    *(_BYTE *)(v95 + 64) = v106 & 1;
    v98 = v107;
    v99 = v124;
    *(_QWORD *)(v95 + 72) = v107;
    *(_QWORD *)(v95 + 80) = v99;
    v100 = swift_allocObject();
    *(_QWORD *)(v100 + 16) = v26;
    *(_QWORD *)(v100 + 24) = v72;
    *(_BYTE *)(v100 + 32) = v97;
    *(_BYTE *)(v100 + 33) = 0;
    *(_QWORD *)(v100 + 40) = sub_23AAFC1FC;
    *(_QWORD *)(v100 + 48) = v95;
    *(_QWORD *)(v100 + 56) = v81;
    v101 = swift_allocObject();
    *(_QWORD *)(v101 + 16) = sub_23AAFC1FC;
    *(_QWORD *)(v101 + 24) = v95;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(v96);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v102 = v98;
    sub_23AA93780(v81);
    sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v101, (uint64_t)sub_23AABA3C4, v100);
    swift_release();
    swift_release();
    swift_release();
    sub_23AAB47B0(v81);
    return swift_release();
  }
  v55 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v56 = v127;
  sub_23AA93780(v127);
  sub_23AA93780(v56);
  swift_retain();
  v57 = sub_23B1C5E40();
  LODWORD(v124) = sub_23B1C6AAC();
  if (os_log_type_enabled(v57, (os_log_type_t)v124))
  {
    v113 = v28;
    v116 = v40;
    v117 = v19;
    v118 = v18;
    v119 = v17;
    v58 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    v129 = (void (*)(_QWORD, _QWORD))v59;
    *(_DWORD *)v58 = 136446466;
    swift_beginAccess();
    v60 = *(void **)(v26 + 32);
    v61 = *(unsigned __int8 *)(v26 + 40);
    v62 = *(_BYTE *)(v26 + 41);
    v123 = v59;
    if ((v62 & 1) != 0)
    {
      v63 = v60;
      v64 = sub_23AA7B734();
      v66 = v65;
      sub_23AA862DC(v60, v61, 1);
    }
    else
    {
      v64 = sub_23AA96F18((uint64_t)v60, v61);
      v66 = v82;
    }
    v83 = v124;
    v128 = sub_23AABEC68(v64, v66, (uint64_t *)&v129);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2082;
    v84 = v127;
    sub_23AE5BC48(v127);
    v86 = v85;
    v88 = v87;
    sub_23AAB47B0(v84);
    v128 = sub_23AABEC68(v86, v88, (uint64_t *)&v129);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v84);
    _os_log_impl(&dword_23AA66000, v57, v83, "Recursion too deep for lookup of itemID %{public}s request %{public}s", (uint8_t *)v58, 0x16u);
    v89 = v123;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v89, -1, -1);
    MEMORY[0x23B8614BC](v58, -1, -1);

    v42(v125, v126);
    v18 = v118;
    v17 = v119;
    v40 = v116;
    v78 = v117;
    v28 = v113;
  }
  else
  {
    v124 = v42;
    v77 = v127;
    sub_23AAB47B0(v127);
    swift_release();
    sub_23AAB47B0(v77);

    v124(v54, v43);
    v78 = v19;
  }
  v90 = (void *)sub_23B1C63BC();
  v91 = (id)FPInvalidParameterError();

  if (v91)
  {
    v92 = (uint64_t)v109;
    *v109 = v91;
    swift_storeEnumTagMultiPayload();
    sub_23AAE2714(v92, v112, v40, v110, v115, v18, v17, v111 & 1, v78, v28);
    sub_23AA8A05C(v92, (uint64_t *)&unk_2542E2190);
    return swift_release();
  }
  swift_release();
  swift_release();
  sub_23AAB47B0(v18);

  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

void sub_23AAF24A8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void (*a6)(_QWORD, void *), uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  int v31;
  int v32;
  _BYTE *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  void *v45;
  id v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_QWORD, void *);
  uint64_t v73;
  _QWORD aBlock[6];

  v68 = a5;
  v69 = a4;
  v70 = a3;
  v71 = a2;
  v10 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_23B1C5474();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v57 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C602C();
  v66 = *(_QWORD *)(v13 - 8);
  v67 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C60A4();
  v63 = *(_QWORD *)(v15 - 8);
  v64 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v62 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v17);
  v61 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for VFSItem(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v56 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v56 - v26;
  v28 = swift_allocObject();
  v29 = v28;
  *(_QWORD *)(v28 + 16) = a6;
  *(_QWORD *)(v28 + 24) = a7;
  v30 = (unsigned __int8 *)(a1 + *(int *)(v19 + 28));
  v31 = v30[v17[20]];
  v72 = a6;
  if (v31 == 1)
  {
    v56 = v28;
    v32 = *v30;
    sub_23AA907B0(a1, (uint64_t)v27, type metadata accessor for VFSItem);
    if (v32 == 1)
    {
      swift_retain();
      sub_23AA937BC((uint64_t)v27, type metadata accessor for VFSItem);
LABEL_19:
      v72(0, 0);
      goto LABEL_20;
    }
    v37 = v27[*(int *)(v19 + 28) + v17[27]];
    swift_retain();
    sub_23AA937BC((uint64_t)v27, type metadata accessor for VFSItem);
    if ((v37 & 1) != 0)
      goto LABEL_19;
    v50 = fpfs_supports_partial_materialization();
    sub_23AA907B0(a1, (uint64_t)v25, type metadata accessor for VFSItem);
    if (!v50)
    {
      sub_23AA937BC((uint64_t)v25, type metadata accessor for VFSItem);
      goto LABEL_19;
    }
    v51 = v61;
    sub_23AA907B0((uint64_t)&v25[*(int *)(v19 + 28)], v61, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA937BC((uint64_t)v25, type metadata accessor for VFSItem);
    v52 = *(_QWORD *)(v51 + v17[26]);
    sub_23AA937BC(v51, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v29 = v56;
    if (!v52)
      goto LABEL_19;
  }
  else
  {
    swift_retain();
  }
  v33 = (_BYTE *)(v71 + 16);
  swift_beginAccess();
  v34 = a1;
  if (*v33 == 1)
  {
    v35 = *v30;
    sub_23AA907B0(a1, (uint64_t)v22, type metadata accessor for VFSItem);
    if (v35 == 1)
    {
      v36 = sub_23AA937BC((uint64_t)v22, type metadata accessor for VFSItem);
LABEL_11:
      v69(v36);
      goto LABEL_20;
    }
    v38 = v61;
    sub_23AA907B0((uint64_t)&v22[*(int *)(v19 + 28)], v61, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA937BC((uint64_t)v22, type metadata accessor for VFSItem);
    v39 = *(unsigned __int8 *)(v38 + v17[21]);
    v36 = sub_23AA937BC(v38, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if (v39)
      goto LABEL_11;
  }
  v40 = swift_allocBox();
  sub_23AA907B0(v34, v41, type metadata accessor for VFSItem);
  type metadata accessor for VFSFileTree(0);
  v42 = swift_dynamicCastClass();
  if (!v42)
  {
    swift_release();
    sub_23B1C536C();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v53 = v57;
    v54 = v60;
    sub_23B1C5864();
    v55 = (void *)sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v53, v54);
    v72(0, v55);
    swift_release();

    return;
  }
  v43 = *(void **)(v42 + 216);
  v44 = (_QWORD *)swift_allocObject();
  v44[2] = v40;
  v44[3] = sub_23AB000C8;
  v44[4] = v29;
  aBlock[4] = sub_23AB00094;
  aBlock[5] = v44;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698FC;
  aBlock[3] = &block_descriptor_550;
  v45 = _Block_copy(aBlock);
  swift_retain();
  v46 = v43;
  swift_retain();
  swift_retain();
  v47 = v62;
  sub_23B1C6068();
  v73 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
  v48 = v65;
  v49 = v67;
  sub_23B1C6DE8();
  MEMORY[0x23B85F470](0, v47, v48, v45);
  _Block_release(v45);
  swift_release();

  (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v49);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v64);
  swift_release();
  swift_release();
LABEL_20:
  swift_release();
}

uint64_t sub_23AAF2B74(void (*a1)(_QWORD, void *), uint64_t a2, unint64_t a3, unsigned int a4, void *a5, void (*a6)(_QWORD, void *), uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _BYTE *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t (**v51)(uint64_t);
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t (**v65)();
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t (**v95)(uint64_t);
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(_QWORD, void *);
  uint64_t v138;
  id v139;
  unsigned __int8 v140;

  v137 = a1;
  v138 = a7;
  v129 = a5;
  v130 = a2;
  v128 = a4;
  v132 = a3;
  v122 = sub_23B1C5E4C();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v123 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VFSItem(0);
  v127 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v127 + 64);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v126 = (uint64_t)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v124 = (char *)&v113 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v131 = (uint64_t)&v113 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v134 = (char *)&v113 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v133 = (uint64_t)&v113 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v135 = *(_QWORD *)(v19 - 8);
  v136 = v19;
  v20 = *(_QWORD *)(v135 + 64);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v113 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v113 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (void **)((char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = a6;
  *(_QWORD *)(v30 + 24) = v138;
  sub_23AA8EFC8((uint64_t)v137, (uint64_t)v29, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = *v29;
    swift_retain_n();
    v32 = v31;
    a6(0, v31);

LABEL_3:
    swift_release();
    return swift_release();
  }
  v33 = (uint64_t)v134;
  v118 = v10;
  v116 = v20;
  v117 = (uint64_t)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = a6;
  v119 = v24;
  v120 = v26;
  v125 = v30;
  v34 = v135;
  v35 = v136;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v135 + 48))(v29, 1, v136) == 1)
  {
    swift_retain_n();
    v137(0, 0);
LABEL_8:
    swift_release();
    return swift_release();
  }
  v36 = (uint64_t)v120;
  sub_23AA724E8((uint64_t)v29, (uint64_t)v120, &qword_2542E0F70);
  if (*(_BYTE *)(v36 + *(int *)(v35 + 56)) == 1)
  {
    sub_23AAFCEE8();
    v37 = (void *)swift_allocError();
    *v38 = 1;
    swift_retain_n();
    v137(0, v37);

    sub_23AA8A05C(v36, &qword_2542E0F70);
    goto LABEL_8;
  }
  v40 = v133;
  sub_23AA907B0(v36, v133, type metadata accessor for VFSItem);
  sub_23AA8EFC8(v36, (uint64_t)v119, &qword_2542E0F70);
  v41 = v33;
  sub_23AA907B0(v40, v33, type metadata accessor for VFSItem);
  sub_23AA907B0(v33, v131, type metadata accessor for VFSItem);
  v42 = *(unsigned __int8 *)(v127 + 80);
  v43 = (v42 + 24) & ~v42;
  v44 = (v43 + v118 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v43 + v118 + 23) & 0xFFFFFFFFFFFFFFF8;
  v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  v47 = swift_allocObject();
  v48 = v130;
  *(_QWORD *)(v47 + 16) = v130;
  sub_23AA94050(v41, v47 + v43, type metadata accessor for VFSItem);
  v49 = v47 + v44;
  v50 = v132;
  *(_QWORD *)v49 = v132;
  *(_BYTE *)(v49 + 8) = v128;
  v51 = (uint64_t (**)(uint64_t))(v47 + v45);
  v52 = v125;
  *v51 = sub_23AB000C8;
  v51[1] = (uint64_t (*)(uint64_t))v52;
  v53 = v129;
  *(_QWORD *)(v47 + v46) = v129;
  v54 = v53;
  if (((v50 >> 58) & 0x3C | (v50 >> 1) & 3) != 0x1B)
  {
    v127 = v42 | 7;
    v115 = ~v42;
    v140 = 1;
    v69 = swift_allocObject();
    v134 = (char *)v69;
    *(_BYTE *)(v69 + 16) = 1;
    v70 = *(void **)&v120[*(int *)(v136 + 52)];
    v136 = v47;
    v71 = v42;
    if (v70)
    {
      v114 = v42;
      v139 = v70;
      MEMORY[0x24BDAC7A8](v69);
      v72 = v130;
      *(&v113 - 6) = v130;
      *(&v113 - 5) = (uint64_t)&v139;
      *((_BYTE *)&v113 - 32) = v128;
      v73 = v54;
      v74 = v133;
      *(&v113 - 3) = v75;
      v111 = v74;
      v112 = &v140;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_23AA93780(v50);
      v76 = v73;
      v77 = v125;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_23AA93780(v50);
      v78 = v76;
      v79 = (void *)MEMORY[0x23B8601A8](v70);
      sub_23ADDA710(v72, (uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AAFCED0, (uint64_t)(&v113 - 8), v80);
      objc_autoreleasePoolPop(v79);

      v85 = v72;
      v86 = v77;
      v87 = v126;
      v88 = (uint64_t)v124;
      v89 = v118;
      v71 = v114;
    }
    else
    {
      swift_retain();
      swift_retain();
      v85 = v130;
      swift_retain();
      sub_23AA93780(v50);
      v83 = v54;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_23AA93780(v50);
      v84 = v83;
      v74 = v133;
      v86 = v52;
      v87 = v126;
      v88 = (uint64_t)v124;
      v89 = v118;
    }
    v128 = v140;
    sub_23AA907B0(v74, v88, type metadata accessor for VFSItem);
    sub_23AA907B0(v88, v87, type metadata accessor for VFSItem);
    v90 = (v71 + 16) & v115;
    v91 = (v89 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
    v92 = (v91 + 23) & 0xFFFFFFFFFFFFFFF8;
    v93 = (v92 + 15) & 0xFFFFFFFFFFFFFFF8;
    v94 = swift_allocObject();
    sub_23AA94050(v88, v94 + v90, type metadata accessor for VFSItem);
    v95 = (uint64_t (**)(uint64_t))(v94 + v91);
    *v95 = sub_23AB000C8;
    v95[1] = (uint64_t (*)(uint64_t))v86;
    v96 = v86;
    v97 = (uint64_t)v134;
    *(_QWORD *)(v94 + v92) = v134;
    *(_QWORD *)(v94 + v93) = v85;
    v98 = (_QWORD *)(v94 + ((v93 + 15) & 0xFFFFFFFFFFFFFFF8));
    v99 = v136;
    *v98 = sub_23AAFCE9C;
    v98[1] = v99;
    if (v128 == 1
      && (__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0),
          (v100 = swift_dynamicCastClass()) != 0))
    {
      v101 = v100;
      v102 = swift_allocObject();
      v137 = (void (*)(_QWORD, void *))v102;
      *(_QWORD *)(v102 + 16) = sub_23AB000C8;
      *(_QWORD *)(v102 + 24) = v96;
      v103 = v117;
      sub_23AA8EFC8((uint64_t)v119, v117, &qword_2542E0F70);
      v104 = (*(unsigned __int8 *)(v135 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
      v105 = (v116 + v104 + 7) & 0xFFFFFFFFFFFFFFF8;
      v106 = swift_allocObject();
      sub_23AA724E8(v103, v106 + v104, &qword_2542E0F70);
      *(_QWORD *)(v106 + v105) = v101;
      v107 = (_QWORD *)(v106 + ((v105 + 15) & 0xFFFFFFFFFFFFFFF8));
      *v107 = sub_23AAFCEB4;
      v107[1] = v94;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_23ADF3D40((uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, (uint64_t)v137, (uint64_t)sub_23AAFCEBC, v106);
      swift_release();
      v108 = (uint64_t)v119;
      swift_release();
      swift_release();
      v109 = v126;
    }
    else
    {
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      v110 = v138;
      swift_retain();
      v109 = v126;
      sub_23AAF24A8(v126, v97, v85, (void (*)(uint64_t))sub_23AAFCE9C, v99, v137, v110);
      swift_release();
      v108 = (uint64_t)v119;
    }
    swift_release();
    sub_23AA937BC(v109, type metadata accessor for VFSItem);
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_release();
    sub_23AA937BC(v131, type metadata accessor for VFSItem);
    sub_23AAB47B0(v132);

    swift_release();
    sub_23AA8A05C(v108, &qword_2542E0F70);
    sub_23AA8A05C((uint64_t)v120, &qword_2542E0F70);
    sub_23AA937BC(v133, type metadata accessor for VFSItem);
    swift_release();
    goto LABEL_3;
  }
  v55 = v131;
  v56 = v34;
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = sub_23AAFCE9C;
  *(_QWORD *)(v57 + 24) = v47;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  v58 = swift_dynamicCastClass();
  if (v58)
  {
    v59 = v58;
    v60 = swift_allocObject();
    v137 = (void (*)(_QWORD, void *))v60;
    *(_QWORD *)(v60 + 16) = sub_23AB000C8;
    *(_QWORD *)(v60 + 24) = v52;
    v61 = v117;
    sub_23AA8EFC8((uint64_t)v119, v117, &qword_2542E0F70);
    v62 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    v63 = (v116 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v136 = v47;
    v64 = swift_allocObject();
    sub_23AA724E8(v61, v64 + v62, &qword_2542E0F70);
    *(_QWORD *)(v64 + v63) = v59;
    v65 = (uint64_t (**)())(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8));
    v54 = v129;
    *v65 = sub_23AA8A65C;
    v65[1] = (uint64_t (*)())v57;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_23AA93780(v132);
    v66 = v54;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(v132);
    v67 = v66;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23ADF3D40((uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, (uint64_t)v137, (uint64_t)sub_23AAFCEBC, v64);
    v68 = (uint64_t)v119;
    swift_release();
    swift_release_n();
    swift_release();
    v50 = v132;
    swift_release();
    v55 = v131;
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(v50);
    v81 = v54;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(v50);
    v82 = v81;
    swift_retain();
    sub_23AAE8704(v48, v55, v50, v128, (uint64_t)sub_23AB000C8, v52, v82);
    swift_release();
    swift_release_n();
    swift_release();
    v68 = (uint64_t)v119;
  }
  sub_23AA937BC(v55, type metadata accessor for VFSItem);
  sub_23AAB47B0(v50);

  swift_release();
  sub_23AA8A05C(v68, &qword_2542E0F70);
  sub_23AA8A05C((uint64_t)v120, &qword_2542E0F70);
  sub_23AA937BC(v133, type metadata accessor for VFSItem);
  swift_release();
  return swift_release();
}

void sub_23AAF3A78(uint64_t a1, int a2, int a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unsigned __int8 a10, void *a11, void (*a12)(_QWORD, void *), uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  void (*v84)(_QWORD, void *);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;
  int v98;
  void *v99;
  uint64_t v100;
  _QWORD *v101;
  unsigned int v102;
  void (*v103)(_QWORD, void *);
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[4];

  v106 = a7;
  v114 = a6;
  v99 = a5;
  v113 = a4;
  v98 = a3;
  v111 = a2;
  v116 = a1;
  v14 = a13;
  v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v100);
  v101 = (char **)((char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v115 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v96 - v20;
  v22 = swift_allocObject();
  v103 = a12;
  *(_QWORD *)(v22 + 16) = a12;
  *(_QWORD *)(v22 + 24) = a13;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_23AAFD638;
  *(_QWORD *)(v23 + 24) = v22;
  *(_QWORD *)(v23 + 32) = a8;
  *(_QWORD *)(v23 + 40) = a9;
  v102 = a10;
  *(_BYTE *)(v23 + 48) = a10;
  v112 = v23;
  *(_QWORD *)(v23 + 56) = a11;
  swift_retain();
  swift_retain();
  v107 = a8;
  swift_retain();
  v108 = a9;
  v24 = v116;
  sub_23AA93780(a9);
  v25 = a11;
  v26 = v113;
  v105 = v25;
  v27 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v26);
  sub_23AA93780(v26);
  swift_retain();
  v28 = sub_23B1C5E40();
  v29 = sub_23B1C6A94();
  if (os_log_type_enabled(v28, v29))
  {
    v96 = v21;
    v97 = v17;
    v30 = v26;
    v104 = v16;
    v109 = a13;
    v110 = v22;
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v119[0] = v32;
    *(_DWORD *)v31 = 136315906;
    swift_beginAccess();
    v33 = *(void **)(v24 + 32);
    v34 = v24;
    v35 = *(unsigned __int8 *)(v24 + 40);
    if ((*(_BYTE *)(v34 + 41) & 1) != 0)
    {
      v36 = v33;
      v37 = sub_23AA7B734();
      v39 = v38;
      sub_23AA862DC(v33, v35, 1);
    }
    else
    {
      v37 = sub_23AA96F18((uint64_t)v33, v35);
      v39 = v42;
    }
    v41 = v114;
    v118 = sub_23AABEC68(v37, v39, v119);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    if ((_BYTE)v111)
    {
      if (v111 == 1)
        v43 = 0x74616761706F7270;
      else
        v43 = 0xD000000000000010;
      if (v111 == 1)
        v44 = 0xED000053466F5465;
      else
        v44 = 0x800000023B1F7040;
    }
    else
    {
      v43 = 0xD000000000000013;
      v44 = 0x800000023B1F7010;
    }
    v118 = sub_23AABEC68(v43, v44, v119);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2080;
    sub_23AE5BC48(v30);
    v46 = v45;
    v48 = v47;
    sub_23AAB47B0(v30);
    v118 = sub_23AABEC68(v46, v48, v119);
    v26 = v30;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v30);
    *(_WORD *)(v31 + 32) = 2048;
    v118 = v41;
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v28, v29, "Lookup itemID %s with behavior %s request %s iteration %ld", (uint8_t *)v31, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v32, -1, -1);
    MEMORY[0x23B8614BC](v31, -1, -1);

    v40 = *(void (**)(char *, uint64_t))(v97 + 8);
    v16 = v104;
    v40(v96, v104);
    v14 = v109;
    v22 = v110;
    v24 = v116;
  }
  else
  {
    sub_23AAB47B0(v26);
    swift_release();
    sub_23AAB47B0(v26);

    v40 = *(void (**)(char *, uint64_t))(v17 + 8);
    v40(v21, v16);
    v41 = v114;
  }
  v49 = v115;
  if (v41 < 51)
  {
    swift_beginAccess();
    v63 = *(void **)(v24 + 32);
    v64 = *(unsigned __int8 *)(v24 + 40);
    if ((*(_BYTE *)(v24 + 41) & 1) != 0)
    {
      v65 = v26;
      v66 = qword_2542E1FE0;
      v67 = v63;
      if (v66 != -1)
        swift_once();
      v68 = sub_23B1C63E0();
      v70 = v69;
      if (v68 == sub_23B1C63E0() && v70 == v71)
      {
        swift_bridgeObjectRelease_n();
        sub_23AA862DC(v63, v64, 1);
        v26 = v65;
LABEL_28:
        sub_23AA6A4E4(v26, (uint64_t)sub_23AAFCE88, v112);
LABEL_38:
        swift_release();
        swift_release();
        return;
      }
      v72 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v63, v64, 1);
      v26 = v65;
      if ((v72 & 1) != 0)
        goto LABEL_28;
    }
    else if (!v63 && (_DWORD)v64 == 2)
    {
      goto LABEL_28;
    }
    if (((v26 >> 1) & 3 | (v26 >> 58) & 0x3C) == 0x1E)
    {
      v73 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      v74 = v73;
    }
    else
    {
      v85 = swift_allocObject();
      *(_QWORD *)(v85 + 16) = v26;
      v74 = v85 | 0x7000000000000004;
      v73 = v26;
    }
    sub_23AA93780(v73);
    v86 = swift_allocObject();
    v87 = v112;
    *(_QWORD *)(v86 + 16) = sub_23AAFCE88;
    *(_QWORD *)(v86 + 24) = v87;
    v88 = v106;
    *(_QWORD *)(v86 + 32) = v106;
    *(_BYTE *)(v86 + 40) = v111;
    v89 = v116;
    *(_QWORD *)(v86 + 48) = v26;
    *(_QWORD *)(v86 + 56) = v89;
    v90 = v98 & 1;
    *(_BYTE *)(v86 + 64) = v98 & 1;
    v91 = v99;
    v92 = v114;
    *(_QWORD *)(v86 + 72) = v99;
    *(_QWORD *)(v86 + 80) = v92;
    v93 = swift_allocObject();
    *(_QWORD *)(v93 + 16) = v89;
    *(_QWORD *)(v93 + 24) = v88;
    *(_BYTE *)(v93 + 32) = v90;
    *(_BYTE *)(v93 + 33) = 0;
    *(_QWORD *)(v93 + 40) = sub_23AAFC1FC;
    *(_QWORD *)(v93 + 48) = v86;
    *(_QWORD *)(v93 + 56) = v74;
    v94 = swift_allocObject();
    *(_QWORD *)(v94 + 16) = sub_23AAFC1FC;
    *(_QWORD *)(v94 + 24) = v86;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(v113);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v95 = v91;
    sub_23AA93780(v74);
    sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v94, (uint64_t)sub_23AABA3C4, v93);
    swift_release();
    swift_release();
    swift_release();
    sub_23AAB47B0(v74);
    goto LABEL_38;
  }
  v50 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v26);
  sub_23AA93780(v26);
  swift_retain();
  v51 = sub_23B1C5E40();
  v52 = sub_23B1C6AAC();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = v26;
    v104 = v16;
    v109 = v14;
    v110 = v22;
    v54 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v118 = v55;
    *(_DWORD *)v54 = 136446466;
    swift_beginAccess();
    v56 = v24;
    v57 = *(void **)(v24 + 32);
    v58 = *(unsigned __int8 *)(v56 + 40);
    LOBYTE(v56) = *(_BYTE *)(v56 + 41);
    v114 = v55;
    if ((v56 & 1) != 0)
    {
      v59 = v57;
      v60 = sub_23AA7B734();
      v62 = v61;
      sub_23AA862DC(v57, v58, 1);
    }
    else
    {
      v60 = sub_23AA96F18((uint64_t)v57, v58);
      v62 = v75;
    }
    v117 = sub_23AABEC68(v60, v62, &v118);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2082;
    v76 = v53;
    sub_23AE5BC48(v53);
    v78 = v77;
    v80 = v79;
    sub_23AAB47B0(v76);
    v117 = sub_23AABEC68(v78, v80, &v118);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v76);
    _os_log_impl(&dword_23AA66000, v51, v52, "Recursion too deep for lookup of itemID %{public}s request %{public}s", (uint8_t *)v54, 0x16u);
    v81 = v114;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v81, -1, -1);
    MEMORY[0x23B8614BC](v54, -1, -1);

    v40(v115, v104);
    v14 = v109;
  }
  else
  {
    sub_23AAB47B0(v26);
    swift_release();
    sub_23AAB47B0(v26);

    v40(v49, v16);
  }
  v82 = (void *)sub_23B1C63BC();
  v83 = (id)FPInvalidParameterError();

  if (v83)
  {
    v84 = (void (*)(_QWORD, void *))v101;
    *v101 = v83;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_23AAF2B74(v84, v107, v108, v102, v105, v103, v14);
    swift_release();
    sub_23AA8A05C((uint64_t)v84, (uint64_t *)&unk_2542E2190);
    goto LABEL_38;
  }
  swift_release();
  swift_release();
  swift_release();
  sub_23AAB47B0(v108);

  __break(1u);
}

uint64_t sub_23AAF451C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void (*a6)(_QWORD), char *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  unsigned __int8 *v30;
  int v31;
  int v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  void *v48;
  id v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  uint64_t Strong;
  uint64_t v60;
  char *v61;
  id v62;
  id v63;
  id v64;
  void (*v66)(_QWORD);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD aBlock[6];

  v78 = a5;
  v79 = a4;
  v81 = a3;
  v13 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v13);
  v68 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_23B1C5474();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v67 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C602C();
  v76 = *(_QWORD *)(v16 - 8);
  v77 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v75 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_23B1C60A4();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v72 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v19);
  v71 = (uint64_t)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for VFSItem(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v80 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v66 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v66 - v27;
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = a6;
  v29[3] = a7;
  v29[4] = a8;
  v30 = (unsigned __int8 *)(a1 + *(int *)(v21 + 28));
  v31 = v30[v19[20]];
  v83 = a7;
  v84 = v29;
  v82 = a2;
  if (v31 == 1)
  {
    v66 = a6;
    v32 = *v30;
    v33 = a1;
    sub_23AA907B0(a1, (uint64_t)v28, type metadata accessor for VFSItem);
    if (v32 == 1)
    {
      swift_retain();
      swift_retain();
      sub_23AA937BC((uint64_t)v28, type metadata accessor for VFSItem);
LABEL_9:
      v66(0);
      return swift_release();
    }
    v40 = v28[*(int *)(v21 + 28) + v19[27]];
    swift_retain();
    swift_retain();
    sub_23AA937BC((uint64_t)v28, type metadata accessor for VFSItem);
    if ((v40 & 1) != 0)
      goto LABEL_9;
    v53 = fpfs_supports_partial_materialization();
    sub_23AA907B0(a1, (uint64_t)v26, type metadata accessor for VFSItem);
    if (!v53)
    {
      sub_23AA937BC((uint64_t)v26, type metadata accessor for VFSItem);
      a6 = v66;
LABEL_20:
      a6(0);
      return swift_release();
    }
    v54 = v71;
    sub_23AA907B0((uint64_t)&v26[*(int *)(v21 + 28)], v71, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA937BC((uint64_t)v26, type metadata accessor for VFSItem);
    v55 = *(_QWORD *)(v54 + v19[26]);
    sub_23AA937BC(v54, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    a6 = v66;
    if (!v55)
      goto LABEL_20;
  }
  else
  {
    v33 = a1;
    swift_retain();
    swift_retain();
  }
  v34 = (_BYTE *)(v82 + 16);
  swift_beginAccess();
  v35 = v33;
  if (*v34 == 1)
  {
    v36 = *v30;
    v37 = v33;
    v38 = v80;
    sub_23AA907B0(v37, v80, type metadata accessor for VFSItem);
    if (v36 == 1)
    {
      v39 = sub_23AA937BC(v38, type metadata accessor for VFSItem);
LABEL_11:
      v79(v39);
      return swift_release();
    }
    v41 = v71;
    sub_23AA907B0(v38 + *(int *)(v21 + 28), v71, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA937BC(v38, type metadata accessor for VFSItem);
    v42 = *(unsigned __int8 *)(v41 + v19[21]);
    v39 = sub_23AA937BC(v41, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if (v42)
      goto LABEL_11;
  }
  v43 = swift_allocBox();
  sub_23AA907B0(v35, v44, type metadata accessor for VFSItem);
  type metadata accessor for VFSFileTree(0);
  v45 = swift_dynamicCastClass();
  if (v45)
  {
    v46 = *(void **)(v45 + 216);
    v47 = (_QWORD *)swift_allocObject();
    v47[2] = v43;
    v47[3] = sub_23AAFFF98;
    v47[4] = v84;
    aBlock[4] = sub_23AAFD130;
    aBlock[5] = v47;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23AA698FC;
    aBlock[3] = &block_descriptor_417;
    v48 = _Block_copy(aBlock);
    swift_retain();
    v49 = v46;
    swift_retain();
    swift_retain();
    v50 = v72;
    sub_23B1C6068();
    v85 = MEMORY[0x24BEE4AF8];
    sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
    sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
    v51 = v75;
    v52 = v77;
    sub_23B1C6DE8();
    MEMORY[0x23B85F470](0, v50, v51, v48);
    _Block_release(v48);
    swift_release();

    (*(void (**)(char *, uint64_t))(v76 + 8))(v51, v52);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v50, v74);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    sub_23B1C536C();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v56 = v67;
    v57 = v70;
    sub_23B1C5864();
    v58 = (void *)sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v56, v57);
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v60 = Strong;
      v61 = v83;
      swift_retain();
      v62 = v58;
      sub_23B09B104(v62, 0, v60, (void (*)(id))a6, v61);

      swift_release();
      swift_release();
    }
    else
    {
      v63 = v58;
      v64 = (id)FPDomainUnavailableError();
      ((void (*)(void))a6)();

    }
  }
  return swift_release();
}

uint64_t sub_23AAF4C94(uint64_t a1, uint64_t a2, unint64_t a3, int a4, void *a5, void (*a6)(id), char *a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  _QWORD *v32;
  void *v33;
  uint64_t Strong;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _BYTE *v42;
  uint64_t v43;
  char *v44;
  id v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char v57;
  void (**v58)(void *);
  uint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t (**v71)();
  unint64_t v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  unint64_t v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  void (**v107)(void *);
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 *v126;
  _QWORD v127[2];
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  unint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  void (*v150)(id);
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  id v154;
  unsigned __int8 v155;

  v153 = a8;
  v145 = a5;
  v146 = a3;
  LODWORD(v142) = a4;
  v143 = a2;
  v151 = a1;
  v136 = sub_23B1C5E4C();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v137 = (char *)v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VFSItem(0);
  v141 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v141 + 64);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v140 = (uint64_t)v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v138 = (char *)v127 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v144 = (uint64_t)v127 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v148 = (char *)v127 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v147 = (uint64_t)v127 - v20;
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v21 = *(_QWORD *)(v149 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = MEMORY[0x24BDAC7A8](v149);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v127 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v127 - v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (void **)((char *)v127 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = (_QWORD *)swift_allocObject();
  v150 = a6;
  v32[2] = a6;
  v32[3] = a7;
  v152 = v32;
  v32[4] = v153;
  sub_23AA8EFC8(v151, (uint64_t)v31, (uint64_t *)&unk_2542E2190);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v33 = *v31;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    swift_retain();
    swift_retain();
    v35 = v33;
    swift_retain();
    swift_retain();
    v36 = v33;
    if (Strong)
    {
      sub_23B09B104(v33, 0, Strong, v150, a7);
      swift_release();
    }
    else
    {
      v46 = (id)FPDomainUnavailableError();
      ((void (*)(void))v150)();

    }
    swift_release();
    goto LABEL_11;
  }
  v37 = (uint64_t)v148;
  v151 = v12;
  v131 = v22;
  v132 = (uint64_t)v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = v26;
  v134 = v28;
  v139 = a7;
  v38 = v149;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v21 + 48))(v31, 1, v149) == 1)
  {
    swift_retain_n();
    swift_retain_n();
    v150(0);
    swift_release();
LABEL_11:
    swift_release();
    return swift_release();
  }
  v39 = v21;
  v40 = (uint64_t)v134;
  sub_23AA724E8((uint64_t)v31, (uint64_t)v134, &qword_2542E0F70);
  if (*(_BYTE *)(v40 + *(int *)(v38 + 56)) == 1)
  {
    sub_23AAFCEE8();
    v41 = (void *)swift_allocError();
    *v42 = 1;
    swift_beginAccess();
    v43 = swift_weakLoadStrong();
    v44 = v139;
    swift_retain_n();
    swift_retain_n();
    v45 = v41;
    if (v43)
    {
      sub_23B09B104(v41, 0, v43, v150, v44);
      swift_release();
    }
    else
    {
      v90 = (id)FPDomainUnavailableError();
      ((void (*)(void))v150)();

    }
    sub_23AA8A05C(v40, &qword_2542E0F70);
    swift_release();
    swift_release();
  }
  else
  {
    v48 = v147;
    sub_23AA907B0(v40, v147, type metadata accessor for VFSItem);
    sub_23AA8EFC8(v40, (uint64_t)v133, &qword_2542E0F70);
    sub_23AA907B0(v48, v37, type metadata accessor for VFSItem);
    sub_23AA907B0(v37, v144, type metadata accessor for VFSItem);
    v49 = *(unsigned __int8 *)(v141 + 80);
    v50 = (v49 + 24) & ~v49;
    v51 = (v50 + v151 + 7) & 0xFFFFFFFFFFFFFFF8;
    v52 = (v50 + v151 + 23) & 0xFFFFFFFFFFFFFFF8;
    v53 = swift_allocObject();
    v54 = v143;
    *(_QWORD *)(v53 + 16) = v143;
    sub_23AA94050(v37, v53 + v50, type metadata accessor for VFSItem);
    v55 = v53 + v51;
    v56 = v146;
    *(_QWORD *)v55 = v146;
    v57 = v142;
    *(_BYTE *)(v55 + 8) = v142;
    v58 = (void (**)(void *))(v53 + v52);
    v59 = (uint64_t)v152;
    *v58 = sub_23AAFFF98;
    v58[1] = (void (*)(void *))v59;
    v60 = v145;
    *(_QWORD *)(v53 + ((v52 + 23) & 0xFFFFFFFFFFFFFFF8)) = v145;
    v61 = v60;
    v141 = v53;
    if (((v56 >> 58) & 0x3C | (v56 >> 1) & 3) == 0x1B)
    {
      v62 = (uint64_t)v133;
      v63 = swift_allocObject();
      *(_QWORD *)(v63 + 16) = sub_23AAFCE9C;
      *(_QWORD *)(v63 + 24) = v53;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
      v64 = swift_dynamicCastClass();
      if (v64)
      {
        v65 = v64;
        v66 = swift_allocObject();
        v151 = v66;
        *(_QWORD *)(v66 + 16) = sub_23AAFFF98;
        *(_QWORD *)(v66 + 24) = v59;
        v67 = v132;
        sub_23AA8EFC8(v62, v132, &qword_2542E0F70);
        v68 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
        v69 = (v131 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
        v70 = swift_allocObject();
        sub_23AA724E8(v67, v70 + v68, &qword_2542E0F70);
        *(_QWORD *)(v70 + v69) = v65;
        v71 = (uint64_t (**)())(v70 + ((v69 + 15) & 0xFFFFFFFFFFFFFFF8));
        *v71 = sub_23AA698DC;
        v71[1] = (uint64_t (*)())v63;
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        v72 = v146;
        sub_23AA93780(v146);
        v73 = v145;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_23AA93780(v72);
        v74 = v73;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_23ADF3D40((uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v151, (uint64_t)sub_23AAFCEBC, v70);
        v62 = (uint64_t)v133;
        swift_release();
        swift_release_n();
        swift_release();
        swift_release();
        v75 = v145;
        swift_release();
        swift_release();
        v76 = v144;
      }
      else
      {
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v72 = v146;
        sub_23AA93780(v146);
        v75 = v145;
        v91 = v145;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_23AA93780(v72);
        v92 = v91;
        swift_retain();
        v76 = v144;
        sub_23AAE8704(v54, v144, v72, v142, (uint64_t)sub_23AAFFF98, v59, v92);
        swift_release();
        swift_release_n();
        swift_release();
      }
      sub_23AA937BC(v76, type metadata accessor for VFSItem);
      sub_23AAB47B0(v72);

      swift_release();
      sub_23AA8A05C(v62, &qword_2542E0F70);
      sub_23AA8A05C((uint64_t)v134, &qword_2542E0F70);
      sub_23AA937BC(v147, type metadata accessor for VFSItem);
      swift_release();
      swift_release();
    }
    else
    {
      v130 = v49 | 7;
      v129 = v39;
      v77 = ~v49;
      v155 = 1;
      v78 = swift_allocObject();
      v148 = (char *)v78;
      *(_BYTE *)(v78 + 16) = 1;
      v79 = *(void **)&v134[*(int *)(v149 + 52)];
      v80 = v49;
      if (v79)
      {
        v128 = ~v49;
        v149 = v49;
        v127[1] = v127;
        v154 = v79;
        MEMORY[0x24BDAC7A8](v78);
        v81 = v143;
        v127[-6] = v143;
        v127[-5] = &v154;
        LOBYTE(v127[-4]) = v57;
        v127[-3] = v82;
        v125 = v147;
        v126 = &v155;
        swift_retain();
        swift_retain();
        v83 = v59;
        swift_retain();
        swift_retain();
        v84 = v146;
        sub_23AA93780(v146);
        v85 = v61;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v86 = v81;
        sub_23AA93780(v84);
        v87 = v85;
        v88 = (void *)MEMORY[0x23B8601A8](v79);
        sub_23ADDA710(v81, (uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AAFCED0, (uint64_t)&v127[-8], v89);
        objc_autoreleasePoolPop(v88);

        v96 = v147;
        v97 = v140;
        v98 = (uint64_t)v138;
        v99 = v151;
        v100 = v83;
        v80 = v149;
        v77 = v128;
      }
      else
      {
        swift_retain();
        swift_retain();
        v100 = v59;
        swift_retain();
        v86 = v143;
        swift_retain();
        v93 = v146;
        sub_23AA93780(v146);
        v94 = v61;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_23AA93780(v93);
        v95 = v94;
        v96 = v147;
        v97 = v140;
        v98 = (uint64_t)v138;
        v99 = v151;
      }
      LODWORD(v151) = v155;
      sub_23AA907B0(v96, v98, type metadata accessor for VFSItem);
      sub_23AA907B0(v98, v97, type metadata accessor for VFSItem);
      v101 = v98;
      v102 = (v80 + 16) & v77;
      v103 = (v99 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
      v104 = (v103 + 23) & 0xFFFFFFFFFFFFFFF8;
      v105 = (v104 + 15) & 0xFFFFFFFFFFFFFFF8;
      v106 = swift_allocObject();
      sub_23AA94050(v101, v106 + v102, type metadata accessor for VFSItem);
      v107 = (void (**)(void *))(v106 + v103);
      *v107 = sub_23AAFFF98;
      v107[1] = (void (*)(void *))v100;
      v108 = (uint64_t)v148;
      *(_QWORD *)(v106 + v104) = v148;
      *(_QWORD *)(v106 + v105) = v86;
      v109 = (_QWORD *)(v106 + ((v105 + 15) & 0xFFFFFFFFFFFFFFF8));
      v110 = v141;
      *v109 = sub_23AAFCE9C;
      v109[1] = v110;
      v111 = v86;
      v112 = v100;
      if ((_DWORD)v151 == 1
        && (__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0),
            (v113 = swift_dynamicCastClass()) != 0))
      {
        v114 = v113;
        v115 = swift_allocObject();
        *(_QWORD *)(v115 + 16) = sub_23AAFFF98;
        *(_QWORD *)(v115 + 24) = v112;
        v116 = v132;
        sub_23AA8EFC8((uint64_t)v133, v132, &qword_2542E0F70);
        v117 = (*(unsigned __int8 *)(v129 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
        v118 = (v131 + v117 + 7) & 0xFFFFFFFFFFFFFFF8;
        v119 = swift_allocObject();
        sub_23AA724E8(v116, v119 + v117, &qword_2542E0F70);
        *(_QWORD *)(v119 + v118) = v114;
        v120 = (_QWORD *)(v119 + ((v118 + 15) & 0xFFFFFFFFFFFFFFF8));
        *v120 = sub_23AAFCEB4;
        v120[1] = v106;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        sub_23ADF3D40((uint64_t)"evict(_:request:evictionReason:progress:completionHandler:)", 59, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA956C8, v115, (uint64_t)sub_23AAFCEBC, v119);
        swift_release();
        swift_release();
        v121 = v140;
      }
      else
      {
        swift_retain_n();
        swift_retain_n();
        v122 = v141;
        swift_retain_n();
        swift_retain_n();
        v123 = v139;
        swift_retain();
        v124 = v153;
        swift_retain();
        v121 = v140;
        sub_23AAF451C(v140, v108, v111, (void (*)(uint64_t))sub_23AAFCE9C, v122, (void (*)(_QWORD))v150, v123, v124);
        swift_release();
      }
      swift_release();
      swift_release();
      sub_23AA937BC(v121, type metadata accessor for VFSItem);
      swift_release_n();
      swift_release_n();
      swift_release();
      swift_release();
      sub_23AA937BC(v144, type metadata accessor for VFSItem);
      sub_23AAB47B0(v146);

      swift_release();
      sub_23AA8A05C((uint64_t)v133, &qword_2542E0F70);
      sub_23AA8A05C((uint64_t)v134, &qword_2542E0F70);
      sub_23AA937BC(v147, type metadata accessor for VFSItem);
      swift_release();
      swift_release();
      swift_release();
    }
  }
  return swift_release();
}

void sub_23AAF5DEC(uint64_t a1, int a2, int a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unsigned __int8 a10, void *a11, void (*a12)(id), char *a13, uint64_t a14)
{
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  int v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(_BYTE *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  BOOL v49;
  _BYTE *v50;
  id v51;
  NSObject *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  _BYTE v93[4];
  int v94;
  _BYTE *v95;
  int v96;
  void *v97;
  uint64_t v98;
  _QWORD *v99;
  int v100;
  void (*v101)(id);
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  int v109;
  _QWORD *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[4];

  v104 = a7;
  v115 = a6;
  v97 = a5;
  v112 = a4;
  v96 = a3;
  v109 = a2;
  v111 = a1;
  v15 = a13;
  v16 = a14;
  v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v98);
  v99 = &v93[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_23B1C5E4C();
  v113 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v116 = &v93[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  v22 = &v93[-v21];
  v23 = (_QWORD *)swift_allocObject();
  v101 = a12;
  v23[2] = a12;
  v23[3] = a13;
  v23[4] = a14;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_23AAFCE78;
  *(_QWORD *)(v24 + 24) = v23;
  *(_QWORD *)(v24 + 32) = a8;
  *(_QWORD *)(v24 + 40) = a9;
  v100 = a10;
  *(_BYTE *)(v24 + 48) = a10;
  v26 = v111;
  v25 = v112;
  v114 = v24;
  *(_QWORD *)(v24 + 56) = a11;
  swift_retain();
  swift_retain();
  swift_retain();
  v105 = a8;
  swift_retain();
  v106 = a9;
  sub_23AA93780(a9);
  v103 = a11;
  v27 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v25);
  sub_23AA93780(v25);
  swift_retain();
  v28 = sub_23B1C5E40();
  v29 = sub_23B1C6A94();
  v30 = os_log_type_enabled(v28, (os_log_type_t)v29);
  v110 = v23;
  if (v30)
  {
    v94 = v29;
    v95 = v22;
    v31 = v113;
    v102 = v18;
    v107 = a13;
    v108 = a14;
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v119[0] = v33;
    *(_DWORD *)v32 = 136315906;
    swift_beginAccess();
    v34 = *(void **)(v26 + 32);
    v35 = *(unsigned __int8 *)(v26 + 40);
    if ((*(_BYTE *)(v26 + 41) & 1) != 0)
    {
      v36 = v34;
      v37 = sub_23AA7B734();
      v39 = v38;
      sub_23AA862DC(v34, v35, 1);
    }
    else
    {
      v37 = sub_23AA96F18(*(_QWORD *)(v26 + 32), *(_BYTE *)(v26 + 40));
      v39 = v42;
    }
    v118 = sub_23AABEC68(v37, v39, v119);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    if ((_BYTE)v109)
    {
      if (v109 == 1)
        v43 = 0x74616761706F7270;
      else
        v43 = 0xD000000000000010;
      if (v109 == 1)
        v44 = 0xED000053466F5465;
      else
        v44 = 0x800000023B1F7040;
    }
    else
    {
      v43 = 0xD000000000000013;
      v44 = 0x800000023B1F7010;
    }
    v118 = sub_23AABEC68(v43, v44, v119);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 22) = 2080;
    sub_23AE5BC48(v25);
    v46 = v45;
    v48 = v47;
    sub_23AAB47B0(v25);
    v118 = sub_23AABEC68(v46, v48, v119);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v25);
    *(_WORD *)(v32 + 32) = 2048;
    v41 = v115;
    v118 = v115;
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v28, (os_log_type_t)v94, "Lookup itemID %s with behavior %s request %s iteration %ld", (uint8_t *)v32, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v33, -1, -1);
    MEMORY[0x23B8614BC](v32, -1, -1);

    v40 = *(void (**)(_BYTE *, uint64_t))(v31 + 8);
    v18 = v102;
    v40(v95, v102);
    v15 = v107;
    v16 = v108;
  }
  else
  {
    sub_23AAB47B0(v25);
    swift_release();
    sub_23AAB47B0(v25);

    v40 = *(void (**)(_BYTE *, uint64_t))(v113 + 8);
    v40(v22, v18);
    v41 = v115;
  }
  v49 = v41 < 51;
  v50 = v116;
  if (v49)
  {
    swift_beginAccess();
    v63 = *(void **)(v26 + 32);
    v64 = *(unsigned __int8 *)(v26 + 40);
    if ((*(_BYTE *)(v26 + 41) & 1) != 0)
    {
      v65 = qword_2542E1FE0;
      v66 = v63;
      if (v65 != -1)
        swift_once();
      v67 = sub_23B1C63E0();
      v69 = v68;
      if (v67 == sub_23B1C63E0() && v69 == v70)
      {
        swift_bridgeObjectRelease_n();
        sub_23AA862DC(v63, v64, 1);
LABEL_28:
        sub_23AA6A4E4(v25, (uint64_t)sub_23AAFCE88, v114);
LABEL_38:
        swift_release();
        swift_release();
        return;
      }
      v71 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v63, v64, 1);
      if ((v71 & 1) != 0)
        goto LABEL_28;
    }
    else if (!v63 && (_DWORD)v64 == 2)
    {
      goto LABEL_28;
    }
    if (((v25 >> 1) & 3 | (v25 >> 58) & 0x3C) == 0x1E)
    {
      v72 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      v73 = v72;
    }
    else
    {
      v83 = swift_allocObject();
      *(_QWORD *)(v83 + 16) = v25;
      v73 = v83 | 0x7000000000000004;
      v72 = v25;
    }
    sub_23AA93780(v72);
    v84 = swift_allocObject();
    v85 = v114;
    *(_QWORD *)(v84 + 16) = sub_23AAFCE88;
    *(_QWORD *)(v84 + 24) = v85;
    v86 = v104;
    *(_QWORD *)(v84 + 32) = v104;
    *(_BYTE *)(v84 + 40) = v109;
    *(_QWORD *)(v84 + 48) = v25;
    *(_QWORD *)(v84 + 56) = v26;
    v87 = v96 & 1;
    *(_BYTE *)(v84 + 64) = v96 & 1;
    v88 = v97;
    v89 = v115;
    *(_QWORD *)(v84 + 72) = v97;
    *(_QWORD *)(v84 + 80) = v89;
    v90 = swift_allocObject();
    *(_QWORD *)(v90 + 16) = v26;
    *(_QWORD *)(v90 + 24) = v86;
    *(_BYTE *)(v90 + 32) = v87;
    *(_BYTE *)(v90 + 33) = 0;
    *(_QWORD *)(v90 + 40) = sub_23AAFC1FC;
    *(_QWORD *)(v90 + 48) = v84;
    *(_QWORD *)(v90 + 56) = v73;
    v91 = swift_allocObject();
    *(_QWORD *)(v91 + 16) = sub_23AAFC1FC;
    *(_QWORD *)(v91 + 24) = v84;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(v25);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v92 = v88;
    sub_23AA93780(v73);
    sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v91, (uint64_t)sub_23AABA3C4, v90);
    swift_release();
    swift_release();
    swift_release();
    sub_23AAB47B0(v73);
    goto LABEL_38;
  }
  v51 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v25);
  sub_23AA93780(v25);
  swift_retain();
  v52 = sub_23B1C5E40();
  v53 = sub_23B1C6AAC();
  if (os_log_type_enabled(v52, (os_log_type_t)v53))
  {
    LODWORD(v115) = v53;
    v102 = v18;
    v107 = v15;
    v108 = v16;
    v54 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v118 = v55;
    *(_DWORD *)v54 = 136446466;
    swift_beginAccess();
    v56 = *(void **)(v26 + 32);
    v57 = *(unsigned __int8 *)(v26 + 40);
    v58 = *(_BYTE *)(v26 + 41);
    v113 = v55;
    if ((v58 & 1) != 0)
    {
      v59 = v56;
      v60 = sub_23AA7B734();
      v62 = v61;
      sub_23AA862DC(v56, v57, 1);
    }
    else
    {
      v60 = sub_23AA96F18((uint64_t)v56, v57);
      v62 = v74;
    }
    v117 = sub_23AABEC68(v60, v62, &v118);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2082;
    sub_23AE5BC48(v25);
    v76 = v75;
    v78 = v77;
    sub_23AAB47B0(v25);
    v117 = sub_23AABEC68(v76, v78, &v118);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v25);
    _os_log_impl(&dword_23AA66000, v52, (os_log_type_t)v115, "Recursion too deep for lookup of itemID %{public}s request %{public}s", (uint8_t *)v54, 0x16u);
    v79 = v113;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v79, -1, -1);
    MEMORY[0x23B8614BC](v54, -1, -1);

    v40(v116, v102);
    v15 = v107;
    v16 = v108;
  }
  else
  {
    sub_23AAB47B0(v25);
    swift_release();
    sub_23AAB47B0(v25);

    v40(v50, v18);
  }
  v80 = (void *)sub_23B1C63BC();
  v81 = (id)FPInvalidParameterError();

  if (v81)
  {
    v82 = (uint64_t)v99;
    *v99 = v81;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    sub_23AAF4C94(v82, v105, v106, v100, v103, v101, v15, v16);
    swift_release();
    swift_release();
    sub_23AA8A05C(v82, (uint64_t *)&unk_2542E2190);
    goto LABEL_38;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23AAB47B0(v106);

  __break(1u);
}

uint64_t sub_23AAF68D8(uint64_t a1, int a2, int a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *), uint64_t a9, unint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD *v22;
  id v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(_BYTE *, uint64_t);
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  _BYTE *v53;
  NSObject *v54;
  int v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t result;
  _BYTE v85[12];
  int v86;
  uint64_t v87;
  int v88;
  void *v89;
  uint64_t v90;
  uint64_t *v91;
  void (*v92)(uint64_t *);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[4];

  v94 = a7;
  v101 = a6;
  v89 = a5;
  v88 = a3;
  LODWORD(v99) = a2;
  v14 = a11;
  v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2190);
  MEMORY[0x24BDAC7A8](v90);
  v91 = (uint64_t *)&v85[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v100 = &v85[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v85[-v20];
  v22 = (_QWORD *)swift_allocObject();
  v92 = a8;
  v22[2] = a8;
  v22[3] = a9;
  v22[4] = a10;
  v22[5] = a11;
  v95 = a9;
  swift_retain();
  v96 = a10;
  sub_23AA93780(a10);
  swift_retain();
  v23 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a4);
  sub_23AA93780(a4);
  swift_retain();
  v24 = sub_23B1C5E40();
  v25 = sub_23B1C6A94();
  if (os_log_type_enabled(v24, (os_log_type_t)v25))
  {
    v86 = v25;
    v87 = v17;
    v93 = v16;
    v97 = a11;
    v98 = v22;
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v104[0] = v27;
    *(_DWORD *)v26 = 136315906;
    swift_beginAccess();
    v28 = *(void **)(a1 + 32);
    v29 = *(unsigned __int8 *)(a1 + 40);
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v30 = v28;
      v31 = sub_23AA7B734();
      v33 = v32;
      sub_23AA862DC(v28, v29, 1);
    }
    else
    {
      v31 = sub_23AA96F18(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      v33 = v44;
    }
    v103 = sub_23AABEC68(v31, v33, v104);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    if ((_BYTE)v99)
    {
      if (v99 == 1)
        v45 = 0x74616761706F7270;
      else
        v45 = 0xD000000000000010;
      if (v99 == 1)
        v46 = 0xED000053466F5465;
      else
        v46 = 0x800000023B1F7040;
    }
    else
    {
      v45 = 0xD000000000000013;
      v46 = 0x800000023B1F7010;
    }
    v103 = sub_23AABEC68(v45, v46, v104);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    sub_23AE5BC48(a4);
    v48 = v47;
    v50 = v49;
    sub_23AAB47B0(a4);
    v103 = sub_23AABEC68(v48, v50, v104);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a4);
    *(_WORD *)(v26 + 32) = 2048;
    v51 = v101;
    v103 = v101;
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v24, (os_log_type_t)v86, "Lookup itemID %s with behavior %s request %s iteration %ld", (uint8_t *)v26, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v27, -1, -1);
    MEMORY[0x23B8614BC](v26, -1, -1);

    v34 = *(void (**)(_BYTE *, uint64_t))(v87 + 8);
    v16 = v93;
    v34(v21, v93);
    v14 = v97;
    v22 = v98;
    if (v51 >= 51)
      goto LABEL_24;
LABEL_5:
    swift_beginAccess();
    v35 = *(void **)(a1 + 32);
    v36 = *(unsigned __int8 *)(a1 + 40);
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v37 = qword_2542E1FE0;
      v38 = v35;
      v39 = v94;
      if (v37 != -1)
        swift_once();
      v40 = sub_23B1C63E0();
      v42 = v41;
      if (v40 == sub_23B1C63E0() && v42 == v43)
      {
        swift_bridgeObjectRelease_n();
        sub_23AA862DC(v35, v36, 1);
LABEL_21:
        sub_23AA6A4E4(a4, (uint64_t)sub_23AAFCE60, (uint64_t)v22);
        return swift_release();
      }
      v63 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v35, v36, 1);
      if ((v63 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      v39 = v94;
      if (!v35 && (_DWORD)v36 == 2)
        goto LABEL_21;
    }
    if (((a4 >> 1) & 3 | (a4 >> 58) & 0x3C) == 0x1E)
    {
      v64 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      v65 = v64;
    }
    else
    {
      v76 = swift_allocObject();
      *(_QWORD *)(v76 + 16) = a4;
      v65 = v76 | 0x7000000000000004;
      v64 = a4;
    }
    sub_23AA93780(v64);
    v77 = swift_allocObject();
    *(_QWORD *)(v77 + 16) = sub_23AAFCE60;
    *(_QWORD *)(v77 + 24) = v22;
    *(_QWORD *)(v77 + 32) = v39;
    *(_BYTE *)(v77 + 40) = v99;
    *(_QWORD *)(v77 + 48) = a4;
    *(_QWORD *)(v77 + 56) = a1;
    v78 = v88 & 1;
    *(_BYTE *)(v77 + 64) = v88 & 1;
    v79 = v89;
    v80 = v101;
    *(_QWORD *)(v77 + 72) = v89;
    *(_QWORD *)(v77 + 80) = v80;
    v81 = swift_allocObject();
    *(_QWORD *)(v81 + 16) = a1;
    *(_QWORD *)(v81 + 24) = v39;
    *(_BYTE *)(v81 + 32) = v78;
    *(_BYTE *)(v81 + 33) = 0;
    *(_QWORD *)(v81 + 40) = sub_23AAFC1FC;
    *(_QWORD *)(v81 + 48) = v77;
    *(_QWORD *)(v81 + 56) = v65;
    v82 = swift_allocObject();
    *(_QWORD *)(v82 + 16) = sub_23AAFC1FC;
    *(_QWORD *)(v82 + 24) = v77;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AA93780(a4);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v83 = v79;
    sub_23AA93780(v65);
    sub_23AA901C4((uint64_t)"findExistingVFSItemFor(itemID:parentIsImported:bypassIsHidden:request:completionHandler:)", 89, 2, sub_23AB000C4, v82, (uint64_t)sub_23AABA3C4, v81);
    swift_release();
    swift_release();
    swift_release();
    sub_23AAB47B0(v65);
    return swift_release();
  }
  sub_23AAB47B0(a4);
  swift_release();
  sub_23AAB47B0(a4);

  v34 = *(void (**)(_BYTE *, uint64_t))(v17 + 8);
  v34(v21, v16);
  if (v101 < 51)
    goto LABEL_5;
LABEL_24:
  v52 = (id)fpfs_current_or_default_log();
  v53 = v100;
  sub_23B1C5E58();
  sub_23AA93780(a4);
  sub_23AA93780(a4);
  swift_retain();
  v54 = sub_23B1C5E40();
  v55 = sub_23B1C6AAC();
  if (os_log_type_enabled(v54, (os_log_type_t)v55))
  {
    LODWORD(v101) = v55;
    v93 = v16;
    v97 = v14;
    v98 = v22;
    v56 = swift_slowAlloc();
    v99 = swift_slowAlloc();
    v103 = v99;
    *(_DWORD *)v56 = 136446466;
    swift_beginAccess();
    v57 = *(void **)(a1 + 32);
    v58 = *(unsigned __int8 *)(a1 + 40);
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v59 = v57;
      v60 = sub_23AA7B734();
      v62 = v61;
      sub_23AA862DC(v57, v58, 1);
    }
    else
    {
      v60 = sub_23AA96F18(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      v62 = v66;
    }
    v67 = v100;
    v102 = sub_23AABEC68(v60, v62, &v103);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2082;
    sub_23AE5BC48(a4);
    v69 = v68;
    v71 = v70;
    sub_23AAB47B0(a4);
    v102 = sub_23AABEC68(v69, v71, &v103);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a4);
    _os_log_impl(&dword_23AA66000, v54, (os_log_type_t)v101, "Recursion too deep for lookup of itemID %{public}s request %{public}s", (uint8_t *)v56, 0x16u);
    v72 = v99;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v72, -1, -1);
    MEMORY[0x23B8614BC](v56, -1, -1);

    v34(v67, v93);
    v14 = v97;
  }
  else
  {
    sub_23AAB47B0(a4);
    swift_release();
    sub_23AAB47B0(a4);

    v34(v53, v16);
  }
  v73 = (void *)sub_23B1C63BC();
  v74 = (id)FPInvalidParameterError();

  if (v74)
  {
    v75 = v91;
    *v91 = (uint64_t)v74;
    swift_storeEnumTagMultiPayload();
    sub_23AAE96B4(v75, v92, v95, v96, v14);
    sub_23AA8A05C((uint64_t)v75, (uint64_t *)&unk_2542E2190);
    return swift_release();
  }
  swift_release();
  sub_23AAB47B0(v96);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23AAF72A8(uint64_t a1, unint64_t a2, int a3, void *a4, uint64_t a5, void (*a6)(_QWORD, void *), uint64_t a7)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD, void *);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, void *);
  uint64_t v46;
  uint64_t v47;

  v45 = a6;
  LODWORD(v10) = a3;
  v13 = sub_23B1C5E4C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a7;
  swift_retain();
  v17 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a2);
  sub_23AA93780(a2);
  swift_retain();
  v18 = sub_23B1C5E40();
  v19 = sub_23B1C6A94();
  if (os_log_type_enabled(v18, v19))
  {
    v39 = v14;
    v40 = v13;
    v41 = a4;
    v42 = v10;
    v43 = a5;
    v20 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v47 = v37;
    *(_DWORD *)v20 = 136315394;
    swift_beginAccess();
    v21 = *(void **)(a1 + 32);
    v22 = *(unsigned __int8 *)(a1 + 40);
    v38 = a1;
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v23 = v21;
      v24 = sub_23AA7B734();
      v26 = v25;
      sub_23AA862DC(v21, v22, 1);
    }
    else
    {
      v24 = sub_23AA96F18((uint64_t)v21, v22);
      v26 = v29;
    }
    v46 = sub_23AABEC68(v24, v26, &v47);
    sub_23B1C6CBC();
    v30 = v38;
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    sub_23AE5BC48(a2);
    v10 = v31;
    v33 = v32;
    sub_23AAB47B0(a2);
    v46 = sub_23AABEC68(v10, v33, &v47);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a2);
    a1 = v30;
    _os_log_impl(&dword_23AA66000, v18, v19, "Request to eviction of content of itemID %s request %s", (uint8_t *)v20, 0x16u);
    v34 = v37;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v34, -1, -1);
    MEMORY[0x23B8614BC](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v40);
    a5 = v43;
    v27 = v44;
    v28 = v45;
    LOBYTE(v10) = v42;
    a4 = v41;
  }
  else
  {
    sub_23AAB47B0(a2);
    swift_release();
    sub_23AAB47B0(a2);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v27 = v44;
    v28 = v45;
  }
  swift_retain();
  sub_23AA93780(a2);
  swift_retain();
  v35 = a4;
  sub_23AAF3A78(a1, 0, 0, a2, v35, 0, a5, a5, a2, v10, v35, v28, v27);

  swift_release();
  sub_23AAB47B0(a2);
  swift_release();
  return swift_release();
}

uint64_t sub_23AAF7614(uint64_t a1, unint64_t a2, int a3, void *a4, uint64_t a5, void (*a6)(id), char *a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  void (*v32)(id);
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  id v39;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  int v45;
  uint64_t v46;
  char *v47;
  void (*v48)(id);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v48 = a6;
  LODWORD(v12) = a3;
  v15 = sub_23B1C5E4C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a7;
  swift_retain();
  v49 = a8;
  swift_retain();
  v19 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(a2);
  sub_23AA93780(a2);
  swift_retain();
  v20 = sub_23B1C5E40();
  v21 = sub_23B1C6A94();
  if (os_log_type_enabled(v20, v21))
  {
    v41 = v20;
    v42 = v16;
    v43 = v15;
    v44 = a4;
    v45 = v12;
    v46 = a5;
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v51 = v23;
    *(_DWORD *)v22 = 136315394;
    swift_beginAccess();
    v24 = *(void **)(a1 + 32);
    v25 = *(unsigned __int8 *)(a1 + 40);
    v26 = v18;
    if ((*(_BYTE *)(a1 + 41) & 1) != 0)
    {
      v27 = v24;
      v28 = sub_23AA7B734();
      v30 = v29;
      sub_23AA862DC(v24, v25, 1);
    }
    else
    {
      v28 = sub_23AA96F18(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
      v30 = v33;
    }
    v50 = sub_23AABEC68(v28, v30, &v51);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    sub_23AE5BC48(a2);
    v12 = v34;
    v36 = v35;
    sub_23AAB47B0(a2);
    v50 = sub_23AABEC68(v12, v36, &v51);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a2);
    v37 = v41;
    _os_log_impl(&dword_23AA66000, v41, v21, "Request to eviction of content of itemID %s request %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v23, -1, -1);
    MEMORY[0x23B8614BC](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v43);
    a5 = v46;
    v31 = v47;
    v32 = v48;
    LOBYTE(v12) = v45;
    a4 = v44;
  }
  else
  {
    sub_23AAB47B0(a2);
    swift_release();
    sub_23AAB47B0(a2);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v31 = v47;
    v32 = v48;
  }
  swift_retain();
  v38 = v49;
  swift_retain();
  sub_23AA93780(a2);
  swift_retain();
  v39 = a4;
  sub_23AAF5DEC(a1, 0, 0, a2, v39, 0, a5, a5, a2, v12, v39, v32, v31, v38);

  swift_release();
  swift_release();
  sub_23AAB47B0(a2);
  swift_release();
  swift_release();
  return swift_release();
}

unint64_t sub_23AAF79A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  void *v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  id v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2080);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  result = sub_23AA97254(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v18 = v6;
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v3[6] + 16 * result;
    *(_QWORD *)v10 = v4;
    *(_BYTE *)(v10 + 8) = v5;
    *(_QWORD *)(v3[7] + 8 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *((_BYTE *)v9 - 8);
    v15 = (void *)*v9;
    v16 = v6;
    result = sub_23AA97254(v4, v5);
    v9 = v14;
    v6 = v15;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23AAF7AC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  void *v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  id v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2090);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  result = sub_23AA97254(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v18 = v6;
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v3[6] + 16 * result;
    *(_QWORD *)v10 = v4;
    *(_BYTE *)(v10 + 8) = v5;
    *(_QWORD *)(v3[7] + 8 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *((_BYTE *)v9 - 8);
    v15 = (void *)*v9;
    v16 = v6;
    result = sub_23AA97254(v4, v5);
    v9 = v14;
    v6 = v15;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23AAF7BD8(uint64_t a1)
{
  return sub_23AAB76F0(a1, (uint64_t *)&unk_2542E7430, (uint64_t *)&unk_2569E1AD8, &qword_2542E6C80);
}

unint64_t sub_23AAF7BF4(uint64_t a1)
{
  return sub_23AAF7E68(a1, &qword_2569E1AC0);
}

unint64_t sub_23AAF7C00(uint64_t a1)
{
  return sub_23AAF7E68(a1, &qword_2569E1AB8);
}

unint64_t sub_23AAF7C0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1B30);
    v3 = (_QWORD *)sub_23B1C70AC();
    for (i = (_QWORD *)(a1 + 64); ; i += 5)
    {
      v5 = *(i - 4);
      v6 = *((_BYTE *)i - 24);
      v7 = *(i - 2);
      v8 = *((_BYTE *)i - 8);
      v9 = *i;
      result = sub_23AA97254(v5, v6);
      if ((v11 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v12 = v3[6] + 16 * result;
      *(_QWORD *)v12 = v5;
      *(_BYTE *)(v12 + 8) = v6;
      v13 = v3[7] + 24 * result;
      *(_QWORD *)v13 = v7;
      *(_BYTE *)(v13 + 8) = v8;
      *(_QWORD *)(v13 + 16) = v9;
      v14 = v3[2];
      v15 = __OFADD__(v14, 1);
      v16 = v14 + 1;
      if (v15)
        goto LABEL_10;
      v3[2] = v16;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23AAF7D10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C98);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  result = sub_23AA97254(v4, v5);
  if ((v11 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v12 = (_QWORD *)(a1 + 120);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = v3[6] + 16 * result;
    *(_QWORD *)v13 = v4;
    *(_BYTE *)(v13 + 8) = v5;
    v14 = v3[7] + 32 * result;
    *(_QWORD *)v14 = v6;
    *(_BYTE *)(v14 + 8) = v7;
    *(_QWORD *)(v14 + 16) = v9;
    *(_QWORD *)(v14 + 24) = v8;
    v15 = v3[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      break;
    v3[2] = v17;
    if (!--v1)
      goto LABEL_8;
    v18 = v12 + 6;
    v4 = *(v12 - 5);
    v5 = *((_BYTE *)v12 - 32);
    v6 = *(v12 - 3);
    v7 = *((_BYTE *)v12 - 16);
    v9 = *(v12 - 1);
    v19 = *v12;
    swift_bridgeObjectRetain();
    result = sub_23AA97254(v4, v5);
    v12 = v18;
    v8 = v19;
    if ((v20 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23AAF7E5C(uint64_t a1)
{
  return sub_23AAF7E68(a1, &qword_2569E1C78);
}

unint64_t sub_23AAF7E68(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_23B1C70AC();
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  result = sub_23AA97254(v5, v6);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  v10 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = v4[6] + 16 * result;
    *(_QWORD *)v11 = v5;
    *(_BYTE *)(v11 + 8) = v6;
    *(_QWORD *)(v4[7] + 8 * result) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v4[2] = v14;
    if (!--v2)
      goto LABEL_8;
    v15 = v10 + 3;
    v5 = *(v10 - 2);
    v6 = *((_BYTE *)v10 - 8);
    v16 = *v10;
    swift_bridgeObjectRetain();
    result = sub_23AA97254(v5, v6);
    v10 = v15;
    v7 = v16;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23AAF7F84(uint64_t a1)
{
  return sub_23AAF80B4(a1, &qword_2569E1C70);
}

unint64_t sub_23AAF7F90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  void *v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  char v17;
  id v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1C60);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  result = sub_23AA97254(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v18 = v6;
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v3[6] + 16 * result;
    *(_QWORD *)v10 = v4;
    *(_BYTE *)(v10 + 8) = v5;
    *(_QWORD *)(v3[7] + 8 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *((_BYTE *)v9 - 8);
    v15 = (void *)*v9;
    v16 = v6;
    result = sub_23AA97254(v4, v5);
    v9 = v14;
    v6 = v15;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23AAF80A8(uint64_t a1)
{
  return sub_23AAF80B4(a1, &qword_2569E1C58);
}

unint64_t sub_23AAF80B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  _QWORD *i;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = (_QWORD *)sub_23B1C70AC();
    for (i = (_QWORD *)(a1 + 48); ; i += 3)
    {
      v6 = *(i - 2);
      v7 = *((_BYTE *)i - 8);
      v8 = *i;
      result = sub_23AA97254(v6, v7);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v11 = v4[6] + 16 * result;
      *(_QWORD *)v11 = v6;
      *(_BYTE *)(v11 + 8) = v7;
      *(_QWORD *)(v4[7] + 8 * result) = v8;
      v12 = v4[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v4[2] = v14;
      if (!--v2)
        return (unint64_t)v4;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23AAF8194(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t result;
  char v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  char v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5550);
  v3 = (_QWORD *)sub_23B1C70AC();
  v4 = *(_DWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v7 = *(_DWORD *)(a1 + 56);
  result = sub_23ACD5EA4(v4);
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v10 = (_DWORD *)(a1 + 88);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v11 = v3[7] + 24 * result;
    *(_QWORD *)v11 = v6;
    *(_QWORD *)(v11 + 8) = v5;
    *(_DWORD *)(v11 + 16) = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    if (!--v1)
      goto LABEL_8;
    v15 = v10 + 8;
    v4 = *(v10 - 6);
    v6 = *((_QWORD *)v10 - 2);
    v16 = *((_QWORD *)v10 - 1);
    v7 = *v10;
    swift_retain();
    result = sub_23ACD5EA4(v4);
    v10 = v15;
    v5 = v16;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AAF82B0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char v15;
  _BYTE v16[48];

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AF8);
  v3 = (_QWORD *)sub_23B1C70AC();
  sub_23AA724E8((uint64_t)(a1 + 4), (uint64_t)v16, (uint64_t *)&unk_2542E05B0);
  v4 = a1[10];
  v5 = a1[11];
  v6 = sub_23ACD6024((uint64_t)v16);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (uint64_t)v3;
  }
  v8 = v6;
  v9 = (uint64_t)(a1 + 12);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    result = sub_23AA724E8((uint64_t)v16, v3[6] + 48 * v8, (uint64_t *)&unk_2542E05B0);
    v11 = (_QWORD *)(v3[7] + 16 * v8);
    *v11 = v4;
    v11[1] = v5;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v3[2] = v14;
    if (!--v1)
      goto LABEL_8;
    swift_bridgeObjectRetain();
    sub_23AA724E8(v9, (uint64_t)v16, (uint64_t *)&unk_2542E05B0);
    v4 = *(_QWORD *)(v9 + 48);
    v5 = *(_QWORD *)(v9 + 56);
    v8 = sub_23ACD6024((uint64_t)v16);
    v9 += 64;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23AAF83FC(uint64_t a1)
{
  return sub_23AAF8460(a1, &qword_2542DF3B8, (uint64_t (*)(uint64_t))sub_23ACD61DC);
}

unint64_t sub_23AAF8410(uint64_t a1)
{
  return sub_23AAF8460(a1, &qword_2569E1CE0, (uint64_t (*)(uint64_t))sub_23ACD61E8);
}

unint64_t sub_23AAF8424(uint64_t a1)
{
  return sub_23AAF8460(a1, &qword_2569E1CD8, (uint64_t (*)(uint64_t))sub_23ACD61E8);
}

unint64_t sub_23AAF8438(uint64_t a1)
{
  return sub_23AAF8460(a1, &qword_2569E1CD0, (uint64_t (*)(uint64_t))sub_23ACD61DC);
}

unint64_t sub_23AAF844C(uint64_t a1)
{
  return sub_23AAF8460(a1, &qword_2569E1CC8, (uint64_t (*)(uint64_t))sub_23ACD61E8);
}

unint64_t sub_23AAF8460(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v6 = (_QWORD *)sub_23B1C70AC();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v8 = *(i - 1);
      v9 = *i;
      result = a3(v8);
      if ((v11 & 1) != 0)
        break;
      *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v12 = 8 * result;
      *(_QWORD *)(v6[6] + v12) = v8;
      *(_QWORD *)(v6[7] + v12) = v9;
      v13 = v6[2];
      v14 = __OFADD__(v13, 1);
      v15 = v13 + 1;
      if (v14)
        goto LABEL_10;
      v6[2] = v15;
      if (!--v3)
        return (unint64_t)v6;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

void sub_23AAF8534(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C80);
      v3 = sub_23B1C6ED8();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_23B1C7088();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x23B85F860](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_23B1C6C44();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_23B1C6C50();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_23B1C6C50();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_23B1C6C44();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_23B1C6C50();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_23B1C6C50();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_23AAF8890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A60);
    v3 = sub_23B1C6ED8();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = (uint64_t *)(v6 + 16 * v4);
      v8 = *v7;
      v9 = *((unsigned __int8 *)v7 + 8);
      sub_23B1C74A8();
      if (v9)
      {
        sub_23B1C74B4();
        if (v9 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v11 = -1 << *(_BYTE *)(v3 + 32);
      v12 = result & ~v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
      v15 = 1 << v12;
      v16 = *(_QWORD *)(v3 + 48);
      if (((1 << v12) & v14) != 0)
      {
        v17 = ~v11;
        v18 = v9 == 2;
        v19 = v8 == 1 && v9 == 2;
        if (v8)
          v18 = 0;
        do
        {
          v20 = (uint64_t *)(v16 + 16 * v12);
          v21 = *v20;
          v22 = *((unsigned __int8 *)v20 + 8);
          if (v22)
          {
            if (v22 == 1)
            {
              if (v9 == 1 && v21 == v8)
                goto LABEL_3;
            }
            else if (v21)
            {
              if (v19)
                goto LABEL_3;
            }
            else if (v18)
            {
              goto LABEL_3;
            }
          }
          else if (!v9 && (_DWORD)v21 == (_DWORD)v8)
          {
            goto LABEL_3;
          }
          v12 = (v12 + 1) & v17;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
          v15 = 1 << v12;
        }
        while ((v14 & (1 << v12)) != 0);
      }
      *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
      v23 = v16 + 16 * v12;
      *(_QWORD *)v23 = v8;
      *(_BYTE *)(v23 + 8) = v9;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v3 + 16) = v26;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_23AAF8A74(uint64_t a1)
{
  return sub_23AAF8A80(a1, (uint64_t *)&unk_2569E81B0);
}

uint64_t sub_23AAF8A80(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = sub_23B1C6ED8();
    v5 = 0;
    v6 = v4 + 56;
    v32 = v2;
    v33 = a1 + 32;
    while (1)
    {
      v7 = *(void **)(v33 + 8 * v5);
      sub_23B1C63E0();
      sub_23B1C74A8();
      v8 = v7;
      sub_23B1C64A0();
      v9 = sub_23B1C74E4();
      result = swift_bridgeObjectRelease();
      v11 = -1 << *(_BYTE *)(v4 + 32);
      v12 = v9 & ~v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v6 + 8 * (v12 >> 6));
      v15 = 1 << v12;
      if (((1 << v12) & v14) != 0)
      {
        v16 = sub_23B1C63E0();
        v18 = v17;
        if (v16 == sub_23B1C63E0() && v18 == v19)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v21 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
          goto LABEL_4;
        v22 = ~v11;
        while (1)
        {
          v12 = (v12 + 1) & v22;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v6 + 8 * (v12 >> 6));
          v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0)
            break;
          v23 = sub_23B1C63E0();
          v25 = v24;
          if (v23 == sub_23B1C63E0() && v25 == v26)
            goto LABEL_3;
          v28 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v28 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v6 + 8 * v13) = v15 | v14;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v8;
      v29 = *(_QWORD *)(v4 + 16);
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v31;
LABEL_5:
      if (++v5 == v32)
        return v4;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23AAF8CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75A0);
    v3 = sub_23B1C6ED8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_23B1C74A8();
      swift_bridgeObjectRetain();
      sub_23B1C64A0();
      result = sub_23B1C74E4();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_23B1C7388(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_23B1C7388();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

double sub_23AAF8E48(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23AAF8EB8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23AAF8F00(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for wharf(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1650);
}

void type metadata accessor for FPLaunchFPCKType(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2569E1658);
}

void type metadata accessor for FPFSPackageDetectionMode(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1668);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_23AAF8F98(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 28);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_23AAF8FEC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 28) = a2 + 1;
  }
  return result;
}

void type metadata accessor for fpfs_pagetoken(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1670);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1678);
}

uint64_t getEnumTagSinglePayload for UserInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void type metadata accessor for fpfs_io_context_t(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1680);
}

void type metadata accessor for FPCKReason(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1688);
}

void type metadata accessor for FileOperationKind(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1690);
}

void type metadata accessor for FPXPCAutomaticErrorProxyTimeout(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1698);
}

void type metadata accessor for NSFileProviderMaterializationFlags(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2569E16A0);
}

void type metadata accessor for FPProviderDomainID(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542E5508);
}

void type metadata accessor for CFRange(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E16B0);
}

void type metadata accessor for NSFileProviderPage(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542DE748);
}

void type metadata accessor for FPCKOptions(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2569E16B8);
}

void type metadata accessor for BrokenInvariants(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542DF390);
}

void type metadata accessor for FPDVolumeRole(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E16C8);
}

void type metadata accessor for SWCollaborationIdentifier(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E16D8);
}

void type metadata accessor for FPResumeBehavior(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E16E0);
}

void type metadata accessor for FPPauseBehavior(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E16E8);
}

uint64_t getEnumTagSinglePayload for JobSchedulingOrder(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JobSchedulingOrder(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E16F0);
}

void type metadata accessor for NSFileProviderError(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542E1E88);
}

void type metadata accessor for NSFileProviderItemDecorationIdentifier(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2542E3640);
}

void type metadata accessor for NSFileProviderKnownFolders(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E16F8);
}

void type metadata accessor for FPAttachOptions(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1700);
}

void type metadata accessor for NSFileProviderItemFields(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2569E1708);
}

void type metadata accessor for FPDomainState(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2569E1718);
}

void type metadata accessor for NSFileProviderSyncAnchor(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2542E1FC0);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1728);
}

void type metadata accessor for ReadingOptions(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2569E1730);
}

void type metadata accessor for FPIndexDropReason(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1740);
}

void type metadata accessor for FPDomainRemovalMode(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1748);
}

void type metadata accessor for fpfs_tempfile_pattern_t(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2569E1750);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for WeakProxy(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void type metadata accessor for NSFileProviderTypeAndCreator(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542E7558);
}

uint64_t sub_23AAF9344()
{
  return sub_23AA7E38C(&qword_2569E17C0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_23B1CAD4C);
}

uint64_t sub_23AAF9370()
{
  return sub_23AA7E38C(&qword_2569E17C8, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_23B1CAD20);
}

uint64_t sub_23AAF939C()
{
  return sub_23AA7E38C(&qword_2569E17D0, (uint64_t (*)(uint64_t))type metadata accessor for ReadingOptions, (uint64_t)&unk_23B1CAE48);
}

uint64_t sub_23AAF93C8()
{
  return sub_23AA7E38C(&qword_2569E17D8, (uint64_t (*)(uint64_t))type metadata accessor for ReadingOptions, (uint64_t)&unk_23B1CAE14);
}

uint64_t sub_23AAF93F4()
{
  return sub_23AA7E38C(&qword_2569E17E0, (uint64_t (*)(uint64_t))type metadata accessor for ReadingOptions, (uint64_t)&unk_23B1CAE74);
}

uint64_t sub_23AAF9420()
{
  return sub_23AA7E38C(&qword_2569E17E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadingOptions, (uint64_t)&unk_23B1CAEB0);
}

uint64_t sub_23AAF944C()
{
  return sub_23AA7E38C(&qword_2569E17F0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderSyncAnchor, (uint64_t)&unk_23B1CAFE4);
}

uint64_t sub_23AAF9478()
{
  return sub_23AA7E38C(&qword_2569E17F8, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderSyncAnchor, (uint64_t)&unk_23B1CAFB8);
}

uint64_t sub_23AAF94A4()
{
  return sub_23AA7E38C(&qword_2569E1800, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderSyncAnchor, (uint64_t)&unk_23B1CB054);
}

uint64_t sub_23AAF94D0()
{
  return sub_23AA7E38C(&qword_2569E1808, (uint64_t (*)(uint64_t))type metadata accessor for FPDomainState, (uint64_t)&unk_23B1CB140);
}

uint64_t sub_23AAF94FC()
{
  return sub_23AA7E38C(&qword_2569E1810, (uint64_t (*)(uint64_t))type metadata accessor for FPDomainState, (uint64_t)&unk_23B1CB110);
}

uint64_t sub_23AAF9528()
{
  return sub_23AA7E38C(&qword_2569E1818, (uint64_t (*)(uint64_t))type metadata accessor for FPDomainState, (uint64_t)&unk_23B1CB168);
}

uint64_t sub_23AAF9554()
{
  return sub_23AA7E38C(&qword_2569E1820, (uint64_t (*)(uint64_t))type metadata accessor for FPDomainState, (uint64_t)&unk_23B1CB1A0);
}

uint64_t sub_23AAF9580()
{
  return sub_23AA7E38C(&qword_2569E1828, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23B1CB2CC);
}

uint64_t sub_23AAF95AC()
{
  return sub_23AA7E38C((unint64_t *)&unk_2569E1830, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23B1CB2A0);
}

uint64_t sub_23AAF95D8()
{
  return sub_23AA7E38C(&qword_2542DE738, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23B1CB33C);
}

uint64_t sub_23AAF9604()
{
  return sub_23AA7E38C(&qword_2569E1840, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemFields, (uint64_t)&unk_23B1CB42C);
}

uint64_t sub_23AAF9630()
{
  return sub_23AA7E38C(&qword_2569E1848, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemFields, (uint64_t)&unk_23B1CB3F8);
}

uint64_t sub_23AAF965C()
{
  return sub_23AA7E38C(&qword_2569E1850, (uint64_t (*)(uint64_t))type metadata accessor for FPAttachOptions, (uint64_t)&unk_23B1CB590);
}

uint64_t sub_23AAF9688()
{
  return sub_23AA7E38C(&qword_2569E1858, (uint64_t (*)(uint64_t))type metadata accessor for FPAttachOptions, (uint64_t)&unk_23B1CB560);
}

uint64_t sub_23AAF96B4()
{
  return sub_23AA7E38C(&qword_2569E1860, (uint64_t (*)(uint64_t))type metadata accessor for FPAttachOptions, (uint64_t)&unk_23B1CB5B8);
}

uint64_t sub_23AAF96E0()
{
  return sub_23AA7E38C(&qword_2569E1868, (uint64_t (*)(uint64_t))type metadata accessor for FPAttachOptions, (uint64_t)&unk_23B1CB5F0);
}

uint64_t sub_23AAF970C()
{
  return sub_23AA7E38C(&qword_2569E1870, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemDecorationIdentifier, (uint64_t)&unk_23B1CB71C);
}

uint64_t sub_23AAF9738()
{
  return sub_23AA7E38C(&qword_2569E1878, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemDecorationIdentifier, (uint64_t)&unk_23B1CB6F0);
}

uint64_t sub_23AAF9764()
{
  return sub_23AA7E38C(&qword_2569E1880, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemDecorationIdentifier, (uint64_t)&unk_23B1CB78C);
}

uint64_t sub_23AAF9790()
{
  return sub_23AA7E38C(&qword_2542E1E78, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CB848);
}

uint64_t sub_23AAF97BC()
{
  return sub_23AA7E38C(&qword_2542E1E80, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CB874);
}

uint64_t sub_23AAF97E8()
{
  return sub_23AA7E38C(&qword_2569E1888, (uint64_t (*)(uint64_t))type metadata accessor for FPPauseBehavior, (uint64_t)&unk_23B1CB9B4);
}

uint64_t sub_23AAF9814()
{
  return sub_23AA7E38C(&qword_2569E1890, (uint64_t (*)(uint64_t))type metadata accessor for FPResumeBehavior, (uint64_t)&unk_23B1CBA54);
}

uint64_t sub_23AAF9840()
{
  return sub_23AA7E38C(&qword_2569E1898, (uint64_t (*)(uint64_t))type metadata accessor for SWCollaborationIdentifier, (uint64_t)&unk_23B1CBB00);
}

uint64_t sub_23AAF986C()
{
  return sub_23AA7E38C(&qword_2569E18A0, (uint64_t (*)(uint64_t))type metadata accessor for SWCollaborationIdentifier, (uint64_t)&unk_23B1CBAD4);
}

uint64_t sub_23AAF9898()
{
  return sub_23AA7E38C((unint64_t *)&unk_2569E18A8, (uint64_t (*)(uint64_t))type metadata accessor for SWCollaborationIdentifier, (uint64_t)&unk_23B1CBB70);
}

uint64_t sub_23AAF98C4()
{
  return sub_23AA7E38C((unint64_t *)&unk_2542DF380, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, (uint64_t)&unk_23B1CC998);
}

uint64_t sub_23AAF98F0()
{
  return sub_23AA7E38C(&qword_2569E18B8, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, (uint64_t)&unk_23B1CBC64);
}

uint64_t sub_23AAF991C()
{
  return sub_23AA7E38C(&qword_2569E18C0, (uint64_t (*)(uint64_t))type metadata accessor for FPCKOptions, (uint64_t)&unk_23B1CBDC4);
}

uint64_t sub_23AAF9948()
{
  return sub_23AA7E38C(&qword_2569E18C8, (uint64_t (*)(uint64_t))type metadata accessor for FPCKOptions, (uint64_t)&unk_23B1CBD94);
}

uint64_t sub_23AAF9974()
{
  return sub_23AA7E38C(&qword_2569E18D0, (uint64_t (*)(uint64_t))type metadata accessor for FPCKOptions, (uint64_t)&unk_23B1CBDEC);
}

uint64_t sub_23AAF99A0()
{
  return sub_23AA7E38C(&qword_2569E18D8, (uint64_t (*)(uint64_t))type metadata accessor for FPCKOptions, (uint64_t)&unk_23B1CBE24);
}

uint64_t sub_23AAF99CC()
{
  return sub_23AA7E38C(&qword_2569E18E0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderPage, (uint64_t)&unk_23B1CBFB8);
}

uint64_t sub_23AAF99F8()
{
  return sub_23AA7E38C(&qword_2569E18E8, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderPage, (uint64_t)&unk_23B1CBF8C);
}

uint64_t sub_23AAF9A24()
{
  return sub_23AA7E38C(&qword_2569E18F0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderPage, (uint64_t)&unk_23B1CC028);
}

uint64_t sub_23AAF9A50()
{
  return sub_23AA7E38C(&qword_2569E18F8, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_23B1CC10C);
}

uint64_t sub_23AAF9A7C()
{
  return sub_23AA7E38C((unint64_t *)&unk_2569E1900, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_23B1CC0E4);
}

uint64_t sub_23AAF9AA8()
{
  return sub_23AA7E38C(&qword_2542E7518, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_23B1CC174);
}

uint64_t sub_23AAF9AD4()
{
  return sub_23AA7E38C(&qword_2569E1910, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderMaterializationFlags, (uint64_t)&unk_23B1CC258);
}

uint64_t sub_23AAF9B00()
{
  return sub_23AA7E38C(&qword_2569E1918, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderMaterializationFlags, (uint64_t)&unk_23B1CC224);
}

uint64_t sub_23AAF9B2C()
{
  return sub_23AA7E38C(&qword_2569E1920, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderMaterializationFlags, (uint64_t)&unk_23B1CC284);
}

uint64_t sub_23AAF9B58()
{
  return sub_23AA7E38C(&qword_2569E1928, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderMaterializationFlags, (uint64_t)&unk_23B1CC2C0);
}

uint64_t sub_23AAF9B84()
{
  return sub_23AA7E38C(&qword_2569E1930, (uint64_t (*)(uint64_t))type metadata accessor for FileOperationKind, (uint64_t)&unk_23B1CC3F4);
}

uint64_t sub_23AAF9BB0()
{
  return sub_23AA7E38C(&qword_2569E1938, (uint64_t (*)(uint64_t))type metadata accessor for FileOperationKind, (uint64_t)&unk_23B1CC3C8);
}

uint64_t sub_23AAF9BDC()
{
  return sub_23AA7E38C(&qword_2569E1940, (uint64_t (*)(uint64_t))type metadata accessor for FileOperationKind, (uint64_t)&unk_23B1CC464);
}

uint64_t sub_23AAF9C08()
{
  return sub_23AA7E38C(&qword_2569E1948, (uint64_t (*)(uint64_t))type metadata accessor for FPCKReason, (uint64_t)&unk_23B1CC550);
}

uint64_t sub_23AAF9C34()
{
  return sub_23AA7E38C(&qword_2569E1950, (uint64_t (*)(uint64_t))type metadata accessor for FPCKReason, (uint64_t)&unk_23B1CC520);
}

uint64_t sub_23AAF9C60()
{
  return sub_23AA7E38C(&qword_2569E1958, (uint64_t (*)(uint64_t))type metadata accessor for FPCKReason, (uint64_t)&unk_23B1CC578);
}

uint64_t sub_23AAF9C8C()
{
  return sub_23AA7E38C(&qword_2569E1960, (uint64_t (*)(uint64_t))type metadata accessor for FPCKReason, (uint64_t)&unk_23B1CC5B0);
}

uint64_t sub_23AAF9CB8()
{
  return sub_23AA7E38C(&qword_2569E1968, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemCapabilities, (uint64_t)&unk_23B1CC71C);
}

uint64_t sub_23AAF9CE4()
{
  return sub_23AA7E38C(&qword_2569E1970, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemCapabilities, (uint64_t)&unk_23B1CC6E8);
}

uint64_t sub_23AAF9D10()
{
  return sub_23AA7E38C(&qword_2569E1978, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemCapabilities, (uint64_t)&unk_23B1CC748);
}

uint64_t sub_23AAF9D3C()
{
  return sub_23AA7E38C((unint64_t *)&unk_2569E1980, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemCapabilities, (uint64_t)&unk_23B1CC784);
}

uint64_t sub_23AAF9D68()
{
  return sub_23AA7E38C(&qword_2542E7538, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_23B1CC8D0);
}

uint64_t sub_23AAF9D94()
{
  return sub_23AA7E38C(&qword_2569E1990, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemFields, (uint64_t)&unk_23B1CB458);
}

uint64_t sub_23AAF9DC0()
{
  return sub_23AA7E38C(&qword_2569E1998, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemFields, (uint64_t)&unk_23B1CB494);
}

uint64_t sub_23AAF9DEC()
{
  return sub_23AA7E38C(&qword_2569E19A0, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, (uint64_t)&unk_23B1CBC94);
}

uint64_t sub_23AAF9E18()
{
  return sub_23AA7E38C(&qword_2569E19A8, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, (uint64_t)&unk_23B1CBCCC);
}

uint64_t sub_23AAF9E44()
{
  return sub_23AA7E38C((unint64_t *)&unk_2542E1E50, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CB930);
}

uint64_t sub_23AAF9E70()
{
  return sub_23AA7E38C(&qword_2542E1E48, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CB8FC);
}

uint64_t sub_23AAF9E9C()
{
  return sub_23AA7E38C(&qword_2542E1E70, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CB8B8);
}

uint64_t sub_23AAF9EC8()
{
  return sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2542DE768);
}

uint64_t sub_23AAF9F08()
{
  return sub_23AA7E38C(&qword_2542DE760, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA2C);
}

unint64_t sub_23AAF9F38()
{
  unint64_t result;

  result = qword_2542E1E38;
  if (!qword_2542E1E38)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2542E1E38);
  }
  return result;
}

uint64_t sub_23AAF9F7C()
{
  return sub_23AA7E38C((unint64_t *)&unk_2542DE750, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCAA4);
}

uint64_t sub_23AAF9FA8()
{
  return sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
}

unint64_t sub_23AAF9FD4()
{
  unint64_t result;

  result = qword_2569E19E0;
  if (!qword_2569E19E0)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDCDE08], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2569E19E0);
  }
  return result;
}

uint64_t sub_23AAFA018()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23AAFA03C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23AAFA060()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

void sub_23AAFA0F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  sub_23AAD6FEC(v0[6], v0[7], (uint64_t)v0 + ((v5 + 64) & ~v5), v1, v2, v3, v4);
}

uint64_t sub_23AAFA16C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = sub_23B1C60A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v5 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  sub_23AAB47B0(*(_QWORD *)(v0 + v4));

  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

void sub_23AAFA278()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C60A4() - 8) + 80);
  sub_23AAD71CC(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD **)(v0 + 64), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), (_QWORD *)(v0 + ((v4 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v4)));
}

uint64_t sub_23AAFA320(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23AAFA330()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

void sub_23AAFA3D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23AFACB90(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

id sub_23AAFA44C(id result, void *a2, void *a3, char a4)
{
  id v6;
  id v7;
  id v8;

  switch(a4)
  {
    case 0:
    case 3:
    case 4:
      goto LABEL_4;
    case 1:
      v6 = result;
      result = a3;
      goto LABEL_3;
    case 2:
LABEL_3:
      v8 = result;
      v7 = a2;
      result = v8;
LABEL_4:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23AAFA4B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + v3));
  return swift_deallocObject();
}

void sub_23AAFA54C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 32) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_23AADE590(a1, v1 + v3, *(void (**)(void *))(v1 + v4), *(_QWORD *)(v1 + v4 + 8), *(_QWORD *)(v1 + v5), *(unsigned __int8 *)(v1 + v5 + 8), *(unsigned __int8 *)(v1 + v5 + 9), *(_QWORD *)(v1 + ((v5 + 17) & 0xFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23AAFA5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + *(_QWORD *)(v2 + 64) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + v4));
  return swift_deallocObject();
}

void sub_23AAFA65C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_23AADE8F8(a1, *(void (**)(void *))(v1 + 64), *(_QWORD *)(v1 + 72), v1 + v4, *(_QWORD *)(v1 + ((v4 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v4 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v4 + *(_QWORD *)(v3 + 64) + 23) & 0xFFFFFFFFFFFFF8)), v2, *(_QWORD *)(v1 + 56));
}

uint64_t sub_23AAFA6C4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255)
    sub_23AAFCD98(*(id *)(v0 + 16), v1 & 1);
  return swift_deallocObject();
}

uint64_t sub_23AAFA6F8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

void sub_23AAFA734()
{
  sub_23AADDA18();
}

void sub_23AAFA74C(void *a1, char a2)
{
  uint64_t v2;

  sub_23AADE440(a1, a2 & 1, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23AAFA758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((v3 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_23AAB47B0(*(_QWORD *)(v4 + 8));
  return swift_deallocObject();
}

void sub_23AAFA7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_23AADE49C(*(_QWORD *)(v0 + 64), *(void (**)(void *))(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v0 + v3, *(_BYTE *)(v0 + v3 + *(_QWORD *)(v2 + 64)), *(_QWORD *)(((v3 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFF8) + v0 + 8), v1, *(_QWORD *)(v0 + 56));
}

void sub_23AAFA84C(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_23AAFCD98(a1, a2 & 1);
}

id sub_23AAFA870(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_23AAFCDA4(result, a2 & 1);
  return result;
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_23AAFA8C4(void *a1)
{
  uint64_t v1;

  sub_23AADE180(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AAFA8CC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23AAFA8F8(uint64_t a1)
{
  uint64_t v1;

  sub_23AADE048(a1, *(_QWORD *)(v1 + 64), *(NSObject **)(v1 + 72));
}

uint64_t sub_23AAFA928()
{
  uint64_t v0;

  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFA964(uint64_t a1)
{
  uint64_t v1;

  return sub_23AADC22C(a1, *(void (**)(void **))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), *(_QWORD **)(v1 + 48));
}

uint64_t sub_23AAFA974()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFA998(uint64_t a1)
{
  return sub_23AAFAA24(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AADADDC);
}

uint64_t sub_23AAFA9A4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 40));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFA9E8(uint64_t a1)
{
  uint64_t v1;

  sub_23AADB704(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_23AAFAA18(uint64_t a1)
{
  return sub_23AAFAA24(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AADB0D4);
}

uint64_t sub_23AAFAA24(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

void sub_23AAFAA3C(uint64_t a1)
{
  uint64_t v1;

  sub_23AADF720(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t **)(v1 + 40));
}

void type metadata accessor for ItemLookupResult()
{
  JUMPOUT(0x23B861318);
}

void sub_23AAFAA58()
{
  sub_23AADFECC();
}

uint64_t sub_23AAFAA64()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  sub_23AAB47B0(*(_QWORD *)(v0 + v4));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFAB1C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AAD26E4(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23AAFABA8()
{
  return sub_23AABA398((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AACEE68);
}

uint64_t sub_23AAFABC4()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C6C98() - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v7, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_23AAFACD8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  sub_23AACFF30();
}

void sub_23AAFADCC(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_23AAD04C8(a1, *(void (**)(uint64_t, uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56), *(unsigned __int8 *)(v2 + 64), *(unsigned __int8 *)(v2 + 65), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2, *(_QWORD *)(v2 + 40));
}

uint64_t sub_23AAFAE00()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFAE3C(void *a1, char a2)
{
  uint64_t v2;

  sub_23AADBE10(a1, a2 & 1, *(void (**)(_QWORD *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(_QWORD *))(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_23AAFAE70(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 48))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

void sub_23AAFAEA0()
{
  sub_23AACD5F0();
}

uint64_t sub_23AAFAEBC()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

void sub_23AAFAF48()
{
  swift_getAssociatedTypeWitness();
  sub_23AACE81C();
}

uint64_t sub_23AAFAFC8()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

void sub_23AAFB054()
{
  swift_getAssociatedTypeWitness();
  sub_23AACDF84();
}

uint64_t sub_23AAFB0D4(uint64_t a1)
{
  return sub_23AAFB0EC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AACE314);
}

uint64_t sub_23AAFB0E0(uint64_t a1)
{
  return sub_23AAFB0EC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AACE990);
}

uint64_t sub_23AAFB0EC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

void sub_23AAFB104(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[2];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  sub_23AADCDEC(a1, v1[6], v1[7], (uint64_t)v1 + ((v3 + 64) & ~v3), v2, v1[3], v1[4], v1[5]);
}

uint64_t sub_23AAFB128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + v4));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFB1DC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AADD1A0(*(_QWORD **)(v0 + 48), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_87Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23AAFB2AC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_23AADD528(a1, *(void (**)(_QWORD *))(v1 + 48), *(_QWORD *)(v1 + 56), v1 + ((v3 + 64) & ~v3), v2, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23AAFB2D4(uint64_t a1)
{
  return sub_23AAFCB80(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AAD4634);
}

uint64_t sub_23AAFB2E4(uint64_t a1)
{
  return sub_23AAFCC78(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAD5E20);
}

uint64_t sub_23AAFB2F4(uint64_t a1)
{
  return sub_23AAFCC78(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAD545C);
}

void sub_23AAFB304()
{
  sub_23AAFB4B8();
}

uint64_t sub_23AAFB310()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFB334()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  sub_23AAB47B0(*(_QWORD *)(v0 + v4));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFB3EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AAD11E8(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_105Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 56));
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFB4AC()
{
  sub_23AAFB4B8();
}

void sub_23AAFB4B8()
{
  sub_23AAD6688();
}

uint64_t sub_23AAFB4EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + v4));
  return swift_deallocObject();
}

void sub_23AAFB588()
{
  sub_23AADEC80();
}

uint64_t sub_23AAFB5DC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 56));
  return swift_deallocObject();
}

void sub_23AAFB610(uint64_t a1)
{
  uint64_t v1;

  sub_23AADF1B4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23AAFB620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = type metadata accessor for TelemetrySignpost(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = v2 + *(int *)(type metadata accessor for TelemetrySignposter(0) + 24);
    v5 = sub_23B1C5DEC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFB700(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (char *)v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_23AAD7C04(a1, (uint64_t)v1 + v7, *(uint64_t (**)(uint64_t))v8, *((_QWORD *)v8 + 1), v3, v4, v5);
}

uint64_t sub_23AAFB780()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  sub_23AAB47B0(*(_QWORD *)(v0 + 48));
  v4 = type metadata accessor for TelemetrySignpost(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    v5 = v0 + v2 + *(int *)(type metadata accessor for TelemetrySignposter(0) + 24);
    v6 = sub_23B1C5DEC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

char *sub_23AAFB8AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v5 + 31) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AAD7E94(a1, *(_QWORD *)(v1 + 48), v1 + v4, *(void (**)(_QWORD *))(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(unsigned __int8 *)(v1 + v6 + 16), *(_QWORD **)(v1 + v7), *(_QWORD **)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(char *, uint64_t, uint64_t))(v1 + v8), *(void (**)(char *))(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_23AAFB968()
{
  uint64_t v0;

  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

void sub_23AAFB994()
{
  sub_23AAE5650();
}

uint64_t sub_23AAFB9AC(uint64_t a1)
{
  return sub_23AAFD6DC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAE19A0);
}

void _s14LookupBehaviorOMa()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AAFB9C8(uint64_t a1, char a2)
{
  return sub_23AAFC68C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAE2354);
}

uint64_t sub_23AAFB9D8(uint64_t a1)
{
  return sub_23AAFC7FC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAE3930);
}

void sub_23AAFB9E4()
{
  type metadata accessor for ItemLookupResult();
}

uint64_t sub_23AAFBA0C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 1, 1, a1);
}

uint64_t sub_23AAFBA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 72));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFBAD0()
{
  sub_23AAE5090();
}

void sub_23AAFBB30(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_23AAE5D7C(a1, v2[6], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_23AAFBB40()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
  swift_release();

  return swift_deallocObject();
}

void sub_23AAFBC00()
{
  sub_23AAD88F0();
}

uint64_t sub_23AAFBC9C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + v3));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23AAFBD5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 31) & 0xFFFFFFFFFFFFFFF8;
  sub_23AAD9318(a1, v1 + v3, *(void (**)(char *))(v1 + v4), *(_QWORD *)(v1 + v4 + 8), *(NSObject **)(v1 + v5), *(_QWORD **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD **)(v1 + v6), *(_BYTE *)(v1 + v6 + 8), *(_BYTE *)(v1 + v6 + 9), *(_QWORD *)(v1 + ((v6 + 17) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AAFBDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 96));

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23AAFBE84(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return sub_23AADA268(a1, *(void (**)(uint64_t *))(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(NSObject **)(v1 + 72), *(_QWORD **)(v1 + 80), *(unsigned __int8 *)(v1 + 88), *(unsigned __int8 *)(v1 + 89), *(_QWORD *)(v1 + 96), *(void **)(v1 + 104), v1 + ((v2 + 112) & ~v2));
}

uint64_t sub_23AAFBED8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v51 = *(_QWORD *)(a1 + 24);
  v52 = *(_QWORD *)(a1 + 16);
  v49 = *(_QWORD *)(a1 + 40);
  v50 = *(_QWORD *)(a1 + 32);
  v47 = *(_QWORD *)(a1 + 56);
  v48 = *(_QWORD *)(a1 + 48);
  v45 = *(_QWORD *)(a1 + 72);
  v46 = *(_QWORD *)(a1 + 64);
  v43 = *(_OWORD *)(a1 + 96);
  v44 = *(_OWORD *)(a1 + 80);
  v42 = *(_OWORD *)(a1 + 112);
  v38 = *(_OWORD *)(a1 + 144);
  v39 = *(_OWORD *)(a1 + 128);
  v36 = *(_OWORD *)(a1 + 176);
  v37 = *(_OWORD *)(a1 + 160);
  v34 = *(_OWORD *)(a1 + 192);
  v32 = *(_OWORD *)(a1 + 208);
  v30 = *(_OWORD *)(a1 + 224);
  v28 = *(_OWORD *)(a1 + 240);
  v26 = *(_OWORD *)(a1 + 256);
  v24 = *(_OWORD *)(a1 + 272);
  v22 = *(_OWORD *)(a1 + 288);
  v20 = *(_OWORD *)(a1 + 304);
  v18 = *(_OWORD *)(a1 + 320);
  v17 = *(_OWORD *)(a1 + 336);
  v15 = *(_OWORD *)(a1 + 368);
  v16 = *(_OWORD *)(a1 + 352);
  v14 = *(_OWORD *)(a1 + 384);
  v2 = *(_QWORD *)(a1 + 616);
  v40 = *(void **)(a1 + 632);
  v41 = *(_QWORD *)(a1 + 624);
  v3 = *(void **)(a1 + 640);
  v4 = *(_QWORD *)(a1 + 648);
  v5 = *(_QWORD *)(a1 + 656);
  v6 = *(_QWORD *)(a1 + 664);
  v7 = *(_QWORD *)(a1 + 672);
  v35 = *(_OWORD *)(a1 + 680);
  v33 = *(_OWORD *)(a1 + 696);
  v31 = *(_OWORD *)(a1 + 712);
  v29 = *(_OWORD *)(a1 + 728);
  v27 = *(_OWORD *)(a1 + 744);
  v25 = *(_OWORD *)(a1 + 760);
  v23 = *(_OWORD *)(a1 + 776);
  v21 = *(_OWORD *)(a1 + 792);
  v19 = *(_OWORD *)(a1 + 808);
  v12 = *(_OWORD *)(a1 + 416);
  v13 = *(_OWORD *)(a1 + 400);
  v10 = *(_OWORD *)(a1 + 448);
  v11 = *(_OWORD *)(a1 + 432);
  v9 = *(_OWORD *)(a1 + 464);
  sub_23AA88218(*(id *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  sub_23AA88348(v52, v51, v50, v49, v48, v47, v46, v45, v44, *((uint64_t *)&v44 + 1), v43, *((uint64_t *)&v43 + 1), v42, *((uint64_t *)&v42 + 1), v39, *((uint64_t *)&v39 + 1), v38, *((uint64_t *)&v38 + 1), (void *)v37,
    *((void **)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v34,
    *((unint64_t *)&v34 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    (void *)v28,
    *((uint64_t *)&v28 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v22,
    *((unint64_t *)&v22 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((void **)&v16 + 1),
    (void *)v15,
    SBYTE8(v15),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((void **)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9);
  sub_23AA88224(v2, v41, v40, v3, v4, v5, v6, v7, v35, *((uint64_t *)&v35 + 1), v33, *((uint64_t *)&v33 + 1), (void *)v31, *((uint64_t *)&v31 + 1), v29, *((uint64_t *)&v29 + 1), v27, *((uint64_t *)&v27 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v19);
  return a1;
}

uint64_t sub_23AAFC1C8(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAE54C4(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23AAFC1D4()
{
  uint64_t v0;

  sub_23AAB47B0(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23AAFC1FC(uint64_t a1)
{
  return sub_23AAFD6DC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAE0D84);
}

uint64_t sub_23AAFC20C(void *a1)
{
  uint64_t v1;

  return sub_23AAECAA0(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_23AAFC218(uint64_t a1)
{
  uint64_t v1;

  return sub_23AADF360(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23AAFC22C(void *a1)
{
  uint64_t v1;

  return sub_23AADFB04(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_23AAFC23C()
{
  sub_23AAFD604();
}

uint64_t sub_23AAFC250(_QWORD *a1)
{
  uint64_t v1;

  return sub_23AFBC848(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_23AAFC25C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23AAFC288(uint64_t a1)
{
  uint64_t v1;

  return sub_23AACFD84(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48), *(_BYTE *)(v1 + 56), *(unsigned __int8 *)(v1 + 57));
}

uint64_t sub_23AAFC2A4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 448);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_23AAFC2BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  id v9;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v11 = *(void **)(a1 + 112);
  v12 = *(void **)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 136);
  v15 = *(_QWORD *)(a1 + 128);
  v13 = *(_QWORD *)(a1 + 144);
  v16 = *(void **)(a1 + 184);
  v7 = *(_BYTE *)(a1 + 120);
  v8 = *(id *)a1;
  sub_23AAAE5C0(v2, v3, v4, v5, v6);
  sub_23AAAE478(v12, v11, v7);
  sub_23AAAE4B4(v15, v14, v13);
  v9 = v16;
  return a1;
}

uint64_t sub_23AAFC3AC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v3 = *(void **)(a1 + 144);
  v2 = *(void **)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 168);
  v5 = *(_QWORD *)(a1 + 184);
  v10 = *(void **)(a1 + 224);
  v11 = *(void **)(a1 + 240);
  v15 = *(_QWORD *)(a1 + 280);
  v16 = *(_QWORD *)(a1 + 272);
  v13 = *(_QWORD *)(a1 + 296);
  v14 = *(_QWORD *)(a1 + 288);
  v12 = *(_QWORD *)(a1 + 304);
  v17 = *(void **)(a1 + 352);
  v18 = *(void **)(a1 + 344);
  v20 = *(_QWORD *)(a1 + 376);
  v21 = *(_QWORD *)(a1 + 368);
  v19 = *(_QWORD *)(a1 + 384);
  v22 = *(void **)(a1 + 424);
  v6 = *(_BYTE *)(a1 + 160);
  v9 = *(_BYTE *)(a1 + 360);
  sub_23AAAEE68(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_23AAAEE10(v3, v2, v6);
  sub_23AAAEE4C(v8, v4, v5);

  sub_23AAAE4D0(v16, v15, v14, v13, v12);
  sub_23AAAEE10(v18, v17, v9);
  sub_23AAAEE4C(v21, v20, v19);
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_23AAFC540(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v9 = *(void **)(a1 + 112);
  v10 = *(void **)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 144);
  v14 = *(void **)(a1 + 184);
  v7 = *(_BYTE *)(a1 + 120);

  sub_23AAAE4D0(v2, v3, v4, v5, v6);
  sub_23AAAEE10(v10, v9, v7);
  sub_23AAAEE4C(v13, v12, v11);

  return a1;
}

uint64_t sub_23AAFC630(uint64_t result)
{
  *(_BYTE *)(result + 120) = 0;
  return result;
}

uint64_t objectdestroy_136Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 48));

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFC680(uint64_t a1, char a2)
{
  return sub_23AAFC68C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAE219C);
}

uint64_t sub_23AAFC68C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(a1, a2 & 1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(unsigned __int8 *)(v3 + 41), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72));
}

uint64_t sub_23AAFC6D4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t objectdestroy_78Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFC738()
{
  uint64_t v0;

  sub_23AACD21C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void (**)(void))(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_23AAFC754(void *a1)
{
  uint64_t v1;
  void (*v3)(void **);
  id v4;
  void *v5;
  char v6;

  v3 = *(void (**)(void **))(v1 + 16);
  v5 = a1;
  v6 = 1;
  v4 = a1;
  v3(&v5);

}

uint64_t objectdestroy_139Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23AAFC7F0(uint64_t a1)
{
  return sub_23AAFC7FC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAE2714);
}

uint64_t sub_23AAFC7FC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(unsigned __int8 *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_23AAFC840()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 40));
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23AAFCABC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_23AAE4AC8(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), v1 + v4, *(_QWORD *)v5, *(unsigned __int8 *)(v5 + 8), *(_BYTE *)(v5 + 9));
}

uint64_t objectdestroy_96Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 24));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFCB74(uint64_t a1)
{
  return sub_23AAFCB80(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AAD3DA4);
}

uint64_t sub_23AAFCB80(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  uint64_t v2;
  char v4;

  v4 = *(_BYTE *)(v2 + 65);
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(_QWORD *)(v2 + 56), *(unsigned __int8 *)(v2 + 64), v4);
}

uint64_t sub_23AAFCBC4(uint64_t a1)
{
  return sub_23AAFCC78(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAD591C);
}

uint64_t sub_23AAFCBD0()
{
  uint64_t v0;

  sub_23AAB47B0(*(_QWORD *)(v0 + 24));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFCC0C()
{
  uint64_t v0;

  sub_23AAD0CBC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t objectdestroy_99Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 24));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFCC6C(uint64_t a1)
{
  return sub_23AAFCC78(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAD4F5C);
}

uint64_t sub_23AAFCC78(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(unsigned __int8 *)(v2 + 57));
}

uint64_t sub_23AAFCC9C(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAD62C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), "finished post-propagation VFS lookup for %s reason %s: %s");
}

uint64_t objectdestroy_287Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFCCFC(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAD62C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), "finished post-propagation VFS lookup for %s request %s: %s");
}

uint64_t sub_23AAFCD24()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23AAFCD50(uint64_t a1)
{
  uint64_t v1;

  sub_23AACE6F0(*(id *)a1, *(_BYTE *)(a1 + 8), *(void (**)(id, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_23AAFCD68()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFCD8C(uint64_t a1)
{
  uint64_t v1;

  sub_23AAEEC18(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

void sub_23AAFCD98(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

id sub_23AAFCDA4(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

uint64_t sub_23AAFCDB0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFCDE4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B091D20(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t objectdestroy_154Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t objectdestroy_53Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFCE60(uint64_t *a1)
{
  uint64_t v1;

  return sub_23AAE96B4(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_23AAFCE78(void *a1)
{
  uint64_t v1;

  sub_23AC02318(a1, *(void (**)(id))(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_23AAFCEA0()
{
  return swift_deallocObject();
}

uint64_t sub_23AAFCEBC()
{
  return sub_23AAFE020();
}

_QWORD *sub_23AAFCED0()
{
  return sub_23AAFDD60();
}

unint64_t sub_23AAFCEE8()
{
  unint64_t result;

  result = qword_2569E1D50;
  if (!qword_2569E1D50)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D3E40, &type metadata for MaterializationError);
    atomic_store(result, (unint64_t *)&qword_2569E1D50);
  }
  return result;
}

uint64_t sub_23AAFCF2C(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_23AAFCF50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v9 = *(void **)(a1 + 112);
  v10 = *(void **)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 136);
  v14 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 144);
  v16 = *(void **)(a1 + 184);
  v25 = *(_QWORD *)(a1 + 248);
  v26 = *(_QWORD *)(a1 + 240);
  v23 = *(_QWORD *)(a1 + 264);
  v24 = *(_QWORD *)(a1 + 256);
  v21 = *(_QWORD *)(a1 + 280);
  v22 = *(_QWORD *)(a1 + 272);
  v19 = *(_QWORD *)(a1 + 296);
  v20 = *(_QWORD *)(a1 + 288);
  v15 = *(_OWORD *)(a1 + 304);
  v17 = *(void **)(a1 + 352);
  v18 = *(void **)(a1 + 344);
  v28 = *(_QWORD *)(a1 + 376);
  v29 = *(_QWORD *)(a1 + 368);
  v27 = *(_QWORD *)(a1 + 384);
  v30 = *(void **)(a1 + 424);
  v7 = *(_BYTE *)(a1 + 120);
  v11 = *(_BYTE *)(a1 + 360);

  sub_23AAAE4D0(v2, v3, v4, v5, v6);
  sub_23AAAEE10(v10, v9, v7);
  sub_23AAAEE4C(v14, v13, v12);

  sub_23AAAEE68(v26, v25, v24, v23, v22, v21, v20, v19, v15);
  sub_23AAAEE10(v18, v17, v11);
  sub_23AAAEE4C(v29, v28, v27);
  swift_bridgeObjectRelease();

  return a1;
}

void sub_23AAFD130()
{
  uint64_t v0;

  sub_23AAE938C(*(_QWORD *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23AAFD140()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_release();
  v22 = v3;
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[7];
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  swift_bridgeObjectRelease();
  v14 = v4 + v1[8];
  v15 = *(void **)(v14 + 16);
  if (v15 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v14 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = v4 + v1[12];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = sub_23B1C5A08();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  sub_23AAB47B0(*(_QWORD *)(v0 + ((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

void sub_23AAFD3B4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_23AAE8A4C(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AAFD40C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFD438()
{
  uint64_t v0;

  sub_23AAE683C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_23AAFD448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C60A4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 56));

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23AAFD4D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23B1C60A4() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23AAE6960(*(_BYTE **)(v0 + 16), *(void (**)(void *))(v0 + 24), *(void (**)(void))(v0 + 32), *(_QWORD **)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

double sub_23AAFD540(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_23AAFD574()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

unint64_t sub_23AAFD5A0()
{
  uint64_t v0;

  return sub_23ADF47B0(*(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t objectdestroy_188Tm()
{
  uint64_t v0;

  sub_23AAB47B0(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFD604()
{
  uint64_t v0;

  sub_23AAD21E0(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_23AAFD638(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC82444(a1, *(uint64_t (**)(_QWORD, uint64_t))(v1 + 16));
}

uint64_t objectdestroy_362Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 40));

  return swift_deallocObject();
}

void sub_23AAFD680(uint64_t a1)
{
  uint64_t v1;

  sub_23AAE770C(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t objectdestroy_133Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 48));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23AAFD6DC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(unsigned __int8 *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t objectdestroy_66Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t objectdestroy_382Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);
  swift_release();
  v22 = v3;
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[7];
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  swift_bridgeObjectRelease();
  v14 = v4 + v1[8];
  v15 = *(void **)(v14 + 16);
  if (v15 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v14 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = v4 + v1[12];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = sub_23B1C5A08();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  sub_23AAB47B0(*(_QWORD *)(v0 + ((v22 + v21 + 7) & 0xFFFFFFFFFFFFF8)));
  swift_release();

  return swift_deallocObject();
}

void sub_23AAFD9EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  sub_23AAE8704(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_388Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + v1[7];
  v4 = (int *)type metadata accessor for ItemMetadata();
  v5 = v3 + v4[7];
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v3 + v4[33]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_23AAAE53C(*v10, v11);
  swift_bridgeObjectRelease();
  v12 = v2 + v1[8];
  v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = v2 + v1[12];
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = sub_23B1C5A08();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AAFDCF0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_23AAE8D88(v0 + v2, *(void (**)(void *))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t))(v0 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

_QWORD *sub_23AAFDD60()
{
  uint64_t v0;

  return sub_23AAE8B8C(*(_QWORD *)(v0 + 16), **(void ***)(v0 + 24), *(_BYTE *)(v0 + 32), *(BOOL **)(v0 + 40), *(_QWORD *)(v0 + 48), *(BOOL **)(v0 + 56));
}

uint64_t objectdestroy_395Tm()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70);
  v1 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80));
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for VFSItem(0);
  v3 = v1 + v2[7];
  v4 = (int *)type metadata accessor for ItemMetadata();
  v5 = v3 + v4[7];
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v3 + v4[33]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_23AAAE53C(*v10, v11);
  swift_bridgeObjectRelease();
  v12 = v1 + v2[8];
  v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = v1 + v2[12];
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = sub_23B1C5A08();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AAFE020()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E0F70) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AAE84DC(v0 + v2, *(_QWORD *)(v0 + v3), *(uint64_t (**)(_QWORD))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_413Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void type metadata accessor for FPImportStatus(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1D70);
}

void type metadata accessor for FPDiagnosticAttributeKey(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1D78);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1D80);
}

void type metadata accessor for NSFileProviderDisconnectOptions(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1D88);
}

void type metadata accessor for FPPreflightAction(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1D90);
}

void type metadata accessor for NSFileProviderDeleteItemOptions(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1D98);
}

void type metadata accessor for NSFileProviderCreateItemOptions(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1DA0);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1DA8);
}

void type metadata accessor for NSFileProviderDomainIdentifier(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1DB0);
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1DB8);
}

void type metadata accessor for ProgressUserInfoKey(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1DC0);
}

void type metadata accessor for CSIndexReason(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1DC8);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1DD0);
}

void type metadata accessor for wharf_step(uint64_t a1)
{
  sub_23AAAC888(a1, qword_2569E1DD8);
}

uint64_t sub_23AAFE1D0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for MaterializationStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23AAFE268(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23AAFE2B4 + 4 * byte_23B1CA7F4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23AAFE2E8 + 4 * byte_23B1CA7EF[v4]))();
}

uint64_t sub_23AAFE2E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AAFE2F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AAFE2F8);
  return result;
}

uint64_t sub_23AAFE304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AAFE30CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23AAFE310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AAFE318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AAFE324(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23AAFE32C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t sub_23AAFE334()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23AAFE33C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_23B1C6C98();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23AAFE3F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  _BYTE *v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = (v7 + v11) & ~v11;
  if (*(_DWORD *)(v9 + 84))
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  v15 = v14 + v13 + 2;
  v16 = *(_DWORD *)(v6 + 80) | v10;
  v17 = (*(_BYTE *)(v6 + 80) | v10);
  v18 = v16 & 0x100000;
  if (v17 > 7 || v18 != 0 || v15 > 0x18)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  else
  {
    v22 = AssociatedTypeWitness;
    v23 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v24 = (const void *)(((unint64_t)a2 + v12) & v23);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v24, 1, v22))
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v23), v24, v14);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v23, v24, v22);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v12) & v23, 0, 1, v22);
    }
    v25 = (_BYTE *)(v14 + (((unint64_t)a1 + v12) & v23));
    *v25 = *((_BYTE *)v24 + v14);
    v25[1] = *((_BYTE *)v24 + v14 + 1);
  }
  return a1;
}

uint64_t sub_23AAFE564(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, AssociatedTypeWitness);
  return result;
}

uint64_t sub_23AAFE60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  char *v16;
  char *v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (char *)((v6 + v9 + a1) & ~v9);
  v11 = (char *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v11, 1, AssociatedTypeWitness))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, AssociatedTypeWitness);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = &v10[v15];
  v17 = &v11[v15];
  *v16 = *v17;
  v16[1] = v17[1];
  return a1;
}

uint64_t sub_23AAFE724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  size_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (char *)((v6 + v9 + a1) & ~v9);
  v11 = (char *)((v6 + v9 + a2) & ~v9);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, AssociatedTypeWitness);
  v13 = v12(v11, 1, AssociatedTypeWitness);
  if ((_DWORD)v6)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v10, v11, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  v16 = &v10[v15];
  v17 = &v11[v15];
  *v16 = *v17;
  v16[1] = v17[1];
  return a1;
}

uint64_t sub_23AAFE888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  char *v16;
  char *v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (char *)((v6 + v9 + a1) & ~v9);
  v11 = (char *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v11, 1, AssociatedTypeWitness))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, AssociatedTypeWitness);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = &v10[v15];
  v17 = &v11[v15];
  *v16 = *v17;
  v16[1] = v17[1];
  return a1;
}

uint64_t sub_23AAFE9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  size_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (char *)((v6 + v9 + a1) & ~v9);
  v11 = (char *)((v6 + v9 + a2) & ~v9);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, AssociatedTypeWitness);
  v13 = v12(v11, 1, AssociatedTypeWitness);
  if ((_DWORD)v6)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v10, v11, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  v16 = &v10[v15];
  v17 = &v11[v15];
  *v16 = *v17;
  v16[1] = v17[1];
  return a1;
}

uint64_t sub_23AAFEB04(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  int v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = v10;
  if (v11 <= 0xFE)
    v11 = 254;
  v12 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v12;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v6 + 64) + v13;
  if (a2 > v11)
  {
    v15 = v12 + (v14 & ~v13) + 2;
    v16 = 8 * v15;
    if (v15 > 3)
      goto LABEL_14;
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v18 >= 2)
    {
LABEL_14:
      v17 = *(unsigned __int8 *)(a1 + v15);
      if (!*(_BYTE *)(a1 + v15))
        goto LABEL_30;
LABEL_21:
      v19 = (v17 - 1) << v16;
      if (v15 > 3)
        v19 = 0;
      if ((_DWORD)v12 + (v14 & ~(_DWORD)v13) != -2)
      {
        if (v15 <= 3)
          v20 = v12 + (v14 & ~(_DWORD)v13) + 2;
        else
          v20 = 4;
        __asm { BR              X12 }
      }
      v25 = v11 + v19;
      return (v25 + 1);
    }
  }
LABEL_30:
  if ((_DWORD)v7 == v11)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v22 = (v14 + a1) & ~v13;
  if (v10 != v11)
  {
    v24 = *(unsigned __int8 *)(v22 + v12);
    if (v24 < 2)
      return 0;
    v25 = (v24 + 2147483646) & 0x7FFFFFFF;
    return (v25 + 1);
  }
  if (v9 < 2)
    return 0;
  v23 = (*(uint64_t (**)(uint64_t))(v8 + 48))(v22);
  if (v23 >= 2)
    return v23 - 1;
  else
    return 0;
}

void sub_23AAFED0C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  if (v13 <= 0xFE)
    v14 = 254;
  else
    v14 = v13;
  v15 = *(unsigned __int8 *)(v10 + 80);
  v17 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v17;
  v16 = *(_QWORD *)(v7 + 64) + v15;
  v18 = v17 + (v16 & ~(_DWORD)v15) + 2;
  if (a3 > v14)
  {
    if (v18 > 3)
    {
      v9 = 1u;
      if (v14 >= a2)
LABEL_27:
        __asm { BR              X16 }
LABEL_20:
      v20 = ~v14 + a2;
      if (v18 < 4)
      {
        if ((_DWORD)v17 + (v16 & ~(_DWORD)v15) != -2)
        {
          v21 = v20 & ~(-1 << (8 * v18));
          bzero(a1, v17 + (v16 & ~v15) + 2);
          if (v18 == 3)
          {
            *(_WORD *)a1 = v21;
            a1[2] = BYTE2(v21);
          }
          else if (v18 == 2)
          {
            *(_WORD *)a1 = v21;
          }
          else
          {
            *a1 = v21;
          }
        }
      }
      else
      {
        bzero(a1, v17 + (v16 & ~v15) + 2);
        *(_DWORD *)a1 = v20;
      }
      __asm { BR              X10 }
    }
    v19 = ((a3 - v14 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v19))
    {
      v9 = 4u;
      if (v14 >= a2)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v19 >= 0x100)
      v9 = 2;
    else
      v9 = v19 > 1;
  }
  if (v14 >= a2)
    goto LABEL_27;
  goto LABEL_20;
}

void sub_23AAFEF4C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23AAFEF54()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void type metadata accessor for PQLSynchronousMode(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1E60);
}

void type metadata accessor for OSLogType(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1E68);
}

void type metadata accessor for PQLSqliteError(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1E70);
}

void type metadata accessor for PQLPerformFlags(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1E78);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1E80);
}

void type metadata accessor for FPProviderID(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1E88);
}

void type metadata accessor for fpfs_item_type(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1E90);
}

void type metadata accessor for URLFileProtection(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1E98);
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FPDVolumeStats(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FPDVolumeStats(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

void type metadata accessor for fpfs_item_handle(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1EA0);
}

void *__swift_memcpy1048_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x418uLL);
}

uint64_t sub_23AAFF0A0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 1048))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23AAFF0C0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 1048) = v3;
  return result;
}

void type metadata accessor for dirent(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E1EA8);
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t sub_23AAFF21C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 280))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 224);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_23AAFF270(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 280) = 0;
    if (a2)
      *(_BYTE *)(result + 224) = a2 + 1;
  }
  return result;
}

void type metadata accessor for fpfs_fileattrs(uint64_t a1)
{
  sub_23AAAC888(a1, (unint64_t *)&unk_2569E1EB0);
}

uint64_t sub_23AAFF310()
{
  return sub_23AA7E38C(&qword_2569E1EC0, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_23B1CCE7C);
}

uint64_t sub_23AAFF33C()
{
  return sub_23AA7E38C(&qword_2569E1EC8, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_23B1CCE50);
}

uint64_t sub_23AAFF368()
{
  return sub_23AA7E38C(&qword_2569E1ED0, (uint64_t (*)(uint64_t))type metadata accessor for URLFileProtection, (uint64_t)&unk_23B1CCEEC);
}

uint64_t sub_23AAFF394()
{
  return sub_23AA7E38C(&qword_2569E1ED8, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_23B1CD030);
}

uint64_t sub_23AAFF3C0()
{
  return sub_23AA7E38C(&qword_2569E1EE0, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_23B1CD008);
}

uint64_t sub_23AAFF3EC()
{
  return sub_23AA7E38C(&qword_2569E1EE8, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_23B1CD098);
}

uint64_t sub_23AAFF418()
{
  return sub_23AA7E38C(&qword_2569E1EF0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23B1CD174);
}

uint64_t sub_23AAFF444()
{
  return sub_23AA7E38C(&qword_2569E1EF8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23B1CD148);
}

uint64_t sub_23AAFF470()
{
  return sub_23AA7E38C(&qword_2569E1F00, (uint64_t (*)(uint64_t))type metadata accessor for PQLPerformFlags, (uint64_t)&unk_23B1CD28C);
}

uint64_t sub_23AAFF49C()
{
  return sub_23AA7E38C(&qword_2569E1F08, (uint64_t (*)(uint64_t))type metadata accessor for PQLPerformFlags, (uint64_t)&unk_23B1CD25C);
}

uint64_t sub_23AAFF4C8()
{
  return sub_23AA7E38C(&qword_2569E1F10, (uint64_t (*)(uint64_t))type metadata accessor for PQLPerformFlags, (uint64_t)&unk_23B1CD2B4);
}

uint64_t sub_23AAFF4F4()
{
  return sub_23AA7E38C(&qword_2569E1F18, (uint64_t (*)(uint64_t))type metadata accessor for PQLPerformFlags, (uint64_t)&unk_23B1CD2EC);
}

uint64_t sub_23AAFF520()
{
  return sub_23AA7E38C(&qword_2569E1F20, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CD3EC);
}

uint64_t sub_23AAFF54C()
{
  return sub_23AA7E38C(&qword_2569E1F28, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CD414);
}

void sub_23AAFF578()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23AAFF588()
{
  return sub_23AA7E38C(&qword_2569E1F30, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_23B1CD698);
}

uint64_t sub_23AAFF5B4()
{
  return sub_23AA7E38C(&qword_2569E1F38, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_23B1CD66C);
}

uint64_t sub_23AAFF5E0()
{
  return sub_23AA7E38C(&qword_2569E1F40, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDomainIdentifier, (uint64_t)&unk_23B1CD7E8);
}

uint64_t sub_23AAFF60C()
{
  return sub_23AA7E38C(&qword_2569E1F48, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDomainIdentifier, (uint64_t)&unk_23B1CD7BC);
}

uint64_t sub_23AAFF638()
{
  return sub_23AA7E38C(&qword_2569E1F50, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDomainIdentifier, (uint64_t)&unk_23B1CD858);
}

uint64_t sub_23AAFF664()
{
  return sub_23AA7E38C(&qword_2569E1F58, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderCreateItemOptions, (uint64_t)&unk_23B1CD9A8);
}

uint64_t sub_23AAFF690()
{
  return sub_23AA7E38C(&qword_2569E1F60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderCreateItemOptions, (uint64_t)&unk_23B1CD974);
}

uint64_t sub_23AAFF6BC()
{
  return sub_23AA7E38C(&qword_2569E1F68, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderCreateItemOptions, (uint64_t)&unk_23B1CD9D4);
}

uint64_t sub_23AAFF6E8()
{
  return sub_23AA7E38C(&qword_2569E1F70, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderCreateItemOptions, (uint64_t)&unk_23B1CDA10);
}

uint64_t sub_23AAFF714()
{
  return sub_23AA7E38C(&qword_2569E1F78, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDeleteItemOptions, (uint64_t)&unk_23B1CDB4C);
}

uint64_t sub_23AAFF740()
{
  return sub_23AA7E38C(&qword_2569E1F80, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDeleteItemOptions, (uint64_t)&unk_23B1CDB18);
}

uint64_t sub_23AAFF76C()
{
  return sub_23AA7E38C(&qword_2569E1F88, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDeleteItemOptions, (uint64_t)&unk_23B1CDB78);
}

uint64_t sub_23AAFF798()
{
  return sub_23AA7E38C(&qword_2569E1F90, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDeleteItemOptions, (uint64_t)&unk_23B1CDBB4);
}

uint64_t sub_23AAFF7C4()
{
  return sub_23AA7E38C(&qword_2569E1F98, (uint64_t (*)(uint64_t))type metadata accessor for FPPreflightAction, (uint64_t)&unk_23B1CDCE4);
}

uint64_t sub_23AAFF7F0()
{
  return sub_23AA7E38C(&qword_2569E1FA0, (uint64_t (*)(uint64_t))type metadata accessor for FPPreflightAction, (uint64_t)&unk_23B1CDCBC);
}

uint64_t sub_23AAFF81C()
{
  return sub_23AA7E38C(&qword_2569E1FA8, (uint64_t (*)(uint64_t))type metadata accessor for FPPreflightAction, (uint64_t)&unk_23B1CDD4C);
}

uint64_t sub_23AAFF848()
{
  return sub_23AA7E38C(&qword_2569E1FB0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDisconnectOptions, (uint64_t)&unk_23B1CDE2C);
}

uint64_t sub_23AAFF874()
{
  return sub_23AA7E38C(&qword_2569E1FB8, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDisconnectOptions, (uint64_t)&unk_23B1CDDFC);
}

uint64_t sub_23AAFF8A0()
{
  return sub_23AA7E38C(&qword_2569E1FC0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDisconnectOptions, (uint64_t)&unk_23B1CDE54);
}

uint64_t sub_23AAFF8CC()
{
  return sub_23AA7E38C(&qword_2569E1FC8, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderDisconnectOptions, (uint64_t)&unk_23B1CDE8C);
}

uint64_t sub_23AAFF8F8()
{
  return sub_23AA7E38C(&qword_2569E1FD0, (uint64_t (*)(uint64_t))type metadata accessor for FPDiagnosticAttributeKey, (uint64_t)&unk_23B1CDFB4);
}

uint64_t sub_23AAFF924()
{
  return sub_23AA7E38C(&qword_2569E1FD8, (uint64_t (*)(uint64_t))type metadata accessor for FPDiagnosticAttributeKey, (uint64_t)&unk_23B1CDF8C);
}

uint64_t sub_23AAFF950()
{
  return sub_23AA7E38C(&qword_2569E1FE0, (uint64_t (*)(uint64_t))type metadata accessor for FPDiagnosticAttributeKey, (uint64_t)&unk_23B1CE01C);
}

uint64_t sub_23AAFF97C()
{
  return sub_23AA7E38C(&qword_2569E1FE8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23B1CD914);
}

uint64_t sub_23AAFF9A8()
{
  return sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
}

uint64_t sub_23AAFF9D4()
{
  return sub_23AA7E38C(&qword_2569E1FF8, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_23B1CD708);
}

uint64_t sub_23AAFFA00()
{
  return sub_23AA7E38C(&qword_2569E2000, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_23B1CD604);
}

uint64_t sub_23AAFFA2C()
{
  return sub_23AA7E38C(&qword_2569E2008, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE184);
}

void type metadata accessor for CSIndexError(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E20F8);
}

uint64_t sub_23AAFFA6C()
{
  return sub_23AA7E38C(&qword_2569E2010, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE2D8);
}

uint64_t sub_23AAFFA98()
{
  return sub_23AA7E38C(&qword_2569E2018, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE260);
}

uint64_t sub_23AAFFAC4()
{
  return sub_23AA7E38C((unint64_t *)&unk_2569E2020, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE1F0);
}

uint64_t sub_23AAFFAF0()
{
  return sub_23AA7E38C(qword_2569E8290, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_23B1CE148);
}

uint64_t sub_23AAFFB1C()
{
  return sub_23AA7E38C(&qword_2569E2030, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_23B1CD630);
}

uint64_t sub_23AAFFB48()
{
  return sub_23AA7E38C(&qword_2569E2038, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE234);
}

uint64_t sub_23AAFFB74()
{
  return sub_23AA7E38C(&qword_2569E2040, (uint64_t (*)(uint64_t))type metadata accessor for CSIndexError, (uint64_t)&unk_23B1CE294);
}

uint64_t sub_23AAFFBA0()
{
  return sub_23AA7E38C(&qword_2569E2048, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CD4C4);
}

uint64_t sub_23AAFFBCC()
{
  return sub_23AA7E38C(&qword_2569E2050, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CD494);
}

uint64_t sub_23AAFFBF8()
{
  return sub_23AA7E38C(&qword_2569E2058, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CD454);
}

uint64_t sub_23AAFFC24()
{
  return sub_23AA7E38C(&qword_2569E2060, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23B1CE0CC);
}

uint64_t sub_23AAFFC50()
{
  return sub_23AA7E38C(&qword_2569E2068, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23B1CD93C);
}

uint64_t sub_23AAFFC7C()
{
  return sub_23AA7E38C(&qword_2569E2070, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23B1CD1E4);
}

uint64_t initializeBufferWithCopyOfBuffer for SpeculativeDownloadsDiskManagementState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy224_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t sub_23AAFFD14(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 224))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 184);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_23AAFFD68(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 224) = 0;
    if (a2)
      *(_BYTE *)(result + 184) = a2 + 1;
  }
  return result;
}

void type metadata accessor for fpfs_metadata(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E20E8);
}

void type metadata accessor for FSChangeMonitorResetReason(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E20F0);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_23AAFFE20(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)(a1 + 8))
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_23AAFFE64(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = 0;
  }
  return result;
}

void type metadata accessor for fpfs_xattr(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E2100);
}

void type metadata accessor for fpfs_metadata.__Unnamed_union___Anonymous_field25(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E2108);
}

uint64_t getEnumTagSinglePayload for SnapshotFSRecursiveProperties(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SnapshotFSRecursiveProperties(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for fpfs_tag_data(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E2110);
}

void type metadata accessor for timespec(uint64_t a1)
{
  sub_23AAAC888(a1, &qword_2569E2118);
}

void _swift_dead_method_stub()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t sub_23AB000D4()
{
  return swift_initClassMetadata2();
}

void sub_23AB00114()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23AB001EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 136) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AB00230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - v9;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v3, *(_QWORD *)(v4 - 128), v1);
  swift_storeEnumTagMultiPayload();
  v11 = *(_QWORD *)(v4 - 72);
  (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v4 - 120) + 168))(v3, 1);
  if (v11)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v3, v2);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v10, 1, TupleTypeMetadata2);
  v14 = *(_QWORD *)(v4 - 144);
  if (v13 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v15 = *(_QWORD *)(a1 - 8);
    v16 = 1;
  }
  else
  {
    v15 = *(_QWORD *)(a1 - 8);
    (*(void (**)(_QWORD, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v4 - 144), v10, a1);
    v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, v16, 1, a1);
}

void sub_23AB003A0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23AB00478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 136) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 168) = v2;
  *(_QWORD *)(v5 - 160) = v4;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 152) = v3;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v1;
  *(_QWORD *)(v5 - 176) = v1;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AB004C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - v9;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, *(_QWORD *)(v4 - 128), v2);
  swift_storeEnumTagMultiPayload();
  v11 = *(_QWORD *)(v4 - 72);
  (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v4 - 120) + 168))(v3, 1);
  if (!v11)
  {
    *(_QWORD *)(v4 - 72) = v7;
    v13 = a1;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v3, v1);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v10, 1, TupleTypeMetadata2);
    v16 = *(_QWORD *)(v4 - 152);
    v17 = *(_QWORD *)(v4 - 168);
    v18 = *(_QWORD *)(v4 - 160);
    v19 = *(_QWORD *)(v4 - 176);
    if (v14 == 1)
    {
      (*(void (**)(char *, _QWORD))(v8 + 8))(v10, *(_QWORD *)(v4 - 72));
      *(_QWORD *)(v4 - 112) = v17;
      *(_QWORD *)(v4 - 104) = v18;
      *(_QWORD *)(v4 - 96) = v19;
      *(_QWORD *)(v4 - 88) = v16;
      type metadata accessor for ItemReconciliation();
    }
    sub_23B0C62A4(v13, v15, *(_QWORD *)(v4 - 144));
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v3, v1);
}

void sub_23AB00690()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB006F0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00750()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB007B0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00810()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00870()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB008D0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00930()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00990()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB009F0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00A50()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00AB0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00B10()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00B70()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00BD0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00C30()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00C90()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00CF0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00D50()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00DA8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00E08()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00E68()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00EC8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00F28()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00F88()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB00FE8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01048()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB010A8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01108()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01168()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB011C8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01228()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01288()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB012E8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01348()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB013A8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01408()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01468()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB014C8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01528()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01588()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB015E8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB01648()
{
  type metadata accessor for ReconciliationTable.CachedEntry();
}

void sub_23AB016A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 200) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 224) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v11;
  *(_QWORD *)(v13 - 88) = v12;
  type metadata accessor for ReconciliationMutation();
}

uint64_t sub_23AB016E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  _BYTE v33[96];

  *(_QWORD *)(v3 - 120) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = &v33[-v5];
  v7 = sub_23B1C6C98();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v33[-v9];
  *(_QWORD *)(v3 - 152) = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v3 - 184) = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = &v33[-v15];
  *(_QWORD *)(v3 - 192) = v1;
  v17 = sub_23B1C6C98();
  v18 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v3 - 208) = &v33[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v3 - 176) = v22;
  *(_QWORD *)(v3 - 168) = v21;
  v23 = *(void (**)(void))(v22 + 16);
  *(_QWORD *)(v3 - 72) = &v33[-v20];
  *(_QWORD *)(v3 - 216) = v23;
  v23();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 152) + 16))(v12, *(_QWORD *)(v3 - 128), v13);
  sub_23B1C65CC();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 136) = v16;
  *(_QWORD *)(v3 - 128) = AssociatedTypeWitness;
  sub_23B1C6CB0();
  v25 = *(_QWORD *)(v3 - 120);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v10, 1, a1) != 1)
  {
    *(_QWORD *)(v3 - 152) = AssociatedConformanceWitness;
    v26 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 32))(v6, v10, a1);
    MEMORY[0x23B8601A8](v26);
    sub_23AB01A90();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 184) + 8))(*(_QWORD *)(v3 - 136), *(_QWORD *)(v3 - 128));
  v27 = *(_QWORD *)(v3 - 208);
  v28 = *(_QWORD *)(v3 - 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 - 216))(v27, *(_QWORD *)(v3 - 72), v28);
  v30 = *(_QWORD *)(v3 - 200);
  v29 = *(_QWORD *)(v3 - 192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29) != 1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v30 + 32))(*(_QWORD *)(v3 - 224), v27, v29);
    sub_23AB02B7C();
  }
  v31 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 176) + 8);
  v31(v27, v28);
  return ((uint64_t (*)(_QWORD, uint64_t))v31)(*(_QWORD *)(v3 - 72), v28);
}

void sub_23AB01A90()
{
  type metadata accessor for ReconciliationTable.CachedEntry();
}

void sub_23AB01AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;

  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&a9 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v9, v11);
  sub_23AB01BE0(v10, (uint64_t)v15, (uint64_t)v17);
}

uint64_t sub_23AB01B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (v1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v4, 0, 1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v0, v4, v2);
}

void sub_23AB01BE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a2;
  v18 = a1;
  v17 = a3;
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 104);
  v6 = *(_QWORD *)(*v3 + 88);
  swift_getAssociatedTypeWitness();
  v15 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v16 = (char *)&v11 - v7;
  v8 = *(_QWORD *)(v4 + 96);
  v9 = *(_QWORD *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  v12 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v13 = (char *)&v11 - v10;
  v20 = v9;
  v21 = v6;
  v22 = v8;
  v23 = v5;
  type metadata accessor for PersistenceTrigger();
}

void sub_23AB01D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 432) = a1;
  *(_QWORD *)(v13 - 440) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 464) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ItemReconciliation();
}

void sub_23AB01D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;

  *(_QWORD *)(v11 - 136) = a1;
  v12 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 352) = v12;
  *(_QWORD *)(v11 - 360) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v11 - 320) = (char *)&a9 - v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 456) = v9;
  *(_QWORD *)(v11 - 120) = v9;
  *(_QWORD *)(v11 - 112) = v10;
  *(_QWORD *)(v11 - 416) = v10;
  *(_QWORD *)(v11 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v11 - 96) = v15;
  type metadata accessor for ReconciliationID();
}

void sub_23AB01E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v15 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 384) = v15;
  *(_QWORD *)(v13 - 392) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 336) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 256) = a1;
  *(_QWORD *)(v13 - 264) = *(_QWORD *)(a1 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 376) = (char *)&a9 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 400) = (char *)&a9 - v23;
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - v24;
  *(_QWORD *)(v13 - 248) = v9;
  *(_QWORD *)(v13 - 240) = v12;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 232) = v11;
  *(_QWORD *)(v13 - 224) = v10;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ReconciliationTable.CachedEntry();
}

void sub_23AB01F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);
  uint64_t (*v33)(_BYTE *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[96];

  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v1 - 304) = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v1 - 296) = &v37[-v7];
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v37[-v8];
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v37[-v16];
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = &v37[-v19];
  *(_QWORD *)(v1 - 200) = *(_QWORD *)(*(_QWORD *)(v1 - 136) - 8);
  v21 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v1 - 328) = &v37[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v1 - 312) = &v37[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v1 - 408) = &v37[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v1 - 288) = &v37[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v1 - 192) = &v37[-v30];
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v1 - 208) = &v37[-v31];
  v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
  v32(v20, *(_BYTE **)(v1 - 144), v10);
  *(_QWORD *)(v1 - 152) = v20;
  v32(v17, v20, v10);
  v33 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v1 - 144) = v33;
  v34 = v33(v17, 1, a1);
  *(_QWORD *)(v1 - 160) = a1;
  *(_QWORD *)(v1 - 184) = v11;
  *(_QWORD *)(v1 - 272) = v3;
  if (v34 == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v17, v10);
    v32(v14, *(_BYTE **)(v1 - 152), v10);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, _QWORD))(v1 - 144))(v14, 1, *(_QWORD *)(v1 - 160)) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v1 - 184) + 8))(v14, v10);
      v35 = *(_QWORD *)(v1 - 232);
      *(_QWORD *)(v1 - 120) = *(_QWORD *)(v1 - 248);
      *(_QWORD *)(v1 - 112) = v35;
      v36 = *(_QWORD *)(v1 - 224);
      *(_QWORD *)(v1 - 104) = *(_QWORD *)(v1 - 240);
      *(_QWORD *)(v1 - 96) = v36;
      type metadata accessor for ReconciliationMutation();
    }
    (*(void (**)(void))(*(_QWORD *)(v1 - 272) + 32))();
    sub_23AB02B7C();
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v9, v17, a1);
  sub_23AB10120(*(_QWORD *)(v1 - 168), a1);
}

void sub_23AB02344(uint64_t a1)
{
  sub_23AB52A54(a1);
  sub_23AB04EC0();
}

uint64_t sub_23AB02374(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v9 = *(_QWORD *)(v8 - 256);
  if (!v2)
  {
    *(_QWORD *)(v8 - 296) = a1;
    *(_QWORD *)(v8 - 216) = v7;
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 264) + 8);
    v11(v5, v9);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v8 - 200) + 32))(*(_QWORD *)(v8 - 192), v4, *(_QWORD *)(v8 - 136));
    if ((a2 & 1) == 0)
    {
      *(_DWORD *)(v8 - 280) = 0;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v8 - 200) + 16))(*(_QWORD *)(v8 - 208), *(_QWORD *)(v8 - 192), *(_QWORD *)(v8 - 136));
      JUMPOUT(0x23AB02550);
    }
    *(_QWORD *)(v8 - 288) = v11;
    sub_23AB53094(v6, *(_QWORD *)(v8 - 336));
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 264) + 8))(v5, *(_QWORD *)(v8 - 256));
  return (*(uint64_t (**)(_QWORD, uint64_t))(v3 + 8))(*(_QWORD *)(v8 - 152), v7);
}

uint64_t sub_23AB025D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (!v1)
  {
    *(_QWORD *)(v6 - 288) = a1;
    *(_QWORD *)(v6 - 216) = v3;
    v9 = *(_QWORD *)(v6 - 232);
    *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 248);
    *(_QWORD *)(v6 - 112) = v9;
    v10 = *(_QWORD *)(v6 - 224);
    *(_QWORD *)(v6 - 104) = *(_QWORD *)(v6 - 240);
    *(_QWORD *)(v6 - 96) = v10;
    type metadata accessor for ReconciliationMutation();
  }
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 200) + 8);
  v8 = *(_QWORD *)(v6 - 136);
  v7(v4, v8);
  v7(*(_QWORD *)(v6 - 208), v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v5, v3);
}

void sub_23AB02638(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  int64_t v14;
  BOOL v15;
  unint64_t *v16;
  unint64_t *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;

  *(_QWORD *)(v7 - 336) = a1;
  v8 = sub_23AB532F4(a1, a2, a3, a4);
  v10 = v5;
  v11 = *(_QWORD *)(v7 - 328);
  if ((v12 & 1) == 0)
  {
    v13 = v8;
    v14 = v9;
    if ((*(_DWORD *)(v7 - 280) & 1) != 0
      || (v15 = sub_23B0C94E0(*(_QWORD *)(v7 - 136)), v10 = *(_QWORD *)(v7 - 192), v15))
    {
      v16 = (unint64_t *)(v10 + *(int *)(*(_QWORD *)(v7 - 136) + 64));
      *v16 = v13;
      v16[1] = v14;
    }
    else
    {
      v17 = (unint64_t *)(v10 + *(int *)(*(_QWORD *)(v7 - 136) + 64));
      v18 = *v17;
      v19 = v17[1];
      if (v13 > *v17)
        v18 = v13;
      if (v14 < v19)
        v19 = v14;
      *v17 = v18;
      v17[1] = v19;
    }
  }
  v20 = *(_QWORD *)(v7 - 136);
  v6(*(_QWORD *)(v7 - 312), *(_QWORD *)(v7 - 208), v20);
  v6(v11, v10, v20);
  v21 = *(_QWORD *)(v7 - 160);
  v22 = *(_QWORD *)(v7 - 152);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 - 144))(v22, 1, v21))
  {
    v23 = 0;
    v24 = -1;
  }
  else
  {
    v25 = v22 + *(int *)(v21 + 64);
    v23 = *(_QWORD *)v25;
    v24 = *(_BYTE *)(v25 + 8);
  }
  sub_23AB057CC(v23, v24, *(_QWORD *)(v7 - 288), v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 - 144))(v22, 1, v21))
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 200) + 56))(*(_QWORD *)(v7 - 320), 1, 1, *(_QWORD *)(v7 - 136));
  else
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v7 - 360) + 16))(*(_QWORD *)(v7 - 320), v22 + *(int *)(v21 + 68), *(_QWORD *)(v7 - 352));
  sub_23AB10F48(*(_QWORD *)(v7 - 296), *(_DWORD *)(v7 - 280), *(_QWORD *)(v7 - 304));
}

void sub_23AB027FC()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t TupleTypeMetadata2;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v3 = v1;
  if (v1 == 1)
  {
    v8 = *(_QWORD *)(v2 - 368);
    sub_23AB52A54(*(_QWORD *)(v2 - 336));
    (*(void (**)(uint64_t, _QWORD))(**(_QWORD **)(v2 - 176) + 208))(v8, *(_QWORD *)(v2 - 288));
    v4 = *(_QWORD *)(v2 - 208);
    v9 = *(_QWORD *)(v2 - 256);
    if (v0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8))(v8, v9);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(*(_QWORD *)(v2 - 304), *(_QWORD *)(v2 - 160));
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8);
      v11 = *(_QWORD *)(v2 - 136);
      v10(*(_QWORD *)(v2 - 192), v11);
      v10(v4, v11);
      JUMPOUT(0x23AB02954);
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8))(v8, v9);
  }
  else
  {
    v4 = *(_QWORD *)(v2 - 208);
    v5 = *(_QWORD *)(v2 - 176);
    v6 = *(_QWORD *)(v2 - 256);
    if (!v3)
    {
      v7 = *(_QWORD *)(v2 - 376);
      sub_23AB52A54(*(_QWORD *)(v2 - 336));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 216))(v7, *(_QWORD *)(v2 - 288));
      if (v0)
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8))(v7, v6);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(*(_QWORD *)(v2 - 304), *(_QWORD *)(v2 - 160));
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 200) + 8))(*(_QWORD *)(v2 - 192), *(_QWORD *)(v2 - 136));
        goto LABEL_19;
      }
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8))(v7, v6);
      if (sub_23B0C6AC4(*(_QWORD *)(v2 - 136)))
      {
        Strong = swift_weakLoadStrong();
        *(_QWORD *)(v2 - 144) = Strong;
        if (Strong)
        {
          v13 = *(_QWORD *)(v2 - 480);
          (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 496) + 16))(v13, v4, *(_QWORD *)(v2 - 488));
          v14 = *(_QWORD *)(v2 - 456);
          v15 = *(_QWORD *)(v14 - 8);
          v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
          v17 = *(_QWORD *)(v2 - 416);
          v18 = v4;
          v19 = *(_QWORD *)(v2 - 424);
          v20 = *(_QWORD *)(v2 - 464);
          if (v16 != 1)
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v15 + 32))(*(_QWORD *)(v2 - 464), v13, v14);
            (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 472) + 16))(v19, v18 + *(int *)(*(_QWORD *)(v2 - 136) + 52), *(_QWORD *)(v2 - 448));
            v21 = *(_QWORD *)(v17 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v17) != 1)
            {
              TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v20 + *(int *)(TupleTypeMetadata2 + 48), v19, v17);
              v23 = *(_QWORD *)(v2 - 432);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(uint64_t))(**(_QWORD **)(v2 - 144) + 312))(v20);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 440) + 8))(v20, v23);
              v4 = *(_QWORD *)(v2 - 208);
              goto LABEL_14;
            }
LABEL_18:
            __break(1u);
LABEL_19:
            JUMPOUT(0x23AB025F4);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_18;
      }
    }
  }
LABEL_14:
  v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8);
  v25 = *(_QWORD *)(v2 - 136);
  v24(*(_QWORD *)(v2 - 192), v25);
  v24(v4, v25);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 - 272) + 32))(*(_QWORD *)(v2 - 344), *(_QWORD *)(v2 - 304), *(_QWORD *)(v2 - 160));
  JUMPOUT(0x23AB02B3CLL);
}

void sub_23AB02B7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[33];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v34[25] = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v34[3] = (char *)v34 - v7;
  v8 = *(_QWORD *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 88);
  v36 = swift_getAssociatedTypeWitness();
  v35 = sub_23B1C6C98();
  v34[32] = *(_QWORD *)(v35 - 8);
  v10 = MEMORY[0x24BDAC7A8](v35);
  v34[12] = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v34[16] = (char *)v34 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v37 = (char *)v34 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v34[28] = (char *)v34 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v34[1] = (char *)v34 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v34[9] = (char *)v34 - v20;
  v39 = AssociatedTypeWitness;
  v41 = sub_23B1C6C98();
  v38 = *(_QWORD *)(v41 - 8);
  v21 = MEMORY[0x24BDAC7A8](v41);
  v34[31] = (char *)v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v34[10] = (char *)v34 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v34[20] = (char *)v34 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v34[6] = (char *)v34 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v34[29] = (char *)v34 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v34[2] = (char *)v34 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v42 = (char *)v34 - v33;
  v43 = v3;
  v44 = v9;
  v45 = v2;
  v46 = v8;
  type metadata accessor for PersistenceTrigger();
}

void sub_23AB02EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v13 - 256) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 248) = a1;
  v14 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 552) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 584) = (char *)&a9 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 424) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - v21;
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 576) = (char *)&a9 - v22;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v12;
  type metadata accessor for ReconciliationTable.CachedEntry();
}

void sub_23AB02F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v13 - 224) = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 312) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 488) = (char *)&a9 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 520) = (char *)&a9 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 600) = (char *)&a9 - v25;
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 608) = (char *)&a9 - v26;
  *(_QWORD *)(v13 - 208) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 360) = v9;
  *(_QWORD *)(v13 - 200) = v10;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v12;
  *(_QWORD *)(v13 - 352) = v12;
  type metadata accessor for ItemReconciliation();
}

void sub_23AB030BC(uint64_t a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  _BYTE v35[48];

  v5 = sub_23B1C6C98();
  *(_QWORD *)(v3 - 320) = v5;
  *(_QWORD *)(v3 - 328) = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v3 - 472) = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v3 - 464) = &v35[-v9];
  v10 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v3 - 448) = &v35[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v3 - 528) = &v35[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v3 - 456) = &v35[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v3 - 496) = &v35[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v3 - 536) = &v35[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = *(_QWORD *)(a1 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v3 - 504) = &v35[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v3 - 432) = &v35[-v27];
  MEMORY[0x24BDAC7A8](v26);
  v29 = &v35[-v28];
  v30 = v2 + v1[13];
  *(_DWORD *)(v3 - 300) = sub_23B0C93B4(a1);
  *(_QWORD *)(v3 - 72) = v30;
  *(_DWORD *)(v3 - 292) = sub_23B0C6AC4(a1);
  v31 = v2 + v1[14];
  *(_DWORD *)(v3 - 340) = sub_23B0C93B4(a1);
  *(_DWORD *)(v3 - 296) = sub_23B0C6AC4(a1);
  *(_QWORD *)(v3 - 152) = v23;
  v32 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v23 + 16);
  *(_QWORD *)(v3 - 400) = v31;
  *(_QWORD *)(v3 - 128) = a1;
  *(_QWORD *)(v3 - 240) = v32;
  v32(v29, v31, a1);
  *(_QWORD *)(v3 - 144) = v1;
  v33 = v2 + v1[16];
  if (*(unsigned __int8 *)(v33 + 8) >= 2u)
  {
    v34 = (char *)&loc_23AB03350 + dword_23AB04C94[*(_QWORD *)v33];
    *(_QWORD *)(v3 - 168) = v2;
    *(_QWORD *)(v3 - 160) = v29;
    __asm { BR              X10 }
  }
  sub_23B1C704C();
  __break(1u);
  JUMPOUT(0x23AB04C94);
}

void sub_23AB04CA4()
{
  type metadata accessor for ReconciliationTable.CachedEntry();
}

void sub_23AB04CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;

  v10 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))((char *)&a9 - v11, 1, 1, a1);
  sub_23AB01648();
}

uint64_t sub_23AB04D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_23AB04D94()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AB04DF4()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AB04E54()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

uint64_t sub_23AB04E70()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

void type metadata accessor for ReconciliationTable()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AB04EA0()
{
  uint64_t v0;

  swift_weakInit();
  return v0;
}

void sub_23AB04EC0()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AB04F04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, _BYTE *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _BYTE v36[96];

  *(_QWORD *)(v4 - 136) = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = sub_23B1C6C98();
  *(_QWORD *)(v4 - 144) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v36[-v9];
  *(_QWORD *)(v4 - 120) = TupleTypeMetadata2;
  v11 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v12 = MEMORY[0x24BDAC7A8](v8);
  v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v36[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = *(_QWORD *)(v4 - 72);
  (*(void (**)(uint64_t, uint64_t))(v2 + 168))(v3, 1);
  if (!v20)
  {
    *(_QWORD *)(v4 - 168) = v19;
    *(_QWORD *)(v4 - 160) = v17;
    *(_QWORD *)(v4 - 152) = v14;
    *(_QWORD *)(v4 - 72) = v3;
    v21 = *(_QWORD *)(v4 - 144);
    v22 = *(_QWORD *)(v4 - 136);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, _QWORD))(v11 + 48))(v10, 1, *(_QWORD *)(v4 - 120)) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v21);
      sub_23AB05118(*(_QWORD *)(v4 - 72));
    }
    v23 = *(_QWORD *)(v4 - 120);
    v24 = *(int *)(v23 + 48);
    v25 = *(_QWORD *)(v22 - 8);
    v26 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v25 + 32);
    *(_QWORD *)(v4 - 144) = v26;
    v27 = v25;
    *(_QWORD *)(v4 - 72) = v25;
    v28 = *(_QWORD *)(v4 - 168);
    v26(v28, v10, v22);
    v1 = *(_QWORD *)&v10[v24];
    *(_QWORD *)(v28 + v24) = v1;
    v29 = *(int *)(v23 + 48);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
    v31 = *(_QWORD *)(v4 - 160);
    v30(v31, v28, v22);
    *(_QWORD *)(v31 + v29) = v1;
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 144);
    v32(*(_QWORD *)(v4 - 128), v31, v22);
    v33 = *(int *)(v23 + 48);
    v34 = *(_QWORD *)(v4 - 152);
    v32(v34, v28, v22);
    *(_QWORD *)(v34 + v33) = v1;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 72) + 8))(v34, v22);
  }
  return v1;
}

void sub_23AB05118(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  _QWORD v7[10];

  v7[5] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7[3] = (char *)v7 - v2;
  v3 = swift_getAssociatedTypeWitness();
  v7[2] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7[1] = (char *)v7 - v4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedConformanceWitness();
  v7[6] = v3;
  v7[7] = AssociatedTypeWitness;
  v7[8] = AssociatedConformanceWitness;
  v7[9] = v6;
  type metadata accessor for ReconciliationID();
}

void sub_23AB0524C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x24BDAC7A8](a1);
  sub_23B0C6534(v3, v2, v1);
}

void sub_23AB05290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16))(v9, *(_QWORD *)(v10 - 120), v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 128) + 32))(*(_QWORD *)(v10 - 136), v9, v1);
    *(_QWORD *)(v10 - 112) = v7;
    *(_QWORD *)(v10 - 104) = v3;
    *(_QWORD *)(v10 - 96) = v6;
    *(_QWORD *)(v10 - 88) = v2;
    type metadata accessor for ItemReconciliation();
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 144) + 32))(*(_QWORD *)(v10 - 152), v9, v5);
  v12 = type metadata accessor for ItemReconciliationHalf(0, v7, v6, v11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v0, v12);
  sub_23B0C6760(v7, v6, v0);
}

void sub_23AB053B4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0, v4);
  v1(v0, v2, v3);
  JUMPOUT(0x23AB053F8);
}

uint64_t sub_23AB0541C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a2;
  v47 = a1;
  v3 = *v2;
  v4 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v4);
  v41 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v3 + 96);
  v43 = *(_QWORD *)(v3 + 80);
  v44 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_23B1C6C98();
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v37 - v10;
  v42 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v37 - v14;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  v18 = v47;
  v19 = swift_checkMetadataState();
  if ((v17(v19, AssociatedConformanceWitness) & 1) != 0)
  {
    result = swift_weakLoadStrong();
    if (result)
    {
      swift_retain();
      swift_release();
      sub_23B0EB9DC();
LABEL_7:
      swift_release();
      v21 = v45;
      v22 = v42;
LABEL_8:
      v23 = (uint64_t)v40;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v40, v15, AssociatedTypeWitness);
      v25 = type metadata accessor for ItemState(0, v19, AssociatedConformanceWitness, v24);
      v26 = (uint64_t *)(v18 + *(int *)(v25 + 36));
      v27 = *v26;
      v28 = v26[1];
      v29 = v41;
      sub_23AA9BA80(v18 + *(int *)(v25 + 40), v41);
      v30 = swift_getAssociatedConformanceWitness();
      sub_23AEF9C70(v23, v27, v28, v29, AssociatedTypeWitness, v30, v21);
      v32 = type metadata accessor for ItemState(0, AssociatedTypeWitness, v30, v31);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v21, 0, 1, v32);
      return swift_bridgeObjectRetain();
    }
    __break(1u);
    goto LABEL_15;
  }
  if (((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v19, AssociatedConformanceWitness) & 1) != 0)
  {
    result = swift_weakLoadStrong();
    if (result)
    {
      swift_retain();
      swift_release();
      sub_23B0EBA04();
      goto LABEL_7;
    }
LABEL_15:
    __break(1u);
    return result;
  }
  v33 = v46;
  result = (*(uint64_t (**)(uint64_t))(*v2 + 152))(v18);
  if (!v33)
  {
    v22 = v42;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v11, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
      v34 = swift_getAssociatedConformanceWitness();
      v36 = type metadata accessor for ItemState(0, AssociatedTypeWitness, v34, v35);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v45, 1, 1, v36);
    }
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v15, v11, AssociatedTypeWitness);
    v21 = v45;
    goto LABEL_8;
  }
  return result;
}

unint64_t sub_23AB057CC(unint64_t result, char a2, uint64_t a3, unsigned __int8 a4)
{
  if (a2 == -1 || a2 == 2 && result == 3)
  {
    if ((a4 & 0xFE) != 0)
      return a3;
    else
      return 3;
  }
  else if (a4 >= 2u)
  {
    if (a4 == 2)
    {
      switch(a3)
      {
        case 0:
          if (a2 != 2 || result >= 2)
            goto LABEL_18;
          break;
        case 1:
          if (a2 != 2 || result >= 2)
            goto LABEL_18;
          result = 1;
          break;
        case 2:
          result = 2;
          break;
        case 3:
          return result;
        default:
          goto LABEL_18;
      }
    }
    else
    {
LABEL_18:
      result = sub_23B1C704C();
      __break(1u);
    }
  }
  return result;
}

void sub_23AB058E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  _DWORD v19[4];
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v41 = a8;
  v33 = a7;
  v24 = a6;
  v38 = a5;
  v19[3] = a4;
  v34 = a3;
  v39 = a1;
  v40 = a2;
  v28 = sub_23B1C5E4C();
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = sub_23B1C6C98();
  v22 = *(_QWORD *)(v23 - 8);
  v10 = MEMORY[0x24BDAC7A8](v23);
  v37 = (char *)v19 - v11;
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v10);
  v21 = (char *)v19 - v12;
  v13 = swift_getAssociatedTypeWitness();
  v32 = sub_23B1C6C98();
  v36 = *(_QWORD *)(v32 - 8);
  v14 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)v19 - v15;
  v29 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)v19 - v16;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedConformanceWitness();
  v26 = AssociatedTypeWitness;
  v42 = AssociatedTypeWitness;
  v43 = v13;
  v30 = v13;
  v44 = AssociatedConformanceWitness;
  v45 = v18;
  type metadata accessor for ReconciliationID();
}

void sub_23AB05B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 208) = a1;
  *(_QWORD *)(v13 - 256) = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 480) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 400) = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 416) = v10;
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 432) = v11;
  *(_QWORD *)(v13 - 408) = v9;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v12;
  *(_QWORD *)(v13 - 424) = v12;
  type metadata accessor for PersistenceTrigger();
}

void sub_23AB05BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;

  *(_QWORD *)(v9 - 272) = a1;
  *(_QWORD *)(v9 - 296) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 288) = (char *)&a9 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v9 - 568) = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v9 - 440) = (char *)&a9 - v12;
  v13 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v9 - 576) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v9 - 448) = (char *)&a9 - v14;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 392) = v13;
  *(_QWORD *)(v9 - 120) = v13;
  *(_QWORD *)(v9 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 384) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 456) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v16;
  *(_QWORD *)(v9 - 464) = v16;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AB05D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;

  v13 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 248) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v11 - 240) = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v11 - 472) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v11 - 336) = (char *)&a9 - v17;
  *(_QWORD *)(v11 - 320) = a1;
  *(_QWORD *)(v11 - 328) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v11 - 232) = (char *)&a9 - v18;
  v20 = type metadata accessor for ItemReconciliationHalf(0, v10, v9, v19);
  *(_QWORD *)(v11 - 152) = v20;
  *(_QWORD *)(v11 - 344) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v11 - 352) = (char *)&a9 - v21;
  *(_QWORD *)(v11 - 192) = swift_getAssociatedTypeWitness();
  v22 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 184) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v11 - 176) = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v11 - 360) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v30 = MEMORY[0x24BDAC7A8](v29);
  MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v11 - 224) = v9;
  v32 = type metadata accessor for ReconciliationSideMutation(0, v10, v9, v31);
  MEMORY[0x24BDAC7A8](v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 16))((char *)&a9 - v34, *(_QWORD *)(v11 - 168), v32);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23AB05FCC + dword_23AB07854[EnumCaseMultiPayload]))();
}

uint64_t sub_23AB05FDC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *v0;
  v5 = *(_QWORD *)(v2 - 184);
  v4 = *(_QWORD *)(v2 - 176);
  v6 = *(_QWORD *)(v2 - 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v6, v4);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 - 192) - 8) + 48))(v1, 1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  v8 = *(_QWORD *)(v2 - 152);
  if (v7 == 1)
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 398);
  v9 = *(_QWORD **)(v2 - 312);
  if ((v3 & ~*v9) != 0)
    *v9 |= v3;
  if (qword_2542E7190 != -1)
    swift_once();
  *(_QWORD *)(v6 + *(int *)(v8 + 40)) |= v3 & 0xFFFFFFFFFF7FFFEFLL & (qword_2542EDE38 | 0x409000000C000);
  v10 = *(int *)(v8 + 36);
  v11 = *(_QWORD *)(v6 + v10);
  if ((v11 & 9) != 0)
    *(_QWORD *)(v6 + v10) = v11 & 0xFFFFFFFFFFFFFFF6;
  return 1;
}

void sub_23AB07908(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AB079EC()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23AB07A1C()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23AB07A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;

  *(_QWORD *)(v11 - 528) = a1;
  *(_QWORD *)(v11 - 536) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 544) = (char *)&a9 - v12;
  v14 = type metadata accessor for ReconciliationSideMutation(0, v10, v9, v13);
  *(_QWORD *)(v11 - 280) = v14;
  *(_QWORD *)(v11 - 288) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v11 - 296) = (char *)&a9 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v11 - 112) = v17;
  *(_QWORD *)(v11 - 584) = AssociatedConformanceWitness;
  *(_QWORD *)(v11 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v11 - 96) = v19;
  *(_QWORD *)(v11 - 624) = v19;
  type metadata accessor for ReconciliationID();
}

void sub_23AB07BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v15 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 408) = v15;
  *(_QWORD *)(v13 - 416) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 424) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 432) = (char *)&a9 - v18;
  v20 = type metadata accessor for ReconciliationSideMutation(0, v9, v10, v19);
  *(_QWORD *)(v13 - 304) = v20;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - v21;
  v22 = sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v13 - 520) = TupleTypeMetadata2;
  *(_QWORD *)(v13 - 608) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v24 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v13 - 568) = (char *)&a9 - v25;
  *(_QWORD *)(v13 - 248) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v13 - 240) = v22;
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 328) = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v13 - 616) = (char *)&a9 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  *(_QWORD *)(v13 - 512) = (char *)&a9 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v13 - 384) = (char *)&a9 - v33;
  *(_QWORD *)(v13 - 136) = a1;
  *(_QWORD *)(v13 - 152) = *(_QWORD *)(a1 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v13 - 472) = (char *)&a9 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v13 - 456) = (char *)&a9 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v13 - 440) = (char *)&a9 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  *(_QWORD *)(v13 - 336) = (char *)&a9 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v13 - 464) = (char *)&a9 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)(v13 - 448) = (char *)&a9 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  *(_QWORD *)(v13 - 480) = (char *)&a9 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  *(_QWORD *)(v13 - 592) = (char *)&a9 - v53;
  MEMORY[0x24BDAC7A8](v52);
  *(_QWORD *)(v13 - 488) = (char *)&a9 - v54;
  v55 = sub_23B1C6C98();
  v56 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v13 - 368) = v56;
  *(_QWORD *)(v13 - 552) = *(_QWORD *)(v56 - 8);
  v57 = MEMORY[0x24BDAC7A8](v56);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v58;
  *(_QWORD *)(v13 - 200) = *(_QWORD *)(v55 - 8);
  v59 = MEMORY[0x24BDAC7A8](v57);
  *(_QWORD *)(v13 - 352) = (char *)&a9 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = MEMORY[0x24BDAC7A8](v59);
  *(_QWORD *)(v13 - 560) = (char *)&a9 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  *(_QWORD *)(v13 - 360) = (char *)&a9 - v64;
  MEMORY[0x24BDAC7A8](v63);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - v65;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ItemReconciliation();
}

void sub_23AB08048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v15 - 160) = a1;
  *(_QWORD *)(v15 - 504) = *(_QWORD *)(a1 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v15 - 600) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v15 - 496) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 576) = (char *)&a9 - v21;
  *(_QWORD *)(v15 - 256) = v10;
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v15 - 632) = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v15 - 224) = (char *)&a9 - v25;
  *(_QWORD *)(v15 - 376) = v14;
  *(_QWORD *)(v15 - 232) = *(_QWORD *)(v14 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v15 - 216) = (char *)&a9 - v27;
  *(_QWORD *)(v15 - 176) = v9;
  *(_QWORD *)(v15 - 168) = v13;
  *(_QWORD *)(v15 - 120) = v13;
  *(_QWORD *)(v15 - 112) = v9;
  *(_QWORD *)(v15 - 104) = v12;
  *(_QWORD *)(v15 - 96) = v11;
  *(_QWORD *)(v15 - 184) = v11;
  type metadata accessor for ReconciliationMutation();
}

uint64_t sub_23AB081A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))((char *)&a9 - v12, *(_QWORD *)(v9 - 72), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23AB081F8 + dword_23AB095FC[EnumCaseMultiPayload]))();
}

uint64_t sub_23AB08208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 136);
  *(_BYTE *)(*(_QWORD *)(v1 - 144) + *(int *)(*(_QWORD *)(v1 - 160) + 56)) = *(_BYTE *)(v0
                                                                                        + *(int *)(swift_getTupleTypeMetadata2()
                                                                                                 + 48));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 152) + 8))(v0, v2);
  return 1;
}

void sub_23AB09634(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_23AAB1264(a1, a2, AssociatedTypeWitness, v4);
}

uint64_t sub_23AB09708(char a1)
{
  return a1 & 1;
}

void sub_23AB0972C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AB09814()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23AB09844(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[8];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a2;
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 104);
  v5 = *(_QWORD *)(*v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = sub_23B1C6C98();
  v25[7] = *(_QWORD *)(v26 - 8);
  v7 = MEMORY[0x24BDAC7A8](v26);
  v25[6] = (char *)v25 - v8;
  v28 = AssociatedTypeWitness;
  v27 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v7);
  v25[1] = (char *)v25 - v9;
  v10 = *(_QWORD *)(v3 + 96);
  v11 = *(_QWORD *)(v3 + 80);
  v12 = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v25[2] = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v25[4] = (char *)v25 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v25[3] = (char *)v25 - v17;
  v34 = sub_23B1C5BDC();
  v30 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v12;
  v19 = sub_23B1C6C98();
  v36 = *(_QWORD *)(v19 - 8);
  v37 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v29 = (char *)v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v25[5] = (char *)v25 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v39 = (char *)v25 - v24;
  v41 = v11;
  v42 = v5;
  v31 = v5;
  v32 = v4;
  v43 = v10;
  v44 = v4;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AB09AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  void (*v20)(_BYTE *, _QWORD, uint64_t);
  uint64_t (*v21)(_BYTE *, uint64_t, uint64_t);
  int v22;
  uint64_t result;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[96];

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 296) = &v65[-v7];
  *(_QWORD *)(v4 - 264) = v1;
  *(_QWORD *)(v4 - 248) = v2;
  v9 = type metadata accessor for ItemReconciliationHalf(0, v1, v2, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v65[-v11];
  v13 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v4 - 272) = &v65[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v65[-v17];
  v19 = *(int *)(v9 + 36);
  *(_QWORD *)(v4 - 200) = v3;
  *(_QWORD *)(v4 - 312) = v19;
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v3 + v19);
  v20 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 16);
  v20(&v65[-v17], *(_QWORD *)(v4 - 128), v13);
  v21 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  *(_QWORD *)(v4 - 280) = v21;
  v22 = v21(v18, 1, a1);
  *(_QWORD *)(v4 - 160) = a1;
  *(_QWORD *)(v4 - 288) = v6;
  if (v22 == 1)
  {
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v18, v13);
    if ((*(_QWORD *)(v4 - 144) & 0x10) == 0)
      return result;
LABEL_10:
    v35 = *(_BYTE **)(v4 - 272);
    v20(v35, *(_QWORD *)(v4 - 128), v13);
    v36 = *(_QWORD *)(v4 - 160);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 - 280))(v35, 1, v36) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v35, v13);
    }
    else
    {
      v37 = *(_QWORD *)(v4 - 288);
      v38 = *(_QWORD *)(v4 - 296);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v37 + 32))(v38, v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v36);
    }
    v39 = *(_QWORD *)(v4 - 192);
    v40 = *(_QWORD *)(v4 - 168);
    v41 = *(_QWORD *)(v4 - 152);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v4 - 184) + 16))(v41, *(_QWORD *)(v4 - 200), *(_QWORD *)(v4 - 176));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v39) != 1)
    {
      v42 = *(_QWORD *)(v4 - 240);
      *(_QWORD *)(v4 - 120) = *(_QWORD *)(v4 - 264);
      *(_QWORD *)(v4 - 112) = v42;
      v43 = *(_QWORD *)(v4 - 232);
      *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 248);
      *(_QWORD *)(v4 - 96) = v43;
      type metadata accessor for Materialization.MaterializeIgnoredItem();
    }
    __break(1u);
    JUMPOUT(0x23AB0A3F4);
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v12, v18, v9);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v18, a1);
  v24 = *(_QWORD *)&v12[*(int *)(v9 + 36)];
  v25 = v12;
  v26 = v9;
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v25, v9);
  if ((*(_QWORD *)(v4 - 144) & 0x10) != 0)
  {
    if ((v24 & 0x10) == 0)
      goto LABEL_10;
  }
  else
  {
    v27 = *(_QWORD *)(v4 - 136);
    if ((v24 & 0x10) != 0)
    {
      v28 = *(int *)(*(_QWORD *)(v4 - 160) + 56);
      v29 = *(_QWORD *)(v4 - 200);
      if (*(_BYTE *)(v29 + v28) == 1)
      {
        v31 = *(_QWORD *)(v4 - 184);
        v30 = *(_QWORD *)(v4 - 176);
        v32 = *(_QWORD *)(v4 - 360);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 16))(v32, *(_QWORD *)(v4 - 200), v30);
        v33 = *(_QWORD *)(v4 - 168);
        v34 = *(_QWORD *)(v4 - 192);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v32, 1, v34) != 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v33 + 32))(*(_QWORD *)(v4 - 376), v32, v34);
          v55 = *(_QWORD *)(v4 - 240);
          *(_QWORD *)(v4 - 120) = *(_QWORD *)(v4 - 264);
          *(_QWORD *)(v4 - 112) = v55;
          v56 = *(_QWORD *)(v4 - 232);
          *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 248);
          *(_QWORD *)(v4 - 96) = v56;
          type metadata accessor for Ingestion.FetchChildrenMetadata();
        }
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v30);
      }
      else
      {
        v34 = *(_QWORD *)(v4 - 192);
        v31 = *(_QWORD *)(v4 - 184);
        v30 = *(_QWORD *)(v4 - 176);
      }
      v44 = sub_23B0C6AC4(*(_QWORD *)(v4 - 160));
      v45 = *(_QWORD *)(v4 - 304);
      if (!v44)
      {
        if (qword_2542E7190 != -1)
          swift_once();
        *(_QWORD *)(v29 + *(int *)(v26 + 40)) |= qword_2542EDE38 & 0xFFFFFFFFFF7FFFEFLL;
        v46 = *(_QWORD *)(v29 + *(_QWORD *)(v4 - 312));
        if ((v46 & 9) != 0)
          *(_QWORD *)(v29 + *(_QWORD *)(v4 - 312)) = v46 & 0xFFFFFFFFFFFFFFF6;
      }
      v47 = *(unsigned __int8 *)(v29 + v28);
      if (v47 != 1)
      {
        if (v47 != 4)
          goto LABEL_27;
        __break(1u);
      }
      v48 = *(int *)(v26 + 40);
      v49 = *(_QWORD *)(v29 + v48);
      if ((v49 & 0x100000000000) == 0)
        *(_QWORD *)(v29 + v48) = v49 | 0x100000000000;
LABEL_27:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v45, v29, v30);
      v50 = *(_QWORD *)(v4 - 168);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v45, 1, v34) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v45, v30);
      }
      else
      {
        v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32);
        v52 = *(_QWORD *)(v4 - 384);
        v51(v52, v45, v34);
        Strong = swift_weakLoadStrong();
        if (!Strong)
        {
          __break(1u);
          goto LABEL_41;
        }
        v54 = *(_QWORD *)(Strong + 24);
        swift_retain();
        swift_release();
        (*(void (**)(uint64_t))(*(_QWORD *)v54 + 360))(v52);
        if (v27)
        {
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 168) + 8))(v52, v34);
          return swift_release();
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 168) + 8))(v52, v34);
        swift_release();
      }
      v57 = *(_QWORD *)(v4 - 344);
      v58 = *(_QWORD *)(v4 - 352);
      v59 = *(_QWORD *)(v4 - 336);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v58, v29 + *(int *)(*(_QWORD *)(v4 - 160) + 52), v59);
      v60 = *(_QWORD *)(v4 - 328);
      v61 = *(_QWORD *)(v4 - 320);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v61) == 1)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v58, v59);
      v62 = *(_QWORD *)(v4 - 392);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v62, v58, v61);
      v63 = swift_weakLoadStrong();
      if (v63)
      {
        v64 = *(_QWORD *)(v63 + 24);
        swift_retain();
        swift_release();
        (*(void (**)(uint64_t))(*(_QWORD *)v64 + 368))(v62);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v61);
        return swift_release();
      }
LABEL_41:
      __break(1u);
      JUMPOUT(0x23AB0A400);
    }
  }
  return result;
}

void sub_23AB0A404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[37];
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v14 = a5;
  v15 = a4;
  v16 = a3;
  v17 = a2;
  v18 = a1;
  v6 = (_QWORD *)*v5;
  v12 = sub_23B1C5BDC();
  v11[36] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v13 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v6[10];
  v10 = v6[12];
  v9 = v6[13];
  v19 = v6[11];
  v20 = v8;
  v21 = v9;
  v22 = v10;
  type metadata accessor for ItemReconciliation();
}

void sub_23AB0A4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 144) = a1;
  v14 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 344) = v14;
  *(_QWORD *)(v13 - 352) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 360) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for PersistenceTrigger();
}

void sub_23AB0A510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;

  *(_QWORD *)(v9 - 136) = a1;
  *(_QWORD *)(v9 - 240) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 584) = (char *)&a9 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v12;
  *(_QWORD *)(v9 - 592) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v14;
  *(_QWORD *)(v9 - 600) = v14;
  type metadata accessor for ThrottlingKey();
}

void sub_23AB0A5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v15 - 560) = a1;
  *(_QWORD *)(v15 - 552) = swift_getTupleTypeMetadata2();
  v16 = sub_23B1C6C98();
  *(_QWORD *)(v15 - 568) = v16;
  *(_QWORD *)(v15 - 576) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v15 - 544) = (char *)&a9 - v17;
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v15 - 456) = v18;
  *(_QWORD *)(v15 - 464) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 512) = (char *)&a9 - v20;
  *(_QWORD *)(v15 - 480) = v13;
  *(_QWORD *)(v15 - 488) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v15 - 528) = (char *)&a9 - v21;
  v22 = sub_23B1C6C98();
  *(_QWORD *)(v15 - 432) = v22;
  *(_QWORD *)(v15 - 440) = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v15 - 424) = (char *)&a9 - v24;
  *(_QWORD *)(v15 - 416) = v14;
  *(_QWORD *)(v15 - 400) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v15 - 472) = (char *)&a9 - v25;
  v27 = type metadata accessor for ItemReconciliationHalf(0, v11, v9, v26);
  *(_QWORD *)(v15 - 296) = v27;
  *(_QWORD *)(v15 - 496) = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v15 - 504) = (char *)&a9 - v28;
  v30 = type metadata accessor for ItemReconciliationHalf(0, v10, v12, v29);
  *(_QWORD *)(v15 - 256) = v30;
  *(_QWORD *)(v15 - 392) = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v15 - 520) = (char *)&a9 - v31;
  *(_QWORD *)(v15 - 120) = v10;
  *(_QWORD *)(v15 - 112) = v11;
  *(_QWORD *)(v15 - 104) = v12;
  *(_QWORD *)(v15 - 96) = v9;
  type metadata accessor for ItemReconciliation();
}

void sub_23AB0A830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v14 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 312) = v14;
  *(_QWORD *)(v13 - 304) = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 408) = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - v20;
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 448) = (char *)&a9 - v21;
  *(_QWORD *)(v13 - 216) = v9;
  *(_QWORD *)(v13 - 208) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 232) = v12;
  *(_QWORD *)(v13 - 224) = v10;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v12;
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AB0A90C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[96];

  *(_QWORD *)(v2 - 272) = a1;
  v3 = sub_23B1C6C98();
  *(_QWORD *)(v2 - 280) = v3;
  *(_QWORD *)(v2 - 288) = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  *(_QWORD *)(v2 - 264) = &v28[-v5];
  *(_QWORD *)(v2 - 248) = *(_QWORD *)(*(_QWORD *)(v2 - 144) - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v2 - 328) = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v2 - 536) = &v28[-v9];
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v28[-v10];
  v12 = sub_23B1C6C98();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v28[-v15];
  v17 = *(_QWORD *)(v1 - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v20 = &v28[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = &v28[-v22];
  MEMORY[0x24BDAC7A8](v21);
  v25 = &v28[-v24];
  *(_QWORD *)(v2 - 160) = v1;
  v26 = *(_QWORD *)(v2 - 152);
  result = sub_23B0C6CC4(v1);
  if (!v26)
  {
    *(_QWORD *)(v2 - 608) = v25;
    *(_QWORD *)(v2 - 152) = v16;
    *(_QWORD *)(v2 - 624) = v13;
    *(_QWORD *)(v2 - 632) = v11;
    *(_QWORD *)(v2 - 648) = v23;
    *(_QWORD *)(v2 - 640) = v20;
    *(_QWORD *)(v2 - 616) = v17;
    if ((*(_DWORD *)(v2 - 192) & 1) != 0)
      sub_23AB09844(*(_QWORD *)(v2 - 128), *(_QWORD *)(v2 - 168));
    if (swift_weakLoadStrong())
      sub_23B0C7004();
    __break(1u);
    JUMPOUT(0x23AB0BED8);
  }
  return result;
}

unint64_t sub_23AB0BF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v6 = a1
     + *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 96), a4)
              + 64);
  v8 = *(_QWORD *)v6;
  v7 = *(_QWORD *)(v6 + 8);
  if (*(_BYTE *)(v6 + 16))
  {
    sub_23AAAE478(*(id *)v6, *(id *)(v6 + 8), *(_BYTE *)(v6 + 16));
  }
  else
  {
    swift_retain();
    if ((v8 & a3) != 0)
      sub_23AB14568();
    if (!v8)
      return v7;
  }
  return v8;
}

void sub_23AB0C050()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AB0C130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t AssociatedTypeWitness;
  uint64_t v40;
  uint64_t AssociatedConformanceWitness;
  uint64_t v42;

  v12 = sub_23B1C6C98();
  *(_QWORD *)(v10 - 496) = v12;
  *(_QWORD *)(v10 - 656) = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v10 - 688) = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v10 - 832) = (char *)&a9 - v16;
  *(_QWORD *)(v10 - 640) = a1;
  *(_QWORD *)(v10 - 624) = *(_QWORD *)(a1 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v10 - 768) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v10 - 824) = (char *)&a9 - v19;
  v20 = *(_QWORD *)(v9 + 88);
  v21 = *(_QWORD *)(v9 + 104);
  v23 = type metadata accessor for ItemReconciliationHalf(0, v20, v21, v22);
  *(_QWORD *)(v10 - 336) = v23;
  *(_QWORD *)(v10 - 352) = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v10 - 368) = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v10 - 376) = (char *)&a9 - v27;
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v10 - 752) = (char *)&a9 - v28;
  v30 = type metadata accessor for SnapshotItem(255, v20, v21, v29);
  v31 = sub_23B1C6C98();
  *(_QWORD *)(v10 - 720) = v31;
  *(_QWORD *)(v10 - 736) = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v10 - 504) = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v10 - 512) = (char *)&a9 - v35;
  *(_QWORD *)(v10 - 592) = v30;
  *(_QWORD *)(v10 - 600) = *(_QWORD *)(v30 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v10 - 776) = (char *)&a9 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v10 - 792) = (char *)&a9 - v38;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v42 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 144) = AssociatedTypeWitness;
  *(_QWORD *)(v10 - 136) = v40;
  *(_QWORD *)(v10 - 128) = AssociatedConformanceWitness;
  *(_QWORD *)(v10 - 120) = v42;
  type metadata accessor for FileItemVersion();
}

void sub_23AB0C42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v15 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 664) = v15;
  *(_QWORD *)(v13 - 672) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 696) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 848) = (char *)&a9 - v19;
  *(_QWORD *)(v13 - 648) = a1;
  *(_QWORD *)(v13 - 632) = *(_QWORD *)(a1 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 680) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 840) = (char *)&a9 - v22;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 296) = v24;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 384) = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 392) = (char *)&a9 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v13 - 408) = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v13 - 400) = (char *)&a9 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v13 - 256) = (char *)&a9 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v13 - 528) = (char *)&a9 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v13 - 808) = (char *)&a9 - v38;
  *(_QWORD *)(v13 - 264) = AssociatedTypeWitness;
  *(_QWORD *)(v13 - 280) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v39 = MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)(v13 - 536) = (char *)&a9 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  *(_QWORD *)(v13 - 544) = (char *)&a9 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  *(_QWORD *)(v13 - 488) = (char *)&a9 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  *(_QWORD *)(v13 - 520) = (char *)&a9 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  *(_QWORD *)(v13 - 704) = (char *)&a9 - v50;
  MEMORY[0x24BDAC7A8](v49);
  *(_QWORD *)(v13 - 856) = (char *)&a9 - v51;
  v53 = type metadata accessor for ItemReconciliationHalf(0, v9, v10, v52);
  *(_QWORD *)(v13 - 344) = v53;
  *(_QWORD *)(v13 - 360) = *(_QWORD *)(v53 - 8);
  v54 = MEMORY[0x24BDAC7A8](v53);
  *(_QWORD *)(v13 - 416) = (char *)&a9 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BDAC7A8](v54);
  *(_QWORD *)(v13 - 424) = (char *)&a9 - v57;
  MEMORY[0x24BDAC7A8](v56);
  *(_QWORD *)(v13 - 760) = (char *)&a9 - v58;
  v60 = type metadata accessor for SnapshotItem(255, v9, v10, v59);
  v61 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 728) = v61;
  *(_QWORD *)(v13 - 744) = *(_QWORD *)(v61 - 8);
  v62 = MEMORY[0x24BDAC7A8](v61);
  *(_QWORD *)(v13 - 552) = (char *)&a9 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = MEMORY[0x24BDAC7A8](v62);
  *(_QWORD *)(v13 - 560) = (char *)&a9 - v65;
  *(_QWORD *)(v13 - 608) = v60;
  *(_QWORD *)(v13 - 616) = *(_QWORD *)(v60 - 8);
  v66 = MEMORY[0x24BDAC7A8](v64);
  *(_QWORD *)(v13 - 784) = (char *)&a9 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v66);
  *(_QWORD *)(v13 - 800) = (char *)&a9 - v68;
  v69 = swift_getAssociatedTypeWitness();
  v70 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 304) = v70;
  *(_QWORD *)(v13 - 320) = *(_QWORD *)(v70 - 8);
  v71 = MEMORY[0x24BDAC7A8](v70);
  *(_QWORD *)(v13 - 568) = (char *)&a9 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = MEMORY[0x24BDAC7A8](v71);
  *(_QWORD *)(v13 - 816) = (char *)&a9 - v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  *(_QWORD *)(v13 - 432) = (char *)&a9 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  *(_QWORD *)(v13 - 440) = (char *)&a9 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  *(_QWORD *)(v13 - 464) = (char *)&a9 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  *(_QWORD *)(v13 - 448) = (char *)&a9 - v82;
  v83 = MEMORY[0x24BDAC7A8](v81);
  *(_QWORD *)(v13 - 456) = (char *)&a9 - v84;
  *(_QWORD *)(v13 - 272) = v69;
  *(_QWORD *)(v13 - 288) = *(_QWORD *)(v69 - 8);
  v85 = MEMORY[0x24BDAC7A8](v83);
  *(_QWORD *)(v13 - 712) = (char *)&a9 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = MEMORY[0x24BDAC7A8](v85);
  *(_QWORD *)(v13 - 864) = (char *)&a9 - v88;
  v89 = MEMORY[0x24BDAC7A8](v87);
  *(_QWORD *)(v13 - 576) = (char *)&a9 - v90;
  v91 = MEMORY[0x24BDAC7A8](v89);
  *(_QWORD *)(v13 - 584) = (char *)&a9 - v92;
  v93 = MEMORY[0x24BDAC7A8](v91);
  *(_QWORD *)(v13 - 240) = (char *)&a9 - v94;
  v95 = MEMORY[0x24BDAC7A8](v93);
  *(_QWORD *)(v13 - 472) = (char *)&a9 - v96;
  MEMORY[0x24BDAC7A8](v95);
  *(_QWORD *)(v13 - 480) = (char *)&a9 - v97;
  v98 = sub_23B1C5E4C();
  *(_QWORD *)(v13 - 176) = *(_QWORD *)(v98 - 8);
  *(_QWORD *)(v13 - 168) = v98;
  v99 = MEMORY[0x24BDAC7A8](v98);
  MEMORY[0x24BDAC7A8](v99);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - v100;
  *(_QWORD *)(v13 - 200) = v9;
  *(_QWORD *)(v13 - 192) = v10;
  *(_QWORD *)(v13 - 144) = v9;
  *(_QWORD *)(v13 - 136) = v12;
  *(_QWORD *)(v13 - 216) = v12;
  *(_QWORD *)(v13 - 208) = v11;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v11;
  type metadata accessor for ItemReconciliation();
}

void sub_23AB0CBC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[96];

  v4 = sub_23B1C6C98();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v20[-v7];
  v9 = *(_QWORD *)(a1 - 8);
  v10 = MEMORY[0x24BDAC7A8](v6);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v20[-v12];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 16))(v8, *(_QWORD *)(v2 - 160), v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v8, 1, a1) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
    v14 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v15 = sub_23B1C5E40();
    v16 = sub_23B1C6A94();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_23AA66000, v15, v16, "[interactive] testingOperationForEntry, missing entry", v17, 2u);
      MEMORY[0x23B8614BC](v17, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 176) + 8))(v1, *(_QWORD *)(v2 - 168));
    v18 = *(_QWORD *)(v2 - 216);
    *(_QWORD *)(v2 - 144) = *(_QWORD *)(v2 - 200);
    *(_QWORD *)(v2 - 136) = v18;
    v19 = *(_QWORD *)(v2 - 208);
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 192);
    *(_QWORD *)(v2 - 120) = v19;
    type metadata accessor for TestingOperation();
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v13, v8, a1);
  sub_23B0C8A64(*(_QWORD *)(v2 - 224), a1);
}

uint64_t sub_23AB0CDAC(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t Strong;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(_QWORD, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  void (*v192)(uint64_t, uint64_t);
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t (*v197)(uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  void (*v213)(uint64_t, uint64_t);
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(uint64_t, uint64_t, uint64_t);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  void (*v224)(uint64_t, uint64_t, uint64_t);
  uint64_t v225;
  void (*v226)(uint64_t, uint64_t, uint64_t);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  void (*v231)(uint64_t, uint64_t, uint64_t);
  uint64_t v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  char v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  int *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  void (*v250)(uint64_t, uint64_t);
  id v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char v256;
  char v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  int *TupleTypeMetadata;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void *v277;
  void (*v278)(uint64_t, uint64_t);
  id v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(uint64_t, uint64_t, uint64_t);
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void (*v299)(uint64_t, uint64_t, uint64_t);
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t (*v306)(_QWORD, uint64_t, uint64_t);
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  int *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  void *v322;
  void (*v323)(uint64_t, uint64_t);
  id v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t (*v328)(_QWORD, uint64_t, uint64_t);
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  int *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void *v344;
  void (*v345)(uint64_t, uint64_t);
  id v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;

  *(_QWORD *)(v9 - 160) = v4;
  if (v5)
  {
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    return v10(*(_QWORD *)(v9 - 160), v7);
  }
  *(_QWORD *)(v9 - 152) = 0;
  v15 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v16(v6, *(_QWORD *)(v9 - 160), v7);
  *(_QWORD *)(v9 - 872) = a1 >> 62;
  sub_23AB2277C(a1, a2, a3);
  sub_23AB2277C(a1, a2, a3);
  v17 = sub_23B1C5E40();
  v18 = sub_23B1C6A94();
  *(_DWORD *)(v9 - 876) = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    *(_QWORD *)(v9 - 224) = v7;
    v20 = (_DWORD *)v19;
    v21 = swift_slowAlloc();
    *(_QWORD *)(v9 - 888) = v21;
    *(_QWORD *)(v9 - 144) = v21;
    *v20 = 136315394;
    *(_QWORD *)(v9 - 904) = v20 + 1;
    v16(v8, v6, *(_QWORD *)(v9 - 224));
    (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v6, *(_QWORD *)(v9 - 224));
    v22 = *(_QWORD *)(v9 - 224);
    *(_QWORD *)(v9 - 896) = v17;
    sub_23B0CA854(v22);
  }
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  v10(v6, v7);
  sub_23AB22788(a1, a2, a3);
  sub_23AB22788(a1, a2, a3);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 176) + 8))(*(_QWORD *)(v9 - 232), *(_QWORD *)(v9 - 168));
  v23 = a3;
  v24 = a1;
  v25 = *(_QWORD *)(v9 - 152);
  v27 = *(_QWORD *)(v9 - 248);
  v26 = *(_QWORD *)(v9 - 240);
  v28 = *(_QWORD *)(v9 - 872);
  v29 = *(_QWORD *)(v9 - 256);
  if ((_DWORD)v28 == 1)
  {
    switch((char)v24)
    {
      case 0:
        v40 = v7;
        v41 = *(_QWORD *)(v9 - 152);
        *(_QWORD *)(v9 - 240) = v24;
        *(_QWORD *)(v9 - 232) = v23;
        *(_QWORD *)(v9 - 176) = a2;
        *(_QWORD *)(v9 - 168) = v10;
        Strong = swift_weakLoadStrong();
        if (!Strong)
          goto LABEL_93;
        v43 = *(_QWORD *)(Strong + 40);
        swift_retain();
        swift_release();
        v44 = *(_QWORD *)(v9 - 312);
        v45 = *(void (**)(uint64_t))(v44 + 16);
        *(_QWORD *)(v9 - 224) = *(_QWORD *)(v9 - 160) + *(int *)(v40 + 52);
        v46 = *(_QWORD *)(v9 - 296);
        v45(v29);
        v47 = *(_QWORD *)(v9 - 280);
        v48 = *(_QWORD *)(v9 - 264);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v29, 1, v48) == 1)
        {
          swift_release();
          sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v40);
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v29, v46);
          goto LABEL_40;
        }
        v142 = v41;
        v143 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32);
        v144 = *(_QWORD *)(v9 - 520);
        v143(v144, v29, v48);
        v145 = *(_QWORD *)(v9 - 512);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v43 + 240))(v144, 1);
        if (v142)
        {
          swift_release();
          sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
          (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v144, v48);
          return (*(uint64_t (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v40);
        }
        v171 = v143;
        v172 = *(_QWORD *)(v9 - 600);
        v173 = *(_QWORD *)(v9 - 592);
        v174 = v40;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v145, 1, v173) == 1)
        {
          swift_release();
          sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 280) + 8))(v144, *(_QWORD *)(v9 - 264));
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v40);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 736) + 8))(v145, *(_QWORD *)(v9 - 720));
          goto LABEL_40;
        }
        v226 = *(void (**)(uint64_t, uint64_t, uint64_t))(v172 + 32);
        v227 = v145;
        v228 = *(_QWORD *)(v9 - 792);
        v226(v228, v227, v173);
        v229 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 296))(v144);
        *(_QWORD *)(v9 - 152) = 0;
        v263 = v230;
        v264 = v229;
        swift_release();
        sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
        if ((v263 & 1) == 0)
        {
          MEMORY[0x24BDAC7A8](v265);
          v266 = *(_QWORD *)(v9 - 264);
          v267 = *(_QWORD *)(v9 - 720);
          *(_QWORD *)(v9 - 144) = v266;
          *(_QWORD *)(v9 - 136) = v267;
          *(_QWORD *)(v9 - 128) = MEMORY[0x24BEE1E88];
          *(_QWORD *)(v9 - 120) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
          TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
          v269 = v144;
          v270 = *(_QWORD *)(v9 - 184);
          v271 = v270 + TupleTypeMetadata[12];
          *(_QWORD *)(v9 - 232) = TupleTypeMetadata[16];
          *(_QWORD *)(v9 - 176) = TupleTypeMetadata[20];
          v171(v270, v269, v266);
          v272 = *(_QWORD *)(v9 - 592);
          v226(v271, v228, v272);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 600) + 56))(v271, 0, 1, v272);
          v273 = *(_QWORD *)(v9 - 224);
          *(_QWORD *)(v270 + *(_QWORD *)(v9 - 232)) = v264;
          v274 = *(_QWORD *)(v9 - 352);
          v275 = *(_QWORD *)(v9 - 752);
          v276 = *(_QWORD *)(v9 - 336);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v274 + 16))(v275, v273, v276);
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v174);
          v277 = *(void **)(v275 + *(int *)(v276 + 72));
          v278 = *(void (**)(uint64_t, uint64_t))(v274 + 8);
          v279 = v277;
          v278(v275, v276);
          *(_QWORD *)(v270 + *(_QWORD *)(v9 - 176)) = v277;
          v280 = *(_QWORD *)(v9 - 208);
          v282 = *(_QWORD *)(v9 - 200);
          v281 = *(_QWORD *)(v9 - 192);
          *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 216);
          *(_QWORD *)(v9 - 136) = v282;
          *(_QWORD *)(v9 - 128) = v280;
          *(_QWORD *)(v9 - 120) = v281;
          type metadata accessor for DirectionalTestingOperation();
        }
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 600) + 8))(v228, *(_QWORD *)(v9 - 592));
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 280) + 8))(v144, *(_QWORD *)(v9 - 264));
        break;
      case 1:
        *(_QWORD *)(v9 - 240) = v24;
        *(_QWORD *)(v9 - 232) = v23;
        *(_QWORD *)(v9 - 176) = a2;
        *(_QWORD *)(v9 - 168) = v10;
        v76 = v25;
        v77 = swift_weakLoadStrong();
        v78 = *(_QWORD *)(v9 - 280);
        if (!v77)
          goto LABEL_95;
        v79 = *(_QWORD *)(v77 + 40);
        swift_retain();
        swift_release();
        v80 = *(_QWORD *)(v9 - 312);
        v81 = *(void (**)(uint64_t))(v80 + 16);
        v82 = *(_QWORD *)(v9 - 400);
        *(_QWORD *)(v9 - 248) = *(_QWORD *)(v9 - 160) + *(int *)(v7 + 52);
        v83 = *(_QWORD *)(v9 - 296);
        v81(v82);
        v84 = *(_QWORD *)(v9 - 264);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v82, 1, v84) == 1)
        {
          swift_release();
          sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v83);
          goto LABEL_40;
        }
        v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32);
        v140 = *(_QWORD *)(v9 - 488);
        v139(v140, v82, v84);
        v141 = *(_QWORD *)(v9 - 504);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v79 + 240))(v140, 1);
        if (v76)
        {
          swift_release();
          sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
          (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v140, v84);
          return (*(uint64_t (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
        }
        *(_QWORD *)(v9 - 256) = v139;
        v169 = *(_QWORD *)(v9 - 600);
        v170 = *(_QWORD *)(v9 - 592);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v169 + 48))(v141, 1, v170) == 1)
        {
          swift_release();
          sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 280) + 8))(v140, *(_QWORD *)(v9 - 264));
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 736) + 8))(v141, *(_QWORD *)(v9 - 720));
        }
        else
        {
          *(_QWORD *)(v9 - 224) = v7;
          v224 = *(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 32);
          v225 = *(_QWORD *)(v9 - 776);
          v224(v225, v141, v170);
          v255 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v79 + 296))(v140);
          v257 = v256;
          swift_release();
          sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
          if ((v257 & 1) != 0)
          {
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 600) + 8))(v225, *(_QWORD *)(v9 - 592));
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 280) + 8))(*(_QWORD *)(v9 - 488), *(_QWORD *)(v9 - 264));
            (*(void (**)(_QWORD, _QWORD))(v9 - 168))(*(_QWORD *)(v9 - 160), *(_QWORD *)(v9 - 224));
          }
          else
          {
            *(_QWORD *)(v9 - 232) = v224;
            v258 = *(_QWORD *)(v9 - 320);
            v259 = *(_QWORD *)(v9 - 816);
            v260 = *(_QWORD *)(v9 - 304);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v258 + 16))(v259, *(_QWORD *)(v9 - 160), v260);
            v261 = *(_QWORD *)(v9 - 288);
            v262 = *(_QWORD *)(v9 - 272);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v261 + 48))(v259, 1, v262) == 1)
            {
              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 600) + 8))(v225, *(_QWORD *)(v9 - 592));
              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 280) + 8))(*(_QWORD *)(v9 - 488), *(_QWORD *)(v9 - 264));
              (*(void (**)(_QWORD, _QWORD))(v9 - 168))(*(_QWORD *)(v9 - 160), *(_QWORD *)(v9 - 224));
              (*(void (**)(uint64_t, uint64_t))(v258 + 8))(v259, v260);
            }
            else
            {
              *(_QWORD *)(v9 - 240) = v255;
              *(_QWORD *)(v9 - 152) = 0;
              v292 = *(void (**)(uint64_t, uint64_t, uint64_t))(v261 + 32);
              v293 = *(_QWORD *)(v9 - 864);
              *(_QWORD *)(v9 - 296) = v292;
              v292(v293, v259, v262);
              v294 = *(_QWORD *)(v9 - 656);
              v295 = *(_QWORD *)(v9 - 832);
              v296 = *(_QWORD *)(v9 - 496);
              (*(void (**)(uint64_t, _QWORD, uint64_t))(v294 + 16))(v295, *(_QWORD *)(v9 - 160) + *(int *)(*(_QWORD *)(v9 - 344) + 48), v296);
              v297 = *(_QWORD *)(v9 - 624);
              v298 = *(_QWORD *)(v9 - 640);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v297 + 48))(v295, 1, v298) != 1)
              {
                v306 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v297 + 32);
                *(_QWORD *)(v9 - 280) = v306;
                v307 = v306(*(_QWORD *)(v9 - 824), v295, v298);
                MEMORY[0x24BDAC7A8](v307);
                v308 = *(_QWORD *)(v9 - 264);
                v309 = *(_QWORD *)(v9 - 720);
                *(_QWORD *)(v9 - 144) = v308;
                *(_QWORD *)(v9 - 136) = v309;
                *(_QWORD *)(v9 - 128) = *(_QWORD *)(v9 - 304);
                *(_QWORD *)(v9 - 120) = v296;
                v310 = MEMORY[0x24BEE1E88];
                *(_QWORD *)(v9 - 112) = &type metadata for Fields;
                *(_QWORD *)(v9 - 104) = v310;
                *(_QWORD *)(v9 - 96) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
                v311 = (int *)swift_getTupleTypeMetadata();
                v312 = *(_QWORD *)(v9 - 184);
                v313 = v312 + v311[12];
                v314 = v312 + v311[16];
                v315 = v312 + v311[20];
                *(_QWORD *)(v9 - 312) = v311[24];
                *(_QWORD *)(v9 - 320) = v311[28];
                *(_QWORD *)(v9 - 304) = v311[32];
                (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 - 256))(v312, *(_QWORD *)(v9 - 488), v308);
                v316 = *(_QWORD *)(v9 - 592);
                (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 - 232))(v313, *(_QWORD *)(v9 - 776), v316);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 600) + 56))(v313, 0, 1, v316);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 296))(v314, v293, v262);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v261 + 56))(v314, 0, 1, v262);
                v317 = *(_QWORD *)(v9 - 640);
                (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 - 280))(v315, *(_QWORD *)(v9 - 824), v317);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 624) + 56))(v315, 0, 1, v317);
                *(_QWORD *)(v312 + *(_QWORD *)(v9 - 312)) = *(_QWORD *)(v9 - 176);
                v318 = *(_QWORD *)(v9 - 248);
                *(_QWORD *)(v312 + *(_QWORD *)(v9 - 320)) = *(_QWORD *)(v9 - 240);
                v319 = *(_QWORD *)(v9 - 352);
                v320 = *(_QWORD *)(v9 - 752);
                v321 = *(_QWORD *)(v9 - 336);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v319 + 16))(v320, v318, v321);
                (*(void (**)(_QWORD, _QWORD))(v9 - 168))(*(_QWORD *)(v9 - 160), *(_QWORD *)(v9 - 224));
                v322 = *(void **)(v320 + *(int *)(v321 + 72));
                v323 = *(void (**)(uint64_t, uint64_t))(v319 + 8);
                v324 = v322;
                v323(v320, v321);
                *(_QWORD *)(v312 + *(_QWORD *)(v9 - 304)) = v322;
                v325 = *(_QWORD *)(v9 - 208);
                v327 = *(_QWORD *)(v9 - 200);
                v326 = *(_QWORD *)(v9 - 192);
                *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 216);
                *(_QWORD *)(v9 - 136) = v327;
                *(_QWORD *)(v9 - 128) = v325;
                *(_QWORD *)(v9 - 120) = v326;
                type metadata accessor for DirectionalTestingOperation();
              }
              (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v293, v262);
              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 600) + 8))(*(_QWORD *)(v9 - 776), *(_QWORD *)(v9 - 592));
              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 280) + 8))(*(_QWORD *)(v9 - 488), *(_QWORD *)(v9 - 264));
              (*(void (**)(_QWORD, _QWORD))(v9 - 168))(*(_QWORD *)(v9 - 160), *(_QWORD *)(v9 - 224));
              (*(void (**)(uint64_t, uint64_t))(v294 + 8))(v295, v296);
            }
          }
        }
        goto LABEL_40;
      case 2:
        *(_QWORD *)(v9 - 168) = v10;
        sub_23AB22788(v24, a2, v23);
        v96 = *(_QWORD *)(v9 - 160) + *(int *)(v7 + 52);
        v97 = *(_QWORD *)(v9 - 312);
        v98 = *(_QWORD *)(v9 - 408);
        v35 = *(_QWORD *)(v9 - 296);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v98, v96, v35);
        v99 = *(_QWORD *)(v9 - 280);
        v100 = *(_QWORD *)(v9 - 264);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v98, 1, v100) == 1)
        {
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
          v38 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
          v39 = v98;
          goto LABEL_35;
        }
        *(_QWORD *)(v9 - 176) = v96;
        v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32);
        *(_QWORD *)(v9 - 224) = v125;
        v125(v27, v98, v100);
        v126 = *(_QWORD *)(v9 - 320);
        v127 = *(_QWORD *)(v9 - 568);
        v128 = *(_QWORD *)(v9 - 304);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v126 + 16))(v127, *(_QWORD *)(v9 - 160), v128);
        v129 = *(_QWORD *)(v9 - 288);
        v130 = *(_QWORD *)(v9 - 272);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v129 + 48))(v127, 1) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v27, v100);
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
          (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v127, v128);
        }
        else
        {
          v158 = *(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 32);
          v159 = *(_QWORD *)(v9 - 712);
          v160 = v127;
          v161 = v130;
          *(_QWORD *)(v9 - 232) = v158;
          v158(v159, v160, v130);
          v162 = *(_QWORD *)(v9 - 656);
          v163 = *(_QWORD *)(v9 - 688);
          (*(void (**)(uint64_t, _QWORD, _QWORD))(v162 + 16))(v163, *(_QWORD *)(v9 - 160) + *(int *)(*(_QWORD *)(v9 - 344) + 48), *(_QWORD *)(v9 - 496));
          v164 = *(_QWORD *)(v9 - 624);
          v165 = *(_QWORD *)(v9 - 640);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v163, 1, v165) != 1)
          {
            v197 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v164 + 32);
            *(_QWORD *)(v9 - 240) = v197;
            v198 = v163;
            v199 = *(_QWORD *)(v9 - 768);
            v200 = v197(v199, v198, v165);
            MEMORY[0x24BDAC7A8](v200);
            v201 = v165;
            v202 = *(_QWORD *)(v9 - 264);
            v203 = *(_QWORD *)(v9 - 304);
            *(_QWORD *)(v9 - 144) = v202;
            *(_QWORD *)(v9 - 136) = v203;
            *(_QWORD *)(v9 - 128) = *(_QWORD *)(v9 - 496);
            *(_QWORD *)(v9 - 120) = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74E0);
            *(_QWORD *)(v9 - 112) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
            v204 = (int *)swift_getTupleTypeMetadata();
            v205 = v27;
            v206 = *(_QWORD *)(v9 - 184);
            v207 = v206 + v204[12];
            v208 = v206 + v204[16];
            *(_QWORD *)(v9 - 280) = v204[20];
            *(_QWORD *)(v9 - 256) = v204[24];
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 224))(v206, v205, v202);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 232))(v207, v159, v161);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 288) + 56))(v207, 0, 1, v161);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 240))(v208, v199, v201);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 624) + 56))(v208, 0, 1, v201);
            *(_BYTE *)(v206 + *(_QWORD *)(v9 - 280)) = 0;
            v209 = *(_QWORD *)(v9 - 352);
            v210 = *(_QWORD *)(v9 - 752);
            v211 = *(_QWORD *)(v9 - 336);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v209 + 16))(v210, *(_QWORD *)(v9 - 176), v211);
            (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
            v212 = *(void **)(v210 + *(int *)(v211 + 72));
            v213 = *(void (**)(uint64_t, uint64_t))(v209 + 8);
            v214 = v212;
            v213(v210, v211);
            *(_QWORD *)(v206 + *(_QWORD *)(v9 - 256)) = v212;
            v215 = *(_QWORD *)(v9 - 208);
            v217 = *(_QWORD *)(v9 - 200);
            v216 = *(_QWORD *)(v9 - 192);
            *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 216);
            *(_QWORD *)(v9 - 136) = v217;
            *(_QWORD *)(v9 - 128) = v215;
            *(_QWORD *)(v9 - 120) = v216;
            type metadata accessor for DirectionalTestingOperation();
          }
          (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v159, v161);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 280) + 8))(v27, *(_QWORD *)(v9 - 264));
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
          (*(void (**)(uint64_t, _QWORD))(v162 + 8))(v163, *(_QWORD *)(v9 - 496));
        }
        goto LABEL_40;
      case 6:
        sub_23AB22788(v24, a2, v23);
        v54 = *(_QWORD *)(v9 - 160);
        v55 = *(_QWORD *)(v9 - 352);
        v56 = *(_QWORD *)(v9 - 368);
        v57 = *(_QWORD *)(v9 - 336);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v56, v54 + *(int *)(v7 + 52), v57);
        v10(v54, v7);
        v58 = *(_QWORD *)(v9 - 312);
        v59 = *(_QWORD *)(v9 - 384);
        v35 = *(_QWORD *)(v9 - 296);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v59, v56, v35);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v57);
        v60 = *(_QWORD *)(v9 - 280);
        v61 = *(_QWORD *)(v9 - 264);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v59, 1, v61) != 1)
        {
          v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32);
          v63 = *(_QWORD *)(v9 - 536);
          v62(v63, v59, v61);
          v62(*(_QWORD *)(v9 - 184), v63, v61);
          v64 = *(_QWORD *)(v9 - 208);
          v66 = *(_QWORD *)(v9 - 200);
          v65 = *(_QWORD *)(v9 - 192);
          *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 216);
          *(_QWORD *)(v9 - 136) = v66;
          *(_QWORD *)(v9 - 128) = v64;
          *(_QWORD *)(v9 - 120) = v65;
          type metadata accessor for DirectionalTestingOperation();
        }
        goto LABEL_34;
      case 12:
        goto LABEL_16;
      case 23:
        sub_23AB22788(v24, a2, v23);
        v101 = *(_QWORD *)(v9 - 160);
        v102 = *(_QWORD *)(v9 - 352);
        v103 = *(_QWORD *)(v9 - 376);
        v104 = *(_QWORD *)(v9 - 336);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v103, v101 + *(int *)(v7 + 52), v104);
        v10(v101, v7);
        v58 = *(_QWORD *)(v9 - 312);
        v59 = *(_QWORD *)(v9 - 392);
        v35 = *(_QWORD *)(v9 - 296);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v59, v103, v35);
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v103, v104);
        v105 = *(_QWORD *)(v9 - 280);
        v106 = *(_QWORD *)(v9 - 264);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v59, 1, v106) != 1)
        {
          v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32);
          v108 = *(_QWORD *)(v9 - 544);
          v107(v108, v59, v106);
          v107(*(_QWORD *)(v9 - 184), v108, v106);
          v109 = *(_QWORD *)(v9 - 208);
          v111 = *(_QWORD *)(v9 - 200);
          v110 = *(_QWORD *)(v9 - 192);
          *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 216);
          *(_QWORD *)(v9 - 136) = v111;
          *(_QWORD *)(v9 - 128) = v109;
          *(_QWORD *)(v9 - 120) = v110;
          type metadata accessor for DirectionalTestingOperation();
        }
LABEL_34:
        v38 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
        v39 = v59;
        goto LABEL_35;
      default:
        ((void (*)(const char *, uint64_t, uint64_t, uint64_t))sub_23AFF129C)("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 1046);
    }
LABEL_84:
    v290 = *(_QWORD *)(v9 - 160);
    v291 = v174;
LABEL_85:
    (*(void (**)(uint64_t, uint64_t))(v9 - 168))(v290, v291);
LABEL_40:
    v123 = *(_QWORD *)(v9 - 216);
    *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 200);
    *(_QWORD *)(v9 - 136) = v123;
    v124 = *(_QWORD *)(v9 - 208);
    *(_QWORD *)(v9 - 128) = *(_QWORD *)(v9 - 192);
    *(_QWORD *)(v9 - 120) = v124;
    type metadata accessor for TestingOperation();
  }
  if ((_DWORD)v28)
  {
LABEL_16:
    sub_23AB22788(v24, a2, v23);
    v10(*(_QWORD *)(v9 - 160), v7);
    goto LABEL_40;
  }
  switch((char)v24)
  {
    case 0:
      v30 = *(_QWORD *)(v9 - 152);
      *(_QWORD *)(v9 - 240) = v24;
      *(_QWORD *)(v9 - 232) = v23;
      *(_QWORD *)(v9 - 176) = a2;
      v31 = swift_weakLoadStrong();
      if (!v31)
      {
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        ((void (*)(const char *, uint64_t, uint64_t, uint64_t))sub_23AFF129C)("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 995);
      }
      v32 = *(_QWORD *)(v31 + 32);
      swift_retain();
      swift_release();
      v33 = *(_QWORD *)(v9 - 320);
      v34 = *(_QWORD *)(v9 - 456);
      v35 = *(_QWORD *)(v9 - 304);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 16))(v34, *(_QWORD *)(v9 - 160), v35);
      v36 = *(_QWORD *)(v9 - 288);
      v37 = *(_QWORD *)(v9 - 272);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v37) == 1)
      {
        swift_release();
        sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
        v10(*(_QWORD *)(v9 - 160), v7);
        v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v39 = v34;
LABEL_35:
        v118 = v35;
LABEL_39:
        v38(v39, v118);
        goto LABEL_40;
      }
      *(_QWORD *)(v9 - 224) = v7;
      v136 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
      v137 = *(_QWORD *)(v9 - 480);
      v136(v137, v34, v37);
      v138 = *(_QWORD *)(v9 - 560);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v32 + 240))(v137, 1);
      if (v30)
      {
        swift_release();
        sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v137, v37);
        v7 = *(_QWORD *)(v9 - 224);
        return v10(*(_QWORD *)(v9 - 160), v7);
      }
      v166 = v136;
      v167 = *(_QWORD *)(v9 - 616);
      v168 = *(_QWORD *)(v9 - 608);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v138, 1, v168) == 1)
      {
        swift_release();
        sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 288) + 8))(*(_QWORD *)(v9 - 480), *(_QWORD *)(v9 - 272));
        v10(*(_QWORD *)(v9 - 160), *(_QWORD *)(v9 - 224));
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 744) + 8))(v138, *(_QWORD *)(v9 - 728));
        goto LABEL_40;
      }
      *(_QWORD *)(v9 - 168) = v10;
      v218 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 32);
      v219 = v138;
      v220 = *(_QWORD *)(v9 - 800);
      v218(v220, v219, v168);
      v221 = *(_QWORD *)(v9 - 480);
      v222 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v32 + 296))(v221);
      *(_QWORD *)(v9 - 152) = 0;
      v235 = v222;
      v236 = v223;
      swift_release();
      sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
      if ((v236 & 1) == 0)
      {
        v238 = v235;
        MEMORY[0x24BDAC7A8](v237);
        v239 = *(_QWORD *)(v9 - 272);
        v240 = *(_QWORD *)(v9 - 728);
        *(_QWORD *)(v9 - 144) = v239;
        *(_QWORD *)(v9 - 136) = v240;
        *(_QWORD *)(v9 - 128) = MEMORY[0x24BEE1E88];
        *(_QWORD *)(v9 - 120) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
        v241 = (int *)swift_getTupleTypeMetadata();
        v242 = *(_QWORD *)(v9 - 184);
        v243 = v242 + v241[12];
        *(_QWORD *)(v9 - 232) = v241[16];
        *(_QWORD *)(v9 - 176) = v241[20];
        v166(v242, v221, v239);
        v244 = *(_QWORD *)(v9 - 608);
        v218(v243, v220, v244);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 616) + 56))(v243, 0, 1, v244);
        *(_QWORD *)(v242 + *(_QWORD *)(v9 - 232)) = v238;
        v245 = *(_QWORD *)(v9 - 360);
        v246 = *(_QWORD *)(v9 - 760);
        v247 = *(_QWORD *)(v9 - 160);
        v248 = *(_QWORD *)(v9 - 344);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v245 + 16))(v246, v247, v248);
        (*(void (**)(uint64_t, _QWORD))(v9 - 168))(v247, *(_QWORD *)(v9 - 224));
        v249 = *(void **)(v246 + *(int *)(v248 + 72));
        v250 = *(void (**)(uint64_t, uint64_t))(v245 + 8);
        v251 = v249;
        v250(v246, v248);
        *(_QWORD *)(v242 + *(_QWORD *)(v9 - 176)) = v249;
        v252 = *(_QWORD *)(v9 - 192);
        v254 = *(_QWORD *)(v9 - 216);
        v253 = *(_QWORD *)(v9 - 208);
        *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 200);
        *(_QWORD *)(v9 - 136) = v254;
        *(_QWORD *)(v9 - 128) = v252;
        *(_QWORD *)(v9 - 120) = v253;
        type metadata accessor for DirectionalTestingOperation();
      }
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 616) + 8))(v220, *(_QWORD *)(v9 - 608));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 288) + 8))(v221, *(_QWORD *)(v9 - 272));
      v290 = *(_QWORD *)(v9 - 160);
      v291 = *(_QWORD *)(v9 - 224);
      goto LABEL_85;
    case 1:
      v67 = v7;
      v68 = *(_QWORD *)(v9 - 152);
      *(_QWORD *)(v9 - 240) = v24;
      *(_QWORD *)(v9 - 232) = v23;
      *(_QWORD *)(v9 - 176) = a2;
      v69 = swift_weakLoadStrong();
      if (!v69)
        goto LABEL_94;
      v70 = *(_QWORD *)(v69 + 32);
      swift_retain();
      swift_release();
      v71 = *(_QWORD *)(v9 - 320);
      v72 = *(_QWORD *)(v9 - 448);
      v73 = *(_QWORD *)(v9 - 304);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v71 + 16))(v72, *(_QWORD *)(v9 - 160), v73);
      v74 = *(_QWORD *)(v9 - 288);
      v75 = *(_QWORD *)(v9 - 272);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v72, 1, v75) == 1)
      {
        swift_release();
        sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
        v10(*(_QWORD *)(v9 - 160), v67);
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v72, v73);
        goto LABEL_40;
      }
      *(_QWORD *)(v9 - 168) = v10;
      v146 = v68;
      v147 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32);
      v148 = *(_QWORD *)(v9 - 472);
      v147(v148, v72, v75);
      v149 = *(_QWORD *)(v9 - 552);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v70 + 240))(v148, 1);
      if (!v146)
      {
        v175 = *(_QWORD *)(v9 - 616);
        v176 = *(_QWORD *)(v9 - 608);
        v174 = v67;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v149, 1, v176) == 1)
        {
          swift_release();
          sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 288) + 8))(*(_QWORD *)(v9 - 472), *(_QWORD *)(v9 - 272));
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v67);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 744) + 8))(v149, *(_QWORD *)(v9 - 728));
          goto LABEL_40;
        }
        v231 = *(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 32);
        v232 = *(_QWORD *)(v9 - 784);
        v231(v232, v149, v176);
        v233 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v70 + 296))(*(_QWORD *)(v9 - 472));
        *(_QWORD *)(v9 - 152) = 0;
        v283 = v234;
        v284 = v233;
        swift_release();
        sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
        if ((v283 & 1) == 0)
        {
          *(_QWORD *)(v9 - 232) = v284;
          v285 = *(_QWORD *)(v9 - 160) + *(int *)(v174 + 52);
          v286 = *(_QWORD *)(v9 - 312);
          v287 = *(_QWORD *)(v9 - 808);
          (*(void (**)(uint64_t, uint64_t, _QWORD))(v286 + 16))(v287, v285, *(_QWORD *)(v9 - 296));
          v288 = *(_QWORD *)(v9 - 280);
          v289 = *(_QWORD *)(v9 - 264);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(v288 + 48))(v287, 1) == 1)
          {
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 616) + 8))(v232, *(_QWORD *)(v9 - 608));
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 288) + 8))(*(_QWORD *)(v9 - 472), *(_QWORD *)(v9 - 272));
            (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v174);
            (*(void (**)(uint64_t, _QWORD))(v286 + 8))(v287, *(_QWORD *)(v9 - 296));
          }
          else
          {
            *(_QWORD *)(v9 - 224) = v174;
            v299 = *(void (**)(uint64_t, uint64_t, uint64_t))(v288 + 32);
            v300 = *(_QWORD *)(v9 - 856);
            *(_QWORD *)(v9 - 240) = v299;
            v299(v300, v287, v289);
            v301 = *(_QWORD *)(v9 - 672);
            v302 = *(_QWORD *)(v9 - 848);
            v303 = *(_QWORD *)(v9 - 664);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v301 + 16))(v302, v285 + *(int *)(*(_QWORD *)(v9 - 336) + 48), v303);
            v304 = *(_QWORD *)(v9 - 632);
            v305 = *(_QWORD *)(v9 - 648);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v304 + 48))(v302, 1, v305) != 1)
            {
              v328 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v304 + 32);
              *(_QWORD *)(v9 - 248) = v328;
              v329 = v328(*(_QWORD *)(v9 - 840), v302, v305);
              MEMORY[0x24BDAC7A8](v329);
              v330 = *(_QWORD *)(v9 - 272);
              v331 = *(_QWORD *)(v9 - 728);
              *(_QWORD *)(v9 - 144) = v330;
              *(_QWORD *)(v9 - 136) = v331;
              *(_QWORD *)(v9 - 128) = *(_QWORD *)(v9 - 296);
              *(_QWORD *)(v9 - 120) = v303;
              v332 = MEMORY[0x24BEE1E88];
              *(_QWORD *)(v9 - 112) = &type metadata for Fields;
              *(_QWORD *)(v9 - 104) = v332;
              *(_QWORD *)(v9 - 96) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
              v333 = (int *)swift_getTupleTypeMetadata();
              v334 = v305;
              v335 = *(_QWORD *)(v9 - 184);
              v336 = v335 + v333[12];
              v337 = v335 + v333[16];
              *(_QWORD *)(v9 - 304) = v335 + v333[20];
              *(_QWORD *)(v9 - 288) = v333[24];
              *(_QWORD *)(v9 - 296) = v333[28];
              *(_QWORD *)(v9 - 256) = v333[32];
              v147(v335, *(_QWORD *)(v9 - 472), v330);
              v338 = *(_QWORD *)(v9 - 608);
              v231(v336, *(_QWORD *)(v9 - 784), v338);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 616) + 56))(v336, 0, 1, v338);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 240))(v337, v300, v289);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 280) + 56))(v337, 0, 1, v289);
              v339 = *(_QWORD *)(v9 - 304);
              (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 - 248))(v339, *(_QWORD *)(v9 - 840), v334);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 632) + 56))(v339, 0, 1, v334);
              *(_QWORD *)(v335 + *(_QWORD *)(v9 - 288)) = *(_QWORD *)(v9 - 176);
              *(_QWORD *)(v335 + *(_QWORD *)(v9 - 296)) = *(_QWORD *)(v9 - 232);
              v340 = *(_QWORD *)(v9 - 360);
              v341 = *(_QWORD *)(v9 - 760);
              v342 = *(_QWORD *)(v9 - 160);
              v343 = *(_QWORD *)(v9 - 344);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v340 + 16))(v341, v342, v343);
              (*(void (**)(uint64_t, _QWORD))(v9 - 168))(v342, *(_QWORD *)(v9 - 224));
              v344 = *(void **)(v341 + *(int *)(v343 + 72));
              v345 = *(void (**)(uint64_t, uint64_t))(v340 + 8);
              v346 = v344;
              v345(v341, v343);
              *(_QWORD *)(v335 + *(_QWORD *)(v9 - 256)) = v344;
              v347 = *(_QWORD *)(v9 - 192);
              v349 = *(_QWORD *)(v9 - 216);
              v348 = *(_QWORD *)(v9 - 208);
              *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 200);
              *(_QWORD *)(v9 - 136) = v349;
              *(_QWORD *)(v9 - 128) = v347;
              *(_QWORD *)(v9 - 120) = v348;
              type metadata accessor for DirectionalTestingOperation();
            }
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 280) + 8))(v300, v289);
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 616) + 8))(*(_QWORD *)(v9 - 784), *(_QWORD *)(v9 - 608));
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 288) + 8))(*(_QWORD *)(v9 - 472), *(_QWORD *)(v9 - 272));
            (*(void (**)(_QWORD, _QWORD))(v9 - 168))(*(_QWORD *)(v9 - 160), *(_QWORD *)(v9 - 224));
            (*(void (**)(uint64_t, uint64_t))(v301 + 8))(v302, v303);
          }
          goto LABEL_40;
        }
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 616) + 8))(v232, *(_QWORD *)(v9 - 608));
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 288) + 8))(*(_QWORD *)(v9 - 472), *(_QWORD *)(v9 - 272));
        goto LABEL_84;
      }
      swift_release();
      sub_23AB22788(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 176), *(void **)(v9 - 232));
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v148, v75);
      return (*(uint64_t (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v67);
    case 2:
      sub_23AB22788(v24, a2, v23);
      v49 = *(_QWORD *)(v9 - 320);
      v50 = *(_QWORD *)(v9 - 464);
      v51 = *(_QWORD *)(v9 - 304);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 16))(v50, *(_QWORD *)(v9 - 160), v51);
      v52 = *(_QWORD *)(v9 - 288);
      v53 = *(_QWORD *)(v9 - 272);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v50, 1, v53) == 1)
      {
        v10(*(_QWORD *)(v9 - 160), v7);
        v38 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      }
      else
      {
        v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
        *(_QWORD *)(v9 - 176) = v119;
        *(_QWORD *)(v9 - 168) = v10;
        v119(v26, v50, v53);
        v120 = *(_QWORD *)(v9 - 160) + *(int *)(v7 + 52);
        v121 = *(_QWORD *)(v9 - 312);
        v50 = *(_QWORD *)(v9 - 528);
        v51 = *(_QWORD *)(v9 - 296);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v50, v120, v51);
        v122 = *(_QWORD *)(v9 - 280);
        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v122 + 48))(v50, 1, *(_QWORD *)(v9 - 264)) != 1)
        {
          v150 = *(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 32);
          v151 = v50;
          v152 = *(_QWORD *)(v9 - 704);
          v150(v152, v151, *(_QWORD *)(v9 - 264));
          v153 = *(_QWORD *)(v9 - 672);
          v154 = *(_QWORD *)(v9 - 696);
          v155 = *(_QWORD *)(v9 - 664);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 16))(v154, v120 + *(int *)(*(_QWORD *)(v9 - 336) + 48), v155);
          v156 = *(_QWORD *)(v9 - 632);
          v157 = *(_QWORD *)(v9 - 648);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48))(v154, 1, v157) != 1)
          {
            v177 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v156 + 32);
            *(_QWORD *)(v9 - 224) = v177;
            v178 = v177(*(_QWORD *)(v9 - 680), v154, v157);
            MEMORY[0x24BDAC7A8](v178);
            v179 = *(_QWORD *)(v9 - 272);
            v180 = *(_QWORD *)(v9 - 296);
            *(_QWORD *)(v9 - 144) = v179;
            *(_QWORD *)(v9 - 136) = v180;
            *(_QWORD *)(v9 - 128) = v155;
            *(_QWORD *)(v9 - 120) = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74E0);
            *(_QWORD *)(v9 - 112) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
            v181 = (int *)swift_getTupleTypeMetadata();
            v182 = *(_QWORD *)(v9 - 184);
            v183 = v182 + v181[12];
            v184 = v182 + v181[16];
            *(_QWORD *)(v9 - 248) = v181[20];
            v185 = v152;
            v186 = *(_QWORD *)(v9 - 160);
            *(_QWORD *)(v9 - 232) = v181[24];
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 - 176))(v182, *(_QWORD *)(v9 - 240), v179);
            v187 = *(_QWORD *)(v9 - 264);
            v150(v183, v185, v187);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 280) + 56))(v183, 0, 1, v187);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 - 224))(v184, *(_QWORD *)(v9 - 680), v157);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 632) + 56))(v184, 0, 1, v157);
            *(_BYTE *)(v182 + *(_QWORD *)(v9 - 248)) = 1;
            v188 = *(_QWORD *)(v9 - 360);
            v189 = *(_QWORD *)(v9 - 760);
            v190 = *(_QWORD *)(v9 - 344);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 16))(v189, v186, v190);
            (*(void (**)(uint64_t, uint64_t))(v9 - 168))(v186, v7);
            v191 = *(void **)(v189 + *(int *)(v190 + 72));
            v192 = *(void (**)(uint64_t, uint64_t))(v188 + 8);
            v193 = v191;
            v192(v189, v190);
            *(_QWORD *)(v182 + *(_QWORD *)(v9 - 232)) = v191;
            v194 = *(_QWORD *)(v9 - 192);
            v196 = *(_QWORD *)(v9 - 216);
            v195 = *(_QWORD *)(v9 - 208);
            *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 200);
            *(_QWORD *)(v9 - 136) = v196;
            *(_QWORD *)(v9 - 128) = v194;
            *(_QWORD *)(v9 - 120) = v195;
            type metadata accessor for DirectionalTestingOperation();
          }
          (*(void (**)(uint64_t, _QWORD))(v122 + 8))(v152, *(_QWORD *)(v9 - 264));
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 288) + 8))(*(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 272));
          (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
          (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v154, v155);
          goto LABEL_40;
        }
        (*(void (**)(_QWORD, uint64_t))(v52 + 8))(*(_QWORD *)(v9 - 240), v53);
        (*(void (**)(_QWORD, uint64_t))(v9 - 168))(*(_QWORD *)(v9 - 160), v7);
        v38 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
      }
      v39 = v50;
      v118 = v51;
      goto LABEL_39;
    case 6:
      sub_23AB22788(v24, a2, v23);
      v112 = *(_QWORD *)(v9 - 360);
      v113 = *(_QWORD *)(v9 - 416);
      v114 = *(_QWORD *)(v9 - 160);
      v115 = *(_QWORD *)(v9 - 344);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v113, v114, v115);
      v10(v114, v7);
      v58 = *(_QWORD *)(v9 - 320);
      v59 = *(_QWORD *)(v9 - 432);
      v35 = *(_QWORD *)(v9 - 304);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v59, v113, v35);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v113, v115);
      v116 = *(_QWORD *)(v9 - 288);
      v117 = *(_QWORD *)(v9 - 272);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v59, 1, v117) != 1)
      {
        v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 32);
        v132 = *(_QWORD *)(v9 - 576);
        v131(v132, v59, v117);
        v131(*(_QWORD *)(v9 - 184), v132, v117);
        v133 = *(_QWORD *)(v9 - 192);
        v135 = *(_QWORD *)(v9 - 216);
        v134 = *(_QWORD *)(v9 - 208);
        *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 200);
        *(_QWORD *)(v9 - 136) = v135;
        *(_QWORD *)(v9 - 128) = v133;
        *(_QWORD *)(v9 - 120) = v134;
        type metadata accessor for DirectionalTestingOperation();
      }
      goto LABEL_34;
    case 12:
      goto LABEL_16;
    case 23:
      sub_23AB22788(v24, a2, v23);
      v85 = *(_QWORD *)(v9 - 360);
      v86 = *(_QWORD *)(v9 - 424);
      v87 = *(_QWORD *)(v9 - 160);
      v88 = *(_QWORD *)(v9 - 344);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v86, v87, v88);
      v10(v87, v7);
      v58 = *(_QWORD *)(v9 - 320);
      v59 = *(_QWORD *)(v9 - 440);
      v35 = *(_QWORD *)(v9 - 304);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v59, v86, v35);
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v88);
      v89 = *(_QWORD *)(v9 - 288);
      v90 = *(_QWORD *)(v9 - 272);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v59, 1, v90) != 1)
      {
        v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32);
        v92 = *(_QWORD *)(v9 - 584);
        v91(v92, v59, v90);
        v91(*(_QWORD *)(v9 - 184), v92, v90);
        v93 = *(_QWORD *)(v9 - 192);
        v95 = *(_QWORD *)(v9 - 216);
        v94 = *(_QWORD *)(v9 - 208);
        *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 200);
        *(_QWORD *)(v9 - 136) = v95;
        *(_QWORD *)(v9 - 128) = v93;
        *(_QWORD *)(v9 - 120) = v94;
        type metadata accessor for DirectionalTestingOperation();
      }
      goto LABEL_34;
    default:
      goto LABEL_96;
  }
}

void sub_23AB0DA48(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(*(_QWORD *)(v1 - 184), 1, 1, a1);
  JUMPOUT(0x23AB0DA64);
}

void sub_23AB0DB74()
{
  JUMPOUT(0x23AB0DB80);
}

void sub_23AB0DB98()
{
  JUMPOUT(0x23AB0DBA8);
}

void sub_23AB0E3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v4 - 144) = v1;
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v0;
  *(_QWORD *)(v4 - 120) = v2;
  type metadata accessor for TestingOperation();
}

uint64_t sub_23AB0E3F4(uint64_t a1)
{
  uint64_t v1;

  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
}

void sub_23AB0E640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v4 - 144) = v1;
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v0;
  *(_QWORD *)(v4 - 120) = v2;
  type metadata accessor for TestingOperation();
}

void sub_23AB0E664()
{
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23AB0E684);
}

void sub_23AB0EA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v4 - 144) = v1;
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v0;
  *(_QWORD *)(v4 - 120) = v2;
  type metadata accessor for TestingOperation();
}

void sub_23AB0EAAC(uint64_t a1)
{
  uint64_t v1;

  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
  JUMPOUT(0x23AB0DA64);
}

void sub_23AB0ED5C()
{
  JUMPOUT(0x23AB0E64CLL);
}

void sub_23AB0F424()
{
  JUMPOUT(0x23AB0E64CLL);
}

void sub_23AB0F700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v2;
  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v1;
  type metadata accessor for TestingOperation();
}

void sub_23AB0F724()
{
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23AB0E690);
}

void sub_23AB0F85C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v13 = a2;
  v12 = a1;
  v3 = (_QWORD *)*v2;
  v4 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v4);
  v10[5] = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5474();
  v10[6] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v10[4] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v3[11];
  v8 = v3[12];
  v9 = v3[13];
  v14 = v3[10];
  v15 = v7;
  v16 = v8;
  v17 = v9;
  type metadata accessor for TestingOperation();
}

void sub_23AB0F934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v15 = sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v13 - 272) = TupleTypeMetadata2;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v17 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v13 - 168) = (char *)&a9 - v18;
  *(_QWORD *)(v13 - 256) = v15;
  *(_QWORD *)(v13 - 160) = *(_QWORD *)(v15 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 240) = (char *)&a9 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 192) = (char *)&a9 - v26;
  *(_QWORD *)(v13 - 144) = a1;
  *(_QWORD *)(v13 - 216) = *(_QWORD *)(a1 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 328) = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - v29;
  *(_QWORD *)(v13 - 208) = v11;
  *(_QWORD *)(v13 - 200) = v9;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 232) = v12;
  *(_QWORD *)(v13 - 224) = v10;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AB0FAB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t Strong;
  char v19;
  uint64_t result;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void (*v31)(_BYTE *, uint64_t);
  int v32;
  void (*v33)(_BYTE *, uint64_t);
  _BYTE v34[96];

  v4 = sub_23B1C6C98();
  *(_QWORD *)(v2 - 128) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v34[-v10];
  v12 = *(_QWORD *)(a1 - 8);
  v13 = MEMORY[0x24BDAC7A8](v9);
  v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v34[-v16];
  *(_QWORD *)(v2 - 176) = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_16;
  }
  v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 152))(Strong);
  result = swift_release();
  if ((v19 & 0x80) == 0)
    return result;
  v21 = *(_QWORD *)(v2 - 128);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 16))(v11, *(_QWORD *)(v2 - 136), v21);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v11, 1, a1) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v21);
    v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
LABEL_6:
    v22(v8, *(_BYTE **)(v2 - 184), a1);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, a1);
    if (swift_weakLoadStrong())
      sub_23AB0C050();
LABEL_16:
    __break(1u);
    JUMPOUT(0x23AB10118);
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v17, v11, a1);
  v24 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v2 - 200), *(_QWORD *)(v2 - 208), v23);
  if (v17[*(int *)(v24 + 64) + 16] == 2)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v17, a1);
  v26 = v24;
  v27 = &v17[*(int *)(a1 + 52)];
  v28 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v2 - 224), *(_QWORD *)(v2 - 232), v25);
  if (v27[*(int *)(v28 + 64) + 16] == 2)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v17, a1);
  v29 = v28;
  v30 = v17[*(int *)(v26 + 52)];
  v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
  v22(v15, v17, a1);
  if (v30 == 1)
  {
    v31 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
    v31(v15, a1);
    return ((uint64_t (*)(_BYTE *, uint64_t))v31)(v17, a1);
  }
  v32 = v15[*(int *)(a1 + 52) + *(int *)(v29 + 52)];
  v33 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
  v33(v15, a1);
  result = ((uint64_t (*)(_BYTE *, uint64_t))v33)(v17, a1);
  if (v32 != 1)
    goto LABEL_6;
  return result;
}

void sub_23AB10120(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  _QWORD v12[26];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_23B1C6C98();
  v12[24] = *(_QWORD *)(v13 - 8);
  v4 = MEMORY[0x24BDAC7A8](v13);
  v12[25] = (char *)v12 - v5;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v12[16] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v12[17] = (char *)v12 - v8;
  v17 = a2;
  v9 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedConformanceWitness();
  v20 = v9;
  v21 = AssociatedTypeWitness;
  v18 = AssociatedTypeWitness;
  v14 = v11;
  v15 = AssociatedConformanceWitness;
  v22 = AssociatedConformanceWitness;
  v23 = v11;
  type metadata accessor for ReconciliationID();
}

void sub_23AB1029C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v14 = sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v13 - 296) = TupleTypeMetadata2;
  *(_QWORD *)(v13 - 384) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v13 - 352) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 360) = (char *)&a9 - v19;
  *(_QWORD *)(v13 - 328) = v14;
  *(_QWORD *)(v13 - 304) = *(_QWORD *)(v14 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 400) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 376) = (char *)&a9 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 392) = (char *)&a9 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v29;
  MEMORY[0x24BDAC7A8](v28);
  *(_QWORD *)(v13 - 336) = (char *)&a9 - v30;
  *(_QWORD *)(v13 - 288) = v12;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 272) = v10;
  *(_QWORD *)(v13 - 280) = v11;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v9;
  *(_QWORD *)(v13 - 264) = v9;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AB1045C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  unsigned int (*v25)(_BYTE *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[96];

  *(_QWORD *)(v3 - 152) = a1;
  *(_QWORD *)(v3 - 128) = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v3 - 224) = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v3 - 232) = &v30[-v7];
  *(_QWORD *)(v3 - 136) = v1;
  *(_QWORD *)(v3 - 160) = *(_QWORD *)(v1 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v30[-v11];
  v13 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v30[-v16];
  v18 = *(_QWORD *)(v2 - 8);
  v19 = MEMORY[0x24BDAC7A8](v15);
  v21 = &v30[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  v23 = &v30[-v22];
  v24 = *(_QWORD *)(v3 - 184) + *(int *)(*(_QWORD *)(v3 - 192) + 56);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v17, v24, v13);
  v25 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48);
  *(_QWORD *)(v3 - 144) = v2;
  if (v25(v17, 1, v2) == 1)
  {
    *(_QWORD *)(v3 - 184) = v10;
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
    v28 = *(_QWORD *)(v3 - 272);
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 288);
    *(_QWORD *)(v3 - 112) = v28;
    v29 = *(_QWORD *)(v3 - 264);
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 280);
    *(_QWORD *)(v3 - 96) = v29;
    type metadata accessor for ItemReconciliation();
  }
  *(_QWORD *)(v3 - 408) = v24;
  v26 = *(_QWORD *)(v3 - 144);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v23, v17, v26);
  v27 = *(_QWORD *)(v3 - 152);
  *(_QWORD *)(v3 - 192) = v21;
  sub_23AB52A54(v27);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 16))(v10, v23, v26);
  swift_storeEnumTagMultiPayload();
  sub_23AAB1264((uint64_t)v12, (uint64_t)v10, v26, *(_QWORD *)(v3 - 176));
}

