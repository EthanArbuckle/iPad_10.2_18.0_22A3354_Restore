void sub_23AE2BBEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  id v56;

  v49 = a5;
  v6 = v5;
  v48 = a4;
  LODWORD(v47) = a3;
  v45 = a1;
  v46 = a2;
  v7 = sub_23B1C5DC8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v52 = (uint64_t)&v44 - v14;
  v15 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v15);
  v51 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C60EC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char **)((char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = (id)fpfs_adopt_log();
  v21 = *(void **)(v6 + 64);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v22 = v21;
  LOBYTE(v21) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_8;
  }
  if ((fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v6 + 168) + 16)) & 1) != 0 || *(_BYTE *)(v6 + 152) == 1)
  {
    sub_23AD2C7F8();
    swift_allocError();
    swift_willThrow();
LABEL_5:
    v23 = v56;
    v24 = (void *)fpfs_adopt_log();
LABEL_6:
    v25 = v24;

    return;
  }
  if (qword_2542E6818 != -1)
    goto LABEL_18;
LABEL_8:
  v26 = (void *)qword_2542EDD28;
  v27 = v52;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v52, 1, 1, v7);
  v54 = 0x63746162206E7572;
  v55 = 0xEA00000000002068;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v29 = v54;
  v28 = v55;
  sub_23AA8EFC8(v27, (uint64_t)v13, (uint64_t *)&unk_2542E67B8);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  v46 = v29;
  v47 = v28;
  if (v30 == 1)
  {
    v31 = v26;
    v32 = v53;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v32 = v53;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v13, v7);
  }
  v33 = v51;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v51, v32, v7);
  v45 = *(int *)(v15 + 20);
  *(_QWORD *)&v33[v45] = v26;
  v34 = &v33[*(int *)(v15 + 24)];
  *(_QWORD *)v34 = "DB queue";
  *((_QWORD *)v34 + 1) = 8;
  v44 = v34;
  v34[16] = 2;
  v35 = v26;
  v36 = v47;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v37 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v37 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v37 + 32) = v46;
  *(_QWORD *)(v37 + 40) = v36;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v53, v7);
  swift_bridgeObjectRelease();
  v38 = sub_23AA8A05C(v52, (uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v38);
  v39 = v50;
  (*(void (**)(uint64_t *__return_ptr, uint64_t (*)()))(*(_QWORD *)v6 + 2352))(&v54, sub_23AABA5D0);
  if (v39)
  {
    v54 = (uint64_t)v39;
    v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    if ((swift_dynamicCast() & 1) != 0)
    {

      sub_23AD2C7F8();
      swift_allocError();
      swift_willThrow();

      sub_23B1C6BD8();
      v41 = (uint64_t)v51;
      sub_23B1C5DA4();
      sub_23AA937BC(v41, type metadata accessor for Signpost);
    }
    else
    {

      (*(void (**)(void *, uint64_t, const char *, uint64_t, uint64_t))(*(_QWORD *)v6 + 456))(v39, 1, "runBatch(function:updateBlock:)", 31, 2);
      sub_23B1C6BD8();
      v43 = (uint64_t)v51;
      sub_23B1C5DA4();
      sub_23AA937BC(v43, type metadata accessor for Signpost);
    }
    goto LABEL_5;
  }
  if ((v54 & 1) == 0)
  {
    sub_23B1C6BD8();
    v42 = (uint64_t)v51;
    sub_23B1C5DA4();
    sub_23AA937BC(v42, type metadata accessor for Signpost);
    v23 = v56;
    v24 = (void *)fpfs_adopt_log();
    goto LABEL_6;
  }
  __break(1u);
}

_QWORD *sub_23AE2C224(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *result;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  id v58;

  v51 = a5;
  v6 = v5;
  v50 = a4;
  LODWORD(v49) = a3;
  v47 = a1;
  v48 = a2;
  v7 = sub_23B1C5DC8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v55 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v54 = (uint64_t)&v46 - v14;
  v15 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v15);
  v53 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C60EC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char **)((char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = (id)fpfs_adopt_log();
  v21 = *(void **)(v6 + 64);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v22 = v21;
  LOBYTE(v21) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_8;
  }
  if ((fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v6 + 168) + 16)) & 1) != 0 || *(_BYTE *)(v6 + 152) == 1)
  {
    sub_23AD2C7F8();
    swift_allocError();
    swift_willThrow();
LABEL_5:
    v23 = v58;
    v24 = (id)fpfs_adopt_log();

    return (_QWORD *)(v23 & 1);
  }
  if (qword_2542E6818 != -1)
    goto LABEL_18;
LABEL_8:
  v26 = (void *)qword_2542EDD28;
  v27 = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v54, 1, 1, v7);
  v56 = 0x63746162206E7572;
  v57 = 0xEA00000000002068;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v29 = v56;
  v28 = v57;
  sub_23AA8EFC8(v27, (uint64_t)v13, (uint64_t *)&unk_2542E67B8);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  v48 = v29;
  v49 = v28;
  if (v30 == 1)
  {
    v31 = v26;
    v32 = v55;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v32 = v55;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v13, v7);
  }
  v33 = v53;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v32, v7);
  v47 = *(int *)(v15 + 20);
  *(_QWORD *)&v33[v47] = v26;
  v34 = &v33[*(int *)(v15 + 24)];
  *(_QWORD *)v34 = "DB queue";
  *((_QWORD *)v34 + 1) = 8;
  v46 = v34;
  v34[16] = 2;
  v35 = v26;
  v36 = v49;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v37 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v37 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v37 + 32) = v48;
  *(_QWORD *)(v37 + 40) = v36;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v55, v7);
  swift_bridgeObjectRelease();
  v38 = sub_23AA8A05C(v54, (uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v38);
  v39 = v52;
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD *(*)@<X0>(_BYTE *@<X8>)))(*(_QWORD *)v6 + 2352))(&v56, sub_23AEB4B58);
  if (v39)
  {
    v56 = (uint64_t)v39;
    v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    if ((swift_dynamicCast() & 1) != 0)
    {

      sub_23AD2C7F8();
      swift_allocError();
      swift_willThrow();

      sub_23B1C6BD8();
      v41 = (uint64_t)v53;
      sub_23B1C5DA4();
      sub_23AA937BC(v41, type metadata accessor for Signpost);
    }
    else
    {

      (*(void (**)(void *, uint64_t, const char *, uint64_t, uint64_t))(*(_QWORD *)v6 + 456))(v39, 1, "runBatch(function:updateBlock:)", 31, 2);
      sub_23B1C6BD8();
      v45 = (uint64_t)v53;
      sub_23B1C5DA4();
      sub_23AA937BC(v45, type metadata accessor for Signpost);
    }
    goto LABEL_5;
  }
  if (v56 != 2)
  {
    LOBYTE(v23) = v56 & 1;
    sub_23B1C6BD8();
    v42 = (uint64_t)v53;
    sub_23B1C5DA4();
    sub_23AA937BC(v42, type metadata accessor for Signpost);
    v43 = v58;
    v44 = (id)fpfs_adopt_log();

    return (_QWORD *)(v23 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_23AE2C874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  void *v12;
  id v13;
  void *v14;
  uint64_t ObjectType;
  uint64_t v16;

  v1 = sub_23B1C5DC8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - v9;
  result = fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v0 + 168) + 16));
  if ((result & 1) == 0 && (*(_BYTE *)(v0 + 152) & 1) == 0)
  {
    if (qword_2542E6818 != -1)
      swift_once();
    v12 = (void *)qword_2542EDD28;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_2542E67B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
    {
      v13 = v12;
      sub_23B1C5DB0();
      sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E67B8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    }
    sub_23B1C6BF0();
    sub_23B1C5DA4();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E67B8);
    v14 = (void *)swift_retain();
    if (objc_sync_enter(v14))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v0);
    if (!*(_QWORD *)(v0 + 208))
    {
      *(_QWORD *)(v0 + 208) = os_transaction_create();
      swift_unknownObjectRelease();
    }
    if (objc_sync_exit((id)v0))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v0);
    swift_release();
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    MEMORY[0x23B85F548](1, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_23AE2CAF4(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(id, uint64_t);
  id v6;

  v5 = *(void (**)(id, uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, a3);
  swift_release();
  swift_unknownObjectRelease();

}

uint64_t sub_23AE2CB64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  void *v23;
  void *v24;
  char v25;
  _BYTE v26[40];
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v4 = sub_23AA9B8AC(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v2)
  {
    v6 = v4;
    v7 = v5;
    v8 = sub_23AE78118(67, a1);
    v9 = (void *)sub_23AAA94C0(129, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v10 = sub_23AE77B40(32, a1);
    v11 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v13 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
    swift_allocObject();
    v1 = sub_23B0266A4(v6, v7, v8, v9, v10, v11, v13);
    v14 = sub_23AE775D8(64, a1);
    if ((v15 & 1) != 0)
    {
      v16 = 0;
      v28 = 0u;
      v29 = 0u;
    }
    else
    {
      v16 = v14;
      *(_QWORD *)&v29 = &type metadata for SQLJobID;
      *((_QWORD *)&v29 + 1) = sub_23AEB16D8();
    }
    v27 = v16;
    sub_23AA724E8((uint64_t)&v27, (uint64_t)v26, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v26, v1 + 48, &qword_2542E16F0);
    swift_endAccess();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_23AE29E4C(v17, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = *(void **)(v1 + 88);
    v24 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v18;
    *(_QWORD *)(v1 + 96) = v20;
    v25 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = v22;
    sub_23AAAEE10(v23, v24, v25);
  }
  return v1;
}

uint64_t sub_23AE2CDDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  void *v25;
  void *v26;
  char v27;
  _BYTE v28[40];
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v4 = sub_23AE7956C(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v2)
  {
    v5 = (void *)v4;
    v6 = sub_23AE78118(67, a1);
    v7 = (void *)sub_23AAA94C0(129, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v8 = sub_23AE77B40(32, a1);
    v10 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v32 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5ED0);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 160) = 0;
    *(_QWORD *)(v11 + 168) = 0;
    *(_QWORD *)(v11 + 176) = 1;
    *(_OWORD *)(v11 + 184) = 0u;
    *(_OWORD *)(v11 + 200) = 0u;
    *(_OWORD *)(v11 + 216) = 0u;
    v12 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 616);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 624);
    *(_QWORD *)v14 = 0;
    *(_QWORD *)(v14 + 8) = 0;
    *(_QWORD *)(v14 + 16) = 0xB000000000000000;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    v15 = (_OWORD *)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 632));
    v15[5] = 0u;
    v15[6] = 0u;
    v15[3] = 0u;
    v15[4] = 0u;
    v15[1] = 0u;
    v15[2] = 0u;
    *v15 = 0u;
    *(_QWORD *)(v11 + 152) = v6;
    v1 = sub_23B0265B4(v5, v7, v8, v10, v32);
    v16 = sub_23AE775D8(64, a1);
    if ((v17 & 1) != 0)
    {
      v18 = 0;
      v30 = 0u;
      v31 = 0u;
    }
    else
    {
      v18 = v16;
      *(_QWORD *)&v31 = &type metadata for SQLJobID;
      *((_QWORD *)&v31 + 1) = sub_23AEB16D8();
    }
    v29 = v18;
    sub_23AA724E8((uint64_t)&v29, (uint64_t)v28, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v28, v1 + 48, &qword_2542E16F0);
    swift_endAccess();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_23AE29E4C(v19, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v22 = v21;
    v24 = v23;
    swift_bridgeObjectRelease();
    v25 = *(void **)(v1 + 88);
    v26 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v20;
    *(_QWORD *)(v1 + 96) = v22;
    v27 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = v24;
    sub_23AAAEE10(v25, v26, v27);
  }
  return v1;
}

uint64_t sub_23AE2D0E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  void *v23;
  void *v24;
  char v25;
  _BYTE v26[40];
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v4 = sub_23AA9B8AC(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v2)
  {
    v6 = v4;
    v7 = v5;
    v8 = sub_23AE78118(67, a1);
    v9 = sub_23AE782E0(128, a1);
    v10 = (void *)sub_23AAA94C0(129, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v11 = sub_23AE77B40(32, a1);
    v12 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v30 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69B0);
    swift_allocObject();
    v1 = sub_23B026960(v6, v7, v8, v9, v10, v11, v12, v30);
    v14 = sub_23AE775D8(64, a1);
    if ((v15 & 1) != 0)
    {
      v16 = 0;
      v28 = 0u;
      v29 = 0u;
    }
    else
    {
      v16 = v14;
      *(_QWORD *)&v29 = &type metadata for SQLJobID;
      *((_QWORD *)&v29 + 1) = sub_23AEB16D8();
    }
    v27 = v16;
    sub_23AA724E8((uint64_t)&v27, (uint64_t)v26, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v26, v1 + 48, &qword_2542E16F0);
    swift_endAccess();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_23AE29E4C(v17, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = *(void **)(v1 + 88);
    v24 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v18;
    *(_QWORD *)(v1 + 96) = v20;
    v25 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = v22;
    sub_23AAAEE10(v23, v24, v25);
  }
  return v1;
}

uint64_t sub_23AE2D380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void *v22;
  void *v23;
  char v24;
  _BYTE v25[40];
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v4 = sub_23AE7956C(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v2)
  {
    v5 = (void *)v4;
    v6 = sub_23AE78118(67, a1);
    v7 = sub_23AE782E0(128, a1);
    v8 = (void *)sub_23AAA94C0(129, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v9 = sub_23AE77B40(32, a1);
    v11 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v12 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5568);
    swift_allocObject();
    v1 = sub_23B026854(v5, v6, v7, v8, v9, v11, v12);
    v13 = sub_23AE775D8(64, a1);
    if ((v14 & 1) != 0)
    {
      v15 = 0;
      v27 = 0u;
      v28 = 0u;
    }
    else
    {
      v15 = v13;
      *(_QWORD *)&v28 = &type metadata for SQLJobID;
      *((_QWORD *)&v28 + 1) = sub_23AEB16D8();
    }
    v26 = v15;
    sub_23AA724E8((uint64_t)&v26, (uint64_t)v25, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v25, v1 + 48, &qword_2542E16F0);
    swift_endAccess();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_23AE29E4C(v16, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v19 = v18;
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = *(void **)(v1 + 88);
    v23 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v17;
    *(_QWORD *)(v1 + 96) = v19;
    v24 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = v21;
    sub_23AAAEE10(v22, v23, v24);
  }
  return v1;
}

uint64_t sub_23AE2D61C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void *v22;
  void *v23;
  char v24;
  _BYTE v25[40];
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v4 = sub_23AA9B8AC(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v2)
  {
    v6 = v4;
    v7 = v5;
    v8 = (void *)sub_23AAA94C0(129, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v9 = sub_23AE77B40(32, a1);
    v10 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v12 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName(qword_2542E6928);
    swift_allocObject();
    v1 = sub_23B026B24(v6, v7, v8, v9, v10, v12);
    v13 = sub_23AE775D8(64, a1);
    if ((v14 & 1) != 0)
    {
      v15 = 0;
      v27 = 0u;
      v28 = 0u;
    }
    else
    {
      v15 = v13;
      *(_QWORD *)&v28 = &type metadata for SQLJobID;
      *((_QWORD *)&v28 + 1) = sub_23AEB16D8();
    }
    v26 = v15;
    sub_23AA724E8((uint64_t)&v26, (uint64_t)v25, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v25, v1 + 48, &qword_2542E16F0);
    swift_endAccess();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_23AE29E4C(v16, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v19 = v18;
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = *(void **)(v1 + 88);
    v23 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v17;
    *(_QWORD *)(v1 + 96) = v19;
    v24 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = v21;
    sub_23AAAEE10(v22, v23, v24);
  }
  return v1;
}

uint64_t sub_23AE2D86C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  void *v23;
  void *v24;
  char v25;
  _BYTE v26[40];
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v4 = sub_23AE7956C(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v2)
  {
    v5 = (void *)v4;
    v6 = (void *)sub_23AAA94C0(129, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v7 = sub_23AE77B40(32, a1);
    v9 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v10 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6120);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 152) = 0;
    *(_BYTE *)(v11 + 160) = -1;
    *(_QWORD *)(v11 + 168) = 0;
    *(_BYTE *)(v11 + 176) = -1;
    *(_OWORD *)(v11 + 200) = 0u;
    *(_OWORD *)(v11 + 216) = 0u;
    *(_OWORD *)(v11 + 232) = 0u;
    *(_OWORD *)(v11 + 248) = 0u;
    *(_QWORD *)(v11 + 280) = 0;
    *(_OWORD *)(v11 + 184) = 0u;
    *(_OWORD *)(v11 + 264) = 0u;
    *(_BYTE *)(v11 + 288) = 1;
    *(_WORD *)(v11 + 289) = 514;
    v12 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 640);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v1 = sub_23B0265B4(v5, v6, v7, v9, v10);
    v14 = sub_23AE775D8(64, a1);
    if ((v15 & 1) != 0)
    {
      v16 = 0;
      v28 = 0u;
      v29 = 0u;
    }
    else
    {
      v16 = v14;
      *(_QWORD *)&v29 = &type metadata for SQLJobID;
      *((_QWORD *)&v29 + 1) = sub_23AEB16D8();
    }
    v27 = v16;
    sub_23AA724E8((uint64_t)&v27, (uint64_t)v26, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v26, v1 + 48, &qword_2542E16F0);
    swift_endAccess();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_23AE29E4C(v17, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = *(void **)(v1 + 88);
    v24 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v18;
    *(_QWORD *)(v1 + 96) = v20;
    v25 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = v22;
    sub_23AAAEE10(v23, v24, v25);
  }
  return v1;
}

void sub_23AE2DB48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

unint64_t sub_23AE2DB8C()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  id v5;
  id v6;
  char v8[14];
  __int16 v9;

  if (v1)
  {
    sub_23AEB43C4(v2, v0, v1, 0);
    swift_release();
    strcpy(v8, "item changed ");
    v9 = -4864;
    if (v0)
    {
      v3 = objc_msgSend(v0, sel_description);
      sub_23B1C63E0();

      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v4 = *(_QWORD *)v8;

    }
    else
    {
      sub_23AA7B734();
      sub_23B1C64F4();

      swift_bridgeObjectRelease();
      return *(_QWORD *)v8;
    }
  }
  else
  {
    v5 = v0;
    v6 = v2;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA7B734();
    sub_23B1C64F4();

    swift_bridgeObjectRelease();
    v4 = 0xD00000000000001ALL;

  }
  return v4;
}

void sub_23AE2DEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  MEMORY[0x24BDAC7A8](v2);
  sub_23AA8EFC8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), qword_2542DDA70);
  v4 = (char *)sub_23AE2DFD8 + 4 * byte_23B1DADF2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE2DFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
  v7 = v2 + *(int *)(v6 + 48);
  if (*(_QWORD *)(v2 + *(int *)(v6 + 64)))
  {
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v7, 1, v1) != 1)
    {
      sub_23AA94050(v7, v0, type metadata accessor for VFSItem);
      strcpy((char *)(v5 - 80), "item changed ");
      *(_WORD *)(v5 - 66) = -4864;
      sub_23AC3E1F8();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v5 - 80);
      sub_23AA937BC(v0, type metadata accessor for VFSItem);
      return v12;
    }
    v8 = *(_QWORD *)v2;
    v9 = *(_BYTE *)(v2 + 8);
    strcpy((char *)(v5 - 80), "item changed ");
    *(_WORD *)(v5 - 66) = -4864;
    sub_23AA96F18(v8, v9);
  }
  else
  {
    v10 = *(_QWORD *)v2;
    v11 = *(_BYTE *)(v2 + 8);
    *(_QWORD *)(v5 - 80) = 0;
    *(_QWORD *)(v5 - 72) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v5 - 80) = v3 + 8;
    *(_QWORD *)(v5 - 72) = 0x800000023B202C10;
    sub_23AA96F18(v10, v11);
  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v5 - 80);
  sub_23AA8A05C(v7, &qword_2542E72C0);
  return v12;
}

uint64_t sub_23AE2E2DC()
{
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 118;
}

uint64_t sub_23AE2E394()
{
  sub_23B1C74A8();
  sub_23B1C74CC();
  return sub_23B1C74E4();
}

uint64_t sub_23AE2E3D8()
{
  return sub_23B1C74CC();
}

uint64_t sub_23AE2E400()
{
  sub_23B1C74A8();
  sub_23B1C74CC();
  return sub_23B1C74E4();
}

uint64_t sub_23AE2E440()
{
  return sub_23AE2E2DC();
}

BOOL sub_23AE2E448(_DWORD *a1, _DWORD *a2)
{
  return HIWORD(*a1) < HIWORD(*a2) || (unsigned __int16)*a1 < (unsigned __int16)*a2;
}

BOOL sub_23AE2E46C(unsigned int *a1, unsigned int *a2)
{
  return sub_23ADFA2BC(*a1, *a2);
}

BOOL sub_23AE2E478(unsigned int *a1, unsigned int *a2)
{
  return sub_23ADFE718(*a1, *a2);
}

BOOL sub_23AE2E484(unsigned int *a1, unsigned int *a2)
{
  return sub_23ADFA2D8(*a1, *a2);
}

uint64_t sub_23AE2E490()
{
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23AE2E510@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = fpfs_dirsize();
  *a1 = result & ~(result >> 63);
  return result;
}

uint64_t sub_23AE2E540(_BYTE *a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id (*a9)(uint64_t a1, void *a2))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  signed int v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  void *v58;
  void *v59;
  uint64_t v60;
  id (**v61)(uint64_t, void *);
  id (*v62)(uint64_t, void *);
  int v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  char v68;
  _BYTE *v69;
  uint64_t v70;
  char v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  void *v80;
  unsigned int v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  id v91;
  void (*v92)(uint64_t, uint64_t);
  void *v93;
  _BYTE *v94;
  uint64_t v95;
  void *v96;
  void *v97;
  id v98;
  id v99;
  _QWORD *v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  id v107;
  char v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  id v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  void *v129;
  void *v130;
  id v131;
  void *v132;
  uint64_t v133;
  void *v134;
  id v135;
  uint64_t v136;
  id v137;
  void *v138;
  id v139;
  id v140;
  double v141;
  void *v142;
  void *v143;
  uint64_t v144;
  void *v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  id v150;
  id v151;
  void *v152;
  uint64_t v153;
  _BYTE *v154;
  id v155;
  void *v156;
  id v157;
  id v158;
  void (*v159)(uint64_t, void *);
  void *v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  id v164;
  id v165;
  NSObject *v166;
  os_log_type_t v167;
  _BOOL4 v168;
  uint64_t v169;
  uint64_t v170;
  uint8_t *v171;
  void *v173;
  id v174;
  id v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  void *v182;
  void *v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  id v188;
  char v189;
  void *v190;
  id v191;
  id v192;
  void (*v193)(uint64_t, id);
  id v194;
  void *v195;
  id v196;
  id v197;
  void (*v198)(uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v200;
  id v201;
  _BYTE v202[12];
  int v203;
  void *v204;
  uint64_t v205;
  _BYTE *v206;
  _BYTE *v207;
  _BYTE *v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  _BYTE *v221;
  uint64_t v222;
  void (*v223)(uint64_t, uint64_t);
  id v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void (*v228)(_BYTE *, uint64_t, uint64_t);
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  _QWORD *v232;
  _BYTE *v233;
  id (*v234)(uint64_t, void *);
  id v235;
  uint64_t v236;
  id aBlock;
  uint64_t v238;
  void *v239;
  void *v240;
  uint64_t (*v241)(void *);
  uint64_t v242;
  uint64_t v243;

  v222 = a7;
  v205 = a6;
  v230 = a5;
  v227 = a4;
  v231 = a3;
  v232 = a2;
  v233 = a1;
  v234 = a9;
  v243 = *MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v10);
  v206 = &v202[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_23B1C5A08();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v208 = &v202[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v202[-v16];
  v226 = sub_23B1C5E4C();
  v225 = *(_QWORD *)(v226 - 8);
  v18 = MEMORY[0x24BDAC7A8](v226);
  v207 = &v202[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v202[-v20];
  v210 = qword_2542EDE58;
  *(_BYTE *)(a8 + qword_2542EDE58) = 1;
  *(_BYTE *)(a8 + qword_2542EDEE0) = 0;
  v22 = a8 + qword_2542EDED0;
  v23 = sub_23B1C5C54();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v215 = v22;
  v24(v22, 1, 1, v23);
  v211 = qword_2542E69D0;
  *(_QWORD *)(a8 + qword_2542E69D0) = MEMORY[0x24BEE4AF8];
  v213 = qword_2542E69B8;
  *(_QWORD *)(a8 + qword_2542E69B8) = 0;
  v217 = qword_2542E69D8;
  *(_QWORD *)(a8 + qword_2542E69D8) = 0;
  *(_BYTE *)(a8 + qword_2542EDE90) = 0;
  v25 = (uint64_t *)(a8 + qword_2542EDEB0);
  *v25 = 0;
  v25[1] = 0;
  v214 = v25;
  *(_BYTE *)(a8 + qword_2542EDEA8) = 0;
  v26 = (uint64_t *)(a8 + qword_2542EDEB8);
  *v26 = 0;
  v26[1] = 0;
  v212 = v26;
  v27 = (uint64_t *)(a8 + qword_2542EDEA0);
  *v27 = 0;
  v27[1] = 0;
  v216 = v27;
  v28 = (uint64_t *)(a8 + qword_2542EDE88);
  *v28 = 0;
  v28[1] = 0;
  v219 = v28;
  *(_BYTE *)(a8 + qword_2542EDE98) = 0;
  v29 = qword_2542E7738;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55B8);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_23B1DA940;
  *(_DWORD *)(v30 + 32) = 0;
  *(_QWORD *)(v30 + 40) = sub_23AE3A100;
  *(_QWORD *)(v30 + 48) = 0;
  *(_DWORD *)(v30 + 56) = 0x10000;
  *(_DWORD *)(v30 + 64) = 0x10000;
  *(_QWORD *)(v30 + 72) = sub_23AE3A148;
  *(_QWORD *)(v30 + 80) = 0;
  *(_DWORD *)(v30 + 88) = 65537;
  *(_DWORD *)(v30 + 96) = 65537;
  *(_QWORD *)(v30 + 104) = sub_23AE3A190;
  *(_QWORD *)(v30 + 112) = 0;
  *(_DWORD *)(v30 + 120) = 0x20000;
  *(_DWORD *)(v30 + 128) = 0x20000;
  *(_QWORD *)(v30 + 136) = sub_23AE3A1D8;
  *(_QWORD *)(v30 + 144) = 0;
  *(_DWORD *)(v30 + 152) = 131073;
  *(_DWORD *)(v30 + 160) = 131073;
  *(_QWORD *)(v30 + 168) = sub_23AE3A220;
  *(_QWORD *)(v30 + 176) = 0;
  *(_DWORD *)(v30 + 184) = 131074;
  *(_DWORD *)(v30 + 192) = 131074;
  *(_QWORD *)(v30 + 200) = sub_23AE3A268;
  *(_QWORD *)(v30 + 208) = 0;
  *(_DWORD *)(v30 + 216) = 131075;
  *(_DWORD *)(v30 + 224) = 131075;
  *(_QWORD *)(v30 + 232) = sub_23AE3A2B0;
  *(_QWORD *)(v30 + 240) = 0;
  *(_DWORD *)(v30 + 248) = 131076;
  *(_DWORD *)(v30 + 256) = 131076;
  *(_QWORD *)(v30 + 264) = sub_23AE3A2F8;
  *(_QWORD *)(v30 + 272) = 0;
  *(_DWORD *)(v30 + 280) = 131077;
  *(_DWORD *)(v30 + 288) = 131077;
  *(_QWORD *)(v30 + 296) = sub_23AE3A340;
  *(_QWORD *)(v30 + 304) = 0;
  *(_DWORD *)(v30 + 312) = 131078;
  *(_DWORD *)(v30 + 320) = 131078;
  *(_QWORD *)(v30 + 328) = sub_23AE3A388;
  *(_QWORD *)(v30 + 336) = 0;
  *(_DWORD *)(v30 + 344) = 131079;
  *(_DWORD *)(v30 + 352) = 131079;
  *(_QWORD *)(v30 + 360) = sub_23AE3A3D0;
  *(_QWORD *)(v30 + 368) = 0;
  *(_DWORD *)(v30 + 376) = 131080;
  *(_DWORD *)(v30 + 384) = 131080;
  *(_QWORD *)(v30 + 392) = sub_23AE3A418;
  *(_QWORD *)(v30 + 400) = 0;
  *(_DWORD *)(v30 + 408) = 131081;
  *(_DWORD *)(v30 + 416) = 131081;
  *(_QWORD *)(v30 + 424) = sub_23AE3A460;
  *(_QWORD *)(v30 + 432) = 0;
  *(_DWORD *)(v30 + 440) = 196608;
  *(_DWORD *)(v30 + 448) = 196608;
  *(_QWORD *)(v30 + 456) = sub_23AE3A4A8;
  *(_QWORD *)(v30 + 464) = 0;
  *(_DWORD *)(v30 + 472) = 196609;
  *(_DWORD *)(v30 + 480) = 196609;
  *(_QWORD *)(v30 + 488) = sub_23AE3A4F0;
  *(_QWORD *)(v30 + 496) = 0;
  *(_DWORD *)(v30 + 504) = 196610;
  *(_DWORD *)(v30 + 512) = 196610;
  *(_QWORD *)(v30 + 520) = sub_23AE3A538;
  *(_QWORD *)(v30 + 528) = 0;
  *(_DWORD *)(v30 + 536) = 196611;
  *(_DWORD *)(v30 + 544) = 196611;
  *(_QWORD *)(v30 + 552) = sub_23AE3A580;
  *(_QWORD *)(v30 + 560) = 0;
  *(_DWORD *)(v30 + 568) = 196612;
  *(_DWORD *)(v30 + 576) = 196612;
  *(_QWORD *)(v30 + 584) = sub_23AE3A5C8;
  *(_QWORD *)(v30 + 592) = 0;
  *(_DWORD *)(v30 + 600) = 196613;
  *(_DWORD *)(v30 + 608) = 196613;
  *(_QWORD *)(v30 + 616) = sub_23AE3A610;
  *(_QWORD *)(v30 + 624) = 0;
  *(_DWORD *)(v30 + 632) = 196614;
  *(_DWORD *)(v30 + 640) = 196614;
  *(_QWORD *)(v30 + 648) = sub_23AE3A658;
  *(_DWORD *)(v30 + 664) = 196615;
  *(_DWORD *)(v30 + 672) = 196615;
  *(_QWORD *)(v30 + 656) = 0;
  *(_QWORD *)(v30 + 680) = sub_23AE3A6A0;
  *(_QWORD *)(v30 + 688) = 0;
  *(_DWORD *)(v30 + 696) = 0x40000;
  *(_DWORD *)(v30 + 704) = 0x40000;
  *(_QWORD *)(v30 + 712) = sub_23AE3A6E8;
  *(_QWORD *)(v30 + 720) = 0;
  *(_DWORD *)(v30 + 728) = 262145;
  *(_DWORD *)(v30 + 736) = 262145;
  *(_QWORD *)(v30 + 744) = sub_23AE3A730;
  *(_QWORD *)(v30 + 752) = 0;
  *(_DWORD *)(v30 + 760) = 327680;
  *(_DWORD *)(v30 + 768) = 327680;
  *(_QWORD *)(v30 + 776) = sub_23AE3A778;
  *(_QWORD *)(v30 + 784) = 0;
  *(_DWORD *)(v30 + 792) = 327681;
  *(_DWORD *)(v30 + 800) = 327681;
  *(_QWORD *)(v30 + 808) = sub_23AE3A7C0;
  *(_QWORD *)(v30 + 816) = 0;
  *(_DWORD *)(v30 + 824) = 327682;
  *(_DWORD *)(v30 + 832) = 327682;
  *(_QWORD *)(v30 + 840) = sub_23AE3A808;
  *(_DWORD *)(v30 + 856) = 327683;
  *(_DWORD *)(v30 + 864) = 327683;
  *(_QWORD *)(v30 + 848) = 0;
  *(_QWORD *)(v30 + 872) = sub_23AE3A850;
  *(_QWORD *)(v30 + 880) = 0;
  *(_DWORD *)(v30 + 888) = 327684;
  *(_DWORD *)(v30 + 896) = 327684;
  *(_QWORD *)(v30 + 904) = sub_23AE3A898;
  *(_QWORD *)(v30 + 912) = 0;
  *(_DWORD *)(v30 + 920) = 327685;
  *(_DWORD *)(v30 + 928) = 327685;
  *(_QWORD *)(v30 + 936) = sub_23AE3A8E0;
  *(_QWORD *)(v30 + 944) = 0;
  *(_DWORD *)(v30 + 952) = 327686;
  *(_DWORD *)(v30 + 960) = 327686;
  *(_QWORD *)(v30 + 968) = sub_23AE3A928;
  *(_QWORD *)(v30 + 976) = 0;
  *(_DWORD *)(v30 + 984) = 327687;
  *(_DWORD *)(v30 + 992) = 327687;
  *(_QWORD *)(v30 + 1000) = sub_23AE3A970;
  *(_QWORD *)(v30 + 1008) = 0;
  *(_DWORD *)(v30 + 1016) = 327688;
  *(_DWORD *)(v30 + 1024) = 327688;
  *(_QWORD *)(v30 + 1032) = sub_23AE3A9B8;
  *(_QWORD *)(v30 + 1040) = 0;
  *(_DWORD *)(v30 + 1048) = 327689;
  *(_DWORD *)(v30 + 1056) = 327689;
  *(_QWORD *)(v30 + 1064) = sub_23AE3AA00;
  *(_QWORD *)(v30 + 1072) = 0;
  *(_DWORD *)(v30 + 1080) = 327690;
  *(_DWORD *)(v30 + 1088) = 327690;
  *(_QWORD *)(v30 + 1096) = sub_23AE3AA48;
  *(_QWORD *)(v30 + 1104) = 0;
  *(_DWORD *)(v30 + 1112) = 327691;
  *(_DWORD *)(v30 + 1120) = 327691;
  *(_QWORD *)(v30 + 1128) = sub_23AE3AA90;
  *(_QWORD *)(v30 + 1136) = 0;
  *(_DWORD *)(v30 + 1144) = 393216;
  *(_DWORD *)(v30 + 1152) = 393216;
  *(_QWORD *)(v30 + 1160) = sub_23AE3AAD8;
  *(_QWORD *)(v30 + 1168) = 0;
  *(_DWORD *)(v30 + 1176) = 393217;
  *(_DWORD *)(v30 + 1184) = 393217;
  *(_QWORD *)(v30 + 1192) = sub_23AE3AB20;
  *(_QWORD *)(v30 + 1200) = 0;
  *(_DWORD *)(v30 + 1208) = 393218;
  *(_DWORD *)(v30 + 1216) = 393218;
  *(_QWORD *)(v30 + 1224) = sub_23AE3AB68;
  *(_QWORD *)(v30 + 1232) = 0;
  *(_DWORD *)(v30 + 1240) = 393219;
  *(_DWORD *)(v30 + 1248) = 393219;
  *(_QWORD *)(v30 + 1256) = sub_23AE3ABB0;
  *(_QWORD *)(v30 + 1264) = 0;
  *(_DWORD *)(v30 + 1272) = 393220;
  *(_DWORD *)(v30 + 1280) = 393220;
  *(_QWORD *)(v30 + 1288) = sub_23AE3ABF8;
  *(_QWORD *)(v30 + 1296) = 0;
  *(_DWORD *)(v30 + 1304) = 393221;
  *(_DWORD *)(v30 + 1312) = 393221;
  *(_QWORD *)(v30 + 1320) = sub_23AE3AC40;
  *(_QWORD *)(v30 + 1328) = 0;
  *(_DWORD *)(v30 + 1336) = 458752;
  *(_DWORD *)(v30 + 1344) = 458752;
  *(_QWORD *)(v30 + 1352) = sub_23AE3AC88;
  *(_QWORD *)(v30 + 1360) = 0;
  *(_DWORD *)(v30 + 1368) = 458753;
  *(_DWORD *)(v30 + 1376) = 458753;
  *(_QWORD *)(v30 + 1384) = sub_23AE3ACD0;
  *(_QWORD *)(v30 + 1392) = 0;
  *(_DWORD *)(v30 + 1400) = 458754;
  *(_DWORD *)(v30 + 1408) = 458754;
  *(_QWORD *)(v30 + 1416) = sub_23AE3AD18;
  *(_QWORD *)(v30 + 1424) = 0;
  *(_DWORD *)(v30 + 1432) = 458755;
  *(_DWORD *)(v30 + 1440) = 458755;
  *(_QWORD *)(v30 + 1448) = sub_23AE3AD60;
  *(_QWORD *)(v30 + 1456) = 0;
  *(_DWORD *)(v30 + 1464) = 458756;
  *(_DWORD *)(v30 + 1472) = 458756;
  *(_QWORD *)(v30 + 1480) = sub_23AE3ADA8;
  *(_QWORD *)(v30 + 1488) = 0;
  *(_DWORD *)(v30 + 1496) = 0x80000;
  *(_DWORD *)(v30 + 1504) = 0x80000;
  *(_QWORD *)(v30 + 1512) = sub_23AE3ADF0;
  *(_QWORD *)(v30 + 1520) = 0;
  *(_DWORD *)(v30 + 1528) = 524289;
  *(_DWORD *)(v30 + 1536) = 524289;
  *(_QWORD *)(v30 + 1544) = sub_23AE3AE38;
  *(_QWORD *)(v30 + 1552) = 0;
  *(_DWORD *)(v30 + 1560) = 524290;
  *(_DWORD *)(v30 + 1568) = 524290;
  *(_QWORD *)(v30 + 1576) = sub_23AE3AE80;
  *(_QWORD *)(v30 + 1584) = 0;
  *(_DWORD *)(v30 + 1592) = 524291;
  *(_DWORD *)(v30 + 1600) = 524291;
  *(_QWORD *)(v30 + 1608) = sub_23AE3AEC8;
  *(_QWORD *)(v30 + 1616) = 0;
  *(_DWORD *)(v30 + 1624) = 590079;
  *(_DWORD *)(v30 + 1632) = 590079;
  *(_QWORD *)(v30 + 1640) = sub_23AE3AF10;
  *(_QWORD *)(v30 + 1648) = 0;
  *(_DWORD *)(v30 + 1656) = 590080;
  *(_DWORD *)(v30 + 1664) = 590080;
  *(_QWORD *)(v30 + 1672) = sub_23AE3AF58;
  *(_QWORD *)(v30 + 1680) = 0;
  *(_DWORD *)(v30 + 1688) = 590081;
  *(_DWORD *)(v30 + 1696) = 590081;
  *(_QWORD *)(v30 + 1704) = sub_23AE3AFA0;
  *(_QWORD *)(v30 + 1712) = 0;
  *(_DWORD *)(v30 + 1720) = 590082;
  *(_DWORD *)(v30 + 1728) = 590082;
  *(_QWORD *)(v30 + 1736) = sub_23AE3AFE8;
  *(_QWORD *)(v30 + 1744) = 0;
  *(_DWORD *)(v30 + 1752) = 590084;
  *(_DWORD *)(v30 + 1760) = 590084;
  *(_QWORD *)(v30 + 1768) = sub_23AE3B030;
  *(_QWORD *)(v30 + 1776) = 0;
  *(_DWORD *)(v30 + 1784) = 590085;
  *(_DWORD *)(v30 + 1792) = 590085;
  *(_QWORD *)(v30 + 1800) = sub_23AE3B078;
  *(_QWORD *)(v30 + 1808) = 0;
  *(_DWORD *)(v30 + 1816) = 590086;
  *(_DWORD *)(v30 + 1824) = 590086;
  *(_QWORD *)(v30 + 1832) = sub_23AE3B0C0;
  *(_QWORD *)(v30 + 1840) = 0;
  *(_DWORD *)(v30 + 1848) = 590087;
  v31 = sub_23AAF8194(v30);
  swift_setDeallocating();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4CC0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v218 = v29;
  *(_QWORD *)(a8 + v29) = v31;
  v32 = v231;
  v33 = qword_2542EDE68;
  v224 = (id)objc_opt_self();
  v34 = objc_msgSend(v224, sel_defaultStore);
  LODWORD(v22) = objc_msgSend(v34, sel_sqlDatabaseVacuumBatchSize);

  *(_QWORD *)(a8 + v33) = (int)v22;
  *(_BYTE *)(a8 + qword_2542EDE70) = 0;
  *(_BYTE *)(a8 + qword_2542EDE78) = 0;
  *(_BYTE *)(a8 + qword_2542EDE80) = 0;
  v35 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v228 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16);
  v228(v17, (uint64_t)v233, v12);
  swift_retain();
  v221 = v21;
  v36 = sub_23B1C5E40();
  v37 = sub_23B1C6AB8();
  v38 = v37;
  v39 = os_log_type_enabled(v36, v37);
  v229 = v12;
  v220 = v13;
  if (v39)
  {
    v40 = swift_slowAlloc();
    v203 = v38;
    v41 = v40;
    v204 = (void *)swift_slowAlloc();
    aBlock = v204;
    *(_DWORD *)v41 = 136446466;
    v42 = *(_QWORD *)(v32 + 136);
    v43 = *(_QWORD *)(v42 + 16);
    v44 = *(_QWORD *)(v42 + 24);
    swift_bridgeObjectRetain();
    v236 = sub_23AABEC68(v43, v44, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2082;
    v223 = (void (*)(uint64_t, uint64_t))(v41 + 14);
    v45 = (void *)sub_23B1C5954();
    v46 = objc_msgSend(v45, sel_fp_shortDescription);

    v47 = sub_23B1C63E0();
    v49 = v48;

    v236 = sub_23AABEC68(v47, v49, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    v12 = v229;
    swift_bridgeObjectRelease();
    v223 = *(void (**)(uint64_t, uint64_t))(v220 + 8);
    v223((uint64_t)v17, v12);
    _os_log_impl(&dword_23AA66000, v36, (os_log_type_t)v203, "opening database %{public}s at %{public}s", (uint8_t *)v41, 0x16u);
    v50 = v204;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v50, -1, -1);
    MEMORY[0x23B8614BC](v41, -1, -1);
  }
  else
  {
    swift_release();
    v223 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v223((uint64_t)v17, v12);
  }

  (*(void (**)(_BYTE *, uint64_t))(v225 + 8))(v221, v226);
  v51 = objc_msgSend(v224, sel_defaultStore);
  v52 = objc_msgSend(v51, sel_sqlDatabaseStatementCacheMaxCount);

  v53 = v52;
  v54 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PQLConnectionWithStatistics()), sel_init);
  v55 = qword_2542EE110;
  *(_QWORD *)(a8 + qword_2542EE110) = v54;
  v56 = v230;
  objc_msgSend(v54, sel_setTraced_, (v230 >> 33) & 1);
  v57 = v54;
  swift_bridgeObjectRetain();
  v58 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v57, sel_setLabel_, v58);

  v59 = *(void **)(a8 + v55);
  objc_msgSend(v59, sel_setStatementCacheMaxCount_, v53);
  v60 = a8 + qword_2542EDEC0;
  v228((_BYTE *)(a8 + qword_2542EDEC0), (uint64_t)v233, v12);
  v61 = (id (**)(uint64_t, void *))(a8 + qword_2542EDED8);
  v62 = v234;
  v221 = (_BYTE *)(a8 + qword_2542EDED8);
  *v61 = sub_23AEB5428;
  v61[1] = v62;
  *(_BYTE *)(a8 + qword_2542E69E0) = (v56 & 4) != 0;
  if ((v56 & 1) != 0)
    v63 = 1;
  else
    v63 = 6;
  v64 = v63 | (v56 >> 16) & 0x10000;
  swift_retain();
  v65 = (void *)sub_23B1C5954();
  aBlock = 0;
  LODWORD(v64) = objc_msgSend(v59, sel_openAtURL_withFlags_error_, v65, v64, &aBlock);

  v66 = aBlock;
  if (!(_DWORD)v64)
  {
    v83 = aBlock;
    swift_bridgeObjectRelease();
    swift_release();
    v84 = (id)sub_23B1C587C();

LABEL_19:
    v85 = v229;
    swift_willThrow();
    sub_23AB23A94();
    v86 = (void *)swift_allocError();
    *(_QWORD *)v87 = v84;
    *(_BYTE *)(v87 + 48) = 1;
    v88 = (uint64_t)v234 + 16;
    swift_beginAccess();
    v89 = (void *)MEMORY[0x23B8615C4](v88);
    v90 = v84;
    if (v89)
    {
      sub_23AC57DF0(0, v86);

    }
    swift_willThrow();
    v91 = v86;
    swift_release();
    swift_release();
    swift_release_n();

    sub_23AA8A05C(v227, &qword_2542E4E70);
    v92 = v223;
    v223((uint64_t)v233, v85);

    v93 = *(void **)(a8 + v55);
    goto LABEL_22;
  }
  *(_BYTE *)(a8 + v210) = 0;
  v67 = v66;
  v68 = sub_23B1C58C4();
  *(_BYTE *)(a8 + qword_2542E69C0) = (v68 & 1) == 0;
  if ((v68 & 1) == 0)
    objc_msgSend(*(id *)(a8 + v55), sel_setShouldUseWALJournalMode_, 0);
  if ((v230 & 1) != 0)
  {
    v94 = v208;
    v95 = v229;
    v228(v208, (uint64_t)v233, v229);
    v223((uint64_t)v94, v95);
    goto LABEL_24;
  }
  if ((objc_msgSend(*(id *)(a8 + v55), sel_setupPragmas) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v164 = objc_msgSend(*(id *)(a8 + v55), sel_lastError);
    if (v164)
    {
      v84 = v164;
      swift_release();
    }
    else
    {
      type metadata accessor for PQLSqliteError(0);
      v236 = 11;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
      sub_23B1C5864();
      swift_release();
      v84 = aBlock;
    }
    goto LABEL_19;
  }
  v210 = v60;
  v69 = v208;
  v70 = v229;
  v228(v208, (uint64_t)v233, v229);
  v71 = sub_23B1C58C4();
  v223((uint64_t)v69, v70);
  if ((v71 & 1) == 0)
  {
LABEL_24:
    *(_QWORD *)(a8 + qword_2542EDEC8) = 0;
    v79 = v231;
    goto LABEL_25;
  }
  v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEDD630]), sel_init);
  v73 = v72;
  v74 = qword_2542EDEC8;
  *(_QWORD *)(a8 + qword_2542EDEC8) = v72;
  if (v72)
  {
    v75 = v232[17];
    v76 = *(_QWORD *)(v75 + 24);
    aBlock = *(id *)(v75 + 16);
    v238 = v76;
    v77 = v72;
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    v78 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    objc_msgSend(v77, sel_setLabel_, v78);

    v73 = *(void **)(a8 + v74);
  }
  objc_msgSend(v73, sel_setStatementCacheMaxCount_, v53);
  v79 = v231;
  if (!v73)
    goto LABEL_25;
  v80 = (void *)sub_23B1C5954();
  aBlock = 0;
  v81 = objc_msgSend(v73, sel_openAtURL_withFlags_error_, v80, 65537, &aBlock);

  if (!v81)
  {
    v181 = aBlock;
    swift_bridgeObjectRelease();
    swift_release();
    v182 = (void *)sub_23B1C587C();

    swift_willThrow();
    sub_23AB23A94();
    v183 = (void *)swift_allocError();
    *(_QWORD *)v184 = v182;
    *(_BYTE *)(v184 + 48) = 1;
    v185 = (uint64_t)v234 + 16;
    swift_beginAccess();
    v186 = (void *)MEMORY[0x23B8615C4](v185);
    v187 = v182;
    if (v186)
    {
      sub_23AC57DF0(0, v183);

    }
    swift_willThrow();
    v188 = v183;
    swift_release();
    swift_release();
    swift_release_n();

    sub_23AA8A05C(v227, &qword_2542E4E70);
    v85 = v229;
    v92 = v223;
    v223((uint64_t)v233, v229);

    v93 = *(void **)(a8 + qword_2542EDEC8);
    v60 = v210;
LABEL_22:

    sub_23AA8A05C(v215, (uint64_t *)&unk_2542E4320);
    v92(v60, v85);
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    sub_23AAB7948(*v214);
    sub_23AAB7948(*v212);
    sub_23AAB7948(*v216);
    sub_23AAB7948(*v219);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69F0);
    swift_deallocPartialClassInstance();
    return a8;
  }
  v82 = aBlock;
LABEL_25:
  v96 = *(void **)(a8 + v55);
  v97 = *(void **)(a8 + qword_2542EDEC8);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E45D8);
  swift_allocObject();
  v98 = v97;
  v99 = v96;
  v100 = v232;
  swift_retain();
  v228 = (void (*)(_BYTE *, uint64_t, uint64_t))sub_23AEAAE9C(v99, v97, 0, (uint64_t)v100);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6A00);
  swift_allocObject();
  swift_retain();
  v101 = v99;
  v102 = v98;
  v223 = (void (*)(uint64_t, uint64_t))sub_23AEAB130(v101, v97, 1, v79);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4C10);
  v103 = swift_allocObject();
  v221 = (_BYTE *)(v103 + 24);
  v104 = swift_weakInit();
  *(_QWORD *)(v103 + 16) = v101;
  v105 = (*(_QWORD *(**)(id *__return_ptr, uint64_t))(*v100 + 96))(&aBlock, v104);
  (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*(_QWORD *)v79 + 96))(&v236, v105);
  v106 = (uint64_t)aBlock;
  v107 = (id)v236;
  v108 = v238;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
  v109 = swift_allocObject();
  v110 = v101;
  v111 = sub_23AEAB398(v110, v106, v108, v107, v109);

  swift_release();
  v112 = v100[17];
  v113 = *(_QWORD *)(v112 + 16);
  v114 = *(_QWORD *)(v112 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  swift_allocObject();
  v115 = v110;
  swift_bridgeObjectRetain();
  v116 = v114;
  v117 = v230;
  v118 = sub_23AE567A4(v115, v113, v116, v230);
  type metadata accessor for SQLHistoryTable();
  v119 = swift_allocObject();
  *(_BYTE *)(v119 + 37) = 0;
  *(_WORD *)(v119 + 38) = -5120;
  *(_QWORD *)(v119 + 40) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v119 + 16) = v115;
  strcpy((char *)(v119 + 24), "D2DRestoreV2");
  *(_QWORD *)(a8 + qword_2542EDE60) = v119;
  v120 = v115;
  swift_release();
  v121 = v206;
  sub_23AA8EFC8(v227, (uint64_t)v206, &qword_2542E4E70);
  swift_retain();
  swift_retain();
  v122 = (uint64_t)v228;
  swift_retain();
  v123 = (uint64_t)v223;
  swift_retain();
  swift_retain();
  a8 = sub_23AEAB860(v111, (uint64_t)v118, v122, v123, v103, (uint64_t)v121, v117, a8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v219 = (uint64_t *)v103;
  swift_release();
  v124 = swift_allocObject();
  swift_weakInit();
  v125 = *(_QWORD *)(v111 + 112);
  *(_QWORD *)(v111 + 112) = sub_23AEAD448;
  *(_QWORD *)(v111 + 120) = v124;
  v218 = v111;
  v216 = (uint64_t *)v124;
  swift_retain();
  swift_retain();
  sub_23AAB7948(v125);
  v126 = qword_2542EE110;
  v127 = *(void **)(a8 + qword_2542EE110);
  v128 = swift_allocObject();
  swift_weakInit();
  v241 = sub_23AEAD450;
  v242 = v128;
  v129 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v238 = 1107296256;
  v239 = sub_23AC46D44;
  v240 = &block_descriptor_1006;
  v130 = _Block_copy(&aBlock);
  v131 = v127;
  swift_release();
  objc_msgSend(v131, sel_setAutoRollbackHandlerForSwift_, v130);
  _Block_release(v130);

  v132 = *(void **)(a8 + qword_2542EDEC8);
  if (v132)
  {
    v133 = swift_allocObject();
    swift_weakInit();
    v241 = sub_23AEAD450;
    v242 = v133;
    aBlock = v129;
    v238 = 1107296256;
    v239 = sub_23AC46D44;
    v240 = &block_descriptor_1011;
    v134 = _Block_copy(&aBlock);
    v135 = v132;
    swift_release();
    objc_msgSend(v135, sel_setAutoRollbackHandlerForSwift_, v134);
    _Block_release(v134);

  }
  v217 = (uint64_t)v118;
  swift_weakAssign();
  swift_weakAssign();
  v136 = v222;
  if ((v230 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v153 = v220;
    v154 = v207;
  }
  else
  {
    v137 = objc_msgSend(v224, sel_defaultStore);
    v138 = *(void **)(a8 + v126);
    v139 = *(id *)(a8 + 64);
    v140 = v138;
    objc_msgSend(v137, sel_sqlDatabaseBatchDelay);
    objc_msgSend(v140, sel_useBatchingOnTargetQueue_delay_changeCount_, v139, objc_msgSend(v137, sel_sqlDatabaseBatchChangeCount), v141);

    v142 = v129;
    v143 = *(void **)(a8 + v126);
    v144 = swift_allocObject();
    *(_QWORD *)(v144 + 16) = v143;
    v241 = (uint64_t (*)(void *))sub_23AEB5510;
    v242 = v144;
    aBlock = v142;
    v238 = 1107296256;
    v239 = sub_23AE2CAF4;
    v240 = &block_descriptor_1018;
    v145 = _Block_copy(&aBlock);
    v146 = v143;
    swift_release();
    objc_msgSend(v146, sel_setProfilingHookV2_, v145);
    _Block_release(v145);

    MEMORY[0x24BDAC7A8](v147);
    v148 = v205;
    *(_QWORD *)&v202[-48] = a8;
    *(_QWORD *)&v202[-40] = v148;
    v149 = v232;
    *(_QWORD *)&v202[-32] = v136;
    *(_QWORD *)&v202[-24] = v149;
    *(_QWORD *)&v202[-16] = v231;
    v151 = v150;
    v152 = v209;
    sub_23AC494B4(0, 0, (uint64_t)"init(url:fsTree:fpTree:telemetry:options:creationReason:onError:)", 65, 2, (uint64_t)sub_23AEAD470, (uint64_t)&v202[-64]);
    v153 = v220;
    v154 = v207;
    if (v152)
    {

      swift_bridgeObjectRelease();
      v235 = v152;
      v155 = v152;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      if (swift_dynamicCast())
      {

        sub_23AEAD484((uint64_t)&aBlock, (uint64_t)&v236);
        v156 = *(void **)(a8 + 64);
        swift_retain();
        v157 = v156;
        sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, a8);

        v158 = v157;
        sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
        swift_release();

        v159 = *(void (**)(uint64_t, void *))(a8 + qword_2542EDED8);
        sub_23AB23A94();
        v160 = (void *)swift_allocError();
        sub_23AEAD4C0(&v236, v161);
        v162 = swift_retain();
        v159(v162, v160);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release_n();
        swift_release();

        sub_23AA8A05C(v227, &qword_2542E4E70);
        (*(void (**)(_BYTE *, uint64_t))(v153 + 8))(v233, v229);
        sub_23AC04DA4((uint64_t)&v236);
        swift_release();

        v163 = v235;
LABEL_51:

        swift_release();
        return a8;
      }

      aBlock = v152;
      v173 = v152;
      v174 = v152;
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v175 = (id)v236;
        v176 = objc_msgSend((id)v236, sel_domain);
        v177 = sub_23B1C63E0();
        v179 = v178;

        if (v177 == sub_23B1C63E0() && v179 == v180)
        {
          swift_bridgeObjectRelease_n();
LABEL_48:

          v190 = *(void **)(a8 + 64);
          swift_retain();
          v191 = v190;
          sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, a8);

          v192 = v191;
          sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
          swift_release();

          v193 = *(void (**)(uint64_t, id))(a8 + qword_2542EDED8);
          swift_retain();
          v194 = v175;
          v193(a8, v194);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release_n();
          swift_release();

          sub_23AA8A05C(v227, &qword_2542E4E70);
          (*(void (**)(_BYTE *, uint64_t))(v153 + 8))(v233, v229);
          swift_release();
          v163 = aBlock;
          goto LABEL_51;
        }
        v189 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v189 & 1) != 0)
          goto LABEL_48;

      }
      v195 = *(void **)(a8 + 64);
      swift_retain();
      v196 = v195;
      sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, a8);

      v197 = v196;
      sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
      swift_release();

      v198 = *(void (**)(uint64_t, uint64_t))(a8 + qword_2542EDED8);
      sub_23AB23A94();
      v199 = swift_allocError();
      *(_QWORD *)v200 = v173;
      *(_BYTE *)(v200 + 48) = 2;
      swift_retain();
      v201 = v173;
      v198(a8, v199);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_23AA8A05C(v227, &qword_2542E4E70);
      (*(void (**)(_BYTE *, uint64_t))(v153 + 8))(v233, v229);
      swift_release();
      v163 = (id)v199;
      goto LABEL_51;
    }
    v209 = 0;

    swift_bridgeObjectRelease();
  }
  v165 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v166 = sub_23B1C5E40();
  v167 = sub_23B1C6AB8();
  v168 = os_log_type_enabled(v166, v167);
  v169 = v226;
  v170 = v225;
  if (v168)
  {
    v171 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v171 = 0;
    _os_log_impl(&dword_23AA66000, v166, v167, "database is ready", v171, 2u);
    MEMORY[0x23B8614BC](v171, -1, -1);
  }
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_23AA8A05C(v227, &qword_2542E4E70);
  (*(void (**)(_BYTE *, uint64_t))(v153 + 8))(v233, v229);
  (*(void (**)(_BYTE *, uint64_t))(v170 + 8))(v154, v169);
  swift_release();
  return a8;
}

uint64_t sub_23AE306F4(_BYTE *a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  signed int v52;
  void *v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  void *v58;
  void *v59;
  uint64_t v60;
  _BYTE *v61;
  id (**v62)(uint64_t, void *);
  int v63;
  uint64_t v64;
  _BYTE *v65;
  void *v66;
  id v67;
  id v68;
  char v69;
  _QWORD *v70;
  void (*v71)(uint64_t, uint64_t);
  _BYTE *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  void *v83;
  unsigned int v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  void *v90;
  uint64_t v91;
  id v92;
  id v93;
  void *v94;
  _BYTE *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99;
  id v100;
  _QWORD *v101;
  uint64_t v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  int64_t v119;
  _QWORD *v120;
  uint64_t v121;
  id v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  void *v131;
  id v132;
  void *v133;
  uint64_t v134;
  void *v135;
  id v136;
  void *v137;
  id v138;
  void *v139;
  id v140;
  id v141;
  double v142;
  void *v143;
  uint64_t v144;
  void *v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  id v150;
  id v151;
  id v152;
  _BYTE *v153;
  id v154;
  void *v155;
  id v156;
  id v157;
  void (*v158)(uint64_t, void *);
  void *v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  id v164;
  id v165;
  NSObject *v166;
  os_log_type_t v167;
  _BOOL4 v168;
  uint64_t v169;
  uint8_t *v170;
  id v171;
  char v172;
  uint64_t v173;
  id v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  id v181;
  void *v182;
  void *v183;
  uint64_t v184;
  id v185;
  id v186;
  char v187;
  void *v188;
  id v189;
  id v190;
  void (*v191)(uint64_t, id);
  id v192;
  void *v193;
  id v194;
  id v195;
  void (*v196)(uint64_t, void *);
  void *v197;
  id v198;
  uint64_t v199;
  id v200;
  _BYTE v202[4];
  int v203;
  void *v204;
  uint64_t v205;
  _BYTE *v206;
  _BYTE *v207;
  _BYTE *v208;
  uint64_t v209;
  id v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  _BYTE *v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void (*v227)(_QWORD);
  void (*v228)(uint64_t, uint64_t);
  uint64_t v229;
  unint64_t v230;
  _BYTE *v231;
  _QWORD *v232;
  uint64_t v233;
  id v234;
  uint64_t v235;
  id aBlock;
  uint64_t v237;
  void *v238;
  void *v239;
  uint64_t (*v240)(void *);
  uint64_t v241;
  uint64_t v242;

  v222 = a7;
  v205 = a6;
  v230 = a5;
  v226 = a4;
  v231 = a1;
  v232 = a2;
  v242 = *MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v10);
  v206 = &v202[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v233 = sub_23B1C5A08();
  v12 = *(_QWORD *)(v233 - 8);
  v13 = MEMORY[0x24BDAC7A8](v233);
  v207 = &v202[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v202[-v15];
  v225 = sub_23B1C5E4C();
  v224 = *(_QWORD *)(v225 - 8);
  v17 = MEMORY[0x24BDAC7A8](v225);
  v208 = &v202[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v202[-v19];
  v209 = qword_2542EDE58;
  *(_BYTE *)(a8 + qword_2542EDE58) = 1;
  *(_BYTE *)(a8 + qword_2542EDEE0) = 0;
  v21 = a8 + qword_2542EDED0;
  v22 = sub_23B1C5C54();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v215 = v21;
  v23(v21, 1, 1, v22);
  v211 = qword_2542E69D0;
  *(_QWORD *)(a8 + qword_2542E69D0) = MEMORY[0x24BEE4AF8];
  v213 = qword_2542E69B8;
  *(_QWORD *)(a8 + qword_2542E69B8) = 0;
  v217 = qword_2542E69D8;
  *(_QWORD *)(a8 + qword_2542E69D8) = 0;
  *(_BYTE *)(a8 + qword_2542EDE90) = 0;
  v24 = (uint64_t *)(a8 + qword_2542EDEB0);
  *v24 = 0;
  v24[1] = 0;
  v214 = v24;
  *(_BYTE *)(a8 + qword_2542EDEA8) = 0;
  v25 = (uint64_t *)(a8 + qword_2542EDEB8);
  *v25 = 0;
  v25[1] = 0;
  v212 = v25;
  v26 = (uint64_t *)(a8 + qword_2542EDEA0);
  *v26 = 0;
  v26[1] = 0;
  v216 = v26;
  v27 = (uint64_t *)(a8 + qword_2542EDE88);
  *v27 = 0;
  v27[1] = 0;
  v219 = v27;
  *(_BYTE *)(a8 + qword_2542EDE98) = 0;
  v28 = qword_2542E7738;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55B8);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_23B1DA940;
  *(_DWORD *)(v29 + 32) = 0;
  *(_QWORD *)(v29 + 40) = sub_23AE3A100;
  *(_QWORD *)(v29 + 48) = 0;
  *(_DWORD *)(v29 + 56) = 0x10000;
  *(_DWORD *)(v29 + 64) = 0x10000;
  *(_QWORD *)(v29 + 72) = sub_23AE3A148;
  *(_QWORD *)(v29 + 80) = 0;
  *(_DWORD *)(v29 + 88) = 65537;
  *(_DWORD *)(v29 + 96) = 65537;
  *(_QWORD *)(v29 + 104) = sub_23AE3A190;
  *(_QWORD *)(v29 + 112) = 0;
  *(_DWORD *)(v29 + 120) = 0x20000;
  *(_DWORD *)(v29 + 128) = 0x20000;
  *(_QWORD *)(v29 + 136) = sub_23AE3A1D8;
  *(_QWORD *)(v29 + 144) = 0;
  *(_DWORD *)(v29 + 152) = 131073;
  *(_DWORD *)(v29 + 160) = 131073;
  *(_QWORD *)(v29 + 168) = sub_23AE3A220;
  *(_QWORD *)(v29 + 176) = 0;
  *(_DWORD *)(v29 + 184) = 131074;
  *(_DWORD *)(v29 + 192) = 131074;
  *(_QWORD *)(v29 + 200) = sub_23AE3A268;
  *(_QWORD *)(v29 + 208) = 0;
  *(_DWORD *)(v29 + 216) = 131075;
  *(_DWORD *)(v29 + 224) = 131075;
  *(_QWORD *)(v29 + 232) = sub_23AE3A2B0;
  *(_QWORD *)(v29 + 240) = 0;
  *(_DWORD *)(v29 + 248) = 131076;
  *(_DWORD *)(v29 + 256) = 131076;
  *(_QWORD *)(v29 + 264) = sub_23AE3A2F8;
  *(_QWORD *)(v29 + 272) = 0;
  *(_DWORD *)(v29 + 280) = 131077;
  *(_DWORD *)(v29 + 288) = 131077;
  *(_QWORD *)(v29 + 296) = sub_23AE3A340;
  *(_QWORD *)(v29 + 304) = 0;
  *(_DWORD *)(v29 + 312) = 131078;
  *(_DWORD *)(v29 + 320) = 131078;
  *(_QWORD *)(v29 + 328) = sub_23AE3A388;
  *(_QWORD *)(v29 + 336) = 0;
  *(_DWORD *)(v29 + 344) = 131079;
  *(_DWORD *)(v29 + 352) = 131079;
  *(_QWORD *)(v29 + 360) = sub_23AE3A3D0;
  *(_QWORD *)(v29 + 368) = 0;
  *(_DWORD *)(v29 + 376) = 131080;
  *(_DWORD *)(v29 + 384) = 131080;
  *(_QWORD *)(v29 + 392) = sub_23AE3A418;
  *(_QWORD *)(v29 + 400) = 0;
  *(_DWORD *)(v29 + 408) = 131081;
  *(_DWORD *)(v29 + 416) = 131081;
  *(_QWORD *)(v29 + 424) = sub_23AE3A460;
  *(_QWORD *)(v29 + 432) = 0;
  *(_DWORD *)(v29 + 440) = 196608;
  *(_DWORD *)(v29 + 448) = 196608;
  *(_QWORD *)(v29 + 456) = sub_23AE3A4A8;
  *(_QWORD *)(v29 + 464) = 0;
  *(_DWORD *)(v29 + 472) = 196609;
  *(_DWORD *)(v29 + 480) = 196609;
  *(_QWORD *)(v29 + 488) = sub_23AE3A4F0;
  *(_QWORD *)(v29 + 496) = 0;
  *(_DWORD *)(v29 + 504) = 196610;
  *(_DWORD *)(v29 + 512) = 196610;
  *(_QWORD *)(v29 + 520) = sub_23AE3A538;
  *(_QWORD *)(v29 + 528) = 0;
  *(_DWORD *)(v29 + 536) = 196611;
  *(_DWORD *)(v29 + 544) = 196611;
  *(_QWORD *)(v29 + 552) = sub_23AE3A580;
  *(_QWORD *)(v29 + 560) = 0;
  *(_DWORD *)(v29 + 568) = 196612;
  *(_DWORD *)(v29 + 576) = 196612;
  *(_QWORD *)(v29 + 584) = sub_23AE3A5C8;
  *(_QWORD *)(v29 + 592) = 0;
  *(_DWORD *)(v29 + 600) = 196613;
  *(_DWORD *)(v29 + 608) = 196613;
  *(_QWORD *)(v29 + 616) = sub_23AE3A610;
  *(_QWORD *)(v29 + 624) = 0;
  *(_DWORD *)(v29 + 632) = 196614;
  *(_DWORD *)(v29 + 640) = 196614;
  *(_QWORD *)(v29 + 648) = sub_23AE3A658;
  *(_DWORD *)(v29 + 664) = 196615;
  *(_DWORD *)(v29 + 672) = 196615;
  *(_QWORD *)(v29 + 656) = 0;
  *(_QWORD *)(v29 + 680) = sub_23AE3A6A0;
  *(_QWORD *)(v29 + 688) = 0;
  *(_DWORD *)(v29 + 696) = 0x40000;
  *(_DWORD *)(v29 + 704) = 0x40000;
  *(_QWORD *)(v29 + 712) = sub_23AE3A6E8;
  *(_QWORD *)(v29 + 720) = 0;
  *(_DWORD *)(v29 + 728) = 262145;
  *(_DWORD *)(v29 + 736) = 262145;
  *(_QWORD *)(v29 + 744) = sub_23AE3A730;
  *(_QWORD *)(v29 + 752) = 0;
  *(_DWORD *)(v29 + 760) = 327680;
  *(_DWORD *)(v29 + 768) = 327680;
  *(_QWORD *)(v29 + 776) = sub_23AE3A778;
  *(_QWORD *)(v29 + 784) = 0;
  *(_DWORD *)(v29 + 792) = 327681;
  *(_DWORD *)(v29 + 800) = 327681;
  *(_QWORD *)(v29 + 808) = sub_23AE3A7C0;
  *(_QWORD *)(v29 + 816) = 0;
  *(_DWORD *)(v29 + 824) = 327682;
  *(_DWORD *)(v29 + 832) = 327682;
  *(_QWORD *)(v29 + 840) = sub_23AE3A808;
  *(_DWORD *)(v29 + 856) = 327683;
  *(_DWORD *)(v29 + 864) = 327683;
  *(_QWORD *)(v29 + 848) = 0;
  *(_QWORD *)(v29 + 872) = sub_23AE3A850;
  *(_QWORD *)(v29 + 880) = 0;
  *(_DWORD *)(v29 + 888) = 327684;
  *(_DWORD *)(v29 + 896) = 327684;
  *(_QWORD *)(v29 + 904) = sub_23AE3A898;
  *(_QWORD *)(v29 + 912) = 0;
  *(_DWORD *)(v29 + 920) = 327685;
  *(_DWORD *)(v29 + 928) = 327685;
  *(_QWORD *)(v29 + 936) = sub_23AE3A8E0;
  *(_QWORD *)(v29 + 944) = 0;
  *(_DWORD *)(v29 + 952) = 327686;
  *(_DWORD *)(v29 + 960) = 327686;
  *(_QWORD *)(v29 + 968) = sub_23AE3A928;
  *(_QWORD *)(v29 + 976) = 0;
  *(_DWORD *)(v29 + 984) = 327687;
  *(_DWORD *)(v29 + 992) = 327687;
  *(_QWORD *)(v29 + 1000) = sub_23AE3A970;
  *(_QWORD *)(v29 + 1008) = 0;
  *(_DWORD *)(v29 + 1016) = 327688;
  *(_DWORD *)(v29 + 1024) = 327688;
  *(_QWORD *)(v29 + 1032) = sub_23AE3A9B8;
  *(_QWORD *)(v29 + 1040) = 0;
  *(_DWORD *)(v29 + 1048) = 327689;
  *(_DWORD *)(v29 + 1056) = 327689;
  *(_QWORD *)(v29 + 1064) = sub_23AE3AA00;
  *(_QWORD *)(v29 + 1072) = 0;
  *(_DWORD *)(v29 + 1080) = 327690;
  *(_DWORD *)(v29 + 1088) = 327690;
  *(_QWORD *)(v29 + 1096) = sub_23AE3AA48;
  *(_QWORD *)(v29 + 1104) = 0;
  *(_DWORD *)(v29 + 1112) = 327691;
  *(_DWORD *)(v29 + 1120) = 327691;
  *(_QWORD *)(v29 + 1128) = sub_23AE3AA90;
  *(_QWORD *)(v29 + 1136) = 0;
  *(_DWORD *)(v29 + 1144) = 393216;
  *(_DWORD *)(v29 + 1152) = 393216;
  *(_QWORD *)(v29 + 1160) = sub_23AE3AAD8;
  *(_QWORD *)(v29 + 1168) = 0;
  *(_DWORD *)(v29 + 1176) = 393217;
  *(_DWORD *)(v29 + 1184) = 393217;
  *(_QWORD *)(v29 + 1192) = sub_23AE3AB20;
  *(_QWORD *)(v29 + 1200) = 0;
  *(_DWORD *)(v29 + 1208) = 393218;
  *(_DWORD *)(v29 + 1216) = 393218;
  *(_QWORD *)(v29 + 1224) = sub_23AE3AB68;
  *(_QWORD *)(v29 + 1232) = 0;
  *(_DWORD *)(v29 + 1240) = 393219;
  *(_DWORD *)(v29 + 1248) = 393219;
  *(_QWORD *)(v29 + 1256) = sub_23AE3ABB0;
  *(_QWORD *)(v29 + 1264) = 0;
  *(_DWORD *)(v29 + 1272) = 393220;
  *(_DWORD *)(v29 + 1280) = 393220;
  *(_QWORD *)(v29 + 1288) = sub_23AE3ABF8;
  *(_QWORD *)(v29 + 1296) = 0;
  *(_DWORD *)(v29 + 1304) = 393221;
  *(_DWORD *)(v29 + 1312) = 393221;
  *(_QWORD *)(v29 + 1320) = sub_23AE3AC40;
  *(_QWORD *)(v29 + 1328) = 0;
  *(_DWORD *)(v29 + 1336) = 458752;
  *(_DWORD *)(v29 + 1344) = 458752;
  *(_QWORD *)(v29 + 1352) = sub_23AE3AC88;
  *(_QWORD *)(v29 + 1360) = 0;
  *(_DWORD *)(v29 + 1368) = 458753;
  *(_DWORD *)(v29 + 1376) = 458753;
  *(_QWORD *)(v29 + 1384) = sub_23AE3ACD0;
  *(_QWORD *)(v29 + 1392) = 0;
  *(_DWORD *)(v29 + 1400) = 458754;
  *(_DWORD *)(v29 + 1408) = 458754;
  *(_QWORD *)(v29 + 1416) = sub_23AE3AD18;
  *(_QWORD *)(v29 + 1424) = 0;
  *(_DWORD *)(v29 + 1432) = 458755;
  *(_DWORD *)(v29 + 1440) = 458755;
  *(_QWORD *)(v29 + 1448) = sub_23AE3AD60;
  *(_QWORD *)(v29 + 1456) = 0;
  *(_DWORD *)(v29 + 1464) = 458756;
  *(_DWORD *)(v29 + 1472) = 458756;
  *(_QWORD *)(v29 + 1480) = sub_23AE3ADA8;
  *(_QWORD *)(v29 + 1488) = 0;
  *(_DWORD *)(v29 + 1496) = 0x80000;
  *(_DWORD *)(v29 + 1504) = 0x80000;
  *(_QWORD *)(v29 + 1512) = sub_23AE3ADF0;
  *(_QWORD *)(v29 + 1520) = 0;
  *(_DWORD *)(v29 + 1528) = 524289;
  *(_DWORD *)(v29 + 1536) = 524289;
  *(_QWORD *)(v29 + 1544) = sub_23AE3AE38;
  *(_QWORD *)(v29 + 1552) = 0;
  *(_DWORD *)(v29 + 1560) = 524290;
  *(_DWORD *)(v29 + 1568) = 524290;
  *(_QWORD *)(v29 + 1576) = sub_23AE3AE80;
  *(_QWORD *)(v29 + 1584) = 0;
  *(_DWORD *)(v29 + 1592) = 524291;
  *(_DWORD *)(v29 + 1600) = 524291;
  *(_QWORD *)(v29 + 1608) = sub_23AE3AEC8;
  *(_QWORD *)(v29 + 1616) = 0;
  *(_DWORD *)(v29 + 1624) = 590079;
  *(_DWORD *)(v29 + 1632) = 590079;
  *(_QWORD *)(v29 + 1640) = sub_23AE3AF10;
  *(_QWORD *)(v29 + 1648) = 0;
  *(_DWORD *)(v29 + 1656) = 590080;
  *(_DWORD *)(v29 + 1664) = 590080;
  *(_QWORD *)(v29 + 1672) = sub_23AE3AF58;
  *(_QWORD *)(v29 + 1680) = 0;
  *(_DWORD *)(v29 + 1688) = 590081;
  *(_DWORD *)(v29 + 1696) = 590081;
  *(_QWORD *)(v29 + 1704) = sub_23AE3AFA0;
  *(_QWORD *)(v29 + 1712) = 0;
  *(_DWORD *)(v29 + 1720) = 590082;
  *(_DWORD *)(v29 + 1728) = 590082;
  *(_QWORD *)(v29 + 1736) = sub_23AE3AFE8;
  *(_QWORD *)(v29 + 1744) = 0;
  *(_DWORD *)(v29 + 1752) = 590084;
  *(_DWORD *)(v29 + 1760) = 590084;
  *(_QWORD *)(v29 + 1768) = sub_23AE3B030;
  *(_QWORD *)(v29 + 1776) = 0;
  *(_DWORD *)(v29 + 1784) = 590085;
  *(_DWORD *)(v29 + 1792) = 590085;
  *(_QWORD *)(v29 + 1800) = sub_23AE3B078;
  *(_QWORD *)(v29 + 1808) = 0;
  *(_DWORD *)(v29 + 1816) = 590086;
  *(_DWORD *)(v29 + 1824) = 590086;
  *(_QWORD *)(v29 + 1832) = sub_23AE3B0C0;
  *(_QWORD *)(v29 + 1840) = 0;
  *(_DWORD *)(v29 + 1848) = 590087;
  v30 = sub_23AAF8194(v29);
  swift_setDeallocating();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4CC0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v218 = v28;
  *(_QWORD *)(a8 + v28) = v30;
  v31 = qword_2542EDE68;
  v223 = (id)objc_opt_self();
  v32 = objc_msgSend(v223, sel_defaultStore);
  LODWORD(v21) = objc_msgSend(v32, sel_sqlDatabaseVacuumBatchSize);

  *(_QWORD *)(a8 + v31) = (int)v21;
  *(_BYTE *)(a8 + qword_2542EDE70) = 0;
  *(_BYTE *)(a8 + qword_2542EDE78) = 0;
  *(_BYTE *)(a8 + qword_2542EDE80) = 0;
  v33 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v227 = *(void (**)(_QWORD))(v12 + 16);
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v227)(v16, v231, v233);
  swift_retain();
  v221 = v20;
  v34 = sub_23B1C5E40();
  v35 = sub_23B1C6AB8();
  v36 = v35;
  v37 = os_log_type_enabled(v34, v35);
  v229 = a3;
  v220 = v12;
  if (v37)
  {
    v38 = swift_slowAlloc();
    v203 = v36;
    v39 = v38;
    v204 = (void *)swift_slowAlloc();
    aBlock = v204;
    *(_DWORD *)v39 = 136446466;
    v40 = *(_QWORD *)(a3 + 136);
    v41 = *(_QWORD *)(v40 + 16);
    v42 = *(_QWORD *)(v40 + 24);
    swift_bridgeObjectRetain();
    v235 = sub_23AABEC68(v41, v42, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2082;
    v228 = (void (*)(uint64_t, uint64_t))(v39 + 14);
    v43 = (void *)sub_23B1C5954();
    v44 = objc_msgSend(v43, sel_fp_shortDescription);
    v45 = v233;
    v46 = v44;

    v47 = sub_23B1C63E0();
    v49 = v48;

    v235 = sub_23AABEC68(v47, v49, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v228 = *(void (**)(uint64_t, uint64_t))(v220 + 8);
    v228((uint64_t)v16, v45);
    _os_log_impl(&dword_23AA66000, v34, (os_log_type_t)v203, "opening database %{public}s at %{public}s", (uint8_t *)v39, 0x16u);
    v50 = v204;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v50, -1, -1);
    MEMORY[0x23B8614BC](v39, -1, -1);
  }
  else
  {
    swift_release();
    v228 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v228((uint64_t)v16, v233);
  }

  (*(void (**)(_BYTE *, uint64_t))(v224 + 8))(v221, v225);
  v51 = objc_msgSend(v223, sel_defaultStore);
  v52 = objc_msgSend(v51, sel_sqlDatabaseStatementCacheMaxCount);

  v53 = (void *)v52;
  v54 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PQLConnectionWithStatistics()), sel_init);
  v55 = qword_2542EE110;
  *(_QWORD *)(a8 + qword_2542EE110) = v54;
  v56 = v230;
  objc_msgSend(v54, sel_setTraced_, (v230 >> 33) & 1);
  v57 = v54;
  swift_bridgeObjectRetain();
  v58 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v57, sel_setLabel_, v58);

  v59 = *(void **)(a8 + v55);
  objc_msgSend(v59, sel_setStatementCacheMaxCount_, v53);
  v60 = a8 + qword_2542EDEC0;
  v61 = v231;
  v227(a8 + qword_2542EDEC0);
  v62 = (id (**)(uint64_t, void *))(a8 + qword_2542EDED8);
  *v62 = sub_23ADC00BC;
  v62[1] = 0;
  *(_BYTE *)(a8 + qword_2542E69E0) = (v56 & 4) != 0;
  if ((v56 & 1) != 0)
    v63 = 1;
  else
    v63 = 6;
  v64 = v63 | (v56 >> 16) & 0x10000;
  v65 = v61;
  v66 = (void *)sub_23B1C5954();
  aBlock = 0;
  LODWORD(v64) = objc_msgSend(v59, sel_openAtURL_withFlags_error_, v66, v64, &aBlock);

  v67 = aBlock;
  if (!(_DWORD)v64)
  {
    v221 = (_BYTE *)v60;
    v86 = aBlock;
    swift_bridgeObjectRelease();
    swift_release();
    v87 = (id)sub_23B1C587C();

LABEL_19:
    v88 = v233;
    v89 = v228;
    swift_willThrow();
    sub_23AB23A94();
    v90 = (void *)swift_allocError();
    *(_QWORD *)v91 = v87;
    *(_BYTE *)(v91 + 48) = 1;
    v92 = v87;
    swift_willThrow();
    v93 = v90;
    swift_release();
    swift_release();

    sub_23AA8A05C(v226, &qword_2542E4E70);
    v89((uint64_t)v65, v88);

    v94 = *(void **)(a8 + v55);
LABEL_20:

    sub_23AA8A05C(v215, (uint64_t *)&unk_2542E4320);
    v89((uint64_t)v221, v88);
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    sub_23AAB7948(*v214);
    sub_23AAB7948(*v212);
    sub_23AAB7948(*v216);
    sub_23AAB7948(*v219);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69F0);
    swift_deallocPartialClassInstance();
    return a8;
  }
  v204 = v53;
  *(_BYTE *)(a8 + v209) = 0;
  v68 = v67;
  v69 = sub_23B1C58C4();
  *(_BYTE *)(a8 + qword_2542E69C0) = (v69 & 1) == 0;
  if ((v69 & 1) == 0)
    objc_msgSend(*(id *)(a8 + v55), sel_setShouldUseWALJournalMode_, 0);
  v70 = &unk_2542ED000;
  v71 = v228;
  if ((v230 & 1) != 0)
  {
    v95 = v207;
    v96 = v233;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v227)(v207, v65, v233);
    v71((uint64_t)v95, v96);
    goto LABEL_22;
  }
  v221 = (_BYTE *)v60;
  if ((objc_msgSend(*(id *)(a8 + v55), sel_setupPragmas) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v164 = objc_msgSend(*(id *)(a8 + v55), sel_lastError);
    if (v164)
    {
      v87 = v164;
      swift_release();
    }
    else
    {
      type metadata accessor for PQLSqliteError(0);
      v235 = 11;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
      sub_23B1C5864();
      swift_release();
      v87 = aBlock;
    }
    goto LABEL_19;
  }
  v72 = v207;
  v73 = v233;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v227)(v207, v65, v233);
  v74 = sub_23B1C58C4();
  v75 = v73;
  v70 = &unk_2542ED000;
  v228((uint64_t)v72, v75);
  if ((v74 & 1) == 0)
  {
LABEL_22:
    *(_QWORD *)(a8 + qword_2542EDEC8) = 0;
    goto LABEL_23;
  }
  v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEDD630]), sel_init);
  v77 = v76;
  v78 = qword_2542EDEC8;
  *(_QWORD *)(a8 + qword_2542EDEC8) = v76;
  if (v76)
  {
    v79 = v232[17];
    v80 = *(_QWORD *)(v79 + 24);
    aBlock = *(id *)(v79 + 16);
    v237 = v80;
    v81 = v76;
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    v82 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    objc_msgSend(v81, sel_setLabel_, v82);

    v70 = (_QWORD *)&unk_2542ED000;
    v77 = *(void **)(a8 + v78);
  }
  objc_msgSend(v77, sel_setStatementCacheMaxCount_, v204);
  if (!v77)
    goto LABEL_23;
  v83 = (void *)sub_23B1C5954();
  aBlock = 0;
  v84 = objc_msgSend(v77, sel_openAtURL_withFlags_error_, v83, 65537, &aBlock);

  if (!v84)
  {
    v181 = aBlock;
    swift_bridgeObjectRelease();
    swift_release();
    v182 = (void *)sub_23B1C587C();

    swift_willThrow();
    sub_23AB23A94();
    v183 = (void *)swift_allocError();
    *(_QWORD *)v184 = v182;
    *(_BYTE *)(v184 + 48) = 1;
    v185 = v182;
    swift_willThrow();
    v186 = v183;
    swift_release();
    swift_release();

    sub_23AA8A05C(v226, &qword_2542E4E70);
    v88 = v233;
    v89 = v228;
    v228((uint64_t)v65, v233);

    v94 = *(void **)(a8 + qword_2542EDEC8);
    goto LABEL_20;
  }
  v85 = aBlock;
  v70 = (_QWORD *)&unk_2542ED000;
LABEL_23:
  v97 = *(void **)(a8 + v55);
  v98 = *(void **)(a8 + v70[473]);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E45D8);
  swift_allocObject();
  v99 = v98;
  v100 = v97;
  v101 = v232;
  swift_retain();
  v228 = (void (*)(uint64_t, uint64_t))sub_23AEAAE9C(v100, v98, 0, (uint64_t)v101);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6A00);
  swift_allocObject();
  v102 = v229;
  swift_retain();
  v103 = v100;
  v104 = v99;
  v105 = sub_23AEAB130(v103, v98, 1, v102);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4C10);
  v106 = swift_allocObject();
  v221 = (_BYTE *)(v106 + 24);
  v107 = swift_weakInit();
  *(_QWORD *)(v106 + 16) = v103;
  v108 = (*(_QWORD *(**)(id *__return_ptr, uint64_t))(*v101 + 96))(&aBlock, v107);
  (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*(_QWORD *)v102 + 96))(&v235, v108);
  v109 = (uint64_t)aBlock;
  v110 = (id)v235;
  LOBYTE(v98) = v237;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
  v111 = swift_allocObject();
  v112 = v103;
  v113 = sub_23AEAB398(v112, v109, (char)v98, v110, v111);

  swift_release();
  v114 = v101[17];
  v115 = *(_QWORD *)(v114 + 16);
  v116 = *(_QWORD *)(v114 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  swift_allocObject();
  v117 = v112;
  swift_bridgeObjectRetain();
  v118 = v116;
  v119 = v230;
  v120 = sub_23AE567A4(v117, v115, v118, v230);
  type metadata accessor for SQLHistoryTable();
  v121 = swift_allocObject();
  *(_BYTE *)(v121 + 37) = 0;
  *(_WORD *)(v121 + 38) = -5120;
  *(_QWORD *)(v121 + 40) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v121 + 16) = v117;
  strcpy((char *)(v121 + 24), "D2DRestoreV2");
  *(_QWORD *)(a8 + qword_2542EDE60) = v121;
  v122 = v117;
  swift_release();
  v123 = v206;
  sub_23AA8EFC8(v226, (uint64_t)v206, &qword_2542E4E70);
  swift_retain();
  swift_retain();
  v124 = (uint64_t)v228;
  swift_retain();
  swift_retain();
  swift_retain();
  a8 = sub_23AEAB860(v113, (uint64_t)v120, v124, v105, v106, (uint64_t)v123, v119, a8);
  swift_release();
  v227 = (void (*)(_QWORD))v120;
  swift_release();
  swift_release();
  v219 = (uint64_t *)v105;
  swift_release();
  v218 = v106;
  swift_release();
  v125 = swift_allocObject();
  swift_weakInit();
  v126 = *(_QWORD *)(v113 + 112);
  *(_QWORD *)(v113 + 112) = sub_23AEAD448;
  *(_QWORD *)(v113 + 120) = v125;
  v217 = v125;
  swift_retain();
  swift_retain();
  sub_23AAB7948(v126);
  v127 = qword_2542EE110;
  v128 = *(void **)(a8 + qword_2542EE110);
  v129 = swift_allocObject();
  swift_weakInit();
  v240 = sub_23AEAD450;
  v241 = v129;
  v130 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v237 = 1107296256;
  v238 = sub_23AC46D44;
  v239 = &block_descriptor_983;
  v131 = _Block_copy(&aBlock);
  v132 = v128;
  swift_release();
  objc_msgSend(v132, sel_setAutoRollbackHandlerForSwift_, v131);
  _Block_release(v131);

  v133 = *(void **)(a8 + qword_2542EDEC8);
  if (v133)
  {
    v134 = swift_allocObject();
    swift_weakInit();
    v240 = sub_23AEAD450;
    v241 = v134;
    aBlock = v130;
    v237 = 1107296256;
    v238 = sub_23AC46D44;
    v239 = &block_descriptor_988;
    v135 = _Block_copy(&aBlock);
    v136 = v133;
    swift_release();
    objc_msgSend(v136, sel_setAutoRollbackHandlerForSwift_, v135);
    _Block_release(v135);

  }
  swift_weakAssign();
  swift_weakAssign();
  if ((v230 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v163 = v233;
    v153 = v231;
  }
  else
  {
    v137 = v130;
    v138 = objc_msgSend(v223, sel_defaultStore);
    v139 = *(void **)(a8 + v127);
    v140 = *(id *)(a8 + 64);
    v141 = v139;
    objc_msgSend(v138, sel_sqlDatabaseBatchDelay);
    objc_msgSend(v141, sel_useBatchingOnTargetQueue_delay_changeCount_, v140, objc_msgSend(v138, sel_sqlDatabaseBatchChangeCount), v142);

    v143 = *(void **)(a8 + v127);
    v144 = swift_allocObject();
    *(_QWORD *)(v144 + 16) = v143;
    v240 = (uint64_t (*)(void *))sub_23AEB5510;
    v241 = v144;
    aBlock = v137;
    v237 = 1107296256;
    v238 = sub_23AE2CAF4;
    v239 = &block_descriptor_995;
    v145 = _Block_copy(&aBlock);
    v146 = v143;
    swift_release();
    objc_msgSend(v146, sel_setProfilingHookV2_, v145);
    _Block_release(v145);

    MEMORY[0x24BDAC7A8](v147);
    v148 = v205;
    *(_QWORD *)&v202[-48] = a8;
    *(_QWORD *)&v202[-40] = v148;
    v149 = v232;
    *(_QWORD *)&v202[-32] = v222;
    *(_QWORD *)&v202[-24] = v149;
    *(_QWORD *)&v202[-16] = v229;
    v151 = v150;
    v152 = v210;
    sub_23AC494B4(0, 0, (uint64_t)"init(url:fsTree:fpTree:telemetry:options:creationReason:onError:)", 65, 2, (uint64_t)sub_23AEAD470, (uint64_t)&v202[-64]);
    v153 = v231;
    if (v152)
    {
      v230 = (unint64_t)v138;

      swift_bridgeObjectRelease();
      v234 = v152;
      v154 = v152;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      if (swift_dynamicCast())
      {

        sub_23AEAD484((uint64_t)&aBlock, (uint64_t)&v235);
        v155 = *(void **)(a8 + 64);
        swift_retain();
        v156 = v155;
        sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, a8);

        v157 = v156;
        sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
        swift_release();

        v158 = *(void (**)(uint64_t, void *))(a8 + qword_2542EDED8);
        sub_23AB23A94();
        v159 = (void *)swift_allocError();
        sub_23AEAD4C0(&v235, v160);
        v161 = swift_retain();
        v158(v161, v159);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_23AA8A05C(v226, &qword_2542E4E70);
        (*(void (**)(_BYTE *, uint64_t))(v220 + 8))(v153, v233);
        sub_23AC04DA4((uint64_t)&v235);
        swift_release();

        v162 = v234;
LABEL_44:

        swift_release();
        return a8;
      }

      aBlock = v152;
      v210 = v152;
      v171 = v152;
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
      v172 = swift_dynamicCast();
      v173 = v233;
      if ((v172 & 1) != 0)
      {
        v174 = (id)v235;
        v175 = objc_msgSend((id)v235, sel_domain);
        v176 = sub_23B1C63E0();
        v178 = v177;

        if (v176 == sub_23B1C63E0() && v178 == v179)
        {
          swift_bridgeObjectRelease_n();
          v180 = (id)v230;
LABEL_43:

          v188 = *(void **)(a8 + 64);
          swift_retain();
          v189 = v188;
          sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, a8);

          v190 = v189;
          sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
          swift_release();

          v191 = *(void (**)(uint64_t, id))(a8 + qword_2542EDED8);
          swift_retain();
          v192 = v174;
          v191(a8, v192);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          sub_23AA8A05C(v226, &qword_2542E4E70);
          (*(void (**)(_BYTE *, uint64_t))(v220 + 8))(v231, v173);
          swift_release();
          v162 = aBlock;
          goto LABEL_44;
        }
        v187 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v180 = (id)v230;
        if ((v187 & 1) != 0)
          goto LABEL_43;

      }
      v193 = *(void **)(a8 + 64);
      swift_retain();
      v194 = v193;
      sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, a8);

      v195 = v194;
      sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
      swift_release();

      v196 = *(void (**)(uint64_t, void *))(a8 + qword_2542EDED8);
      sub_23AB23A94();
      v197 = (void *)swift_allocError();
      v198 = v210;
      *(_QWORD *)v199 = v210;
      *(_BYTE *)(v199 + 48) = 2;
      swift_retain();
      v200 = v198;
      v196(a8, v197);
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_23AA8A05C(v226, &qword_2542E4E70);
      (*(void (**)(_BYTE *, uint64_t))(v220 + 8))(v231, v173);
      swift_release();

      swift_release();
      return a8;
    }
    v210 = 0;

    swift_bridgeObjectRelease();
    v163 = v233;
  }
  v165 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v166 = sub_23B1C5E40();
  v167 = sub_23B1C6AB8();
  v168 = os_log_type_enabled(v166, v167);
  v169 = v225;
  if (v168)
  {
    v170 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v170 = 0;
    _os_log_impl(&dword_23AA66000, v166, v167, "database is ready", v170, 2u);
    MEMORY[0x23B8614BC](v170, -1, -1);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_23AA8A05C(v226, &qword_2542E4E70);
  (*(void (**)(_BYTE *, uint64_t))(v220 + 8))(v153, v163);
  (*(void (**)(_BYTE *, uint64_t))(v224 + 8))(v208, v169);
  swift_release();
  return a8;
}

uint64_t sub_23AE3280C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  char *v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  void *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  signed int v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  void *v62;
  void *v63;
  void (**v64)();
  int v65;
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  char v70;
  char *v71;
  uint64_t v72;
  char v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  void *v81;
  unsigned int v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  id v93;
  _QWORD *v94;
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void *v123;
  void *v124;
  id v125;
  void *v126;
  uint64_t v127;
  void *v128;
  id v129;
  id v130;
  uint64_t v131;
  void *v132;
  id v133;
  id v134;
  double v135;
  void *v136;
  uint64_t v137;
  void *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  id v143;
  id v144;
  void *v145;
  void *v146;
  uint64_t v147;
  id v148;
  void *v149;
  id v150;
  id v151;
  void (*v152)(uint64_t, void *);
  void *v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  id v158;
  id v159;
  NSObject *v160;
  os_log_type_t v161;
  uint8_t *v162;
  uint8_t *v163;
  id v164;
  char v165;
  uint64_t v166;
  id v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  void *v174;
  id v175;
  id v176;
  void (*v177)(uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  id v180;
  id v181;
  void *v182;
  uint64_t v183;
  id v184;
  char v185;
  void *v186;
  id v187;
  id v188;
  void (*v189)(uint64_t, id);
  id v190;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  void *v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  void (*v212)(char *, uint64_t);
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(char *, uint64_t, uint64_t);
  unint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  id aBlock;
  uint64_t v226;
  void *v227;
  void *v228;
  uint64_t (*v229)(void *);
  uint64_t v230;
  uint64_t v231;

  v211 = a7;
  v194 = a6;
  v219 = a5;
  v217 = a4;
  v220 = a2;
  v222 = a1;
  v231 = *MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v10);
  v195 = (uint64_t)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_23B1C5A08();
  v12 = *(_QWORD *)(v221 - 8);
  v13 = MEMORY[0x24BDAC7A8](v221);
  v196 = (char *)&v192 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v192 - v15;
  v214 = sub_23B1C5E4C();
  v215 = *(_QWORD *)(v214 - 8);
  v17 = MEMORY[0x24BDAC7A8](v214);
  v197 = (char *)&v192 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v192 - v19;
  v198 = qword_2542EDE58;
  *(_BYTE *)(a8 + qword_2542EDE58) = 1;
  *(_BYTE *)(a8 + qword_2542EDEE0) = 0;
  v21 = a8 + qword_2542EDED0;
  v22 = sub_23B1C5C54();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v204 = v21;
  v23(v21, 1, 1, v22);
  v200 = qword_2542E69D0;
  *(_QWORD *)(a8 + qword_2542E69D0) = MEMORY[0x24BEE4AF8];
  v202 = qword_2542E69B8;
  *(_QWORD *)(a8 + qword_2542E69B8) = 0;
  v206 = qword_2542E69D8;
  *(_QWORD *)(a8 + qword_2542E69D8) = 0;
  *(_BYTE *)(a8 + qword_2542EDE90) = 0;
  v24 = (_QWORD *)(a8 + qword_2542EDEB0);
  *v24 = 0;
  v24[1] = 0;
  v203 = v24;
  *(_BYTE *)(a8 + qword_2542EDEA8) = 0;
  v25 = (_QWORD *)(a8 + qword_2542EDEB8);
  *v25 = 0;
  v25[1] = 0;
  v201 = v25;
  v26 = (_QWORD *)(a8 + qword_2542EDEA0);
  *v26 = 0;
  v26[1] = 0;
  v205 = v26;
  v27 = (_QWORD *)(a8 + qword_2542EDE88);
  *v27 = 0;
  v27[1] = 0;
  v208 = v27;
  *(_BYTE *)(a8 + qword_2542EDE98) = 0;
  v28 = qword_2542E7738;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55B8);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_23B1DA940;
  *(_DWORD *)(v29 + 32) = 0;
  *(_QWORD *)(v29 + 40) = sub_23AE3A100;
  *(_QWORD *)(v29 + 48) = 0;
  *(_DWORD *)(v29 + 56) = 0x10000;
  *(_DWORD *)(v29 + 64) = 0x10000;
  *(_QWORD *)(v29 + 72) = sub_23AE3A148;
  *(_QWORD *)(v29 + 80) = 0;
  *(_DWORD *)(v29 + 88) = 65537;
  *(_DWORD *)(v29 + 96) = 65537;
  *(_QWORD *)(v29 + 104) = sub_23AE3A190;
  *(_QWORD *)(v29 + 112) = 0;
  *(_DWORD *)(v29 + 120) = 0x20000;
  *(_DWORD *)(v29 + 128) = 0x20000;
  *(_QWORD *)(v29 + 136) = sub_23AE3A1D8;
  *(_QWORD *)(v29 + 144) = 0;
  *(_DWORD *)(v29 + 152) = 131073;
  *(_DWORD *)(v29 + 160) = 131073;
  *(_QWORD *)(v29 + 168) = sub_23AE3A220;
  *(_QWORD *)(v29 + 176) = 0;
  *(_DWORD *)(v29 + 184) = 131074;
  *(_DWORD *)(v29 + 192) = 131074;
  *(_QWORD *)(v29 + 200) = sub_23AE3A268;
  *(_QWORD *)(v29 + 208) = 0;
  *(_DWORD *)(v29 + 216) = 131075;
  *(_DWORD *)(v29 + 224) = 131075;
  *(_QWORD *)(v29 + 232) = sub_23AE3A2B0;
  *(_QWORD *)(v29 + 240) = 0;
  *(_DWORD *)(v29 + 248) = 131076;
  *(_DWORD *)(v29 + 256) = 131076;
  *(_QWORD *)(v29 + 264) = sub_23AE3A2F8;
  *(_QWORD *)(v29 + 272) = 0;
  *(_DWORD *)(v29 + 280) = 131077;
  *(_DWORD *)(v29 + 288) = 131077;
  *(_QWORD *)(v29 + 296) = sub_23AE3A340;
  *(_QWORD *)(v29 + 304) = 0;
  *(_DWORD *)(v29 + 312) = 131078;
  *(_DWORD *)(v29 + 320) = 131078;
  *(_QWORD *)(v29 + 328) = sub_23AE3A388;
  *(_QWORD *)(v29 + 336) = 0;
  *(_DWORD *)(v29 + 344) = 131079;
  *(_DWORD *)(v29 + 352) = 131079;
  *(_QWORD *)(v29 + 360) = sub_23AE3A3D0;
  *(_QWORD *)(v29 + 368) = 0;
  *(_DWORD *)(v29 + 376) = 131080;
  *(_DWORD *)(v29 + 384) = 131080;
  *(_QWORD *)(v29 + 392) = sub_23AE3A418;
  *(_QWORD *)(v29 + 400) = 0;
  *(_DWORD *)(v29 + 408) = 131081;
  *(_DWORD *)(v29 + 416) = 131081;
  *(_QWORD *)(v29 + 424) = sub_23AE3A460;
  *(_QWORD *)(v29 + 432) = 0;
  *(_DWORD *)(v29 + 440) = 196608;
  *(_DWORD *)(v29 + 448) = 196608;
  *(_QWORD *)(v29 + 456) = sub_23AE3A4A8;
  *(_QWORD *)(v29 + 464) = 0;
  *(_DWORD *)(v29 + 472) = 196609;
  *(_DWORD *)(v29 + 480) = 196609;
  *(_QWORD *)(v29 + 488) = sub_23AE3A4F0;
  *(_QWORD *)(v29 + 496) = 0;
  *(_DWORD *)(v29 + 504) = 196610;
  *(_DWORD *)(v29 + 512) = 196610;
  *(_QWORD *)(v29 + 520) = sub_23AE3A538;
  *(_QWORD *)(v29 + 528) = 0;
  *(_DWORD *)(v29 + 536) = 196611;
  *(_DWORD *)(v29 + 544) = 196611;
  *(_QWORD *)(v29 + 552) = sub_23AE3A580;
  *(_QWORD *)(v29 + 560) = 0;
  *(_DWORD *)(v29 + 568) = 196612;
  *(_DWORD *)(v29 + 576) = 196612;
  *(_QWORD *)(v29 + 584) = sub_23AE3A5C8;
  *(_QWORD *)(v29 + 592) = 0;
  *(_DWORD *)(v29 + 600) = 196613;
  *(_DWORD *)(v29 + 608) = 196613;
  *(_QWORD *)(v29 + 616) = sub_23AE3A610;
  *(_QWORD *)(v29 + 624) = 0;
  *(_DWORD *)(v29 + 632) = 196614;
  *(_DWORD *)(v29 + 640) = 196614;
  *(_QWORD *)(v29 + 648) = sub_23AE3A658;
  *(_DWORD *)(v29 + 664) = 196615;
  *(_DWORD *)(v29 + 672) = 196615;
  *(_QWORD *)(v29 + 656) = 0;
  *(_QWORD *)(v29 + 680) = sub_23AE3A6A0;
  *(_QWORD *)(v29 + 688) = 0;
  *(_DWORD *)(v29 + 696) = 0x40000;
  *(_DWORD *)(v29 + 704) = 0x40000;
  *(_QWORD *)(v29 + 712) = sub_23AE3A6E8;
  *(_QWORD *)(v29 + 720) = 0;
  *(_DWORD *)(v29 + 728) = 262145;
  *(_DWORD *)(v29 + 736) = 262145;
  *(_QWORD *)(v29 + 744) = sub_23AE3A730;
  *(_QWORD *)(v29 + 752) = 0;
  *(_DWORD *)(v29 + 760) = 327680;
  *(_DWORD *)(v29 + 768) = 327680;
  *(_QWORD *)(v29 + 776) = sub_23AE3A778;
  *(_QWORD *)(v29 + 784) = 0;
  *(_DWORD *)(v29 + 792) = 327681;
  *(_DWORD *)(v29 + 800) = 327681;
  *(_QWORD *)(v29 + 808) = sub_23AE3A7C0;
  *(_QWORD *)(v29 + 816) = 0;
  *(_DWORD *)(v29 + 824) = 327682;
  *(_DWORD *)(v29 + 832) = 327682;
  *(_QWORD *)(v29 + 840) = sub_23AE3A808;
  *(_DWORD *)(v29 + 856) = 327683;
  *(_DWORD *)(v29 + 864) = 327683;
  *(_QWORD *)(v29 + 848) = 0;
  *(_QWORD *)(v29 + 872) = sub_23AE3A850;
  *(_QWORD *)(v29 + 880) = 0;
  *(_DWORD *)(v29 + 888) = 327684;
  *(_DWORD *)(v29 + 896) = 327684;
  *(_QWORD *)(v29 + 904) = sub_23AE3A898;
  *(_QWORD *)(v29 + 912) = 0;
  *(_DWORD *)(v29 + 920) = 327685;
  *(_DWORD *)(v29 + 928) = 327685;
  *(_QWORD *)(v29 + 936) = sub_23AE3A8E0;
  *(_QWORD *)(v29 + 944) = 0;
  *(_DWORD *)(v29 + 952) = 327686;
  *(_DWORD *)(v29 + 960) = 327686;
  *(_QWORD *)(v29 + 968) = sub_23AE3A928;
  *(_QWORD *)(v29 + 976) = 0;
  *(_DWORD *)(v29 + 984) = 327687;
  *(_DWORD *)(v29 + 992) = 327687;
  *(_QWORD *)(v29 + 1000) = sub_23AE3A970;
  *(_QWORD *)(v29 + 1008) = 0;
  *(_DWORD *)(v29 + 1016) = 327688;
  *(_DWORD *)(v29 + 1024) = 327688;
  *(_QWORD *)(v29 + 1032) = sub_23AE3A9B8;
  *(_QWORD *)(v29 + 1040) = 0;
  *(_DWORD *)(v29 + 1048) = 327689;
  *(_DWORD *)(v29 + 1056) = 327689;
  *(_QWORD *)(v29 + 1064) = sub_23AE3AA00;
  *(_QWORD *)(v29 + 1072) = 0;
  *(_DWORD *)(v29 + 1080) = 327690;
  *(_DWORD *)(v29 + 1088) = 327690;
  *(_QWORD *)(v29 + 1096) = sub_23AE3AA48;
  *(_QWORD *)(v29 + 1104) = 0;
  *(_DWORD *)(v29 + 1112) = 327691;
  *(_DWORD *)(v29 + 1120) = 327691;
  *(_QWORD *)(v29 + 1128) = sub_23AE3AA90;
  *(_QWORD *)(v29 + 1136) = 0;
  *(_DWORD *)(v29 + 1144) = 393216;
  *(_DWORD *)(v29 + 1152) = 393216;
  *(_QWORD *)(v29 + 1160) = sub_23AE3AAD8;
  *(_QWORD *)(v29 + 1168) = 0;
  *(_DWORD *)(v29 + 1176) = 393217;
  *(_DWORD *)(v29 + 1184) = 393217;
  *(_QWORD *)(v29 + 1192) = sub_23AE3AB20;
  *(_QWORD *)(v29 + 1200) = 0;
  *(_DWORD *)(v29 + 1208) = 393218;
  *(_DWORD *)(v29 + 1216) = 393218;
  *(_QWORD *)(v29 + 1224) = sub_23AE3AB68;
  *(_QWORD *)(v29 + 1232) = 0;
  *(_DWORD *)(v29 + 1240) = 393219;
  *(_DWORD *)(v29 + 1248) = 393219;
  *(_QWORD *)(v29 + 1256) = sub_23AE3ABB0;
  *(_QWORD *)(v29 + 1264) = 0;
  *(_DWORD *)(v29 + 1272) = 393220;
  *(_DWORD *)(v29 + 1280) = 393220;
  *(_QWORD *)(v29 + 1288) = sub_23AE3ABF8;
  *(_QWORD *)(v29 + 1296) = 0;
  *(_DWORD *)(v29 + 1304) = 393221;
  *(_DWORD *)(v29 + 1312) = 393221;
  *(_QWORD *)(v29 + 1320) = sub_23AE3AC40;
  *(_QWORD *)(v29 + 1328) = 0;
  *(_DWORD *)(v29 + 1336) = 458752;
  *(_DWORD *)(v29 + 1344) = 458752;
  *(_QWORD *)(v29 + 1352) = sub_23AE3AC88;
  *(_QWORD *)(v29 + 1360) = 0;
  *(_DWORD *)(v29 + 1368) = 458753;
  *(_DWORD *)(v29 + 1376) = 458753;
  *(_QWORD *)(v29 + 1384) = sub_23AE3ACD0;
  *(_QWORD *)(v29 + 1392) = 0;
  *(_DWORD *)(v29 + 1400) = 458754;
  *(_DWORD *)(v29 + 1408) = 458754;
  *(_QWORD *)(v29 + 1416) = sub_23AE3AD18;
  *(_QWORD *)(v29 + 1424) = 0;
  *(_DWORD *)(v29 + 1432) = 458755;
  *(_DWORD *)(v29 + 1440) = 458755;
  *(_QWORD *)(v29 + 1448) = sub_23AE3AD60;
  *(_QWORD *)(v29 + 1456) = 0;
  *(_DWORD *)(v29 + 1464) = 458756;
  *(_DWORD *)(v29 + 1472) = 458756;
  *(_QWORD *)(v29 + 1480) = sub_23AE3ADA8;
  *(_QWORD *)(v29 + 1488) = 0;
  *(_DWORD *)(v29 + 1496) = 0x80000;
  *(_DWORD *)(v29 + 1504) = 0x80000;
  *(_QWORD *)(v29 + 1512) = sub_23AE3ADF0;
  *(_QWORD *)(v29 + 1520) = 0;
  *(_DWORD *)(v29 + 1528) = 524289;
  *(_DWORD *)(v29 + 1536) = 524289;
  *(_QWORD *)(v29 + 1544) = sub_23AE3AE38;
  *(_QWORD *)(v29 + 1552) = 0;
  *(_DWORD *)(v29 + 1560) = 524290;
  *(_DWORD *)(v29 + 1568) = 524290;
  *(_QWORD *)(v29 + 1576) = sub_23AE3AE80;
  *(_QWORD *)(v29 + 1584) = 0;
  *(_DWORD *)(v29 + 1592) = 524291;
  *(_DWORD *)(v29 + 1600) = 524291;
  *(_QWORD *)(v29 + 1608) = sub_23AE3AEC8;
  *(_QWORD *)(v29 + 1616) = 0;
  *(_DWORD *)(v29 + 1624) = 590079;
  *(_DWORD *)(v29 + 1632) = 590079;
  *(_QWORD *)(v29 + 1640) = sub_23AE3AF10;
  *(_QWORD *)(v29 + 1648) = 0;
  *(_DWORD *)(v29 + 1656) = 590080;
  *(_DWORD *)(v29 + 1664) = 590080;
  *(_QWORD *)(v29 + 1672) = sub_23AE3AF58;
  *(_QWORD *)(v29 + 1680) = 0;
  *(_DWORD *)(v29 + 1688) = 590081;
  *(_DWORD *)(v29 + 1696) = 590081;
  *(_QWORD *)(v29 + 1704) = sub_23AE3AFA0;
  *(_QWORD *)(v29 + 1712) = 0;
  *(_DWORD *)(v29 + 1720) = 590082;
  *(_DWORD *)(v29 + 1728) = 590082;
  *(_QWORD *)(v29 + 1736) = sub_23AE3AFE8;
  *(_QWORD *)(v29 + 1744) = 0;
  *(_DWORD *)(v29 + 1752) = 590084;
  *(_DWORD *)(v29 + 1760) = 590084;
  *(_QWORD *)(v29 + 1768) = sub_23AE3B030;
  *(_QWORD *)(v29 + 1776) = 0;
  *(_DWORD *)(v29 + 1784) = 590085;
  *(_DWORD *)(v29 + 1792) = 590085;
  *(_QWORD *)(v29 + 1800) = sub_23AE3B078;
  *(_QWORD *)(v29 + 1808) = 0;
  *(_DWORD *)(v29 + 1816) = 590086;
  *(_DWORD *)(v29 + 1824) = 590086;
  *(_QWORD *)(v29 + 1832) = sub_23AE3B0C0;
  *(_QWORD *)(v29 + 1840) = 0;
  *(_DWORD *)(v29 + 1848) = 590087;
  v30 = sub_23AAF8194(v29);
  swift_setDeallocating();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4CC0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v207 = v28;
  *(_QWORD *)(a8 + v28) = v30;
  v31 = qword_2542EDE68;
  v213 = (id)objc_opt_self();
  v32 = objc_msgSend(v213, sel_defaultStore);
  LODWORD(v21) = objc_msgSend(v32, sel_sqlDatabaseVacuumBatchSize);

  *(_QWORD *)(a8 + v31) = (int)v21;
  v33 = a3;
  *(_BYTE *)(a8 + qword_2542EDE70) = 0;
  *(_BYTE *)(a8 + qword_2542EDE78) = 0;
  *(_BYTE *)(a8 + qword_2542EDE80) = 0;
  v34 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v35 = v16;
  v36 = v16;
  v37 = v221;
  v218 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v218(v36, v222, v221);
  swift_retain();
  v210 = v20;
  v38 = sub_23B1C5E40();
  v39 = sub_23B1C6AB8();
  v40 = os_log_type_enabled(v38, v39);
  v216 = v33;
  v209 = v12;
  if (v40)
  {
    v41 = swift_slowAlloc();
    v193 = (void *)swift_slowAlloc();
    aBlock = v193;
    *(_DWORD *)v41 = 136446466;
    v42 = *(_QWORD *)(v33 + 136);
    v43 = *(_QWORD *)(v42 + 16);
    v44 = *(_QWORD *)(v42 + 24);
    swift_bridgeObjectRetain();
    v224 = sub_23AABEC68(v43, v44, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2082;
    v212 = (void (*)(char *, uint64_t))(v41 + 14);
    v45 = v35;
    v46 = (void *)sub_23B1C5954();
    v47 = objc_msgSend(v46, sel_fp_shortDescription);

    v48 = sub_23B1C63E0();
    v50 = v49;

    v224 = sub_23AABEC68(v48, v50, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v51 = v221;
    v212 = *(void (**)(char *, uint64_t))(v209 + 8);
    v212(v45, v221);
    v52 = v39;
    v53 = v51;
    _os_log_impl(&dword_23AA66000, v38, v52, "opening database %{public}s at %{public}s", (uint8_t *)v41, 0x16u);
    v54 = v193;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v54, -1, -1);
    MEMORY[0x23B8614BC](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v215 + 8))(v210, v214);
  }
  else
  {
    swift_release();
    v212 = *(void (**)(char *, uint64_t))(v12 + 8);
    v212(v35, v37);

    (*(void (**)(char *, uint64_t))(v215 + 8))(v210, v214);
    v53 = v37;
  }
  v55 = objc_msgSend(v213, sel_defaultStore);
  v56 = objc_msgSend(v55, sel_sqlDatabaseStatementCacheMaxCount);

  v57 = v56;
  v58 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PQLConnectionWithStatistics()), sel_init);
  v59 = qword_2542EE110;
  *(_QWORD *)(a8 + qword_2542EE110) = v58;
  v60 = v219;
  objc_msgSend(v58, sel_setTraced_, (v219 >> 33) & 1);
  v61 = v58;
  swift_bridgeObjectRetain();
  v62 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v61, sel_setLabel_, v62);

  v63 = *(void **)(a8 + v59);
  objc_msgSend(v63, sel_setStatementCacheMaxCount_, v57);
  v218((char *)(a8 + qword_2542EDEC0), v222, v53);
  v64 = (void (**)())(a8 + qword_2542EDED8);
  *v64 = sub_23ADD2150;
  v64[1] = 0;
  *(_BYTE *)(a8 + qword_2542E69E0) = (v60 & 4) != 0;
  if ((v60 & 1) != 0)
    v65 = 1;
  else
    v65 = 6;
  v66 = v65 | (v60 >> 16) & 0x10000;
  v67 = (void *)sub_23B1C5954();
  aBlock = 0;
  LODWORD(v66) = objc_msgSend(v63, sel_openAtURL_withFlags_error_, v67, v66, &aBlock);

  v68 = aBlock;
  if (!(_DWORD)v66)
  {
    v84 = aBlock;
    swift_bridgeObjectRelease();
    swift_release();
    v85 = (id)sub_23B1C587C();

    goto LABEL_19;
  }
  *(_BYTE *)(a8 + v198) = 0;
  v69 = v68;
  v70 = sub_23B1C58C4();
  *(_BYTE *)(a8 + qword_2542E69C0) = (v70 & 1) == 0;
  if ((v70 & 1) == 0)
    objc_msgSend(*(id *)(a8 + v59), sel_setShouldUseWALJournalMode_, 0);
  if ((v219 & 1) != 0)
  {
    v88 = v196;
    v89 = v221;
    v218(v196, v222, v221);
    v212(v88, v89);
    goto LABEL_21;
  }
  if ((objc_msgSend(*(id *)(a8 + v59), sel_setupPragmas) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v158 = objc_msgSend(*(id *)(a8 + v59), sel_lastError);
    if (v158)
    {
      v85 = v158;
      swift_release();
    }
    else
    {
      type metadata accessor for PQLSqliteError(0);
      v224 = 11;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
      sub_23B1C5864();
      swift_release();
      v85 = aBlock;
    }
LABEL_19:
    swift_willThrow();
    sub_23AB23A94();
    swift_allocError();
    *(_QWORD *)v86 = v85;
    *(_BYTE *)(v86 + 48) = 1;
    v87 = v85;
    sub_23ADEFAD4();
  }
  v71 = v196;
  v72 = v221;
  v218(v196, v222, v221);
  v73 = sub_23B1C58C4();
  v212(v71, v72);
  if ((v73 & 1) == 0)
  {
LABEL_21:
    *(_QWORD *)(a8 + qword_2542EDEC8) = 0;
    goto LABEL_22;
  }
  v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEDD630]), sel_init);
  v75 = v74;
  v76 = qword_2542EDEC8;
  *(_QWORD *)(a8 + qword_2542EDEC8) = v74;
  if (v74)
  {
    v218 = (void (*)(char *, uint64_t, uint64_t))v76;
    v77 = v220[17];
    v78 = *(_QWORD *)(v77 + 24);
    aBlock = *(id *)(v77 + 16);
    v226 = v78;
    v79 = v74;
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    v80 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    objc_msgSend(v79, sel_setLabel_, v80);

    v75 = *(void **)((char *)v218 + a8);
  }
  objc_msgSend(v75, sel_setStatementCacheMaxCount_, v57);
  if (v75)
  {
    v81 = (void *)sub_23B1C5954();
    aBlock = 0;
    v82 = objc_msgSend(v75, sel_openAtURL_withFlags_error_, v81, 65537, &aBlock);

    if (!v82)
    {
      v181 = aBlock;
      swift_bridgeObjectRelease();
      swift_release();
      v182 = (void *)sub_23B1C587C();

      swift_willThrow();
      sub_23AB23A94();
      swift_allocError();
      *(_QWORD *)v183 = v182;
      *(_BYTE *)(v183 + 48) = 1;
      v184 = v182;
      sub_23ADEFAD4();
    }
    v83 = aBlock;
  }
LABEL_22:
  v90 = *(void **)(a8 + v59);
  v91 = *(void **)(a8 + qword_2542EDEC8);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E45D8);
  swift_allocObject();
  v92 = v91;
  v93 = v90;
  v94 = v220;
  swift_retain();
  v218 = (void (*)(char *, uint64_t, uint64_t))sub_23AEAAE9C(v93, v91, 0, (uint64_t)v94);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6A00);
  swift_allocObject();
  v95 = v216;
  swift_retain();
  v96 = v93;
  v97 = v92;
  v98 = sub_23AEAB130(v96, v91, 1, v95);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4C10);
  v99 = swift_allocObject();
  v210 = (char *)(v99 + 24);
  v100 = swift_weakInit();
  *(_QWORD *)(v99 + 16) = v96;
  v101 = (*(_QWORD *(**)(id *__return_ptr, uint64_t))(*v94 + 96))(&aBlock, v100);
  (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*(_QWORD *)v95 + 96))(&v224, v101);
  v102 = (uint64_t)aBlock;
  v103 = (id)v224;
  LOBYTE(v95) = v226;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
  v104 = swift_allocObject();
  v105 = v96;
  v106 = sub_23AEAB398(v105, v102, v95, v103, v104);

  swift_release();
  v107 = v94[17];
  v108 = *(_QWORD *)(v107 + 16);
  v109 = *(_QWORD *)(v107 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  swift_allocObject();
  v110 = v105;
  swift_bridgeObjectRetain();
  v111 = v109;
  v112 = v219;
  v113 = (void (*)(char *, uint64_t))sub_23AE567A4(v110, v108, v111, v219);
  type metadata accessor for SQLHistoryTable();
  v114 = swift_allocObject();
  *(_BYTE *)(v114 + 37) = 0;
  *(_WORD *)(v114 + 38) = -5120;
  *(_QWORD *)(v114 + 40) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v114 + 16) = v110;
  strcpy((char *)(v114 + 24), "D2DRestoreV2");
  *(_QWORD *)(a8 + qword_2542EDE60) = v114;
  v115 = v110;
  swift_release();
  v116 = v195;
  sub_23AA8EFC8(v217, v195, &qword_2542E4E70);
  swift_retain();
  swift_retain();
  v117 = (uint64_t)v218;
  swift_retain();
  swift_retain();
  swift_retain();
  v118 = sub_23AEAB860(v106, (uint64_t)v113, v117, v98, v99, v116, v112, a8);
  swift_release();
  v212 = v113;
  swift_release();
  swift_release();
  v208 = (_QWORD *)v98;
  swift_release();
  v207 = v99;
  swift_release();
  v119 = swift_allocObject();
  swift_weakInit();
  v120 = *(_QWORD *)(v106 + 112);
  *(_QWORD *)(v106 + 112) = sub_23AEAD448;
  *(_QWORD *)(v106 + 120) = v119;
  swift_retain();
  swift_retain();
  sub_23AAB7948(v120);
  v206 = qword_2542EE110;
  v121 = *(void **)(v118 + qword_2542EE110);
  v122 = swift_allocObject();
  swift_weakInit();
  v229 = sub_23AEAD450;
  v230 = v122;
  v123 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v226 = 1107296256;
  v227 = sub_23AC46D44;
  v228 = &block_descriptor_1029;
  v124 = _Block_copy(&aBlock);
  v125 = v121;
  swift_release();
  objc_msgSend(v125, sel_setAutoRollbackHandlerForSwift_, v124);
  _Block_release(v124);

  v126 = *(void **)(v118 + qword_2542EDEC8);
  if (v126)
  {
    v127 = swift_allocObject();
    swift_weakInit();
    v229 = sub_23AEAD450;
    v230 = v127;
    aBlock = v123;
    v226 = 1107296256;
    v227 = sub_23AC46D44;
    v228 = &block_descriptor_1034;
    v128 = _Block_copy(&aBlock);
    v129 = v126;
    swift_release();
    objc_msgSend(v129, sel_setAutoRollbackHandlerForSwift_, v128);
    _Block_release(v128);

  }
  swift_weakAssign();
  swift_weakAssign();
  if ((v219 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v157 = v221;
    v146 = v199;
    v147 = v215;
  }
  else
  {
    v210 = (char *)v106;
    v219 = v119;
    v130 = objc_msgSend(v213, sel_defaultStore);
    v131 = v206;
    v132 = *(void **)(v118 + v206);
    v133 = *(id *)(v118 + 64);
    v134 = v132;
    objc_msgSend(v130, sel_sqlDatabaseBatchDelay);
    objc_msgSend(v134, sel_useBatchingOnTargetQueue_delay_changeCount_, v133, objc_msgSend(v130, sel_sqlDatabaseBatchChangeCount), v135);

    v136 = *(void **)(v118 + v131);
    v137 = swift_allocObject();
    *(_QWORD *)(v137 + 16) = v136;
    v229 = (uint64_t (*)(void *))sub_23AEB5510;
    v230 = v137;
    aBlock = v123;
    v226 = 1107296256;
    v227 = sub_23AE2CAF4;
    v228 = &block_descriptor_1041;
    v138 = _Block_copy(&aBlock);
    v139 = v136;
    swift_release();
    objc_msgSend(v139, sel_setProfilingHookV2_, v138);
    _Block_release(v138);

    MEMORY[0x24BDAC7A8](v140);
    v141 = v194;
    *(&v192 - 6) = v118;
    *(&v192 - 5) = v141;
    v142 = v220;
    *(&v192 - 4) = v211;
    *(&v192 - 3) = (uint64_t)v142;
    *(&v192 - 2) = v216;
    v144 = v143;
    v145 = v199;
    sub_23AC494B4(0, 0, (uint64_t)"init(url:fsTree:fpTree:telemetry:options:creationReason:onError:)", 65, 2, (uint64_t)sub_23AEAD470, (uint64_t)(&v192 - 8));
    v146 = v145;
    v147 = v215;
    if (v145)
    {

      swift_bridgeObjectRelease();
      v223 = v145;
      v148 = v145;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      if (swift_dynamicCast())
      {

        sub_23AEAD484((uint64_t)&aBlock, (uint64_t)&v224);
        v149 = *(void **)(v118 + 64);
        swift_retain();
        v150 = v149;
        sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, v118);

        v151 = v150;
        sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
        swift_release();

        v152 = *(void (**)(uint64_t, void *))(v118 + qword_2542EDED8);
        sub_23AB23A94();
        v153 = (void *)swift_allocError();
        sub_23AEAD4C0(&v224, v154);
        v155 = swift_retain();
        v152(v155, v153);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_23AA8A05C(v217, &qword_2542E4E70);
        (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v222, v221);
        sub_23AC04DA4((uint64_t)&v224);
        swift_release();

        v156 = v223;
LABEL_45:

        swift_release();
        return v118;
      }

      aBlock = v145;
      v164 = v145;
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
      v165 = swift_dynamicCast();
      v166 = v221;
      if ((v165 & 1) != 0)
      {
        v167 = (id)v224;
        v168 = objc_msgSend((id)v224, sel_domain);
        v169 = sub_23B1C63E0();
        v171 = v170;

        if (v169 == sub_23B1C63E0() && v171 == v172)
        {
          swift_bridgeObjectRelease_n();
LABEL_44:

          v186 = *(void **)(v118 + 64);
          swift_retain();
          v187 = v186;
          sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, v118);

          v188 = v187;
          sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
          swift_release();

          v189 = *(void (**)(uint64_t, id))(v118 + qword_2542EDED8);
          swift_retain();
          v190 = v167;
          v189(v118, v190);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          sub_23AA8A05C(v217, &qword_2542E4E70);
          (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v222, v166);
          swift_release();
          v156 = aBlock;
          goto LABEL_45;
        }
        v185 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v185 & 1) != 0)
          goto LABEL_44;
        v173 = v145;

      }
      else
      {
        v173 = v145;
      }

      v174 = *(void **)(v118 + 64);
      swift_retain();
      v175 = v174;
      sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, v118);

      v176 = v175;
      sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
      swift_release();

      v177 = *(void (**)(uint64_t, uint64_t))(v118 + qword_2542EDED8);
      sub_23AB23A94();
      v178 = swift_allocError();
      *(_QWORD *)v179 = v173;
      *(_BYTE *)(v179 + 48) = 2;
      swift_retain();
      v180 = v173;
      v177(v118, v178);
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_23AA8A05C(v217, &qword_2542E4E70);
      (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v222, v166);
      swift_release();
      v156 = (id)v178;
      goto LABEL_45;
    }

    swift_bridgeObjectRelease();
    v157 = v221;
  }
  v159 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v160 = sub_23B1C5E40();
  v161 = sub_23B1C6AB8();
  if (os_log_type_enabled(v160, v161))
  {
    v162 = (uint8_t *)swift_slowAlloc();
    v199 = v146;
    v163 = v162;
    *(_WORD *)v162 = 0;
    _os_log_impl(&dword_23AA66000, v160, v161, "database is ready", v162, 2u);
    MEMORY[0x23B8614BC](v163, -1, -1);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_23AA8A05C(v217, &qword_2542E4E70);
  (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v222, v157);
  (*(void (**)(char *, uint64_t))(v147 + 8))(v197, v214);
  swift_release();
  return v118;
}

uint64_t sub_23AE34914(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  char *v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  void *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  signed int v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  void *v62;
  void *v63;
  void (**v64)();
  int v65;
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  char v70;
  char *v71;
  uint64_t v72;
  char v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  void *v81;
  unsigned int v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  id v93;
  _QWORD *v94;
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void *v123;
  void *v124;
  id v125;
  void *v126;
  uint64_t v127;
  void *v128;
  id v129;
  id v130;
  uint64_t v131;
  void *v132;
  id v133;
  id v134;
  double v135;
  void *v136;
  uint64_t v137;
  void *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  id v143;
  id v144;
  void *v145;
  void *v146;
  uint64_t v147;
  id v148;
  void *v149;
  id v150;
  id v151;
  void (*v152)(uint64_t, void *);
  void *v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  id v158;
  id v159;
  NSObject *v160;
  os_log_type_t v161;
  uint8_t *v162;
  uint8_t *v163;
  id v164;
  char v165;
  uint64_t v166;
  id v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  void *v174;
  id v175;
  id v176;
  void (*v177)(uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  id v180;
  id v181;
  void *v182;
  uint64_t v183;
  id v184;
  char v185;
  void *v186;
  id v187;
  id v188;
  void (*v189)(uint64_t, id);
  id v190;
  uint64_t v192;
  void *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  void *v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  void (*v212)(char *, uint64_t);
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(char *, uint64_t, uint64_t);
  unint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  id aBlock;
  uint64_t v226;
  void *v227;
  void *v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;

  v211 = a7;
  v194 = a6;
  v219 = a5;
  v217 = a4;
  v220 = a2;
  v222 = a1;
  v231 = *MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v10);
  v195 = (uint64_t)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_23B1C5A08();
  v12 = *(_QWORD *)(v221 - 8);
  v13 = MEMORY[0x24BDAC7A8](v221);
  v196 = (char *)&v192 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v192 - v15;
  v214 = sub_23B1C5E4C();
  v215 = *(_QWORD *)(v214 - 8);
  v17 = MEMORY[0x24BDAC7A8](v214);
  v197 = (char *)&v192 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v192 - v19;
  v198 = qword_2542EDE58;
  *(_BYTE *)(a8 + qword_2542EDE58) = 1;
  *(_BYTE *)(a8 + qword_2542EDEE0) = 0;
  v21 = a8 + qword_2542EDED0;
  v22 = sub_23B1C5C54();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v204 = v21;
  v23(v21, 1, 1, v22);
  v200 = qword_2542E69D0;
  *(_QWORD *)(a8 + qword_2542E69D0) = MEMORY[0x24BEE4AF8];
  v202 = qword_2542E69B8;
  *(_QWORD *)(a8 + qword_2542E69B8) = 0;
  v206 = qword_2542E69D8;
  *(_QWORD *)(a8 + qword_2542E69D8) = 0;
  *(_BYTE *)(a8 + qword_2542EDE90) = 0;
  v24 = (_QWORD *)(a8 + qword_2542EDEB0);
  *v24 = 0;
  v24[1] = 0;
  v203 = v24;
  *(_BYTE *)(a8 + qword_2542EDEA8) = 0;
  v25 = (_QWORD *)(a8 + qword_2542EDEB8);
  *v25 = 0;
  v25[1] = 0;
  v201 = v25;
  v26 = (_QWORD *)(a8 + qword_2542EDEA0);
  *v26 = 0;
  v26[1] = 0;
  v205 = v26;
  v27 = (_QWORD *)(a8 + qword_2542EDE88);
  *v27 = 0;
  v27[1] = 0;
  v208 = v27;
  *(_BYTE *)(a8 + qword_2542EDE98) = 0;
  v28 = qword_2542E7738;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55B8);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_23B1DA940;
  *(_DWORD *)(v29 + 32) = 0;
  *(_QWORD *)(v29 + 40) = sub_23AE3A100;
  *(_QWORD *)(v29 + 48) = 0;
  *(_DWORD *)(v29 + 56) = 0x10000;
  *(_DWORD *)(v29 + 64) = 0x10000;
  *(_QWORD *)(v29 + 72) = sub_23AE3A148;
  *(_QWORD *)(v29 + 80) = 0;
  *(_DWORD *)(v29 + 88) = 65537;
  *(_DWORD *)(v29 + 96) = 65537;
  *(_QWORD *)(v29 + 104) = sub_23AE3A190;
  *(_QWORD *)(v29 + 112) = 0;
  *(_DWORD *)(v29 + 120) = 0x20000;
  *(_DWORD *)(v29 + 128) = 0x20000;
  *(_QWORD *)(v29 + 136) = sub_23AE3A1D8;
  *(_QWORD *)(v29 + 144) = 0;
  *(_DWORD *)(v29 + 152) = 131073;
  *(_DWORD *)(v29 + 160) = 131073;
  *(_QWORD *)(v29 + 168) = sub_23AE3A220;
  *(_QWORD *)(v29 + 176) = 0;
  *(_DWORD *)(v29 + 184) = 131074;
  *(_DWORD *)(v29 + 192) = 131074;
  *(_QWORD *)(v29 + 200) = sub_23AE3A268;
  *(_QWORD *)(v29 + 208) = 0;
  *(_DWORD *)(v29 + 216) = 131075;
  *(_DWORD *)(v29 + 224) = 131075;
  *(_QWORD *)(v29 + 232) = sub_23AE3A2B0;
  *(_QWORD *)(v29 + 240) = 0;
  *(_DWORD *)(v29 + 248) = 131076;
  *(_DWORD *)(v29 + 256) = 131076;
  *(_QWORD *)(v29 + 264) = sub_23AE3A2F8;
  *(_QWORD *)(v29 + 272) = 0;
  *(_DWORD *)(v29 + 280) = 131077;
  *(_DWORD *)(v29 + 288) = 131077;
  *(_QWORD *)(v29 + 296) = sub_23AE3A340;
  *(_QWORD *)(v29 + 304) = 0;
  *(_DWORD *)(v29 + 312) = 131078;
  *(_DWORD *)(v29 + 320) = 131078;
  *(_QWORD *)(v29 + 328) = sub_23AE3A388;
  *(_QWORD *)(v29 + 336) = 0;
  *(_DWORD *)(v29 + 344) = 131079;
  *(_DWORD *)(v29 + 352) = 131079;
  *(_QWORD *)(v29 + 360) = sub_23AE3A3D0;
  *(_QWORD *)(v29 + 368) = 0;
  *(_DWORD *)(v29 + 376) = 131080;
  *(_DWORD *)(v29 + 384) = 131080;
  *(_QWORD *)(v29 + 392) = sub_23AE3A418;
  *(_QWORD *)(v29 + 400) = 0;
  *(_DWORD *)(v29 + 408) = 131081;
  *(_DWORD *)(v29 + 416) = 131081;
  *(_QWORD *)(v29 + 424) = sub_23AE3A460;
  *(_QWORD *)(v29 + 432) = 0;
  *(_DWORD *)(v29 + 440) = 196608;
  *(_DWORD *)(v29 + 448) = 196608;
  *(_QWORD *)(v29 + 456) = sub_23AE3A4A8;
  *(_QWORD *)(v29 + 464) = 0;
  *(_DWORD *)(v29 + 472) = 196609;
  *(_DWORD *)(v29 + 480) = 196609;
  *(_QWORD *)(v29 + 488) = sub_23AE3A4F0;
  *(_QWORD *)(v29 + 496) = 0;
  *(_DWORD *)(v29 + 504) = 196610;
  *(_DWORD *)(v29 + 512) = 196610;
  *(_QWORD *)(v29 + 520) = sub_23AE3A538;
  *(_QWORD *)(v29 + 528) = 0;
  *(_DWORD *)(v29 + 536) = 196611;
  *(_DWORD *)(v29 + 544) = 196611;
  *(_QWORD *)(v29 + 552) = sub_23AE3A580;
  *(_QWORD *)(v29 + 560) = 0;
  *(_DWORD *)(v29 + 568) = 196612;
  *(_DWORD *)(v29 + 576) = 196612;
  *(_QWORD *)(v29 + 584) = sub_23AE3A5C8;
  *(_QWORD *)(v29 + 592) = 0;
  *(_DWORD *)(v29 + 600) = 196613;
  *(_DWORD *)(v29 + 608) = 196613;
  *(_QWORD *)(v29 + 616) = sub_23AE3A610;
  *(_QWORD *)(v29 + 624) = 0;
  *(_DWORD *)(v29 + 632) = 196614;
  *(_DWORD *)(v29 + 640) = 196614;
  *(_QWORD *)(v29 + 648) = sub_23AE3A658;
  *(_DWORD *)(v29 + 664) = 196615;
  *(_DWORD *)(v29 + 672) = 196615;
  *(_QWORD *)(v29 + 656) = 0;
  *(_QWORD *)(v29 + 680) = sub_23AE3A6A0;
  *(_QWORD *)(v29 + 688) = 0;
  *(_DWORD *)(v29 + 696) = 0x40000;
  *(_DWORD *)(v29 + 704) = 0x40000;
  *(_QWORD *)(v29 + 712) = sub_23AE3A6E8;
  *(_QWORD *)(v29 + 720) = 0;
  *(_DWORD *)(v29 + 728) = 262145;
  *(_DWORD *)(v29 + 736) = 262145;
  *(_QWORD *)(v29 + 744) = sub_23AE3A730;
  *(_QWORD *)(v29 + 752) = 0;
  *(_DWORD *)(v29 + 760) = 327680;
  *(_DWORD *)(v29 + 768) = 327680;
  *(_QWORD *)(v29 + 776) = sub_23AE3A778;
  *(_QWORD *)(v29 + 784) = 0;
  *(_DWORD *)(v29 + 792) = 327681;
  *(_DWORD *)(v29 + 800) = 327681;
  *(_QWORD *)(v29 + 808) = sub_23AE3A7C0;
  *(_QWORD *)(v29 + 816) = 0;
  *(_DWORD *)(v29 + 824) = 327682;
  *(_DWORD *)(v29 + 832) = 327682;
  *(_QWORD *)(v29 + 840) = sub_23AE3A808;
  *(_DWORD *)(v29 + 856) = 327683;
  *(_DWORD *)(v29 + 864) = 327683;
  *(_QWORD *)(v29 + 848) = 0;
  *(_QWORD *)(v29 + 872) = sub_23AE3A850;
  *(_QWORD *)(v29 + 880) = 0;
  *(_DWORD *)(v29 + 888) = 327684;
  *(_DWORD *)(v29 + 896) = 327684;
  *(_QWORD *)(v29 + 904) = sub_23AE3A898;
  *(_QWORD *)(v29 + 912) = 0;
  *(_DWORD *)(v29 + 920) = 327685;
  *(_DWORD *)(v29 + 928) = 327685;
  *(_QWORD *)(v29 + 936) = sub_23AE3A8E0;
  *(_QWORD *)(v29 + 944) = 0;
  *(_DWORD *)(v29 + 952) = 327686;
  *(_DWORD *)(v29 + 960) = 327686;
  *(_QWORD *)(v29 + 968) = sub_23AE3A928;
  *(_QWORD *)(v29 + 976) = 0;
  *(_DWORD *)(v29 + 984) = 327687;
  *(_DWORD *)(v29 + 992) = 327687;
  *(_QWORD *)(v29 + 1000) = sub_23AE3A970;
  *(_QWORD *)(v29 + 1008) = 0;
  *(_DWORD *)(v29 + 1016) = 327688;
  *(_DWORD *)(v29 + 1024) = 327688;
  *(_QWORD *)(v29 + 1032) = sub_23AE3A9B8;
  *(_QWORD *)(v29 + 1040) = 0;
  *(_DWORD *)(v29 + 1048) = 327689;
  *(_DWORD *)(v29 + 1056) = 327689;
  *(_QWORD *)(v29 + 1064) = sub_23AE3AA00;
  *(_QWORD *)(v29 + 1072) = 0;
  *(_DWORD *)(v29 + 1080) = 327690;
  *(_DWORD *)(v29 + 1088) = 327690;
  *(_QWORD *)(v29 + 1096) = sub_23AE3AA48;
  *(_QWORD *)(v29 + 1104) = 0;
  *(_DWORD *)(v29 + 1112) = 327691;
  *(_DWORD *)(v29 + 1120) = 327691;
  *(_QWORD *)(v29 + 1128) = sub_23AE3AA90;
  *(_QWORD *)(v29 + 1136) = 0;
  *(_DWORD *)(v29 + 1144) = 393216;
  *(_DWORD *)(v29 + 1152) = 393216;
  *(_QWORD *)(v29 + 1160) = sub_23AE3AAD8;
  *(_QWORD *)(v29 + 1168) = 0;
  *(_DWORD *)(v29 + 1176) = 393217;
  *(_DWORD *)(v29 + 1184) = 393217;
  *(_QWORD *)(v29 + 1192) = sub_23AE3AB20;
  *(_QWORD *)(v29 + 1200) = 0;
  *(_DWORD *)(v29 + 1208) = 393218;
  *(_DWORD *)(v29 + 1216) = 393218;
  *(_QWORD *)(v29 + 1224) = sub_23AE3AB68;
  *(_QWORD *)(v29 + 1232) = 0;
  *(_DWORD *)(v29 + 1240) = 393219;
  *(_DWORD *)(v29 + 1248) = 393219;
  *(_QWORD *)(v29 + 1256) = sub_23AE3ABB0;
  *(_QWORD *)(v29 + 1264) = 0;
  *(_DWORD *)(v29 + 1272) = 393220;
  *(_DWORD *)(v29 + 1280) = 393220;
  *(_QWORD *)(v29 + 1288) = sub_23AE3ABF8;
  *(_QWORD *)(v29 + 1296) = 0;
  *(_DWORD *)(v29 + 1304) = 393221;
  *(_DWORD *)(v29 + 1312) = 393221;
  *(_QWORD *)(v29 + 1320) = sub_23AE3AC40;
  *(_QWORD *)(v29 + 1328) = 0;
  *(_DWORD *)(v29 + 1336) = 458752;
  *(_DWORD *)(v29 + 1344) = 458752;
  *(_QWORD *)(v29 + 1352) = sub_23AE3AC88;
  *(_QWORD *)(v29 + 1360) = 0;
  *(_DWORD *)(v29 + 1368) = 458753;
  *(_DWORD *)(v29 + 1376) = 458753;
  *(_QWORD *)(v29 + 1384) = sub_23AE3ACD0;
  *(_QWORD *)(v29 + 1392) = 0;
  *(_DWORD *)(v29 + 1400) = 458754;
  *(_DWORD *)(v29 + 1408) = 458754;
  *(_QWORD *)(v29 + 1416) = sub_23AE3AD18;
  *(_QWORD *)(v29 + 1424) = 0;
  *(_DWORD *)(v29 + 1432) = 458755;
  *(_DWORD *)(v29 + 1440) = 458755;
  *(_QWORD *)(v29 + 1448) = sub_23AE3AD60;
  *(_QWORD *)(v29 + 1456) = 0;
  *(_DWORD *)(v29 + 1464) = 458756;
  *(_DWORD *)(v29 + 1472) = 458756;
  *(_QWORD *)(v29 + 1480) = sub_23AE3ADA8;
  *(_QWORD *)(v29 + 1488) = 0;
  *(_DWORD *)(v29 + 1496) = 0x80000;
  *(_DWORD *)(v29 + 1504) = 0x80000;
  *(_QWORD *)(v29 + 1512) = sub_23AE3ADF0;
  *(_QWORD *)(v29 + 1520) = 0;
  *(_DWORD *)(v29 + 1528) = 524289;
  *(_DWORD *)(v29 + 1536) = 524289;
  *(_QWORD *)(v29 + 1544) = sub_23AE3AE38;
  *(_QWORD *)(v29 + 1552) = 0;
  *(_DWORD *)(v29 + 1560) = 524290;
  *(_DWORD *)(v29 + 1568) = 524290;
  *(_QWORD *)(v29 + 1576) = sub_23AE3AE80;
  *(_QWORD *)(v29 + 1584) = 0;
  *(_DWORD *)(v29 + 1592) = 524291;
  *(_DWORD *)(v29 + 1600) = 524291;
  *(_QWORD *)(v29 + 1608) = sub_23AE3AEC8;
  *(_QWORD *)(v29 + 1616) = 0;
  *(_DWORD *)(v29 + 1624) = 590079;
  *(_DWORD *)(v29 + 1632) = 590079;
  *(_QWORD *)(v29 + 1640) = sub_23AE3AF10;
  *(_QWORD *)(v29 + 1648) = 0;
  *(_DWORD *)(v29 + 1656) = 590080;
  *(_DWORD *)(v29 + 1664) = 590080;
  *(_QWORD *)(v29 + 1672) = sub_23AE3AF58;
  *(_QWORD *)(v29 + 1680) = 0;
  *(_DWORD *)(v29 + 1688) = 590081;
  *(_DWORD *)(v29 + 1696) = 590081;
  *(_QWORD *)(v29 + 1704) = sub_23AE3AFA0;
  *(_QWORD *)(v29 + 1712) = 0;
  *(_DWORD *)(v29 + 1720) = 590082;
  *(_DWORD *)(v29 + 1728) = 590082;
  *(_QWORD *)(v29 + 1736) = sub_23AE3AFE8;
  *(_QWORD *)(v29 + 1744) = 0;
  *(_DWORD *)(v29 + 1752) = 590084;
  *(_DWORD *)(v29 + 1760) = 590084;
  *(_QWORD *)(v29 + 1768) = sub_23AE3B030;
  *(_QWORD *)(v29 + 1776) = 0;
  *(_DWORD *)(v29 + 1784) = 590085;
  *(_DWORD *)(v29 + 1792) = 590085;
  *(_QWORD *)(v29 + 1800) = sub_23AE3B078;
  *(_QWORD *)(v29 + 1808) = 0;
  *(_DWORD *)(v29 + 1816) = 590086;
  *(_DWORD *)(v29 + 1824) = 590086;
  *(_QWORD *)(v29 + 1832) = sub_23AE3B0C0;
  *(_QWORD *)(v29 + 1840) = 0;
  *(_DWORD *)(v29 + 1848) = 590087;
  v30 = sub_23AAF8194(v29);
  swift_setDeallocating();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4CC0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v207 = v28;
  *(_QWORD *)(a8 + v28) = v30;
  v31 = qword_2542EDE68;
  v213 = (id)objc_opt_self();
  v32 = objc_msgSend(v213, sel_defaultStore);
  LODWORD(v21) = objc_msgSend(v32, sel_sqlDatabaseVacuumBatchSize);

  *(_QWORD *)(a8 + v31) = (int)v21;
  v33 = a3;
  *(_BYTE *)(a8 + qword_2542EDE70) = 0;
  *(_BYTE *)(a8 + qword_2542EDE78) = 0;
  *(_BYTE *)(a8 + qword_2542EDE80) = 0;
  v34 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v35 = v16;
  v36 = v16;
  v37 = v221;
  v218 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v218(v36, v222, v221);
  swift_retain();
  v210 = v20;
  v38 = sub_23B1C5E40();
  v39 = sub_23B1C6AB8();
  v40 = os_log_type_enabled(v38, v39);
  v216 = v33;
  v209 = v12;
  if (v40)
  {
    v41 = swift_slowAlloc();
    v193 = (void *)swift_slowAlloc();
    aBlock = v193;
    *(_DWORD *)v41 = 136446466;
    v42 = *(_QWORD *)(v33 + 136);
    v43 = *(_QWORD *)(v42 + 16);
    v44 = *(_QWORD *)(v42 + 24);
    swift_bridgeObjectRetain();
    v224 = sub_23AABEC68(v43, v44, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2082;
    v212 = (void (*)(char *, uint64_t))(v41 + 14);
    v45 = v35;
    v46 = (void *)sub_23B1C5954();
    v47 = objc_msgSend(v46, sel_fp_shortDescription);

    v48 = sub_23B1C63E0();
    v50 = v49;

    v224 = sub_23AABEC68(v48, v50, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v51 = v221;
    v212 = *(void (**)(char *, uint64_t))(v209 + 8);
    v212(v45, v221);
    v52 = v39;
    v53 = v51;
    _os_log_impl(&dword_23AA66000, v38, v52, "opening database %{public}s at %{public}s", (uint8_t *)v41, 0x16u);
    v54 = v193;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v54, -1, -1);
    MEMORY[0x23B8614BC](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v215 + 8))(v210, v214);
  }
  else
  {
    swift_release();
    v212 = *(void (**)(char *, uint64_t))(v12 + 8);
    v212(v35, v37);

    (*(void (**)(char *, uint64_t))(v215 + 8))(v210, v214);
    v53 = v37;
  }
  v55 = objc_msgSend(v213, sel_defaultStore);
  v56 = objc_msgSend(v55, sel_sqlDatabaseStatementCacheMaxCount);

  v57 = v56;
  v58 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PQLConnectionWithStatistics()), sel_init);
  v59 = qword_2542EE110;
  *(_QWORD *)(a8 + qword_2542EE110) = v58;
  v60 = v219;
  objc_msgSend(v58, sel_setTraced_, (v219 >> 33) & 1);
  v61 = v58;
  swift_bridgeObjectRetain();
  v62 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v61, sel_setLabel_, v62);

  v63 = *(void **)(a8 + v59);
  objc_msgSend(v63, sel_setStatementCacheMaxCount_, v57);
  v218((char *)(a8 + qword_2542EDEC0), v222, v53);
  v64 = (void (**)())(a8 + qword_2542EDED8);
  *v64 = sub_23B13C57C;
  v64[1] = 0;
  *(_BYTE *)(a8 + qword_2542E69E0) = (v60 & 4) != 0;
  if ((v60 & 1) != 0)
    v65 = 1;
  else
    v65 = 6;
  v66 = v65 | (v60 >> 16) & 0x10000;
  v67 = (void *)sub_23B1C5954();
  aBlock = 0;
  LODWORD(v66) = objc_msgSend(v63, sel_openAtURL_withFlags_error_, v67, v66, &aBlock);

  v68 = aBlock;
  if (!(_DWORD)v66)
  {
    v84 = aBlock;
    swift_bridgeObjectRelease();
    swift_release();
    v85 = (id)sub_23B1C587C();

    goto LABEL_19;
  }
  *(_BYTE *)(a8 + v198) = 0;
  v69 = v68;
  v70 = sub_23B1C58C4();
  *(_BYTE *)(a8 + qword_2542E69C0) = (v70 & 1) == 0;
  if ((v70 & 1) == 0)
    objc_msgSend(*(id *)(a8 + v59), sel_setShouldUseWALJournalMode_, 0);
  if ((v219 & 1) != 0)
  {
    v88 = v196;
    v89 = v221;
    v218(v196, v222, v221);
    v212(v88, v89);
    goto LABEL_21;
  }
  if ((objc_msgSend(*(id *)(a8 + v59), sel_setupPragmas) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v158 = objc_msgSend(*(id *)(a8 + v59), sel_lastError);
    if (v158)
    {
      v85 = v158;
      swift_release();
    }
    else
    {
      type metadata accessor for PQLSqliteError(0);
      v224 = 11;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C(&qword_2569E1FF0, (uint64_t (*)(uint64_t))type metadata accessor for PQLSqliteError, (uint64_t)&unk_23B1CE354);
      sub_23B1C5864();
      swift_release();
      v85 = aBlock;
    }
LABEL_19:
    swift_willThrow();
    sub_23AB23A94();
    swift_allocError();
    *(_QWORD *)v86 = v85;
    *(_BYTE *)(v86 + 48) = 1;
    v87 = v85;
    sub_23B13FCF4();
  }
  v71 = v196;
  v72 = v221;
  v218(v196, v222, v221);
  v73 = sub_23B1C58C4();
  v212(v71, v72);
  if ((v73 & 1) == 0)
  {
LABEL_21:
    *(_QWORD *)(a8 + qword_2542EDEC8) = 0;
    goto LABEL_22;
  }
  v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEDD630]), sel_init);
  v75 = v74;
  v76 = qword_2542EDEC8;
  *(_QWORD *)(a8 + qword_2542EDEC8) = v74;
  if (v74)
  {
    v218 = (void (*)(char *, uint64_t, uint64_t))v76;
    v77 = v220[17];
    v78 = *(_QWORD *)(v77 + 24);
    aBlock = *(id *)(v77 + 16);
    v226 = v78;
    v79 = v74;
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    v80 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    objc_msgSend(v79, sel_setLabel_, v80);

    v75 = *(void **)((char *)v218 + a8);
  }
  objc_msgSend(v75, sel_setStatementCacheMaxCount_, v57);
  if (v75)
  {
    v81 = (void *)sub_23B1C5954();
    aBlock = 0;
    v82 = objc_msgSend(v75, sel_openAtURL_withFlags_error_, v81, 65537, &aBlock);

    if (!v82)
    {
      v181 = aBlock;
      swift_bridgeObjectRelease();
      swift_release();
      v182 = (void *)sub_23B1C587C();

      swift_willThrow();
      sub_23AB23A94();
      swift_allocError();
      *(_QWORD *)v183 = v182;
      *(_BYTE *)(v183 + 48) = 1;
      v184 = v182;
      sub_23B13FCF4();
    }
    v83 = aBlock;
  }
LABEL_22:
  v90 = *(void **)(a8 + v59);
  v91 = *(void **)(a8 + qword_2542EDEC8);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E45D8);
  swift_allocObject();
  v92 = v91;
  v93 = v90;
  v94 = v220;
  swift_retain();
  v218 = (void (*)(char *, uint64_t, uint64_t))sub_23AEAAE9C(v93, v91, 0, (uint64_t)v94);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6A00);
  swift_allocObject();
  v95 = v216;
  swift_retain();
  v96 = v93;
  v97 = v92;
  v98 = sub_23AEAB130(v96, v91, 1, v95);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4C10);
  v99 = swift_allocObject();
  v210 = (char *)(v99 + 24);
  v100 = swift_weakInit();
  *(_QWORD *)(v99 + 16) = v96;
  v101 = (*(_QWORD *(**)(id *__return_ptr, uint64_t))(*v94 + 96))(&aBlock, v100);
  (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*(_QWORD *)v95 + 96))(&v224, v101);
  v102 = (uint64_t)aBlock;
  v103 = (id)v224;
  LOBYTE(v95) = v226;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
  v104 = swift_allocObject();
  v105 = v96;
  v106 = sub_23AEAB398(v105, v102, v95, v103, v104);

  swift_release();
  v107 = v94[17];
  v108 = *(_QWORD *)(v107 + 16);
  v109 = *(_QWORD *)(v107 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  swift_allocObject();
  v110 = v105;
  swift_bridgeObjectRetain();
  v111 = v109;
  v112 = v219;
  v113 = (void (*)(char *, uint64_t))sub_23AE567A4(v110, v108, v111, v219);
  type metadata accessor for SQLHistoryTable();
  v114 = swift_allocObject();
  *(_BYTE *)(v114 + 37) = 0;
  *(_WORD *)(v114 + 38) = -5120;
  *(_QWORD *)(v114 + 40) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v114 + 16) = v110;
  strcpy((char *)(v114 + 24), "D2DRestoreV2");
  *(_QWORD *)(a8 + qword_2542EDE60) = v114;
  v115 = v110;
  swift_release();
  v116 = v195;
  sub_23AA8EFC8(v217, v195, &qword_2542E4E70);
  swift_retain();
  swift_retain();
  v117 = (uint64_t)v218;
  swift_retain();
  swift_retain();
  swift_retain();
  v118 = sub_23AEAB860(v106, (uint64_t)v113, v117, v98, v99, v116, v112, a8);
  swift_release();
  v212 = v113;
  swift_release();
  swift_release();
  v208 = (_QWORD *)v98;
  swift_release();
  v207 = v99;
  swift_release();
  v119 = swift_allocObject();
  swift_weakInit();
  v120 = *(_QWORD *)(v106 + 112);
  *(_QWORD *)(v106 + 112) = sub_23AEAD448;
  *(_QWORD *)(v106 + 120) = v119;
  swift_retain();
  swift_retain();
  sub_23AAB7948(v120);
  v206 = qword_2542EE110;
  v121 = *(void **)(v118 + qword_2542EE110);
  v122 = swift_allocObject();
  swift_weakInit();
  v229 = sub_23AEAD450;
  v230 = v122;
  v123 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v226 = 1107296256;
  v227 = sub_23AC46D44;
  v228 = &block_descriptor_16;
  v124 = _Block_copy(&aBlock);
  v125 = v121;
  swift_release();
  objc_msgSend(v125, sel_setAutoRollbackHandlerForSwift_, v124);
  _Block_release(v124);

  v126 = *(void **)(v118 + qword_2542EDEC8);
  if (v126)
  {
    v127 = swift_allocObject();
    swift_weakInit();
    v229 = sub_23AEAD450;
    v230 = v127;
    aBlock = v123;
    v226 = 1107296256;
    v227 = sub_23AC46D44;
    v228 = &block_descriptor_5;
    v128 = _Block_copy(&aBlock);
    v129 = v126;
    swift_release();
    objc_msgSend(v129, sel_setAutoRollbackHandlerForSwift_, v128);
    _Block_release(v128);

  }
  swift_weakAssign();
  swift_weakAssign();
  if ((v219 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v157 = v221;
    v146 = v199;
    v147 = v215;
  }
  else
  {
    v210 = (char *)v106;
    v219 = v119;
    v130 = objc_msgSend(v213, sel_defaultStore);
    v131 = v206;
    v132 = *(void **)(v118 + v206);
    v133 = *(id *)(v118 + 64);
    v134 = v132;
    objc_msgSend(v130, sel_sqlDatabaseBatchDelay);
    objc_msgSend(v134, sel_useBatchingOnTargetQueue_delay_changeCount_, v133, objc_msgSend(v130, sel_sqlDatabaseBatchChangeCount), v135);

    v136 = *(void **)(v118 + v131);
    v137 = swift_allocObject();
    *(_QWORD *)(v137 + 16) = v136;
    v229 = sub_23AEAD468;
    v230 = v137;
    aBlock = v123;
    v226 = 1107296256;
    v227 = sub_23AE2CAF4;
    v228 = &block_descriptor_11;
    v138 = _Block_copy(&aBlock);
    v139 = v136;
    swift_release();
    objc_msgSend(v139, sel_setProfilingHookV2_, v138);
    _Block_release(v138);

    MEMORY[0x24BDAC7A8](v140);
    v141 = v194;
    *(&v192 - 6) = v118;
    *(&v192 - 5) = v141;
    v142 = v220;
    *(&v192 - 4) = v211;
    *(&v192 - 3) = (uint64_t)v142;
    *(&v192 - 2) = v216;
    v144 = v143;
    v145 = v199;
    sub_23AC494B4(0, 0, (uint64_t)"init(url:fsTree:fpTree:telemetry:options:creationReason:onError:)", 65, 2, (uint64_t)sub_23AEAD470, (uint64_t)(&v192 - 8));
    v146 = v145;
    v147 = v215;
    if (v145)
    {

      swift_bridgeObjectRelease();
      v223 = v145;
      v148 = v145;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      if (swift_dynamicCast())
      {

        sub_23AEAD484((uint64_t)&aBlock, (uint64_t)&v224);
        v149 = *(void **)(v118 + 64);
        swift_retain();
        v150 = v149;
        sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, v118);

        v151 = v150;
        sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
        swift_release();

        v152 = *(void (**)(uint64_t, void *))(v118 + qword_2542EDED8);
        sub_23AB23A94();
        v153 = (void *)swift_allocError();
        sub_23AEAD4C0(&v224, v154);
        v155 = swift_retain();
        v152(v155, v153);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_23AA8A05C(v217, &qword_2542E4E70);
        (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v222, v221);
        sub_23AC04DA4((uint64_t)&v224);
        swift_release();

        v156 = v223;
LABEL_45:

        swift_release();
        return v118;
      }

      aBlock = v145;
      v164 = v145;
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
      v165 = swift_dynamicCast();
      v166 = v221;
      if ((v165 & 1) != 0)
      {
        v167 = (id)v224;
        v168 = objc_msgSend((id)v224, sel_domain);
        v169 = sub_23B1C63E0();
        v171 = v170;

        if (v169 == sub_23B1C63E0() && v171 == v172)
        {
          swift_bridgeObjectRelease_n();
LABEL_44:

          v186 = *(void **)(v118 + 64);
          swift_retain();
          v187 = v186;
          sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, v118);

          v188 = v187;
          sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
          swift_release();

          v189 = *(void (**)(uint64_t, id))(v118 + qword_2542EDED8);
          swift_retain();
          v190 = v167;
          v189(v118, v190);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          sub_23AA8A05C(v217, &qword_2542E4E70);
          (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v222, v166);
          swift_release();
          v156 = aBlock;
          goto LABEL_45;
        }
        v185 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v185 & 1) != 0)
          goto LABEL_44;
        v173 = v145;

      }
      else
      {
        v173 = v145;
      }

      v174 = *(void **)(v118 + 64);
      swift_retain();
      v175 = v174;
      sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, v118);

      v176 = v175;
      sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);
      swift_release();

      v177 = *(void (**)(uint64_t, uint64_t))(v118 + qword_2542EDED8);
      sub_23AB23A94();
      v178 = swift_allocError();
      *(_QWORD *)v179 = v173;
      *(_BYTE *)(v179 + 48) = 2;
      swift_retain();
      v180 = v173;
      v177(v118, v178);
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_23AA8A05C(v217, &qword_2542E4E70);
      (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v222, v166);
      swift_release();
      v156 = (id)v178;
      goto LABEL_45;
    }

    swift_bridgeObjectRelease();
    v157 = v221;
  }
  v159 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v160 = sub_23B1C5E40();
  v161 = sub_23B1C6AB8();
  if (os_log_type_enabled(v160, v161))
  {
    v162 = (uint8_t *)swift_slowAlloc();
    v199 = v146;
    v163 = v162;
    *(_WORD *)v162 = 0;
    _os_log_impl(&dword_23AA66000, v160, v161, "database is ready", v162, 2u);
    MEMORY[0x23B8614BC](v163, -1, -1);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_23AA8A05C(v217, &qword_2542E4E70);
  (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v222, v157);
  (*(void (**)(char *, uint64_t))(v147 + 8))(v197, v214);
  swift_release();
  return v118;
}

uint64_t sub_23AE36A1C()
{
  uint64_t Strong;
  uint64_t v1;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return 0;
  v1 = *(unsigned __int8 *)(Strong + qword_256A079D0);
  swift_release();
  return v1;
}

uint64_t sub_23AE36A80(void *a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23AE37548(a1);
    return swift_release();
  }
  return result;
}

void sub_23AE36ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  uint64_t v18;
  unsigned int v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char v46;
  _BYTE *v47;
  double v48;
  double v49;
  void (*v50)(_BYTE *, uint64_t);
  double v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  double v55;
  double v56;
  double v57;
  id v58;
  char v59;
  _BYTE *v60;
  double v61;
  double v62;
  void (*v63)(_BYTE *, uint64_t);
  double v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  double v68;
  double v69;
  double v70;
  _BYTE v71[4];
  unsigned int v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  id aBlock;
  uint64_t v81;
  void (*v82)(uint64_t, void *);
  void *v83;
  void (*v84)();
  uint64_t v85;

  v78 = a5;
  v79 = a4;
  v9 = sub_23B1C5BDC();
  v75 = *(_QWORD *)(v9 - 8);
  v76 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v77 = &v71[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v71[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v71[-v15];
  if ((*(_BYTE *)(a1 + qword_2542E69C0) & 1) == 0)
  {
    v17 = *(void **)(a1 + qword_2542EE110);
    objc_msgSend(v17, sel_setSynchronousMode_, 1);
    if (objc_msgSend(v17, sel_synchronousMode) != (id)1)
LABEL_40:
      sub_23AFF0D24((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLDatabase.swift", 130, 2, 256, (void (*)(uint64_t))sub_23AEAD4FC);
  }
  v18 = qword_2542E6C58;
  *(_BYTE *)(a1 + qword_2542E6C58) = 0;
  v19 = sub_23AE3B108(a2, a3);
  if (v5)
  {
    *(_BYTE *)(a1 + v18) = 1;
    return;
  }
  v72 = v19;
  v73 = v14;
  *(_BYTE *)(a1 + v18) = 1;
  v20 = (id)fpfs_current_log();
  v21 = *(void **)(a1 + qword_2542EE110);
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v20;
  *(_QWORD *)(v23 + 24) = v22;
  v84 = sub_23AEAD508;
  v85 = v23;
  aBlock = (id)MEMORY[0x24BDAC760];
  v81 = 1107296256;
  v82 = sub_23ABFBCD8;
  v83 = &block_descriptor_20;
  v24 = _Block_copy(&aBlock);
  v74 = v11;
  v25 = v24;
  v26 = v20;
  swift_release();
  objc_msgSend(v21, sel_setPreFlushHook_, v25);
  _Block_release(v25);
  v27 = swift_allocObject();
  swift_weakInit();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v20;
  *(_QWORD *)(v28 + 24) = v27;
  v84 = sub_23AEAD514;
  v85 = v28;
  aBlock = (id)MEMORY[0x24BDAC760];
  v81 = 1107296256;
  v82 = sub_23ABFBCD8;
  v83 = &block_descriptor_27_0;
  v29 = _Block_copy(&aBlock);
  v30 = v26;
  swift_release();
  objc_msgSend(v21, sel_setPostFlushHook_, v29);
  _Block_release(v29);
  swift_storeEnumTagMultiPayload();
  sub_23AE42F64((uint64_t)v16);
  v31 = sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542DDFB0);
  v32 = *(_QWORD *)(a1 + 24);
  v33 = v79;
  (*(void (**)(id *__return_ptr, uint64_t))(*(_QWORD *)v79 + 96))(&aBlock, v31);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE408);
  v35 = (*(uint64_t (**)(id *, uint64_t, _QWORD))(*(_QWORD *)v32 + 288))(&aBlock, v34, 0);
  v36 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v33 + 424))(v35 & 1);
  v37 = v78;
  (*(void (**)(id *__return_ptr, uint64_t))(*(_QWORD *)v78 + 96))(&aBlock, v36);
  v38 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE410);
  v39 = (*(uint64_t (**)(id *, uint64_t, _QWORD))(*(_QWORD *)v32 + 280))(&aBlock, v38, 0);
  v40 = v39;

  v37[112] = v40 & 1;
  v41 = *(uint64_t (**)(void))(*(_QWORD *)v33 + 768);
  v42 = v41();
  if ((v42 & 1) != 0)
  {
    v43 = (uint64_t)v73;
    v44 = v76;
    goto LABEL_16;
  }
  v78 = v30;
  (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(a1 + 32) + 16) + 96))(&aBlock);
  v45 = aBlock;
  v46 = v81;
  v47 = v77;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v49 = v48;
  v44 = v76;
  v50 = *(void (**)(_BYTE *, uint64_t))(v75 + 8);
  v50(v47, v76);
  v51 = v49 * 1000000000.0;
  if ((~COERCE__INT64(v49 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v51 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v51 >= 9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v52 = (uint64_t)v51;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E0810);
  v53 = swift_allocObject();
  *(_BYTE *)(v53 + 144) = v46;
  *(_QWORD *)(v53 + 24) = 0;
  *(_QWORD *)(v53 + 32) = 0;
  *(_QWORD *)(v53 + 16) = 0;
  *(_BYTE *)(v53 + 40) = 1;
  *(_OWORD *)(v53 + 48) = 0u;
  *(_OWORD *)(v53 + 64) = 0u;
  *(_QWORD *)(v53 + 80) = 0;
  *(_OWORD *)(v53 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v53 + 104) = 0;
  *(_QWORD *)(v53 + 112) = 0;
  *(_QWORD *)(v53 + 120) = v52;
  *(_QWORD *)(v53 + 128) = 0;
  *(_QWORD *)(v53 + 136) = v45;
  v54 = v77;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v56 = v55;
  v50(v54, v44);
  v57 = v56 * 1000000000.0;
  if ((~COERCE__INT64(v56 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v43 = (uint64_t)v73;
  v30 = v78;
  if (v57 <= -9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v57 >= 9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  sub_23ADF3AAC(v53, (uint64_t)v57);
  v42 = swift_release();
LABEL_16:
  if (((*(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 16) + 272))(v42) & 1) == 0)
  {
    if ((v41() & 1) != 0)
      goto LABEL_26;
    v78 = v30;
    (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(a1 + 32) + 16) + 96))(&aBlock);
    v58 = aBlock;
    v59 = v81;
    v60 = v77;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v62 = v61;
    v63 = *(void (**)(_BYTE *, uint64_t))(v75 + 8);
    v63(v60, v44);
    v64 = v62 * 1000000000.0;
    if ((~COERCE__INT64(v62 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v64 > -9.22337204e18)
      {
        if (v64 < 9.22337204e18)
        {
          v65 = (uint64_t)v64;
          __swift_instantiateConcreteTypeFromMangledName(qword_2542E0660);
          v66 = swift_allocObject();
          *(_BYTE *)(v66 + 144) = v59;
          *(_QWORD *)(v66 + 24) = 0;
          *(_QWORD *)(v66 + 32) = 0;
          *(_QWORD *)(v66 + 16) = 0;
          *(_BYTE *)(v66 + 40) = 1;
          *(_OWORD *)(v66 + 48) = 0u;
          *(_OWORD *)(v66 + 64) = 0u;
          *(_QWORD *)(v66 + 80) = 0;
          *(_OWORD *)(v66 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v66 + 104) = 0;
          *(_QWORD *)(v66 + 112) = 0;
          *(_QWORD *)(v66 + 120) = v65;
          *(_QWORD *)(v66 + 128) = 0;
          *(_QWORD *)(v66 + 136) = v58;
          v67 = v77;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v69 = v68;
          v63(v67, v44);
          v70 = v69 * 1000000000.0;
          if ((~COERCE__INT64(v69 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            v30 = v78;
            if (v70 > -9.22337204e18)
            {
              if (v70 < 9.22337204e18)
              {
                sub_23ADF3AAC(v66, (uint64_t)v70);
                swift_release();
                goto LABEL_26;
              }
              goto LABEL_39;
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 33) = 0;
LABEL_26:
  swift_storeEnumTagMultiPayload();
  sub_23AE42F64(v43);
  sub_23AA8A05C(v43, (uint64_t *)&unk_2542DDFB0);
  if ((v72 & 1) == 0)
    sub_23AE37754();

}

uint64_t sub_23AE372E0(uint64_t a1)
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  objc_msgSend(*(id *)(a1 + qword_2542EE110), sel_synchronousMode);
  type metadata accessor for PQLSynchronousMode(0);
  sub_23B1C7028();
  sub_23B1C64F4();
  return 0;
}

void sub_23AE37398()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (id)fpfs_adopt_log();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_storeEnumTagMultiPayload();
    sub_23AE42F64((uint64_t)v2);
    sub_23AA8A05C((uint64_t)v2, (uint64_t *)&unk_2542DDFB0);
    swift_release();
  }
  v4 = (id)fpfs_adopt_log();

}

void sub_23AE374C4()
{
  id v0;
  id v1;

  v0 = (id)fpfs_adopt_log();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23AE3814C();
    swift_release();
  }
  v1 = (id)fpfs_adopt_log();

}

void sub_23AE37548(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  _QWORD v16[5];

  v3 = sub_23B1C5E4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = a1;
    v8 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v9 = a1;
    v10 = sub_23B1C5E40();
    v11 = sub_23B1C6AAC();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v16[1] = v1;
      v13 = (uint8_t *)v12;
      v14 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v13 = 138412290;
      v16[0] = v13 + 4;
      swift_getErrorValue();
      v15 = sub_23B0D9CF0(v16[4]);
      v16[2] = v15;
      sub_23B1C6CBC();
      *v14 = v15;

      _os_log_impl(&dword_23AA66000, v10, v11, "Fatal I/O or memory error in Prequelite: %@", v13, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v14, -1, -1);
      MEMORY[0x23B8614BC](v13, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_23AE3F7B8(a1, 1, (uint64_t)"autoRollbackHandler(error:)", 27, 2);

  }
}

void sub_23AE37754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;

  v2 = v0;
  v65 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v65);
  v66 = (_QWORD *)((char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_23B1C5BDC();
  v72 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v71 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B1C5E4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v58 - v10;
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v2 + 56);
  ObjectType = swift_getObjectType();
  v15 = sub_23AEBBAC0(ObjectType, v13);
  if (v1)
    return;
  v70 = v11;
  v62 = v9;
  v73 = v5;
  v74 = v6;
  v59 = ObjectType;
  v60 = v12;
  v61 = v13;
  v16 = v15;
  if (fpfs_supports_pkg_dataless_escape_prevention())
    v17 = 7;
  else
    v17 = 5;
  v64 = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  inited = swift_initStackObject();
  v19 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 24) = v19;
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v19;
  *(_QWORD *)(inited + 48) = 0;
  if (fpfs_supports_pkg_dataless_escape_prevention())
    v21 = 7;
  else
    v21 = 5;
  v63 = v16;
  v22 = v21 & ~v16;
  if (v22)
  {
    *(_QWORD *)&v20 = 136315138;
    v69 = v20;
    v68 = MEMORY[0x24BEE4AD8] + 8;
    v24 = v71;
    v23 = v72;
    v25 = v73;
    do
    {
      v26 = __clz(__rbit64(v22));
      v27 = v22 & ~(1 << v26);
      if (((1 << v26) & v22) == 0)
        v27 = v22;
      v28 = v26 >= 0x40;
      if (v26 >= 0x40)
        v29 = 0;
      else
        v29 = 1 << v26;
      *(_QWORD *)&v75 = v29;
      if (!v28)
        v22 = v27;
      v30 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v31 = sub_23B1C5E40();
      v32 = sub_23B1C6A94();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v34 = swift_slowAlloc();
        v76 = v34;
        *(_DWORD *)v33 = v69;
        v35 = sub_23AF157D0(v75);
        *(_QWORD *)(v33 + 4) = sub_23AABEC68(v35, v36, &v76);
        v25 = v73;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v31, v32, "feature flag has been enabled: %s", (uint8_t *)v33, 0xCu);
        swift_arrayDestroy();
        v37 = v34;
        v23 = v72;
        MEMORY[0x23B8614BC](v37, -1, -1);
        v38 = v33;
        v24 = v71;
        MEMORY[0x23B8614BC](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v25);
      sub_23AE37DB4(v75, (_QWORD *)inited);
    }
    while (v22);
  }
  else
  {
    v24 = v71;
    v23 = v72;
  }
  v58[1] = v2;
  v70 = 0;
  v39 = v63 & ~v64;
  if (v39)
  {
    *(_QWORD *)&v20 = 136315138;
    v75 = v20;
    v40 = v62;
    do
    {
      v41 = __clz(__rbit64(v39));
      v42 = v39 & ~(1 << v41);
      if (((1 << v41) & v39) == 0)
        v42 = v39;
      if (v41 >= 0x40)
        v43 = 0;
      else
        v43 = 1 << v41;
      if (v41 < 0x40)
        v39 = v42;
      v44 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v45 = sub_23B1C5E40();
      v46 = sub_23B1C6AA0();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc();
        v48 = swift_slowAlloc();
        v76 = v48;
        *(_DWORD *)v47 = v75;
        v49 = sub_23AF157D0(v43);
        *(_QWORD *)(v47 + 4) = sub_23AABEC68(v49, v50, &v76);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v45, v46, "Unsupported %s state, was the feature enabled and turned off?", (uint8_t *)v47, 0xCu);
        swift_arrayDestroy();
        v51 = v48;
        v24 = v71;
        MEMORY[0x23B8614BC](v51, -1, -1);
        v52 = v47;
        v23 = v72;
        MEMORY[0x23B8614BC](v52, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v74 + 8))(v40, v73);
    }
    while (v39);
  }
  v53 = v70;
  if (v64 == v63)
    goto LABEL_35;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v55 = v54;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v67);
  v56 = v55 * 1000000000.0;
  if ((~COERCE__INT64(v55 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v56 <= -9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v56 >= 9.22337204e18)
  {
LABEL_45:
    __break(1u);
    return;
  }
  sub_23ADF691C((_QWORD *)inited, (uint64_t)v56, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
  if (!v53)
  {
    v57 = (uint64_t)v66;
    *v66 = v64;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v57, v59);
    sub_23AA937BC(v57, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    sub_23AABA3E0();
LABEL_35:
    swift_release();
    return;
  }
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_23AE37DB4(unint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  uint64_t *v21;
  double v22;
  double v23;
  double v24;
  unint64_t v26;
  char v27;

  v5 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 4)
  {
    (*(void (**)(unint64_t *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v2 + 40) + 16) + 96))(&v26, v7);
    a1 = v26;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v20 = v19 * 1000000000.0;
    if ((~COERCE__INT64(v19 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v20 <= -9.22337204e18)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    if (v20 >= 9.22337204e18)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v14 = (uint64_t)v20;
    v21 = qword_2542E0770;
LABEL_16:
    __swift_instantiateConcreteTypeFromMangledName(v21);
    v15 = swift_allocObject();
    v16 = v15;
    *(_QWORD *)(v15 + 136) = a1;
    *(_QWORD *)(v15 + 24) = 0;
    *(_QWORD *)(v15 + 32) = 0;
    *(_QWORD *)(v15 + 16) = 0;
    *(_BYTE *)(v15 + 40) = 1;
    *(_OWORD *)(v15 + 48) = 0u;
    *(_OWORD *)(v15 + 64) = 0u;
    *(_QWORD *)(v15 + 80) = 0;
    *(_OWORD *)(v15 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v15 + 104) = 0;
    v17 = 19;
    goto LABEL_17;
  }
  if (a1 != 2)
  {
    if (a1 != 1)
      goto LABEL_27;
    (*(void (**)(unint64_t *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v2 + 40) + 16) + 96))(&v26, v7);
    a1 = v26;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v24 = v23 * 1000000000.0;
    if ((~COERCE__INT64(v23 * 1000000000.0) & 0x7FF0000000000000) == 0)
      goto LABEL_20;
    if (v24 <= -9.22337204e18)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v24 >= 9.22337204e18)
    {
LABEL_26:
      __break(1u);
LABEL_27:
      sub_23AFF2E68((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLDatabase.swift", 130, 2, 362, a1);
    }
    v14 = (uint64_t)v24;
    v21 = (uint64_t *)&unk_2542E0800;
    goto LABEL_16;
  }
  (*(void (**)(unint64_t *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v2 + 32) + 16) + 96))(&v26, v7);
  a1 = v26;
  v10 = v27;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v13 = v12 * 1000000000.0;
  if ((~COERCE__INT64(v12 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v14 = (uint64_t)v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E98);
  v15 = swift_allocObject();
  v16 = v15;
  *(_QWORD *)(v15 + 136) = a1;
  *(_BYTE *)(v15 + 144) = v10;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 32) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_BYTE *)(v15 + 40) = 1;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_QWORD *)(v15 + 80) = 0;
  *(_OWORD *)(v15 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v15 + 104) = 0;
  v17 = 18;
LABEL_17:
  *(_QWORD *)(v15 + 112) = 0;
  *(_QWORD *)(v15 + 120) = v14;
  *(_QWORD *)(v16 + 128) = 0;
  (*(void (**)(uint64_t))(*a2 + 8 * v17))(v16);
  return swift_release();
}

id sub_23AE3810C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23AFB0DA4(a1, a2);
  return objc_msgSend(*(id *)(v2 + qword_2542EE110), sel_makeNextFlushBarrierFSync);
}

id sub_23AE38134()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_2542EE110), sel_makeNextFlushBarrierFSync);
}

uint64_t sub_23AE3814C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  void *v19;
  int v20;
  id v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  id v29;
  NSObject *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  id v54;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B1C5DC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v48 - v13;
  v15 = type metadata accessor for Signpost(0);
  result = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + qword_2542EDF88) & 1) == 0)
  {
    v51 = v2;
    if (qword_2542E6818 != -1)
      swift_once();
    v19 = (void *)qword_2542EDD28;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
    sub_23AA8EFC8((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_2542E67B8);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5);
    v50 = v3;
    if (v20 == 1)
    {
      v21 = v19;
      sub_23B1C5DB0();
      sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E67B8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v18, v8, v5);
    v49 = *(int *)(v15 + 20);
    *(_QWORD *)&v18[v49] = v19;
    v22 = &v18[*(int *)(v15 + 24)];
    *(_QWORD *)v22 = "DB queue";
    *((_QWORD *)v22 + 1) = 8;
    v52 = v18;
    v48 = v22;
    v22[16] = 2;
    v23 = v19;
    sub_23B1C6BE4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_23B1CA760;
    *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v24 + 64) = sub_23AAA0D14();
    *(_QWORD *)(v24 + 32) = 0x73756C6620646964;
    *(_QWORD *)(v24 + 40) = 0xE900000000000068;
    v46 = v24;
    v45 = 2;
    v44 = 2;
    v25 = (uint64_t)v52;
    sub_23B1C5D98();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E67B8);
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 192) + 16))
    {
      *(_QWORD *)(v1 + 200) = 0;
      v26 = swift_unknownObjectRelease();
      (*(void (**)(uint64_t))(**(_QWORD **)(v1 + 24) + 424))(v26);
    }
    v27 = (_QWORD *)(v1 + qword_2542EE020);
    result = swift_beginAccess();
    if (*v27 == -1)
    {
      __break(1u);
    }
    else
    {
      ++*v27;
      v28 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
      v29 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v30 = v28;
      v31 = sub_23B1C5E40();
      v32 = sub_23B1C6A94();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v33 = 138412290;
        v25 = (uint64_t)v52;
        v35 = -[NSObject enter](v30, sel_enter);
        v54 = v35;
        sub_23B1C6CBC();
        *v34 = v35;

        _os_log_impl(&dword_23AA66000, v31, v32, "%@ db was flushed (commit)", v33, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v34, -1, -1);
        MEMORY[0x23B8614BC](v33, -1, -1);
      }
      else
      {

        v31 = v30;
      }
      v37 = v50;
      v36 = v51;

      (*(void (**)(char *, uint64_t))(v37 + 8))(v53, v36);
      v38 = qword_2542E69B8;
      if (*(_QWORD *)(v1 + qword_2542E69B8))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_23B1C6BA8();
        swift_unknownObjectRelease();
      }
      *(_QWORD *)(v1 + v38) = 0;
      swift_unknownObjectRelease();
      v39 = (uint64_t *)(v1 + qword_2542E69D0);
      swift_beginAccess();
      v40 = *v39;
      *v39 = MEMORY[0x24BEE4AF8];
      v41 = *(_QWORD *)(v1 + 160);
      *(_QWORD *)(v41 + 32) = 0;
      *(_QWORD *)(v41 + 40) = 0;
      *(_WORD *)(v41 + 48) = 0;
      if (*(uint64_t *)(v41 + 16) > 0
        || (v42 = v1 + qword_2542EDF80, v43 = swift_beginAccess(), *(_QWORD *)(*(_QWORD *)v42 + 16)))
      {
        *(_QWORD *)(v41 + 16) = 0;
        v43 = sub_23AE3F3E0((uint64_t)sub_23AEB3D74, v1);
      }
      if (*(_QWORD *)(v40 + 16))
      {
        MEMORY[0x24BDAC7A8](v43);
        v46 = v40;
        v47 = v1;
        sub_23AE3F3E0((uint64_t)sub_23AEB3D8C, (uint64_t)&v44);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_23AAD2D6C(v30);

      sub_23B1C6BD8();
      sub_23B1C5DA4();
      return sub_23AA937BC(v25, type metadata accessor for Signpost);
    }
  }
  return result;
}

uint64_t sub_23AE38828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_23AE42F64((uint64_t)v3);
  result = sub_23AA8A05C((uint64_t)v3, (uint64_t *)&unk_2542DDFB0);
  if (!v0)
    return sub_23AABA3E0();
  return result;
}

uint64_t sub_23AE388D0(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  void *v12;
  void (**v13)(uint64_t);
  void (*v14)(uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  void (**v19)(uint64_t);
  void (**v20)(uint64_t);
  uint64_t v21;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return sub_23AABA3E0();
  v21 = qword_2542EDE90;
  v19 = (void (**)(uint64_t))((char *)a2 + qword_2542EDEB0);
  v6 = qword_2542EDEA8;
  v20 = (void (**)(uint64_t))((char *)a2 + qword_2542EDEB8);
  for (i = swift_bridgeObjectRetain() + 40; ; i += 16)
  {
    v10 = *(void (**)(void))(i - 8);
    v11 = swift_retain();
    v12 = (void *)MEMORY[0x23B8601A8](v11);
    v10();
    if (v3)
      break;
    sub_23AE38ACC();
    v3 = 0;
    v13 = v20;
    if ((*((_BYTE *)a2 + v21) & 1) != 0)
    {
      v14 = *v19;
      if (*v19)
      {
        v15 = swift_retain();
        v14(v15);
        sub_23AAB7948((uint64_t)v14);
        v13 = v20;
      }
      *((_BYTE *)a2 + v21) = 0;
    }
    if (*((_BYTE *)a2 + v6) == 1)
    {
      v16 = *v13;
      if (*v13)
      {
        v17 = swift_retain();
        v16(v17);
        sub_23AAB7948((uint64_t)v16);
      }
      *((_BYTE *)a2 + v6) = 0;
    }
    v8 = (*(uint64_t (**)(void))(*a2[2] + 504))();
    v9 = (*(uint64_t (**)(uint64_t))(*a2[4] + 696))(v8);
    (*(void (**)(uint64_t))(*a2[5] + 696))(v9);
    objc_autoreleasePoolPop(v12);
    swift_release();
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return sub_23AABA3E0();
    }
  }
  objc_autoreleasePoolPop(v12);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AE38ACC()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  int v25;
  uint64_t result;
  int v27;
  _QWORD *v28;
  int v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint8_t *v37;
  id v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(uint64_t *);
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  _BOOL4 v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint8_t *v67;
  void *v68;
  _QWORD *v69;
  void *v70;
  _BOOL4 v71;
  uint64_t v72;
  _QWORD *v73;
  id v74;
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  void *v83;
  uint64_t v84;
  int v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96[3];
  uint64_t v97;
  _UNKNOWN **v98;
  uint64_t v99;
  uint64_t v100;

  v2 = v1;
  v92 = sub_23B1C5E4C();
  v91 = *(_QWORD *)(v92 - 8);
  v3 = MEMORY[0x24BDAC7A8](v92);
  v90 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v89 = (char *)&v86 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v88 = (char *)&v86 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v86 = (char *)&v86 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v86 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v13 = *(char **)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v0;
  v16 = v0 + qword_2542EDF98;
  swift_beginAccess();
  v17 = *(_QWORD *)v16;
  if (!*(_QWORD *)(*(_QWORD *)v16 + 16))
  {
LABEL_10:
    v24 = v94;
    if ((fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v94 + 168) + 16)) & 1) != 0)
      v25 = 1;
    else
      v25 = *(unsigned __int8 *)(v24 + 152);
    v27 = v25 ^ 1;
    v28 = (_QWORD *)(v24 + qword_2542EDFA0);
    if (*(_OWORD *)(v24 + qword_2542EDFA0) == 0 || (v29 = v25 ^ 1, (~*(_DWORD *)(v24 + 80) & 0x1C0) == 0))
      v29 = 0;
    v30 = (_QWORD *)(v24 + qword_2542EDFC8);
    if (*(_OWORD *)(v24 + qword_2542EDFC8) == 0 || (~*(_DWORD *)(v24 + 80) & 0x1C0) == 0)
      v27 = 0;
    v31 = v24 + qword_2542EDFD8;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v31 + 16))
      v32 = 1;
    else
      v32 = v29;
    if ((v32 & 1) == 0 && !v27)
      goto LABEL_46;
    LODWORD(v93) = v25;
    result = sub_23AE14428(1);
    if (v1)
      return result;
    if ((result & 1) == 0)
      goto LABEL_45;
    v25 = (int)v93;
    if (v29)
    {
      if (*(_BYTE *)(v24 + 89) == 1)
      {
        v85 = 0;
        v84 = 1314;
        goto LABEL_79;
      }
      v33 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v34 = sub_23B1C5E40();
      v35 = sub_23B1C6AA0();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v36 = 0;
        _os_log_impl(&dword_23AA66000, v34, v35, "🤯  job scheduler is stable, upload jobs are not!", v36, 2u);
        v37 = v36;
        v24 = v94;
        MEMORY[0x23B8614BC](v37, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v92);
      *v28 = 0;
      v28[1] = 0;
      *(int64x2_t *)(v24 + qword_2542EDFD0) = vdupq_n_s64(1uLL);
      v25 = (int)v93;
    }
    if (!v27)
    {
LABEL_37:
      if (!*(_QWORD *)(*(_QWORD *)v31 + 16))
      {
LABEL_46:
        v52 = v24 + 192;
        result = swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)(v24 + 192) + 16))
        {
          v53 = *(_QWORD **)(v24 + 136);
          v54 = (void *)swift_retain();
          if (objc_sync_enter(v54))
            sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v53);
          swift_beginAccess();
          if (*(_QWORD *)(v53[2] + 16))
          {
            v55 = 0;
          }
          else
          {
            swift_beginAccess();
            v55 = *(_QWORD *)(v53[4] + 16) == 0;
          }
          if (objc_sync_exit(v53))
            sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v53);
          result = swift_release();
          if (((v55 | v25) & 1) == 0)
          {
            LODWORD(v93) = v25;
            v56 = type metadata accessor for StringDumper();
            v57 = (_QWORD *)swift_allocObject();
            v57[4] = 0;
            v57[5] = 0xE000000000000000;
            v57[2] = 0;
            v57[3] = 0xE000000000000000;
            v97 = v56;
            v98 = &off_250C01AF0;
            v96[0] = (uint64_t)v57;
            MEMORY[0x24BDAC7A8](v57);
            *(&v86 - 4) = (char *)v53;
            *(&v86 - 3) = (char *)v96;
            LOBYTE(v84) = 1;
            swift_retain();
            sub_23AC45210(v53, (void (*)(void))sub_23AEB3DC0);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
            if ((*(_BYTE *)(v24 + 81) & 4) != 0)
            {
              swift_retain();
              sub_23AFF289C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 106, 2, 1347, (uint64_t)v57);
            }
            v58 = (id)fpfs_current_or_default_log();
            v59 = v89;
            sub_23B1C5E58();
            swift_retain();
            v60 = sub_23B1C5E40();
            v61 = sub_23B1C6AAC();
            if (os_log_type_enabled(v60, v61))
            {
              v62 = swift_slowAlloc();
              v88 = v1;
              v63 = (uint8_t *)v62;
              v64 = swift_slowAlloc();
              v96[0] = v64;
              *(_DWORD *)v63 = 136315138;
              v87 = (char *)(v63 + 4);
              swift_beginAccess();
              v65 = v57[2];
              v66 = v57[3];
              swift_bridgeObjectRetain();
              v99 = sub_23AABEC68(v65, v66, v96);
              sub_23B1C6CBC();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23AA66000, v60, v61, "🤯  there is no running jobs but the FS job lock is not empty!\n%s", v63, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B8614BC](v64, -1, -1);
              v67 = v63;
              v2 = v88;
              MEMORY[0x23B8614BC](v67, -1, -1);

              (*(void (**)(char *, uint64_t))(v91 + 8))(v89, v92);
            }
            else
            {

              swift_release();
              (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v92);
            }
            v68 = (void *)swift_retain();
            sub_23B0DB3D8(v68, (uint64_t)v53);
            v24 = v94;
            sub_23AE2C874();
            result = swift_release();
            v25 = (int)v93;
          }
        }
        if (!*(_QWORD *)(*(_QWORD *)v52 + 16))
        {
          v69 = *(_QWORD **)(v24 + 144);
          v70 = (void *)swift_retain();
          if (objc_sync_enter(v70))
            sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v69);
          swift_beginAccess();
          if (*(_QWORD *)(v69[2] + 16))
          {
            v71 = 0;
          }
          else
          {
            swift_beginAccess();
            v71 = *(_QWORD *)(v69[4] + 16) == 0;
          }
          if (objc_sync_exit(v69))
            sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v69);
          result = swift_release();
          if (((v71 | v25) & 1) == 0)
          {
            v72 = type metadata accessor for StringDumper();
            v73 = (_QWORD *)swift_allocObject();
            v73[4] = 0;
            v73[5] = 0xE000000000000000;
            v73[2] = 0;
            v73[3] = 0xE000000000000000;
            v97 = v72;
            v98 = &off_250C01AF0;
            v96[0] = (uint64_t)v73;
            MEMORY[0x24BDAC7A8](v73);
            *(&v86 - 4) = (char *)v69;
            *(&v86 - 3) = (char *)v96;
            LOBYTE(v84) = 1;
            swift_retain();
            sub_23AC45210(v69, sub_23AEB3DA4);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
            if ((*(_BYTE *)(v94 + 81) & 4) != 0)
            {
              swift_retain();
              sub_23AFF28B0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 106, 2, 1361, (uint64_t)v73);
            }
            v74 = (id)fpfs_current_or_default_log();
            v75 = v90;
            sub_23B1C5E58();
            swift_retain();
            v76 = sub_23B1C5E40();
            v77 = sub_23B1C6AAC();
            if (os_log_type_enabled(v76, v77))
            {
              v78 = swift_slowAlloc();
              v93 = v2;
              v79 = (uint8_t *)v78;
              v80 = swift_slowAlloc();
              v100 = v80;
              *(_DWORD *)v79 = 136315138;
              swift_beginAccess();
              v81 = v73[2];
              v82 = v73[3];
              swift_bridgeObjectRetain();
              v95 = sub_23AABEC68(v81, v82, &v100);
              sub_23B1C6CBC();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23AA66000, v76, v77, "🤯  there is no running jobs but the FP job lock is not empty!\n%s", v79, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B8614BC](v80, -1, -1);
              MEMORY[0x23B8614BC](v79, -1, -1);

              (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
            }
            else
            {

              swift_release();
              (*(void (**)(char *, uint64_t))(v91 + 8))(v75, v92);
            }
            v83 = (void *)swift_retain();
            sub_23B0DB3FC(v83, (uint64_t)v69);
            sub_23AE2C874();
            return swift_release();
          }
        }
        return result;
      }
      v43 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v44 = sub_23B1C5E40();
      v45 = sub_23B1C6AB8();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_23AA66000, v44, v45, "🚀  job scheduler is stable, calling the stabilization waiters", v46, 2u);
        MEMORY[0x23B8614BC](v46, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v91 + 8))(v88, v92);
      v47 = *(_QWORD *)v31;
      v48 = *(_QWORD *)(*(_QWORD *)v31 + 16);
      if (v48)
      {
        swift_bridgeObjectRetain();
        v49 = v47 + 48;
        do
        {
          v50 = *(_QWORD *)(v49 - 16);
          v51 = *(void (**)(uint64_t *))(v49 - 8);
          v49 += 24;
          v96[0] = 0;
          sub_23AA93780(v50);
          swift_retain();
          v51(v96);
          sub_23AC03BE4(v50);
          swift_release();
          --v48;
        }
        while (v48);
        swift_bridgeObjectRelease();
        v24 = v94;
      }
      *(_QWORD *)v31 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRelease();
LABEL_45:
      v25 = (int)v93;
      goto LABEL_46;
    }
    if (*(_BYTE *)(v24 + 89) != 1)
    {
      v38 = (id)fpfs_current_or_default_log();
      v39 = v86;
      sub_23B1C5E58();
      v40 = sub_23B1C5E40();
      v41 = sub_23B1C6AA0();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_23AA66000, v40, v41, "🤯  job scheduler is stable, download jobs are not!", v42, 2u);
        v39 = v86;
        MEMORY[0x23B8614BC](v42, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v91 + 8))(v39, v92);
      *v30 = 0;
      v30[1] = 0;
      *(int64x2_t *)(v24 + qword_2542EDFE0) = vdupq_n_s64(1uLL);
      v25 = (int)v93;
      goto LABEL_37;
    }
    v85 = 0;
    v84 = 1324;
LABEL_79:
    result = sub_23B1C704C();
    __break(1u);
    return result;
  }
  v18 = MEMORY[0x24BEE4AF8];
  v93 = v13;
  while (1)
  {
    *(_QWORD *)v16 = v18;
    v19 = *(_QWORD *)(v17 + 16);
    if (v19)
      break;
    swift_bridgeObjectRelease();
LABEL_9:
    v17 = *(_QWORD *)v16;
    if (!*(_QWORD *)(*(_QWORD *)v16 + 16))
      goto LABEL_10;
  }
  v20 = v17 + ((v13[80] + 32) & ~(unint64_t)v13[80]);
  v21 = *((_QWORD *)v13 + 9);
  while (1)
  {
    v22 = sub_23AA8EFC8(v20, (uint64_t)v15, (uint64_t *)&unk_2542DDFB0);
    v23 = (void *)MEMORY[0x23B8601A8](v22);
    sub_23AE6B51C((uint64_t)v15, v94);
    if (v1)
      break;
    objc_autoreleasePoolPop(v23);
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542DDFB0);
    v20 += v21;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      v13 = v93;
      v18 = MEMORY[0x24BEE4AF8];
      goto LABEL_9;
    }
  }
  objc_autoreleasePoolPop(v23);
  swift_bridgeObjectRelease();
  return sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542DDFB0);
}

uint64_t sub_23AE398AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  v0 = sub_23AE39D3C();
  swift_release();
  sub_23AD7D9A8(v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E45D8);
  v2 = swift_dynamicCastClassUnconditional();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2138);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = &off_250C01FD8;
  *(_QWORD *)(inited + 32) = v2;
  swift_retain();
  sub_23AD7D9A8(inited);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6A00);
  v5 = swift_dynamicCastClassUnconditional();
  v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 64) = &off_250C01FD8;
  *(_QWORD *)(v6 + 32) = v5;
  swift_retain();
  sub_23AD7D9A8(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
  v8 = swift_dynamicCastClassUnconditional();
  v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v9 + 56) = v7;
  *(_QWORD *)(v9 + 64) = &off_250C0D4A8;
  *(_QWORD *)(v9 + 32) = v8;
  swift_retain();
  sub_23AD7D9A8(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4C10);
  v11 = swift_dynamicCastClassUnconditional();
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v12 + 56) = v10;
  *(_QWORD *)(v12 + 64) = &off_250C0BEE0;
  *(_QWORD *)(v12 + 32) = v11;
  swift_unknownObjectRetain();
  sub_23AD7D9A8(v12);
  swift_retain();
  v13 = sub_23AE3A004();
  swift_release();
  sub_23AD7D9A8(v13);
  return v15;
}

void sub_23AE39B60()
{
  sub_23AEAA874();
}

void sub_23AE39B94()
{
  type metadata accessor for SQLJobRegistry();
}

void sub_23AE39BBC(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_23AF9C8AC(a1, (uint64_t)&off_250C08750);
  sub_23AD7D9A8(v1);
  sub_23AEAD360();
}

void sub_23AE39BDC()
{
  type metadata accessor for SQLSnapshot();
}

void sub_23AE39BF4(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_23AF9C8AC(a1, (uint64_t)&off_250C01FD8);
  sub_23AD7D9A8(v1);
  sub_23AEAD3C0();
}

void sub_23AE39C18()
{
  type metadata accessor for SQLSnapshot();
}

void sub_23AE39C30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23AF9C8AC(a1, v1);
  sub_23AD7D9A8(v2);
  type metadata accessor for SQLReconciliationTable();
}

void sub_23AE39C5C(uint64_t a1)
{
  uint64_t v2;

  swift_dynamicCastClassUnconditional();
  v2 = sub_23AF9C8AC(a1, (uint64_t)&off_250C0D4A8);
  sub_23AD7D9A8(v2);
  type metadata accessor for SQLSyncStateTable();
}

uint64_t sub_23AE39CB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  swift_dynamicCastClassUnconditional();
  v2 = sub_23AF9C8AC(a1, (uint64_t)&off_250C0BEE0);
  sub_23AD7D9A8(v2);
  swift_retain();
  v3 = sub_23AE3A004();
  swift_release();
  sub_23AD7D9A8(v3);
  return v5;
}

uint64_t sub_23AE39D3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  int64_t v20;
  uint64_t result;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _QWORD v26[16];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2138);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v1 + 56) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  *(_QWORD *)(v1 + 64) = &off_250C08750;
  *(_QWORD *)(v1 + 32) = v0;
  v25 = xmmword_23B1D3B90;
  v2 = v0[3];
  v26[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4CD0);
  v26[4] = &off_250BE5580;
  v26[0] = v2;
  v3 = v0[4];
  v26[8] = __swift_instantiateConcreteTypeFromMangledName(qword_2542E4CD8);
  v26[9] = &off_250BE5580;
  v26[5] = v3;
  v4 = v0[5];
  v26[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4FA0);
  v26[14] = &off_250C1C040;
  v26[10] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v5 = 0;
  v6 = v26;
  while (v5 < (unint64_t)v25)
  {
    sub_23AA77B28((uint64_t)v6, (uint64_t)v22);
    v7 = v23;
    v8 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v9 = sub_23AF9C8AC(v7, v8);
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v1 + 16);
    v12 = v11 + v10;
    if (__OFADD__(v11, v10))
      goto LABEL_24;
    v13 = v9;
    if (v12 > *(_QWORD *)(v1 + 24) >> 1)
    {
      if (v11 <= v12)
        v20 = v11 + v10;
      else
        v20 = *(_QWORD *)(v1 + 16);
      v1 = (uint64_t)sub_23AF995C0((_QWORD *)1, v20, 1, (_QWORD *)v1);
      if (*(_QWORD *)(v13 + 16))
      {
LABEL_8:
        v14 = *(_QWORD *)(v1 + 16);
        if ((*(_QWORD *)(v1 + 24) >> 1) - v14 < v10)
          goto LABEL_26;
        v15 = v1 + 40 * v14 + 32;
        if (v13 + 32 < v15 + 40 * v10 && v15 < v13 + 32 + 40 * v10)
          goto LABEL_28;
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E19C8);
        swift_arrayInitWithCopy();
        if (v10)
        {
          v17 = *(_QWORD *)(v1 + 16);
          v18 = __OFADD__(v17, v10);
          v19 = v17 + v10;
          if (v18)
            goto LABEL_27;
          *(_QWORD *)(v1 + 16) = v19;
        }
        goto LABEL_3;
      }
    }
    else if (v10)
    {
      goto LABEL_8;
    }
    if (v10)
      goto LABEL_25;
LABEL_3:
    ++v5;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    v6 += 5;
    if (v5 == 3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_2542E19C8);
      swift_arrayDestroy();
      return v1;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AE3A004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2138);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v1 + 56) = type metadata accessor for SQLHistoryTable();
  *(_QWORD *)(v1 + 64) = &off_250C09810;
  *(_QWORD *)(v1 + 32) = v0;
  v12 = v1;
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      sub_23AA77B28(v4, (uint64_t)v9);
      v5 = v10;
      v6 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      v7 = sub_23AF9C8AC(v5, v6);
      sub_23AD7D9A8(v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    swift_retain();
  }
  return v1;
}

uint64_t sub_23AE3A100(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_23AE3A148(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t sub_23AE3A190(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2);
}

uint64_t sub_23AE3A1D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t sub_23AE3A220(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t sub_23AE3A268(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
}

uint64_t sub_23AE3A2B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
}

uint64_t sub_23AE3A2F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

uint64_t sub_23AE3A340(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2);
}

uint64_t sub_23AE3A388(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v2);
}

uint64_t sub_23AE3A3D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2);
}

uint64_t sub_23AE3A418(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 112))(v1, v2);
}

uint64_t sub_23AE3A460(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
}

uint64_t sub_23AE3A4A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2);
}

uint64_t sub_23AE3A4F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
}

uint64_t sub_23AE3A538(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 144))(v1, v2);
}

uint64_t sub_23AE3A580(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2);
}

uint64_t sub_23AE3A5C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 160))(v1, v2);
}

uint64_t sub_23AE3A610(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 168))(v1, v2);
}

uint64_t sub_23AE3A658(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 176))(v1, v2);
}

uint64_t sub_23AE3A6A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 184))(v1, v2);
}

uint64_t sub_23AE3A6E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 192))(v1, v2);
}

uint64_t sub_23AE3A730(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 200))(v1, v2);
}

uint64_t sub_23AE3A778(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 208))(v1, v2);
}

uint64_t sub_23AE3A7C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 216))(v1, v2);
}

uint64_t sub_23AE3A808(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 224))(v1, v2);
}

uint64_t sub_23AE3A850(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 232))(v1, v2);
}

uint64_t sub_23AE3A898(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 240))(v1, v2);
}

uint64_t sub_23AE3A8E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 248))(v1, v2);
}

uint64_t sub_23AE3A928(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 256))(v1, v2);
}

uint64_t sub_23AE3A970(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 264))(v1, v2);
}

uint64_t sub_23AE3A9B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 272))(v1, v2);
}

uint64_t sub_23AE3AA00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 280))(v1, v2);
}

uint64_t sub_23AE3AA48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 288))(v1, v2);
}

uint64_t sub_23AE3AA90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 296))(v1, v2);
}

uint64_t sub_23AE3AAD8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 304))(v1, v2);
}

uint64_t sub_23AE3AB20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 312))(v1, v2);
}

uint64_t sub_23AE3AB68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 320))(v1, v2);
}

uint64_t sub_23AE3ABB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 328))(v1, v2);
}

uint64_t sub_23AE3ABF8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 336))(v1, v2);
}

uint64_t sub_23AE3AC40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 344))(v1, v2);
}

uint64_t sub_23AE3AC88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 352))(v1, v2);
}

uint64_t sub_23AE3ACD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 360))(v1, v2);
}

uint64_t sub_23AE3AD18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 368))(v1, v2);
}

uint64_t sub_23AE3AD60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 376))(v1, v2);
}

uint64_t sub_23AE3ADA8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 384))(v1, v2);
}

uint64_t sub_23AE3ADF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 392))(v1, v2);
}

uint64_t sub_23AE3AE38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 400))(v1, v2);
}

uint64_t sub_23AE3AE80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 408))(v1, v2);
}

uint64_t sub_23AE3AEC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 416))(v1, v2);
}

uint64_t sub_23AE3AF10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 424))(v1, v2);
}

uint64_t sub_23AE3AF58(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 432))(v1, v2);
}

uint64_t sub_23AE3AFA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 440))(v1, v2);
}

uint64_t sub_23AE3AFE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 448))(v1, v2);
}

uint64_t sub_23AE3B030(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 456))(v1, v2);
}

uint64_t sub_23AE3B078(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 464))(v1, v2);
}

uint64_t sub_23AE3B0C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 472))(v1, v2);
}

id sub_23AE3B108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unsigned int v16;
  _QWORD *ObjectType;
  void *v18;
  unsigned __int8 v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  unsigned __int8 v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  unsigned int v55;
  id result;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  id v71;
  id v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  void (**v83)(_QWORD, _QWORD);
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BOOL4 v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  uint64_t *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (**v111)(_QWORD, _QWORD);
  uint64_t v112;
  uint64_t v113;
  id v114;
  char v115;
  id v116;
  id v117;
  uint64_t v118;
  void *v119;
  void *v120;
  uint64_t (*v121)();
  uint64_t v122;
  uint64_t v123[11];
  char v124[16];
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v106 = a1;
  v128 = *MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v4);
  v105 = (uint64_t *)((char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v108 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v107 = (uint64_t)&v97 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v109 = (uint64_t)&v97 - v11;
  v12 = sub_23B1C5E4C();
  v111 = *(void (***)(_QWORD, _QWORD))(v12 - 8);
  v112 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v113 = (uint64_t)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v2 + qword_2542EE110);
  v121 = (uint64_t (*)())sub_23ADFA24C;
  v122 = 0;
  v117 = (id)MEMORY[0x24BDAC760];
  v118 = 1107296256;
  v119 = sub_23AA9432C;
  v120 = &block_descriptor_650;
  v15 = _Block_copy(&v117);
  swift_release();
  v117 = 0;
  v114 = v14;
  v16 = objc_msgSend(v14, sel_executeSwift_error_, v15, &v117);
  _Block_release(v15);
  ObjectType = v117;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
LABEL_43:
    v81 = 0;
    goto LABEL_48;
  }
  if (!v16)
    goto LABEL_25;
  v121 = (uint64_t (*)())sub_23ADFA268;
  v122 = 0;
  v117 = (id)MEMORY[0x24BDAC760];
  v118 = 1107296256;
  v119 = sub_23AA9432C;
  v120 = &block_descriptor_653;
  v18 = _Block_copy(&v117);
  swift_release();
  v117 = 0;
  v19 = objc_msgSend(v114, sel_executeSwift_error_, v18, &v117);
  _Block_release(v18);
  ObjectType = v117;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  if ((v19 & 1) == 0)
  {
LABEL_25:
    sub_23B1C587C();

LABEL_26:
    swift_willThrow();
    return (id)v70;
  }
  v100 = v4;
  v101 = a2;
  v103 = v2;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_23AE3C0D4;
  *(_QWORD *)(v20 + 24) = 0;
  v121 = sub_23AA956C8;
  v122 = v20;
  v117 = (id)MEMORY[0x24BDAC760];
  v118 = 1107296256;
  v119 = sub_23AA9432C;
  v120 = &block_descriptor_660;
  v21 = _Block_copy(&v117);
  swift_retain();
  swift_release();
  v117 = 0;
  a2 = (uint64_t)objc_msgSend(v114, sel_executeSwift_error_, v21, &v117);
  _Block_release(v21);
  v22 = v117;
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v21 & 1) != 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  if ((a2 & 1) == 0)
    goto LABEL_28;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_23AE3C0F8;
  *(_QWORD *)(v23 + 24) = 0;
  v121 = sub_23AA956C8;
  v122 = v23;
  v117 = (id)MEMORY[0x24BDAC760];
  v118 = 1107296256;
  v119 = sub_23AA9432C;
  v120 = &block_descriptor_667;
  v24 = _Block_copy(&v117);
  swift_retain();
  swift_release();
  v117 = 0;
  v25 = objc_msgSend(v114, sel_executeSwift_error_, v24, &v117);
  _Block_release(v24);
  v22 = v117;
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v24 & 1) != 0)
    __break(1u);
  if ((v25 & 1) == 0)
  {
LABEL_28:
    sub_23B1C587C();

    goto LABEL_26;
  }
  v26 = (void *)sub_23B1C63BC();
  v27 = v103;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v27;
  v121 = (uint64_t (*)())sub_23AEB3EA4;
  v122 = v28;
  v29 = (void *)MEMORY[0x24BDAC760];
  v117 = (id)MEMORY[0x24BDAC760];
  v118 = 1107296256;
  v119 = sub_23AE3C204;
  v120 = &block_descriptor_673;
  v30 = _Block_copy(&v117);
  swift_release();
  v31 = v114;
  objc_msgSend(v114, sel_registerFunction_nArgs_handler_, v26, 1, v30);
  _Block_release(v30);

  v32 = (void *)sub_23B1C63BC();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v27;
  v121 = (uint64_t (*)())sub_23AEB3EAC;
  v122 = v33;
  v117 = v29;
  v118 = 1107296256;
  v119 = sub_23AE3C204;
  v120 = &block_descriptor_679;
  v34 = _Block_copy(&v117);
  swift_release();
  objc_msgSend(v31, sel_registerFunction_nArgs_handler_, v32, 2, v34);
  _Block_release(v34);

  v35 = (void *)sub_23B1C63BC();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v27;
  v121 = (uint64_t (*)())sub_23AEB3EB4;
  v122 = v36;
  v117 = v29;
  v118 = 1107296256;
  v119 = sub_23AE3C204;
  v120 = &block_descriptor_685;
  v37 = _Block_copy(&v117);
  swift_release();
  objc_msgSend(v31, sel_registerFunction_nArgs_handler_, v35, 3, v37);
  _Block_release(v37);

  v38 = (void *)sub_23B1C63BC();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v27;
  v121 = (uint64_t (*)())sub_23AEB3EBC;
  v122 = v39;
  v117 = v29;
  v118 = 1107296256;
  v119 = sub_23AE3C204;
  v120 = &block_descriptor_691_0;
  v40 = _Block_copy(&v117);
  swift_release();
  objc_msgSend(v31, sel_registerFunction_nArgs_handler_, v38, 1, v40);
  _Block_release(v40);

  v41 = objc_msgSend(v31, sel_userVersion);
  LODWORD(v40) = objc_msgSend(v41, sel_unsignedIntValue);

  v98 = (_DWORD)v40 == 0;
  v42 = swift_allocObject();
  v99 = (int)v40;
  *(_DWORD *)(v42 + 16) = (_DWORD)v40;
  v43 = *(_QWORD **)(v27 + qword_2542E7738);
  v102 = (int *)(v42 + 16);
  swift_beginAccess();
  if (v43[2])
  {
    while (1)
    {
      v44 = sub_23ACD5EA4(*v102);
      if ((v45 & 1) == 0)
        goto LABEL_18;
      ObjectType = v43;
      v46 = v43[7] + 24 * v44;
      v47 = *(_QWORD *)v46;
      a2 = *(_QWORD *)(v46 + 8);
      v48 = *(_DWORD *)(v46 + 16);
      v49 = swift_allocObject();
      v104 = &v97;
      *(_QWORD *)(v49 + 16) = v47;
      *(_QWORD *)(v49 + 24) = a2;
      v50 = MEMORY[0x24BDAC7A8](v49);
      v51 = v42;
      *(&v97 - 6) = v42;
      *((_DWORD *)&v97 - 10) = v48;
      *(&v97 - 4) = v103;
      *(&v97 - 3) = (uint64_t)sub_23AEB3ED4;
      v96 = v50;
      v116 = 0;
      v115 = 1;
      v52 = swift_allocObject();
      *(_QWORD *)(v52 + 16) = &v115;
      *(_QWORD *)(v52 + 24) = sub_23AEB3EF4;
      *(_QWORD *)(v52 + 32) = &v97 - 8;
      *(_QWORD *)(v52 + 40) = &v116;
      *(_DWORD *)(v52 + 48) = 10;
      v53 = swift_allocObject();
      *(_QWORD *)(v53 + 16) = sub_23AEB3F28;
      *(_QWORD *)(v53 + 24) = v52;
      v121 = sub_23AEB5970;
      v122 = v53;
      v117 = (id)MEMORY[0x24BDAC760];
      v118 = 1107296256;
      v119 = sub_23AAB6470;
      v120 = &block_descriptor_707;
      v54 = _Block_copy(&v117);
      swift_retain();
      swift_retain();
      swift_release();
      v55 = objc_msgSend(v114, sel_performWithFlags_action_, 10, v54);
      _Block_release(v54);
      LOBYTE(v54) = swift_isEscapingClosureAtFileLocation();
      result = (id)swift_release();
      if ((v54 & 1) != 0)
      {
        __break(1u);
        goto LABEL_52;
      }
      v57 = v116 ? 0 : v55;
      if (v57 != 1)
        break;
      if ((v115 & 1) != 0)
      {
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      v42 = v51;
      swift_release();
      swift_release();
      v43 = ObjectType;
      if (!ObjectType[2])
        goto LABEL_18;
    }
    if (v116)
    {
      v71 = v116;
      swift_willThrow();

      swift_release();
      swift_release();
      swift_release();
      return (id)v70;
    }
    goto LABEL_61;
  }
LABEL_18:
  if (errorInjectionUnknownDBVersionEnabled() && v99 && v99 != 9999999)
  {
    objc_msgSend(v114, sel_setUserVersion_, 9999999);
    *v102 = 9999999;
    v58 = v113;
    goto LABEL_32;
  }
  v58 = v113;
  if (*v102 != 590087)
  {
LABEL_32:
    v72 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain_n();
    v73 = sub_23B1C5E40();
    v74 = sub_23B1C6AA0();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc();
      v76 = (void *)swift_slowAlloc();
      v117 = v76;
      *(_DWORD *)v75 = 136446210;
      v114 = v75 + 4;
      v77 = sub_23AE2E2DC();
      v116 = (id)sub_23AABEC68(v77, v78, (uint64_t *)&v117);
      sub_23B1C6CBC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v73, v74, "unsupported database version %{public}s", v75, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v76, -1, -1);
      MEMORY[0x23B8614BC](v75, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v111[1](v58, v112);
    sub_23AB23A94();
    swift_allocError();
    *(_DWORD *)v79 = *(_DWORD *)(v42 + 16);
    *(_QWORD *)(v79 + 8) = 0;
    *(_BYTE *)(v79 + 16) = 1;
    *(_BYTE *)(v79 + 48) = 3;
    swift_willThrow();
    goto LABEL_55;
  }
  v59 = v103;
  v60 = *(void **)(v103 + 56);
  ObjectType = (_QWORD *)swift_getObjectType();
  v62 = v109;
  v61 = v110;
  sub_23AEBBB98((uint64_t)ObjectType, (uint64_t)v60, v109);
  a2 = v61;
  if (v61)
  {
LABEL_55:
    swift_release();
    return (id)v70;
  }
  v113 = v42;
  v114 = v60;
  v63 = sub_23B1C5C54();
  v64 = *(_QWORD *)(v63 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v62, 0, 1, v63);
  v65 = v62;
  v66 = v107;
  sub_23AA724E8(v65, v107, (uint64_t *)&unk_2542E4320);
  v67 = v59 + qword_2542EDED0;
  swift_beginAccess();
  sub_23AA8A660(v66, v67, (uint64_t *)&unk_2542E4320);
  swift_endAccess();
  v68 = v67;
  v69 = v108;
  sub_23AA8EFC8(v68, v108, (uint64_t *)&unk_2542E4320);
  result = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v69, 1, v63);
  if ((_DWORD)result == 1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  sub_23AEBBC90(v69, (uint64_t)ObjectType, (uint64_t)v114);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v69, v63);
  v80 = *(_QWORD *)(v103 + qword_2542EDE60);
  sub_23AF9504C(1129530692, 0xE400000000000000, v123);
  sub_23AA724E8((uint64_t)v123, (uint64_t)v124, qword_2542E4958);
  if (!v125)
    goto LABEL_43;
  if (!v127)
  {
    v81 = 0;
    goto LABEL_47;
  }
  if (v126 != *(_QWORD *)(v80 + 24) || v127 != *(_QWORD *)(v80 + 32))
  {
LABEL_46:
    v81 = sub_23B1C7388();
    goto LABEL_47;
  }
  v81 = 1;
LABEL_47:
  sub_23ACF9524(v123);
LABEL_48:
  v82 = v103;
  *(_BYTE *)(v103 + qword_2542EDE98) = v81 & 1;
  v83 = (void (**)(_QWORD, _QWORD))sub_23AEBBD5C((uint64_t)ObjectType, (uint64_t)v114);
  if (a2)
    goto LABEL_55;
  v111 = v83;
  swift_retain();
  result = (id)FPVersion();
  if (result)
  {
    v84 = result;
    v112 = sub_23B1C63E0();
    v86 = v85;
    swift_release();

    v87 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v82 + 40) + 16) + 120);
    v88 = swift_retain();
    v89 = v87(v88);
    v91 = v90;
    swift_release();
    LODWORD(result) = sub_23AF95360(590087, 0x2F203A6805, v112, v86, v89, v91, v106, v101, 0);
LABEL_52:
    v92 = (int)result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v99)
    {
      if (((v92 ^ 1) & 1) == 0)
      {
        v93 = qword_2542E6C58;
        v94 = v103;
        *(_BYTE *)(v103 + qword_2542E6C58) = 1;
        sub_23AE3D8B0(v94, v99, v113, (void *)0x2F203A6805, v111);
        *(_BYTE *)(v94 + v93) = 0;
        if (a2)
          goto LABEL_55;
      }
    }
LABEL_57:
    v95 = (uint64_t)v105;
    *v105 = 0x2F203A6805;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(uint64_t, _QWORD *))v114 + 1))(v95, ObjectType);
    sub_23AA937BC(v95, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    swift_release();
    if (!a2)
      return (id)v98;
    return (id)v70;
  }
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_23AE3C0D4(uint64_t a1)
{
  return sub_23AE3C11C(a1, 22, 0xD000000000000014);
}

uint64_t sub_23AE3C0F8(uint64_t a1)
{
  return sub_23AE3C11C(a1, 23, 0xD000000000000015);
}

uint64_t sub_23AE3C11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return a3;
}

void sub_23AE3C1A4(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3, uint64_t a4)
{
  sqlite3_int64 v6;

  v6 = sqlite3_value_int64(*a3);
  swift_unownedRetainStrong();
  *(_BYTE *)(a4 + qword_2542EDE90) = 1;
  swift_release();
  if (__OFADD__(v6, 1))
    __break(1u);
  else
    sqlite3_result_int64(a1, v6 + 1);
}

uint64_t sub_23AE3C204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v7(a2, a3, a4);
  return swift_release();
}

void sub_23AE3C25C(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  sqlite3_value *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  sqlite3_int64 v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  sqlite3_value *v30;
  double v31;
  double v32;
  double v33;
  char *v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  char *v37;
  _QWORD v38[3];
  sqlite3_context *v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a1;
  v6 = sub_23B1C5E4C();
  v38[1] = *(_QWORD *)(v6 - 8);
  v38[2] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23B1C5BDC();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (sqlite3_value *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v38 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v38 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (unint64_t)v38 - v21;
  swift_unownedRetainStrong();
  *(_BYTE *)(a4 + qword_2542EDEA8) = 1;
  swift_release();
  if (sqlite3_value_int(*a3) != 1)
  {
    if (sqlite3_value_int(*a3) == 2)
    {
      v30 = a3[1];
      a3 = 0;
      v20 = (char *)sub_23AFAA0C8(v30);
      swift_unownedRetainStrong();
      *(_QWORD *)v17 = v20;
      *((_WORD *)v17 + 4) = 256;
      swift_storeEnumTagMultiPayload();
      if (*(_BYTE *)(a4 + qword_2542E6C58) == 1)
      {
        sub_23AA8EFC8((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_2542DDFB0);
        a3 = (sqlite3_value **)(a4 + qword_2542EDF98);
        swift_beginAccess();
        v10 = *a3;
        v34 = v20;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a3 = v10;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v10 = (sqlite3_value *)sub_23AF99324(0, *((_QWORD *)v10 + 2) + 1, 1, (unint64_t)v10);
          *a3 = v10;
        }
        v22 = *((_QWORD *)v10 + 2);
        v36 = *((_QWORD *)v10 + 3);
        if (v22 >= v36 >> 1)
        {
          v10 = (sqlite3_value *)sub_23AF99324(v36 > 1, v22 + 1, 1, (unint64_t)v10);
          *a3 = v10;
        }
        *((_QWORD *)v10 + 2) = v22 + 1;
        sub_23AA724E8((uint64_t)v14, (uint64_t)v10+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v22, (uint64_t *)&unk_2542DDFB0);
        swift_endAccess();
      }
      else
      {
        v37 = v20;
      }
      swift_release();
      sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542DDFB0);

    }
    goto LABEL_10;
  }
  v23 = sqlite3_value_int64(a3[1]);
  a3 = 0;
  v24 = sub_23AF2124C(v23);
  v26 = v25;
  swift_unownedRetainStrong();
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = v26;
  *(_BYTE *)(v22 + 9) = 0;
  swift_storeEnumTagMultiPayload();
  if ((*(_BYTE *)(a4 + qword_2542E6C58) & 1) == 0)
    goto LABEL_7;
  sub_23AA8EFC8(v22, (uint64_t)v20, (uint64_t *)&unk_2542DDFB0);
  a3 = (sqlite3_value **)(a4 + qword_2542EDF98);
  swift_beginAccess();
  v10 = *a3;
  v27 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v10;
  if ((v27 & 1) == 0)
    goto LABEL_25;
  while (1)
  {
    v29 = *((_QWORD *)v10 + 2);
    v28 = *((_QWORD *)v10 + 3);
    if (v29 >= v28 >> 1)
    {
      v10 = (sqlite3_value *)sub_23AF99324(v28 > 1, v29 + 1, 1, (unint64_t)v10);
      *a3 = v10;
    }
    *((_QWORD *)v10 + 2) = v29 + 1;
    sub_23AA724E8((uint64_t)v20, (uint64_t)v10+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v29, (uint64_t *)&unk_2542DDFB0);
    swift_endAccess();
LABEL_7:
    swift_release();
    sub_23AA8A05C(v22, (uint64_t *)&unk_2542DDFB0);
LABEL_10:
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v41);
    v33 = v32 * 1000000000.0;
    if ((~COERCE__INT64(v32 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v33 <= -9.22337204e18)
      goto LABEL_23;
    if (v33 < 9.22337204e18)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    v10 = (sqlite3_value *)sub_23AF99324(0, *((_QWORD *)v10 + 2) + 1, 1, (unint64_t)v10);
    *a3 = v10;
  }
  sqlite3_result_int64(v39, (uint64_t)v33);
}

void sub_23AE3C854(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  sqlite3_int64 v14;
  sqlite3_int64 v15;
  void *v16;
  int v17;
  id v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  sqlite3_context *v27;
  char *v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  _QWORD v33[2];
  uint8_t *v34;
  sqlite3_context *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  sqlite3_int64 v40;
  void *v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v5 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5E4C();
  v45 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v33 - v12;
  v14 = sqlite3_value_int64(a3[2]);
  v15 = sqlite3_value_int64(*a3);
  v16 = (void *)sub_23AF2124C(v15);
  v43 = v9;
  v36 = v13;
  v37 = v8;
  v40 = v14;
  v41 = v16;
  v42 = v17;
  v38 = v6;
  v39 = v5;
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  swift_dynamicCastClassUnconditional();
  if (!sqlite3_value_int64(a3[1]))
  {
    sub_23AEA3208(v41, v42, v40);
    v27 = a1;
LABEL_5:
    swift_release();
    sqlite3_result_int64(v27, 0);
    return;
  }
  v35 = a1;
  v18 = (id)fpfs_current_or_default_log();
  v19 = v36;
  sub_23B1C5E58();
  v20 = sub_23B1C5E40();
  v21 = sub_23B1C6A88();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v47 = v23;
    v34 = v22;
    *(_DWORD *)v22 = 136315138;
    v33[1] = v22 + 4;
    v24 = sub_23AA96F18((uint64_t)v41, v42);
    v46 = sub_23AABEC68(v24, v25, &v47);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v26 = v34;
    _os_log_impl(&dword_23AA66000, v20, v21, "📌 SCHEDULE_BACKGROUND_DOWNLOAD: for %s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v23, -1, -1);
    MEMORY[0x23B8614BC](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v43);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v9);
  }
  v28 = v37;
  v29 = v38;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v39);
  v32 = v31 * 1000000000.0;
  v27 = v35;
  if ((~COERCE__INT64(v31 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v32 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v32 < 9.22337204e18)
  {
    sub_23AEA241C((uint64_t)v41, v42, v40, (uint64_t)v32, -1, -1);
    goto LABEL_5;
  }
LABEL_13:
  __break(1u);
}

void sub_23AE3CD68(sqlite3_context *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t KeyPath;
  void (*v12)(_QWORD *, _QWORD);
  _QWORD *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD v18[4];

  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  v6 = swift_dynamicCastClass();
  if (v6)
  {
    MEMORY[0x24BDAC7A8](v6);
    v7 = type metadata accessor for VFSItem(0);
    v18[-4] = v7;
    v8 = sub_23AA9F52C(0, &qword_2542E7560);
    v18[-3] = v8;
    v9 = sub_23AA7E38C(&qword_2542DE270, type metadata accessor for VFSItem, (uint64_t)&unk_23B1D2C0C);
    v18[-2] = v9;
    v10 = sub_23AEB238C();
    v18[-1] = v10;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v18[-4] = v7;
    v18[-3] = v8;
    v18[-2] = v9;
    v18[-1] = v10;
    swift_getKeyPath();
    swift_retain();
    v12 = (void (*)(_QWORD *, _QWORD))sub_23B1C5F48();
    if (__OFADD__(*v13, 1))
    {
      __break(1u);
    }
    else
    {
      ++*v13;
      v12(v18, 0);
      swift_release();
      swift_release();
      swift_release();
      sqlite3_result_int64(a1, 0);
      swift_release();
    }
  }
  else
  {
    swift_release();
    v14 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v15 = sub_23B1C5E40();
    v16 = sub_23B1C6AA0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_23AA66000, v15, v16, "📌 error in PENDING_BACKGROUND_DOWNLOADS_CHANGED: self.jobRegistry is not of type SQLJobRegistry", v17, 2u);
      MEMORY[0x23B8614BC](v17, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    sqlite3_result_int64(a1, 0);
  }
}

id sub_23AE3D014(void *a1, uint64_t a2, unsigned int a3, uint64_t a4, void (*a5)(uint64_t *))
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int *v33;
  void *v34;
  id v36;
  char *v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  id v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  _QWORD v66[2];
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int v73;
  void *v74;
  unsigned int *v75;
  unsigned int v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t DynamicType;
  uint64_t v81;
  uint64_t v82[3];
  uint64_t v83[5];
  uint64_t v84;

  v78 = a4;
  v74 = a1;
  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v72 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v71 = (char *)v66 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v66 - v15;
  v17 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain_n();
  v77 = v16;
  v18 = sub_23B1C5E40();
  v19 = sub_23B1C6AB8();
  v73 = v19;
  v20 = os_log_type_enabled(v18, v19);
  v76 = a3;
  v70 = a2;
  v75 = (unsigned int *)(a2 + 16);
  if (v20)
  {
    v21 = swift_slowAlloc();
    v69 = v10;
    v22 = v21;
    v68 = swift_slowAlloc();
    v84 = v68;
    *(_DWORD *)v22 = 136446466;
    v66[1] = v22 + 4;
    swift_beginAccess();
    v23 = sub_23AE2E2DC();
    v83[0] = sub_23AABEC68(v23, v24, &v84);
    v67 = v18;
    sub_23B1C6CBC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v25 = sub_23AE2E2DC();
    v83[0] = sub_23AABEC68(v25, v26, &v84);
    sub_23B1C6CBC();
    a3 = v76;
    swift_bridgeObjectRelease();
    v27 = v67;
    _os_log_impl(&dword_23AA66000, v67, (os_log_type_t)v73, "upgrading database %{public}s -> %{public}s", (uint8_t *)v22, 0x16u);
    v28 = v68;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v28, -1, -1);
    MEMORY[0x23B8614BC](v22, -1, -1);

    v29 = *(void (**)(char *, uint64_t))(v69 + 8);
  }
  else
  {

    swift_release_n();
    v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  }
  v29((char *)v77, v9);
  v30 = sub_23AE398AC();
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v32 = v30 + 32;
    while (1)
    {
      sub_23AA77B28(v32, (uint64_t)&v84);
      a5(&v84);
      if (v5)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
      v32 += 40;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        a3 = v76;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    v36 = (id)fpfs_current_or_default_log();
    v37 = v71;
    sub_23B1C5E58();
    sub_23AA77B28((uint64_t)&v84, (uint64_t)v83);
    v38 = v5;
    v39 = v5;
    v40 = sub_23B1C5E40();
    v41 = sub_23B1C6AA0();
    v42 = os_log_type_enabled(v40, v41);
    v66[0] = v9;
    if (v42)
    {
      v43 = swift_slowAlloc();
      v44 = (_QWORD *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      v82[0] = v78;
      *(_DWORD *)v43 = 136446466;
      __swift_project_boxed_opaque_existential_1(v83, v83[3]);
      DynamicType = swift_getDynamicType();
      v81 = v83[4];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6530);
      v45 = sub_23B1C6434();
      DynamicType = sub_23AABEC68(v45, v46, v82);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      *(_WORD *)(v43 + 12) = 2114;
      swift_getErrorValue();
      v47 = sub_23B0D9CF0(v79);
      DynamicType = (uint64_t)v47;
      sub_23B1C6CBC();
      *v44 = v47;

      _os_log_impl(&dword_23AA66000, v40, v41, "cannot setup schema for %{public}s: %{public}@", (uint8_t *)v43, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v44, -1, -1);
      v48 = v78;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v48, -1, -1);
      MEMORY[0x23B8614BC](v43, -1, -1);

      v49 = v71;
      v50 = v66[0];
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);

      v49 = v37;
      v50 = v9;
    }
    v29(v49, v50);
    v51 = v72;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
    v52 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v53 = v5;
    swift_retain();
    v54 = v5;
    v55 = sub_23B1C5E40();
    v56 = sub_23B1C6AA0();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = swift_slowAlloc();
      v77 = (_QWORD *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      v83[0] = v78;
      *(_DWORD *)v57 = 136446722;
      swift_beginAccess();
      v58 = sub_23AE2E2DC();
      DynamicType = sub_23AABEC68(v58, v59, v83);
      sub_23B1C6CBC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2082;
      v60 = sub_23AE2E2DC();
      DynamicType = sub_23AABEC68(v60, v61, v83);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 22) = 2114;
      swift_getErrorValue();
      v62 = sub_23B0D9CF0(v82[2]);
      DynamicType = (uint64_t)v62;
      sub_23B1C6CBC();
      v63 = v77;
      *v77 = v62;

      _os_log_impl(&dword_23AA66000, v55, v56, "can't upgrade DB from %{public}s -> %{public}s: %{public}@", (uint8_t *)v57, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v63, -1, -1);
      v64 = v78;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v64, -1, -1);
      MEMORY[0x23B8614BC](v57, -1, -1);

      v65 = v72;
    }
    else
    {
      swift_release_n();

      v65 = v51;
    }
    v29(v65, v66[0]);
    return (id)swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_10:
    v33 = v75;
    v34 = v74;
    swift_beginAccess();
    *v33 = a3;
    return objc_msgSend(v34, sel_setUserVersion_, a3);
  }
}

uint64_t sub_23AE3D8B0(uint64_t a1, int a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  void *v22;
  id v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  os_log_t v35;
  uint64_t v36;
  char *v37;
  os_log_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v45 = a4;
  v46 = a5;
  v44 = a2;
  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - v12;
  v14 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v15 = sub_23B1C5E40();
  v16 = sub_23B1C6AB8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_23AA66000, v15, v16, "updating, clearing the throttles", v17, 2u);
    MEMORY[0x23B8614BC](v17, -1, -1);
  }

  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v13, v8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  v19 = *(_QWORD *)(*(_QWORD *)(swift_dynamicCastClassUnconditional() + 24) + 64);
  swift_retain();
  sub_23ADFAFF0((uint64_t)sub_23AEB3F48, v19);
  result = swift_release();
  if (!v5)
  {
    v21 = *(_QWORD *)(*(_QWORD *)(swift_dynamicCastClassUnconditional() + 32) + 64);
    swift_retain();
    sub_23ADFA2F8((uint64_t)sub_23AEB3F48, v21);
    swift_release();
    v42 = a1;
    result = swift_beginAccess();
    v22 = v46;
    if (*(_DWORD *)(a3 + 16) != v44 || v45 != v46)
    {
      v41 = a3 + 16;
      v23 = (id)fpfs_current_or_default_log();
      v24 = v43;
      sub_23B1C5E58();
      swift_retain_n();
      v25 = sub_23B1C5E40();
      v26 = sub_23B1C6AB8();
      v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        v28 = swift_slowAlloc();
        v39 = v27;
        v29 = v28;
        v40 = swift_slowAlloc();
        v52 = v40;
        *(_DWORD *)v29 = 136446978;
        v38 = v25;
        v30 = sub_23AE2E2DC();
        v50 = sub_23AABEC68(v30, v31, &v52);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 12) = 2080;
        v50 = 114;
        v51 = 0xE100000000000000;
        v48 = (uint64_t)v22;
        sub_23B1C7304();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v50 = sub_23AABEC68(v50, v51, &v52);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 22) = 2082;
        swift_beginAccess();
        v32 = sub_23AE2E2DC();
        v48 = sub_23AABEC68(v32, v33, &v52);
        sub_23B1C6CBC();
        swift_release_n();
        swift_bridgeObjectRelease();
        v34 = (uint8_t *)v29;
        *(_WORD *)(v29 + 32) = 2080;
        v48 = 114;
        v49 = 0xE100000000000000;
        v47 = v45;
        sub_23B1C7304();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v48 = sub_23AABEC68(v48, v49, &v52);
        v22 = v46;
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        v35 = v38;
        _os_log_impl(&dword_23AA66000, v38, (os_log_type_t)v39, "applying database bugfixes %{public}s:%s -> %{public}s:%s", v34, 0x2Au);
        v36 = v40;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v36, -1, -1);
        MEMORY[0x23B8614BC](v34, -1, -1);

        v37 = v43;
      }
      else
      {

        swift_release_n();
        v37 = v24;
      }
      v18(v37, v8);
      return sub_23AE4ABF4(v22);
    }
  }
  return result;
}

uint64_t sub_23AE3DDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23AA8A05C(v0 + qword_2542EDED0, (uint64_t *)&unk_2542E4320);
  v1 = v0 + qword_2542EDEC0;
  v2 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  sub_23AAB7948(*(_QWORD *)(v0 + qword_2542EDEB0));
  sub_23AAB7948(*(_QWORD *)(v0 + qword_2542EDEB8));
  sub_23AAB7948(*(_QWORD *)(v0 + qword_2542EDEA0));
  sub_23AAB7948(*(_QWORD *)(v0 + qword_2542EDE88));
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AE3DEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23AFB0EE0();

  sub_23AA8A05C(v0 + qword_2542EDED0, (uint64_t *)&unk_2542E4320);
  v1 = v0 + qword_2542EDEC0;
  v2 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  sub_23AAB7948(*(_QWORD *)(v0 + qword_2542EDEB0));
  sub_23AAB7948(*(_QWORD *)(v0 + qword_2542EDEB8));
  sub_23AAB7948(*(_QWORD *)(v0 + qword_2542EDEA0));
  sub_23AAB7948(*(_QWORD *)(v0 + qword_2542EDE88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23AE3E000()
{
  sub_23AE3DEC8();
  return swift_deallocClassInstance();
}

void type metadata accessor for SQLDatabase()
{
  JUMPOUT(0x23B861318);
}

void sub_23AE3E02C()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  v1 = (id)fpfs_adopt_log();
  sub_23AFB1124();
  if ((*(_BYTE *)(v0 + qword_2542EDE58) & 1) == 0)
  {
    v2 = (id)sub_23AFD7BC0();
    sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23AEB5484, v0);

  }
  v3 = (id)fpfs_adopt_log();

}

id sub_23AE3E0E8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v10;
  void *v11;
  id v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  *(_BYTE *)(a1 + qword_2542EDE58) = 1;
  v2 = qword_2542E69B8;
  if (*(_QWORD *)(a1 + qword_2542E69B8))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B1C6BA8();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(a1 + v2) = 0;
  swift_unknownObjectRelease();
  *(_QWORD *)(sub_23AABA448() + 16) = 0;
  v3 = *(void **)(a1 + qword_2542EDEC8);
  if (v3)
  {
    v13[0] = 0;
    v4 = objc_msgSend(v3, sel_close_, v13);
    v5 = v13[0];
    if (!v4)
      goto LABEL_8;
    v6 = v13[0];
  }
  v7 = *(void **)(a1 + qword_2542EE110);
  v13[0] = 0;
  v8 = objc_msgSend(v7, sel_close_, v13);
  v5 = v13[0];
  if (!v8)
  {
LABEL_8:
    v10 = v5;
    v11 = (void *)sub_23B1C587C();

    swift_willThrow();
    v12 = v11;
    sub_23AFF3164((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLDatabase.swift", 130, 2, 762, v11);
  }
  return v13[0];
}

void sub_23AE3E250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v1 = v0;
  v2 = sub_23B1C5DC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  v12 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (*(_BYTE *)(v0 + qword_2542EDE58) == 1)
  {

  }
  else
  {
    v27 = v15;
    if ((sub_23AAB9600() & 1) != 0
      || (v16 = v0 + qword_2542E69D0,
          swift_beginAccess(),
          v17 = *(_QWORD *)(*(_QWORD *)v16 + 16),
          v17 >= (int)objc_msgSend(v27, sel_sqlDatabaseOnNextDurableFlushTriggerThreshold)))
    {
      if (qword_2542E6818 != -1)
        swift_once();
      v18 = (void *)qword_2542EDD28;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
      sub_23AA8EFC8((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_2542E67B8);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2);
      v26 = v1;
      if (v19 == 1)
      {
        v20 = v18;
        sub_23B1C5DB0();
        sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E67B8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
      }
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v14, v5, v2);
      v25 = *(int *)(v12 + 20);
      *(_QWORD *)&v14[v25] = v18;
      v21 = &v14[*(int *)(v12 + 24)];
      *(_QWORD *)v21 = "SQLDB: Force flush of database";
      *((_QWORD *)v21 + 1) = 30;
      v21[16] = 2;
      v22 = v18;
      sub_23B1C6BE4();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v23 + 64) = sub_23AAA0D14();
      *(_QWORD *)(v23 + 32) = 0xD00000000000001CLL;
      *(_QWORD *)(v23 + 40) = 0x800000023B206E10;
      sub_23B1C5D98();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E67B8);
      v24 = *(void **)(v26 + qword_2542EE110);
      objc_msgSend(v24, sel_forceBatchStart);
      objc_msgSend(v24, sel_flush);
      sub_23B1C6BD8();
      sub_23B1C5DA4();

      sub_23AA937BC((uint64_t)v14, type metadata accessor for Signpost);
    }
    else
    {

    }
  }
}

void sub_23AE3E638(uint64_t a1, uint64_t a2, int a3, int a4, int a5, void (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(void);
  _QWORD *v60;
  uint64_t v61;
  void (**v62)(void);
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  id v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t ObjectType;
  void *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  id v82;
  _QWORD *v83;
  uint64_t v84;
  void (*v85)(_QWORD *, _QWORD, uint64_t);
  uint64_t v86;
  char *v87;
  void (*v88)(_QWORD *, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(void);
  _QWORD **v95;
  _QWORD *v96;
  char isUniquelyReferenced_nonNull_native;
  char v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  void (*v138)(void);
  uint64_t v139;
  uint64_t v140;

  v10 = v9;
  v120 = a8;
  v138 = a6;
  v139 = a7;
  v113 = a5;
  v112 = a4;
  LODWORD(v116) = a3;
  v115 = a2;
  v114 = a1;
  v119 = (_QWORD *)*v9;
  v134 = sub_23B1C6020();
  v129 = *(_QWORD *)(v134 - 8);
  v11 = MEMORY[0x24BDAC7A8](v134);
  v133 = (uint64_t **)((char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v132 = (uint64_t **)((char *)&v109 - v13);
  v131 = sub_23B1C60E0();
  v128 = *(_QWORD *)(v131 - 8);
  v14 = MEMORY[0x24BDAC7A8](v131);
  v127 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v130 = (char *)&v109 - v16;
  v17 = sub_23B1C60A4();
  v125 = *(_QWORD *)(v17 - 8);
  v126 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v124 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23B1C6B78();
  v122 = *(_QWORD *)(v19 - 8);
  v123 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v121 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23B1C5DC8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v137 = (char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v136 = (uint64_t)&v109 - v28;
  v29 = type metadata accessor for Signpost(0);
  v117 = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(v117 + 64);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v118 = (uint64_t)&v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v135 = (uint64_t)&v109 - v32;
  v33 = sub_23B1C60EC();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (uint64_t *)((char *)&v109 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_23AFD7BC0();
  *v36 = v37;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v34 + 104))(v36, *MEMORY[0x24BEE5610], v33);
  v38 = (id)v37;
  LOBYTE(v37) = sub_23B1C6104();
  (*(void (**)(uint64_t *, uint64_t))(v34 + 8))(v36, v33);
  if ((v37 & 1) == 0)
  {
    __break(1u);
LABEL_28:
    swift_once();
    goto LABEL_8;
  }
  v39 = qword_2542EE018;
  v36 = (uint64_t *)(id)fpfs_adopt_log();
  if ((*((_BYTE *)v10 + qword_2542EDE58) & 1) != 0 || (v10[19] & 1) != 0 || (sub_23AABA5A0() & 1) != 0)
  {
    sub_23AD2C7F8();
    v40 = (void *)swift_allocError();
    v138();

LABEL_6:
    v41 = (id)fpfs_adopt_log();

    return;
  }
  v111 = v39;
  if (qword_2542E6818 != -1)
    goto LABEL_28;
LABEL_8:
  v110 = a9;
  v42 = (void *)qword_2542EDD28;
  v43 = v136;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v136, 1, 1, v21);
  v115 = sub_23B1C6F2C();
  v116 = v44;
  sub_23AA8EFC8(v43, (uint64_t)v27, (uint64_t *)&unk_2542E67B8);
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v27, 1, v21);
  v109 = v36;
  if (v45 == 1)
  {
    v46 = v42;
    v47 = v137;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v27, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v47 = v137;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v137, v27, v21);
  }
  v48 = v135;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v135, v47, v21);
  *(_QWORD *)(v48 + *(int *)(v29 + 20)) = v42;
  v49 = v48 + *(int *)(v29 + 24);
  *(_QWORD *)v49 = "DB queue wait for flush";
  *(_QWORD *)(v49 + 8) = 23;
  *(_BYTE *)(v49 + 16) = 2;
  v50 = v42;
  v51 = v116;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v52 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v52 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v52 + 32) = v115;
  *(_QWORD *)(v52 + 40) = v51;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v137, v21);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v136, (uint64_t *)&unk_2542E67B8);
  v53 = swift_allocObject();
  swift_weakInit();
  v54 = v48;
  v55 = v118;
  sub_23AA907B0(v54, v118, type metadata accessor for Signpost);
  v56 = (*(unsigned __int8 *)(v117 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
  v57 = (v30 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
  v59 = (void (*)(void))swift_allocObject();
  v60 = v119;
  v137 = (char *)v119[305];
  *((_QWORD *)v59 + 2) = v137;
  v136 = v60[306];
  *((_QWORD *)v59 + 3) = v136;
  v117 = v60[307];
  *((_QWORD *)v59 + 4) = v117;
  v61 = v60[308];
  *((_QWORD *)v59 + 5) = v61;
  sub_23AA94050(v55, (uint64_t)v59 + v56, type metadata accessor for Signpost);
  *(_QWORD *)((char *)v59 + v57) = v53;
  v62 = (void (**)(void))((char *)v59 + v58);
  v63 = v139;
  *v62 = v138;
  v62[1] = (void (*)(void))v63;
  v138 = v59;
  v64 = (uint64_t *)((char *)v59 + ((v58 + 23) & 0xFFFFFFFFFFFFFFF8));
  v65 = v110;
  *v64 = v120;
  v64[1] = v65;
  v66 = *(void **)((char *)v10 + qword_2542EE110);
  swift_retain();
  swift_retain();
  objc_msgSend(v66, sel_forceBatchStart);
  v139 = qword_2542E69B8;
  if (*(_QWORD *)((char *)v10 + qword_2542E69B8))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B1C6BA8();
    swift_unknownObjectRelease();
  }
  sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
  v67 = (void *)sub_23AFD7BC0();
  v140 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&qword_2542E1F80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
  v68 = v67;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1EF0);
  sub_23AAB5A28((unint64_t *)&qword_2542E1F00, (uint64_t *)&unk_2542E1EF0, MEMORY[0x24BEE12C8]);
  v69 = v121;
  v70 = v123;
  sub_23B1C6DE8();
  v71 = sub_23B1C6B84();

  (*(void (**)(char *, uint64_t))(v122 + 8))(v69, v70);
  v120 = v71;
  ObjectType = swift_getObjectType();
  v73 = *(void **)((char *)v10 + v111);
  v74 = swift_allocObject();
  swift_weakInit();
  v75 = (_QWORD *)swift_allocObject();
  v76 = v136;
  v75[2] = v137;
  v75[3] = v76;
  v75[4] = v117;
  v75[5] = v61;
  v75[6] = v74;
  v77 = v73;
  swift_retain();
  v78 = (uint64_t)v124;
  sub_23B1C6080();
  v79 = v73;
  v80 = ObjectType;
  sub_23AA78928(v79, v78, (uint64_t)sub_23AEB52B4, (uint64_t)v75);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v78, v126);
  swift_release();
  v81 = v127;
  sub_23B1C60C8();
  v82 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  LODWORD(v74) = objc_msgSend(v82, sel_sqlDatabaseFlushIntervalMilliseconds);

  v83 = v132;
  *v132 = (int)v74;
  v84 = v129;
  v85 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v129 + 104);
  v86 = v134;
  v85(v83, *MEMORY[0x24BEE5410], v134);
  v87 = v130;
  MEMORY[0x23B85EA14](v81, v83);
  v88 = *(void (**)(_QWORD *, uint64_t))(v84 + 8);
  v88(v83, v86);
  v89 = *(void (**)(char *, uint64_t))(v128 + 8);
  v90 = v131;
  v89(v81, v131);
  v85(v83, *MEMORY[0x24BEE5418], v86);
  v91 = v133;
  *v133 = 0;
  v85(v91, *MEMORY[0x24BEE5400], v86);
  v92 = v120;
  MEMORY[0x23B85F530](v87, v83, v91, v80);
  v88(v91, v86);
  v88(v83, v86);
  v89(v87, v90);
  sub_23B1C6BB4();
  *(_QWORD *)((char *)v10 + v139) = v92;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v93 = swift_allocObject();
  v94 = v138;
  *(_QWORD *)(v93 + 16) = sub_23AEB521C;
  *(_QWORD *)(v93 + 24) = v94;
  v95 = (_QWORD **)((char *)v10 + qword_2542E69D0);
  swift_beginAccess();
  v96 = *v95;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v95 = v96;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v96 = sub_23AF99338(0, v96[2] + 1, 1, v96);
    *v95 = v96;
  }
  v98 = v113;
  v99 = v112;
  v101 = v96[2];
  v100 = v96[3];
  if (v101 >= v100 >> 1)
  {
    v96 = sub_23AF99338((_QWORD *)(v100 > 1), v101 + 1, 1, v96);
    *v95 = v96;
  }
  v96[2] = v101 + 1;
  v102 = &v96[2 * v101];
  v102[4] = sub_23AEB3ED4;
  v102[5] = v93;
  swift_endAccess();
  v103 = sub_23AABA448();
  if ((v98 & 1) != 0)
  {
    if ((v99 & 1) != 0)
      *(_BYTE *)(v103 + 49) = 1;
    else
      *(_BYTE *)(v103 + 48) = 1;
    goto LABEL_26;
  }
  if ((v99 & 1) != 0)
  {
    v107 = *(_QWORD *)(v103 + 40);
    v105 = __OFADD__(v107, 1);
    v108 = v107 + 1;
    if (!v105)
    {
      *(_QWORD *)(v103 + 40) = v108;
      goto LABEL_26;
    }
  }
  else
  {
    v104 = *(_QWORD *)(v103 + 32);
    v105 = __OFADD__(v104, 1);
    v106 = v104 + 1;
    if (!v105)
    {
      *(_QWORD *)(v103 + 32) = v106;
LABEL_26:
      v36 = v109;
      objc_msgSend(*(id *)((char *)v10 + qword_2542EE110), sel_makeNextFlushBarrierFSync, v109);
      swift_unknownObjectRelease();
      swift_release();
      sub_23AA937BC(v135, type metadata accessor for Signpost);
      goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_23AE3F214(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t Strong;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;

  sub_23B1C6BD8();
  type metadata accessor for Signpost(0);
  sub_23B1C5DA4();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if ((*(_BYTE *)(Strong + qword_2542EDE58) & 1) != 0
      || (*(_BYTE *)(Strong + 152) & 1) != 0
      || (swift_retain(), v8 = sub_23AABA5A0(), v9 = swift_release(), (v8 & 1) != 0))
    {
      sub_23AD2C7F8();
      v10 = (void *)swift_allocError();
      a3();

    }
    else
    {
      a5(v9);
    }
    swift_release();
  }
  else
  {
    sub_23AD2C7F8();
    v11 = (void *)swift_allocError();
    a3();

  }
}

uint64_t sub_23AE3F38C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23AABDA94();
    return swift_release();
  }
  return result;
}

uint64_t sub_23AE3F3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  void *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD aBlock[6];
  id v23;
  unsigned __int8 v24;

  v5 = sub_23B1C5E4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + qword_2542EDE58) == 1)
  {
    sub_23AD2C7F8();
    swift_allocError();
LABEL_5:
    swift_willThrow();
    return v2;
  }
  if ((errorInjectionThrowOnDBQueryEnabled() & 1) != 0)
  {
    sub_23AB23A94();
    swift_allocError();
    *(_OWORD *)v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
    *(_OWORD *)(v9 + 32) = 0u;
    *(_BYTE *)(v9 + 48) = 8;
    goto LABEL_5;
  }
  v24 = 1;
  v23 = 0;
  v11 = *(void **)(v2 + qword_2542E69D8);
  *(_QWORD *)(v2 + qword_2542E69D8) = 0;

  v12 = *(void **)(v2 + qword_2542EE110);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = &v24;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = &v23;
  v13[6] = v2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_23AEB3E40;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_23AA7E76C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AAB6470;
  aBlock[3] = &block_descriptor_647;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performWithFlags_action_, 12, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v12 & 1) == 0)
  {
    if (v23)
    {
      v16 = v23;
      swift_willThrow();

      swift_release();
    }
    else
    {
      if ((v24 & 1) != 0)
      {
        v17 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v18 = sub_23B1C5E40();
        v19 = sub_23B1C6A88();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_23AA66000, v18, v19, "batch received after db has been closed will be ignored", v20, 2u);
          MEMORY[0x23B8614BC](v20, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      else if ((fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v2 + 168) + 16)) & 1) == 0
             && (*(_BYTE *)(v2 + 152) & 1) == 0)
      {
        sub_23AE3E250();
      }
      v2 = v24;

      swift_release();
    }
    return v2;
  }
  __break(1u);
  return result;
}

BOOL sub_23AE3F71C(uint64_t a1, _BYTE *a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v9;
  _BOOL8 v10;
  uint64_t v12;

  v9 = (void *)MEMORY[0x23B8601A8]();
  a3(&v12);
  *a2 = 0;
  v10 = *(_QWORD *)(a6 + qword_2542E69D8) == 0;
  objc_autoreleasePoolPop(v9);
  return v10;
}

id sub_23AE3F7B8(void *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  int8x16_t v14;
  unint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  char v23;
  id v24;
  id result;
  id v26;
  id v27;
  id v28;
  id v29;
  char v30;
  id v31;
  char *v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[128];
  id v55[22];
  void *v56;
  unint64_t v57;
  int8x16_t v58;
  int8x16_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  id v65;

  v50 = a5;
  v48 = a3;
  v49 = a4;
  LODWORD(v53) = a2;
  v7 = sub_23B1C5E4C();
  v52 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C6F74();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55[0] = a1;
  v13 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  if (swift_dynamicCast())
  {
    if (v60 == 7)
    {
      swift_bridgeObjectRelease();
    }
    else if (v60 != 8
           || ((v14 = vorrq_s8(v58, v59),
                v15 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v14.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)) | v57,
                v56 != (void *)1)
            || v15)
           && (v56 != (void *)2 || v15)
           && (v56 != (void *)3 || v15))
    {
      sub_23AC04DA4((uint64_t)&v56);
      goto LABEL_11;
    }
    v21 = v55[0];
    goto LABEL_22;
  }
LABEL_11:

  v56 = a1;
  v16 = a1;
  type metadata accessor for PQLSqliteError(0);
  if (swift_dynamicCast())
  {

    v17 = v56;
LABEL_15:

LABEL_16:
    v19 = *(void **)(v5 + qword_2542E69D8);
    *(_QWORD *)(v5 + qword_2542E69D8) = a1;
    v20 = a1;
    v21 = v19;
LABEL_22:

    return (id)(*(uint64_t (**)(uint64_t, void *))(v5 + qword_2542EDED8))(v5, a1);
  }

  v55[0] = a1;
  v18 = a1;
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AC04DA4((uint64_t)&v56);
    v17 = v55[0];
    goto LABEL_15;
  }
  v47 = v7;

  v56 = a1;
  v22 = a1;
  v23 = swift_dynamicCast();

  if ((v23 & 1) != 0)
    goto LABEL_16;
  v56 = a1;
  v24 = a1;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v17 = v56;
    goto LABEL_15;
  }

  v65 = a1;
  v26 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  if (swift_dynamicCast())
  {
    sub_23AA724E8((uint64_t)&v56, (uint64_t)v54, (uint64_t *)&unk_2542E0950);
    sub_23AA724E8((uint64_t)v54, (uint64_t)v55, (uint64_t *)&unk_2542E0950);
    if (sub_23AC050A4((uint64_t)v55) == 14)
    {
      v27 = v65;
LABEL_32:

LABEL_41:
      swift_willThrow();
      return a1;
    }
    sub_23AEB3CD8((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AC04FC4);
  }

  v55[0] = a1;
  v28 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0960);
  if (swift_dynamicCast())
  {
    if (v64 == 10
      && v56 == (void *)4
      && !(v58.i64[0] | v57 | v58.i64[1] | v59.i64[0] | v59.i64[1] | v60 | v61 | v62 | v63))
    {
      v27 = v55[0];
      goto LABEL_32;
    }
    sub_23AC04E04(v56, (void *)v57, v58.u64[0], (void *)v58.i64[1], v59.i64[0], v59.u64[1], (void *)v60, v61, v62, (void *)v63, v64);
  }

  v56 = a1;
  v29 = a1;
  v30 = swift_dynamicCast();

  if ((v30 & 1) != 0 || (v53 & 1) == 0)
    goto LABEL_41;
  if ((*(_BYTE *)(v5 + 84) & 4) == 0)
  {
    v31 = (id)fpfs_current_or_default_log();
    v32 = v51;
    sub_23B1C5E58();
    v33 = a1;
    v34 = a1;
    v35 = sub_23B1C5E40();
    v36 = sub_23B1C6AAC();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v46 = (_QWORD *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v56 = (void *)v53;
      *(_DWORD *)v37 = 136446466;
      v38 = sub_23B1C6F2C();
      v55[0] = (id)sub_23AABEC68(v38, v39, (uint64_t *)&v56);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2112;
      swift_getErrorValue();
      v40 = sub_23B0D9CF0((uint64_t)v55[21]);
      v55[0] = v40;
      sub_23B1C6CBC();
      v41 = v46;
      *v46 = v40;

      _os_log_impl(&dword_23AA66000, v35, v36, "unhandled database persistence error in %{public}s: %@", (uint8_t *)v37, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v41, -1, -1);
      v42 = v53;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v42, -1, -1);
      MEMORY[0x23B8614BC](v37, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v47);
    goto LABEL_41;
  }
  v56 = 0;
  v57 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v56 = (void *)0xD000000000000028;
  v57 = 0x800000023B200840;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_getErrorValue();
  v43 = sub_23B0D9CF0((uint64_t)v55[17]);
  v44 = objc_msgSend(v43, sel_description);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  result = (id)sub_23B1C704C();
  __break(1u);
  return result;
}

id sub_23AE3FF10(void *a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t **v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  int8x16_t v21;
  unint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  char v30;
  id v31;
  id result;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  id v37;
  int v38;
  id v39;
  char *v40;
  id v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  id v52;
  _QWORD v53[3];
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  int8x16_t v66;
  int8x16_t v67;
  char v68;
  id v69;

  v54 = a5;
  v53[2] = a4;
  v53[1] = a3;
  v59 = a2;
  v7 = *v5;
  v8 = sub_23B1C5E4C();
  v55 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for FileTreeError(0, v7[306], v7[308], v10);
  v56 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v60 = (char *)v53 - v11;
  v13 = type metadata accessor for FileTreeError(0, v7[305], v7[307], v12);
  v58 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v53 - v14;
  v16 = sub_23B1C6F74();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = a1;
  v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  if (swift_dynamicCast())
  {
    if (v68 == 7)
    {
      swift_bridgeObjectRelease();
    }
    else if (v68 != 8
           || ((v21 = vorrq_s8(v66, v67),
                v22 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v21.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)) | v65,
                v64 != (id)1)
            || v22)
           && (v64 != (id)2 || v22)
           && (v64 != (id)3 || v22))
    {
      sub_23AC04DA4((uint64_t)&v64);
      goto LABEL_11;
    }
    v28 = v69;
    goto LABEL_23;
  }
LABEL_11:

  v64 = a1;
  v23 = a1;
  type metadata accessor for PQLSqliteError(0);
  if (swift_dynamicCast())
  {

LABEL_13:
    v24 = v64;
LABEL_16:

LABEL_17:
    v26 = *(uint64_t **)((char *)v5 + qword_2542E69D8);
    *(uint64_t **)((char *)v5 + qword_2542E69D8) = (uint64_t *)a1;
    v27 = a1;
    v28 = v26;
LABEL_23:

    return (id)(*(uint64_t (**)(uint64_t **, void *))((char *)v5 + qword_2542EDED8))(v5, a1);
  }

  v69 = a1;
  v25 = a1;
  if (swift_dynamicCast())
  {
    sub_23AC04DA4((uint64_t)&v64);
    v24 = v69;
    goto LABEL_16;
  }
  v53[0] = v8;

  v64 = a1;
  v29 = a1;
  v30 = swift_dynamicCast();

  if ((v30 & 1) != 0)
    goto LABEL_17;
  v64 = a1;
  v31 = a1;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    goto LABEL_13;
  }

  v64 = a1;
  v33 = a1;
  if (swift_dynamicCast())
  {
    if (swift_getEnumCaseMultiPayload() == 14)
    {
LABEL_29:

LABEL_37:
      swift_willThrow();
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v13);
  }

  v64 = a1;
  v34 = a1;
  v36 = v60;
  v35 = v61;
  if (swift_dynamicCast())
  {
    if (swift_getEnumCaseMultiPayload() == 14)
      goto LABEL_29;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v35);
  }

  v64 = a1;
  v37 = a1;
  v38 = swift_dynamicCast();

  if (v38 || (v59 & 1) == 0)
    goto LABEL_37;
  if ((sub_23AFB5D28() & 0x400000000) == 0)
  {
    v39 = (id)fpfs_current_or_default_log();
    v40 = v57;
    sub_23B1C5E58();
    v41 = a1;
    v42 = a1;
    v43 = sub_23B1C5E40();
    v44 = sub_23B1C6AAC();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v46 = (_QWORD *)swift_slowAlloc();
      v47 = (void *)swift_slowAlloc();
      v64 = v47;
      *(_DWORD *)v45 = 136446466;
      v48 = sub_23B1C6F2C();
      v69 = (id)sub_23AABEC68(v48, v49, (uint64_t *)&v64);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2112;
      swift_getErrorValue();
      v50 = sub_23B0D9CF0(v63);
      v69 = v50;
      sub_23B1C6CBC();
      *v46 = v50;

      _os_log_impl(&dword_23AA66000, v43, v44, "unhandled database persistence error in %{public}s: %@", (uint8_t *)v45, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v46, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v47, -1, -1);
      MEMORY[0x23B8614BC](v45, -1, -1);

      (*(void (**)(char *, _QWORD))(v55 + 8))(v57, v53[0]);
    }
    else
    {

      (*(void (**)(char *, _QWORD))(v55 + 8))(v40, v53[0]);
    }
    goto LABEL_37;
  }
  v64 = 0;
  v65 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v64 = (id)0xD000000000000028;
  v65 = 0x800000023B200840;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_getErrorValue();
  v51 = sub_23B0D9CF0(v62);
  v52 = objc_msgSend(v51, sel_description);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  result = (id)sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE406BC@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t);
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  v28 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = a1;
  v27 = a2;
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(**(_QWORD **)(v4 + 32) + 240))(&v26, 1);
  if (!v5)
  {
    v25 = a3;
    v17 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    v18 = v28;
    if (v17 == 1)
    {
      sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E4750);
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3250);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    }
    else
    {
      sub_23AA724E8((uint64_t)v11, (uint64_t)v15, (uint64_t *)&unk_2542E6B00);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3250);
      v21 = v18 + *(int *)(v20 + 48);
      v22 = *(int *)(v20 + 64);
      sub_23AA8EFC8((uint64_t)v15, v18, (uint64_t *)&unk_2542E6B00);
      v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56);
      v23(v18, 0, 1, v12);
      sub_23AA724E8((uint64_t)v15, v21, (uint64_t *)&unk_2542E6B00);
      v23(v21, 0, 1, v12);
      *(_BYTE *)(v18 + v22) = v25 & 1;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v18, 0, 1, v20);
    }
  }
  return result;
}

uint64_t sub_23AE408BC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  _QWORD **v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t, uint64_t);
  _BYTE v24[12];
  int v25;
  uint64_t v26;

  v25 = a2;
  v26 = a4;
  v7 = type metadata accessor for SnapshotItem(255, (*v4)[305], (*v4)[307], a3);
  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v24[-v11];
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = &v24[-v14];
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*v4[4] + 240))(a1, 1);
  if (!v5)
  {
    v17 = v26;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v7) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata3 - 8) + 56))(v17, 1, 1, TupleTypeMetadata3);
    }
    else
    {
      v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32);
      v19(v15, v12, v7);
      v20 = swift_getTupleTypeMetadata3();
      v21 = (_BYTE *)(v17 + *(int *)(v20 + 48));
      v22 = *(int *)(v20 + 64);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v13 + 16))(v17, v15, v7);
      v23 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56);
      v23(v17, 0, 1, v7);
      v19(v21, v15, v7);
      v23((uint64_t)v21, 0, 1, v7);
      *(_BYTE *)(v17 + v22) = v25 & 1;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 0, 1, v20);
    }
  }
  return result;
}

uint64_t sub_23AE40AD8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  _QWORD **v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21 = a2;
  v22 = a3;
  v23 = a1;
  v4 = (*v3)[305];
  v20 = (*v3)[307];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v20 - v12;
  v14 = v24;
  result = (*(uint64_t (**)(uint64_t))(*v3[2] + 152))(v23);
  if (!v14)
  {
    v24 = 0;
    v16 = v21;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      type metadata accessor for SnapshotItem(255, v4, v20, v17);
      sub_23B1C6C98();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata3 - 8) + 56))(v22, 1, 1, TupleTypeMetadata3);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, AssociatedTypeWitness);
      sub_23AE408BC((uint64_t)v13, v16 & 1, v19, v22);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
    }
  }
  return result;
}

void sub_23AE40CB4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id aBlock;
  uint64_t v12;
  id (*v13)(uint64_t, void *);
  void *v14;
  unint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + qword_2542EE110);
  v15 = sub_23ADFA284;
  v16 = 0;
  v2 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v12 = 1107296256;
  v13 = sub_23AA9432C;
  v14 = &block_descriptor_973;
  v3 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v4 = objc_msgSend(v1, sel_fetchSwift_error_, v3, &aBlock);
  _Block_release(v3);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v4)
  {
    sub_23B1C587C();

    swift_willThrow();
    return;
  }
  if (objc_msgSend(v4, sel_next))
    v6 = (uint64_t)objc_msgSend(v4, sel_longAtIndex_, 0);
  else
    v6 = 0;
  v15 = sub_23ADFA2A0;
  v16 = 0;
  aBlock = v2;
  v12 = 1107296256;
  v13 = sub_23AA9432C;
  v14 = &block_descriptor_976;
  v7 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v8 = objc_msgSend(v1, sel_fetchSwift_error_, v7, &aBlock);
  _Block_release(v7);
  v9 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    goto LABEL_16;
  if (!v8)
  {
    sub_23B1C587C();

    swift_willThrow();
    return;
  }
  if (objc_msgSend(v8, sel_next))
    v10 = (uint64_t)objc_msgSend(v8, sel_longAtIndex_, 0);
  else
    v10 = 0;

  if ((unsigned __int128)(v6 * (__int128)v10) >> 64 != (v6 * v10) >> 63)
LABEL_17:
    __break(1u);
}

uint64_t sub_23AE40F34(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a3;
  *(_QWORD *)(v10 + 32) = a4;
  *(_QWORD *)(v10 + 40) = v4;
  *(_QWORD *)(v10 + 48) = a2;
  swift_retain_n();
  swift_retain();
  sub_23AFABBFC((uint64_t)"incrementalDBVacuum(force:size:completionHandler:)", 50, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AEB53B8, v9, (uint64_t)sub_23AEB5408, v10);
  swift_release();
  return swift_release();
}

id sub_23AE41018(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;

  if ((a1 & 1) == 0)
  {
    if (qword_2542E6C40 != -1)
      swift_once();
    if (objc_msgSend((id)qword_2542EDD50, sel_shouldPause))
    {
      v10 = 0;
      return (id)a2(v10);
    }
  }
  v11 = *(_QWORD *)(a4 + qword_2542EDE68);
  if (v11 >= a5)
    v12 = a5;
  else
    v12 = *(_QWORD *)(a4 + qword_2542EDE68);
  result = objc_msgSend(*(id *)(a4 + qword_2542EE110), sel_incrementalVacuum_, v12);
  if (v11 >= a5)
  {
    v10 = 1;
    return (id)a2(v10);
  }
  if (!__OFSUB__(a5, v12))
    return (id)sub_23AE40F34(a1 & 1, a5 - v12, a2, a3);
  __break(1u);
  return result;
}

_QWORD *sub_23AE41114(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  _QWORD *result;
  _QWORD *v18;
  char v19;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  char v25;
  _QWORD *v26;
  _QWORD *v27;
  char v28;
  _QWORD *v29;
  char v30;
  _QWORD *v31;
  char *v32;
  BOOL v33;
  char *v34;
  uint64_t v35;
  char *v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t (*v43)(void);
  void (*v44)(char *, uint64_t (*)(void *, uint64_t, __int16), _QWORD *);
  _QWORD *v45;
  uint64_t (*v46)(void);
  char *v47;

  v4 = v3;
  v46 = a2;
  v7 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C60EC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_23AFD7BC0();
  *v14 = v15;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = (id)v15;
  LOBYTE(v15) = sub_23B1C6104();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    swift_once();
LABEL_6:
    if (objc_msgSend((id)qword_2542EDD50, sel_shouldPause))
      return (_QWORD *)v46();
    goto LABEL_7;
  }
  if (*(_BYTE *)(v4 + qword_2542EDE78) == 1)
    return (_QWORD *)v46();
  if ((a1 & 1) == 0)
  {
    if (qword_2542E6C40 == -1)
      goto LABEL_6;
    goto LABEL_30;
  }
LABEL_7:
  v18 = sub_23ABE343C((uint64_t)sub_23AE414A4, 0);
  if ((v19 & 1) != 0)
    v20 = 0;
  else
    v20 = v18;
  v21 = sub_23ABE343C((uint64_t)sub_23AE414C0, 0);
  if ((v22 & 1) != 0)
    v23 = 0;
  else
    v23 = v21;
  v24 = sub_23ABE343C((uint64_t)sub_23AE414DC, 0);
  if ((v25 & 1) != 0)
    v26 = 0;
  else
    v26 = v24;
  v27 = sub_23ABE343C((uint64_t)sub_23AE414F0, 0);
  if ((v28 & 1) != 0)
    v29 = 0;
  else
    v29 = v27;
  v45 = v29;
  result = sub_23ABE343C((uint64_t)sub_23AE415F0, 0);
  if ((v30 & 1) != 0)
    v31 = 0;
  else
    v31 = result;
  v32 = (char *)v23 + (_QWORD)v20;
  if (__OFADD__(v20, v23))
  {
    __break(1u);
    goto LABEL_32;
  }
  v33 = __OFADD__(v32, v26);
  v34 = (char *)v26 + (_QWORD)v32;
  if (v33)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v33 = __OFADD__(v34, v45);
  v35 = (uint64_t)v45 + (_QWORD)v34;
  if (v33)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v36 = (char *)v31 + v35;
  if (__OFADD__(v35, v31))
  {
LABEL_34:
    __break(1u);
    return result;
  }
  v37 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v38 = sub_23B1C5E40();
  v39 = sub_23B1C6AB8();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v40 = 134217984;
    v47 = v36;
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v38, v39, "🧹  vacuum-ing wharf with an upper bound of %ld", v40, 0xCu);
    MEMORY[0x23B8614BC](v40, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v41 = *(_QWORD *)(*(_QWORD *)(v4 + 32) + 16);
  v42 = (_QWORD *)swift_allocObject();
  v43 = v46;
  v42[2] = v4;
  v42[3] = v43;
  v42[4] = a3;
  v44 = *(void (**)(char *, uint64_t (*)(void *, uint64_t, __int16), _QWORD *))(*(_QWORD *)v41
                                                                                                  + 688);
  swift_retain();
  swift_retain();
  swift_retain();
  v44(v36, sub_23AEB5318, v42);
  swift_release();
  return (_QWORD *)swift_release();
}

unint64_t sub_23AE414A4()
{
  return 0xD00000000000007FLL;
}

unint64_t sub_23AE414C0()
{
  return 0xD00000000000007FLL;
}

uint64_t sub_23AE414DC()
{
  return sub_23AE41504();
}

uint64_t sub_23AE414F0()
{
  return sub_23AE41504();
}

uint64_t sub_23AE41504()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23AE415F0()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (qword_2542E1560 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5540);
  sub_23AAB5A28(&qword_2542E75B0, (uint64_t *)&unk_2542E5540, MEMORY[0x24BEE2B40]);
  sub_23AAA420C();
  sub_23B1C6644();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23AE4179C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v12;
  uint64_t v13;

  v12 = (a3 >> 8) & 1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a4;
  *(_QWORD *)(v13 + 24) = a1;
  *(_QWORD *)(v13 + 32) = a2;
  *(_BYTE *)(v13 + 40) = a3;
  *(_BYTE *)(v13 + 41) = v12;
  *(_QWORD *)(v13 + 48) = a5;
  *(_QWORD *)(v13 + 56) = a6;
  swift_retain();
  sub_23AEB53AC(a1, a2, a3, v12);
  swift_retain();
  sub_23ACFFC70((uint64_t)"wharfVacuum(force:completionHandler:)", 37, 2, a5, a6, (uint64_t)sub_23AEB5378, v13);
  return swift_release();
}

uint64_t sub_23AE41868(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  uint8_t *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  uint64_t (*v48)(_QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v52 = a3;
  v12 = sub_23B1C5E4C();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v47 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v47 - v20;
  *(_BYTE *)(a1 + qword_2542EDE78) = 1;
  v53 = v22;
  if ((a4 & 0x100) != 0)
  {
    v50 = v19;
    v51 = a6;
    v28 = a2;
    v29 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v30 = a2;
    v31 = sub_23B1C5E40();
    v32 = sub_23B1C6AA0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v48 = a5;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc();
      v49 = v6;
      v36 = (_QWORD *)v35;
      *(_DWORD *)v34 = 138412290;
      v47[1] = v34 + 4;
      swift_getErrorValue();
      v37 = sub_23B0D9CF0(v54);
      v55 = (uint64_t)v37;
      sub_23B1C6CBC();
      *v36 = v37;
      v38 = v52;
      sub_23AEB536C(a2, v52, a4, 1);
      _os_log_impl(&dword_23AA66000, v31, v32, "🧹  wharf vacuum failed: %@", v34, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v36, -1, -1);
      v39 = v34;
      a5 = v48;
      MEMORY[0x23B8614BC](v39, -1, -1);

      sub_23AEB536C(a2, v38, a4, 1);
    }
    else
    {
      v44 = v52;
      sub_23AEB536C(a2, v52, a4, 1);
      sub_23AEB536C(a2, v44, a4, 1);

    }
    v18 = v21;
    v43 = v50;
  }
  else
  {
    v23 = v19;
    v24 = (id)fpfs_current_or_default_log();
    if ((a4 & 1) != 0)
    {
      sub_23B1C5E58();
      v40 = sub_23B1C5E40();
      v41 = sub_23B1C6AB8();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_23AA66000, v40, v41, "🧹  wharf didn't have anything to vacuum", v42, 2u);
        MEMORY[0x23B8614BC](v42, -1, -1);
      }

    }
    else
    {
      sub_23B1C5E58();
      v25 = sub_23B1C5E40();
      v26 = sub_23B1C6AB8();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        *(_DWORD *)v27 = 134218240;
        v55 = (uint64_t)a2;
        sub_23B1C6CBC();
        *(_WORD *)(v27 + 12) = 2048;
        v55 = v52;
        sub_23B1C6CBC();
        _os_log_impl(&dword_23AA66000, v25, v26, "🧹  vacuum-ed %ld files from <wharf>/ingest/, %ld files from <wharf>/propagate/", (uint8_t *)v27, 0x16u);
        MEMORY[0x23B8614BC](v27, -1, -1);
      }

      v18 = v15;
    }
    v43 = v23;
  }
  v45 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v18, v43);
  return a5(v45);
}

uint64_t sub_23AE41C7C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_BYTE *)(v8 + 40) = a1;
  swift_retain_n();
  swift_retain();
  sub_23AFABBFC((uint64_t)"vacuum(force:completionHandler:)", 32, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AEB5514, v7, (uint64_t)sub_23AEB4E9C, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_23AE41D54(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint8_t *v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  int v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  uint64_t v58;

  v55 = a4;
  v56 = *a1;
  v57 = a2;
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - v10;
  v12 = sub_23B1C5E4C();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v47 - v18;
  if (*((_BYTE *)a1 + qword_2542EDE80) == 1)
  {
    v20 = v17;
    v21 = v16;
    v22 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v23 = sub_23B1C5E40();
    v24 = sub_23B1C6AA0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_23AA66000, v23, v24, "🧹  vaccuum still running when triggered", v25, 2u);
      MEMORY[0x23B8614BC](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v21);
    return v57(0);
  }
  else
  {
    v51 = qword_2542EDE80;
    v52 = v17;
    v53 = (_QWORD *)v16;
    v54 = v11;
    v47 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v48 = a3;
    v50 = v7;
    sub_23B1C5BD0();
    v27 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v28 = sub_23B1C5E40();
    v29 = sub_23B1C6AB8();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v49 = v6;
      v31 = v30;
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_23AA66000, v28, v29, "🧹  vacuum-ing", v30, 2u);
      v32 = v31;
      v6 = v49;
      MEMORY[0x23B8614BC](v32, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v52 + 8))(v15, v53);
    *((_BYTE *)a1 + v51) = 1;
    v33 = v58;
    sub_23AE40CB4();
    if (v33)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v54, v6);
    }
    else
    {
      v35 = *((_BYTE *)a1 + qword_2542EDE70);
      v49 = v6;
      v58 = v34;
      if ((v35 & 1) == 0)
        sub_23AE39B60();
      v36 = v48;
      v53 = a1;
      v37 = v50;
      v38 = v55;
      v39 = v8;
      v40 = v47;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v54, v6);
      v41 = (*(unsigned __int8 *)(v37 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      v42 = (v39 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      v43 = swift_allocObject();
      v44 = v56;
      *(_QWORD *)(v43 + 16) = *(_QWORD *)(v56 + 2440);
      *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 2448);
      *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 2464);
      *(_BYTE *)(v43 + 48) = v38 & 1;
      *(_QWORD *)(v43 + 56) = v57;
      *(_QWORD *)(v43 + 64) = v36;
      *(_QWORD *)(v43 + 72) = v53;
      v45 = v40;
      v46 = v49;
      (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v43 + v41, v45, v49);
      *(_QWORD *)(v43 + v42) = v58;
      swift_retain();
      swift_retain();
      sub_23AE41114(v38 & 1, sub_23AEB4F44, v43);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v54, v46);
    }
  }
}

uint64_t sub_23AE421B4(int a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  _QWORD *v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  int v29;
  id v30;
  uint64_t v31;

  v31 = *a4;
  v12 = sub_23B1C5BDC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_2542E6C40 != -1)
      swift_once();
    if (objc_msgSend((id)qword_2542EDD50, sel_shouldPause))
      return a2(0);
  }
  v30 = objc_msgSend(*(id *)((char *)a4 + qword_2542EE110), sel_autovacuumableSpaceInBytes);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v12);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v27 = a2;
  v28 = a6;
  v18 = (v17 + 48) & ~v17;
  v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = a3;
  v21 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = a1;
  v22 = swift_allocObject();
  v23 = v31;
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v31 + 2440);
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 2448);
  *(_QWORD *)(v22 + 40) = *(_QWORD *)(v23 + 2464);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22 + v18, v15, v12);
  *(_QWORD *)(v22 + v19) = a4;
  v24 = v27;
  *(_QWORD *)(v22 + v21) = v28;
  v25 = (_QWORD *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v25 = v24;
  v25[1] = v20;
  swift_retain();
  swift_retain();
  sub_23AE40F34(v29 & 1, (uint64_t)v30, (uint64_t)sub_23AEB5028, v22);
  return swift_release();
}

void sub_23AE42394(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  char v32;
  double v33;
  id v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  unsigned int v68;
  void (*v69)(char *);
  int v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(_QWORD);
  int v90;
  double v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94[3];

  v88 = a6;
  v89 = a5;
  v90 = a1;
  v8 = sub_23B1C5C6C();
  MEMORY[0x24BDAC7A8](v8);
  v79 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0220);
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v80 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_23B1C57D4();
  v75 = *(char **)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_23B1C57BC();
  v74 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_23B1C57E0();
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v77 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5E4C();
  v85 = *(_QWORD *)(v17 - 8);
  v86 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v65 - v21;
  v23 = sub_23B1C5BDC();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B4C();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v87 = a3;
  sub_23AE40CB4();
  v30 = v29;
  v31 = a4 - *(_QWORD *)&v29;
  v32 = v90;
  if (__OFSUB__(a4, *(_QWORD *)&v29))
  {
    __break(1u);
  }
  else
  {
    if (a4)
      v33 = (double)v31 * 100.0 / (double)a4;
    else
      v33 = 0.0;
    v34 = (id)fpfs_current_or_default_log();
    if ((v32 & 1) != 0)
    {
      v35 = v22;
      sub_23B1C5E58();
      v36 = sub_23B1C5E40();
      v37 = sub_23B1C6AB8();
      v38 = v37;
      v73 = v36;
      if (os_log_type_enabled(v36, v37))
      {
        v39 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v94[0] = v71;
        *(_DWORD *)v39 = 134218754;
        v92 = v28;
        sub_23B1C6CBC();
        *(_WORD *)(v39 + 12) = 2080;
        v66 = v39 + 14;
        v91 = v30;
        v68 = *MEMORY[0x24BDCCAA8];
        v40 = v74;
        v69 = *(void (**)(char *))(v74 + 104);
        v72 = v31;
        v41 = v83;
        v69(v15);
        sub_23B1C57C8();
        v70 = v38;
        v42 = v77;
        sub_23B1C557C();
        v67 = (void (*)(char *, uint64_t))*((_QWORD *)v75 + 1);
        v67(v13, v84);
        v74 = *(_QWORD *)(v40 + 8);
        ((void (*)(char *, uint64_t))v74)(v15, v41);
        v65 = sub_23AB55910();
        sub_23AA7E38C((unint64_t *)&unk_2542E01F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCAD0], MEMORY[0x24BDCCAC8]);
        sub_23AEB5094();
        v43 = v78;
        sub_23B1C6D1C();
        v75 = v35;
        v44 = *(void (**)(char *, uint64_t))(v76 + 8);
        v44(v42, v43);
        v92 = sub_23AABEC68(v92, v93, v94);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 22) = 2080;
        v76 = v39 + 24;
        v91 = *(double *)&v72;
        v45 = v83;
        ((void (*)(char *, _QWORD, uint64_t))v69)(v15, v68, v83);
        sub_23B1C57C8();
        sub_23B1C557C();
        v67(v13, v84);
        ((void (*)(char *, uint64_t))v74)(v15, v45);
        sub_23B1C6D1C();
        v44(v42, v43);
        v92 = sub_23AABEC68(v92, v93, v94);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 32) = 2080;
        v91 = v33;
        sub_23B1C5C60();
        sub_23AEB50D8();
        v46 = v80;
        sub_23B1C5888();
        sub_23AAB5A28((unint64_t *)&unk_2542E0210, (uint64_t *)&unk_2542E0220, MEMORY[0x24BDCD480]);
        v47 = v82;
        sub_23B1C61E8();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v46, v47);
        v92 = sub_23AABEC68(v92, v93, v94);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        v48 = v73;
        _os_log_impl(&dword_23AA66000, v73, (os_log_type_t)v70, "🧹  finished vacuum in %fs, newSize: %s, reclaimed: %s (%s)", (uint8_t *)v39, 0x2Au);
        v49 = v71;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v49, -1, -1);
        MEMORY[0x23B8614BC](v39, -1, -1);

        (*(void (**)(char *, uint64_t))(v85 + 8))(v75, v86);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v86);
      }
      v64 = v87;
      *(_BYTE *)(v87 + qword_2542EDE70) = 0;
      *(_BYTE *)(v64 + qword_2542EDE78) = 0;
    }
    else
    {
      sub_23B1C5E58();
      v50 = sub_23B1C5E40();
      v51 = sub_23B1C6AB8();
      v52 = v51;
      v73 = v50;
      if (os_log_type_enabled(v50, v51))
      {
        v53 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v94[0] = v71;
        *(_DWORD *)v53 = 134218754;
        v92 = v28;
        sub_23B1C6CBC();
        *(_WORD *)(v53 + 12) = 2080;
        v66 = v53 + 14;
        v91 = v30;
        v68 = *MEMORY[0x24BDCCAA8];
        v54 = v74;
        v69 = *(void (**)(char *))(v74 + 104);
        v72 = v31;
        v55 = v83;
        v69(v15);
        sub_23B1C57C8();
        v70 = v52;
        v56 = v77;
        sub_23B1C557C();
        v67 = (void (*)(char *, uint64_t))*((_QWORD *)v75 + 1);
        v67(v13, v84);
        v74 = *(_QWORD *)(v54 + 8);
        ((void (*)(char *, uint64_t))v74)(v15, v55);
        v65 = sub_23AB55910();
        sub_23AA7E38C((unint64_t *)&unk_2542E01F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCCAD0], MEMORY[0x24BDCCAC8]);
        sub_23AEB5094();
        v57 = v78;
        sub_23B1C6D1C();
        v75 = v20;
        v58 = *(void (**)(char *, uint64_t))(v76 + 8);
        v58(v56, v57);
        v92 = sub_23AABEC68(v92, v93, v94);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 22) = 2080;
        v76 = v53 + 24;
        v91 = *(double *)&v72;
        ((void (*)(char *, _QWORD, uint64_t))v69)(v15, v68, v55);
        sub_23B1C57C8();
        sub_23B1C557C();
        v67(v13, v84);
        ((void (*)(char *, uint64_t))v74)(v15, v55);
        sub_23B1C6D1C();
        v58(v56, v57);
        v92 = sub_23AABEC68(v92, v93, v94);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 32) = 2080;
        v91 = v33;
        sub_23B1C5C60();
        sub_23AEB50D8();
        v59 = v80;
        sub_23B1C5888();
        sub_23AAB5A28((unint64_t *)&unk_2542E0210, (uint64_t *)&unk_2542E0220, MEMORY[0x24BDCD480]);
        v60 = v82;
        sub_23B1C61E8();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v59, v60);
        v92 = sub_23AABEC68(v92, v93, v94);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        v61 = v73;
        _os_log_impl(&dword_23AA66000, v73, (os_log_type_t)v70, "🧹  pausing vacuum because the XPC activity ask for deferral after %fs, newSize: %s, reclaimed: %s (%s)", (uint8_t *)v53, 0x2Au);
        v62 = v71;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v62, -1, -1);
        v63 = v53;
        v32 = v90;
        MEMORY[0x23B8614BC](v63, -1, -1);

        (*(void (**)(char *, uint64_t))(v85 + 8))(v75, v86);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v85 + 8))(v20, v86);
      }
      v64 = v87;
    }
    *(_BYTE *)(v64 + qword_2542EDE80) = 0;
    v89(v32 & 1);
  }
}

void sub_23AE42F64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  unsigned int (*v53)(_QWORD, _QWORD, _QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id *v74;
  uint64_t v75;
  unsigned int (*v76)(id *, uint64_t, uint64_t);
  uint64_t v77;
  id *v78;
  id *v79;
  int v80;
  int v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  void (*v90)(_QWORD *(*)@<X0>(uint64_t@<X8>), uint64_t *);
  uint64_t *v91;
  uint64_t v92;
  _QWORD *(*v93)@<X0>(uint64_t@<X8>);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  const void *v100;
  void *v101;
  void (*v102)(void (*)(uint64_t@<X8>), uint64_t *);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  id v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t (*v117)(uint64_t);
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(_QWORD *(*)@<X0>(uint64_t@<X8>), uint64_t *);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(_QWORD *(*)@<X0>(uint64_t@<X8>), uint64_t *);
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t (*)@<X0>(uint64_t@<X8>), uint64_t *);
  uint64_t v144;
  uint64_t (*v145)(uint64_t);
  uint64_t v146;
  char v147;
  uint64_t v148;
  id v149;
  char v150;
  char *v151;
  double v152;
  double v153;
  void (*v154)(char *, uint64_t);
  double v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  double v159;
  double v160;
  double v161;
  char v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  void (*v188)(uint64_t (*)@<X0>(uint64_t@<X8>), uint64_t *);
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  id v198;
  char v199;
  char *v200;
  double v201;
  double v202;
  void (*v203)(char *, uint64_t);
  double v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  double v208;
  double v209;
  double v210;
  void (*v211)(uint64_t);
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  id *v229;
  uint64_t v230;
  id *v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int (*v241)(_QWORD, _QWORD, _QWORD);
  _BYTE v242[496];
  _BYTE v243[496];
  id v244[63];

  v222 = sub_23B1C5BDC();
  v220 = *(_QWORD *)(v222 - 8);
  MEMORY[0x24BDAC7A8](v222);
  v221 = (char *)&v213 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v231 = (id *)((char *)&v213 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v5);
  v230 = (uint64_t)&v213 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v229 = (id *)((char *)&v213 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v232 = (unint64_t)&v213 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v228 = (uint64_t)&v213 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v223 = (uint64_t)&v213 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v225 = (uint64_t)&v213 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v224 = (uint64_t)&v213 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v238 = (uint64_t)&v213 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v236 = (uint64_t)&v213 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v227 = (uint64_t)&v213 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v234 = (uint64_t)&v213 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v237 = (uint64_t)&v213 - v29;
  v239 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v30 = MEMORY[0x24BDAC7A8](v239);
  v235 = (uint64_t)&v213 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v226 = (uint64_t)&v213 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v233 = (uint64_t)&v213 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v213 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v213 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)&v213 - v43;
  v45 = MEMORY[0x24BDAC7A8](v42);
  v47 = (char *)&v213 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)&v213 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v52 = (char *)&v213 - v51;
  v240 = a1;
  v53 = v241;
  sub_23AE46BF0(a1);
  if (!v53)
  {
    v215 = v44;
    v216 = v50;
    v217 = v47;
    v218 = v38;
    v241 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v41;
    v219 = v52;
    v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
    swift_dynamicCastClassUnconditional();
    v55 = v240;
    sub_23AE59A24(v240);
    v56 = v1;
    v57 = *(_QWORD *)(v1 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
    swift_dynamicCastClassUnconditional();
    sub_23AE493A0(v55);
    v214 = 0;
    v58 = (uint64_t)v219;
    sub_23AA8EFC8(v55, (uint64_t)v219, (uint64_t *)&unk_2542DDFB0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 5u:
        v233 = v54;
        v59 = v58;
        v60 = (uint64_t)v216;
        sub_23AA8EFC8(v58, (uint64_t)v216, (uint64_t *)&unk_2542DDFB0);
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
        v62 = v60 + *(int *)(v61 + 48);
        v239 = *(_QWORD *)(v60 + *(int *)(v61 + 64));
        v63 = v60;
        v64 = v237;
        sub_23AA724E8(v63, v237, (uint64_t *)&unk_2542E4750);
        v65 = v234;
        sub_23AA724E8(v62, v234, (uint64_t *)&unk_2542E4750);
        v66 = v227;
        sub_23AA8EFC8(v64, v227, (uint64_t *)&unk_2542E4750);
        v240 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
        v241 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v240 - 8) + 48);
        if (v241(v66, 1, v240) == 1)
        {
          sub_23AA8A05C(v66, (uint64_t *)&unk_2542E4750);
          v67 = 0;
        }
        else
        {
          v67 = *(_QWORD *)(v66 + 136);
          sub_23AA8A05C(v66, (uint64_t *)&unk_2542E6B00);
        }
        v105 = v236;
        sub_23AA8EFC8(v64, v236, (uint64_t *)&unk_2542E4750);
        v106 = v238;
        sub_23AA8EFC8(v65, v238, (uint64_t *)&unk_2542E4750);
        if (!v67)
        {
          sub_23AA8A05C(v106, (uint64_t *)&unk_2542E4750);
          v129 = sub_23AA8A05C(v105, (uint64_t *)&unk_2542E4750);
          v108 = v240;
          goto LABEL_109;
        }
        v235 = v56;
        v107 = v224;
        sub_23AA8EFC8(v105, v224, (uint64_t *)&unk_2542E4750);
        v108 = v240;
        if (v241(v107, 1, v240) == 1)
        {
          sub_23AA8A05C(v107, (uint64_t *)&unk_2542E4750);
          v109 = 0;
          v110 = 0;
        }
        else
        {
          v109 = *(_QWORD *)(v107 + 128);
          v110 = *(_QWORD *)(v107 + 136);
          swift_bridgeObjectRetain();
          sub_23AA8A05C(v107, (uint64_t *)&unk_2542E6B00);
        }
        v134 = v225;
        sub_23AA8EFC8(v238, v225, (uint64_t *)&unk_2542E4750);
        if (v241(v134, 1, v108) == 1)
        {
          sub_23AA8A05C(v134, (uint64_t *)&unk_2542E4750);
          if (!v110)
          {
            v135 = 0;
            goto LABEL_76;
          }
          goto LABEL_64;
        }
        v135 = *(_QWORD *)(v134 + 136);
        v232 = *(_QWORD *)(v134 + 128);
        swift_bridgeObjectRetain();
        sub_23AA8A05C(v134, (uint64_t *)&unk_2542E6B00);
        if (!v110)
        {
LABEL_76:
          sub_23AA8A05C(v238, (uint64_t *)&unk_2542E4750);
          v129 = sub_23AA8A05C(v236, (uint64_t *)&unk_2542E4750);
          if (!v135)
            goto LABEL_108;
          goto LABEL_107;
        }
        if (!v135)
        {
LABEL_64:
          swift_bridgeObjectRetain();
          sub_23AA8A05C(v238, (uint64_t *)&unk_2542E4750);
          sub_23AA8A05C(v236, (uint64_t *)&unk_2542E4750);
          swift_bridgeObjectRelease();
          goto LABEL_107;
        }
        swift_bridgeObjectRetain_n();
        v136 = sub_23AAAE580(v109, v110);
        v138 = v137;
        swift_bridgeObjectRelease();
        if (!v138)
          goto LABEL_95;
        if (v136 == 12565487 && v138 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v162 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          if ((v162 & 1) == 0)
          {
LABEL_95:
            swift_bridgeObjectRetain();
            v231 = (id *)v110;
LABEL_96:
            v172 = v232;
            swift_bridgeObjectRetain();
            v173 = sub_23AAAE580(v172, v135);
            v175 = v174;
            swift_bridgeObjectRelease();
            if (v175)
            {
              if (v173 == 12565487 && v175 == 0xA300000000000000)
              {
                swift_bridgeObjectRelease();
LABEL_101:
                swift_bridgeObjectRetain();
                v177 = v232;
                v178 = sub_23B1C64B8();
                v232 = sub_23AA8A1BC(v178, v177, v135);
                v180 = v179;
                v182 = v181;
                v184 = v183;
                swift_bridgeObjectRelease();
                v185 = MEMORY[0x23B85ED8C](v232, v180, v182, v184);
                v187 = v186;
                swift_bridgeObjectRelease();
                v65 = v234;
                goto LABEL_103;
              }
              v176 = sub_23B1C7388();
              swift_bridgeObjectRelease();
              if ((v176 & 1) != 0)
                goto LABEL_101;
            }
            swift_bridgeObjectRetain();
            v187 = (char *)v135;
            v65 = v234;
            v185 = v232;
LABEL_103:
            if (v109 != v185 || v231 != (id *)v187)
              sub_23B1C7388();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AA8A05C(v238, (uint64_t *)&unk_2542E4750);
            sub_23AA8A05C(v236, (uint64_t *)&unk_2542E4750);
            swift_bridgeObjectRelease();
            v59 = (uint64_t)v219;
LABEL_107:
            v129 = swift_bridgeObjectRelease();
LABEL_108:
            v56 = v235;
LABEL_109:
            v188 = *(void (**)(uint64_t (*)@<X0>(uint64_t@<X8>), uint64_t *))(v56 + qword_2542EDEA0);
            if (v188)
            {
              MEMORY[0x24BDAC7A8](v129);
              v189 = v237;
              *(&v213 - 4) = v237;
              *(&v213 - 3) = v65;
              *((_BYTE *)&v213 - 16) = v190 & 1;
              swift_retain();
              v191 = v214;
              v188(sub_23AEADB14, &v213 - 6);
              sub_23AAB7948((uint64_t)v188);
              v214 = v191;
              if (v191)
              {
                sub_23AA8A05C(v65, (uint64_t *)&unk_2542E4750);
                v192 = v189;
LABEL_118:
                sub_23AA8A05C(v192, (uint64_t *)&unk_2542E4750);
                v114 = v59;
                goto LABEL_74;
              }
              v108 = v240;
            }
            v193 = v223;
            sub_23AA8EFC8(v65, v223, (uint64_t *)&unk_2542E4750);
            if (v241(v193, 1, v108) == 1)
            {
              sub_23AA8A05C(v193, (uint64_t *)&unk_2542E4750);
              v194 = v237;
            }
            else
            {
              v195 = *(_QWORD *)v193;
              v196 = *(_BYTE *)(v193 + 8);
              sub_23AA8A05C(v193, (uint64_t *)&unk_2542E6B00);
              v194 = v237;
              if ((v239 & 0x800000000020000) != 0)
              {
                swift_dynamicCastClassUnconditional();
                swift_retain();
                v197 = v214;
                sub_23AE100A4(v195, v196);
                swift_release();
                v214 = v197;
              }
            }
            sub_23AA8A05C(v65, (uint64_t *)&unk_2542E4750);
            v192 = v194;
            goto LABEL_118;
          }
        }
        swift_bridgeObjectRetain();
        v163 = sub_23B1C64B8();
        v164 = sub_23AA8A1BC(v163, v109, v110);
        v166 = v165;
        v168 = v167;
        v170 = v169;
        swift_bridgeObjectRelease();
        v109 = MEMORY[0x23B85ED8C](v164, v166, v168, v170);
        v231 = v171;
        swift_bridgeObjectRelease();
        goto LABEL_96;
      case 6u:
        v68 = v58;
        v69 = v1;
        v70 = (uint64_t)v217;
        sub_23AA8EFC8(v68, (uint64_t)v217, (uint64_t *)&unk_2542DDFB0);
        v71 = v70 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8) + 48);
        v72 = v228;
        sub_23AA724E8(v70, v228, &qword_2542E4770);
        v73 = v232;
        sub_23AA724E8(v71, v232, &qword_2542E4770);
        v74 = v229;
        sub_23AA8EFC8(v72, (uint64_t)v229, &qword_2542E4770);
        v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        v76 = *(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48);
        if (v76(v74, 1, v75) == 1)
        {
          sub_23AA8A05C((uint64_t)v74, &qword_2542E4770);
          v77 = v230;
          sub_23AA8EFC8(v73, v230, &qword_2542E4770);
          v78 = v231;
        }
        else
        {
          v111 = *v74;
          sub_23AA8A05C((uint64_t)v74, (uint64_t *)&unk_2542E4760);
          v77 = v230;
          sub_23AA8EFC8(v73, v230, &qword_2542E4770);
          v78 = v231;
          if (v111)
          {
            v112 = &qword_2542E4770;
            v113 = v77;
            goto LABEL_51;
          }
        }
        sub_23AA724E8(v77, (uint64_t)v78, &qword_2542E4770);
        if (v76(v78, 1, v75) == 1)
        {
          sub_23AA8A05C((uint64_t)v78, &qword_2542E4770);
          sub_23AA8A05C(v73, &qword_2542E4770);
          sub_23AA8A05C(v72, &qword_2542E4770);
          v114 = (uint64_t)v219;
          goto LABEL_74;
        }
        v111 = *v78;
        v112 = (uint64_t *)&unk_2542E4760;
        v113 = (uint64_t)v78;
LABEL_51:
        v130 = sub_23AA8A05C(v113, v112);
        v244[0] = v111;
        v131 = *(void (**)(_QWORD *(*)@<X0>(uint64_t@<X8>), uint64_t *))(v69 + qword_2542EDEA0);
        if (v131)
        {
          MEMORY[0x24BDAC7A8](v130);
          *(&v213 - 2) = v69;
          *(&v213 - 1) = (uint64_t)v244;
          swift_retain();
          v132 = v214;
          v131(sub_23AEADAF8, &v213 - 4);
          v214 = v132;
          v133 = (uint64_t)v219;
          if (v132)
          {
            sub_23AAB7948((uint64_t)v131);
            sub_23AA8A05C(v73, &qword_2542E4770);
            sub_23AA8A05C(v72, &qword_2542E4770);

            goto LABEL_80;
          }
          sub_23AAB7948((uint64_t)v131);
          sub_23AA8A05C(v73, &qword_2542E4770);
          sub_23AA8A05C(v72, &qword_2542E4770);
          v111 = v244[0];
        }
        else
        {
          sub_23AA8A05C(v73, &qword_2542E4770);
          sub_23AA8A05C(v72, &qword_2542E4770);
          v133 = (uint64_t)v219;
        }

LABEL_80:
        v114 = v133;
        goto LABEL_74;
      case 0xAu:
        v79 = (id *)v241;
        sub_23AA8EFC8(v58, (uint64_t)v241, (uint64_t *)&unk_2542DDFB0);
        v80 = *((unsigned __int8 *)v79 + 26);
        v81 = *((unsigned __int8 *)v79 + 27);
        v82 = *v79;
        v83 = *((unsigned __int8 *)v79 + 8);
        if (*((_BYTE *)v79 + 9) == 1)
        {
          if (v81 != 1 && v80 != 1)
          {
            sub_23AA862DC(*v79, *((unsigned __int8 *)v79 + 8), 1);
            sub_23ADF1CFC(v79[2], *((unsigned __int16 *)v79 + 12));
            goto LABEL_73;
          }
          sub_23ADF1CFC(v79[2], *((unsigned __int16 *)v79 + 12));
          v139 = sub_23AA8A05C(v58, (uint64_t *)&unk_2542DDFB0);
          v140 = *(void (**)(_QWORD *(*)@<X0>(uint64_t@<X8>), uint64_t *))(v56 + qword_2542EDEA0);
          if (v140)
          {
            v244[0] = v82;
            MEMORY[0x24BDAC7A8](v139);
            *(&v213 - 2) = v141;
            *(&v213 - 1) = (uint64_t)v244;
            swift_retain();
            v140(sub_23AEB552C, &v213 - 4);
            sub_23AAB7948((uint64_t)v140);

          }
          else
          {
            sub_23AA862DC(v82, v83, 1);
          }
        }
        else
        {
          if (v81 == 1)
          {
            sub_23ADF1CFC(v79[2], *((unsigned __int16 *)v79 + 12));
          }
          else
          {
            sub_23ADF1CFC(v79[2], *((unsigned __int16 *)v79 + 12));
            if (v80 != 1)
              goto LABEL_73;
          }
          v142 = sub_23AA8A05C(v58, (uint64_t *)&unk_2542DDFB0);
          v143 = *(void (**)(uint64_t (*)@<X0>(uint64_t@<X8>), uint64_t *))(v56 + qword_2542EDEA0);
          if (v143)
          {
            v244[0] = v82;
            LOBYTE(v244[1]) = v83;
            MEMORY[0x24BDAC7A8](v142);
            *(&v213 - 2) = v144;
            *(&v213 - 1) = (uint64_t)v244;
            swift_retain();
            v143(sub_23AEADA98, &v213 - 4);
            sub_23AAB7948((uint64_t)v143);
          }
        }
        return;
      case 0x12u:
        v84 = v233;
        v85 = sub_23AA8EFC8(v58, v233, (uint64_t *)&unk_2542DDFB0);
        v86 = *(_QWORD *)(v1 + 32);
        if ((*(_BYTE *)(v86 + 33) & 1) != 0)
          goto LABEL_126;
        v115 = v214;
        v116 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 272))(v85);
        if (v115)
          goto LABEL_126;
        *(_BYTE *)(v86 + 33) = (v116 & 1) == 0;
        if ((v116 & 1) != 0)
          goto LABEL_126;
        v117 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v86 + 16) + 768);
        v118 = swift_retain();
        v119 = v117(v118);
        v120 = swift_release();
        if ((v119 & 1) != 0)
          goto LABEL_126;
        (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(v86 + 16) + 96))(v244, v120);
        v149 = v244[0];
        v150 = (char)v244[1];
        v151 = v221;
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v153 = v152;
        v154 = *(void (**)(char *, uint64_t))(v220 + 8);
        v154(v151, v222);
        v155 = v153 * 1000000000.0;
        if ((~COERCE__INT64(v153 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v155 > -9.22337204e18)
          {
            if (v155 < 9.22337204e18)
            {
              v156 = (uint64_t)v155;
              __swift_instantiateConcreteTypeFromMangledName(qword_2542E0660);
              v157 = swift_allocObject();
              *(_BYTE *)(v157 + 144) = v150;
              *(_QWORD *)(v157 + 24) = 0;
              *(_QWORD *)(v157 + 32) = 0;
              *(_QWORD *)(v157 + 16) = 0;
              *(_BYTE *)(v157 + 40) = 1;
              *(_OWORD *)(v157 + 48) = 0u;
              *(_OWORD *)(v157 + 64) = 0u;
              *(_QWORD *)(v157 + 80) = 0;
              *(_OWORD *)(v157 + 88) = xmmword_23B1CA770;
              *(_BYTE *)(v157 + 104) = 0;
              *(_QWORD *)(v157 + 112) = 0;
              *(_QWORD *)(v157 + 120) = v156;
              *(_QWORD *)(v157 + 128) = 0;
              *(_QWORD *)(v157 + 136) = v149;
              v158 = v221;
              sub_23B1C5BD0();
              sub_23B1C5B94();
              v160 = v159;
              v154(v158, v222);
              v161 = v160 * 1000000000.0;
              if ((~COERCE__INT64(v160 * 1000000000.0) & 0x7FF0000000000000) != 0)
              {
                v84 = v233;
                if (v161 > -9.22337204e18)
                {
                  if (v161 < 9.22337204e18)
                  {
                    sub_23ADF3AAC(v157, (uint64_t)v161);
                    swift_release();
LABEL_126:

                    goto LABEL_127;
                  }
                  goto LABEL_137;
                }
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
                goto LABEL_138;
              }
LABEL_135:
              __break(1u);
              goto LABEL_136;
            }
LABEL_134:
            __break(1u);
            goto LABEL_135;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_134;
      case 0x18u:
        v87 = (uint64_t)v215;
        sub_23AA8EFC8(v58, (uint64_t)v215, (uint64_t *)&unk_2542DDFB0);
        v88 = *(id *)v87;
        v89 = *(unsigned __int8 *)(v87 + 8);
        if (*(_BYTE *)(v87 + 9) == 1)
        {
          v244[0] = *(id *)v87;
          v90 = *(void (**)(_QWORD *(*)@<X0>(uint64_t@<X8>), uint64_t *))(v56 + qword_2542EDEA0);
          if (!v90)
            goto LABEL_26;
          MEMORY[0x24BDAC7A8](v88);
          v91 = &v213 - 4;
          *(&v213 - 2) = v92;
          *(&v213 - 1) = (uint64_t)v244;
          swift_retain();
          v93 = sub_23AEADAAC;
LABEL_21:
          v98 = v91;
          v99 = v214;
          v90(v93, v98);
          v214 = v99;
          if (!v99)
          {
            sub_23AAB7948((uint64_t)v90);

LABEL_73:
            v114 = v58;
LABEL_74:
            sub_23AA8A05C(v114, (uint64_t *)&unk_2542DDFB0);
            return;
          }

        }
        else
        {
          v244[0] = *(id *)v87;
          LOBYTE(v244[1]) = v89;
          v90 = *(void (**)(_QWORD *(*)@<X0>(uint64_t@<X8>), uint64_t *))(v56 + qword_2542EDEA0);
          if (!v90)
            goto LABEL_73;
          MEMORY[0x24BDAC7A8](v88);
          *(&v213 - 2) = v121;
          *(&v213 - 1) = (uint64_t)v244;
          swift_retain();
          v122 = v214;
          v90((_QWORD *(*)@<X0>(uint64_t@<X8>))sub_23AEADA98, &v213 - 4);
          v214 = v122;
        }
        sub_23AAB7948((uint64_t)v90);
        goto LABEL_73;
      case 0x1Cu:
        v94 = v226;
        v95 = sub_23AA8EFC8(v58, v226, (uint64_t *)&unk_2542DDFB0);
        if (*(_BYTE *)(v94 + 9) != 1)
        {
          v123 = v56;
          v124 = *(unsigned __int8 *)(v94 + 10);
          v125 = *(_QWORD *)(v123 + 32);
          v126 = *(_BYTE *)(v125 + 33);
          v127 = v214;
          v128 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 272))(v95);
          if (!v127)
          {
            if ((v126 & 1) != 0)
            {
              if ((v128 & 1) != 0)
                *(_BYTE *)(v125 + 33) = 0;
            }
            else if ((v128 & 1) == 0)
            {
              *(_BYTE *)(v125 + 33) = 1;
              v145 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v125 + 16) + 768);
              v146 = swift_retain();
              v147 = v145(v146);
              v148 = swift_release();
              if ((v147 & 1) == 0)
              {
                (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(v125 + 16) + 96))(v244, v148);
                v198 = v244[0];
                v199 = (char)v244[1];
                v200 = v221;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v202 = v201;
                v203 = *(void (**)(char *, uint64_t))(v220 + 8);
                v203(v200, v222);
                v204 = v202 * 1000000000.0;
                if ((~COERCE__INT64(v202 * 1000000000.0) & 0x7FF0000000000000) == 0)
                {
LABEL_138:
                  __break(1u);
                  goto LABEL_139;
                }
                if (v204 <= -9.22337204e18)
                {
LABEL_139:
                  __break(1u);
                  goto LABEL_140;
                }
                if (v204 >= 9.22337204e18)
                {
LABEL_140:
                  __break(1u);
                  goto LABEL_141;
                }
                v205 = (uint64_t)v204;
                __swift_instantiateConcreteTypeFromMangledName(qword_2542E0660);
                v206 = swift_allocObject();
                *(_BYTE *)(v206 + 144) = v199;
                *(_QWORD *)(v206 + 24) = 0;
                *(_QWORD *)(v206 + 32) = 0;
                *(_QWORD *)(v206 + 16) = 0;
                *(_BYTE *)(v206 + 40) = 1;
                *(_OWORD *)(v206 + 48) = 0u;
                *(_OWORD *)(v206 + 64) = 0u;
                *(_QWORD *)(v206 + 80) = 0;
                *(_OWORD *)(v206 + 88) = xmmword_23B1CA770;
                *(_BYTE *)(v206 + 104) = 0;
                *(_QWORD *)(v206 + 112) = 0;
                *(_QWORD *)(v206 + 120) = v205;
                *(_QWORD *)(v206 + 128) = 0;
                *(_QWORD *)(v206 + 136) = v198;
                v207 = v221;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v209 = v208;
                v203(v207, v222);
                v210 = v209 * 1000000000.0;
                if ((~COERCE__INT64(v209 * 1000000000.0) & 0x7FF0000000000000) == 0)
                {
LABEL_141:
                  __break(1u);
                  goto LABEL_142;
                }
                if (v210 <= -9.22337204e18)
                {
LABEL_142:
                  __break(1u);
                  goto LABEL_143;
                }
                if (v210 >= 9.22337204e18)
                {
LABEL_143:
                  __break(1u);
                  JUMPOUT(0x23AE44724);
                }
                sub_23ADF3AAC(v206, (uint64_t)v210);
                swift_release();
              }
              v58 = (uint64_t)v219;
            }
            if (v124)
            {
              v211 = *(void (**)(uint64_t))(v123 + qword_2542EDE88);
              if (v211)
              {
                v212 = swift_retain();
                v211(v212);
                sub_23AAB7948((uint64_t)v211);
              }
            }
          }
LABEL_127:
          sub_23AA8A05C(v58, (uint64_t *)&unk_2542DDFB0);
          return;
        }
        v88 = *(id *)v94;
        v89 = *(unsigned __int8 *)(v94 + 8);
LABEL_26:
        sub_23AA862DC(v88, v89, 1);
        goto LABEL_73;
      case 0x23u:
        v96 = v235;
        sub_23AA8EFC8(v58, v235, (uint64_t *)&unk_2542DDFB0);
        if (*(_BYTE *)(v96 + 9) != 1)
          goto LABEL_73;
        v88 = *(id *)v235;
        v89 = *(unsigned __int8 *)(v235 + 8);
        v244[0] = *(id *)v235;
        v90 = *(void (**)(_QWORD *(*)@<X0>(uint64_t@<X8>), uint64_t *))(v56 + qword_2542EDEA0);
        if (!v90)
          goto LABEL_26;
        MEMORY[0x24BDAC7A8](v88);
        v91 = &v213 - 4;
        *(&v213 - 2) = v97;
        *(&v213 - 1) = (uint64_t)v244;
        swift_retain();
        v93 = sub_23AEB552C;
        goto LABEL_21;
      case 0x24u:
        v100 = v218;
        sub_23AA8EFC8(v58, (uint64_t)v218, (uint64_t *)&unk_2542DDFB0);
        memcpy(v244, v100, 0x1F0uLL);
        v101 = memcpy(v243, v100, sizeof(v243));
        v102 = *(void (**)(void (*)(uint64_t@<X8>), uint64_t *))(v56 + qword_2542EDEA0);
        if (v102)
        {
          MEMORY[0x24BDAC7A8](v101);
          *(&v213 - 2) = (uint64_t)v243;
          *(&v213 - 1) = v103;
          swift_retain();
          v104 = v214;
          v102(sub_23AEADA44, &v213 - 4);
          v214 = v104;
          if (v104)
          {
            memcpy(v242, v243, sizeof(v242));
            sub_23AAFC3AC((uint64_t)v242);
            sub_23AAB7948((uint64_t)v102);
            sub_23AA8A05C(v58, (uint64_t *)&unk_2542DDFB0);
            return;
          }
          sub_23AAB7948((uint64_t)v102);
          memcpy(v242, v243, sizeof(v242));
          sub_23AAFC3AC((uint64_t)v242);
        }
        else
        {
          sub_23AAFC3AC((uint64_t)v244);
        }
        goto LABEL_73;
      default:
        goto LABEL_73;
    }
  }
}

void sub_23AE447A4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[9];
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v11 = a1;
  v2 = (_QWORD *)*v1;
  v9 = sub_23B1C5BDC();
  v8[8] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v2[305];
  v5 = v2[306];
  v6 = v2[307];
  v7 = v2[308];
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  type metadata accessor for ItemReconciliation();
}

void sub_23AE44840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)(v13 - 352) = a1;
  *(_QWORD *)(v13 - 360) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - v14;
  swift_getAssociatedTypeWitness();
  v15 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 472) = v15;
  *(_QWORD *)(v13 - 480) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v18;
  *(_QWORD *)(v13 - 328) = type metadata accessor for SnapshotItem(255, v11, v9, v19);
  v20 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 312) = v20;
  *(_QWORD *)(v13 - 240) = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 488) = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 376) = (char *)&a9 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 392) = (char *)&a9 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v28;
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v13 - 256) = (char *)&a9 - v29;
  *(_QWORD *)(v13 - 288) = type metadata accessor for SnapshotItem(255, v10, v12, v30);
  v31 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 336) = v31;
  *(_QWORD *)(v13 - 400) = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v13 - 464) = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v13 - 496) = (char *)&a9 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v13 - 504) = (char *)&a9 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v13 - 304) = (char *)&a9 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v13 - 408) = (char *)&a9 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - v45;
  MEMORY[0x24BDAC7A8](v44);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - v46;
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 160) = v9;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for PersistenceTrigger();
}

void sub_23AE44B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t AssociatedTypeWitness;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v14 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 192) = a1;
  *(_QWORD *)(v13 - 184) = v14;
  v15 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 424) = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 440) = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 416) = (char *)&a9 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 432) = (char *)&a9 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 448) = (char *)&a9 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v13 - 456) = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v13 - 208) = v11;
  *(_QWORD *)(v13 - 200) = (char *)&a9 - v32;
  *(_QWORD *)(v13 - 224) = *(_QWORD *)(v11 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v13 - 512) = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v13 - 536) = (char *)&a9 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v13 - 520) = (char *)&a9 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)(v13 - 384) = (char *)&a9 - v40;
  MEMORY[0x24BDAC7A8](v39);
  *(_QWORD *)(v13 - 528) = (char *)&a9 - v41;
  *(_QWORD *)(v13 - 176) = v10;
  *(_QWORD *)(v13 - 168) = v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 216) = AssociatedTypeWitness;
  v43 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v47 = MEMORY[0x24BDAC7A8](v46);
  v48 = MEMORY[0x24BDAC7A8](v47);
  MEMORY[0x24BDAC7A8](v48);
  *(_QWORD *)(v13 - 144) = v9;
  sub_23AFB1A3C();
}

void sub_23AE44EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!v1)
  {
    *(_QWORD *)(v9 - 584) = v2;
    *(_QWORD *)(v9 - 600) = v6;
    *(_QWORD *)(v9 - 608) = v5;
    *(_QWORD *)(v9 - 576) = v0;
    *(_QWORD *)(v9 - 616) = v4;
    *(_QWORD *)(v9 - 568) = v3;
    *(_QWORD *)(v9 - 592) = v7;
    *(_QWORD *)(v9 - 136) = v8;
    v10 = *(_QWORD *)(v9 - 152);
    v11 = *(_QWORD *)(v9 - 168);
    *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 176);
    *(_QWORD *)(v9 - 112) = v10;
    v12 = *(_QWORD *)(v9 - 160);
    *(_QWORD *)(v9 - 104) = v11;
    *(_QWORD *)(v9 - 96) = v12;
    type metadata accessor for SQLJobRegistry();
  }
}

void sub_23AE468B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD, uint64_t);
  uint64_t v6;
  uint64_t v7;

  swift_retain();
  sub_23ABE9390(v4);
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v4, v3);
    swift_release();
    v7 = *(_QWORD *)(v6 - 336);
    v5(*(_QWORD *)(v6 - 232), v7);
    v5(*(_QWORD *)(v6 - 248), v7);
    (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v2, *(_QWORD *)(v6 - 192));
    JUMPOUT(0x23AE467B0);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v4, v3);
  swift_release();
  JUMPOUT(0x23AE46960);
}

void sub_23AE469B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  double v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD);
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 - 616);
  sub_23B0EB9DC();
  v2 = *(_QWORD *)(v0 - 544);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v4 = v3;
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 560) + 8);
  v6 = *(_QWORD *)(v0 - 552);
  v5(v2, v6);
  v7 = v4 * 1000000000.0;
  if ((~COERCE__INT64(v4 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v7 > -9.22337204e18)
    {
      if (v7 < 9.22337204e18)
      {
        v8 = sub_23AD3B900(v1, 0, (uint64_t)v7, 0);
        v9 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 - 136) + 8);
        v9(v1, *(_QWORD *)(v0 - 216));
        v10 = *(_QWORD *)(v0 - 544);
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v12 = v11;
        v5(v10, v6);
        v13 = v12 * 1000000000.0;
        if ((~COERCE__INT64(v12 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          v14 = *(_QWORD *)(v0 - 576);
          if (v13 > -9.22337204e18)
          {
            if (v13 < 9.22337204e18)
            {
              v15 = *(_QWORD *)(v0 - 624);
              sub_23AEBEFD4(v8);
              if (v15)
              {
                v9(v14, *(_QWORD *)(v0 - 216));
                swift_release();
                JUMPOUT(0x23AE460E0);
              }
              swift_release();
              if (*(_DWORD *)(v0 - 208))
                JUMPOUT(0x23AE46298);
              JUMPOUT(0x23AE460CCLL);
            }
LABEL_16:
            __break(1u);
            JUMPOUT(0x23AE46B70);
          }
LABEL_15:
          __break(1u);
          goto LABEL_16;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_13;
}

uint64_t sub_23AE46BF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  void *v81;
  uint64_t result;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  int v95;
  uint64_t v96;
  void (*v97)(void **, uint64_t);
  id v98;
  uint64_t v99;
  void *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  void *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  void *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  void *v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(_QWORD *);
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  void (*v187)(void);
  _BYTE *v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  uint64_t v192;
  void **v193;
  void *v194;
  void *v195;
  id v196;
  void *v197;
  id v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  char v225;
  uint64_t v226;
  void *v227;
  id v228;
  id *v229;
  uint64_t *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  void *v237;
  id v238;
  void *v239;
  uint64_t v240;
  int v241;
  char v242;
  uint64_t v243;
  void *v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  NSObject *v250;
  NSObject *v251;
  void *v252;
  uint64_t v253;
  int v254;
  uint64_t *v255;
  void (*v256)(void);
  _BYTE *v257;
  void *v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  void *v262;
  uint64_t v263;
  int v264;
  void *v265;
  uint64_t v266;
  char v267;
  void *v268;
  uint64_t v269;
  uint64_t v270;
  char v271;
  void *v272;
  char v273;
  void *v274;
  void *v275;
  uint64_t v276;
  int v277;
  id v278;
  void *v279;
  void *v280;
  void *v281;
  NSObject *v282;
  void *v283;
  void *v284;
  id v285;
  void *v286;
  id v287;
  void *v288;
  void *v289;
  char v290;
  int v291;
  int v292;
  uint64_t v293;
  id v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  int v311;
  void *v312;
  id v313;
  uint64_t v314;
  void *v315;
  NSObject *v316;
  NSObject *v317;
  void *v318;
  void *v319;
  void *v320;
  int v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t *v324;
  uint64_t v325;
  uint64_t *v326;
  uint64_t v327;
  uint64_t v328;
  void *v329;
  id v330;
  uint64_t v331;
  void *v332;
  uint64_t v333;
  void *v334;
  void *v335;
  uint64_t v336;
  char v337;
  void *v338;
  uint64_t v339;
  char v340;
  uint64_t v341;
  unsigned __int8 v342;
  id v343;
  void *v344;
  uint64_t v345;
  uint64_t v346;
  void *v347;
  id v348;
  uint64_t v349;
  id v350;
  uint64_t v351;
  char *v352;
  char *v353;
  char *v354;
  char *v355;
  char *v356;
  char *v357;
  _QWORD *v358;
  uint64_t v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  id *v372;
  uint64_t v373;
  id *v374;
  uint64_t v375;
  uint64_t v376;
  char *v377;
  void **v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  char *v398;
  uint64_t v399;
  void *v400;
  __int128 v401;
  void *v402;
  unsigned __int8 v403;
  __int128 v404;
  char v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int16 v412;
  char v413;
  __int128 v414;
  char v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  uint64_t v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  uint64_t v433;
  char v434;
  uint64_t v435;
  uint64_t v436;
  __int128 v437;
  char v438;
  uint64_t v439;
  _BYTE v440[496];
  void *v441;
  unsigned __int8 v442;
  __int128 v443;
  char v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int16 v451;
  char v452;
  __int128 v453;
  char v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  uint64_t v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  __int128 v470;
  __int128 v471;
  uint64_t v472;
  char v473;
  uint64_t v474;
  uint64_t v475;
  __int128 v476;
  char v477;
  uint64_t v478;
  _OWORD v479[31];
  id v480[62];
  _BYTE v481[504];
  _QWORD v482[63];
  id v483;
  char v484;
  char v485;
  _QWORD v486[64];
  uint64_t v487;

  v400 = v2;
  v487 = v1;
  *(_QWORD *)&v401 = MEMORY[0x24BDAC7A8](a1);
  v373 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  v3 = MEMORY[0x24BDAC7A8](v373);
  v374 = (id *)((char *)&v351 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v380 = (uint64_t)&v351 - v5;
  v371 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  v6 = MEMORY[0x24BDAC7A8](v371);
  v372 = (id *)((char *)&v351 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v379 = (uint64_t)&v351 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0FD0);
  MEMORY[0x24BDAC7A8](v9);
  v377 = (char *)&v351 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v369 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0);
  v376 = *(_QWORD *)(v369 - 8);
  v11 = MEMORY[0x24BDAC7A8](v369);
  v364 = (uint64_t)&v351 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v370 = (uint64_t)&v351 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0FB8);
  MEMORY[0x24BDAC7A8](v14);
  v367 = (char *)&v351 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v394 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v366 = *(_QWORD *)(v394 - 8);
  v16 = MEMORY[0x24BDAC7A8](v394);
  v382 = (char *)&v351 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v363 = (uint64_t)&v351 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v368 = (char *)&v351 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v389 = *(_QWORD *)(v21 - 8);
  v390 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v378 = (void **)((char *)&v351 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v362 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v362);
  v359 = (uint64_t)&v351 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v391 = *(_QWORD *)(v24 - 8);
  v392 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v361 = (uint64_t)&v351 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v365 = (uint64_t)&v351 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v381 = (uint64_t)&v351 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v375 = (uint64_t)&v351 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v360 = (char *)&v351 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v388 = (uint64_t)&v351 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v393 = (uint64_t)&v351 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v395 = (uint64_t)&v351 - v39;
  v399 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v40 = MEMORY[0x24BDAC7A8](v399);
  v358 = (uint64_t *)((char *)&v351 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = MEMORY[0x24BDAC7A8](v40);
  v386 = (uint64_t)&v351 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v387 = (uint64_t)&v351 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v398 = (char *)&v351 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v385 = (char *)&v351 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v384 = (uint64_t)&v351 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v397 = (char *)&v351 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v396 = (char *)&v351 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v383 = (char *)&v351 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v60 = (id *)((char *)&v351 - v59);
  v61 = MEMORY[0x24BDAC7A8](v58);
  v63 = (char *)&v351 - v62;
  v64 = MEMORY[0x24BDAC7A8](v61);
  v66 = (char *)&v351 - v65;
  v67 = MEMORY[0x24BDAC7A8](v64);
  v69 = (char *)&v351 - v68;
  v70 = MEMORY[0x24BDAC7A8](v67);
  v72 = (char *)&v351 - v71;
  v73 = MEMORY[0x24BDAC7A8](v70);
  v75 = (char *)&v351 - v74;
  v76 = MEMORY[0x24BDAC7A8](v73);
  v78 = (char *)&v351 - v77;
  MEMORY[0x24BDAC7A8](v76);
  v80 = (char *)&v351 - v79;
  v81 = v400;
  result = sub_23AE26278(v401);
  if (v81)
    return result;
  v352 = v78;
  v353 = v75;
  v354 = v72;
  v355 = v63;
  v356 = v69;
  v83 = (uint64_t)v396;
  v84 = (uint64_t)v397;
  v85 = (uint64_t *)v398;
  v400 = 0;
  sub_23AA8EFC8(v401, (uint64_t)v80, (uint64_t *)&unk_2542DDFB0);
  v357 = v80;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v86 = (uint64_t)v357;
      v87 = (uint64_t)v357;
      v88 = (uint64_t)v383;
      goto LABEL_33;
    case 2u:
      v89 = (uint64_t)v352;
      sub_23AA8EFC8((uint64_t)v357, (uint64_t)v352, (uint64_t *)&unk_2542DDFB0);
      v90 = *(void **)v89;
      v91 = *(unsigned __int8 *)(v89 + 8);
      if (*(_BYTE *)(v89 + 9) == 1)
        goto LABEL_52;
      v441 = *(void **)v89;
      v442 = v91;
      v92 = v487;
      v93 = *(_QWORD *)(v487 + 16);
      *(_QWORD *)&v479[0] = v90;
      WORD4(v479[0]) = v91;
      v94 = v400;
      (*(void (**)(_QWORD *__return_ptr, _OWORD *, uint64_t))(*(_QWORD *)v93 + 168))(v486, v479, 1);
      v400 = v94;
      if (v94)
        goto LABEL_261;
      sub_23AA724E8((uint64_t)v486, (uint64_t)v481, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v481, (uint64_t)v482, (uint64_t *)&unk_2542E4CB0);
      v95 = sub_23AAFC2A4((uint64_t)v482);
      v96 = (uint64_t)v357;
      if (v95 == 1)
        goto LABEL_261;
      memcpy(v480, v486, sizeof(v480));
      if (!v480[30] || (LOBYTE(v480[42]) | 4) != 4 || BYTE1(v480[17]) != 6 && LOBYTE(v480[55]) == 1)
        goto LABEL_246;
      v97 = *(void (**)(void **, uint64_t))(**(_QWORD **)(v92 + 32) + 240);
      v98 = v480[30];
      v99 = (uint64_t)v360;
      v100 = v400;
      v97(&v441, 1);
      if (v100)
      {

        v101 = 0;
LABEL_242:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8190);
        v341 = swift_allocObject();
        *(_OWORD *)(v341 + 16) = xmmword_23B1CA760;
        v342 = v442;
        *(_QWORD *)(v341 + 32) = v441;
        *(_WORD *)(v341 + 40) = v342;
        *(_QWORD *)(v341 + 48) = 2;
        *(_OWORD *)(v341 + 56) = 0u;
        *(_OWORD *)(v341 + 72) = 0u;
        *(_OWORD *)(v341 + 88) = 0u;
        *(_OWORD *)(v341 + 98) = 0u;
        *(_BYTE *)(v341 + 114) = 9;
        *(_BYTE *)(v341 + 147) = 8;
        sub_23ADF6FF0(MEMORY[0x24BEE4AF8], v341);
        v400 = v101;
        if (!v101)
        {
          swift_bridgeObjectRelease();
          __asm { BR              X10 }
        }

        sub_23AAFC3AC((uint64_t)v480);
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
      v400 = 0;
      v331 = v392;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v391 + 48))(v99, 1, v392) == 1)
      {
        sub_23AA8A05C(v99, (uint64_t *)&unk_2542E4750);
        v101 = v400;
        goto LABEL_242;
      }
      v339 = v359;
      sub_23AA907B0(v99 + *(int *)(v331 + 48), v359, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      sub_23AA8A05C(v99, (uint64_t *)&unk_2542E6B00);
      v340 = *(_BYTE *)(v339 + *(int *)(v362 + 80));
      sub_23AA937BC(v339, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      if ((v340 & 1) == 0)
      {
        v101 = v400;
        v96 = (uint64_t)v357;
        goto LABEL_242;
      }

LABEL_246:
      sub_23AAFC3AC((uint64_t)v480);
      goto LABEL_261;
    case 3u:
      v102 = (uint64_t)v357;
      v103 = (uint64_t)v353;
      sub_23AA8EFC8((uint64_t)v357, (uint64_t)v353, (uint64_t *)&unk_2542DDFB0);
      v90 = *(void **)v103;
      v91 = *(unsigned __int8 *)(v103 + 8);
      if (*(_BYTE *)(v103 + 9) == 1)
        goto LABEL_52;
      v104 = v400;
      sub_23AE6BB8C((uint64_t)v90, v91, 0, 0);
      v400 = v104;
      if (!v104)
        goto LABEL_261;
      v181 = v102;
      return sub_23AA8A05C(v181, (uint64_t *)&unk_2542DDFB0);
    case 4u:
      v105 = (uint64_t)v356;
      v106 = (uint64_t)v357;
      sub_23AA8EFC8((uint64_t)v357, (uint64_t)v356, (uint64_t *)&unk_2542DDFB0);
      v107 = *(_QWORD *)v105;
      v108 = *(unsigned __int8 *)(v105 + 8);
      if (*(_BYTE *)(v105 + 9) == 1)
      {
        sub_23AA862DC(*(id *)(v105 + 16), *(unsigned __int8 *)(v105 + 24), *(_BYTE *)(v105 + 25));
        v90 = (void *)v107;
        goto LABEL_51;
      }
      v182 = v400;
      sub_23AE6BB8C(*(_QWORD *)v105, *(_BYTE *)(v105 + 8), 1, 0);
      v400 = v182;
      if (v182)
      {
        sub_23AA862DC(*(id *)(v105 + 16), *(unsigned __int8 *)(v105 + 24), *(_BYTE *)(v105 + 25));
        goto LABEL_71;
      }
      sub_23AA862DC(*(id *)(v105 + 16), *(unsigned __int8 *)(v105 + 24), *(_BYTE *)(v105 + 25));
      goto LABEL_261;
    case 5u:
      v109 = (uint64_t)v357;
      v110 = (uint64_t)v355;
      sub_23AA8EFC8((uint64_t)v357, (uint64_t)v355, (uint64_t *)&unk_2542DDFB0);
      v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
      v112 = v110 + *(int *)(v111 + 48);
      v113 = *(_QWORD *)(v110 + *(int *)(v111 + 64));
      v114 = v110;
      v115 = v395;
      sub_23AA724E8(v114, v395, (uint64_t *)&unk_2542E4750);
      v116 = v393;
      sub_23AA724E8(v112, v393, (uint64_t *)&unk_2542E4750);
      v84 = v388;
      sub_23AA8EFC8(v115, v388, (uint64_t *)&unk_2542E4750);
      v117 = v392;
      v118 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v391 + 48);
      if (v118(v84, 1, v392) == 1)
      {
        v119 = (uint64_t *)&unk_2542E4750;
        sub_23AA8A05C(v115, (uint64_t *)&unk_2542E4750);
        v120 = v116;
        goto LABEL_22;
      }
      v183 = v84;
      v184 = v381;
      sub_23AA724E8(v183, v381, (uint64_t *)&unk_2542E6B00);
      if (v118(v116, 1, v117) != 1)
        goto LABEL_84;
      v185 = *(_QWORD *)v184;
      v186 = *(_BYTE *)(v184 + 8);
      sub_23AAFCEE8();
      v187 = (void (*)(void))swift_allocError();
      *v188 = 2;
      LOBYTE(v188) = v186;
      v189 = v184;
      v190 = v487;
      v191 = v400;
      sub_23AE6BB8C(v185, (char)v188, 3, v187);
      if (v191)
      {

        sub_23AA8A05C(v189, (uint64_t *)&unk_2542E6B00);
        sub_23AA8A05C(v395, (uint64_t *)&unk_2542E4750);
        sub_23AA8A05C(v393, (uint64_t *)&unk_2542E4750);
        return sub_23AA8A05C(v109, (uint64_t *)&unk_2542DDFB0);
      }

      v253 = *(_QWORD *)(v190 + 16);
      v254 = *(unsigned __int8 *)(v189 + 8);
      *(_QWORD *)&v401 = *(_QWORD *)v189;
      *(_QWORD *)&v479[0] = v401;
      WORD4(v479[0]) = v254;
      (*(void (**)(_QWORD *__return_ptr, _OWORD *, uint64_t))(*(_QWORD *)v253 + 168))(v486, v479, 1);
      v400 = 0;
      sub_23AA724E8((uint64_t)v486, (uint64_t)v481, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v481, (uint64_t)v482, (uint64_t *)&unk_2542E4CB0);
      v291 = sub_23AAFC2A4((uint64_t)v482);
      v116 = v393;
      v292 = v254;
      v293 = v401;
      if (v291 == 1)
        goto LABEL_226;
      memcpy(v480, v486, sizeof(v480));
      if (LOBYTE(v480[1]) == 255)
      {
        sub_23AAFC3AC((uint64_t)v480);
      }
      else
      {
        v294 = v480[30];
        sub_23AAFC3AC((uint64_t)v480);
        if (v294)
          goto LABEL_230;
      }
LABEL_226:
      v332 = v400;
      sub_23AE6DCCC(v293, v292, 0);
      v400 = v332;
      if (v332)
      {
        v307 = v381;
        goto LABEL_228;
      }
LABEL_230:
      v117 = v392;
      v115 = v395;
LABEL_84:
      v219 = v375;
      sub_23AA8EFC8(v116, v375, (uint64_t *)&unk_2542E4750);
      if (v118(v219, 1, v117) == 1)
      {
        sub_23AA8A05C(v381, (uint64_t *)&unk_2542E6B00);
        v220 = v219;
        v119 = (uint64_t *)&unk_2542E4750;
        sub_23AA8A05C(v115, (uint64_t *)&unk_2542E4750);
        sub_23AA8A05C(v116, (uint64_t *)&unk_2542E4750);
        v124 = v220;
        goto LABEL_23;
      }
      v246 = v365;
      sub_23AA724E8(v219, v365, (uint64_t *)&unk_2542E6B00);
      if ((v113 & 0x100000000000) == 0)
      {
        sub_23AA8A05C(v246, (uint64_t *)&unk_2542E6B00);
        sub_23AA8A05C(v381, (uint64_t *)&unk_2542E6B00);
        v119 = (uint64_t *)&unk_2542E4750;
        v247 = v115;
LABEL_181:
        sub_23AA8A05C(v247, (uint64_t *)&unk_2542E4750);
        v124 = v116;
        goto LABEL_23;
      }
      v270 = v361;
      v269 = v362;
      v271 = *(_BYTE *)(v246 + *(int *)(v117 + 48) + *(int *)(v362 + 60));
      sub_23AA8EFC8(v246, v361, (uint64_t *)&unk_2542E6B00);
      if ((v271 & 1) != 0)
      {
        sub_23AA8A05C(v270, (uint64_t *)&unk_2542E6B00);
      }
      else
      {
        v296 = *(_QWORD *)(v270 + *(int *)(v117 + 48) + *(int *)(v269 + 76));
        v297 = sub_23AA8A05C(v270, (uint64_t *)&unk_2542E6B00);
        if (v296)
        {
          *(_QWORD *)&v401 = *(_QWORD *)v246;
          v298 = v246;
          v299 = *(_BYTE *)(v246 + 8);
          v300 = sub_23ADA8168(v297);
          v302 = v301;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6040);
          v303 = swift_allocObject();
          *(_BYTE *)(v303 + 144) = v299;
          *(_QWORD *)(v303 + 24) = 0;
          *(_QWORD *)(v303 + 32) = 0;
          *(_QWORD *)(v303 + 16) = 0;
          *(_BYTE *)(v303 + 40) = 1;
          *(_OWORD *)(v303 + 48) = 0u;
          *(_OWORD *)(v303 + 64) = 0u;
          *(_QWORD *)(v303 + 80) = 0;
          *(_OWORD *)(v303 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v303 + 104) = 0;
          *(_QWORD *)(v303 + 112) = v300;
          *(_QWORD *)(v303 + 120) = v302;
          v304 = v401;
          *(_QWORD *)(v303 + 128) = 0x4000000;
          *(_QWORD *)(v303 + 136) = v304;
          v305 = sub_23AF3EA84();
          v306 = v400;
          sub_23ADF3AAC(v303, v305);
          v400 = v306;
          if (v306)
          {
            swift_release();
            sub_23AA8A05C(v298, (uint64_t *)&unk_2542E6B00);
            v307 = v381;
LABEL_228:
            sub_23AA8A05C(v307, (uint64_t *)&unk_2542E6B00);
            sub_23AA8A05C(v395, (uint64_t *)&unk_2542E4750);
            sub_23AA8A05C(v116, (uint64_t *)&unk_2542E4750);
            goto LABEL_229;
          }
          swift_release();
          v308 = v381;
          v246 = v298;
          goto LABEL_180;
        }
      }
      v308 = v381;
LABEL_180:
      sub_23AA8A05C(v246, (uint64_t *)&unk_2542E6B00);
      sub_23AA8A05C(v308, (uint64_t *)&unk_2542E6B00);
      v119 = (uint64_t *)&unk_2542E4750;
      v247 = v395;
      goto LABEL_181;
    case 6u:
      v121 = (uint64_t)v357;
      sub_23AA8EFC8((uint64_t)v357, v84, (uint64_t *)&unk_2542DDFB0);
      v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
      v123 = v84 + *(int *)(v122 + 48);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v389 + 48))(v84, 1, v390) == 1)
      {
        v119 = &qword_2542E4770;
        v120 = v123;
LABEL_22:
        sub_23AA8A05C(v120, v119);
        v124 = v84;
        goto LABEL_23;
      }
      v192 = *(_QWORD *)(v84 + *(int *)(v122 + 64));
      v193 = v378;
      sub_23AA724E8(v84, (uint64_t)v378, (uint64_t *)&unk_2542E4760);
      if ((v192 & 2) != 0)
      {
        v194 = v400;
        (*(void (**)(_QWORD *__return_ptr, void **))(**(_QWORD **)(v487 + 16) + 152))(v486, v193);
        if (v194)
        {
          sub_23AA8A05C((uint64_t)v193, (uint64_t *)&unk_2542E4760);
          sub_23AA8A05C(v123, &qword_2542E4770);
          v152 = v121;
          return sub_23AA8A05C(v152, (uint64_t *)&unk_2542DDFB0);
        }
        if (LOBYTE(v486[1]) == 255)
          sub_23AE6EEBC(*v193, 0);
        v400 = 0;
      }
      sub_23AA8A05C((uint64_t)v193, (uint64_t *)&unk_2542E4760);
      v255 = &qword_2542E4770;
      goto LABEL_122;
    case 9u:
      v96 = (uint64_t)v357;
      v125 = v83;
      sub_23AA8EFC8((uint64_t)v357, v83, (uint64_t *)&unk_2542DDFB0);
      v126 = *(id *)v83;
      v108 = *(unsigned __int8 *)(v83 + 8);
      if (*(_BYTE *)(v125 + 9) == 1)
      {
        v127 = v400;
        sub_23AE6EEBC(v126, 0);
        v400 = v127;
        if (!v127)
          goto LABEL_50;
        sub_23AA862DC(v126, v108, 1);
      }
      else
      {
        v195 = v400;
        sub_23AE6DCCC((uint64_t)v126, v108, 0);
        v400 = v195;
        if (!v195)
          goto LABEL_261;
      }
LABEL_68:
      v181 = v96;
      return sub_23AA8A05C(v181, (uint64_t *)&unk_2542DDFB0);
    case 0xEu:
      v106 = (uint64_t)v357;
      v128 = (uint64_t)v354;
      sub_23AA8EFC8((uint64_t)v357, (uint64_t)v354, (uint64_t *)&unk_2542DDFB0);
      v129 = *(void **)(v128 + 16);
      v130 = *(_QWORD *)v128;
      v131 = *(unsigned __int8 *)(v128 + 8);
      if (*(_BYTE *)(v128 + 9) == 1)
      {

LABEL_47:
        v90 = (void *)v130;
        v91 = v131;
        goto LABEL_52;
      }
      v196 = v129;
      v197 = v400;
      sub_23AE6BB8C(v130, v131, 0, (void (*)(void))v129);
      v400 = v197;
      if (!v197)
      {

        goto LABEL_261;
      }

LABEL_71:
      v181 = v106;
      return sub_23AA8A05C(v181, (uint64_t *)&unk_2542DDFB0);
    case 0xFu:
      v132 = (uint64_t)v357;
      sub_23AA8EFC8((uint64_t)v357, (uint64_t)v66, (uint64_t *)&unk_2542DDFB0);
      v133 = (void *)*((_QWORD *)v66 + 2);
      v134 = *(_QWORD *)v66;
      v135 = v66[8];
      if (v66[9] == 1)
      {

        v90 = (void *)v134;
        v91 = v135;
        goto LABEL_52;
      }
      v441 = *(void **)v66;
      v442 = v135;
      v198 = v133;
      v199 = v487;
      v200 = v400;
      sub_23AE6BB8C(v134, v135, 1, (void (*)(void))v133);
      if (v200)
      {

        return sub_23AA8A05C(v132, (uint64_t *)&unk_2542DDFB0);
      }

      (*(void (**)(_QWORD *__return_ptr, void **))(**(_QWORD **)(v199 + 32) + 280))(v486, &v441);
      v267 = v486[1];
      if (LOBYTE(v486[1]) == 255)
        goto LABEL_139;
      v295 = v486[0];
      if (LOBYTE(v486[1]))
      {
        if (LOBYTE(v486[1]) == 1)
        {
          if ((_DWORD)v135 != 1 || v486[0] != v134)
            goto LABEL_233;
LABEL_139:
          v400 = 0;
          goto LABEL_140;
        }
        if (v486[0])
        {
          if ((_DWORD)v135 == 2 && v134 == 1)
            goto LABEL_139;
        }
        else if ((_DWORD)v135 == 2 && !v134)
        {
          goto LABEL_139;
        }
      }
      else if (!(_DWORD)v135 && LODWORD(v486[0]) == (_DWORD)v134)
      {
        goto LABEL_139;
      }
LABEL_233:
      v333 = *(_QWORD *)(v199 + 16);
      *(_QWORD *)&v479[0] = v486[0];
      WORD4(v479[0]) = LOBYTE(v486[1]);
      (*(void (**)(_QWORD *__return_ptr, _OWORD *, uint64_t))(*(_QWORD *)v333 + 168))(v486, v479, 1);
      v400 = 0;
      sub_23AA724E8((uint64_t)v486, (uint64_t)v481, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v481, (uint64_t)v482, (uint64_t *)&unk_2542E4CB0);
      if (sub_23AAFC2A4((uint64_t)v482) != 1)
      {
        memcpy(v480, v486, sizeof(v480));
        if (LOBYTE(v480[4]) != 1)
        {
          sub_23AAFC3AC((uint64_t)v480);
          goto LABEL_140;
        }
        v349 = (uint64_t)v358;
        *v358 = v295;
        *(_BYTE *)(v349 + 8) = v267;
        *(_BYTE *)(v349 + 9) = 0;
        *(_QWORD *)(v349 + 16) = v133;
        swift_storeEnumTagMultiPayload();
        v350 = v133;
        sub_23AE4EDD4(v349);
        sub_23AAFC3AC((uint64_t)v480);

        sub_23AA8A05C(v349, (uint64_t *)&unk_2542DDFB0);
LABEL_261:
        v181 = (uint64_t)v357;
        return sub_23AA8A05C(v181, (uint64_t *)&unk_2542DDFB0);
      }
LABEL_140:

      goto LABEL_261;
    case 0x10u:
      v136 = v384;
      sub_23AA8EFC8((uint64_t)v357, v384, (uint64_t *)&unk_2542DDFB0);
      v137 = *(_QWORD *)(v136 + 8);
      *(_QWORD *)&v401 = *(_QWORD *)v136;
      v138 = *(_QWORD *)(v136 + 16);
      v139 = *(_QWORD *)(v136 + 24);
      v140 = *(_QWORD *)(v136 + 32);
      v141 = *(_BYTE *)(v136 + 40);
      v142 = *(_QWORD *)(v136 + 48);
      v143 = sub_23AAA3E2C(v137, v138);
      v399 = sub_23ADA8168(v143);
      v145 = v144;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6100);
      v146 = swift_allocObject();
      *(_QWORD *)(v146 + 144) = v137;
      *(_QWORD *)(v146 + 152) = v138;
      *(_QWORD *)(v146 + 160) = v139;
      *(_QWORD *)(v146 + 168) = v140;
      *(_BYTE *)(v146 + 176) = v141;
      *(_QWORD *)(v146 + 184) = v142;
      *(_QWORD *)(v146 + 24) = 0;
      *(_QWORD *)(v146 + 32) = 0;
      *(_QWORD *)(v146 + 16) = 0;
      *(_BYTE *)(v146 + 40) = 1;
      *(_OWORD *)(v146 + 48) = 0u;
      *(_OWORD *)(v146 + 64) = 0u;
      *(_QWORD *)(v146 + 80) = 0;
      *(_OWORD *)(v146 + 88) = xmmword_23B1CA770;
      *(_BYTE *)(v146 + 104) = 0;
      *(_QWORD *)(v146 + 112) = v399;
      *(_QWORD *)(v146 + 120) = v145;
      v147 = v401;
      *(_QWORD *)(v146 + 128) = 0x4000;
      *(_QWORD *)(v146 + 136) = v147;
      v148 = sub_23AF3EA84();
      v149 = v400;
      sub_23ADF3AAC(v146, v148);
      v400 = v149;
      swift_release();
      sub_23AAA3E18(v137, v138);
      goto LABEL_261;
    case 0x12u:
      v86 = (uint64_t)v357;
      v87 = (uint64_t)v357;
      v88 = (uint64_t)v385;
LABEL_33:
      sub_23AA8EFC8(v87, v88, (uint64_t *)&unk_2542DDFB0);
      v150 = *(void **)(v88 + 16);
      v151 = v400;
      sub_23AE6DCCC(*(_QWORD *)v88, *(unsigned __int8 *)(v88 + 8), 0);
      if (v151)
      {

        v152 = v86;
        return sub_23AA8A05C(v152, (uint64_t *)&unk_2542DDFB0);
      }
      sub_23AE6EEBC(v150, 0);
      v400 = 0;

      goto LABEL_261;
    case 0x15u:
      v109 = (uint64_t)v357;
      v153 = sub_23AA8EFC8((uint64_t)v357, (uint64_t)v85, (uint64_t *)&unk_2542DDFB0);
      v154 = *v85;
      if (*v85 < 0)
      {
        v214 = v154 & 0x7FFFFFFFFFFFFFFFLL;
        v215 = *(_BYTE *)(v154 + 129);
        v216 = v487;
        if (v215 < 0)
        {
          v233 = qword_2542EE120;
          v218 = v376;
          v217 = (uint64_t)v377;
          if (*(_BYTE *)(v487 + qword_2542EE120) == 1 && !*(_QWORD *)(v487 + qword_2542E6C98))
          {
            v289 = v400;
            v290 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v487 + 24) + 496))(v153);
            if (v289)
              goto LABEL_166;
            v400 = 0;
            if ((v290 & 1) == 0)
            {
              if (qword_2542E6EE0 != -1)
                swift_once();
              objc_msgSend((id)qword_2542EDE00, sel_removeWatcher_, v216);
              *(_BYTE *)(v216 + v233) = 0;
            }
          }
        }
        else
        {
          v218 = v376;
          v217 = (uint64_t)v377;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E63F0);
        v234 = swift_dynamicCastClass();
        if (v234)
        {
          v235 = *(_QWORD *)(v234 + 136);
          v236 = *(unsigned __int8 *)(v234 + 144);
          if (*(_BYTE *)(v234 + 104) == 3)
          {
            v237 = *(void **)(v234 + 88);
            v238 = v237;
          }
          else
          {
            v237 = 0;
          }
          v252 = v400;
          swift_retain();
          sub_23AE6DCCC(v235, v236, v237);
          v400 = v252;
          if (v252)
          {

            goto LABEL_116;
          }

          v266 = swift_release();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
          v248 = swift_dynamicCastClass();
          if (v248)
          {
            v249 = *(void **)(v248 + 136);
            if (*(_BYTE *)(v248 + 104) == 3)
            {
              v250 = *(NSObject **)(v248 + 88);
              v251 = v250;
            }
            else
            {
              v250 = 0;
            }
            swift_retain();
            v287 = v249;
            v288 = v400;
            sub_23AE6EEBC(v287, v250);
            v400 = v288;
            if (v288)
            {
              swift_release();

              goto LABEL_164;
            }
            swift_release();

          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
            v266 = swift_dynamicCastClass();
            if (v266
              || (__swift_instantiateConcreteTypeFromMangledName(&qword_2569E6330),
                  (v266 = swift_dynamicCastClass()) != 0))
            {
              if (*(_BYTE *)(v266 + 104) == 3)
              {
                v282 = *(NSObject **)(v266 + 88);
                v283 = *(void **)(v266 + 96);
                v284 = *(void **)(v266 + 136);
                swift_retain();
                sub_23AAAE478(v282, v283, 3);
                v285 = v284;
                v286 = v400;
                sub_23AE6EEBC(v285, v282);
                v400 = v286;
                if (v286)
                {
                  swift_release();
                  sub_23AAAEE10(v282, v283, 3);

                  goto LABEL_164;
                }
                swift_release();
                sub_23AAAEE10(v282, v283, 3);

                v217 = (uint64_t)v377;
              }
            }
          }
        }
        (*(void (**)(uint64_t))(*(_QWORD *)v214 + 488))(v266);
        v321 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v218 + 48))(v217, 1, v369);
        v322 = v217;
        v323 = v370;
        if (v321 != 1)
        {
          sub_23AA724E8(v217, v370, (uint64_t *)&unk_2542E0FC0);
          v325 = v364;
          sub_23AA8EFC8(v323, v364, (uint64_t *)&unk_2542E0FC0);
          if (swift_getEnumCaseMultiPayload() == 1)
            v326 = &qword_2542E1600;
          else
            v326 = &qword_2542E1608;
          v327 = v325;
          v328 = v363;
          sub_23AA724E8(v327, v363, v326);
          swift_storeEnumTagMultiPayload();
          if (*(_BYTE *)(v214 + 104) == 3)
          {
            v329 = *(void **)(v214 + 88);
            v330 = v329;
          }
          else
          {
            v329 = 0;
          }
          sub_23AE4EF2C(v328, (uint64_t)v329);

          swift_release();
          sub_23AA8A05C(v328, &qword_2542DDDB0);
          sub_23AA8A05C(v323, (uint64_t *)&unk_2542E0FC0);
          goto LABEL_261;
        }
        swift_release();
        v324 = &qword_2542E0FD0;
        goto LABEL_254;
      }
      v155 = v487;
      if ((*(_BYTE *)(v154 + 129) & 0x80) == 0
        || (v156 = qword_2542EE120, *(_BYTE *)(v487 + qword_2542EE120) != 1)
        || *(_QWORD *)(v487 + qword_2542E6C98))
      {
LABEL_40:
        __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
        v157 = swift_dynamicCastClass();
        if (v157)
        {
          v158 = v157;
          v159 = *(_QWORD *)(v157 + 136);
          v160 = *(unsigned __int8 *)(v157 + 144);
          if (*(_BYTE *)(v157 + 104) == 3)
          {
            v161 = *(void **)(v157 + 88);
            v162 = v161;
          }
          else
          {
            v161 = 0;
          }
          v239 = v400;
          swift_retain();
          sub_23AE6DCCC(v159, v160, v161);
          if (v239)
          {
            swift_release();

            swift_release();
            return sub_23AA8A05C(v109, (uint64_t *)&unk_2542DDFB0);
          }

          v240 = *(_QWORD *)(v158 + 136);
          v241 = *(unsigned __int8 *)(v158 + 144);
          v242 = sub_23AE57808();
          v243 = *(_QWORD *)(v158 + 120);
          if (*(_BYTE *)(v158 + 104) == 3)
          {
            v244 = *(void **)(v158 + 88);
            v245 = v244;
          }
          else
          {
            v244 = 0;
          }
          sub_23AE70050(v240, v241, v242, v243, (uint64_t)v244);
          v400 = 0;
          swift_release();

          goto LABEL_252;
        }
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
        v221 = swift_dynamicCastClass();
        if (v221)
        {
          v222 = v221;
          *(_QWORD *)&v401 = v154;
          v223 = *(_QWORD *)(v221 + 136);
          v224 = *(unsigned __int8 *)(v221 + 144);
          v225 = sub_23AE57808();
          v226 = *(_QWORD *)(v222 + 120);
          if (*(_BYTE *)(v222 + 104) == 3)
          {
            v227 = *(void **)(v222 + 88);
            v228 = v227;
          }
          else
          {
            v227 = 0;
          }
          v268 = v400;
          swift_retain();
          sub_23AE70050(v223, v224, v225, v226, (uint64_t)v227);
          v400 = v268;
          if (v268)
          {
            swift_release();

LABEL_260:
            swift_release();
            goto LABEL_261;
          }

          if (*(_BYTE *)(v222 + 104) == 3)
          {
            v274 = *(void **)(v222 + 88);
            v275 = *(void **)(v222 + 96);
            v276 = *(_QWORD *)(v222 + 136);
            v277 = *(unsigned __int8 *)(v222 + 144);
            v278 = v274;
            v279 = v400;
            sub_23AE6DCCC(v276, v277, v274);
            v400 = v279;
            v154 = v401;
            if (v279)
            {
              swift_release();
              v280 = v274;
              v281 = v275;
LABEL_155:
              sub_23AAAEE10(v280, v281, 3);
              goto LABEL_260;
            }
            swift_release();
            v318 = v274;
            v319 = v275;
            goto LABEL_207;
          }
          v154 = v401;
LABEL_251:
          v260 = swift_release();
          goto LABEL_252;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60A0);
        v260 = swift_dynamicCastClass();
        if (v260)
        {
          if (*(_BYTE *)(v260 + 104) == 3)
          {
            v261 = *(void **)(v260 + 88);
            v262 = *(void **)(v260 + 96);
            v263 = *(_QWORD *)(v260 + 136);
            v264 = *(unsigned __int8 *)(v260 + 144);
            swift_retain();
            sub_23AAAE478(v261, v262, 3);
            v265 = v400;
            sub_23AE6DCCC(v263, v264, v261);
            v400 = v265;
            if (!v265)
            {
              swift_release();
              v318 = v261;
              v319 = v262;
LABEL_207:
              sub_23AAAEE10(v318, v319, 3);
              goto LABEL_252;
            }
            swift_release();
            sub_23AAAEE10(v261, v262, 3);
LABEL_164:
            swift_release();
LABEL_229:
            v181 = v109;
            return sub_23AA8A05C(v181, (uint64_t *)&unk_2542DDFB0);
          }
LABEL_252:
          v345 = v394;
          v322 = (uint64_t)v367;
          v123 = (uint64_t)v368;
          v346 = v366;
          (*(void (**)(uint64_t))(*(_QWORD *)v154 + 488))(v260);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v346 + 48))(v322, 1, v345) != 1)
          {
            sub_23AA724E8(v322, v123, &qword_2542DDDB0);
            if (*(_BYTE *)(v154 + 104) == 3)
            {
              v347 = *(void **)(v154 + 88);
              v348 = v347;
            }
            else
            {
              v347 = 0;
            }
            sub_23AE4EF2C(v123, (uint64_t)v347);

            swift_release();
            v255 = &qword_2542DDDB0;
LABEL_122:
            sub_23AA8A05C(v123, v255);
            goto LABEL_261;
          }
          swift_release();
          v324 = &qword_2542E0FB8;
LABEL_254:
          sub_23AA8A05C(v322, v324);
          goto LABEL_261;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5578);
        v309 = swift_dynamicCastClass();
        if (v309)
        {
          v310 = *(_QWORD *)(v309 + 152);
          v311 = *(unsigned __int8 *)(v309 + 160);
          if (*(_BYTE *)(v309 + 104) == 3)
          {
            v312 = *(void **)(v309 + 88);
            v313 = v312;
          }
          else
          {
            v312 = 0;
          }
          v320 = v400;
          swift_retain();
          sub_23AE6DCCC(v310, v311, v312);
          v400 = v320;
          if (!v320)
          {

            goto LABEL_251;
          }

        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E63C0);
          v314 = swift_dynamicCastClass();
          if (!v314)
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F20);
            v260 = swift_dynamicCastClass();
            if (v260 && *(_BYTE *)(v260 + 104) == 3)
            {
              v334 = *(void **)(v260 + 88);
              v335 = *(void **)(v260 + 96);
              v336 = *(_QWORD *)(v260 + 136);
              v337 = *(_BYTE *)(v260 + 144);
              swift_retain();
              sub_23AAAE478(v334, v335, 3);
              v338 = v400;
              sub_23AE6BB8C(v336, v337, 0, (void (*)(void))v334);
              v400 = v338;
              if (v338)
              {
                swift_release();
                v280 = v334;
                v281 = v335;
                goto LABEL_155;
              }
              swift_release();
              sub_23AAAEE10(v334, v335, 3);
            }
            goto LABEL_252;
          }
          v315 = *(void **)(v314 + 136);
          if (*(_BYTE *)(v314 + 104) == 3)
          {
            v316 = *(NSObject **)(v314 + 88);
            v317 = v316;
          }
          else
          {
            v316 = 0;
          }
          swift_retain();
          v343 = v315;
          v344 = v400;
          sub_23AE6EEBC(v343, v316);
          v400 = v344;
          if (!v344)
          {

            goto LABEL_251;
          }

        }
LABEL_116:
        swift_release_n();
        goto LABEL_229;
      }
      v272 = v400;
      v273 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v487 + 24) + 496))(v153);
      if (!v272)
      {
        v400 = 0;
        if ((v273 & 1) == 0)
        {
          if (qword_2542E6EE0 != -1)
            swift_once();
          objc_msgSend((id)qword_2542EDE00, sel_removeWatcher_, v155);
          *(_BYTE *)(v155 + v156) = 0;
        }
        goto LABEL_40;
      }
LABEL_166:
      swift_release();
      v152 = v109;
      return sub_23AA8A05C(v152, (uint64_t *)&unk_2542DDFB0);
    case 0x1Bu:
      v163 = (uint64_t)v357;
      v164 = v387;
      sub_23AA8EFC8((uint64_t)v357, v387, (uint64_t *)&unk_2542DDFB0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v165 = v380;
        sub_23AA724E8(v164, v380, &qword_2542E1608);
        v166 = v487;
        v167 = (void *)MEMORY[0x24BDAC7A8](*(_QWORD *)(v487 + qword_2542EDF90));
        *(&v351 - 2) = v166;
        *(&v351 - 1) = v165;
        v168 = v400;
        sub_23AC45210(v167, (void (*)(void))sub_23AEB275C);
        v400 = v168;
        v169 = (uint64_t)v382;
        if (v168)
        {
          v170 = &qword_2542E1608;
          v171 = v165;
LABEL_76:
          sub_23AA8A05C(v171, v170);
          v181 = v163;
          return sub_23AA8A05C(v181, (uint64_t *)&unk_2542DDFB0);
        }
        v229 = v374;
        sub_23AA8EFC8(v165, (uint64_t)v374, &qword_2542E1608);
        if (swift_getEnumCaseMultiPayload() == 6)
        {

          v230 = &qword_2542E1608;
          sub_23AA8EFC8(v165, v169, &qword_2542E1608);
          swift_storeEnumTagMultiPayload();
          sub_23AE4EF2C(v169, 0);
          sub_23AA8A05C(v169, &qword_2542DDDB0);
          v231 = v165;
LABEL_96:
          sub_23AA8A05C(v231, v230);
          goto LABEL_261;
        }
        v119 = &qword_2542E1608;
        v259 = v165;
      }
      else
      {
        v201 = v379;
        sub_23AA724E8(v164, v379, &qword_2542E1600);
        v202 = v487;
        v203 = (void *)MEMORY[0x24BDAC7A8](*(_QWORD *)(v487 + qword_2542EDF90));
        *(&v351 - 2) = v202;
        *(&v351 - 1) = v201;
        v204 = v400;
        sub_23AC45210(v203, (void (*)(void))sub_23AEB2774);
        v400 = v204;
        v205 = (uint64_t)v382;
        if (v204)
        {
          v170 = &qword_2542E1600;
          v171 = v201;
          goto LABEL_76;
        }
        v229 = v372;
        sub_23AA8EFC8(v201, (uint64_t)v372, &qword_2542E1600);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          v232 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6420);
          sub_23AA8A05C((uint64_t)v229 + *(int *)(v232 + 48), &qword_2542E72C0);
          v230 = &qword_2542E1600;
          sub_23AA8EFC8(v201, v205, &qword_2542E1600);
          swift_storeEnumTagMultiPayload();
          sub_23AE4EF2C(v205, 0);
          sub_23AA8A05C(v205, &qword_2542DDDB0);
          v231 = v201;
          goto LABEL_96;
        }
        v119 = &qword_2542E1600;
        v259 = v201;
      }
      sub_23AA8A05C(v259, v119);
      v124 = (uint64_t)v229;
LABEL_23:
      sub_23AA8A05C(v124, v119);
      goto LABEL_261;
    case 0x1Eu:
      v172 = (uint64_t)v357;
      v173 = v386;
      v174 = sub_23AA8EFC8((uint64_t)v357, v386, (uint64_t *)&unk_2542DDFB0);
      v130 = *(_QWORD *)v173;
      v131 = *(unsigned __int8 *)(v173 + 8);
      if (*(_BYTE *)(v173 + 9) == 1)
        goto LABEL_47;
      v206 = sub_23ADA8168(v174);
      v208 = v207;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6080);
      v209 = swift_allocObject();
      *(_BYTE *)(v209 + 144) = v131;
      *(_QWORD *)(v209 + 24) = 0;
      *(_QWORD *)(v209 + 32) = 0;
      *(_QWORD *)(v209 + 16) = 0;
      *(_BYTE *)(v209 + 40) = 1;
      *(_OWORD *)(v209 + 48) = 0u;
      *(_OWORD *)(v209 + 64) = 0u;
      *(_QWORD *)(v209 + 80) = 0;
      *(_OWORD *)(v209 + 88) = xmmword_23B1CA770;
      *(_BYTE *)(v209 + 104) = 0;
      *(_QWORD *)(v209 + 112) = v206;
      *(_QWORD *)(v209 + 120) = v208;
      *(_QWORD *)(v209 + 128) = 0;
      *(_QWORD *)(v209 + 136) = v130;
      v210 = sub_23AF3EA84();
      v211 = v400;
      sub_23ADF3AAC(v209, v210);
      v400 = v211;
      if (!v211)
        goto LABEL_260;
      swift_release();
      v181 = v172;
      return sub_23AA8A05C(v181, (uint64_t *)&unk_2542DDFB0);
    case 0x1Fu:
      v175 = (uint64_t)v357;
      sub_23AA8EFC8((uint64_t)v357, (uint64_t)v60, (uint64_t *)&unk_2542DDFB0);
      v126 = *v60;
      v108 = *((unsigned __int8 *)v60 + 8);
      if (*((_BYTE *)v60 + 9) == 1)
      {
        sub_23AA862DC(v60[2], *((unsigned __int8 *)v60 + 24), *((_BYTE *)v60 + 25));
LABEL_50:
        v90 = v126;
LABEL_51:
        v91 = v108;
LABEL_52:
        sub_23AA862DC(v90, v91, 1);
        goto LABEL_261;
      }
      v212 = *(_QWORD *)(v487 + 16);
      v483 = *v60;
      v484 = v108;
      v485 = 0;
      v213 = v400;
      (*(void (**)(_QWORD *__return_ptr, id *, uint64_t))(*(_QWORD *)v212 + 168))(v486, &v483, 1);
      v400 = v213;
      if (v213)
        goto LABEL_129;
      sub_23AA724E8((uint64_t)v486, (uint64_t)v481, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v481, (uint64_t)v482, (uint64_t *)&unk_2542E4CB0);
      if (sub_23AAFC2A4((uint64_t)v482) == 1)
      {
        sub_23ACFC784(v479);
      }
      else
      {
        memcpy(v479, v486, sizeof(v479));
        nullsub_1(v479);
      }
      sub_23AA724E8((uint64_t)v479, (uint64_t)v480, qword_2542E6E20);
      sub_23AA724E8((uint64_t)v480, (uint64_t)&v441, qword_2542E6E20);
      sub_23AA724E8((uint64_t)v480, (uint64_t)v479, qword_2542E6E20);
      if (sub_23AAFC2A4((uint64_t)v479) == 1)
        goto LABEL_127;
      v431 = v470;
      v432 = v471;
      v433 = v472;
      v427 = v466;
      v428 = v467;
      v429 = v468;
      v430 = v469;
      v423 = v462;
      v424 = v463;
      v425 = v464;
      v426 = v465;
      v421 = v460;
      v422 = v461;
      v402 = v441;
      v403 = v442;
      v401 = v443;
      v404 = v443;
      v405 = v444;
      v406 = v445;
      v407 = v446;
      v408 = v447;
      v409 = v448;
      v410 = v449;
      v411 = v450;
      v412 = v451;
      v413 = v452;
      v414 = v453;
      v415 = v454;
      v416 = v455;
      v417 = v456;
      v418 = v457;
      v419 = v458;
      v420 = v459;
      v434 = v473;
      v435 = v474;
      v436 = v475;
      v437 = v476;
      v438 = v477;
      v439 = v478;
      sub_23AA724E8((uint64_t)v480, (uint64_t)v440, qword_2542E6E20);
      sub_23ACFC940((uint64_t)v440);
      sub_23AAFC3AC((uint64_t)&v402);
      if ((v401 & 1) != 0)
      {
LABEL_127:
        sub_23AAFCEE8();
        v256 = (void (*)(void))swift_allocError();
        *v257 = 2;
        v258 = v400;
        sub_23AE6BB8C((uint64_t)v126, v108, 3, v256);
        v400 = v258;
        if (v258)
        {
          sub_23ADF2D34((uint64_t)v480, (voidsub_23AAAEC3C);

LABEL_129:
          sub_23AA862DC(v60[2], *((unsigned __int8 *)v60 + 24), *((_BYTE *)v60 + 25));
          v181 = v175;
          return sub_23AA8A05C(v181, (uint64_t *)&unk_2542DDFB0);
        }
        sub_23ADF2D34((uint64_t)v480, (voidsub_23AAAEC3C);

      }
      else
      {
        sub_23ADF2D34((uint64_t)v480, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
      }
      sub_23AA862DC(v60[2], *((unsigned __int8 *)v60 + 24), *((_BYTE *)v60 + 25));
      goto LABEL_261;
    case 0x28u:
      v176 = (uint64_t *)(v487 + qword_2542EDF80);
      swift_beginAccess();
      v177 = *v176;
      *v176 = MEMORY[0x24BEE4AF8];
      v178 = *(_QWORD *)(v177 + 16);
      if (v178)
      {
        v179 = v177 + 40;
        do
        {
          v180 = *(void (**)(_QWORD *))(v179 - 8);
          v482[0] = 0;
          swift_retain();
          v180(v482);
          swift_release();
          v179 += 16;
          --v178;
        }
        while (v178);
      }
      swift_bridgeObjectRelease();
      goto LABEL_261;
    default:
      goto LABEL_261;
  }
}

void sub_23AE493A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  void *v23;
  unint64_t (*v24)();
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  void *v48;
  unint64_t (*v49)();
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *aBlock;
  uint64_t v67;
  id (*v68)(uint64_t, void *);
  void *v69;
  unint64_t (*v70)();
  uint64_t v71;
  uint64_t v72;

  v3 = v2;
  v72 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a1;
  sub_23AA8EFC8(a1, (uint64_t)v10, (uint64_t *)&unk_2542DDFB0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542DDFB0);
  v64 = v1;
  if (EnumCaseMultiPayload == 43)
  {
    v12 = swift_retain();
    sub_23B02A810(v12);
    if (!v2)
    {
      *(_BYTE *)(v1 + 104) = 0;
      v13 = *(void **)(v1 + 24);
      v70 = sub_23ADFA228;
      v71 = 0;
      aBlock = (char *)MEMORY[0x24BDAC760];
      v67 = 1107296256;
      v68 = sub_23AA9432C;
      v69 = &block_descriptor_39;
      v14 = _Block_copy(&aBlock);
      swift_release();
      aBlock = 0;
      v15 = objc_msgSend(v13, sel_fetchSwift_error_, v14, &aBlock);
      _Block_release(v14);
      v16 = aBlock;
      if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
        goto LABEL_44;
      if (v15)
      {
        if (objc_msgSend(v15, sel_next))
        {
          do
          {
            v34 = (void *)MEMORY[0x23B8601A8]();
            if ((*(_BYTE *)(v64 + 104) & 1) == 0)
            {
              v35 = v15;
              v36 = objc_msgSend(v35, sel_stringAtIndex_, 0);
              if (!v36)
              {
                sub_23B1C63E0();
                v36 = (id)sub_23B1C63BC();
                swift_bridgeObjectRelease();
              }

              v37 = objc_msgSend(v35, sel_longAtIndex_, 1);
              v38 = objc_msgSend(v35, sel_isNullAtIndex_, 2);
              if ((v38 & 1) != 0)
                v31 = 0;
              else
                v31 = objc_msgSend(v35, sel_integerAtIndex_, 2);
              __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3130);
              v32 = swift_allocObject();
              *(_QWORD *)(v32 + 16) = v36;
              *(_QWORD *)(v32 + 24) = v37;
              *(_QWORD *)(v32 + 32) = v31;
              *(_BYTE *)(v32 + 40) = v38;
              v33 = v36;
              sub_23AE839D4(v32);

              swift_release();
            }
            objc_autoreleasePoolPop(v34);
          }
          while ((objc_msgSend(v15, sel_next) & 1) != 0);

        }
        else
        {

        }
      }
      else
      {
        sub_23B1C587C();

        swift_willThrow();
      }
    }
    return;
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    return;
  }
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 152))(Strong);
  swift_release();
  v19 = (uint64_t)sub_23ADFF6B8(0, v18);
  v20 = *(char **)(v19 + 16);
  v58 = v1 + 16;
  if (v20)
  {
    v59 = v7;
    v60 = (char *)v19;
    v21 = (char *)(v19 + 72);
    do
    {
      v61 = v20;
      v62 = &v55;
      v22 = *((_QWORD *)v21 - 3);
      v23 = (void *)*((_QWORD *)v21 - 2);
      v24 = (unint64_t (*)())*((_QWORD *)v21 - 1);
      v25 = *v21;
      v26 = (char *)*((_QWORD *)v21 - 5);
      v27 = *((_QWORD *)v21 - 4);
      v65 = v3;
      aBlock = v26;
      v67 = v27;
      v68 = (id (*)(uint64_t, void *))v22;
      v69 = v23;
      v70 = v24;
      LOBYTE(v71) = v25;
      MEMORY[0x24BDAC7A8](v19);
      *(&v55 - 2) = v64;
      *(&v55 - 1) = (uint64_t)&aBlock;
      sub_23AEADB80(v27, v22, (uint64_t)v23, (uint64_t)v24, v25, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AA88218);
      sub_23AEADB80(v27, v22, (uint64_t)v23, (uint64_t)v24, v25, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AA88218);
      v28 = v65;
      v29 = sub_23AE86314(v63, (uint64_t)v26, 0, (uint64_t)sub_23AEADB70, (uint64_t)(&v55 - 4));
      v3 = v28;
      if (v28)
      {
        sub_23AEADBEC(v27, v22, (uint64_t)v23, (uint64_t)v24, v25, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AA862DC);
        swift_bridgeObjectRelease();
        sub_23AEADBEC(v67, (unint64_t)v68, (uint64_t)v69, (uint64_t)v70, v71, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AA862DC);
        return;
      }
      v30 = v29;
      v21 += 48;
      sub_23AEADBEC(v27, v22, (uint64_t)v23, (uint64_t)v24, v25, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AA862DC);
      v19 = sub_23AEADBEC(v67, (unint64_t)v68, (uint64_t)v69, (uint64_t)v70, v71, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AA862DC);
      v20 = v61 - 1;
    }
    while (v61 != (char *)1);
    v57 = v30;
    v7 = v59;
  }
  else
  {
    v57 = 0;
  }
  swift_bridgeObjectRelease();
  sub_23ADFE870();
  v39 = swift_weakLoadStrong();
  if (!v39)
    goto LABEL_46;
  v40 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v39 + 152))(v39);
  swift_release();
  v41 = (char *)sub_23AE01A68(1, v40);
  v42 = sub_23AA8A05C((uint64_t)v7, &qword_2542DDFC0);
  v43 = *((_QWORD *)v41 + 2);
  if (v43)
  {
    v65 = v3;
    v44 = 0;
    v59 = (char *)-v43;
    v60 = v41;
    v45 = v41 + 72;
    v56 = v41 + 72;
    while (1)
    {
      v46 = &v45[48 * v44++];
      while (1)
      {
        if ((unint64_t)(v44 - 1) >= *((_QWORD *)v41 + 2))
        {
          __break(1u);
LABEL_44:
          __break(1u);
        }
        v62 = &v55;
        v47 = *((_QWORD *)v46 - 3);
        v48 = (void *)*((_QWORD *)v46 - 2);
        v49 = (unint64_t (*)())*((_QWORD *)v46 - 1);
        v50 = *((_QWORD *)v46 - 4);
        v61 = (char *)*((_QWORD *)v46 - 5);
        v51 = *v46;
        aBlock = v61;
        v67 = v50;
        v68 = (id (*)(uint64_t, void *))v47;
        v69 = v48;
        v70 = v49;
        LOBYTE(v71) = v51;
        MEMORY[0x24BDAC7A8](v42);
        *(&v55 - 2) = v64;
        *(&v55 - 1) = (uint64_t)&aBlock;
        sub_23AEADB80(v50, v47, (uint64_t)v48, (uint64_t)v49, v51, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AB5692C);
        sub_23AEADB80(v50, v47, (uint64_t)v48, (uint64_t)v49, v51, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AB5692C);
        v52 = v65;
        v53 = sub_23AE86314(v63, (uint64_t)v61, 1, (uint64_t)sub_23AEADB78, (uint64_t)(&v55 - 4));
        sub_23AEADBEC(v50, v47, (uint64_t)v48, (uint64_t)v49, v51, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AB7C6B4);
        v65 = v52;
        if (v52)
        {
          swift_bridgeObjectRelease();
          sub_23AEADBEC(v67, (unint64_t)v68, (uint64_t)v69, (uint64_t)v70, v71, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AB7C6B4);
          return;
        }
        v42 = sub_23AEADBEC(v67, (unint64_t)v68, (uint64_t)v69, (uint64_t)v70, v71, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AB7C6B4);
        if ((v53 & 1) != 0)
          break;
        ++v44;
        v46 += 48;
        v41 = v60;
        if (&v59[v44] == (char *)1)
          goto LABEL_30;
      }
      v57 = 1;
      v41 = v60;
      v45 = v56;
      if (!&v59[v44])
      {
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
  }
LABEL_30:
  swift_bridgeObjectRelease();
  if ((v57 & 1) != 0)
  {
LABEL_37:
    v54 = swift_weakLoadStrong();
    if (v54)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v54 + 304))(v54);
      swift_release();
      return;
    }
    goto LABEL_47;
  }
}

uint64_t sub_23AE49B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3250);
  v9 = a4 + *(int *)(v8 + 48);
  v10 = *(int *)(v8 + 64);
  sub_23AA8EFC8(a1, a4, (uint64_t *)&unk_2542E4750);
  sub_23AA8EFC8(a2, v9, (uint64_t *)&unk_2542E4750);
  *(_BYTE *)(a4 + v10) = a3;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 0, 1, v8);
}

uint64_t sub_23AE49BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  type metadata accessor for SnapshotItem(255, a4, a5, a4);
  v10 = sub_23B1C6C98();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v12 = a6 + *(int *)(TupleTypeMetadata3 + 48);
  v13 = *(int *)(TupleTypeMetadata3 + 64);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v14(a6, a1, v10);
  v14(v12, a2, v10);
  *(_BYTE *)(a6 + v13) = a3;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata3 - 8) + 56))(a6, 0, 1, TupleTypeMetadata3);
}

_QWORD *sub_23AE49CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;

  v9 = a2;
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(**(_QWORD **)(a1 + 16) + 152))(&v7, &v9);
  if (!v3)
  {
    if (v8 == 255)
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3250);
      return (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
    }
    else
    {
      return (_QWORD *)sub_23AE406BC(v7, v8, 1, a3);
    }
  }
  return result;
}

void sub_23AE49D70(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v6;
  void *v7;
  void (*v8)(uint64_t *__return_ptr, uint64_t *);
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;

  v6 = *(unsigned __int8 *)(a1 + 8);
  if (v6 == 255)
  {
    v7 = *(void **)(a1 + 240);
    if (v7)
    {
      v14 = *(_QWORD *)(a1 + 240);
      v8 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(**(_QWORD **)(a2 + 16) + 152);
      v9 = v7;
      v8(&v12, &v14);
      if (!v3)
      {
        if (v13 == 255)
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3250);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 1, 1, v11);
        }
        else
        {
          sub_23AE406BC(v12, v13, 0, a3);
        }
      }

    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3250);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 1, 1, v10);
    }
  }
  else
  {
    sub_23AE406BC(*(_QWORD *)a1, v6, 0, a3);
  }
}

uint64_t sub_23AE49E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a3;
  v32 = a2;
  v4 = *(_QWORD **)a2;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 2464);
  v22 = v4[306];
  v23 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = sub_23B1C6C98();
  v24 = *(_QWORD *)(v27 - 8);
  v7 = MEMORY[0x24BDAC7A8](v27);
  v25 = AssociatedTypeWitness;
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v7);
  v8 = v4[307];
  v29 = v4[305];
  v30 = v8;
  v9 = swift_getAssociatedTypeWitness();
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  v15 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v21 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v26 = a1;
  v18(v14, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v33 = v29;
    v34 = v22;
    v35 = v30;
    v36 = v23;
    type metadata accessor for ItemReconciliation();
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v9);
  sub_23AE408BC((uint64_t)v17, 0, v19, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v9);
}

_QWORD *sub_23AE4A1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;

  v9 = a2;
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(**(_QWORD **)(a1 + 16) + 152))(&v7, &v9);
  if (!v3)
  {
    if (v8 == 255)
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3250);
      return (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
    }
    else
    {
      return (_QWORD *)sub_23AE406BC(v7, v8, 0, a3);
    }
  }
  return result;
}

uint64_t sub_23AE4A254(_QWORD *a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _QWORD *v12;

  v7 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v7);
  v11 = v3;
  v12 = a1;
  sub_23AFAED34(0, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, (uint64_t)sub_23AEB4D48, (uint64_t)v10, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
  return sub_23AFB5AAC(a1, a2 & 1, a3 & 1, v8);
}

void sub_23AE4A484()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542E4330)
  {
    sub_23B1C5C54();
    v0 = sub_23B1C6C98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542E4330);
  }
}

ValueMetadata *type metadata accessor for SQLDatabaseVersion()
{
  return &type metadata for SQLDatabaseVersion;
}

unint64_t sub_23AE4A4EC()
{
  unint64_t result;

  result = qword_2542E75E8;
  if (!qword_2542E75E8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DB074, &type metadata for SQLDatabaseVersion);
    atomic_store(result, (unint64_t *)&qword_2542E75E8);
  }
  return result;
}

void sub_23AE4A530()
{
  type metadata accessor for SQLSyncStateTable();
}

uint64_t sub_23AE4A5A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  swift_dynamicCastClassUnconditional();
  sub_23AFE3A0C(v1);
  v5 = sub_23AABA464();
  v6 = v1[3];
  v7 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  if ((v5 & 1) != 0)
  {
    sub_23AEBD130(v2 + 1, 0x800000023B205210, v6, v7);
    v8 = v1[3];
    v9 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v8);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v38 = v3;
    v10 = (void *)sub_23AFB5E98();
    v11 = objc_msgSend(v10, sel_description);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(v4, v38, v8, v9);
    swift_bridgeObjectRelease();
    v12 = v1[3];
    v13 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v12);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE8C0);
    sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AEB4DB0, v0, v12, v14, v13);
  }
  else
  {
    sub_23AEBD130(0xD000000000000011, 0x800000023B205110, v6, v7);
  }
  v15 = *(unsigned __int8 *)(v0 + qword_2542EE120);
  v16 = v1[3];
  v17 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v16);
  if (v15 == 1)
  {
    sub_23AEBD130(0xD000000000000013, 0x800000023B2051F0, v16, v17);
    v18 = v1[3];
    v19 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v18);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    if (qword_2542E6EE0 != -1)
      swift_once();
    v20 = (id)qword_2542EDE00;
    v21 = objc_msgSend(v20, sel_description);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0x65686373202D2020, 0xEF203A72656C7564, v18, v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23AEBD130(0xD000000000000012, 0x800000023B205130, v16, v17);
  }
  v22 = v1[3];
  v23 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v22);
  sub_23AEBD130(0xD000000000000011, 0x800000023B205150, v22, v23);
  v24 = v1[3];
  v25 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v24);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE8C0);
  sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AEB4D60, v0, v24, v26, v25);
  v27 = *(unsigned __int8 *)(v0 + qword_256A079E0);
  v28 = v1[3];
  v29 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v28);
  if (v27 == 1)
  {
    sub_23AEBD130(0xD000000000000021, 0x800000023B2051C0, v28, v29);
    v30 = v1[3];
    v39 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v30);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    if (qword_2569E12A8 != -1)
      swift_once();
    v31 = (id)qword_256A079A0;
    v32 = objc_msgSend(v31, sel_description);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0x65686373202D2020, 0xEF203A72656C7564, v30, v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23AEBD130(0xD000000000000020, 0x800000023B205170, v28, v29);
  }
  v33 = v1[3];
  v34 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v33);
  sub_23AEBD130(0xD000000000000013, 0x800000023B2051A0, v33, v34);
  v35 = v1[3];
  v36 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v35);
  return sub_23AEBD1D4(8224, 0xE200000000000000, sub_23AEB4D88, v0, v35, MEMORY[0x24BEE4AE0] + 8, v36);
}

uint64_t sub_23AE4AB90@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, void (*a4)(uint64_t)@<X3>, BOOL *a5@<X8>)
{
  uint64_t v6;
  uint64_t v8;

  v6 = *(_QWORD *)(a2 + *a3);
  if (v6)
  {
    v8 = result;
    swift_retain();
    a4(v8);
    result = swift_release();
  }
  *a5 = v6 == 0;
  return result;
}

uint64_t sub_23AE4ABF4(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  id v12;
  char v13;
  double v14;
  double v15;
  uint64_t (*v16)(char *, uint64_t);
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  id v23;
  char v24;
  double v25;
  double v26;
  uint64_t (*v27)(char *, uint64_t);
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  id v34;
  char v35;
  double v36;
  double v37;
  uint64_t (*v38)(char *, uint64_t);
  double v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  id v45;
  char v46;
  double v47;
  double v48;
  uint64_t (*v49)(char *, uint64_t);
  double v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  id v57;
  char v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  id v67;
  char v68;
  double v69;
  double v70;
  uint64_t (*v71)(char *, uint64_t);
  double v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  double v76;
  double v77;
  id v78;
  char v79;
  double v80;
  double v81;
  uint64_t (*v82)(char *, uint64_t);
  double v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  double v88;
  id v89;
  char v90;
  double v91;
  double v92;
  uint64_t (*v93)(char *, uint64_t);
  double v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  double v98;
  double v99;
  uint64_t v100;
  id v101;
  char v102;
  double v103;
  double v104;
  uint64_t (*v105)(char *, uint64_t);
  double v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  double v110;
  double v111;
  id v112;
  char v113;
  double v114;
  double v115;
  uint64_t (*v116)(char *, uint64_t);
  double v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  double v121;
  double v122;
  id v123;
  double v124;
  double v125;
  uint64_t (*v126)(char *, uint64_t);
  double v127;
  uint64_t v128;
  uint64_t v129;
  double v130;
  double v131;
  double v132;
  id v133;
  char v134;
  double v135;
  double v136;
  uint64_t (*v137)(char *, uint64_t);
  double v138;
  uint64_t v139;
  uint64_t v140;
  double v141;
  double v142;
  double v143;
  id v144;
  char v145;
  double v146;
  double v147;
  uint64_t (*v148)(char *, uint64_t);
  double v149;
  uint64_t v150;
  uint64_t v151;
  double v152;
  double v153;
  double v154;
  id v155;
  double v156;
  double v157;
  uint64_t (*v158)(char *, uint64_t);
  double v159;
  uint64_t v160;
  uint64_t v161;
  double v162;
  double v163;
  double v164;
  id v165;
  char v166;
  double v167;
  double v168;
  uint64_t (*v169)(char *, uint64_t);
  double v170;
  uint64_t v171;
  uint64_t v172;
  double v173;
  double v174;
  double v175;
  uint64_t v176;
  char v177;
  double v178;
  double v179;
  uint64_t (*v180)(char *, uint64_t);
  double v181;
  uint64_t v182;
  uint64_t v183;
  double v184;
  double v185;
  double v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  double v190;
  double v191;
  double v192;
  uint64_t v193;
  uint64_t v194;
  double v195;
  double v196;
  double v197;
  id v198;
  char v199;
  double v200;
  double v201;
  uint64_t (*v202)(char *, uint64_t);
  double v203;
  uint64_t v204;
  uint64_t v205;
  double v206;
  double v207;
  double v208;
  id v209;
  char v210;
  double v211;
  double v212;
  uint64_t (*v213)(char *, uint64_t);
  double v214;
  uint64_t v215;
  uint64_t v216;
  double v217;
  double v218;
  double v219;
  id v220;
  char v221;
  double v222;
  double v223;
  uint64_t (*v224)(char *, uint64_t);
  double v225;
  uint64_t v226;
  uint64_t v227;
  double v228;
  double v229;
  double v230;
  uint64_t v231;
  id v232;
  char v233;
  double v234;
  double v235;
  double v236;
  uint64_t v237;
  uint64_t v238;
  double v239;
  double v240;
  double v241;
  id v242;
  double v243;
  double v244;
  double v245;
  uint64_t v246;
  uint64_t v247;
  double v248;
  double v249;
  double v250;
  uint64_t v251;
  id v252;
  char v253;
  double v254;
  double v255;
  double v256;
  uint64_t v257;
  uint64_t v258;
  double v259;
  double v260;
  double v261;
  id v262;
  char v263;
  double v264;
  double v265;
  uint64_t (*v266)(char *, uint64_t);
  double v267;
  uint64_t v268;
  uint64_t v269;
  double v270;
  double v271;
  double v272;
  uint64_t v273;
  uint64_t v274;
  char v275;
  double v276;
  double v277;
  uint64_t (*v278)(char *, uint64_t);
  double v279;
  uint64_t v280;
  uint64_t v281;
  double v282;
  double v283;
  double v284;
  uint64_t v285;
  uint64_t v286;
  char v287;
  double v288;
  double v289;
  double v290;
  uint64_t v291;
  uint64_t v292;
  double v293;
  double v294;
  double v295;
  id v296;
  char v297;
  double v298;
  double v299;
  uint64_t (*v300)(char *, uint64_t);
  double v301;
  uint64_t v302;
  uint64_t v303;
  double v304;
  double v305;
  double v306;
  uint64_t v307;
  _QWORD *v308;
  id v309;
  char v310;
  double v311;
  double v312;
  uint64_t (*v313)(char *, uint64_t);
  double v314;
  uint64_t v315;
  uint64_t v316;
  double v317;
  double v318;
  double v319;
  id v320;
  char v321;
  double v322;
  double v323;
  uint64_t (*v324)(char *, uint64_t);
  double v325;
  uint64_t v326;
  uint64_t v327;
  double v328;
  double v329;
  double v330;
  id v331;
  char v332;
  double v333;
  double v334;
  uint64_t (*v335)(char *, uint64_t);
  double v336;
  uint64_t v337;
  uint64_t v338;
  double v339;
  double v340;
  double v341;
  id v342;
  char v343;
  double v344;
  double v345;
  uint64_t (*v346)(char *, uint64_t);
  double v347;
  uint64_t v348;
  uint64_t v349;
  double v350;
  double v351;
  double v352;
  id v353;
  char v354;
  double v355;
  double v356;
  uint64_t (*v357)(char *, uint64_t);
  double v358;
  uint64_t v359;
  uint64_t v360;
  double v361;
  double v362;
  double v363;
  id v364;
  char v365;
  double v366;
  double v367;
  uint64_t (*v368)(char *, uint64_t);
  double v369;
  uint64_t v370;
  uint64_t v371;
  double v372;
  double v373;
  double v374;
  id v375;
  char v376;
  double v377;
  double v378;
  uint64_t (*v379)(char *, uint64_t);
  double v380;
  uint64_t v381;
  uint64_t v382;
  double v383;
  double v384;
  double v385;
  id v386;
  char v387;
  double v388;
  double v389;
  uint64_t (*v390)(char *, uint64_t);
  double v391;
  uint64_t v392;
  uint64_t v393;
  double v394;
  double v395;
  double v396;
  id v397;
  double v398;
  double v399;
  uint64_t (*v400)(char *, uint64_t);
  double v401;
  uint64_t v402;
  uint64_t v403;
  double v404;
  double v405;
  double v406;
  uint64_t v407;
  uint64_t v408;
  __int128 v409;
  uint64_t v410;
  id aBlock;
  uint64_t v412;
  id (*v413)(uint64_t, void *);
  void *v414;
  uint64_t (*v415)();
  uint64_t v416;
  uint64_t v417;

  v3 = v1;
  v417 = *MEMORY[0x24BDAC8D0];
  v5 = sub_23B1C5BDC();
  v410 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v407 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 <= 0x2F0E3B77C2)
  {
    v9 = *(void **)(v3 + qword_2542EE110);
    v415 = sub_23ADFA248;
    v416 = 0;
    aBlock = (id)MEMORY[0x24BDAC760];
    v412 = 1107296256;
    v413 = sub_23AA9432C;
    v414 = &block_descriptor_710;
    v10 = _Block_copy(&aBlock);
    swift_release();
    aBlock = 0;
    v11 = objc_msgSend(v9, sel_executeSwift_error_, v10, &aBlock);
    _Block_release(v10);
    a1 = aBlock;
    result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) != 0)
    {
      __break(1u);
      goto LABEL_206;
    }
    if ((v11 & 1) == 0)
    {
      sub_23B1C587C();

      return swift_willThrow();
    }
LABEL_7:
    (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock);
    v12 = aBlock;
    v13 = v412;
    sub_23B1C5BD0();
    a1 = v8;
    sub_23B1C5B94();
    v15 = v14;
    v16 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
    result = v16(v8, v5);
    v17 = v15 * 1000000000.0;
    if ((~COERCE__INT64(v15 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v17 > -9.22337204e18)
      {
        if (v17 < 9.22337204e18)
        {
          v18 = (uint64_t)v17;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6038);
          v19 = swift_allocObject();
          *(_BYTE *)(v19 + 144) = v13;
          *(_QWORD *)(v19 + 24) = 0;
          *(_QWORD *)(v19 + 32) = 0;
          *(_QWORD *)(v19 + 16) = 0;
          *(_BYTE *)(v19 + 40) = 1;
          *(_OWORD *)(v19 + 48) = 0u;
          *(_OWORD *)(v19 + 64) = 0u;
          *(_QWORD *)(v19 + 80) = 0;
          *(_OWORD *)(v19 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v19 + 104) = 0;
          *(_QWORD *)(v19 + 112) = 0;
          *(_QWORD *)(v19 + 120) = v18;
          *(_QWORD *)(v19 + 128) = 0;
          *(_QWORD *)(v19 + 136) = v12;
          sub_23B1C5BD0();
          a1 = v8;
          sub_23B1C5B94();
          v21 = v20;
          result = v16(v8, v5);
          v22 = v21 * 1000000000.0;
          if ((~COERCE__INT64(v21 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v22 > -9.22337204e18)
            {
              if (v22 < 9.22337204e18)
              {
                sub_23ADF3AAC(v19, (uint64_t)v22);
                if (v2)
                  return swift_release();
                result = swift_release();
LABEL_16:
                (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                v23 = aBlock;
                v24 = v412;
                sub_23B1C5BD0();
                a1 = v8;
                sub_23B1C5B94();
                v26 = v25;
                v27 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                result = v27(v8, v5);
                v28 = v26 * 1000000000.0;
                if ((~COERCE__INT64(v26 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v28 > -9.22337204e18)
                  {
                    if (v28 < 9.22337204e18)
                    {
                      v29 = (uint64_t)v28;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6030);
                      v30 = swift_allocObject();
                      *(_BYTE *)(v30 + 144) = v24;
                      *(_QWORD *)(v30 + 24) = 0;
                      *(_QWORD *)(v30 + 32) = 0;
                      *(_QWORD *)(v30 + 16) = 0;
                      *(_BYTE *)(v30 + 40) = 1;
                      *(_OWORD *)(v30 + 48) = 0u;
                      *(_OWORD *)(v30 + 64) = 0u;
                      *(_QWORD *)(v30 + 80) = 0;
                      *(_OWORD *)(v30 + 88) = xmmword_23B1CA770;
                      *(_BYTE *)(v30 + 104) = 0;
                      *(_QWORD *)(v30 + 112) = 0;
                      *(_QWORD *)(v30 + 120) = v29;
                      *(_QWORD *)(v30 + 128) = 0;
                      *(_QWORD *)(v30 + 136) = v23;
                      sub_23B1C5BD0();
                      a1 = v8;
                      sub_23B1C5B94();
                      v32 = v31;
                      result = v27(v8, v5);
                      v33 = v32 * 1000000000.0;
                      if ((~COERCE__INT64(v32 * 1000000000.0) & 0x7FF0000000000000) != 0)
                      {
                        if (v33 > -9.22337204e18)
                        {
                          if (v33 < 9.22337204e18)
                          {
                            sub_23ADF3AAC(v30, (uint64_t)v33);
                            if (v2)
                              return swift_release();
                            result = swift_release();
LABEL_25:
                            (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16)
                                                                              + 96))(&aBlock, result);
                            v34 = aBlock;
                            v35 = v412;
                            sub_23B1C5BD0();
                            a1 = v8;
                            sub_23B1C5B94();
                            v37 = v36;
                            v38 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                            result = v38(v8, v5);
                            v39 = v37 * 1000000000.0;
                            if ((~COERCE__INT64(v37 * 1000000000.0) & 0x7FF0000000000000) != 0)
                            {
                              if (v39 > -9.22337204e18)
                              {
                                if (v39 < 9.22337204e18)
                                {
                                  v40 = (uint64_t)v39;
                                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6028);
                                  v41 = swift_allocObject();
                                  *(_BYTE *)(v41 + 144) = v35;
                                  *(_QWORD *)(v41 + 24) = 0;
                                  *(_QWORD *)(v41 + 32) = 0;
                                  *(_QWORD *)(v41 + 16) = 0;
                                  *(_BYTE *)(v41 + 40) = 1;
                                  *(_OWORD *)(v41 + 48) = 0u;
                                  *(_OWORD *)(v41 + 64) = 0u;
                                  *(_QWORD *)(v41 + 80) = 0;
                                  *(_OWORD *)(v41 + 88) = xmmword_23B1CA770;
                                  *(_BYTE *)(v41 + 104) = 0;
                                  *(_QWORD *)(v41 + 112) = 0;
                                  *(_QWORD *)(v41 + 120) = v40;
                                  *(_QWORD *)(v41 + 128) = 0;
                                  *(_QWORD *)(v41 + 136) = v34;
                                  sub_23B1C5BD0();
                                  a1 = v8;
                                  sub_23B1C5B94();
                                  v43 = v42;
                                  result = v38(v8, v5);
                                  v44 = v43 * 1000000000.0;
                                  if ((~COERCE__INT64(v43 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                  {
                                    if (v44 > -9.22337204e18)
                                    {
                                      if (v44 < 9.22337204e18)
                                      {
                                        sub_23ADF3AAC(v41, (uint64_t)v44);
                                        if (v2)
                                          return swift_release();
                                        result = swift_release();
LABEL_34:
                                        (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16)
                                                                                          + 96))(&aBlock, result);
                                        v45 = aBlock;
                                        v46 = v412;
                                        sub_23B1C5BD0();
                                        a1 = v8;
                                        sub_23B1C5B94();
                                        v48 = v47;
                                        v49 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                        result = v49(v8, v5);
                                        v50 = v48 * 1000000000.0;
                                        if ((~COERCE__INT64(v48 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                        {
                                          if (v50 > -9.22337204e18)
                                          {
                                            if (v50 < 9.22337204e18)
                                            {
                                              v51 = (uint64_t)v50;
                                              __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6020);
                                              v52 = swift_allocObject();
                                              *(_BYTE *)(v52 + 144) = v46;
                                              *(_QWORD *)(v52 + 24) = 0;
                                              *(_QWORD *)(v52 + 32) = 0;
                                              *(_QWORD *)(v52 + 16) = 0;
                                              *(_BYTE *)(v52 + 40) = 1;
                                              *(_OWORD *)(v52 + 48) = 0u;
                                              *(_OWORD *)(v52 + 64) = 0u;
                                              *(_QWORD *)(v52 + 80) = 0;
                                              v409 = xmmword_23B1CA770;
                                              *(_OWORD *)(v52 + 88) = xmmword_23B1CA770;
                                              *(_BYTE *)(v52 + 104) = 0;
                                              *(_QWORD *)(v52 + 112) = 0;
                                              *(_QWORD *)(v52 + 120) = v51;
                                              *(_QWORD *)(v52 + 128) = 0;
                                              *(_QWORD *)(v52 + 136) = v45;
                                              sub_23B1C5BD0();
                                              a1 = v8;
                                              sub_23B1C5B94();
                                              v54 = v53;
                                              result = v49(v8, v5);
                                              v55 = v54 * 1000000000.0;
                                              if ((~COERCE__INT64(v54 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                              {
                                                if (v55 > -9.22337204e18)
                                                {
                                                  if (v55 < 9.22337204e18)
                                                  {
                                                    sub_23ADF3AAC(v52, (uint64_t)v55);
                                                    if (v2)
                                                      return swift_release();
                                                    v56 = swift_release();
                                                    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, v56);
                                                    v57 = aBlock;
                                                    v58 = v412;
                                                    sub_23B1C5BD0();
                                                    a1 = v8;
                                                    sub_23B1C5B94();
                                                    v60 = v59;
                                                    result = v49(v8, v5);
                                                    v61 = v60 * 1000000000.0;
                                                    if ((~COERCE__INT64(v60 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                    {
                                                      if (v61 > -9.22337204e18)
                                                      {
                                                        if (v61 < 9.22337204e18)
                                                        {
                                                          v62 = (uint64_t)v61;
                                                          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6018);
                                                          v63 = swift_allocObject();
                                                          *(_BYTE *)(v63 + 144) = v58;
                                                          *(_QWORD *)(v63 + 24) = 0;
                                                          *(_QWORD *)(v63 + 32) = 0;
                                                          *(_QWORD *)(v63 + 16) = 0;
                                                          *(_BYTE *)(v63 + 40) = 1;
                                                          *(_OWORD *)(v63 + 48) = 0u;
                                                          *(_OWORD *)(v63 + 64) = 0u;
                                                          *(_QWORD *)(v63 + 80) = 0;
                                                          *(_OWORD *)(v63 + 88) = v409;
                                                          *(_BYTE *)(v63 + 104) = 0;
                                                          *(_QWORD *)(v63 + 112) = 0;
                                                          *(_QWORD *)(v63 + 120) = v62;
                                                          *(_QWORD *)(v63 + 128) = 0;
                                                          *(_QWORD *)(v63 + 136) = v57;
                                                          sub_23B1C5BD0();
                                                          a1 = v8;
                                                          sub_23B1C5B94();
                                                          v65 = v64;
                                                          result = v49(v8, v5);
                                                          v66 = v65 * 1000000000.0;
                                                          if ((~COERCE__INT64(v65 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                          {
                                                            if (v66 > -9.22337204e18)
                                                            {
                                                              if (v66 < 9.22337204e18)
                                                              {
                                                                sub_23ADF3AAC(v63, (uint64_t)v66);
                                                                result = swift_release();
                                                                goto LABEL_49;
                                                              }
LABEL_235:
                                                              __break(1u);
                                                              goto LABEL_236;
                                                            }
LABEL_234:
                                                            __break(1u);
                                                            goto LABEL_235;
                                                          }
LABEL_233:
                                                          __break(1u);
                                                          goto LABEL_234;
                                                        }
LABEL_232:
                                                        __break(1u);
                                                        goto LABEL_233;
                                                      }
LABEL_231:
                                                      __break(1u);
                                                      goto LABEL_232;
                                                    }
LABEL_230:
                                                    __break(1u);
                                                    goto LABEL_231;
                                                  }
LABEL_229:
                                                  __break(1u);
                                                  goto LABEL_230;
                                                }
LABEL_228:
                                                __break(1u);
                                                goto LABEL_229;
                                              }
LABEL_227:
                                              __break(1u);
                                              goto LABEL_228;
                                            }
LABEL_226:
                                            __break(1u);
                                            goto LABEL_227;
                                          }
LABEL_225:
                                          __break(1u);
                                          goto LABEL_226;
                                        }
LABEL_224:
                                        __break(1u);
                                        goto LABEL_225;
                                      }
LABEL_223:
                                      __break(1u);
                                      goto LABEL_224;
                                    }
LABEL_222:
                                    __break(1u);
                                    goto LABEL_223;
                                  }
LABEL_221:
                                  __break(1u);
                                  goto LABEL_222;
                                }
LABEL_220:
                                __break(1u);
                                goto LABEL_221;
                              }
LABEL_219:
                              __break(1u);
                              goto LABEL_220;
                            }
LABEL_218:
                            __break(1u);
                            goto LABEL_219;
                          }
LABEL_217:
                          __break(1u);
                          goto LABEL_218;
                        }
LABEL_216:
                        __break(1u);
                        goto LABEL_217;
                      }
LABEL_215:
                      __break(1u);
                      goto LABEL_216;
                    }
LABEL_214:
                    __break(1u);
                    goto LABEL_215;
                  }
LABEL_213:
                  __break(1u);
                  goto LABEL_214;
                }
LABEL_212:
                __break(1u);
                goto LABEL_213;
              }
LABEL_211:
              __break(1u);
              goto LABEL_212;
            }
LABEL_210:
            __break(1u);
            goto LABEL_211;
          }
LABEL_209:
          __break(1u);
          goto LABEL_210;
        }
LABEL_208:
        __break(1u);
        goto LABEL_209;
      }
LABEL_207:
      __break(1u);
      goto LABEL_208;
    }
LABEL_206:
    __break(1u);
    goto LABEL_207;
  }
  if ((unint64_t)a1 <= 0x2F145EF754)
    goto LABEL_7;
  if ((unint64_t)a1 < 0x2F145F20ADLL)
    goto LABEL_16;
  if ((unint64_t)a1 < 0x2F145F2311)
    goto LABEL_25;
  if ((unint64_t)a1 <= 0x2F145F4708)
    goto LABEL_34;
  if ((unint64_t)a1 <= 0x2F147BCFB8)
  {
LABEL_49:
    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
    v67 = aBlock;
    v68 = v412;
    sub_23B1C5BD0();
    a1 = v8;
    sub_23B1C5B94();
    v70 = v69;
    v71 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
    result = v71(v8, v5);
    v72 = v70 * 1000000000.0;
    if ((~COERCE__INT64(v70 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v72 > -9.22337204e18)
      {
        if (v72 < 9.22337204e18)
        {
          v73 = (uint64_t)v72;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FF8);
          v74 = swift_allocObject();
          *(_BYTE *)(v74 + 144) = v68;
          *(_QWORD *)(v74 + 24) = 0;
          *(_QWORD *)(v74 + 32) = 0;
          *(_QWORD *)(v74 + 16) = 0;
          *(_BYTE *)(v74 + 40) = 1;
          *(_OWORD *)(v74 + 48) = 0u;
          *(_OWORD *)(v74 + 64) = 0u;
          *(_QWORD *)(v74 + 80) = 0;
          *(_OWORD *)(v74 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v74 + 104) = 0;
          *(_QWORD *)(v74 + 112) = 0;
          *(_QWORD *)(v74 + 120) = v73;
          *(_QWORD *)(v74 + 128) = 0;
          *(_QWORD *)(v74 + 136) = v67;
          sub_23B1C5BD0();
          a1 = v8;
          sub_23B1C5B94();
          v76 = v75;
          result = v71(v8, v5);
          v77 = v76 * 1000000000.0;
          if ((~COERCE__INT64(v76 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v77 > -9.22337204e18)
            {
              if (v77 < 9.22337204e18)
              {
                sub_23ADF3AAC(v74, (uint64_t)v77);
                if (!v2)
                {
                  result = swift_release();
                  goto LABEL_58;
                }
                return swift_release();
              }
LABEL_241:
              __break(1u);
              goto LABEL_242;
            }
LABEL_240:
            __break(1u);
            goto LABEL_241;
          }
LABEL_239:
          __break(1u);
          goto LABEL_240;
        }
LABEL_238:
        __break(1u);
        goto LABEL_239;
      }
LABEL_237:
      __break(1u);
      goto LABEL_238;
    }
LABEL_236:
    __break(1u);
    goto LABEL_237;
  }
  if ((unint64_t)a1 <= 0x2F1489DA32)
  {
LABEL_58:
    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
    v78 = aBlock;
    v79 = v412;
    sub_23B1C5BD0();
    a1 = v8;
    sub_23B1C5B94();
    v81 = v80;
    v82 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
    result = v82(v8, v5);
    v83 = v81 * 1000000000.0;
    if ((~COERCE__INT64(v81 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v83 > -9.22337204e18)
      {
        if (v83 < 9.22337204e18)
        {
          v84 = (uint64_t)v83;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6010);
          v85 = swift_allocObject();
          *(_BYTE *)(v85 + 144) = v79;
          *(_QWORD *)(v85 + 24) = 0;
          *(_QWORD *)(v85 + 32) = 0;
          *(_QWORD *)(v85 + 16) = 0;
          *(_BYTE *)(v85 + 40) = 1;
          *(_OWORD *)(v85 + 48) = 0u;
          *(_OWORD *)(v85 + 64) = 0u;
          *(_QWORD *)(v85 + 80) = 0;
          *(_OWORD *)(v85 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v85 + 104) = 0;
          *(_QWORD *)(v85 + 112) = 0;
          *(_QWORD *)(v85 + 120) = v84;
          *(_QWORD *)(v85 + 128) = 0;
          *(_QWORD *)(v85 + 136) = v78;
          sub_23B1C5BD0();
          a1 = v8;
          sub_23B1C5B94();
          v87 = v86;
          result = v82(v8, v5);
          v88 = v87 * 1000000000.0;
          if ((~COERCE__INT64(v87 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v88 > -9.22337204e18)
            {
              if (v88 < 9.22337204e18)
              {
                sub_23ADF3AAC(v85, (uint64_t)v88);
                if (v2)
                  return swift_release();
                result = swift_release();
                goto LABEL_89;
              }
LABEL_247:
              __break(1u);
              goto LABEL_248;
            }
LABEL_246:
            __break(1u);
            goto LABEL_247;
          }
LABEL_245:
          __break(1u);
          goto LABEL_246;
        }
LABEL_244:
        __break(1u);
        goto LABEL_245;
      }
LABEL_243:
      __break(1u);
      goto LABEL_244;
    }
LABEL_242:
    __break(1u);
    goto LABEL_243;
  }
  if ((unint64_t)a1 <= 0x2F148D35F8)
  {
LABEL_89:
    v100 = *(_QWORD *)(v3 + 32);
    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(v100 + 16) + 96))(&aBlock, result);
    result = sub_23AE1ACF8((uint64_t)aBlock, v412, v3);
    if (v2)
      return result;
    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(v100 + 16) + 104))(&aBlock, result);
    result = sub_23AE1ACF8((uint64_t)aBlock, v412, v3);
LABEL_91:
    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
    v101 = aBlock;
    v102 = v412;
    sub_23B1C5BD0();
    a1 = v8;
    sub_23B1C5B94();
    v104 = v103;
    v105 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
    result = v105(v8, v5);
    v106 = v104 * 1000000000.0;
    if ((~COERCE__INT64(v104 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v106 > -9.22337204e18)
      {
        if (v106 < 9.22337204e18)
        {
          v107 = (uint64_t)v106;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6008);
          v108 = swift_allocObject();
          *(_BYTE *)(v108 + 144) = v102;
          *(_QWORD *)(v108 + 24) = 0;
          *(_QWORD *)(v108 + 32) = 0;
          *(_QWORD *)(v108 + 16) = 0;
          *(_BYTE *)(v108 + 40) = 1;
          *(_OWORD *)(v108 + 48) = 0u;
          *(_OWORD *)(v108 + 64) = 0u;
          *(_QWORD *)(v108 + 80) = 0;
          *(_OWORD *)(v108 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v108 + 104) = 0;
          *(_QWORD *)(v108 + 112) = 0;
          *(_QWORD *)(v108 + 120) = v107;
          *(_QWORD *)(v108 + 128) = 0;
          *(_QWORD *)(v108 + 136) = v101;
          sub_23B1C5BD0();
          a1 = v8;
          sub_23B1C5B94();
          v110 = v109;
          result = v105(v8, v5);
          v111 = v110 * 1000000000.0;
          if ((~COERCE__INT64(v110 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v111 > -9.22337204e18)
            {
              if (v111 < 9.22337204e18)
              {
                sub_23ADF3AAC(v108, (uint64_t)v111);
                if (v2)
                  return swift_release();
                result = swift_release();
                goto LABEL_99;
              }
LABEL_253:
              __break(1u);
              goto LABEL_254;
            }
LABEL_252:
            __break(1u);
            goto LABEL_253;
          }
LABEL_251:
          __break(1u);
          goto LABEL_252;
        }
LABEL_250:
        __break(1u);
        goto LABEL_251;
      }
LABEL_249:
      __break(1u);
      goto LABEL_250;
    }
LABEL_248:
    __break(1u);
    goto LABEL_249;
  }
  if ((unint64_t)a1 <= 0x2F14994317)
    goto LABEL_91;
  if ((unint64_t)a1 > 0x2F14A923B6)
  {
    if ((unint64_t)a1 <= 0x2F14B83BBDLL)
      goto LABEL_107;
    if ((unint64_t)a1 <= 0x2F14BA3A3FLL)
      goto LABEL_117;
    if ((unint64_t)a1 <= 0x2F1A17D070)
      goto LABEL_125;
    if ((unint64_t)a1 <= 0x2F1A256322)
      goto LABEL_133;
    if ((unint64_t)a1 <= 0x2F1A267888)
      goto LABEL_141;
    if ((unint64_t)a1 <= 0x2F1A33BC33)
      goto LABEL_149;
    if ((unint64_t)a1 <= 0x2F1A371793)
      goto LABEL_163;
    if ((unint64_t)a1 <= 0x2F1A37422DLL)
      goto LABEL_171;
    if ((unint64_t)a1 <= 0x2F1A378FC6)
      goto LABEL_179;
    if ((unint64_t)a1 <= 0x2F1A5500F8)
      goto LABEL_80;
LABEL_260:
    if ((unint64_t)a1 <= 0x2F1A552752)
      goto LABEL_261;
    goto LABEL_275;
  }
LABEL_99:
  (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
  v112 = aBlock;
  v113 = v412;
  sub_23B1C5BD0();
  a1 = v8;
  sub_23B1C5B94();
  v115 = v114;
  v116 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
  result = v116(v8, v5);
  v117 = v115 * 1000000000.0;
  if ((~COERCE__INT64(v115 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_254:
    __break(1u);
    goto LABEL_255;
  }
  if (v117 <= -9.22337204e18)
  {
LABEL_255:
    __break(1u);
    goto LABEL_256;
  }
  if (v117 >= 9.22337204e18)
  {
LABEL_256:
    __break(1u);
    goto LABEL_257;
  }
  v118 = (uint64_t)v117;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6000);
  v119 = swift_allocObject();
  *(_BYTE *)(v119 + 144) = v113;
  *(_QWORD *)(v119 + 24) = 0;
  *(_QWORD *)(v119 + 32) = 0;
  *(_QWORD *)(v119 + 16) = 0;
  *(_BYTE *)(v119 + 40) = 1;
  *(_OWORD *)(v119 + 48) = 0u;
  *(_OWORD *)(v119 + 64) = 0u;
  *(_QWORD *)(v119 + 80) = 0;
  *(_OWORD *)(v119 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v119 + 104) = 0;
  *(_QWORD *)(v119 + 112) = 0;
  *(_QWORD *)(v119 + 120) = v118;
  *(_QWORD *)(v119 + 128) = 0;
  *(_QWORD *)(v119 + 136) = v112;
  sub_23B1C5BD0();
  a1 = v8;
  sub_23B1C5B94();
  v121 = v120;
  result = v116(v8, v5);
  v122 = v121 * 1000000000.0;
  if ((~COERCE__INT64(v121 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_257:
    __break(1u);
    goto LABEL_258;
  }
  if (v122 <= -9.22337204e18)
  {
LABEL_258:
    __break(1u);
    goto LABEL_259;
  }
  if (v122 >= 9.22337204e18)
  {
LABEL_259:
    __break(1u);
    goto LABEL_260;
  }
  sub_23ADF3AAC(v119, (uint64_t)v122);
  if (v2)
    return swift_release();
  swift_release();
LABEL_107:
  sub_23AE4F234();
  (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(v3 + 40) + 16) + 96))(&aBlock);
  v123 = aBlock;
  sub_23B1C5BD0();
  a1 = v8;
  sub_23B1C5B94();
  v125 = v124;
  v126 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
  result = v126(v8, v5);
  v127 = v125 * 1000000000.0;
  if ((~COERCE__INT64(v125 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_270;
  }
  if (v127 <= -9.22337204e18)
  {
LABEL_270:
    __break(1u);
    goto LABEL_271;
  }
  if (v127 >= 9.22337204e18)
  {
LABEL_271:
    __break(1u);
    goto LABEL_272;
  }
  v128 = (uint64_t)v127;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6298);
  v129 = swift_allocObject();
  *(_BYTE *)(v129 + 40) = 1;
  *(_OWORD *)(v129 + 48) = 0u;
  *(_OWORD *)(v129 + 64) = 0u;
  *(_QWORD *)(v129 + 24) = 0;
  *(_QWORD *)(v129 + 32) = 0;
  *(_QWORD *)(v129 + 16) = 0;
  *(_QWORD *)(v129 + 80) = 0;
  *(_OWORD *)(v129 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v129 + 104) = 0;
  *(_QWORD *)(v129 + 112) = 0;
  *(_QWORD *)(v129 + 120) = v128;
  *(_QWORD *)(v129 + 128) = 0;
  *(_QWORD *)(v129 + 136) = v123;
  sub_23B1C5BD0();
  a1 = v8;
  sub_23B1C5B94();
  v131 = v130;
  result = v126(v8, v5);
  v132 = v131 * 1000000000.0;
  if ((~COERCE__INT64(v131 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_272:
    __break(1u);
    goto LABEL_273;
  }
  if (v132 <= -9.22337204e18)
  {
LABEL_273:
    __break(1u);
    goto LABEL_274;
  }
  if (v132 >= 9.22337204e18)
  {
LABEL_274:
    __break(1u);
LABEL_275:
    if ((unint64_t)a1 <= 0x2F1A630CBELL)
      goto LABEL_276;
    goto LABEL_297;
  }
  sub_23ADF3AAC(v129, (uint64_t)v132);
  if (v2)
  {
LABEL_114:
    swift_release();
    return swift_release();
  }
  swift_release();
  result = swift_release();
LABEL_117:
  (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
  v133 = aBlock;
  v134 = v412;
  sub_23B1C5BD0();
  a1 = v8;
  sub_23B1C5B94();
  v136 = v135;
  v137 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
  result = v137(v8, v5);
  v138 = v136 * 1000000000.0;
  if ((~COERCE__INT64(v136 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_292;
  }
  if (v138 <= -9.22337204e18)
  {
LABEL_292:
    __break(1u);
    goto LABEL_293;
  }
  if (v138 >= 9.22337204e18)
  {
LABEL_293:
    __break(1u);
    goto LABEL_294;
  }
  v139 = (uint64_t)v138;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6028);
  v140 = swift_allocObject();
  *(_BYTE *)(v140 + 144) = v134;
  *(_QWORD *)(v140 + 24) = 0;
  *(_QWORD *)(v140 + 32) = 0;
  *(_QWORD *)(v140 + 16) = 0;
  *(_BYTE *)(v140 + 40) = 1;
  *(_OWORD *)(v140 + 48) = 0u;
  *(_OWORD *)(v140 + 64) = 0u;
  *(_QWORD *)(v140 + 80) = 0;
  *(_OWORD *)(v140 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v140 + 104) = 0;
  *(_QWORD *)(v140 + 112) = 0;
  *(_QWORD *)(v140 + 120) = v139;
  *(_QWORD *)(v140 + 128) = 0;
  *(_QWORD *)(v140 + 136) = v133;
  sub_23B1C5BD0();
  a1 = v8;
  sub_23B1C5B94();
  v142 = v141;
  result = v137(v8, v5);
  v143 = v142 * 1000000000.0;
  if ((~COERCE__INT64(v142 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_294:
    __break(1u);
    goto LABEL_295;
  }
  if (v143 > -9.22337204e18)
  {
    if (v143 < 9.22337204e18)
    {
      sub_23ADF3AAC(v140, (uint64_t)v143);
      if (v2)
        return swift_release();
      result = swift_release();
LABEL_125:
      (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
      v144 = aBlock;
      v145 = v412;
      sub_23B1C5BD0();
      a1 = v8;
      sub_23B1C5B94();
      v147 = v146;
      v148 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
      result = v148(v8, v5);
      v149 = v147 * 1000000000.0;
      if ((~COERCE__INT64(v147 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v149 > -9.22337204e18)
        {
          if (v149 < 9.22337204e18)
          {
            v150 = (uint64_t)v149;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FF0);
            v151 = swift_allocObject();
            *(_BYTE *)(v151 + 144) = v145;
            *(_QWORD *)(v151 + 24) = 0;
            *(_QWORD *)(v151 + 32) = 0;
            *(_QWORD *)(v151 + 16) = 0;
            *(_BYTE *)(v151 + 40) = 1;
            *(_OWORD *)(v151 + 48) = 0u;
            *(_OWORD *)(v151 + 64) = 0u;
            *(_QWORD *)(v151 + 80) = 0;
            *(_OWORD *)(v151 + 88) = xmmword_23B1CA770;
            *(_BYTE *)(v151 + 104) = 0;
            *(_QWORD *)(v151 + 112) = 0;
            *(_QWORD *)(v151 + 120) = v150;
            *(_QWORD *)(v151 + 128) = 0;
            *(_QWORD *)(v151 + 136) = v144;
            sub_23B1C5BD0();
            a1 = v8;
            sub_23B1C5B94();
            v153 = v152;
            result = v148(v8, v5);
            v154 = v153 * 1000000000.0;
            if ((~COERCE__INT64(v153 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              if (v154 > -9.22337204e18)
              {
                if (v154 < 9.22337204e18)
                {
                  sub_23ADF3AAC(v151, (uint64_t)v154);
                  if (v2)
                    return swift_release();
                  swift_release();
LABEL_133:
                  sub_23AE4F234();
                  (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(v3 + 40) + 16) + 96))(&aBlock);
                  v155 = aBlock;
                  sub_23B1C5BD0();
                  a1 = v8;
                  sub_23B1C5B94();
                  v157 = v156;
                  v158 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                  result = v158(v8, v5);
                  v159 = v157 * 1000000000.0;
                  if ((~COERCE__INT64(v157 * 1000000000.0) & 0x7FF0000000000000) != 0)
                  {
                    if (v159 > -9.22337204e18)
                    {
                      if (v159 < 9.22337204e18)
                      {
                        v160 = (uint64_t)v159;
                        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6298);
                        v161 = swift_allocObject();
                        *(_BYTE *)(v161 + 40) = 1;
                        *(_OWORD *)(v161 + 48) = 0u;
                        *(_OWORD *)(v161 + 64) = 0u;
                        *(_QWORD *)(v161 + 24) = 0;
                        *(_QWORD *)(v161 + 32) = 0;
                        *(_QWORD *)(v161 + 16) = 0;
                        *(_QWORD *)(v161 + 80) = 0;
                        *(_OWORD *)(v161 + 88) = xmmword_23B1CA770;
                        *(_BYTE *)(v161 + 104) = 0;
                        *(_QWORD *)(v161 + 112) = 0;
                        *(_QWORD *)(v161 + 120) = v160;
                        *(_QWORD *)(v161 + 128) = 0;
                        *(_QWORD *)(v161 + 136) = v155;
                        sub_23B1C5BD0();
                        a1 = v8;
                        sub_23B1C5B94();
                        v163 = v162;
                        result = v158(v8, v5);
                        v164 = v163 * 1000000000.0;
                        if ((~COERCE__INT64(v163 * 1000000000.0) & 0x7FF0000000000000) != 0)
                        {
                          if (v164 > -9.22337204e18)
                          {
                            if (v164 < 9.22337204e18)
                            {
                              sub_23ADF3AAC(v161, (uint64_t)v164);
                              if (v2)
                                goto LABEL_114;
                              swift_release();
                              result = swift_release();
LABEL_141:
                              (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32)
                                                                                              + 16)
                                                                                + 96))(&aBlock, result);
                              v165 = aBlock;
                              v166 = v412;
                              sub_23B1C5BD0();
                              a1 = v8;
                              sub_23B1C5B94();
                              v168 = v167;
                              v169 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                              result = v169(v8, v5);
                              v170 = v168 * 1000000000.0;
                              if ((~COERCE__INT64(v168 * 1000000000.0) & 0x7FF0000000000000) != 0)
                              {
                                if (v170 > -9.22337204e18)
                                {
                                  if (v170 < 9.22337204e18)
                                  {
                                    v171 = (uint64_t)v170;
                                    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FE8);
                                    v172 = swift_allocObject();
                                    *(_BYTE *)(v172 + 144) = v166;
                                    *(_QWORD *)(v172 + 24) = 0;
                                    *(_QWORD *)(v172 + 32) = 0;
                                    *(_QWORD *)(v172 + 16) = 0;
                                    *(_BYTE *)(v172 + 40) = 1;
                                    *(_OWORD *)(v172 + 48) = 0u;
                                    *(_OWORD *)(v172 + 64) = 0u;
                                    *(_QWORD *)(v172 + 80) = 0;
                                    *(_OWORD *)(v172 + 88) = xmmword_23B1CA770;
                                    *(_BYTE *)(v172 + 104) = 0;
                                    *(_QWORD *)(v172 + 112) = 0;
                                    *(_QWORD *)(v172 + 120) = v171;
                                    *(_QWORD *)(v172 + 128) = 0;
                                    *(_QWORD *)(v172 + 136) = v165;
                                    sub_23B1C5BD0();
                                    a1 = v8;
                                    sub_23B1C5B94();
                                    v174 = v173;
                                    result = v169(v8, v5);
                                    v175 = v174 * 1000000000.0;
                                    if ((~COERCE__INT64(v174 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                    {
                                      if (v175 > -9.22337204e18)
                                      {
                                        if (v175 < 9.22337204e18)
                                        {
                                          sub_23ADF3AAC(v172, (uint64_t)v175);
                                          if (v2)
                                            return swift_release();
                                          result = swift_release();
LABEL_149:
                                          (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16)
                                                                                            + 96))(&aBlock, result);
                                          v176 = (uint64_t)aBlock;
                                          v177 = v412;
                                          sub_23B1C5BD0();
                                          a1 = v8;
                                          sub_23B1C5B94();
                                          v179 = v178;
                                          v180 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                          result = v180(v8, v5);
                                          v181 = v179 * 1000000000.0;
                                          if ((~COERCE__INT64(v179 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                          {
                                            if (v181 > -9.22337204e18)
                                            {
                                              if (v181 < 9.22337204e18)
                                              {
                                                v182 = (uint64_t)v181;
                                                __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
                                                swift_allocObject();
                                                v183 = sub_23AEA220C(v176, v177, 0, v182, 0x8000);
                                                sub_23B1C5BD0();
                                                a1 = v8;
                                                sub_23B1C5B94();
                                                v185 = v184;
                                                result = v180(v8, v5);
                                                v186 = v185 * 1000000000.0;
                                                if ((~COERCE__INT64(v185 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                {
                                                  if (v186 > -9.22337204e18)
                                                  {
                                                    if (v186 < 9.22337204e18)
                                                    {
                                                      sub_23ADF3AAC(v183, (uint64_t)v186);
                                                      if (v2)
                                                        return swift_release();
                                                      v187 = swift_release();
                                                      (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 104))(&aBlock, v187);
                                                      v188 = (uint64_t)aBlock;
                                                      v189 = v412;
                                                      sub_23B1C5BD0();
                                                      a1 = v8;
                                                      sub_23B1C5B94();
                                                      v191 = v190;
                                                      result = v180(v8, v5);
                                                      v192 = v191 * 1000000000.0;
                                                      if ((~COERCE__INT64(v191 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                      {
                                                        if (v192 > -9.22337204e18)
                                                        {
                                                          if (v192 < 9.22337204e18)
                                                          {
                                                            v193 = (uint64_t)v192;
                                                            swift_allocObject();
                                                            v194 = sub_23AEA220C(v188, v189, 0, v193, 0x8000);
                                                            sub_23B1C5BD0();
                                                            a1 = v8;
                                                            sub_23B1C5B94();
                                                            v196 = v195;
                                                            result = v180(v8, v5);
                                                            v197 = v196 * 1000000000.0;
                                                            if ((~COERCE__INT64(v196 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                            {
                                                              if (v197 > -9.22337204e18)
                                                              {
                                                                if (v197 < 9.22337204e18)
                                                                {
                                                                  sub_23ADF3AAC(v194, (uint64_t)v197);
                                                                  result = swift_release();
LABEL_163:
                                                                  (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                  v198 = aBlock;
                                                                  v199 = v412;
                                                                  sub_23B1C5BD0();
                                                                  a1 = v8;
                                                                  sub_23B1C5B94();
                                                                  v201 = v200;
                                                                  v202 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                  result = v202(v8, v5);
                                                                  v203 = v201 * 1000000000.0;
                                                                  if ((~COERCE__INT64(v201 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                  {
                                                                    if (v203 > -9.22337204e18)
                                                                    {
                                                                      if (v203 < 9.22337204e18)
                                                                      {
                                                                        v204 = (uint64_t)v203;
                                                                        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FF0);
                                                                        v205 = swift_allocObject();
                                                                        *(_BYTE *)(v205 + 144) = v199;
                                                                        *(_QWORD *)(v205 + 24) = 0;
                                                                        *(_QWORD *)(v205 + 32) = 0;
                                                                        *(_QWORD *)(v205 + 16) = 0;
                                                                        *(_BYTE *)(v205 + 40) = 1;
                                                                        *(_OWORD *)(v205 + 48) = 0u;
                                                                        *(_OWORD *)(v205 + 64) = 0u;
                                                                        *(_QWORD *)(v205 + 80) = 0;
                                                                        *(_OWORD *)(v205 + 88) = xmmword_23B1CA770;
                                                                        *(_BYTE *)(v205 + 104) = 0;
                                                                        *(_QWORD *)(v205 + 112) = 0;
                                                                        *(_QWORD *)(v205 + 120) = v204;
                                                                        *(_QWORD *)(v205 + 128) = 0;
                                                                        *(_QWORD *)(v205 + 136) = v198;
                                                                        sub_23B1C5BD0();
                                                                        a1 = v8;
                                                                        sub_23B1C5B94();
                                                                        v207 = v206;
                                                                        result = v202(v8, v5);
                                                                        v208 = v207 * 1000000000.0;
                                                                        if ((~COERCE__INT64(v207 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                        {
                                                                          if (v208 > -9.22337204e18)
                                                                          {
                                                                            if (v208 < 9.22337204e18)
                                                                            {
                                                                              sub_23ADF3AAC(v205, (uint64_t)v208);
                                                                              if (v2)
                                                                                return swift_release();
                                                                              result = swift_release();
LABEL_171:
                                                                              (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                              v209 = aBlock;
                                                                              v210 = v412;
                                                                              sub_23B1C5BD0();
                                                                              a1 = v8;
                                                                              sub_23B1C5B94();
                                                                              v212 = v211;
                                                                              v213 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                              result = v213(v8, v5);
                                                                              v214 = v212 * 1000000000.0;
                                                                              if ((~COERCE__INT64(v212 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                              {
                                                                                if (v214 > -9.22337204e18)
                                                                                {
                                                                                  if (v214 < 9.22337204e18)
                                                                                  {
                                                                                    v215 = (uint64_t)v214;
                                                                                    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FE0);
                                                                                    v216 = swift_allocObject();
                                                                                    *(_BYTE *)(v216 + 144) = v210;
                                                                                    *(_QWORD *)(v216 + 24) = 0;
                                                                                    *(_QWORD *)(v216 + 32) = 0;
                                                                                    *(_QWORD *)(v216 + 16) = 0;
                                                                                    *(_BYTE *)(v216 + 40) = 1;
                                                                                    *(_OWORD *)(v216 + 48) = 0u;
                                                                                    *(_OWORD *)(v216 + 64) = 0u;
                                                                                    *(_QWORD *)(v216 + 80) = 0;
                                                                                    *(_OWORD *)(v216 + 88) = xmmword_23B1CA770;
                                                                                    *(_BYTE *)(v216 + 104) = 0;
                                                                                    *(_QWORD *)(v216 + 112) = 0;
                                                                                    *(_QWORD *)(v216 + 120) = v215;
                                                                                    *(_QWORD *)(v216 + 128) = 0;
                                                                                    *(_QWORD *)(v216 + 136) = v209;
                                                                                    sub_23B1C5BD0();
                                                                                    a1 = v8;
                                                                                    sub_23B1C5B94();
                                                                                    v218 = v217;
                                                                                    result = v213(v8, v5);
                                                                                    v219 = v218 * 1000000000.0;
                                                                                    if ((~COERCE__INT64(v218 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                    {
                                                                                      if (v219 > -9.22337204e18)
                                                                                      {
                                                                                        if (v219 < 9.22337204e18)
                                                                                        {
                                                                                          sub_23ADF3AAC(v216, (uint64_t)v219);
                                                                                          if (v2)
                                                                                            return swift_release();
                                                                                          result = swift_release();
LABEL_179:
                                                                                          v408 = *(_QWORD *)(v3 + 32);
                                                                                          (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(v408 + 16) + 96))(&aBlock, result);
                                                                                          v220 = aBlock;
                                                                                          v221 = v412;
                                                                                          sub_23B1C5BD0();
                                                                                          a1 = v8;
                                                                                          sub_23B1C5B94();
                                                                                          v223 = v222;
                                                                                          v224 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                          result = v224(v8, v5);
                                                                                          v225 = v223 * 1000000000.0;
                                                                                          if ((~COERCE__INT64(v223 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                          {
                                                                                            if (v225 > -9.22337204e18)
                                                                                            {
                                                                                              if (v225 < 9.22337204e18)
                                                                                              {
                                                                                                v226 = (uint64_t)v225;
                                                                                                __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FD8);
                                                                                                v227 = swift_allocObject();
                                                                                                *(_BYTE *)(v227 + 144) = v221;
                                                                                                *(_QWORD *)(v227 + 24) = 0;
                                                                                                *(_QWORD *)(v227 + 32) = 0;
                                                                                                *(_QWORD *)(v227 + 16) = 0;
                                                                                                *(_BYTE *)(v227 + 40) = 1;
                                                                                                *(_OWORD *)(v227 + 48) = 0u;
                                                                                                *(_OWORD *)(v227 + 64) = 0u;
                                                                                                *(_QWORD *)(v227 + 80) = 0;
                                                                                                v409 = xmmword_23B1CA770;
                                                                                                *(_OWORD *)(v227 + 88) = xmmword_23B1CA770;
                                                                                                *(_BYTE *)(v227 + 104) = 0;
                                                                                                *(_QWORD *)(v227 + 112) = 0;
                                                                                                *(_QWORD *)(v227 + 120) = v226;
                                                                                                *(_QWORD *)(v227 + 128) = 0;
                                                                                                *(_QWORD *)(v227 + 136) = v220;
                                                                                                sub_23B1C5BD0();
                                                                                                a1 = v8;
                                                                                                sub_23B1C5B94();
                                                                                                v229 = v228;
                                                                                                result = v224(v8, v5);
                                                                                                v230 = v229 * 1000000000.0;
                                                                                                if ((~COERCE__INT64(v229 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                {
                                                                                                  if (v230 > -9.22337204e18)
                                                                                                  {
                                                                                                    if (v230 < 9.22337204e18)
                                                                                                    {
                                                                                                      sub_23ADF3AAC(v227, (uint64_t)v230);
                                                                                                      if (v2)
                                                                                                        return swift_release();
                                                                                                      v231 = swift_release();
                                                                                                      (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(v408 + 16) + 96))(&aBlock, v231);
                                                                                                      v232 = aBlock;
                                                                                                      v233 = v412;
                                                                                                      sub_23B1C5BD0();
                                                                                                      a1 = v8;
                                                                                                      sub_23B1C5B94();
                                                                                                      v235 = v234;
                                                                                                      result = v224(v8, v5);
                                                                                                      v236 = v235 * 1000000000.0;
                                                                                                      if ((~COERCE__INT64(v235 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                      {
                                                                                                        if (v236 > -9.22337204e18)
                                                                                                        {
                                                                                                          if (v236 < 9.22337204e18)
                                                                                                          {
                                                                                                            v237 = (uint64_t)v236;
                                                                                                            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FD0);
                                                                                                            v238 = swift_allocObject();
                                                                                                            *(_BYTE *)(v238 + 144) = v233;
                                                                                                            *(_QWORD *)(v238 + 24) = 0;
                                                                                                            *(_QWORD *)(v238 + 32) = 0;
                                                                                                            *(_QWORD *)(v238 + 16) = 0;
                                                                                                            *(_BYTE *)(v238 + 40) = 1;
                                                                                                            *(_OWORD *)(v238 + 48) = 0u;
                                                                                                            *(_OWORD *)(v238 + 64) = 0u;
                                                                                                            *(_QWORD *)(v238 + 80) = 0;
                                                                                                            *(_OWORD *)(v238 + 88) = v409;
                                                                                                            *(_BYTE *)(v238 + 104) = 0;
                                                                                                            *(_QWORD *)(v238 + 112) = 0;
                                                                                                            *(_QWORD *)(v238 + 120) = v237;
                                                                                                            *(_QWORD *)(v238 + 128) = 0;
                                                                                                            *(_QWORD *)(v238 + 136) = v232;
                                                                                                            sub_23B1C5BD0();
                                                                                                            a1 = v8;
                                                                                                            sub_23B1C5B94();
                                                                                                            v240 = v239;
                                                                                                            result = v224(v8, v5);
                                                                                                            v241 = v240 * 1000000000.0;
                                                                                                            if ((~COERCE__INT64(v240 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                            {
                                                                                                              if (v241 > -9.22337204e18)
                                                                                                              {
                                                                                                                if (v241 < 9.22337204e18)
                                                                                                                {
                                                                                                                  sub_23ADF3AAC(v238, (uint64_t)v241);
                                                                                                                  swift_release();
                                                                                                                  sub_23AE4F234();
                                                                                                                  (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(v3 + 40) + 16) + 96))(&aBlock);
                                                                                                                  v242 = aBlock;
                                                                                                                  sub_23B1C5BD0();
                                                                                                                  a1 = v8;
                                                                                                                  sub_23B1C5B94();
                                                                                                                  v244 = v243;
                                                                                                                  result = v224(v8, v5);
                                                                                                                  v245 = v244 * 1000000000.0;
                                                                                                                  if ((~COERCE__INT64(v244 * 1000000000.0) & 0x7FF0000000000000) == 0)
                                                                                                                  {
LABEL_437:
                                                                                                                    __break(1u);
                                                                                                                    goto LABEL_438;
                                                                                                                  }
                                                                                                                  if (v245 <= -9.22337204e18)
                                                                                                                  {
LABEL_438:
                                                                                                                    __break(1u);
                                                                                                                    goto LABEL_439;
                                                                                                                  }
                                                                                                                  if (v245 >= 9.22337204e18)
                                                                                                                  {
LABEL_439:
                                                                                                                    __break(1u);
                                                                                                                    goto LABEL_440;
                                                                                                                  }
                                                                                                                  v246 = (uint64_t)v245;
                                                                                                                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6260);
                                                                                                                  v247 = swift_allocObject();
                                                                                                                  *(_BYTE *)(v247 + 40) = 1;
                                                                                                                  *(_QWORD *)(v247 + 24) = 0;
                                                                                                                  *(_QWORD *)(v247 + 32) = 0;
                                                                                                                  *(_QWORD *)(v247 + 16) = 0;
                                                                                                                  *(_OWORD *)(v247 + 48) = 0u;
                                                                                                                  *(_OWORD *)(v247 + 64) = 0u;
                                                                                                                  *(_QWORD *)(v247 + 80) = 0;
                                                                                                                  *(_OWORD *)(v247 + 88) = v409;
                                                                                                                  *(_BYTE *)(v247 + 104) = 0;
                                                                                                                  *(_QWORD *)(v247 + 112) = 0;
                                                                                                                  *(_QWORD *)(v247 + 120) = v246;
                                                                                                                  *(_QWORD *)(v247 + 128) = 0;
                                                                                                                  *(_QWORD *)(v247 + 136) = v242;
                                                                                                                  sub_23B1C5BD0();
                                                                                                                  a1 = v8;
                                                                                                                  sub_23B1C5B94();
                                                                                                                  v249 = v248;
                                                                                                                  result = v224(v8, v5);
                                                                                                                  v250 = v249 * 1000000000.0;
                                                                                                                  if ((~COERCE__INT64(v249 * 1000000000.0) & 0x7FF0000000000000) == 0)
                                                                                                                  {
LABEL_440:
                                                                                                                    __break(1u);
                                                                                                                    goto LABEL_441;
                                                                                                                  }
                                                                                                                  if (v250 <= -9.22337204e18)
                                                                                                                  {
LABEL_441:
                                                                                                                    __break(1u);
                                                                                                                    goto LABEL_442;
                                                                                                                  }
                                                                                                                  if (v250 >= 9.22337204e18)
                                                                                                                  {
LABEL_442:
                                                                                                                    __break(1u);
LABEL_443:
                                                                                                                    if ((unint64_t)a1 <= 0x2F2029720FLL)
                                                                                                                      goto LABEL_444;
                                                                                                                    goto LABEL_464;
                                                                                                                  }
                                                                                                                  sub_23ADF3AAC(v247, (uint64_t)v250);
                                                                                                                  swift_release();
                                                                                                                  v251 = swift_release();
                                                                                                                  (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(v408 + 16) + 96))(&aBlock, v251);
                                                                                                                  v252 = aBlock;
                                                                                                                  v253 = v412;
                                                                                                                  sub_23B1C5BD0();
                                                                                                                  a1 = v8;
                                                                                                                  sub_23B1C5B94();
                                                                                                                  v255 = v254;
                                                                                                                  result = v224(v8, v5);
                                                                                                                  v256 = v255 * 1000000000.0;
                                                                                                                  if ((~COERCE__INT64(v255 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                  {
                                                                                                                    if (v256 > -9.22337204e18)
                                                                                                                    {
                                                                                                                      if (v256 < 9.22337204e18)
                                                                                                                      {
                                                                                                                        v257 = (uint64_t)v256;
                                                                                                                        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FC8);
                                                                                                                        v258 = swift_allocObject();
                                                                                                                        *(_BYTE *)(v258 + 144) = v253;
                                                                                                                        *(_QWORD *)(v258 + 24) = 0;
                                                                                                                        *(_QWORD *)(v258 + 32) = 0;
                                                                                                                        *(_QWORD *)(v258 + 16) = 0;
                                                                                                                        *(_BYTE *)(v258 + 40) = 1;
                                                                                                                        *(_OWORD *)(v258 + 48) = 0u;
                                                                                                                        *(_OWORD *)(v258 + 64) = 0u;
                                                                                                                        *(_QWORD *)(v258 + 80) = 0;
                                                                                                                        *(_OWORD *)(v258 + 88) = v409;
                                                                                                                        *(_BYTE *)(v258 + 104) = 0;
                                                                                                                        *(_QWORD *)(v258 + 112) = 0;
                                                                                                                        *(_QWORD *)(v258 + 120) = v257;
                                                                                                                        *(_QWORD *)(v258 + 128) = 0;
                                                                                                                        *(_QWORD *)(v258 + 136) = v252;
                                                                                                                        sub_23B1C5BD0();
                                                                                                                        a1 = v8;
                                                                                                                        sub_23B1C5B94();
                                                                                                                        v260 = v259;
                                                                                                                        result = v224(v8, v5);
                                                                                                                        v261 = v260 * 1000000000.0;
                                                                                                                        if ((~COERCE__INT64(v260 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                        {
                                                                                                                          if (v261 > -9.22337204e18)
                                                                                                                          {
                                                                                                                            if (v261 < 9.22337204e18)
                                                                                                                            {
                                                                                                                              sub_23ADF3AAC(v258, (uint64_t)v261);
                                                                                                                              swift_release();
LABEL_80:
                                                                                                                              (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock);
                                                                                                                              v89 = aBlock;
                                                                                                                              v90 = v412;
                                                                                                                              sub_23B1C5BD0();
                                                                                                                              a1 = v8;
                                                                                                                              sub_23B1C5B94();
                                                                                                                              v92 = v91;
                                                                                                                              v93 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                                              result = v93(v8, v5);
                                                                                                                              v94 = v92 * 1000000000.0;
                                                                                                                              if ((~COERCE__INT64(v92 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                              {
                                                                                                                                if (v94 > -9.22337204e18)
                                                                                                                                {
                                                                                                                                  if (v94 < 9.22337204e18)
                                                                                                                                  {
                                                                                                                                    v95 = (uint64_t)v94;
                                                                                                                                    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FB8);
                                                                                                                                    v96 = swift_allocObject();
                                                                                                                                    *(_BYTE *)(v96 + 144) = v90;
                                                                                                                                    *(_QWORD *)(v96 + 24) = 0;
                                                                                                                                    *(_QWORD *)(v96 + 32) = 0;
                                                                                                                                    *(_QWORD *)(v96 + 16) = 0;
                                                                                                                                    *(_BYTE *)(v96 + 40) = 1;
                                                                                                                                    *(_OWORD *)(v96 + 48) = 0u;
                                                                                                                                    *(_OWORD *)(v96 + 64) = 0u;
                                                                                                                                    *(_QWORD *)(v96 + 80) = 0;
                                                                                                                                    *(_OWORD *)(v96 + 88) = xmmword_23B1CA770;
                                                                                                                                    *(_BYTE *)(v96 + 104) = 0;
                                                                                                                                    *(_QWORD *)(v96 + 112) = 0;
                                                                                                                                    *(_QWORD *)(v96 + 120) = v95;
                                                                                                                                    *(_QWORD *)(v96 + 128) = 0;
                                                                                                                                    *(_QWORD *)(v96 + 136) = v89;
                                                                                                                                    sub_23B1C5BD0();
                                                                                                                                    a1 = v8;
                                                                                                                                    sub_23B1C5B94();
                                                                                                                                    v98 = v97;
                                                                                                                                    result = v93(v8, v5);
                                                                                                                                    v99 = v98 * 1000000000.0;
                                                                                                                                    if ((~COERCE__INT64(v98 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                    {
                                                                                                                                      if (v99 > -9.22337204e18)
                                                                                                                                      {
                                                                                                                                        if (v99 < 9.22337204e18)
                                                                                                                                        {
                                                                                                                                          sub_23ADF3AAC(v96, (uint64_t)v99);
                                                                                                                                          if (v2)
                                                                                                                                            return swift_release();
                                                                                                                                          result = swift_release();
LABEL_261:
                                                                                                                                          (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                                                                                          v262 = aBlock;
                                                                                                                                          v263 = v412;
                                                                                                                                          sub_23B1C5BD0();
                                                                                                                                          a1 = v8;
                                                                                                                                          sub_23B1C5B94();
                                                                                                                                          v265 = v264;
                                                                                                                                          v266 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                                                          result = v266(v8, v5);
                                                                                                                                          v267 = v265 * 1000000000.0;
                                                                                                                                          if ((~COERCE__INT64(v265 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                          {
                                                                                                                                            if (v267 > -9.22337204e18)
                                                                                                                                            {
                                                                                                                                              if (v267 < 9.22337204e18)
                                                                                                                                              {
                                                                                                                                                v268 = (uint64_t)v267;
                                                                                                                                                __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6028);
                                                                                                                                                v269 = swift_allocObject();
                                                                                                                                                *(_BYTE *)(v269 + 144) = v263;
                                                                                                                                                *(_QWORD *)(v269 + 24) = 0;
                                                                                                                                                *(_QWORD *)(v269 + 32) = 0;
                                                                                                                                                *(_QWORD *)(v269 + 16) = 0;
                                                                                                                                                *(_BYTE *)(v269 + 40) = 1;
                                                                                                                                                *(_OWORD *)(v269 + 48) = 0u;
                                                                                                                                                *(_OWORD *)(v269 + 64) = 0u;
                                                                                                                                                *(_QWORD *)(v269 + 80) = 0;
                                                                                                                                                *(_OWORD *)(v269 + 88) = xmmword_23B1CA770;
                                                                                                                                                *(_BYTE *)(v269 + 104) = 0;
                                                                                                                                                *(_QWORD *)(v269 + 112) = 0;
                                                                                                                                                *(_QWORD *)(v269 + 120) = v268;
                                                                                                                                                *(_QWORD *)(v269 + 128) = 0;
                                                                                                                                                *(_QWORD *)(v269 + 136) = v262;
                                                                                                                                                sub_23B1C5BD0();
                                                                                                                                                a1 = v8;
                                                                                                                                                sub_23B1C5B94();
                                                                                                                                                v271 = v270;
                                                                                                                                                result = v266(v8, v5);
                                                                                                                                                v272 = v271 * 1000000000.0;
                                                                                                                                                if ((~COERCE__INT64(v271 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                {
                                                                                                                                                  if (v272 > -9.22337204e18)
                                                                                                                                                  {
                                                                                                                                                    if (v272 < 9.22337204e18)
                                                                                                                                                    {
                                                                                                                                                      sub_23ADF3AAC(v269, (uint64_t)v272);
                                                                                                                                                      if (v2)
                                                                                                                                                        return swift_release();
                                                                                                                                                      result = swift_release();
LABEL_276:
                                                                                                                                                      result = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v3 + 16) + 432))(result);
                                                                                                                                                      if (v2)
                                                                                                                                                        return result;
                                                                                                                                                      if ((result & 1) != 0)
                                                                                                                                                      {
                                                                                                                                                        v273 = *(_QWORD *)(v3 + 32);
                                                                                                                                                        (*(void (**)(id *__return_ptr))(**(_QWORD **)(v273 + 16) + 96))(&aBlock);
                                                                                                                                                        v274 = (uint64_t)aBlock;
                                                                                                                                                        v275 = v412;
                                                                                                                                                        sub_23B1C5BD0();
                                                                                                                                                        sub_23B1C5B94();
                                                                                                                                                        v277 = v276;
                                                                                                                                                        v278 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                                                                        result = v278(v8, v5);
                                                                                                                                                        v279 = v277 * 1000000000.0;
                                                                                                                                                        if ((~COERCE__INT64(v277 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                        {
                                                                                                                                                          if (v279 > -9.22337204e18)
                                                                                                                                                          {
                                                                                                                                                            if (v279 < 9.22337204e18)
                                                                                                                                                            {
                                                                                                                                                              v280 = (uint64_t)v279;
                                                                                                                                                              *(_QWORD *)&v409 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
                                                                                                                                                              swift_allocObject();
                                                                                                                                                              v281 = sub_23AEA220C(v274, v275, 0, v280, 0x8000);
                                                                                                                                                              sub_23B1C5BD0();
                                                                                                                                                              sub_23B1C5B94();
                                                                                                                                                              v283 = v282;
                                                                                                                                                              result = v278(v8, v5);
                                                                                                                                                              v284 = v283 * 1000000000.0;
                                                                                                                                                              if ((~COERCE__INT64(v283 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                              {
                                                                                                                                                                if (v284 > -9.22337204e18)
                                                                                                                                                                {
                                                                                                                                                                  if (v284 < 9.22337204e18)
                                                                                                                                                                  {
                                                                                                                                                                    sub_23ADF3AAC(v281, (uint64_t)v284);
                                                                                                                                                                    v285 = swift_release();
                                                                                                                                                                    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(v273 + 16) + 104))(&aBlock, v285);
                                                                                                                                                                    v286 = (uint64_t)aBlock;
                                                                                                                                                                    v287 = v412;
                                                                                                                                                                    sub_23B1C5BD0();
                                                                                                                                                                    sub_23B1C5B94();
                                                                                                                                                                    v289 = v288;
                                                                                                                                                                    result = v278(v8, v5);
                                                                                                                                                                    v290 = v289 * 1000000000.0;
                                                                                                                                                                    if ((~COERCE__INT64(v289 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                                    {
                                                                                                                                                                      if (v290 > -9.22337204e18)
                                                                                                                                                                      {
                                                                                                                                                                        if (v290 < 9.22337204e18)
                                                                                                                                                                        {
                                                                                                                                                                          v291 = (uint64_t)v290;
                                                                                                                                                                          swift_allocObject();
                                                                                                                                                                          v292 = sub_23AEA220C(v286, v287, 0, v291, 0x8000);
                                                                                                                                                                          sub_23B1C5BD0();
                                                                                                                                                                          sub_23B1C5B94();
                                                                                                                                                                          v294 = v293;
                                                                                                                                                                          result = v278(v8, v5);
                                                                                                                                                                          v295 = v294 * 1000000000.0;
                                                                                                                                                                          if ((~COERCE__INT64(v294 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                                          {
                                                                                                                                                                            if (v295 > -9.22337204e18)
                                                                                                                                                                            {
                                                                                                                                                                              if (v295 < 9.22337204e18)
                                                                                                                                                                              {
                                                                                                                                                                                sub_23ADF3AAC(v292, (uint64_t)v295);
                                                                                                                                                                                swift_release();
                                                                                                                                                                                goto LABEL_298;
                                                                                                                                                                              }
LABEL_492:
                                                                                                                                                                              __break(1u);
                                                                                                                                                                              goto LABEL_493;
                                                                                                                                                                            }
LABEL_491:
                                                                                                                                                                            __break(1u);
                                                                                                                                                                            goto LABEL_492;
                                                                                                                                                                          }
LABEL_490:
                                                                                                                                                                          __break(1u);
                                                                                                                                                                          goto LABEL_491;
                                                                                                                                                                        }
LABEL_489:
                                                                                                                                                                        __break(1u);
                                                                                                                                                                        goto LABEL_490;
                                                                                                                                                                      }
LABEL_488:
                                                                                                                                                                      __break(1u);
                                                                                                                                                                      goto LABEL_489;
                                                                                                                                                                    }
LABEL_487:
                                                                                                                                                                    __break(1u);
                                                                                                                                                                    goto LABEL_488;
                                                                                                                                                                  }
LABEL_486:
                                                                                                                                                                  __break(1u);
                                                                                                                                                                  goto LABEL_487;
                                                                                                                                                                }
LABEL_485:
                                                                                                                                                                __break(1u);
                                                                                                                                                                goto LABEL_486;
                                                                                                                                                              }
LABEL_484:
                                                                                                                                                              __break(1u);
                                                                                                                                                              goto LABEL_485;
                                                                                                                                                            }
LABEL_483:
                                                                                                                                                            __break(1u);
                                                                                                                                                            goto LABEL_484;
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          __break(1u);
                                                                                                                                                        }
                                                                                                                                                        __break(1u);
                                                                                                                                                        goto LABEL_483;
                                                                                                                                                      }
LABEL_298:
                                                                                                                                                      (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock);
                                                                                                                                                      v296 = aBlock;
                                                                                                                                                      v297 = v412;
                                                                                                                                                      sub_23B1C5BD0();
                                                                                                                                                      a1 = v8;
                                                                                                                                                      sub_23B1C5B94();
                                                                                                                                                      v299 = v298;
                                                                                                                                                      v300 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                                                                      result = v300(v8, v5);
                                                                                                                                                      v301 = v299 * 1000000000.0;
                                                                                                                                                      if ((~COERCE__INT64(v299 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                      {
                                                                                                                                                        if (v301 > -9.22337204e18)
                                                                                                                                                        {
                                                                                                                                                          if (v301 < 9.22337204e18)
                                                                                                                                                          {
                                                                                                                                                            v302 = (uint64_t)v301;
                                                                                                                                                            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6028);
                                                                                                                                                            v303 = swift_allocObject();
                                                                                                                                                            *(_BYTE *)(v303 + 144) = v297;
                                                                                                                                                            *(_QWORD *)(v303 + 24) = 0;
                                                                                                                                                            *(_QWORD *)(v303 + 32) = 0;
                                                                                                                                                            *(_QWORD *)(v303 + 16) = 0;
                                                                                                                                                            *(_BYTE *)(v303 + 40) = 1;
                                                                                                                                                            *(_OWORD *)(v303 + 48) = 0u;
                                                                                                                                                            *(_OWORD *)(v303 + 64) = 0u;
                                                                                                                                                            *(_QWORD *)(v303 + 80) = 0;
                                                                                                                                                            *(_OWORD *)(v303 + 88) = xmmword_23B1CA770;
                                                                                                                                                            *(_BYTE *)(v303 + 104) = 0;
                                                                                                                                                            *(_QWORD *)(v303 + 112) = 0;
                                                                                                                                                            *(_QWORD *)(v303 + 120) = v302;
                                                                                                                                                            *(_QWORD *)(v303 + 128) = 0;
                                                                                                                                                            *(_QWORD *)(v303 + 136) = v296;
                                                                                                                                                            sub_23B1C5BD0();
                                                                                                                                                            a1 = v8;
                                                                                                                                                            sub_23B1C5B94();
                                                                                                                                                            v305 = v304;
                                                                                                                                                            result = v300(v8, v5);
                                                                                                                                                            v306 = v305 * 1000000000.0;
                                                                                                                                                            if ((~COERCE__INT64(v305 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                            {
                                                                                                                                                              if (v306 > -9.22337204e18)
                                                                                                                                                              {
                                                                                                                                                                if (v306 < 9.22337204e18)
                                                                                                                                                                {
                                                                                                                                                                  sub_23ADF3AAC(v303, (uint64_t)v306);
                                                                                                                                                                  if (v2)
                                                                                                                                                                    return swift_release();
                                                                                                                                                                  swift_release();
                                                                                                                                                                  goto LABEL_313;
                                                                                                                                                                }
                                                                                                                                                                goto LABEL_463;
                                                                                                                                                              }
LABEL_462:
                                                                                                                                                              __break(1u);
LABEL_463:
                                                                                                                                                              __break(1u);
LABEL_464:
                                                                                                                                                              if ((unint64_t)a1 <= 0x2F202C84DDLL)
                                                                                                                                                                goto LABEL_465;
                                                                                                                                                              if ((unint64_t)a1 <= 0x2F203A6804)
                                                                                                                                                                goto LABEL_474;
                                                                                                                                                              return result;
                                                                                                                                                            }
LABEL_461:
                                                                                                                                                            __break(1u);
                                                                                                                                                            goto LABEL_462;
                                                                                                                                                          }
LABEL_460:
                                                                                                                                                          __break(1u);
                                                                                                                                                          goto LABEL_461;
                                                                                                                                                        }
LABEL_459:
                                                                                                                                                        __break(1u);
                                                                                                                                                        goto LABEL_460;
                                                                                                                                                      }
LABEL_458:
                                                                                                                                                      __break(1u);
                                                                                                                                                      goto LABEL_459;
                                                                                                                                                    }
                                                                                                                                                    goto LABEL_436;
                                                                                                                                                  }
LABEL_435:
                                                                                                                                                  __break(1u);
LABEL_436:
                                                                                                                                                  __break(1u);
                                                                                                                                                  goto LABEL_437;
                                                                                                                                                }
LABEL_434:
                                                                                                                                                __break(1u);
                                                                                                                                                goto LABEL_435;
                                                                                                                                              }
LABEL_433:
                                                                                                                                              __break(1u);
                                                                                                                                              goto LABEL_434;
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            __break(1u);
                                                                                                                                          }
                                                                                                                                          __break(1u);
                                                                                                                                          goto LABEL_433;
                                                                                                                                        }
                                                                                                                                        goto LABEL_421;
                                                                                                                                      }
LABEL_420:
                                                                                                                                      __break(1u);
LABEL_421:
                                                                                                                                      __break(1u);
LABEL_422:
                                                                                                                                      if ((unint64_t)a1 <= 0x2F200DACAFLL)
                                                                                                                                        goto LABEL_423;
                                                                                                                                      goto LABEL_443;
                                                                                                                                    }
LABEL_419:
                                                                                                                                    __break(1u);
                                                                                                                                    goto LABEL_420;
                                                                                                                                  }
LABEL_418:
                                                                                                                                  __break(1u);
                                                                                                                                  goto LABEL_419;
                                                                                                                                }
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                __break(1u);
                                                                                                                              }
                                                                                                                              __break(1u);
                                                                                                                              goto LABEL_418;
                                                                                                                            }
LABEL_457:
                                                                                                                            __break(1u);
                                                                                                                            goto LABEL_458;
                                                                                                                          }
LABEL_456:
                                                                                                                          __break(1u);
                                                                                                                          goto LABEL_457;
                                                                                                                        }
LABEL_455:
                                                                                                                        __break(1u);
                                                                                                                        goto LABEL_456;
                                                                                                                      }
LABEL_454:
                                                                                                                      __break(1u);
                                                                                                                      goto LABEL_455;
                                                                                                                    }
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    __break(1u);
                                                                                                                  }
                                                                                                                  __break(1u);
                                                                                                                  goto LABEL_454;
                                                                                                                }
                                                                                                                goto LABEL_406;
                                                                                                              }
LABEL_405:
                                                                                                              __break(1u);
LABEL_406:
                                                                                                              __break(1u);
LABEL_407:
                                                                                                              if ((unint64_t)a1 <= 0x2F1A9204BFLL)
                                                                                                                goto LABEL_408;
                                                                                                              goto LABEL_422;
                                                                                                            }
LABEL_404:
                                                                                                            __break(1u);
                                                                                                            goto LABEL_405;
                                                                                                          }
LABEL_403:
                                                                                                          __break(1u);
                                                                                                          goto LABEL_404;
                                                                                                        }
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        __break(1u);
                                                                                                      }
                                                                                                      __break(1u);
                                                                                                      goto LABEL_403;
                                                                                                    }
                                                                                                    goto LABEL_391;
                                                                                                  }
LABEL_390:
                                                                                                  __break(1u);
LABEL_391:
                                                                                                  __break(1u);
LABEL_392:
                                                                                                  if ((unint64_t)a1 <= 0x2F1A91B69FLL)
                                                                                                    goto LABEL_393;
                                                                                                  goto LABEL_407;
                                                                                                }
LABEL_389:
                                                                                                __break(1u);
                                                                                                goto LABEL_390;
                                                                                              }
LABEL_388:
                                                                                              __break(1u);
                                                                                              goto LABEL_389;
                                                                                            }
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            __break(1u);
                                                                                          }
                                                                                          __break(1u);
                                                                                          goto LABEL_388;
                                                                                        }
                                                                                        goto LABEL_376;
                                                                                      }
LABEL_375:
                                                                                      __break(1u);
LABEL_376:
                                                                                      __break(1u);
LABEL_377:
                                                                                      if ((unint64_t)a1 <= 0x2F1A91953DLL)
                                                                                        goto LABEL_378;
                                                                                      goto LABEL_392;
                                                                                    }
LABEL_374:
                                                                                    __break(1u);
                                                                                    goto LABEL_375;
                                                                                  }
LABEL_373:
                                                                                  __break(1u);
                                                                                  goto LABEL_374;
                                                                                }
                                                                              }
                                                                              else
                                                                              {
                                                                                __break(1u);
                                                                              }
                                                                              __break(1u);
                                                                              goto LABEL_373;
                                                                            }
                                                                            goto LABEL_367;
                                                                          }
LABEL_366:
                                                                          __break(1u);
LABEL_367:
                                                                          __break(1u);
LABEL_368:
                                                                          if ((unint64_t)a1 <= 0x2F1A8ED457)
                                                                          {
LABEL_369:
                                                                            __swift_instantiateConcreteTypeFromMangledName(qword_2542E45D8);
                                                                            swift_dynamicCastClassUnconditional();
                                                                            swift_retain();
                                                                            sub_23AE4EB28();
                                                                            if (v2)
                                                                              return swift_release();
                                                                            result = swift_release();
LABEL_378:
                                                                            (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                            v331 = aBlock;
                                                                            v332 = v412;
                                                                            sub_23B1C5BD0();
                                                                            sub_23B1C5B94();
                                                                            v334 = v333;
                                                                            v335 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                            result = v335(v8, v5);
                                                                            v336 = v334 * 1000000000.0;
                                                                            if ((~COERCE__INT64(v334 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                            {
                                                                              if (v336 > -9.22337204e18)
                                                                              {
                                                                                if (v336 < 9.22337204e18)
                                                                                {
                                                                                  v337 = (uint64_t)v336;
                                                                                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6028);
                                                                                  v338 = swift_allocObject();
                                                                                  *(_BYTE *)(v338 + 144) = v332;
                                                                                  *(_QWORD *)(v338 + 24) = 0;
                                                                                  *(_QWORD *)(v338 + 32) = 0;
                                                                                  *(_QWORD *)(v338 + 16) = 0;
                                                                                  *(_BYTE *)(v338 + 40) = 1;
                                                                                  *(_OWORD *)(v338 + 48) = 0u;
                                                                                  *(_OWORD *)(v338 + 64) = 0u;
                                                                                  *(_QWORD *)(v338 + 80) = 0;
                                                                                  *(_OWORD *)(v338 + 88) = xmmword_23B1CA770;
                                                                                  *(_BYTE *)(v338 + 104) = 0;
                                                                                  *(_QWORD *)(v338 + 112) = 0;
                                                                                  *(_QWORD *)(v338 + 120) = v337;
                                                                                  *(_QWORD *)(v338 + 128) = 0;
                                                                                  *(_QWORD *)(v338 + 136) = v331;
                                                                                  sub_23B1C5BD0();
                                                                                  sub_23B1C5B94();
                                                                                  v340 = v339;
                                                                                  result = v335(v8, v5);
                                                                                  v341 = v340 * 1000000000.0;
                                                                                  if ((~COERCE__INT64(v340 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                  {
                                                                                    if (v341 > -9.22337204e18)
                                                                                    {
                                                                                      if (v341 < 9.22337204e18)
                                                                                      {
                                                                                        sub_23ADF3AAC(v338, (uint64_t)v341);
                                                                                        if (v2)
                                                                                          return swift_release();
                                                                                        result = swift_release();
LABEL_393:
                                                                                        (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                                        v342 = aBlock;
                                                                                        v343 = v412;
                                                                                        sub_23B1C5BD0();
                                                                                        sub_23B1C5B94();
                                                                                        v345 = v344;
                                                                                        v346 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                        result = v346(v8, v5);
                                                                                        v347 = v345 * 1000000000.0;
                                                                                        if ((~COERCE__INT64(v345 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                        {
                                                                                          if (v347 > -9.22337204e18)
                                                                                          {
                                                                                            if (v347 < 9.22337204e18)
                                                                                            {
                                                                                              v348 = (uint64_t)v347;
                                                                                              __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F90);
                                                                                              v349 = swift_allocObject();
                                                                                              *(_BYTE *)(v349 + 144) = v343;
                                                                                              *(_QWORD *)(v349 + 24) = 0;
                                                                                              *(_QWORD *)(v349 + 32) = 0;
                                                                                              *(_QWORD *)(v349 + 16) = 0;
                                                                                              *(_BYTE *)(v349 + 40) = 1;
                                                                                              *(_OWORD *)(v349 + 48) = 0u;
                                                                                              *(_OWORD *)(v349 + 64) = 0u;
                                                                                              *(_QWORD *)(v349 + 80) = 0;
                                                                                              *(_OWORD *)(v349 + 88) = xmmword_23B1CA770;
                                                                                              *(_BYTE *)(v349 + 104) = 0;
                                                                                              *(_QWORD *)(v349 + 112) = 0;
                                                                                              *(_QWORD *)(v349 + 120) = v348;
                                                                                              *(_QWORD *)(v349 + 128) = 0;
                                                                                              *(_QWORD *)(v349 + 136) = v342;
                                                                                              sub_23B1C5BD0();
                                                                                              sub_23B1C5B94();
                                                                                              v351 = v350;
                                                                                              result = v346(v8, v5);
                                                                                              v352 = v351 * 1000000000.0;
                                                                                              if ((~COERCE__INT64(v351 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                              {
                                                                                                if (v352 > -9.22337204e18)
                                                                                                {
                                                                                                  if (v352 < 9.22337204e18)
                                                                                                  {
                                                                                                    sub_23ADF3AAC(v349, (uint64_t)v352);
                                                                                                    if (v2)
                                                                                                      return swift_release();
                                                                                                    result = swift_release();
LABEL_408:
                                                                                                    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                                                    v353 = aBlock;
                                                                                                    v354 = v412;
                                                                                                    sub_23B1C5BD0();
                                                                                                    sub_23B1C5B94();
                                                                                                    v356 = v355;
                                                                                                    v357 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                    result = v357(v8, v5);
                                                                                                    v358 = v356 * 1000000000.0;
                                                                                                    if ((~COERCE__INT64(v356 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                    {
                                                                                                      if (v358 > -9.22337204e18)
                                                                                                      {
                                                                                                        if (v358 < 9.22337204e18)
                                                                                                        {
                                                                                                          v359 = (uint64_t)v358;
                                                                                                          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F88);
                                                                                                          v360 = swift_allocObject();
                                                                                                          *(_BYTE *)(v360 + 144) = v354;
                                                                                                          *(_QWORD *)(v360 + 24) = 0;
                                                                                                          *(_QWORD *)(v360 + 32) = 0;
                                                                                                          *(_QWORD *)(v360 + 16) = 0;
                                                                                                          *(_BYTE *)(v360 + 40) = 1;
                                                                                                          *(_OWORD *)(v360 + 48) = 0u;
                                                                                                          *(_OWORD *)(v360 + 64) = 0u;
                                                                                                          *(_QWORD *)(v360 + 80) = 0;
                                                                                                          *(_OWORD *)(v360 + 88) = xmmword_23B1CA770;
                                                                                                          *(_BYTE *)(v360 + 104) = 0;
                                                                                                          *(_QWORD *)(v360 + 112) = 0;
                                                                                                          *(_QWORD *)(v360 + 120) = v359;
                                                                                                          *(_QWORD *)(v360 + 128) = 0;
                                                                                                          *(_QWORD *)(v360 + 136) = v353;
                                                                                                          sub_23B1C5BD0();
                                                                                                          sub_23B1C5B94();
                                                                                                          v362 = v361;
                                                                                                          result = v357(v8, v5);
                                                                                                          v363 = v362 * 1000000000.0;
                                                                                                          if ((~COERCE__INT64(v362 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                          {
                                                                                                            if (v363 > -9.22337204e18)
                                                                                                            {
                                                                                                              if (v363 < 9.22337204e18)
                                                                                                              {
                                                                                                                sub_23ADF3AAC(v360, (uint64_t)v363);
                                                                                                                if (v2)
                                                                                                                  return swift_release();
                                                                                                                result = swift_release();
LABEL_423:
                                                                                                                (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                                                                v364 = aBlock;
                                                                                                                v365 = v412;
                                                                                                                sub_23B1C5BD0();
                                                                                                                sub_23B1C5B94();
                                                                                                                v367 = v366;
                                                                                                                v368 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                                result = v368(v8, v5);
                                                                                                                v369 = v367 * 1000000000.0;
                                                                                                                if ((~COERCE__INT64(v367 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                {
                                                                                                                  if (v369 > -9.22337204e18)
                                                                                                                  {
                                                                                                                    if (v369 < 9.22337204e18)
                                                                                                                    {
                                                                                                                      v370 = (uint64_t)v369;
                                                                                                                      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F90);
                                                                                                                      v371 = swift_allocObject();
                                                                                                                      *(_BYTE *)(v371 + 144) = v365;
                                                                                                                      *(_QWORD *)(v371 + 24) = 0;
                                                                                                                      *(_QWORD *)(v371 + 32) = 0;
                                                                                                                      *(_QWORD *)(v371 + 16) = 0;
                                                                                                                      *(_BYTE *)(v371 + 40) = 1;
                                                                                                                      *(_OWORD *)(v371 + 48) = 0u;
                                                                                                                      *(_OWORD *)(v371 + 64) = 0u;
                                                                                                                      *(_QWORD *)(v371 + 80) = 0;
                                                                                                                      *(_OWORD *)(v371 + 88) = xmmword_23B1CA770;
                                                                                                                      *(_BYTE *)(v371 + 104) = 0;
                                                                                                                      *(_QWORD *)(v371 + 112) = 0;
                                                                                                                      *(_QWORD *)(v371 + 120) = v370;
                                                                                                                      *(_QWORD *)(v371 + 128) = 0;
                                                                                                                      *(_QWORD *)(v371 + 136) = v364;
                                                                                                                      sub_23B1C5BD0();
                                                                                                                      sub_23B1C5B94();
                                                                                                                      v373 = v372;
                                                                                                                      result = v368(v8, v5);
                                                                                                                      v374 = v373 * 1000000000.0;
                                                                                                                      if ((~COERCE__INT64(v373 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                      {
                                                                                                                        if (v374 > -9.22337204e18)
                                                                                                                        {
                                                                                                                          if (v374 < 9.22337204e18)
                                                                                                                          {
                                                                                                                            sub_23ADF3AAC(v371, (uint64_t)v374);
                                                                                                                            if (v2)
                                                                                                                              return swift_release();
                                                                                                                            result = swift_release();
LABEL_444:
                                                                                                                            (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                                                                            v375 = aBlock;
                                                                                                                            v376 = v412;
                                                                                                                            sub_23B1C5BD0();
                                                                                                                            sub_23B1C5B94();
                                                                                                                            v378 = v377;
                                                                                                                            v379 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                                            result = v379(v8, v5);
                                                                                                                            v380 = v378 * 1000000000.0;
                                                                                                                            if ((~COERCE__INT64(v378 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                            {
                                                                                                                              if (v380 > -9.22337204e18)
                                                                                                                              {
                                                                                                                                if (v380 < 9.22337204e18)
                                                                                                                                {
                                                                                                                                  v381 = (uint64_t)v380;
                                                                                                                                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F70);
                                                                                                                                  v382 = swift_allocObject();
                                                                                                                                  *(_BYTE *)(v382 + 144) = v376;
                                                                                                                                  *(_QWORD *)(v382 + 24) = 0;
                                                                                                                                  *(_QWORD *)(v382 + 32) = 0;
                                                                                                                                  *(_QWORD *)(v382 + 16) = 0;
                                                                                                                                  *(_BYTE *)(v382 + 40) = 1;
                                                                                                                                  *(_OWORD *)(v382 + 48) = 0u;
                                                                                                                                  *(_OWORD *)(v382 + 64) = 0u;
                                                                                                                                  *(_QWORD *)(v382 + 80) = 0;
                                                                                                                                  *(_OWORD *)(v382 + 88) = xmmword_23B1CA770;
                                                                                                                                  *(_BYTE *)(v382 + 104) = 0;
                                                                                                                                  *(_QWORD *)(v382 + 112) = 0;
                                                                                                                                  *(_QWORD *)(v382 + 120) = v381;
                                                                                                                                  *(_QWORD *)(v382 + 128) = 0;
                                                                                                                                  *(_QWORD *)(v382 + 136) = v375;
                                                                                                                                  sub_23B1C5BD0();
                                                                                                                                  sub_23B1C5B94();
                                                                                                                                  v384 = v383;
                                                                                                                                  result = v379(v8, v5);
                                                                                                                                  v385 = v384 * 1000000000.0;
                                                                                                                                  if ((~COERCE__INT64(v384 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                  {
                                                                                                                                    if (v385 > -9.22337204e18)
                                                                                                                                    {
                                                                                                                                      if (v385 < 9.22337204e18)
                                                                                                                                      {
                                                                                                                                        sub_23ADF3AAC(v382, (uint64_t)v385);
                                                                                                                                        if (v2)
                                                                                                                                          return swift_release();
                                                                                                                                        result = swift_release();
LABEL_465:
                                                                                                                                        (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
                                                                                                                                        v386 = aBlock;
                                                                                                                                        v387 = v412;
                                                                                                                                        sub_23B1C5BD0();
                                                                                                                                        sub_23B1C5B94();
                                                                                                                                        v389 = v388;
                                                                                                                                        v390 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                                                        result = v390(v8, v5);
                                                                                                                                        v391 = v389 * 1000000000.0;
                                                                                                                                        if ((~COERCE__INT64(v389 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                        {
                                                                                                                                          if (v391 > -9.22337204e18)
                                                                                                                                          {
                                                                                                                                            if (v391 < 9.22337204e18)
                                                                                                                                            {
                                                                                                                                              v392 = (uint64_t)v391;
                                                                                                                                              __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6000);
                                                                                                                                              v393 = swift_allocObject();
                                                                                                                                              *(_BYTE *)(v393 + 144) = v387;
                                                                                                                                              *(_QWORD *)(v393 + 24) = 0;
                                                                                                                                              *(_QWORD *)(v393 + 32) = 0;
                                                                                                                                              *(_QWORD *)(v393 + 16) = 0;
                                                                                                                                              *(_BYTE *)(v393 + 40) = 1;
                                                                                                                                              *(_OWORD *)(v393 + 48) = 0u;
                                                                                                                                              *(_OWORD *)(v393 + 64) = 0u;
                                                                                                                                              *(_QWORD *)(v393 + 80) = 0;
                                                                                                                                              *(_OWORD *)(v393 + 88) = xmmword_23B1CA770;
                                                                                                                                              *(_BYTE *)(v393 + 104) = 0;
                                                                                                                                              *(_QWORD *)(v393 + 112) = 0;
                                                                                                                                              *(_QWORD *)(v393 + 120) = v392;
                                                                                                                                              *(_QWORD *)(v393 + 128) = 0;
                                                                                                                                              *(_QWORD *)(v393 + 136) = v386;
                                                                                                                                              sub_23B1C5BD0();
                                                                                                                                              sub_23B1C5B94();
                                                                                                                                              v395 = v394;
                                                                                                                                              result = v390(v8, v5);
                                                                                                                                              v396 = v395 * 1000000000.0;
                                                                                                                                              if ((~COERCE__INT64(v395 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                              {
                                                                                                                                                if (v396 > -9.22337204e18)
                                                                                                                                                {
                                                                                                                                                  if (v396 < 9.22337204e18)
                                                                                                                                                  {
                                                                                                                                                    sub_23ADF3AAC(v393, (uint64_t)v396);
                                                                                                                                                    if (v2)
                                                                                                                                                      return swift_release();
                                                                                                                                                    swift_release();
LABEL_474:
                                                                                                                                                    sub_23AE4F234();
                                                                                                                                                    (*(void (**)(id *__return_ptr))(**(_QWORD **)(*(_QWORD *)(v3 + 40) + 16) + 96))(&aBlock);
                                                                                                                                                    v397 = aBlock;
                                                                                                                                                    sub_23B1C5BD0();
                                                                                                                                                    sub_23B1C5B94();
                                                                                                                                                    v399 = v398;
                                                                                                                                                    v400 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
                                                                                                                                                    result = v400(v8, v5);
                                                                                                                                                    v401 = v399 * 1000000000.0;
                                                                                                                                                    if ((~COERCE__INT64(v399 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                    {
                                                                                                                                                      if (v401 > -9.22337204e18)
                                                                                                                                                      {
                                                                                                                                                        if (v401 < 9.22337204e18)
                                                                                                                                                        {
                                                                                                                                                          v402 = (uint64_t)v401;
                                                                                                                                                          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61F0);
                                                                                                                                                          v403 = swift_allocObject();
                                                                                                                                                          *(_BYTE *)(v403 + 40) = 1;
                                                                                                                                                          *(_OWORD *)(v403 + 48) = 0u;
                                                                                                                                                          *(_OWORD *)(v403 + 64) = 0u;
                                                                                                                                                          *(_QWORD *)(v403 + 24) = 0;
                                                                                                                                                          *(_QWORD *)(v403 + 32) = 0;
                                                                                                                                                          *(_QWORD *)(v403 + 16) = 0;
                                                                                                                                                          *(_QWORD *)(v403 + 80) = 0;
                                                                                                                                                          *(_OWORD *)(v403 + 88) = xmmword_23B1CA770;
                                                                                                                                                          *(_BYTE *)(v403 + 104) = 0;
                                                                                                                                                          *(_QWORD *)(v403 + 112) = 0;
                                                                                                                                                          *(_QWORD *)(v403 + 120) = v402;
                                                                                                                                                          *(_QWORD *)(v403 + 128) = 0;
                                                                                                                                                          *(_QWORD *)(v403 + 136) = v397;
                                                                                                                                                          sub_23B1C5BD0();
                                                                                                                                                          sub_23B1C5B94();
                                                                                                                                                          v405 = v404;
                                                                                                                                                          result = v400(v8, v5);
                                                                                                                                                          v406 = v405 * 1000000000.0;
                                                                                                                                                          if ((~COERCE__INT64(v405 * 1000000000.0) & 0x7FF0000000000000) != 0)
                                                                                                                                                          {
                                                                                                                                                            if (v406 > -9.22337204e18)
                                                                                                                                                            {
                                                                                                                                                              if (v406 < 9.22337204e18)
                                                                                                                                                              {
                                                                                                                                                                sub_23ADF3AAC(v403, (uint64_t)v406);
                                                                                                                                                                swift_release();
                                                                                                                                                                return swift_release();
                                                                                                                                                              }
LABEL_546:
                                                                                                                                                              __break(1u);
                                                                                                                                                              return result;
                                                                                                                                                            }
LABEL_545:
                                                                                                                                                            __break(1u);
                                                                                                                                                            goto LABEL_546;
                                                                                                                                                          }
LABEL_544:
                                                                                                                                                          __break(1u);
                                                                                                                                                          goto LABEL_545;
                                                                                                                                                        }
LABEL_543:
                                                                                                                                                        __break(1u);
                                                                                                                                                        goto LABEL_544;
                                                                                                                                                      }
LABEL_542:
                                                                                                                                                      __break(1u);
                                                                                                                                                      goto LABEL_543;
                                                                                                                                                    }
LABEL_541:
                                                                                                                                                    __break(1u);
                                                                                                                                                    goto LABEL_542;
                                                                                                                                                  }
LABEL_540:
                                                                                                                                                  __break(1u);
                                                                                                                                                  goto LABEL_541;
                                                                                                                                                }
LABEL_539:
                                                                                                                                                __break(1u);
                                                                                                                                                goto LABEL_540;
                                                                                                                                              }
LABEL_538:
                                                                                                                                              __break(1u);
                                                                                                                                              goto LABEL_539;
                                                                                                                                            }
LABEL_537:
                                                                                                                                            __break(1u);
                                                                                                                                            goto LABEL_538;
                                                                                                                                          }
LABEL_536:
                                                                                                                                          __break(1u);
                                                                                                                                          goto LABEL_537;
                                                                                                                                        }
LABEL_535:
                                                                                                                                        __break(1u);
                                                                                                                                        goto LABEL_536;
                                                                                                                                      }
LABEL_534:
                                                                                                                                      __break(1u);
                                                                                                                                      goto LABEL_535;
                                                                                                                                    }
LABEL_533:
                                                                                                                                    __break(1u);
                                                                                                                                    goto LABEL_534;
                                                                                                                                  }
LABEL_532:
                                                                                                                                  __break(1u);
                                                                                                                                  goto LABEL_533;
                                                                                                                                }
LABEL_531:
                                                                                                                                __break(1u);
                                                                                                                                goto LABEL_532;
                                                                                                                              }
LABEL_530:
                                                                                                                              __break(1u);
                                                                                                                              goto LABEL_531;
                                                                                                                            }
LABEL_529:
                                                                                                                            __break(1u);
                                                                                                                            goto LABEL_530;
                                                                                                                          }
LABEL_528:
                                                                                                                          __break(1u);
                                                                                                                          goto LABEL_529;
                                                                                                                        }
LABEL_527:
                                                                                                                        __break(1u);
                                                                                                                        goto LABEL_528;
                                                                                                                      }
LABEL_526:
                                                                                                                      __break(1u);
                                                                                                                      goto LABEL_527;
                                                                                                                    }
LABEL_525:
                                                                                                                    __break(1u);
                                                                                                                    goto LABEL_526;
                                                                                                                  }
LABEL_524:
                                                                                                                  __break(1u);
                                                                                                                  goto LABEL_525;
                                                                                                                }
LABEL_523:
                                                                                                                __break(1u);
                                                                                                                goto LABEL_524;
                                                                                                              }
LABEL_522:
                                                                                                              __break(1u);
                                                                                                              goto LABEL_523;
                                                                                                            }
LABEL_521:
                                                                                                            __break(1u);
                                                                                                            goto LABEL_522;
                                                                                                          }
LABEL_520:
                                                                                                          __break(1u);
                                                                                                          goto LABEL_521;
                                                                                                        }
LABEL_519:
                                                                                                        __break(1u);
                                                                                                        goto LABEL_520;
                                                                                                      }
LABEL_518:
                                                                                                      __break(1u);
                                                                                                      goto LABEL_519;
                                                                                                    }
LABEL_517:
                                                                                                    __break(1u);
                                                                                                    goto LABEL_518;
                                                                                                  }
LABEL_516:
                                                                                                  __break(1u);
                                                                                                  goto LABEL_517;
                                                                                                }
LABEL_515:
                                                                                                __break(1u);
                                                                                                goto LABEL_516;
                                                                                              }
LABEL_514:
                                                                                              __break(1u);
                                                                                              goto LABEL_515;
                                                                                            }
LABEL_513:
                                                                                            __break(1u);
                                                                                            goto LABEL_514;
                                                                                          }
LABEL_512:
                                                                                          __break(1u);
                                                                                          goto LABEL_513;
                                                                                        }
LABEL_511:
                                                                                        __break(1u);
                                                                                        goto LABEL_512;
                                                                                      }
LABEL_510:
                                                                                      __break(1u);
                                                                                      goto LABEL_511;
                                                                                    }
LABEL_509:
                                                                                    __break(1u);
                                                                                    goto LABEL_510;
                                                                                  }
LABEL_508:
                                                                                  __break(1u);
                                                                                  goto LABEL_509;
                                                                                }
LABEL_507:
                                                                                __break(1u);
                                                                                goto LABEL_508;
                                                                              }
LABEL_506:
                                                                              __break(1u);
                                                                              goto LABEL_507;
                                                                            }
LABEL_505:
                                                                            __break(1u);
                                                                            goto LABEL_506;
                                                                          }
                                                                          goto LABEL_377;
                                                                        }
LABEL_365:
                                                                        __break(1u);
                                                                        goto LABEL_366;
                                                                      }
LABEL_364:
                                                                      __break(1u);
                                                                      goto LABEL_365;
                                                                    }
LABEL_363:
                                                                    __break(1u);
                                                                    goto LABEL_364;
                                                                  }
LABEL_362:
                                                                  __break(1u);
                                                                  goto LABEL_363;
                                                                }
LABEL_361:
                                                                __break(1u);
                                                                goto LABEL_362;
                                                              }
LABEL_360:
                                                              __break(1u);
                                                              goto LABEL_361;
                                                            }
LABEL_359:
                                                            __break(1u);
                                                            goto LABEL_360;
                                                          }
LABEL_358:
                                                          __break(1u);
                                                          goto LABEL_359;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        __break(1u);
                                                      }
                                                      __break(1u);
                                                      goto LABEL_358;
                                                    }
                                                    goto LABEL_346;
                                                  }
LABEL_345:
                                                  __break(1u);
LABEL_346:
                                                  __break(1u);
LABEL_347:
                                                  if ((unint64_t)a1 <= 0x2F1A838B1ALL)
                                                    goto LABEL_348;
                                                  goto LABEL_368;
                                                }
LABEL_344:
                                                __break(1u);
                                                goto LABEL_345;
                                              }
LABEL_343:
                                              __break(1u);
                                              goto LABEL_344;
                                            }
                                          }
                                          else
                                          {
                                            __break(1u);
                                          }
                                          __break(1u);
                                          goto LABEL_343;
                                        }
                                        goto LABEL_330;
                                      }
LABEL_329:
                                      __break(1u);
LABEL_330:
                                      __break(1u);
LABEL_331:
                                      if ((unint64_t)a1 <= 0x2F1A73ACDFLL)
                                        goto LABEL_332;
                                      goto LABEL_347;
                                    }
LABEL_328:
                                    __break(1u);
                                    goto LABEL_329;
                                  }
LABEL_327:
                                  __break(1u);
                                  goto LABEL_328;
                                }
                              }
                              else
                              {
                                __break(1u);
                              }
                              __break(1u);
                              goto LABEL_327;
                            }
                            goto LABEL_320;
                          }
LABEL_319:
                          __break(1u);
LABEL_320:
                          __break(1u);
LABEL_321:
                          if ((unint64_t)a1 <= 0x2F1A70ED7CLL)
                            goto LABEL_322;
                          goto LABEL_331;
                        }
LABEL_318:
                        __break(1u);
                        goto LABEL_319;
                      }
LABEL_317:
                      __break(1u);
                      goto LABEL_318;
                    }
                  }
                  else
                  {
                    __break(1u);
                  }
                  __break(1u);
                  goto LABEL_317;
                }
                goto LABEL_311;
              }
LABEL_310:
              __break(1u);
LABEL_311:
              __break(1u);
              goto LABEL_312;
            }
LABEL_309:
            __break(1u);
            goto LABEL_310;
          }
LABEL_308:
          __break(1u);
          goto LABEL_309;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_308;
    }
    goto LABEL_296;
  }
LABEL_295:
  __break(1u);
LABEL_296:
  __break(1u);
LABEL_297:
  if ((unint64_t)a1 <= 0x2F1A705238)
    goto LABEL_298;
LABEL_312:
  if ((unint64_t)a1 > 0x2F1A709DF7)
    goto LABEL_321;
LABEL_313:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6A00);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  sub_23AE4E87C();
  if (v2)
    return swift_release();
  swift_release();
LABEL_322:
  result = sub_23AF95E4C(0x6F74736552443244, 0xEA00000000006572);
  if (!v2)
  {
    if ((result & 1) != 0)
    {
      sub_23AB23A94();
      swift_allocError();
      *(_QWORD *)v307 = 2;
      *(_OWORD *)(v307 + 8) = 0u;
      *(_OWORD *)(v307 + 24) = 0u;
      *(_QWORD *)(v307 + 40) = 0;
      *(_BYTE *)(v307 + 48) = 8;
      return swift_willThrow();
    }
LABEL_332:
    v308 = *(_QWORD **)(*(_QWORD *)(v3 + 32) + 16);
    if (*(_DWORD *)(v308[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext + 8) == 1)
    {
      (*(void (**)(id *__return_ptr))(*v308 + 96))(&aBlock);
      v309 = aBlock;
      v310 = v412;
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v312 = v311;
      v313 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
      result = v313(v8, v5);
      v314 = v312 * 1000000000.0;
      if ((~COERCE__INT64(v312 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_499:
        __break(1u);
        goto LABEL_500;
      }
      if (v314 <= -9.22337204e18)
      {
LABEL_500:
        __break(1u);
        goto LABEL_501;
      }
      if (v314 >= 9.22337204e18)
      {
LABEL_501:
        __break(1u);
        goto LABEL_502;
      }
      v315 = (uint64_t)v314;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FE8);
      v316 = swift_allocObject();
      *(_BYTE *)(v316 + 144) = v310;
      *(_QWORD *)(v316 + 24) = 0;
      *(_QWORD *)(v316 + 32) = 0;
      *(_QWORD *)(v316 + 16) = 0;
      *(_BYTE *)(v316 + 40) = 1;
      *(_OWORD *)(v316 + 48) = 0u;
      *(_OWORD *)(v316 + 64) = 0u;
      *(_QWORD *)(v316 + 80) = 0;
      *(_OWORD *)(v316 + 88) = xmmword_23B1CA770;
      *(_BYTE *)(v316 + 104) = 0;
      *(_QWORD *)(v316 + 112) = 0;
      *(_QWORD *)(v316 + 120) = v315;
      *(_QWORD *)(v316 + 128) = 0;
      *(_QWORD *)(v316 + 136) = v309;
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v318 = v317;
      result = v313(v8, v5);
      v319 = v318 * 1000000000.0;
      if ((~COERCE__INT64(v318 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_502:
        __break(1u);
        goto LABEL_503;
      }
      if (v319 <= -9.22337204e18)
      {
LABEL_503:
        __break(1u);
        goto LABEL_504;
      }
      if (v319 >= 9.22337204e18)
      {
LABEL_504:
        __break(1u);
        goto LABEL_505;
      }
      sub_23ADF3AAC(v316, (uint64_t)v319);
      if (v2)
        return swift_release();
      result = swift_release();
    }
LABEL_348:
    (*(void (**)(id *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 32) + 16) + 96))(&aBlock, result);
    v320 = aBlock;
    v321 = v412;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v323 = v322;
    v324 = *(uint64_t (**)(char *, uint64_t))(v410 + 8);
    result = v324(v8, v5);
    v325 = v323 * 1000000000.0;
    if ((~COERCE__INT64(v323 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v325 > -9.22337204e18)
      {
        if (v325 < 9.22337204e18)
        {
          v326 = (uint64_t)v325;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FA0);
          v327 = swift_allocObject();
          *(_BYTE *)(v327 + 144) = v321;
          *(_QWORD *)(v327 + 24) = 0;
          *(_QWORD *)(v327 + 32) = 0;
          *(_QWORD *)(v327 + 16) = 0;
          *(_BYTE *)(v327 + 40) = 1;
          *(_OWORD *)(v327 + 48) = 0u;
          *(_OWORD *)(v327 + 64) = 0u;
          *(_QWORD *)(v327 + 80) = 0;
          *(_OWORD *)(v327 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v327 + 104) = 0;
          *(_QWORD *)(v327 + 112) = 0;
          *(_QWORD *)(v327 + 120) = v326;
          *(_QWORD *)(v327 + 128) = 0;
          *(_QWORD *)(v327 + 136) = v320;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v329 = v328;
          result = v324(v8, v5);
          v330 = v329 * 1000000000.0;
          if ((~COERCE__INT64(v329 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v330 > -9.22337204e18)
            {
              if (v330 < 9.22337204e18)
              {
                sub_23ADF3AAC(v327, (uint64_t)v330);
                if (v2)
                  return swift_release();
                swift_release();
                goto LABEL_369;
              }
              goto LABEL_498;
            }
LABEL_497:
            __break(1u);
LABEL_498:
            __break(1u);
            goto LABEL_499;
          }
LABEL_496:
          __break(1u);
          goto LABEL_497;
        }
LABEL_495:
        __break(1u);
        goto LABEL_496;
      }
LABEL_494:
      __break(1u);
      goto LABEL_495;
    }
LABEL_493:
    __break(1u);
    goto LABEL_494;
  }
  return result;
}

uint64_t sub_23AE4E87C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  uint64_t v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  char v11;
  id aBlock;
  uint64_t v14;
  id (*v15)(uint64_t, void *);
  void *v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + qword_2542EDF00);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_23AEB3F60;
  *(_QWORD *)(v2 + 24) = v0;
  v17 = sub_23AA956C8;
  v18 = v2;
  aBlock = (id)MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_717;
  v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  v5 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_23B1C587C();

    swift_willThrow();
    return swift_release();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_23AEB3F98;
  *(_QWORD *)(v7 + 24) = v0;
  v17 = sub_23AA956C8;
  v18 = v7;
  aBlock = (id)MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_724;
  v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  v10 = aBlock;
  v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v11 & 1) != 0)
LABEL_10:
    __break(1u);
  if ((v9 & 1) != 0)
    return swift_release_n();
  sub_23B1C587C();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_23AE4EB28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  uint64_t v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  char v11;
  id aBlock;
  uint64_t v14;
  id (*v15)(uint64_t, void *);
  void *v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + qword_2542EDF00);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_23AEB3F60;
  *(_QWORD *)(v2 + 24) = v0;
  v17 = sub_23AA956C8;
  v18 = v2;
  aBlock = (id)MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_731;
  v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  v5 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_23B1C587C();

    swift_willThrow();
    return swift_release();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_23AEB3F98;
  *(_QWORD *)(v7 + 24) = v0;
  v17 = sub_23AA956C8;
  v18 = v7;
  aBlock = (id)MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_738;
  v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  v10 = aBlock;
  v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v11 & 1) != 0)
LABEL_10:
    __break(1u);
  if ((v9 & 1) != 0)
    return swift_release_n();
  sub_23B1C587C();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_23AE4EDD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  unint64_t *v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + qword_2542E6C58) == 1)
  {
    sub_23AA8EFC8(a1, (uint64_t)v7, (uint64_t *)&unk_2542DDFB0);
    v8 = (unint64_t *)(v1 + qword_2542EDF98);
    swift_beginAccess();
    v9 = *v8;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v8 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_23AF99324(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
      *v8 = v9;
    }
    v12 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 24);
    if (v12 >= v11 >> 1)
    {
      v9 = sub_23AF99324(v11 > 1, v12 + 1, 1, v9);
      *v8 = v9;
    }
    *(_QWORD *)(v9 + 16) = v12 + 1;
    sub_23AA724E8((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, (uint64_t *)&unk_2542DDFB0);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_23AE4EF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *);
  _QWORD v27[2];
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];

  v4 = sub_23B1C5E4C();
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v27 - v11;
  sub_23AE5BAB4();
  swift_beginAccess();
  v13 = sub_23B182DA8((uint64_t)v12);
  sub_23AA8A05C((uint64_t)v12, &qword_2542DDDB0);
  result = swift_endAccess();
  if (v13)
  {
    v30 = v4;
    v15 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA8EFC8(a1, (uint64_t)v10, &qword_2542DDDB0);
    v16 = sub_23B1C5E40();
    v17 = sub_23B1C6A94();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v33[0] = v29;
      *(_DWORD *)v18 = 136315138;
      v27[1] = v18 + 4;
      v28 = v18;
      sub_23AA8EFC8((uint64_t)v10, (uint64_t)v12, &qword_2542DDDB0);
      sub_23AA8A05C((uint64_t)v10, &qword_2542DDDB0);
      v19 = sub_23AE5B8EC();
      v21 = v20;
      sub_23AA8A05C((uint64_t)v12, &qword_2542DDDB0);
      v32 = sub_23AABEC68(v19, v21, v33);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v22 = v28;
      _os_log_impl(&dword_23AA66000, v16, v17, "unblocking waiters on %s", v28, 0xCu);
      v23 = v29;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v23, -1, -1);
      MEMORY[0x23B8614BC](v22, -1, -1);
    }
    else
    {
      sub_23AA8A05C((uint64_t)v10, &qword_2542DDDB0);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v30);
    v24 = *(_QWORD *)(v13 + 16);
    if (v24)
    {
      v25 = v13 + 40;
      do
      {
        v26 = *(void (**)(uint64_t *))(v25 - 8);
        v33[0] = a2;
        swift_retain();
        v26(v33);
        swift_release();
        v25 += 16;
        --v24;
      }
      while (v24);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_23AE4F234()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  if (*(_QWORD *)(v0 + 216))
  {
    v1 = *(_QWORD **)(v0 + 216);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E63F8);
    swift_allocObject();
    v3 = (_QWORD *)swift_retain();
    v1 = sub_23AEA88D0(v3);
    swift_release();
    *(_QWORD *)(v2 + 216) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t (*sub_23AE4F2C0())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_23AE4F308(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD **v5;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  id v23;
  uint64_t v24;
  os_log_type_t v25;
  NSObject *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t *v35;
  _QWORD **v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = v3;
  v5 = v2;
  v44 = a2;
  v7 = sub_23B1C5E4C();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  result = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *(_QWORD *)(a1 + 16);
  if (v43)
  {
    v42 = v10;
    v35 = &v47;
    swift_bridgeObjectRetain();
    v11 = 0;
    *(_QWORD *)&v12 = 136446210;
    v34 = v12;
    v33[1] = MEMORY[0x24BEE4AD8] + 8;
    v36 = v2;
    v37 = a1;
    while (1)
    {
      v14 = *(_QWORD *)(a1 + 8 * v11 + 32);
      v15 = swift_retain();
      v16 = MEMORY[0x23B8601A8](v15);
      v13 = (void *)v16;
      if (v14 < 0)
      {
        v19 = (void (*)(uint64_t))(*v5)[22];
        v20 = swift_retain();
        v19(v20);
        sub_23ADF3AAC(v14 & 0x7FFFFFFFFFFFFFFFLL, v44);
        if (v4)
        {
          swift_release();
          goto LABEL_23;
        }
        swift_release();
        swift_release();
      }
      else
      {
        v17 = *(unsigned __int8 *)(v14 + 104);
        v45 = (void *)v16;
        v18 = !v17 || v17 == 4 && *(_OWORD *)(v14 + 88) == 0;
        v21 = *(uint64_t (**)(uint64_t, uint64_t))(*v5[3] + 128);
        swift_retain();
        v22 = v21(v14, v44);
        if (v4)
        {
          v13 = v45;
LABEL_23:
          swift_release();
          objc_autoreleasePoolPop(v13);
          swift_bridgeObjectRelease();
          return swift_release();
        }
        if (v22 < 0)
        {
          swift_release();
          result = sub_23B1C704C();
          __break(1u);
          return result;
        }
        swift_release();
        if (v18)
        {
          v23 = (id)fpfs_current_or_default_log();
          v24 = sub_23B1C5E58();
          v25 = (*(unsigned __int8 (**)(uint64_t))(*(_QWORD *)v14 + 392))(v24);
          swift_retain();
          v26 = sub_23B1C5E40();
          if (os_log_type_enabled(v26, v25))
          {
            v27 = (uint8_t *)swift_slowAlloc();
            v28 = swift_slowAlloc();
            v48 = v28;
            *(_DWORD *)v27 = v34;
            v38 = v27 + 4;
            v39 = v28;
            sub_23AE17C44();
            v46 = sub_23AABEC68(v29, v30, &v48);
            a1 = v37;
            sub_23B1C6CBC();
            swift_release();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23AA66000, v26, v25, " ✍️  persist job: %{public}s", v27, 0xCu);
            v31 = v39;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v31, -1, -1);
            v32 = v27;
            v5 = v36;
            MEMORY[0x23B8614BC](v32, -1, -1);

          }
          else
          {

            swift_release();
          }
          (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
        }
        swift_release();
        v13 = v45;
      }
      ++v11;
      objc_autoreleasePoolPop(v13);
      swift_release();
      if (v43 == v11)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

BOOL sub_23AE4F6B4()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 32) & 1) == 0;
}

uint64_t sub_23AE4F6C4()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23AE4F780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[12];
  unint64_t v36;

  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ItemMetadata();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  v14 = swift_bridgeObjectRetain();
  sub_23AAA5D78(v14, (void (*)(uint64_t *__return_ptr, __int128 *))sub_23AAA6724, (uint64_t)v13);
  if (v2)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AE79740(0x21u, a1, v35);
  v16 = v35[0];
  sub_23AE79740(0x22u, a1, v35);
  v36 = v16 >> 64;
  v34 = v16;
  v17 = v35[0];
  v32 = sub_23AE7956C(28, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
  v33 = v17;
  v31 = sub_23AE7956C(29, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
  v18 = v34;
  sub_23AAAE668(v34, v36);
  v19 = v33;
  sub_23AAAE668(v33, *((unint64_t *)&v33 + 1));
  v20 = sub_23AA9B6DC(30, a1, (uint64_t (*)(uint64_t))sub_23AAAFD94, (void (*)(uint64_t))sub_23AF13684);
  v29 = v21;
  sub_23AA907B0((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AAF8E48((uint64_t)v35);
  v22 = v5[14];
  v30 = &v7[v5[13]];
  v23 = &v7[v22];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *((_QWORD *)v23 + 2) = 0;
  v23[24] = 1;
  v24 = &v7[v5[15]];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v25 = v31;
  *(_QWORD *)v7 = v32;
  *((_QWORD *)v7 + 1) = v25;
  v26 = v36;
  *((_QWORD *)v7 + 2) = v18;
  *((_QWORD *)v7 + 3) = v26;
  *((_QWORD *)v7 + 4) = 0;
  *(_OWORD *)(v7 + 40) = __PAIR128__(*((unint64_t *)&v33 + 1), v19);
  *((_QWORD *)v7 + 7) = 0;
  *((_QWORD *)v7 + 8) = 0;
  *((_QWORD *)v7 + 9) = 0;
  v27 = v29;
  *((_QWORD *)v7 + 10) = v20;
  *((_QWORD *)v7 + 11) = v27;
  sub_23AA907B0((uint64_t)v11, (uint64_t)&v7[v5[12]], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA724E8((uint64_t)v35, (uint64_t)v30, &qword_2542E5050);
  sub_23AA937BC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *(_QWORD *)&v7[v5[16]] = 0;
  *(_OWORD *)&v7[v5[17]] = xmmword_23B1D2320;
  sub_23AA724E8((uint64_t)v7, a2, (uint64_t *)&unk_2542E4760);
  sub_23AAAE53C(v19, *((unint64_t *)&v33 + 1));
  sub_23AAAE53C(v18, v36);
  return sub_23AA937BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23AE4FBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  char *v20;
  int *v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[31];
  _QWORD v55[31];
  _BYTE v56[256];

  v52 = a2;
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v53 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VFSItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v51 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v48 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v48 - v16;
  sub_23AA8EFC8(a1, (uint64_t)v8, &qword_2542E72C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23AA8A05C(a1, &qword_2542E72C0);
    sub_23AA8A05C((uint64_t)v8, &qword_2542E72C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v53 + 56))(v52, 1, 1, v3);
  }
  v48 = (int *)v9;
  v49 = a1;
  sub_23AA94050((uint64_t)v8, (uint64_t)v17, type metadata accessor for VFSItem);
  v50 = v17;
  sub_23AA907B0((uint64_t)v17, (uint64_t)v15, type metadata accessor for VFSItem);
  v19 = (uint64_t)&v5[v3[13]];
  sub_23AAF8E48((uint64_t)v56);
  sub_23AA724E8((uint64_t)v56, v19, &qword_2542E5050);
  v20 = &v5[v3[14]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  v20[24] = 1;
  v21 = v3;
  v22 = &v5[v3[15]];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 1;
  v23 = *(_QWORD *)v15;
  v24 = v15[8];
  *(_QWORD *)v5 = *(_QWORD *)v15;
  v5[8] = v24;
  v25 = v51;
  sub_23AA907B0((uint64_t)v15, v51, type metadata accessor for VFSItem);
  v27 = v24 == 2;
  v26 = v19;
  v27 = v27 && v23 == 1;
  if (v27)
  {
    sub_23AA937BC(v25, type metadata accessor for VFSItem);
    v31 = v52;
    v32 = v53;
    v33 = v48;
    v34 = v49;
LABEL_13:
    v37 = v15[8];
    *((_QWORD *)v5 + 2) = *(_QWORD *)v15;
    v5[24] = v37;
    v35 = *((_QWORD *)v15 + 2);
    v36 = v15[24];
    goto LABEL_14;
  }
  v28 = *(_QWORD *)v25;
  v29 = *(unsigned __int8 *)(v25 + 8);
  sub_23AA937BC(v25, type metadata accessor for VFSItem);
  v30 = v29 == 2 && v28 == 0;
  v31 = v52;
  v32 = v53;
  v33 = v48;
  v34 = v49;
  if (v30)
    goto LABEL_13;
  v35 = *((_QWORD *)v15 + 2);
  v36 = v15[24];
  *((_QWORD *)v5 + 2) = v35;
  v5[24] = v36;
LABEL_14:
  v38 = &v15[v33[9]];
  v39 = *(_QWORD *)v38;
  v40 = *((_DWORD *)v38 + 2);
  v41 = *((_QWORD *)v38 + 2);
  LOBYTE(v38) = v38[24];
  v42 = *((_QWORD *)v15 + 4);
  v43 = *((_QWORD *)v15 + 5);
  *((_QWORD *)v5 + 4) = v39;
  *((_DWORD *)v5 + 10) = v40;
  *((_QWORD *)v5 + 6) = v41;
  v5[56] = (char)v38;
  *((_QWORD *)v5 + 8) = 0;
  *((_QWORD *)v5 + 9) = v35;
  v5[80] = v36;
  *((_QWORD *)v5 + 11) = v42;
  *((_QWORD *)v5 + 12) = v43;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0;
  *((_QWORD *)v5 + 15) = 0;
  *((_QWORD *)v5 + 16) = v42;
  *((_QWORD *)v5 + 17) = v43;
  sub_23AA907B0((uint64_t)&v15[v33[7]], (uint64_t)&v5[v21[12]], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA724E8((uint64_t)&v15[v33[8]], (uint64_t)v54, &qword_2542E5050);
  sub_23AA724E8(v26, (uint64_t)v55, &qword_2542E5050);
  swift_bridgeObjectRetain_n();
  sub_23AAB7E4C(v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
  sub_23AAB7E4C(v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  sub_23AA724E8((uint64_t)v54, v26, &qword_2542E5050);
  *(_QWORD *)&v5[v21[16]] = 0;
  v44 = sub_23AC3C0B0();
  v46 = v45;
  sub_23AA937BC((uint64_t)v15, type metadata accessor for VFSItem);
  v47 = (uint64_t *)&v5[v21[17]];
  *v47 = v44;
  v47[1] = v46;
  sub_23AA724E8((uint64_t)v5, v31, (uint64_t *)&unk_2542E6B00);
  sub_23AA8A05C(v34, &qword_2542E72C0);
  sub_23AA937BC((uint64_t)v50, type metadata accessor for VFSItem);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v32 + 56))(v31, 0, 1, v21);
}

uint64_t sub_23AE4FFB8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  _BOOL4 v42;
  _BOOL4 v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  _QWORD *v90;
  _QWORD *v91;
  char v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  char v97;
  int v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  _BYTE v125[248];
  _QWORD v126[31];
  _BYTE v127[248];
  _QWORD v128[31];
  _BYTE v129[248];
  _QWORD v130[31];
  _QWORD v131[31];
  _QWORD v132[31];
  _QWORD v133[31];
  _BYTE v134[192];
  _QWORD *v135;
  _QWORD *v136;
  _BYTE v137[192];
  _QWORD *v138;
  _QWORD *v139;
  _BYTE v140[184];
  _QWORD *v141;
  _BYTE v142[248];
  _BYTE v143[248];
  _QWORD v144[31];
  _QWORD v145[31];
  _QWORD v146[31];
  _QWORD v147[31];
  _QWORD v148[31];
  _QWORD v149[31];
  _BYTE v150[112];
  uint64_t v151;
  uint64_t v152;
  _BYTE v153[248];
  _BYTE v154[248];
  _BYTE v155[248];
  _BYTE v156[248];
  _BYTE v157[80];
  uint64_t v158;
  uint64_t v159;
  _BYTE v160[248];
  _BYTE v161[248];
  _QWORD v162[31];
  _QWORD v163[31];
  _BYTE v164[40];
  uint64_t v165;
  uint64_t v166;
  _BYTE v167[248];
  _BYTE v168[248];
  _BYTE v169[248];
  _BYTE v170[248];
  _BYTE v171[32];
  unsigned __int8 v172;
  _QWORD v173[31];
  _QWORD v174[31];
  _BYTE v175[16];
  uint64_t v176;
  _BYTE v177[248];
  _BYTE v178[248];
  _BYTE v179[248];
  _BYTE v180[248];
  _BYTE v181[248];
  _QWORD v182[31];
  _BYTE v183[248];
  _QWORD v184[31];
  uint64_t v185;

  v2 = v1;
  v3 = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v121 - v8);
  v11 = v2[10];
  v12 = v2[11];
  v123 = (id)v2[1];
  v10 = v123;
  v124 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  sub_23AA907B0((uint64_t)v2 + *(int *)(v13 + 48), (uint64_t)v9 + *(int *)(v4 + 40), (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *v9 = v10;
  v9[1] = v11;
  v9[2] = v12;
  v14 = (void *)v3[1];
  v16 = v3[10];
  v15 = v3[11];
  sub_23AA907B0((uint64_t)v3 + *(int *)(v13 + 48), (uint64_t)v7 + *(int *)(v4 + 40), (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *v7 = v14;
  v7[1] = v16;
  v7[2] = v15;
  v122 = v13;
  v17 = *(_QWORD *)((char *)v3 + *(int *)(v13 + 64));
  v18 = v123;
  swift_bridgeObjectRetain();
  v19 = v14;
  swift_bridgeObjectRetain();
  v20 = sub_23AE1D500((uint64_t)v7, v17, 0);
  sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E1E00);
  sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E1E00);
  v185 = v20;
  v21 = v2[2];
  v22 = v2[3];
  v23 = v3[2];
  v24 = v3[3];
  sub_23AAAE668(v21, v22);
  sub_23AAAE668(v23, v24);
  sub_23AAAE6AC(v21, v22);
  LOBYTE(v14) = v25;
  sub_23AAAE53C(v23, v24);
  sub_23AAAE53C(v21, v22);
  if ((v14 & 1) == 0)
  {
    v20 |= 8uLL;
    v185 = v20;
  }
  v26 = v2[5];
  v27 = v2[6];
  v28 = v3[5];
  v29 = v3[6];
  sub_23AAAE668(v26, v27);
  sub_23AAAE668(v28, v29);
  sub_23AAAE6AC(v26, v27);
  v31 = v30;
  sub_23AAAE53C(v28, v29);
  sub_23AAAE53C(v26, v27);
  if ((v31 & 1) == 0)
  {
    v20 |= 0x20000000000uLL;
    v185 = v20;
  }
  v32 = v122;
  v33 = (uint64_t)v2 + *(int *)(v122 + 52);
  sub_23AA724E8(v33, (uint64_t)v183, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v183, (uint64_t)v184, &qword_2542E5050);
  v34 = sub_23AAFCF2C((uint64_t)v184);
  v35 = v184[0];
  v36 = (uint64_t)v3 + *(int *)(v32 + 52);
  sub_23AA724E8(v36, (uint64_t)v181, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v181, (uint64_t)v182, &qword_2542E5050);
  v37 = sub_23AAFCF2C((uint64_t)v182);
  if (v34 == 1)
  {
    if (v37 == 1)
      goto LABEL_11;
LABEL_10:
    v20 |= 0x40000uLL;
    v185 = v20;
    goto LABEL_11;
  }
  if (v37 == 1 || v35 != v182[0])
    goto LABEL_10;
LABEL_11:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v180, &qword_2542E5050);
  v38 = sub_23AAFCF2C((uint64_t)v180);
  v39 = v180[8];
  sub_23AA724E8((uint64_t)v183, (uint64_t)v179, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v179) == 1)
  {
    if (v38 == 1)
      goto LABEL_17;
LABEL_16:
    v20 |= 0x80000uLL;
    v185 = v20;
    goto LABEL_17;
  }
  if (v38 == 1 || ((v39 ^ v179[8]) & 1) != 0)
    goto LABEL_16;
LABEL_17:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v178, &qword_2542E5050);
  v40 = sub_23AAFCF2C((uint64_t)v178);
  v41 = v178[9];
  sub_23AA724E8((uint64_t)v183, (uint64_t)v177, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v177) == 1)
  {
    if (v40 == 1)
    {
      v42 = 0;
    }
    else
    {
      v42 = 0;
      v20 |= 0x100000uLL;
      v185 = v20;
    }
  }
  else
  {
    if (v40 == 1 || v41 != v177[9])
    {
      v20 |= 0x100000uLL;
      v185 = v20;
    }
    sub_23AA724E8((uint64_t)v183, (uint64_t)v175, &qword_2542E5050);
    v42 = v176 != 0;
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v175, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v175) != 1 && v176)
  {
    if (v42)
      goto LABEL_29;
    goto LABEL_28;
  }
  if (v42)
  {
LABEL_28:
    v20 |= 0x200000uLL;
    v185 = v20;
  }
LABEL_29:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v174, &qword_2542E5050);
  v44 = sub_23AAFCF2C((uint64_t)v174) != 1 && v174[3] != 0;
  sub_23AA724E8((uint64_t)v181, (uint64_t)v173, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v173) == 1 || !v173[3])
  {
    if (!v44)
      goto LABEL_43;
  }
  else if (v44)
  {
    sub_23AA724E8((uint64_t)v181, (uint64_t)v171, &qword_2542E5050);
    goto LABEL_45;
  }
  v20 |= 0x400000uLL;
  v185 = v20;
LABEL_43:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v171, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v171) == 1)
  {
    v45 = 2;
    goto LABEL_46;
  }
LABEL_45:
  v45 = v172;
LABEL_46:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v171, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v171) == 1)
  {
    if (v45 == 2)
      goto LABEL_52;
LABEL_51:
    v20 |= 0x1000000uLL;
    v185 = v20;
    goto LABEL_52;
  }
  if (v45 == 2 || (((v45 == 0) ^ v172) & 1) == 0)
    goto LABEL_51;
LABEL_52:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v170, &qword_2542E5050);
  v46 = sub_23AAFCF2C((uint64_t)v170);
  v47 = v170[33];
  sub_23AA724E8((uint64_t)v183, (uint64_t)v169, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v169) == 1)
  {
    if (v46 == 1)
      goto LABEL_58;
LABEL_57:
    v20 |= 0x2000000uLL;
    v185 = v20;
    goto LABEL_58;
  }
  if (v46 == 1 || ((v47 ^ v169[33]) & 1) != 0)
    goto LABEL_57;
LABEL_58:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v168, &qword_2542E5050);
  v48 = sub_23AAFCF2C((uint64_t)v168);
  v49 = v168[34];
  sub_23AA724E8((uint64_t)v183, (uint64_t)v167, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v167) == 1)
  {
    v50 = 0;
    if (v48 == 1)
    {
      v51 = 0;
    }
    else
    {
      v51 = 0;
      v20 |= 0x4000000uLL;
      v185 = v20;
    }
  }
  else
  {
    if (v48 == 1 || v49 != v167[34])
    {
      v20 |= 0x4000000uLL;
      v185 = v20;
    }
    sub_23AA724E8((uint64_t)v183, (uint64_t)v164, &qword_2542E5050);
    v50 = v165;
    v51 = v166;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v164, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v164) == 1)
  {
    if (!v51)
      goto LABEL_78;
    goto LABEL_76;
  }
  v52 = v165;
  v53 = v166;
  swift_bridgeObjectRetain();
  if (!v51)
  {
    if (!v53)
      goto LABEL_78;
    goto LABEL_76;
  }
  if (!v53)
  {
LABEL_76:
    swift_bridgeObjectRelease();
LABEL_77:
    v20 |= 0x8000000uLL;
    v185 = v20;
    goto LABEL_78;
  }
  if (v50 == v52 && v51 == v53)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }
  v112 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v112 & 1) == 0)
    goto LABEL_77;
LABEL_78:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v163, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v163) == 1)
  {
    v54 = 0;
    v55 = 0;
  }
  else
  {
    v54 = v163[7];
    v55 = v163[8];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v162, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v162) == 1)
  {
    if (!v55)
      goto LABEL_93;
    goto LABEL_91;
  }
  v56 = v162[7];
  v57 = v162[8];
  swift_bridgeObjectRetain();
  if (!v55)
  {
    if (!v57)
      goto LABEL_93;
    goto LABEL_91;
  }
  if (!v57)
  {
LABEL_91:
    swift_bridgeObjectRelease();
LABEL_92:
    v20 |= 0x10000000uLL;
    v185 = v20;
    goto LABEL_93;
  }
  if (v54 == v56 && v55 == v57)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_93;
  }
  v113 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v113 & 1) == 0)
    goto LABEL_92;
LABEL_93:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v161, &qword_2542E5050);
  v58 = sub_23AAFCF2C((uint64_t)v161);
  v59 = v161[72];
  sub_23AA724E8((uint64_t)v183, (uint64_t)v160, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v160) == 1)
  {
    v60 = 0;
    if (v58 == 1)
    {
      v61 = 0;
    }
    else
    {
      v61 = 0;
      v20 |= 0x20000000uLL;
      v185 = v20;
    }
  }
  else
  {
    if (v58 == 1 || v59 != v160[72])
    {
      v20 |= 0x20000000uLL;
      v185 = v20;
    }
    sub_23AA724E8((uint64_t)v183, (uint64_t)v157, &qword_2542E5050);
    v60 = v158;
    v61 = v159;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v157, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v157) == 1)
  {
    if (!v61)
      goto LABEL_113;
    goto LABEL_111;
  }
  v62 = v158;
  v63 = v159;
  swift_bridgeObjectRetain();
  if (!v61)
  {
    if (!v63)
      goto LABEL_113;
    goto LABEL_111;
  }
  if (!v63)
  {
LABEL_111:
    swift_bridgeObjectRelease();
LABEL_112:
    v20 |= 0x40000000uLL;
    v185 = v20;
    goto LABEL_113;
  }
  if (v60 == v62 && v61 == v63)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_113;
  }
  v114 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v114 & 1) == 0)
    goto LABEL_112;
LABEL_113:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v156, &qword_2542E5050);
  v64 = sub_23AAFCF2C((uint64_t)v156);
  v65 = v156[104];
  sub_23AA724E8((uint64_t)v183, (uint64_t)v155, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v155) == 1)
  {
    if (v64 == 1)
      goto LABEL_119;
LABEL_118:
    v20 |= 0x80000000uLL;
    v185 = v20;
    goto LABEL_119;
  }
  if (v64 == 1 || ((v65 ^ v155[104]) & 1) != 0)
    goto LABEL_118;
LABEL_119:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v154, &qword_2542E5050);
  v66 = sub_23AAFCF2C((uint64_t)v154);
  v67 = v154[105];
  sub_23AA724E8((uint64_t)v183, (uint64_t)v153, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v153) == 1)
  {
    v68 = 0;
    if (v66 == 1)
    {
      v69 = 0;
    }
    else
    {
      v69 = 0;
      v20 |= 0x100000000uLL;
      v185 = v20;
    }
  }
  else
  {
    if (v66 == 1 || v67 != v153[105])
    {
      v20 |= 0x100000000uLL;
      v185 = v20;
    }
    sub_23AA724E8((uint64_t)v183, (uint64_t)v150, &qword_2542E5050);
    v68 = v151;
    v69 = v152;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v150, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v150) == 1)
  {
    if (!v69)
      goto LABEL_139;
    goto LABEL_137;
  }
  v70 = v151;
  v71 = v152;
  swift_bridgeObjectRetain();
  if (!v69)
  {
    if (!v71)
      goto LABEL_139;
    goto LABEL_137;
  }
  if (!v71)
  {
LABEL_137:
    swift_bridgeObjectRelease();
LABEL_138:
    v20 |= 0x200000000uLL;
    v185 = v20;
    goto LABEL_139;
  }
  if (v68 == v70 && v69 == v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_139;
  }
  v115 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v115 & 1) == 0)
    goto LABEL_138;
LABEL_139:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v149, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v149) == 1)
  {
    v72 = 0;
    v73 = 0;
  }
  else
  {
    v72 = v149[16];
    v73 = v149[17];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v148, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v148) == 1)
  {
    if (!v73)
      goto LABEL_154;
    goto LABEL_152;
  }
  v74 = v148[16];
  v75 = v148[17];
  swift_bridgeObjectRetain();
  if (!v73)
  {
    if (!v75)
      goto LABEL_154;
    goto LABEL_152;
  }
  if (!v75)
  {
LABEL_152:
    swift_bridgeObjectRelease();
LABEL_153:
    v20 |= 0x400000000uLL;
    v185 = v20;
    goto LABEL_154;
  }
  if (v72 == v74 && v73 == v75)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_154;
  }
  v116 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v116 & 1) == 0)
    goto LABEL_153;
LABEL_154:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v147, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v147) == 1)
  {
    v76 = 0;
    v77 = 0;
  }
  else
  {
    v76 = v147[18];
    v77 = v147[19];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v146, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v146) == 1)
  {
    if (!v77)
      goto LABEL_169;
    goto LABEL_167;
  }
  v78 = v146[18];
  v79 = v146[19];
  swift_bridgeObjectRetain();
  if (!v77)
  {
    if (!v79)
      goto LABEL_169;
    goto LABEL_167;
  }
  if (!v79)
  {
LABEL_167:
    swift_bridgeObjectRelease();
LABEL_168:
    v20 |= 0x800000000uLL;
    v185 = v20;
    goto LABEL_169;
  }
  if (v76 == v78 && v77 == v79)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_169;
  }
  v117 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v117 & 1) == 0)
    goto LABEL_168;
LABEL_169:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v145, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v145) == 1)
  {
    v80 = 0;
    v81 = 0;
  }
  else
  {
    v80 = v145[20];
    v81 = v145[21];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v144, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v144) == 1)
  {
    if (!v81)
      goto LABEL_184;
    goto LABEL_182;
  }
  v82 = v144[20];
  v83 = v144[21];
  swift_bridgeObjectRetain();
  if (!v81)
  {
    if (!v83)
      goto LABEL_184;
    goto LABEL_182;
  }
  if (!v83)
  {
LABEL_182:
    swift_bridgeObjectRelease();
LABEL_183:
    v20 |= 0x1000000000uLL;
    v185 = v20;
    goto LABEL_184;
  }
  swift_bridgeObjectRetain();
  v84 = sub_23AB55DFC(v80, v81);
  v86 = v85;
  if (v84 == sub_23AB55DFC(v82, v83) && v86 == v87)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_184;
  }
  v118 = sub_23B1C7388();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v118 & 1) == 0)
    goto LABEL_183;
LABEL_184:
  sub_23AA724E8((uint64_t)v181, (uint64_t)v143, &qword_2542E5050);
  v88 = sub_23AAFCF2C((uint64_t)v143);
  v89 = v143[176];
  sub_23AA724E8((uint64_t)v183, (uint64_t)v142, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v142) == 1)
  {
    if (v88 == 1)
    {
      v90 = 0;
    }
    else
    {
      v90 = 0;
      v20 |= 0x2000000000uLL;
      v185 = v20;
    }
  }
  else
  {
    if (v88 == 1 || v89 != v142[176])
    {
      v20 |= 0x2000000000uLL;
      v185 = v20;
    }
    sub_23AA724E8((uint64_t)v183, (uint64_t)v140, &qword_2542E5050);
    v90 = v141;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v140, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v140) == 1)
  {
    if (!v90)
      goto LABEL_203;
    goto LABEL_201;
  }
  v91 = v141;
  swift_bridgeObjectRetain();
  if (!v90)
  {
    if (!v91)
      goto LABEL_203;
    goto LABEL_201;
  }
  if (!v91)
  {
LABEL_201:
    swift_bridgeObjectRelease();
    goto LABEL_202;
  }
  v92 = sub_23AF1B25C(v90, v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v92 & 1) == 0)
  {
LABEL_202:
    v20 |= 0x4000000000uLL;
    v185 = v20;
  }
LABEL_203:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v137, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v137) == 1)
  {
    v93 = 0;
    v94 = 0;
  }
  else
  {
    v93 = v138;
    v94 = v139;
    sub_23AA8831C((uint64_t)v138);
  }
  sub_23AA724E8((uint64_t)v181, (uint64_t)v134, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v134) != 1)
  {
    v95 = v135;
    v96 = v136;
    sub_23AA8831C((uint64_t)v135);
    if (!v93)
    {
      if (!v95)
        goto LABEL_217;
      sub_23AAA5C9C((uint64_t)v95);
LABEL_216:
      v20 |= 0x8000000000uLL;
      v185 = v20;
      goto LABEL_217;
    }
    if (v95)
    {
      if ((sub_23AF1B25C(v93, v95) & 1) != 0)
      {
        v97 = sub_23AF1B25C(v94, v96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AAA5C9C((uint64_t)v93);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v97 & 1) != 0)
          goto LABEL_217;
        goto LABEL_216;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AAA5C9C((uint64_t)v93);
      swift_bridgeObjectRelease();
      goto LABEL_215;
    }
LABEL_214:
    swift_bridgeObjectRelease();
LABEL_215:
    swift_bridgeObjectRelease();
    goto LABEL_216;
  }
  if (v93)
    goto LABEL_214;
LABEL_217:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v133, &qword_2542E5050);
  v98 = sub_23AAFCF2C((uint64_t)v133);
  v99 = v133[26];
  sub_23AA724E8((uint64_t)v181, (uint64_t)v132, &qword_2542E5050);
  v100 = sub_23AAFCF2C((uint64_t)v132);
  if (v98 == 1)
  {
    if (v100 == 1)
      goto LABEL_223;
    goto LABEL_222;
  }
  if (v100 == 1 || v99 != v132[26])
LABEL_222:
    v185 = v20 | 0x2000000000000;
LABEL_223:
  sub_23AA724E8((uint64_t)v183, (uint64_t)v131, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v131) == 1 || !v131[28])
  {
    v102 = 0;
  }
  else
  {
    v101 = swift_bridgeObjectRetain();
    v102 = sub_23AF21B70(v101);
    swift_bridgeObjectRelease();
  }
  sub_23AA724E8(v36, (uint64_t)v129, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v129, (uint64_t)v130, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v130) != 1 && v130[28])
  {
    v103 = swift_bridgeObjectRetain();
    v104 = sub_23AF21B70(v103);
    swift_bridgeObjectRelease();
    if (!v102)
      goto LABEL_230;
LABEL_233:
    if (v104)
    {
      v105 = swift_bridgeObjectRetain();
      v106 = sub_23AF1BAE4(v105, v104);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if ((v106 & 1) != 0)
        goto LABEL_238;
      goto LABEL_237;
    }
LABEL_236:
    swift_bridgeObjectRelease();
LABEL_237:
    v185 |= 0x4000000000000uLL;
    goto LABEL_238;
  }
  v104 = 0;
  if (v102)
    goto LABEL_233;
LABEL_230:
  if (v104)
    goto LABEL_236;
LABEL_238:
  sub_23AA724E8(v33, (uint64_t)v127, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v127, (uint64_t)v128, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v128) == 1)
  {
    v107 = 0;
    v108 = 0;
  }
  else
  {
    v107 = v128[29];
    v108 = v128[30];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8(v36, (uint64_t)v125, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v125, (uint64_t)v126, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v126) == 1)
  {
    if (!v108)
      goto LABEL_254;
    goto LABEL_253;
  }
  v109 = v126[29];
  v110 = v126[30];
  swift_bridgeObjectRetain();
  if (!v108)
  {
    if (!v110)
    {
LABEL_254:
      v111 = 0;
      goto LABEL_271;
    }
    goto LABEL_253;
  }
  if (!v110)
  {
LABEL_253:
    swift_bridgeObjectRelease();
    v111 = 1;
    goto LABEL_271;
  }
  if (v107 == v109 && v108 == v110)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v111 = 0;
  }
  else
  {
    v119 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v111 = v119 ^ 1;
  }
LABEL_271:
  sub_23AF21C5C(0x8000000000000, v111 & 1);
  return v185;
}

uint64_t sub_23AE51534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  _BOOL4 v38;
  _BOOL4 v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  _QWORD *v86;
  _QWORD *v87;
  char v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  char v93;
  int v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE v121[248];
  _QWORD v122[31];
  _BYTE v123[248];
  _QWORD v124[31];
  _BYTE v125[248];
  _QWORD v126[31];
  _QWORD v127[31];
  _QWORD v128[31];
  _QWORD v129[31];
  _BYTE v130[192];
  _QWORD *v131;
  _QWORD *v132;
  _BYTE v133[192];
  _QWORD *v134;
  _QWORD *v135;
  _BYTE v136[184];
  _QWORD *v137;
  _BYTE v138[248];
  _BYTE v139[248];
  _QWORD v140[31];
  _QWORD v141[31];
  _QWORD v142[31];
  _QWORD v143[31];
  _QWORD v144[31];
  _QWORD v145[31];
  _BYTE v146[112];
  uint64_t v147;
  uint64_t v148;
  _BYTE v149[248];
  _BYTE v150[248];
  _BYTE v151[248];
  _BYTE v152[248];
  _BYTE v153[80];
  uint64_t v154;
  uint64_t v155;
  _BYTE v156[248];
  _BYTE v157[248];
  _QWORD v158[31];
  _QWORD v159[31];
  _BYTE v160[40];
  uint64_t v161;
  uint64_t v162;
  _BYTE v163[248];
  _BYTE v164[248];
  _BYTE v165[248];
  _BYTE v166[248];
  _BYTE v167[32];
  unsigned __int8 v168;
  _QWORD v169[31];
  _QWORD v170[31];
  _BYTE v171[16];
  uint64_t v172;
  _BYTE v173[248];
  _BYTE v174[248];
  _BYTE v175[248];
  _BYTE v176[248];
  _BYTE v177[248];
  _QWORD v178[31];
  _BYTE v179[248];
  _QWORD v180[31];
  uint64_t v181;

  v2 = v1;
  v3 = MEMORY[0x24BDAC7A8](a1);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v117 - v8;
  v10 = *(_QWORD *)(v2 + 16);
  LODWORD(v119) = *(unsigned __int8 *)(v2 + 24);
  v12 = *(_QWORD *)(v2 + 128);
  v120 = *(_QWORD *)(v2 + 136);
  v11 = v120;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  sub_23AA907B0(v2 + *(int *)(v13 + 48), (uint64_t)&v9[*(int *)(v4 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *(_QWORD *)v9 = v10;
  v9[8] = v119;
  *((_QWORD *)v9 + 2) = v12;
  *((_QWORD *)v9 + 3) = v11;
  v119 = *(_QWORD *)(v3 + 16);
  LOBYTE(v12) = *(_BYTE *)(v3 + 24);
  v15 = *(_QWORD *)(v3 + 128);
  v14 = *(_QWORD *)(v3 + 136);
  sub_23AA907B0(v3 + *(int *)(v13 + 48), (uint64_t)&v7[*(int *)(v4 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *(_QWORD *)v7 = v119;
  v7[8] = v12;
  *((_QWORD *)v7 + 2) = v15;
  *((_QWORD *)v7 + 3) = v14;
  v118 = v13;
  v16 = *(_QWORD *)(v3 + *(int *)(v13 + 64));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_23AE1D818(v7, v16, 0);
  sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E1DF0);
  sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E1DF0);
  v181 = v17;
  if (*(_QWORD *)(v2 + 32) != *(_QWORD *)(v3 + 32) || *(_DWORD *)(v2 + 40) != *(_DWORD *)(v3 + 40))
    goto LABEL_9;
  v18 = *(_BYTE *)(v3 + 56);
  if ((*(_BYTE *)(v2 + 56) & 1) != 0)
  {
    if ((*(_BYTE *)(v3 + 56) & 1) != 0)
      goto LABEL_10;
LABEL_9:
    v17 |= 8uLL;
    v181 = v17;
    goto LABEL_10;
  }
  if (*(_QWORD *)(v2 + 48) != *(_QWORD *)(v3 + 48))
    v18 = 1;
  if ((v18 & 1) != 0)
    goto LABEL_9;
LABEL_10:
  v19 = *(_QWORD *)(v2 + 72);
  v20 = *(_QWORD *)(v2 + 88);
  v21 = *(_QWORD *)(v2 + 96);
  v22 = *(_QWORD *)(v3 + 72);
  v23 = *(_QWORD *)(v3 + 88);
  v119 = v17;
  v120 = v23;
  v24 = *(_QWORD *)(v3 + 96);
  v25 = *(_BYTE *)(v3 + 80);
  v26 = *(_BYTE *)(v2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v19) = sub_23B14ABA0(v19, v26, v20, v21, v22, v25, v120, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
    v27 = v119;
  }
  else
  {
    v27 = v119 | 0x20000000000;
    v181 = v119 | 0x20000000000;
  }
  v28 = v118;
  v29 = v2 + *(int *)(v118 + 52);
  sub_23AA724E8(v29, (uint64_t)v179, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v179, (uint64_t)v180, &qword_2542E5050);
  v30 = sub_23AAFCF2C((uint64_t)v180);
  v31 = v180[0];
  v32 = v3 + *(int *)(v28 + 52);
  sub_23AA724E8(v32, (uint64_t)v177, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v177, (uint64_t)v178, &qword_2542E5050);
  v33 = sub_23AAFCF2C((uint64_t)v178);
  if (v30 == 1)
  {
    if (v33 == 1)
      goto LABEL_19;
LABEL_18:
    v27 |= 0x40000uLL;
    v181 = v27;
    goto LABEL_19;
  }
  if (v33 == 1 || v31 != v178[0])
    goto LABEL_18;
LABEL_19:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v176, &qword_2542E5050);
  v34 = sub_23AAFCF2C((uint64_t)v176);
  v35 = v176[8];
  sub_23AA724E8((uint64_t)v179, (uint64_t)v175, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v175) == 1)
  {
    if (v34 == 1)
      goto LABEL_25;
LABEL_24:
    v27 |= 0x80000uLL;
    v181 = v27;
    goto LABEL_25;
  }
  if (v34 == 1 || ((v35 ^ v175[8]) & 1) != 0)
    goto LABEL_24;
LABEL_25:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v174, &qword_2542E5050);
  v36 = sub_23AAFCF2C((uint64_t)v174);
  v37 = v174[9];
  sub_23AA724E8((uint64_t)v179, (uint64_t)v173, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v173) == 1)
  {
    v38 = 0;
    if (v36 != 1)
    {
      v27 |= 0x100000uLL;
      v181 = v27;
    }
  }
  else
  {
    if (v36 == 1 || v37 != v173[9])
    {
      v27 |= 0x100000uLL;
      v181 = v27;
    }
    sub_23AA724E8((uint64_t)v179, (uint64_t)v171, &qword_2542E5050);
    v38 = v172 != 0;
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v171, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v171) != 1 && v172)
  {
    if (v38)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v38)
  {
LABEL_36:
    v27 |= 0x200000uLL;
    v181 = v27;
  }
LABEL_37:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v170, &qword_2542E5050);
  v40 = sub_23AAFCF2C((uint64_t)v170) != 1 && v170[3] != 0;
  sub_23AA724E8((uint64_t)v177, (uint64_t)v169, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v169) == 1 || !v169[3])
  {
    if (!v40)
      goto LABEL_51;
  }
  else if (v40)
  {
    sub_23AA724E8((uint64_t)v177, (uint64_t)v167, &qword_2542E5050);
    goto LABEL_53;
  }
  v27 |= 0x400000uLL;
  v181 = v27;
LABEL_51:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v167, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v167) == 1)
  {
    v41 = 2;
    goto LABEL_54;
  }
LABEL_53:
  v41 = v168;
LABEL_54:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v167, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v167) == 1)
  {
    if (v41 == 2)
      goto LABEL_60;
LABEL_59:
    v27 |= 0x1000000uLL;
    v181 = v27;
    goto LABEL_60;
  }
  if (v41 == 2 || (((v41 == 0) ^ v168) & 1) == 0)
    goto LABEL_59;
LABEL_60:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v166, &qword_2542E5050);
  v42 = sub_23AAFCF2C((uint64_t)v166);
  v43 = v166[33];
  sub_23AA724E8((uint64_t)v179, (uint64_t)v165, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v165) == 1)
  {
    if (v42 == 1)
      goto LABEL_66;
LABEL_65:
    v27 |= 0x2000000uLL;
    v181 = v27;
    goto LABEL_66;
  }
  if (v42 == 1 || ((v43 ^ v165[33]) & 1) != 0)
    goto LABEL_65;
LABEL_66:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v164, &qword_2542E5050);
  v44 = sub_23AAFCF2C((uint64_t)v164);
  v45 = v164[34];
  sub_23AA724E8((uint64_t)v179, (uint64_t)v163, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v163) == 1)
  {
    v46 = 0;
    if (v44 == 1)
    {
      v47 = 0;
    }
    else
    {
      v47 = 0;
      v27 |= 0x4000000uLL;
      v181 = v27;
    }
  }
  else
  {
    if (v44 == 1 || v45 != v163[34])
    {
      v27 |= 0x4000000uLL;
      v181 = v27;
    }
    sub_23AA724E8((uint64_t)v179, (uint64_t)v160, &qword_2542E5050);
    v46 = v161;
    v47 = v162;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v160, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v160) == 1)
  {
    if (!v47)
      goto LABEL_86;
    goto LABEL_84;
  }
  v48 = v161;
  v49 = v162;
  swift_bridgeObjectRetain();
  if (!v47)
  {
    if (!v49)
      goto LABEL_86;
    goto LABEL_84;
  }
  if (!v49)
  {
LABEL_84:
    swift_bridgeObjectRelease();
LABEL_85:
    v27 |= 0x8000000uLL;
    v181 = v27;
    goto LABEL_86;
  }
  if (v46 == v48 && v47 == v49)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_86;
  }
  v108 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v108 & 1) == 0)
    goto LABEL_85;
LABEL_86:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v159, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v159) == 1)
  {
    v50 = 0;
    v51 = 0;
  }
  else
  {
    v50 = v159[7];
    v51 = v159[8];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v158, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v158) == 1)
  {
    if (!v51)
      goto LABEL_101;
    goto LABEL_99;
  }
  v52 = v158[7];
  v53 = v158[8];
  swift_bridgeObjectRetain();
  if (!v51)
  {
    if (!v53)
      goto LABEL_101;
    goto LABEL_99;
  }
  if (!v53)
  {
LABEL_99:
    swift_bridgeObjectRelease();
LABEL_100:
    v27 |= 0x10000000uLL;
    v181 = v27;
    goto LABEL_101;
  }
  if (v50 == v52 && v51 == v53)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_101;
  }
  v109 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v109 & 1) == 0)
    goto LABEL_100;
LABEL_101:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v157, &qword_2542E5050);
  v54 = sub_23AAFCF2C((uint64_t)v157);
  v55 = v157[72];
  sub_23AA724E8((uint64_t)v179, (uint64_t)v156, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v156) == 1)
  {
    v56 = 0;
    if (v54 == 1)
    {
      v57 = 0;
    }
    else
    {
      v57 = 0;
      v27 |= 0x20000000uLL;
      v181 = v27;
    }
  }
  else
  {
    if (v54 == 1 || v55 != v156[72])
    {
      v27 |= 0x20000000uLL;
      v181 = v27;
    }
    sub_23AA724E8((uint64_t)v179, (uint64_t)v153, &qword_2542E5050);
    v56 = v154;
    v57 = v155;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v153, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v153) == 1)
  {
    if (!v57)
      goto LABEL_121;
    goto LABEL_119;
  }
  v58 = v154;
  v59 = v155;
  swift_bridgeObjectRetain();
  if (!v57)
  {
    if (!v59)
      goto LABEL_121;
    goto LABEL_119;
  }
  if (!v59)
  {
LABEL_119:
    swift_bridgeObjectRelease();
LABEL_120:
    v27 |= 0x40000000uLL;
    v181 = v27;
    goto LABEL_121;
  }
  if (v56 == v58 && v57 == v59)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_121;
  }
  v110 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v110 & 1) == 0)
    goto LABEL_120;
LABEL_121:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v152, &qword_2542E5050);
  v60 = sub_23AAFCF2C((uint64_t)v152);
  v61 = v152[104];
  sub_23AA724E8((uint64_t)v179, (uint64_t)v151, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v151) == 1)
  {
    if (v60 == 1)
      goto LABEL_127;
LABEL_126:
    v27 |= 0x80000000uLL;
    v181 = v27;
    goto LABEL_127;
  }
  if (v60 == 1 || ((v61 ^ v151[104]) & 1) != 0)
    goto LABEL_126;
LABEL_127:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v150, &qword_2542E5050);
  v62 = sub_23AAFCF2C((uint64_t)v150);
  v63 = v150[105];
  sub_23AA724E8((uint64_t)v179, (uint64_t)v149, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v149) == 1)
  {
    v64 = 0;
    if (v62 == 1)
    {
      v65 = 0;
    }
    else
    {
      v65 = 0;
      v27 |= 0x100000000uLL;
      v181 = v27;
    }
  }
  else
  {
    if (v62 == 1 || v63 != v149[105])
    {
      v27 |= 0x100000000uLL;
      v181 = v27;
    }
    sub_23AA724E8((uint64_t)v179, (uint64_t)v146, &qword_2542E5050);
    v64 = v147;
    v65 = v148;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v146, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v146) == 1)
  {
    if (!v65)
      goto LABEL_147;
    goto LABEL_145;
  }
  v66 = v147;
  v67 = v148;
  swift_bridgeObjectRetain();
  if (!v65)
  {
    if (!v67)
      goto LABEL_147;
    goto LABEL_145;
  }
  if (!v67)
  {
LABEL_145:
    swift_bridgeObjectRelease();
LABEL_146:
    v27 |= 0x200000000uLL;
    v181 = v27;
    goto LABEL_147;
  }
  if (v64 == v66 && v65 == v67)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_147;
  }
  v111 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v111 & 1) == 0)
    goto LABEL_146;
LABEL_147:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v145, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v145) == 1)
  {
    v68 = 0;
    v69 = 0;
  }
  else
  {
    v68 = v145[16];
    v69 = v145[17];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v144, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v144) == 1)
  {
    if (!v69)
      goto LABEL_162;
    goto LABEL_160;
  }
  v70 = v144[16];
  v71 = v144[17];
  swift_bridgeObjectRetain();
  if (!v69)
  {
    if (!v71)
      goto LABEL_162;
    goto LABEL_160;
  }
  if (!v71)
  {
LABEL_160:
    swift_bridgeObjectRelease();
LABEL_161:
    v27 |= 0x400000000uLL;
    v181 = v27;
    goto LABEL_162;
  }
  if (v68 == v70 && v69 == v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_162;
  }
  v112 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v112 & 1) == 0)
    goto LABEL_161;
LABEL_162:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v143, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v143) == 1)
  {
    v72 = 0;
    v73 = 0;
  }
  else
  {
    v72 = v143[18];
    v73 = v143[19];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v142, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v142) == 1)
  {
    if (!v73)
      goto LABEL_177;
    goto LABEL_175;
  }
  v74 = v142[18];
  v75 = v142[19];
  swift_bridgeObjectRetain();
  if (!v73)
  {
    if (!v75)
      goto LABEL_177;
    goto LABEL_175;
  }
  if (!v75)
  {
LABEL_175:
    swift_bridgeObjectRelease();
LABEL_176:
    v27 |= 0x800000000uLL;
    v181 = v27;
    goto LABEL_177;
  }
  if (v72 == v74 && v73 == v75)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_177;
  }
  v113 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v113 & 1) == 0)
    goto LABEL_176;
LABEL_177:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v141, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v141) == 1)
  {
    v76 = 0;
    v77 = 0;
  }
  else
  {
    v76 = v141[20];
    v77 = v141[21];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v140, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v140) == 1)
  {
    if (!v77)
      goto LABEL_192;
    goto LABEL_190;
  }
  v78 = v140[20];
  v79 = v140[21];
  swift_bridgeObjectRetain();
  if (!v77)
  {
    if (!v79)
      goto LABEL_192;
    goto LABEL_190;
  }
  if (!v79)
  {
LABEL_190:
    swift_bridgeObjectRelease();
LABEL_191:
    v27 |= 0x1000000000uLL;
    v181 = v27;
    goto LABEL_192;
  }
  swift_bridgeObjectRetain();
  v80 = sub_23AB55DFC(v76, v77);
  v82 = v81;
  if (v80 == sub_23AB55DFC(v78, v79) && v82 == v83)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_192;
  }
  v114 = sub_23B1C7388();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v114 & 1) == 0)
    goto LABEL_191;
LABEL_192:
  sub_23AA724E8((uint64_t)v177, (uint64_t)v139, &qword_2542E5050);
  v84 = sub_23AAFCF2C((uint64_t)v139);
  v85 = v139[176];
  sub_23AA724E8((uint64_t)v179, (uint64_t)v138, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v138) == 1)
  {
    if (v84 == 1)
    {
      v86 = 0;
    }
    else
    {
      v86 = 0;
      v27 |= 0x2000000000uLL;
      v181 = v27;
    }
  }
  else
  {
    if (v84 == 1 || v85 != v138[176])
    {
      v27 |= 0x2000000000uLL;
      v181 = v27;
    }
    sub_23AA724E8((uint64_t)v179, (uint64_t)v136, &qword_2542E5050);
    v86 = v137;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v136, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v136) == 1)
  {
    if (!v86)
      goto LABEL_211;
    goto LABEL_209;
  }
  v87 = v137;
  swift_bridgeObjectRetain();
  if (!v86)
  {
    if (!v87)
      goto LABEL_211;
    goto LABEL_209;
  }
  if (!v87)
  {
LABEL_209:
    swift_bridgeObjectRelease();
    goto LABEL_210;
  }
  v88 = sub_23AF1B25C(v86, v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v88 & 1) == 0)
  {
LABEL_210:
    v27 |= 0x4000000000uLL;
    v181 = v27;
  }
LABEL_211:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v133, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v133) == 1)
  {
    v89 = 0;
    v90 = 0;
  }
  else
  {
    v89 = v134;
    v90 = v135;
    sub_23AA8831C((uint64_t)v134);
  }
  sub_23AA724E8((uint64_t)v177, (uint64_t)v130, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v130) != 1)
  {
    v91 = v131;
    v92 = v132;
    sub_23AA8831C((uint64_t)v131);
    if (!v89)
    {
      if (!v91)
        goto LABEL_225;
      sub_23AAA5C9C((uint64_t)v91);
LABEL_224:
      v27 |= 0x8000000000uLL;
      v181 = v27;
      goto LABEL_225;
    }
    if (v91)
    {
      if ((sub_23AF1B25C(v89, v91) & 1) != 0)
      {
        v93 = sub_23AF1B25C(v90, v92);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AAA5C9C((uint64_t)v89);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v93 & 1) != 0)
          goto LABEL_225;
        goto LABEL_224;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AAA5C9C((uint64_t)v89);
      swift_bridgeObjectRelease();
      goto LABEL_223;
    }
LABEL_222:
    swift_bridgeObjectRelease();
LABEL_223:
    swift_bridgeObjectRelease();
    goto LABEL_224;
  }
  if (v89)
    goto LABEL_222;
LABEL_225:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v129, &qword_2542E5050);
  v94 = sub_23AAFCF2C((uint64_t)v129);
  v95 = v129[26];
  sub_23AA724E8((uint64_t)v177, (uint64_t)v128, &qword_2542E5050);
  v96 = sub_23AAFCF2C((uint64_t)v128);
  if (v94 == 1)
  {
    if (v96 == 1)
      goto LABEL_231;
    goto LABEL_230;
  }
  if (v96 == 1 || v95 != v128[26])
LABEL_230:
    v181 = v27 | 0x2000000000000;
LABEL_231:
  sub_23AA724E8((uint64_t)v179, (uint64_t)v127, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v127) == 1 || !v127[28])
  {
    v98 = 0;
  }
  else
  {
    v97 = swift_bridgeObjectRetain();
    v98 = sub_23AF21B70(v97);
    swift_bridgeObjectRelease();
  }
  sub_23AA724E8(v32, (uint64_t)v125, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v125, (uint64_t)v126, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v126) != 1 && v126[28])
  {
    v99 = swift_bridgeObjectRetain();
    v100 = sub_23AF21B70(v99);
    swift_bridgeObjectRelease();
    if (!v98)
      goto LABEL_238;
LABEL_241:
    if (v100)
    {
      v101 = swift_bridgeObjectRetain();
      v102 = sub_23AF1BAE4(v101, v100);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if ((v102 & 1) != 0)
        goto LABEL_246;
      goto LABEL_245;
    }
LABEL_244:
    swift_bridgeObjectRelease();
LABEL_245:
    v181 |= 0x4000000000000uLL;
    goto LABEL_246;
  }
  v100 = 0;
  if (v98)
    goto LABEL_241;
LABEL_238:
  if (v100)
    goto LABEL_244;
LABEL_246:
  sub_23AA724E8(v29, (uint64_t)v123, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v123, (uint64_t)v124, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v124) == 1)
  {
    v103 = 0;
    v104 = 0;
  }
  else
  {
    v103 = v124[29];
    v104 = v124[30];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8(v32, (uint64_t)v121, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v121, (uint64_t)v122, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v122) == 1)
  {
    if (!v104)
      goto LABEL_262;
    goto LABEL_261;
  }
  v105 = v122[29];
  v106 = v122[30];
  swift_bridgeObjectRetain();
  if (!v104)
  {
    if (!v106)
    {
LABEL_262:
      v107 = 0;
      goto LABEL_279;
    }
    goto LABEL_261;
  }
  if (!v106)
  {
LABEL_261:
    swift_bridgeObjectRelease();
    v107 = 1;
    goto LABEL_279;
  }
  if (v103 == v105 && v104 == v106)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v107 = 0;
  }
  else
  {
    v115 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v107 = v115 ^ 1;
  }
LABEL_279:
  sub_23AF21C5C(0x8000000000000, v107 & 1);
  return v181;
}

uint64_t sub_23AE52AD0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char v35;
  int v36;
  char v37;
  _BOOL4 v38;
  _BOOL4 v40;
  int v41;
  char v42;
  int v43;
  char v44;
  int v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  char v63;
  int v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char v87;
  _QWORD *v88;
  _QWORD *v89;
  char v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  char v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE v122[248];
  _QWORD v123[31];
  _QWORD v124[31];
  _QWORD v125[31];
  _BYTE v126[192];
  _QWORD *v127;
  _QWORD *v128;
  _BYTE v129[248];
  _QWORD v130[31];
  _QWORD v131[31];
  _QWORD v132[31];
  _BYTE v133[248];
  _BYTE v134[248];
  _BYTE v135[248];
  _QWORD v136[31];
  _BYTE v137[248];
  _BYTE v138[248];
  _BYTE v139[248];
  _QWORD v140[31];
  _BYTE v141[248];
  _BYTE v142[248];
  _BYTE v143[248];
  _QWORD v144[31];
  uint64_t v145;
  _OWORD v146[4];
  uint64_t v147[3];
  __int128 v148;
  _QWORD v149[31];
  _QWORD v150[31];
  _QWORD v151[31];
  _QWORD v152[31];
  _QWORD v153[31];
  _QWORD v154[31];
  _QWORD v155[31];
  _QWORD v156[31];
  _QWORD v157[31];
  _QWORD v158[31];
  _QWORD v159[31];
  _QWORD v160[31];
  _QWORD v161[31];
  _QWORD v162[31];
  _QWORD v163[31];
  _QWORD v164[31];
  _QWORD v165[31];
  _QWORD v166[31];
  _QWORD v167[31];
  _QWORD v168[31];
  _QWORD v169[31];
  _QWORD v170[31];
  _QWORD v171[31];
  _QWORD v172[31];
  _QWORD v173[31];
  _OWORD v174[15];
  uint64_t v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  uint64_t v191;
  _QWORD v192[31];
  _BYTE v193[192];
  _QWORD *v194;
  _QWORD *v195;
  _BYTE v196[184];
  _QWORD *v197;
  _BYTE v198[248];
  _QWORD v199[31];
  _QWORD v200[31];
  _QWORD v201[31];
  _BYTE v202[112];
  uint64_t v203;
  uint64_t v204;
  _BYTE v205[248];
  _BYTE v206[248];
  _BYTE v207[80];
  uint64_t v208;
  uint64_t v209;
  _BYTE v210[248];
  _QWORD v211[31];
  _BYTE v212[40];
  uint64_t v213;
  uint64_t v214;
  _BYTE v215[248];
  _BYTE v216[248];
  _BYTE v217[248];
  _OWORD v218[15];
  uint64_t v219;
  __int128 v220;
  _OWORD v221[14];
  uint64_t v222;
  _OWORD v223[15];
  uint64_t v224;
  __int128 v225;
  _OWORD v226[14];
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  unint64_t v231;
  _QWORD v232[31];
  id v233;
  id v234;
  char v235[8];
  __int128 v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240[3];

  v2 = v1;
  v3 = (void *)MEMORY[0x24BDAC7A8](a1);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v119 - v8);
  v10 = (void *)v1[1];
  v12 = v1[10];
  v11 = v1[11];
  v120 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  sub_23AA907B0((uint64_t)v2 + *(int *)(v120 + 48), (uint64_t)v9 + *(int *)(v4 + 40), (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v11;
  v13 = v10;
  swift_bridgeObjectRetain();
  v121 = (uint64_t)sub_23ADAB49C();
  v14 = objc_msgSend(v3, sel_filename);
  v15 = sub_23B1C63E0();
  v17 = v16;

  v232[0] = v15;
  v232[1] = v17;
  v230 = 58;
  v231 = 0xE100000000000000;
  v228 = 47;
  v229 = 0xE100000000000000;
  sub_23AAA420C();
  v18 = sub_23B1C6CF8();
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_23AAA3120((uint64_t)v7 + *(int *)(v4 + 40));
  *v7 = v121;
  v7[1] = v18;
  v7[2] = v20;
  v21 = sub_23AFA9348((int)objc_msgSend(v3, sel_unsupportedFields));
  v22 = sub_23AE1D500((uint64_t)v7, v21, 0);
  sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E1E00);
  sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E1E00);
  v145 = v22;
  v23 = v2[2];
  v24 = v2[3];
  sub_23AAAE668(v23, v24);
  sub_23AAA5788((uint64_t *)v146);
  v237 = v146[0];
  sub_23AA9F49C((uint64_t)&v237);
  sub_23AAA5CC8((uint64_t *)v146);
  sub_23AAAE6AC(v23, v24);
  LOBYTE(v14) = v25;
  sub_23AC2452C((uint64_t)&v237);
  sub_23AAAE53C(v23, v24);
  if ((v14 & 1) == 0)
  {
    v22 |= 8uLL;
    v145 = v22;
  }
  v26 = v2[5];
  v27 = v2[6];
  sub_23AAAE668(v26, v27);
  sub_23AAA5788(v147);
  v236 = v148;
  sub_23AA9F49C((uint64_t)&v236);
  sub_23AAA5CC8(v147);
  sub_23AAAE6AC(v26, v27);
  v29 = v28;
  sub_23AC2452C((uint64_t)&v236);
  sub_23AAAE53C(v26, v27);
  if ((v29 & 1) == 0)
  {
    v22 |= 0x20000000000uLL;
    v145 = v22;
  }
  v30 = (uint64_t)v2 + *(int *)(v120 + 52);
  sub_23AA724E8(v30, (uint64_t)v143, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v143, (uint64_t)v144, &qword_2542E5050);
  v31 = sub_23AAFCF2C((uint64_t)v144);
  v32 = v144[0];
  sub_23AAA4B74((uint64_t)v149);
  sub_23AA724E8((uint64_t)v149, (uint64_t)v232, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v232) != 1)
  {
    v33 = v232[0];
    sub_23AAB7E4C(v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    if (v31 != 1 && v32 == v33)
      goto LABEL_11;
    goto LABEL_10;
  }
  if (v31 != 1)
  {
LABEL_10:
    v22 |= 0x40000uLL;
    v145 = v22;
  }
LABEL_11:
  sub_23AAA4B74((uint64_t)v150);
  sub_23AA724E8((uint64_t)v150, (uint64_t)&v230, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)&v230) == 1)
  {
    v34 = 2;
  }
  else
  {
    v35 = v231;
    sub_23AAB7E4C(v150, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v34 = v35 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v142, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v142) != 1)
  {
    if (v34 != 2 && (((v34 == 0) ^ v142[8]) & 1) != 0)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (v34 != 2)
  {
LABEL_19:
    v22 |= 0x80000uLL;
    v145 = v22;
  }
LABEL_20:
  sub_23AAA4B74((uint64_t)v151);
  sub_23AA724E8((uint64_t)v151, (uint64_t)&v228, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)&v228) == 1)
  {
    v36 = 2;
  }
  else
  {
    v37 = BYTE1(v229);
    sub_23AAB7E4C(v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v36 = v37 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v141, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v141) == 1)
  {
    v38 = 0;
    if (v36 != 2)
    {
      v22 |= 0x100000uLL;
      v145 = v22;
    }
  }
  else
  {
    if (v36 == 2 || (((v36 == 0) ^ v141[9]) & 1) == 0)
    {
      v22 |= 0x100000uLL;
      v145 = v22;
    }
    sub_23AA724E8((uint64_t)v143, (uint64_t)&v225, &qword_2542E5050);
    v38 = *(_QWORD *)&v226[0] != 0;
  }
  sub_23AAA4B74((uint64_t)v152);
  sub_23AA724E8((uint64_t)v152, (uint64_t)v223, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v223) == 1)
    goto LABEL_35;
  v226[11] = v223[12];
  v226[12] = v223[13];
  v226[13] = v223[14];
  v227 = v224;
  v226[7] = v223[8];
  v226[8] = v223[9];
  v226[9] = v223[10];
  v226[10] = v223[11];
  v226[3] = v223[4];
  v226[4] = v223[5];
  v226[5] = v223[6];
  v226[6] = v223[7];
  v225 = v223[0];
  v226[0] = v223[1];
  v226[1] = v223[2];
  v226[2] = v223[3];
  sub_23AA724E8((uint64_t)v226, (uint64_t)&v233, &qword_2542E7700);
  sub_23ADF1BFC(&v233);
  sub_23AAB7E4C(v152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  sub_23AA724E8((uint64_t)&v233, (uint64_t)v240, &qword_2542E7700);
  if (!v240[0])
  {
LABEL_35:
    if (!v38)
      goto LABEL_37;
    goto LABEL_36;
  }
  sub_23AEB4600(&v233);
  if (!v38)
  {
LABEL_36:
    v22 |= 0x200000uLL;
    v145 = v22;
  }
LABEL_37:
  sub_23AA724E8((uint64_t)v143, (uint64_t)v140, &qword_2542E5050);
  v40 = sub_23AAFCF2C((uint64_t)v140) != 1 && v140[3] != 0;
  sub_23AAA4B74((uint64_t)v153);
  sub_23AA724E8((uint64_t)v153, (uint64_t)v218, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v218) == 1)
    goto LABEL_47;
  v221[11] = v218[12];
  v221[12] = v218[13];
  v221[13] = v218[14];
  v222 = v219;
  v221[7] = v218[8];
  v221[8] = v218[9];
  v221[9] = v218[10];
  v221[10] = v218[11];
  v221[3] = v218[4];
  v221[4] = v218[5];
  v221[5] = v218[6];
  v221[6] = v218[7];
  v220 = v218[0];
  v221[0] = v218[1];
  v221[1] = v218[2];
  v221[2] = v218[3];
  sub_23AA724E8((uint64_t)v221 + 8, (uint64_t)&v234, &qword_2542E7700);
  sub_23ADF1BFC(&v234);
  sub_23AAB7E4C(v153, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  sub_23AA724E8((uint64_t)&v234, (uint64_t)&v239, &qword_2542E7700);
  if (!v239)
  {
LABEL_47:
    if (!v40)
      goto LABEL_49;
    goto LABEL_48;
  }
  sub_23AEB4600(&v234);
  if (!v40)
  {
LABEL_48:
    v22 |= 0x400000uLL;
    v145 = v22;
  }
LABEL_49:
  sub_23AAA4B74((uint64_t)v154);
  sub_23AA724E8((uint64_t)v154, (uint64_t)v217, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v217) == 1)
  {
    v41 = 2;
  }
  else
  {
    v42 = v217[32];
    sub_23AAB7E4C(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v41 = v42 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v139, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v139) != 1)
  {
    if (v41 != 2 && (((v41 == 0) ^ v139[32]) & 1) != 0)
      goto LABEL_58;
    goto LABEL_57;
  }
  if (v41 != 2)
  {
LABEL_57:
    v22 |= 0x1000000uLL;
    v145 = v22;
  }
LABEL_58:
  sub_23AAA4B74((uint64_t)v155);
  sub_23AA724E8((uint64_t)v155, (uint64_t)v216, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v216) == 1)
  {
    v43 = 2;
  }
  else
  {
    v44 = v216[33];
    sub_23AAB7E4C(v155, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v43 = v44 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v138, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v138) != 1)
  {
    if (v43 != 2 && (((v43 == 0) ^ v138[33]) & 1) != 0)
      goto LABEL_67;
    goto LABEL_66;
  }
  if (v43 != 2)
  {
LABEL_66:
    v22 |= 0x2000000uLL;
    v145 = v22;
  }
LABEL_67:
  sub_23AAA4B74((uint64_t)v156);
  sub_23AA724E8((uint64_t)v156, (uint64_t)v215, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v215) == 1)
  {
    v45 = 2;
  }
  else
  {
    v46 = v215[34];
    sub_23AAB7E4C(v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v45 = v46 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v137, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v137) == 1)
  {
    v47 = 0;
    v48 = 0;
    if (v45 != 2)
    {
      v22 |= 0x4000000uLL;
      v145 = v22;
    }
  }
  else
  {
    if (v45 == 2 || (((v45 == 0) ^ v137[34]) & 1) == 0)
    {
      v22 |= 0x4000000uLL;
      v145 = v22;
    }
    sub_23AA724E8((uint64_t)v143, (uint64_t)v212, &qword_2542E5050);
    v47 = v213;
    v48 = v214;
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v157);
  sub_23AA724E8((uint64_t)v157, (uint64_t)v212, &qword_2542E5050);
  v49 = sub_23AAFCF2C((uint64_t)v212);
  v121 = v30;
  if (v49 == 1)
  {
    if (!v48)
      goto LABEL_90;
    goto LABEL_88;
  }
  v50 = v213;
  v51 = v214;
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v157, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v48)
  {
    if (!v51)
      goto LABEL_90;
    goto LABEL_88;
  }
  if (!v51)
  {
LABEL_88:
    swift_bridgeObjectRelease();
LABEL_89:
    v22 |= 0x8000000uLL;
    v145 = v22;
    goto LABEL_90;
  }
  if (v47 == v50 && v48 == v51)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_90;
  }
  v110 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v110 & 1) == 0)
    goto LABEL_89;
LABEL_90:
  sub_23AA724E8((uint64_t)v143, (uint64_t)v136, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v136) == 1)
  {
    v52 = 0;
    v53 = 0;
  }
  else
  {
    v52 = v136[7];
    v53 = v136[8];
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v158);
  sub_23AA724E8((uint64_t)v158, (uint64_t)v211, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v211) == 1)
  {
    if (!v53)
      goto LABEL_105;
    goto LABEL_103;
  }
  v54 = v211[7];
  v55 = v211[8];
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v158, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v53)
  {
    if (!v55)
      goto LABEL_105;
    goto LABEL_103;
  }
  if (!v55)
  {
LABEL_103:
    swift_bridgeObjectRelease();
LABEL_104:
    v22 |= 0x10000000uLL;
    v145 = v22;
    goto LABEL_105;
  }
  if (v52 == v54 && v53 == v55)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_105;
  }
  v111 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v111 & 1) == 0)
    goto LABEL_104;
LABEL_105:
  sub_23AAA4B74((uint64_t)v159);
  sub_23AA724E8((uint64_t)v159, (uint64_t)v210, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v210) == 1)
  {
    v56 = 2;
  }
  else
  {
    v57 = v210[72];
    sub_23AAB7E4C(v159, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v56 = v57 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v135, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v135) == 1)
  {
    v58 = 0;
    v59 = 0;
    if (v56 != 2)
    {
      v22 |= 0x20000000uLL;
      v145 = v22;
    }
  }
  else
  {
    if (v56 == 2 || (((v56 == 0) ^ v135[72]) & 1) == 0)
    {
      v22 |= 0x20000000uLL;
      v145 = v22;
    }
    sub_23AA724E8((uint64_t)v143, (uint64_t)v207, &qword_2542E5050);
    v58 = v208;
    v59 = v209;
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v160);
  sub_23AA724E8((uint64_t)v160, (uint64_t)v207, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v207) == 1)
  {
    if (!v59)
      goto LABEL_128;
    goto LABEL_126;
  }
  v60 = v208;
  v61 = v209;
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v59)
  {
    if (!v61)
      goto LABEL_128;
    goto LABEL_126;
  }
  if (!v61)
  {
LABEL_126:
    swift_bridgeObjectRelease();
LABEL_127:
    v22 |= 0x40000000uLL;
    v145 = v22;
    goto LABEL_128;
  }
  if (v58 == v60 && v59 == v61)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_128;
  }
  v112 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v112 & 1) == 0)
    goto LABEL_127;
LABEL_128:
  sub_23AAA4B74((uint64_t)v161);
  sub_23AA724E8((uint64_t)v161, (uint64_t)v206, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v206) == 1)
  {
    v62 = 2;
  }
  else
  {
    v63 = v206[104];
    sub_23AAB7E4C(v161, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v62 = v63 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v134, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v134) != 1)
  {
    if (v62 != 2 && (((v62 == 0) ^ v134[104]) & 1) != 0)
      goto LABEL_137;
    goto LABEL_136;
  }
  if (v62 != 2)
  {
LABEL_136:
    v22 |= 0x80000000uLL;
    v145 = v22;
  }
LABEL_137:
  sub_23AAA4B74((uint64_t)v162);
  sub_23AA724E8((uint64_t)v162, (uint64_t)v205, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v205) == 1)
  {
    v64 = 2;
  }
  else
  {
    v65 = v205[105];
    sub_23AAB7E4C(v162, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v64 = v65 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v133, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v133) == 1)
  {
    v66 = 0;
    v67 = 0;
    if (v64 != 2)
    {
      v22 |= 0x100000000uLL;
      v145 = v22;
    }
  }
  else
  {
    if (v64 == 2 || (((v64 == 0) ^ v133[105]) & 1) == 0)
    {
      v22 |= 0x100000000uLL;
      v145 = v22;
    }
    sub_23AA724E8((uint64_t)v143, (uint64_t)v202, &qword_2542E5050);
    v66 = v203;
    v67 = v204;
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v163);
  sub_23AA724E8((uint64_t)v163, (uint64_t)v202, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v202) == 1)
  {
    if (!v67)
      goto LABEL_160;
    goto LABEL_158;
  }
  v68 = v203;
  v69 = v204;
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v67)
  {
    if (!v69)
      goto LABEL_160;
    goto LABEL_158;
  }
  if (!v69)
  {
LABEL_158:
    swift_bridgeObjectRelease();
LABEL_159:
    v22 |= 0x200000000uLL;
    v145 = v22;
    goto LABEL_160;
  }
  if (v66 == v68 && v67 == v69)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_160;
  }
  v113 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v113 & 1) == 0)
    goto LABEL_159;
LABEL_160:
  sub_23AA724E8((uint64_t)v143, (uint64_t)v132, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v132) == 1)
  {
    v70 = 0;
    v71 = 0;
  }
  else
  {
    v70 = v132[16];
    v71 = v132[17];
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v164);
  sub_23AA724E8((uint64_t)v164, (uint64_t)v201, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v201) == 1)
  {
    if (!v71)
      goto LABEL_175;
    goto LABEL_173;
  }
  v72 = v201[16];
  v73 = v201[17];
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v164, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v71)
  {
    if (!v73)
      goto LABEL_175;
    goto LABEL_173;
  }
  if (!v73)
  {
LABEL_173:
    swift_bridgeObjectRelease();
LABEL_174:
    v22 |= 0x400000000uLL;
    v145 = v22;
    goto LABEL_175;
  }
  if (v70 == v72 && v71 == v73)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_175;
  }
  v114 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v114 & 1) == 0)
    goto LABEL_174;
LABEL_175:
  sub_23AA724E8((uint64_t)v143, (uint64_t)v131, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v131) == 1)
  {
    v74 = 0;
    v75 = 0;
  }
  else
  {
    v74 = v131[18];
    v75 = v131[19];
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v165);
  sub_23AA724E8((uint64_t)v165, (uint64_t)v200, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v200) == 1)
  {
    if (!v75)
      goto LABEL_190;
    goto LABEL_188;
  }
  v76 = v200[18];
  v77 = v200[19];
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v165, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v75)
  {
    if (!v77)
      goto LABEL_190;
    goto LABEL_188;
  }
  if (!v77)
  {
LABEL_188:
    swift_bridgeObjectRelease();
LABEL_189:
    v22 |= 0x800000000uLL;
    v145 = v22;
    goto LABEL_190;
  }
  if (v74 == v76 && v75 == v77)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_190;
  }
  v115 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v115 & 1) == 0)
    goto LABEL_189;
LABEL_190:
  sub_23AA724E8((uint64_t)v143, (uint64_t)v130, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v130) == 1)
  {
    v78 = 0;
    v79 = 0;
  }
  else
  {
    v78 = v130[20];
    v79 = v130[21];
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v166);
  sub_23AA724E8((uint64_t)v166, (uint64_t)v199, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v199) == 1)
  {
    if (!v79)
      goto LABEL_205;
    goto LABEL_203;
  }
  v80 = v199[20];
  v81 = v199[21];
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v166, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v79)
  {
    if (!v81)
      goto LABEL_205;
    goto LABEL_203;
  }
  if (!v81)
  {
LABEL_203:
    swift_bridgeObjectRelease();
LABEL_204:
    v22 |= 0x1000000000uLL;
    v145 = v22;
    goto LABEL_205;
  }
  swift_bridgeObjectRetain();
  v82 = sub_23AB55DFC(v78, v79);
  v84 = v83;
  if (v82 == sub_23AB55DFC(v80, v81) && v84 == v85)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_205;
  }
  v116 = sub_23B1C7388();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v116 & 1) == 0)
    goto LABEL_204;
LABEL_205:
  sub_23AAA4B74((uint64_t)v167);
  sub_23AA724E8((uint64_t)v167, (uint64_t)v198, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v198) == 1)
  {
    v86 = 2;
  }
  else
  {
    v87 = v198[176];
    sub_23AAB7E4C(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    v86 = v87 & 1;
  }
  sub_23AA724E8((uint64_t)v143, (uint64_t)v129, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v129) == 1)
  {
    v88 = 0;
    if (v86 != 2)
    {
      v22 |= 0x2000000000uLL;
      v145 = v22;
    }
  }
  else
  {
    if (v86 == 2 || (((v86 == 0) ^ v129[176]) & 1) == 0)
    {
      v22 |= 0x2000000000uLL;
      v145 = v22;
    }
    sub_23AA724E8((uint64_t)v143, (uint64_t)v196, &qword_2542E5050);
    v88 = v197;
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v168);
  sub_23AA724E8((uint64_t)v168, (uint64_t)v196, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v196) == 1)
  {
    if (!v88)
      goto LABEL_227;
    goto LABEL_225;
  }
  v89 = v197;
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v88)
  {
    if (!v89)
      goto LABEL_227;
    goto LABEL_225;
  }
  if (!v89)
  {
LABEL_225:
    swift_bridgeObjectRelease();
    goto LABEL_226;
  }
  v90 = sub_23AF1B25C(v88, v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v90 & 1) == 0)
  {
LABEL_226:
    v22 |= 0x4000000000uLL;
    v145 = v22;
  }
LABEL_227:
  sub_23AA724E8((uint64_t)v143, (uint64_t)v126, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v126) == 1)
  {
    v91 = 0;
    v92 = 0;
  }
  else
  {
    v91 = v127;
    v92 = v128;
    sub_23AA8831C((uint64_t)v127);
  }
  sub_23AAA4B74((uint64_t)v169);
  sub_23AA724E8((uint64_t)v169, (uint64_t)v193, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v193) == 1)
  {
    if (!v91)
      goto LABEL_244;
    goto LABEL_238;
  }
  v93 = v194;
  v94 = v195;
  sub_23AA8831C((uint64_t)v194);
  sub_23AAB7E4C(v169, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (v91)
  {
    if (v93)
    {
      if ((sub_23AF1B25C(v91, v93) & 1) != 0)
      {
        v95 = sub_23AF1B25C(v92, v94);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AAA5C9C((uint64_t)v91);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v96 = v121;
        if ((v95 & 1) != 0)
          goto LABEL_245;
        goto LABEL_241;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AAA5C9C((uint64_t)v91);
      swift_bridgeObjectRelease();
      goto LABEL_239;
    }
LABEL_238:
    swift_bridgeObjectRelease();
LABEL_239:
    swift_bridgeObjectRelease();
LABEL_240:
    v96 = v121;
LABEL_241:
    v22 |= 0x8000000000uLL;
    v145 = v22;
    goto LABEL_245;
  }
  if (v93)
  {
    sub_23AAA5C9C((uint64_t)v93);
    goto LABEL_240;
  }
LABEL_244:
  v96 = v121;
LABEL_245:
  sub_23AA724E8((uint64_t)v143, (uint64_t)v125, &qword_2542E5050);
  v97 = sub_23AAFCF2C((uint64_t)v125);
  v98 = v125[26];
  sub_23AAA4B74((uint64_t)v170);
  sub_23AA724E8((uint64_t)v170, (uint64_t)v192, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v192) == 1)
  {
    if (v97 == 1)
      goto LABEL_251;
    goto LABEL_250;
  }
  v99 = v192[26];
  sub_23AAB7E4C(v170, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (v97 == 1 || v98 != v99)
LABEL_250:
    v145 = v22 | 0x2000000000000;
LABEL_251:
  sub_23AA724E8((uint64_t)v143, (uint64_t)v124, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v124) == 1 || !v124[28])
  {
    v101 = 0;
  }
  else
  {
    v100 = swift_bridgeObjectRetain();
    v101 = sub_23AF21B70(v100);
    swift_bridgeObjectRelease();
  }
  sub_23AAA4B74((uint64_t)v171);
  sub_23AA724E8((uint64_t)v171, (uint64_t)v174, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v174) == 1)
    goto LABEL_260;
  v188 = v174[12];
  v189 = v174[13];
  v190 = v174[14];
  v184 = v174[8];
  v185 = v174[9];
  v186 = v174[10];
  v187 = v174[11];
  v180 = v174[4];
  v181 = v174[5];
  v182 = v174[6];
  v183 = v174[7];
  v176 = v174[0];
  v177 = v174[1];
  v178 = v174[2];
  v191 = v175;
  v179 = v174[3];
  sub_23AA724E8((uint64_t)&v190, (uint64_t)v235, &qword_2542E76C0);
  sub_23AAB7528((uint64_t)v235);
  sub_23AAB7E4C(v171, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  sub_23AA724E8((uint64_t)v235, (uint64_t)&v238, &qword_2542E76C0);
  if (!v238)
  {
LABEL_260:
    v102 = 0;
    if (!v101)
    {
LABEL_258:
      if (!v102)
        goto LABEL_266;
      goto LABEL_264;
    }
  }
  else
  {
    v102 = sub_23AF21B70(v238);
    sub_23AAB7500((uint64_t)v235);
    if (!v101)
      goto LABEL_258;
  }
  if (!v102)
  {
LABEL_264:
    swift_bridgeObjectRelease();
    goto LABEL_265;
  }
  v103 = swift_bridgeObjectRetain();
  v104 = sub_23AF1BAE4(v103, v102);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if ((v104 & 1) == 0)
LABEL_265:
    v145 |= 0x4000000000000uLL;
LABEL_266:
  sub_23AA724E8(v96, (uint64_t)v122, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v122, (uint64_t)v123, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v123) == 1)
  {
    v105 = 0;
    v106 = 0;
  }
  else
  {
    v105 = v123[29];
    v106 = v123[30];
    swift_bridgeObjectRetain();
  }
  sub_23AAA4B74((uint64_t)v172);
  sub_23AA724E8((uint64_t)v172, (uint64_t)v173, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v173) == 1)
  {
    if (!v106)
      goto LABEL_280;
    goto LABEL_279;
  }
  v107 = v173[29];
  v108 = v173[30];
  swift_bridgeObjectRetain();
  sub_23AAB7E4C(v172, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  if (!v106)
  {
    if (!v108)
    {
LABEL_280:
      v109 = 0;
      goto LABEL_297;
    }
    goto LABEL_279;
  }
  if (!v108)
  {
LABEL_279:
    swift_bridgeObjectRelease();
    v109 = 1;
    goto LABEL_297;
  }
  if (v105 == v107 && v106 == v108)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v109 = 0;
  }
  else
  {
    v117 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v109 = v117 ^ 1;
  }
LABEL_297:
  sub_23AF21C5C(0x8000000000000, v109 & 1);
  return v145;
}

uint64_t sub_23AE54894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  _BOOL4 v42;
  _BOOL4 v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  _QWORD *v90;
  _QWORD *v91;
  char v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  char v97;
  int v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE v129[248];
  _QWORD v130[31];
  _BYTE v131[248];
  _QWORD v132[31];
  _BYTE v133[248];
  _QWORD v134[31];
  _QWORD v135[31];
  _QWORD v136[31];
  _QWORD v137[31];
  _BYTE v138[192];
  _QWORD *v139;
  _QWORD *v140;
  _BYTE v141[192];
  _QWORD *v142;
  _QWORD *v143;
  _BYTE v144[184];
  _QWORD *v145;
  _BYTE v146[248];
  _BYTE v147[248];
  _QWORD v148[31];
  _QWORD v149[31];
  _QWORD v150[31];
  _QWORD v151[31];
  _QWORD v152[31];
  _QWORD v153[31];
  _BYTE v154[112];
  uint64_t v155;
  uint64_t v156;
  _BYTE v157[248];
  _BYTE v158[248];
  _BYTE v159[248];
  _BYTE v160[248];
  _BYTE v161[80];
  uint64_t v162;
  uint64_t v163;
  _BYTE v164[248];
  _BYTE v165[248];
  _QWORD v166[31];
  _QWORD v167[31];
  _BYTE v168[40];
  uint64_t v169;
  uint64_t v170;
  _BYTE v171[248];
  _BYTE v172[248];
  _BYTE v173[248];
  _BYTE v174[248];
  _BYTE v175[32];
  unsigned __int8 v176;
  _QWORD v177[31];
  _QWORD v178[31];
  _BYTE v179[16];
  uint64_t v180;
  _BYTE v181[248];
  _BYTE v182[248];
  _BYTE v183[248];
  _BYTE v184[248];
  _BYTE v185[248];
  _QWORD v186[31];
  _BYTE v187[248];
  _QWORD v188[31];
  uint64_t v189;

  v2 = v1;
  v3 = MEMORY[0x24BDAC7A8](a1);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v121 - v8;
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_BYTE *)(v2 + 24);
  v12 = *(_QWORD *)(v2 + 128);
  v128 = *(_QWORD *)(v2 + 136);
  v13 = v128;
  v124 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  sub_23AA907B0(v2 + *(int *)(v124 + 48), (uint64_t)&v9[*(int *)(v4 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *(_QWORD *)v9 = v10;
  v9[8] = v11;
  *((_QWORD *)v9 + 2) = v12;
  *((_QWORD *)v9 + 3) = v13;
  v127 = *(_QWORD *)(v3 + 16);
  LOBYTE(v10) = *(_BYTE *)(v3 + 24);
  v15 = *(_QWORD *)(v3 + 32);
  v14 = *(_QWORD *)(v3 + 40);
  v16 = type metadata accessor for VFSItem(0);
  sub_23AA907B0(v3 + *(int *)(v16 + 28), (uint64_t)&v7[*(int *)(v4 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *(_QWORD *)v7 = v127;
  v7[8] = v10;
  *((_QWORD *)v7 + 2) = v15;
  *((_QWORD *)v7 + 3) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_23AE1D818(v7, 0, 0);
  sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E1DF0);
  sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E1DF0);
  v128 = v17;
  v189 = v17;
  v18 = *(_QWORD *)(v2 + 32);
  v19 = *(_DWORD *)(v2 + 40);
  v122 = *(_QWORD *)(v2 + 48);
  v123 = v16;
  v20 = *(_BYTE *)(v2 + 56);
  v21 = v3 + *(int *)(v16 + 36);
  v22 = *(_QWORD *)v21;
  v23 = *(_DWORD *)(v21 + 8);
  v121 = *(_QWORD *)(v21 + 16);
  v24 = *(_BYTE *)(v21 + 24);
  v127 = *(_QWORD *)(v3 + 16);
  v126 = *(unsigned __int8 *)(v3 + 24);
  v25 = *(_QWORD *)(v3 + 40);
  v125 = *(_QWORD *)(v3 + 32);
  swift_bridgeObjectRelease_n();
  if (v18 != v22 || v19 != v23)
    goto LABEL_10;
  if ((v20 & 1) != 0)
  {
    if ((v24 & 1) != 0)
      goto LABEL_11;
LABEL_10:
    v128 |= 8uLL;
    v189 = v128;
    goto LABEL_11;
  }
  if (v122 == v121)
    v26 = v24;
  else
    v26 = 1;
  if ((v26 & 1) != 0)
    goto LABEL_10;
LABEL_11:
  v27 = *(_QWORD *)(v2 + 72);
  v28 = *(_QWORD *)(v2 + 88);
  v29 = *(_QWORD *)(v2 + 96);
  v30 = *(_BYTE *)(v2 + 80);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  LOBYTE(v28) = sub_23B14ABA0(v27, v30, v28, v29, v127, v126, v125, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
  {
    v31 = v128;
  }
  else
  {
    v31 = v128 | 0x20000000000;
    v189 = v128 | 0x20000000000;
  }
  v32 = v123;
  v33 = v2 + *(int *)(v124 + 52);
  sub_23AA724E8(v33, (uint64_t)v187, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v187, (uint64_t)v188, &qword_2542E5050);
  v34 = sub_23AAFCF2C((uint64_t)v188);
  v35 = v188[0];
  v36 = v3 + *(int *)(v32 + 32);
  sub_23AA724E8(v36, (uint64_t)v185, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v185, (uint64_t)v186, &qword_2542E5050);
  v37 = sub_23AAFCF2C((uint64_t)v186);
  if (v34 == 1)
  {
    if (v37 == 1)
      goto LABEL_20;
LABEL_19:
    v31 |= 0x40000uLL;
    v189 = v31;
    goto LABEL_20;
  }
  if (v37 == 1 || v35 != v186[0])
    goto LABEL_19;
LABEL_20:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v184, &qword_2542E5050);
  v38 = sub_23AAFCF2C((uint64_t)v184);
  v39 = v184[8];
  sub_23AA724E8((uint64_t)v187, (uint64_t)v183, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v183) == 1)
  {
    if (v38 == 1)
      goto LABEL_26;
LABEL_25:
    v31 |= 0x80000uLL;
    v189 = v31;
    goto LABEL_26;
  }
  if (v38 == 1 || ((v39 ^ v183[8]) & 1) != 0)
    goto LABEL_25;
LABEL_26:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v182, &qword_2542E5050);
  v40 = sub_23AAFCF2C((uint64_t)v182);
  v41 = v182[9];
  sub_23AA724E8((uint64_t)v187, (uint64_t)v181, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v181) == 1)
  {
    v42 = 0;
    if (v40 != 1)
    {
      v31 |= 0x100000uLL;
      v189 = v31;
    }
  }
  else
  {
    if (v40 == 1 || v41 != v181[9])
    {
      v31 |= 0x100000uLL;
      v189 = v31;
    }
    sub_23AA724E8((uint64_t)v187, (uint64_t)v179, &qword_2542E5050);
    v42 = v180 != 0;
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v179, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v179) != 1 && v180)
  {
    if (v42)
      goto LABEL_38;
    goto LABEL_37;
  }
  if (v42)
  {
LABEL_37:
    v31 |= 0x200000uLL;
    v189 = v31;
  }
LABEL_38:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v178, &qword_2542E5050);
  v44 = sub_23AAFCF2C((uint64_t)v178) != 1 && v178[3] != 0;
  sub_23AA724E8((uint64_t)v185, (uint64_t)v177, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v177) == 1 || !v177[3])
  {
    if (!v44)
      goto LABEL_52;
  }
  else if (v44)
  {
    sub_23AA724E8((uint64_t)v185, (uint64_t)v175, &qword_2542E5050);
    goto LABEL_54;
  }
  v31 |= 0x400000uLL;
  v189 = v31;
LABEL_52:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v175, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v175) == 1)
  {
    v45 = 2;
    goto LABEL_55;
  }
LABEL_54:
  v45 = v176;
LABEL_55:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v175, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v175) == 1)
  {
    if (v45 == 2)
      goto LABEL_61;
LABEL_60:
    v31 |= 0x1000000uLL;
    v189 = v31;
    goto LABEL_61;
  }
  if (v45 == 2 || (((v45 == 0) ^ v176) & 1) == 0)
    goto LABEL_60;
LABEL_61:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v174, &qword_2542E5050);
  v46 = sub_23AAFCF2C((uint64_t)v174);
  v47 = v174[33];
  sub_23AA724E8((uint64_t)v187, (uint64_t)v173, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v173) == 1)
  {
    if (v46 == 1)
      goto LABEL_67;
LABEL_66:
    v31 |= 0x2000000uLL;
    v189 = v31;
    goto LABEL_67;
  }
  if (v46 == 1 || ((v47 ^ v173[33]) & 1) != 0)
    goto LABEL_66;
LABEL_67:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v172, &qword_2542E5050);
  v48 = sub_23AAFCF2C((uint64_t)v172);
  v49 = v172[34];
  sub_23AA724E8((uint64_t)v187, (uint64_t)v171, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v171) == 1)
  {
    v50 = 0;
    if (v48 == 1)
    {
      v51 = 0;
    }
    else
    {
      v51 = 0;
      v31 |= 0x4000000uLL;
      v189 = v31;
    }
  }
  else
  {
    if (v48 == 1 || v49 != v171[34])
    {
      v31 |= 0x4000000uLL;
      v189 = v31;
    }
    sub_23AA724E8((uint64_t)v187, (uint64_t)v168, &qword_2542E5050);
    v50 = v169;
    v51 = v170;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v168, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v168) == 1)
  {
    if (!v51)
      goto LABEL_87;
    goto LABEL_85;
  }
  v52 = v169;
  v53 = v170;
  swift_bridgeObjectRetain();
  if (!v51)
  {
    if (!v53)
      goto LABEL_87;
    goto LABEL_85;
  }
  if (!v53)
  {
LABEL_85:
    swift_bridgeObjectRelease();
LABEL_86:
    v31 |= 0x8000000uLL;
    v189 = v31;
    goto LABEL_87;
  }
  if (v50 == v52 && v51 == v53)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_87;
  }
  v112 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v112 & 1) == 0)
    goto LABEL_86;
LABEL_87:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v167, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v167) == 1)
  {
    v54 = 0;
    v55 = 0;
  }
  else
  {
    v54 = v167[7];
    v55 = v167[8];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v166, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v166) == 1)
  {
    if (!v55)
      goto LABEL_102;
    goto LABEL_100;
  }
  v56 = v166[7];
  v57 = v166[8];
  swift_bridgeObjectRetain();
  if (!v55)
  {
    if (!v57)
      goto LABEL_102;
    goto LABEL_100;
  }
  if (!v57)
  {
LABEL_100:
    swift_bridgeObjectRelease();
LABEL_101:
    v31 |= 0x10000000uLL;
    v189 = v31;
    goto LABEL_102;
  }
  if (v54 == v56 && v55 == v57)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_102;
  }
  v113 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v113 & 1) == 0)
    goto LABEL_101;
LABEL_102:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v165, &qword_2542E5050);
  v58 = sub_23AAFCF2C((uint64_t)v165);
  v59 = v165[72];
  sub_23AA724E8((uint64_t)v187, (uint64_t)v164, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v164) == 1)
  {
    v60 = 0;
    if (v58 == 1)
    {
      v61 = 0;
    }
    else
    {
      v61 = 0;
      v31 |= 0x20000000uLL;
      v189 = v31;
    }
  }
  else
  {
    if (v58 == 1 || v59 != v164[72])
    {
      v31 |= 0x20000000uLL;
      v189 = v31;
    }
    sub_23AA724E8((uint64_t)v187, (uint64_t)v161, &qword_2542E5050);
    v60 = v162;
    v61 = v163;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v161, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v161) == 1)
  {
    if (!v61)
      goto LABEL_122;
    goto LABEL_120;
  }
  v62 = v162;
  v63 = v163;
  swift_bridgeObjectRetain();
  if (!v61)
  {
    if (!v63)
      goto LABEL_122;
    goto LABEL_120;
  }
  if (!v63)
  {
LABEL_120:
    swift_bridgeObjectRelease();
LABEL_121:
    v31 |= 0x40000000uLL;
    v189 = v31;
    goto LABEL_122;
  }
  if (v60 == v62 && v61 == v63)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_122;
  }
  v114 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v114 & 1) == 0)
    goto LABEL_121;
LABEL_122:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v160, &qword_2542E5050);
  v64 = sub_23AAFCF2C((uint64_t)v160);
  v65 = v160[104];
  sub_23AA724E8((uint64_t)v187, (uint64_t)v159, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v159) == 1)
  {
    if (v64 == 1)
      goto LABEL_128;
LABEL_127:
    v31 |= 0x80000000uLL;
    v189 = v31;
    goto LABEL_128;
  }
  if (v64 == 1 || ((v65 ^ v159[104]) & 1) != 0)
    goto LABEL_127;
LABEL_128:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v158, &qword_2542E5050);
  v66 = sub_23AAFCF2C((uint64_t)v158);
  v67 = v158[105];
  sub_23AA724E8((uint64_t)v187, (uint64_t)v157, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v157) == 1)
  {
    v68 = 0;
    if (v66 == 1)
    {
      v69 = 0;
    }
    else
    {
      v69 = 0;
      v31 |= 0x100000000uLL;
      v189 = v31;
    }
  }
  else
  {
    if (v66 == 1 || v67 != v157[105])
    {
      v31 |= 0x100000000uLL;
      v189 = v31;
    }
    sub_23AA724E8((uint64_t)v187, (uint64_t)v154, &qword_2542E5050);
    v68 = v155;
    v69 = v156;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v154, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v154) == 1)
  {
    if (!v69)
      goto LABEL_148;
    goto LABEL_146;
  }
  v70 = v155;
  v71 = v156;
  swift_bridgeObjectRetain();
  if (!v69)
  {
    if (!v71)
      goto LABEL_148;
    goto LABEL_146;
  }
  if (!v71)
  {
LABEL_146:
    swift_bridgeObjectRelease();
LABEL_147:
    v31 |= 0x200000000uLL;
    v189 = v31;
    goto LABEL_148;
  }
  if (v68 == v70 && v69 == v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_148;
  }
  v115 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v115 & 1) == 0)
    goto LABEL_147;
LABEL_148:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v153, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v153) == 1)
  {
    v72 = 0;
    v73 = 0;
  }
  else
  {
    v72 = v153[16];
    v73 = v153[17];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v152, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v152) == 1)
  {
    if (!v73)
      goto LABEL_163;
    goto LABEL_161;
  }
  v74 = v152[16];
  v75 = v152[17];
  swift_bridgeObjectRetain();
  if (!v73)
  {
    if (!v75)
      goto LABEL_163;
    goto LABEL_161;
  }
  if (!v75)
  {
LABEL_161:
    swift_bridgeObjectRelease();
LABEL_162:
    v31 |= 0x400000000uLL;
    v189 = v31;
    goto LABEL_163;
  }
  if (v72 == v74 && v73 == v75)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_163;
  }
  v116 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v116 & 1) == 0)
    goto LABEL_162;
LABEL_163:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v151, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v151) == 1)
  {
    v76 = 0;
    v77 = 0;
  }
  else
  {
    v76 = v151[18];
    v77 = v151[19];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v150, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v150) == 1)
  {
    if (!v77)
      goto LABEL_178;
    goto LABEL_176;
  }
  v78 = v150[18];
  v79 = v150[19];
  swift_bridgeObjectRetain();
  if (!v77)
  {
    if (!v79)
      goto LABEL_178;
    goto LABEL_176;
  }
  if (!v79)
  {
LABEL_176:
    swift_bridgeObjectRelease();
LABEL_177:
    v31 |= 0x800000000uLL;
    v189 = v31;
    goto LABEL_178;
  }
  if (v76 == v78 && v77 == v79)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_178;
  }
  v117 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v117 & 1) == 0)
    goto LABEL_177;
LABEL_178:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v149, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v149) == 1)
  {
    v80 = 0;
    v81 = 0;
  }
  else
  {
    v80 = v149[20];
    v81 = v149[21];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v148, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v148) == 1)
  {
    if (!v81)
      goto LABEL_193;
    goto LABEL_191;
  }
  v82 = v148[20];
  v83 = v148[21];
  swift_bridgeObjectRetain();
  if (!v81)
  {
    if (!v83)
      goto LABEL_193;
    goto LABEL_191;
  }
  if (!v83)
  {
LABEL_191:
    swift_bridgeObjectRelease();
LABEL_192:
    v31 |= 0x1000000000uLL;
    v189 = v31;
    goto LABEL_193;
  }
  swift_bridgeObjectRetain();
  v84 = sub_23AB55DFC(v80, v81);
  v86 = v85;
  if (v84 == sub_23AB55DFC(v82, v83) && v86 == v87)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_193;
  }
  v118 = sub_23B1C7388();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v118 & 1) == 0)
    goto LABEL_192;
LABEL_193:
  sub_23AA724E8((uint64_t)v185, (uint64_t)v147, &qword_2542E5050);
  v88 = sub_23AAFCF2C((uint64_t)v147);
  v89 = v147[176];
  sub_23AA724E8((uint64_t)v187, (uint64_t)v146, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v146) == 1)
  {
    if (v88 == 1)
    {
      v90 = 0;
    }
    else
    {
      v90 = 0;
      v31 |= 0x2000000000uLL;
      v189 = v31;
    }
  }
  else
  {
    if (v88 == 1 || v89 != v146[176])
    {
      v31 |= 0x2000000000uLL;
      v189 = v31;
    }
    sub_23AA724E8((uint64_t)v187, (uint64_t)v144, &qword_2542E5050);
    v90 = v145;
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v144, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v144) == 1)
  {
    if (!v90)
      goto LABEL_212;
    goto LABEL_210;
  }
  v91 = v145;
  swift_bridgeObjectRetain();
  if (!v90)
  {
    if (!v91)
      goto LABEL_212;
    goto LABEL_210;
  }
  if (!v91)
  {
LABEL_210:
    swift_bridgeObjectRelease();
    goto LABEL_211;
  }
  v92 = sub_23AF1B25C(v90, v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v92 & 1) == 0)
  {
LABEL_211:
    v31 |= 0x4000000000uLL;
    v189 = v31;
  }
LABEL_212:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v141, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v141) == 1)
  {
    v93 = 0;
    v94 = 0;
  }
  else
  {
    v93 = v142;
    v94 = v143;
    sub_23AA8831C((uint64_t)v142);
  }
  sub_23AA724E8((uint64_t)v185, (uint64_t)v138, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v138) != 1)
  {
    v95 = v139;
    v96 = v140;
    sub_23AA8831C((uint64_t)v139);
    if (!v93)
    {
      if (!v95)
        goto LABEL_226;
      sub_23AAA5C9C((uint64_t)v95);
LABEL_225:
      v31 |= 0x8000000000uLL;
      v189 = v31;
      goto LABEL_226;
    }
    if (v95)
    {
      if ((sub_23AF1B25C(v93, v95) & 1) != 0)
      {
        v97 = sub_23AF1B25C(v94, v96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AAA5C9C((uint64_t)v93);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v97 & 1) != 0)
          goto LABEL_226;
        goto LABEL_225;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AAA5C9C((uint64_t)v93);
      swift_bridgeObjectRelease();
      goto LABEL_224;
    }
LABEL_223:
    swift_bridgeObjectRelease();
LABEL_224:
    swift_bridgeObjectRelease();
    goto LABEL_225;
  }
  if (v93)
    goto LABEL_223;
LABEL_226:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v137, &qword_2542E5050);
  v98 = sub_23AAFCF2C((uint64_t)v137);
  v99 = v137[26];
  sub_23AA724E8((uint64_t)v185, (uint64_t)v136, &qword_2542E5050);
  v100 = sub_23AAFCF2C((uint64_t)v136);
  if (v98 == 1)
  {
    if (v100 == 1)
      goto LABEL_232;
    goto LABEL_231;
  }
  if (v100 == 1 || v99 != v136[26])
LABEL_231:
    v189 = v31 | 0x2000000000000;
LABEL_232:
  sub_23AA724E8((uint64_t)v187, (uint64_t)v135, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v135) == 1 || !v135[28])
  {
    v102 = 0;
  }
  else
  {
    v101 = swift_bridgeObjectRetain();
    v102 = sub_23AF21B70(v101);
    swift_bridgeObjectRelease();
  }
  sub_23AA724E8(v36, (uint64_t)v133, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v133, (uint64_t)v134, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v134) != 1 && v134[28])
  {
    v103 = swift_bridgeObjectRetain();
    v104 = sub_23AF21B70(v103);
    swift_bridgeObjectRelease();
    if (!v102)
      goto LABEL_239;
LABEL_242:
    if (v104)
    {
      v105 = swift_bridgeObjectRetain();
      v106 = sub_23AF1BAE4(v105, v104);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if ((v106 & 1) != 0)
        goto LABEL_247;
      goto LABEL_246;
    }
LABEL_245:
    swift_bridgeObjectRelease();
LABEL_246:
    v189 |= 0x4000000000000uLL;
    goto LABEL_247;
  }
  v104 = 0;
  if (v102)
    goto LABEL_242;
LABEL_239:
  if (v104)
    goto LABEL_245;
LABEL_247:
  sub_23AA724E8(v33, (uint64_t)v131, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v131, (uint64_t)v132, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v132) == 1)
  {
    v107 = 0;
    v108 = 0;
  }
  else
  {
    v107 = v132[29];
    v108 = v132[30];
    swift_bridgeObjectRetain();
  }
  sub_23AA724E8(v36, (uint64_t)v129, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v129, (uint64_t)v130, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v130) == 1)
  {
    if (!v108)
      goto LABEL_263;
    goto LABEL_262;
  }
  v109 = v130[29];
  v110 = v130[30];
  swift_bridgeObjectRetain();
  if (!v108)
  {
    if (!v110)
    {
LABEL_263:
      v111 = 0;
      goto LABEL_280;
    }
    goto LABEL_262;
  }
  if (!v110)
  {
LABEL_262:
    swift_bridgeObjectRelease();
    v111 = 1;
    goto LABEL_280;
  }
  if (v107 == v109 && v108 == v110)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v111 = 0;
  }
  else
  {
    v119 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v111 = v119 ^ 1;
  }
LABEL_280:
  sub_23AF21C5C(0x8000000000000, v111 & 1);
  return v189;
}

void sub_23AE55E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  MEMORY[0x24BDAC7A8](v2);
  sub_23AA8EFC8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_2542E0F90);
  v4 = (char *)sub_23AE55F3C + 4 * byte_23B1DAE51[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE55F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E88);
  sub_23AA724E8(v1, v0, (uint64_t *)&unk_2542E4760);
  *(_QWORD *)(v2 - 80) = 0x747265736E69;
  *(_QWORD *)(v2 - 72) = 0xE600000000000000;
  sub_23ADF78A4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 - 80);
  sub_23AA8A05C(v0, (uint64_t *)&unk_2542E4760);
  return v3;
}

void sub_23AE562E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  MEMORY[0x24BDAC7A8](v2);
  sub_23AA8EFC8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_2542DDDA0);
  v4 = (char *)sub_23AE563B4 + 4 * byte_23B1DAE57[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE563B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E90);
  sub_23AA724E8(v1, v0, (uint64_t *)&unk_2542E6B00);
  *(_QWORD *)(v2 - 80) = 0x747265736E69;
  *(_QWORD *)(v2 - 72) = 0xE600000000000000;
  sub_23ADF7370();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 - 80);
  sub_23AA8A05C(v0, (uint64_t *)&unk_2542E6B00);
  return v3;
}

_QWORD *sub_23AE567A4(void *a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;
  _QWORD *v5;
  dispatch_group_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = (_QWORD *)v4;
  swift_retain();
  v10 = dispatch_group_create();
  *(_QWORD *)(v4 + 56) = v10;
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55E0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23B1CA760;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
  *(_BYTE *)(v11 + 32) = sub_23AE58240();
  *(_QWORD *)(v4 + 88) = v11;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_23B1D3B90;
  *(_BYTE *)(v12 + 32) = sub_23AE58240();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69B0);
  *(_BYTE *)(v12 + 33) = sub_23AE58240();
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E6928);
  *(_BYTE *)(v12 + 34) = sub_23AE58240();
  *(_QWORD *)(v4 + 96) = v12;
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 48) = (a4 & 2) == 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4CD0);
  swift_allocObject();
  v13 = a1;
  swift_bridgeObjectRetain();
  v14 = v10;
  *(_QWORD *)(v4 + 24) = sub_23AE0E394(v13, a2, a3, 0, v14, a4);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E4CD8);
  swift_allocObject();
  v15 = v13;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v4 + 32) = sub_23AE0E1E0(v15, a2, a3, 1, v14, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4FA0);
  swift_allocObject();
  v16 = v15;
  v17 = sub_23AEAB494(v16, a2, a3, a4 & 1);

  v5[5] = v17;
  v18 = sub_23AA7E454(0, 0xE000000000000000, &qword_2542E73E0, (uint64_t (*)(uint64_t))sub_23AD7EEE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA90B0);
  v20 = v19;

  v5[8] = v18;
  v5[9] = v20;
  swift_release();
  v21 = v5[3];
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = *(_QWORD *)(v21 + 80);
  *(_QWORD *)(v21 + 80) = sub_23AEB4C80;
  *(_QWORD *)(v21 + 88) = v22;
  sub_23AAB7948(v23);
  v24 = v5[4];
  v25 = swift_allocObject();
  swift_weakInit();
  v26 = *(_QWORD *)(v24 + 80);
  *(_QWORD *)(v24 + 80) = sub_23AEB4C88;
  *(_QWORD *)(v24 + 88) = v25;
  sub_23AAB7948(v26);
  v27 = v5[5];
  v28 = swift_allocObject();
  swift_weakInit();
  v29 = *(_QWORD *)(v27 + 24);
  *(_QWORD *)(v27 + 24) = sub_23AEB4C80;
  *(_QWORD *)(v27 + 32) = v28;
  sub_23AAB7948(v29);
  return v5;
}

uint64_t sub_23AE56AA4()
{
  uint64_t Strong;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return 0;
  Strong = swift_weakLoadStrong();
  swift_release();
  return Strong;
}

uint64_t sub_23AE56B0C()
{
  uint64_t Strong;
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return Strong;
  v1 = swift_weakLoadStrong();
  result = swift_release();
  if (v1)
  {
    Strong = (uint64_t)sub_23AE4F234();
    swift_release();
    return Strong;
  }
  __break(1u);
  return result;
}

void sub_23AE56B84(uint64_t a1, uint64_t a2, void (*a3)(unint64_t))
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = *(void **)(v3 + 16);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v3;
  v9[3] = a1;
  v9[4] = a2;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = sub_23AEB1678;
  v10[3] = v9;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v10;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_217;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v12 = objc_msgSend(v8, sel_fetchSwift_error_, v11, aBlock);
  _Block_release(v11);
  v13 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v12)
  {
    if (objc_msgSend(v12, sel_next))
    {
      while (1)
      {
        v15 = (void *)MEMORY[0x23B8601A8]();
        v16 = sub_23AD7EEE8();
        v17 = sub_23AE7A008(v16, v12, 0);
        if (v4)
          break;
        v18 = v17;
        swift_bridgeObjectRelease();
        a3(v18);
        swift_release();
        objc_autoreleasePoolPop(v15);
        if ((objc_msgSend(v12, sel_next) & 1) == 0)
          goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v15);
    }
LABEL_9:
    swift_release();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_23AE56DE8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  a3(a1);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0x205443454C4553;
}

uint64_t sub_23AE56EC4(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  void **v14;
  void **v15;
  _BYTE *v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unsigned int v29;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  unsigned __int8 v34;
  id v35;
  uint64_t v36;
  id aBlock;
  uint64_t v38;
  id (*v39)(uint64_t, void *);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *(void **)(v1 + 16);
  objc_msgSend(v3, sel_assertOnQueue);
  if (a1 < 0)
    v4 = (a1 & 0x7FFFFFFFFFFFFFFFLL) + 48;
  else
    v4 = a1 + 48;
  swift_beginAccess();
  sub_23AA8EFC8(v4, (uint64_t)&aBlock, &qword_2542E16F0);
  if (!v40)
  {
    sub_23AA8A05C((uint64_t)&aBlock, &qword_2542E16F0);
LABEL_44:
    sub_23AFF0544((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLJobRegistry.swift", 133, 2, 187);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E16E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_44;
  if (a1 < 0)
  {
    v6 = *(unsigned __int8 *)(a1 + 104);
    if (v6 != 3)
    {
      v7 = a1 & 0x7FFFFFFFFFFFFFFFLL;
      if (v6 != 4
        || *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x58) & 0xFFFFFFFFFFFFFFFELL | *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL)
                                                                                              + 0x60))
      {
        goto LABEL_21;
      }
    }
    goto LABEL_14;
  }
  v5 = *(unsigned __int8 *)(a1 + 104);
  if (v5 == 3 || v5 == 4 && !(*(_QWORD *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL | *(_QWORD *)(a1 + 96)))
  {
LABEL_14:
    if (*(_BYTE *)(v1 + 48) == 1)
    {
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v36;
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = sub_23AEB1918;
      *(_QWORD *)(v9 + 24) = v8;
      v41 = sub_23AA956C8;
      v42 = v9;
      aBlock = (id)MEMORY[0x24BDAC760];
      v38 = 1107296256;
      v39 = sub_23AA9432C;
      v40 = &block_descriptor_257_0;
      v10 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      aBlock = 0;
      v11 = objc_msgSend(v3, sel_executeSwift_error_, v10, &aBlock);
      _Block_release(v10);
      v12 = aBlock;
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
      {
        if (!v11)
          goto LABEL_34;
        return swift_release();
      }
      goto LABEL_41;
    }
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_19;
    v7 = a1 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_21:
    v14 = (void **)(v7 + 88);
    v15 = (void **)(v7 + 96);
    v16 = (_BYTE *)(v7 + 104);
    goto LABEL_22;
  }
LABEL_19:
  v14 = (void **)(a1 + 88);
  v15 = (void **)(a1 + 96);
  v16 = (_BYTE *)(a1 + 104);
LABEL_22:
  if (*v16 == 1)
  {
    v17 = *v14;
    if (*v14)
    {
      v18 = *v15;
      v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 88);
      v20 = swift_retain();
      v21 = v19(v20);
      if (v23 == 3 && v21 == 1 && v22 == 0)
      {
        v31 = swift_allocObject();
        *(_QWORD *)(v31 + 16) = a1;
        *(_QWORD *)(v31 + 24) = v36;
        v32 = swift_allocObject();
        *(_QWORD *)(v32 + 16) = sub_23AEB18F0;
        *(_QWORD *)(v32 + 24) = v31;
        v41 = sub_23AA956C8;
        v42 = v32;
        aBlock = (id)MEMORY[0x24BDAC760];
        v38 = 1107296256;
        v39 = sub_23AA9432C;
        v40 = &block_descriptor_247;
        v33 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        aBlock = 0;
        v34 = objc_msgSend(v3, sel_executeSwift_error_, v33, &aBlock);
        _Block_release(v33);
        v35 = aBlock;
        LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v33 & 1) == 0)
        {
          if ((v34 & 1) == 0)
          {
            sub_23B1C587C();

            swift_willThrow();
          }
          sub_23AAAEE10(v17, v18, 1);
          return swift_release();
        }
LABEL_42:
        __break(1u);
      }
      sub_23AB7C0C4(v21, v22, v23);
      sub_23AAAEE10(v17, v18, 1);
    }
  }
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = v36;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_23AEB18AC;
  *(_QWORD *)(v27 + 24) = v26;
  v41 = sub_23AA956C8;
  v42 = v27;
  aBlock = (id)MEMORY[0x24BDAC760];
  v38 = 1107296256;
  v39 = sub_23AA9432C;
  v40 = &block_descriptor_237;
  v28 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v29 = objc_msgSend(v3, sel_executeSwift_error_, v28, &aBlock);
  _Block_release(v28);
  v12 = aBlock;
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v28 & 1) != 0)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!v29)
  {
LABEL_34:
    sub_23B1C587C();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_23AE5743C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_23B1C64F4();
  v6 = *(void **)(a2 + 88);
  v5 = *(void **)(a2 + 96);
  v7 = *(_BYTE *)(a2 + 104);
  sub_23AAAE478(v6, v5, v7);
  sub_23ADFDFE8(v6, v5, v7, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_23AAAEE10(v6, v5, v7);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v8 = *(_QWORD *)(a2 + 120);
  v16 = MEMORY[0x24BEE1768];
  v15[0] = v8;
  sub_23AA94C90((uint64_t)v15);
  v10 = v9;
  sub_23AA8A05C((uint64_t)v15, qword_2542E5640);
  if (!v10)
    goto LABEL_4;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v11 = *(_QWORD *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x70);
  v16 = MEMORY[0x24BEE1E88];
  v15[0] = v11;
  sub_23AA94C90((uint64_t)v15);
  v13 = v12;
  sub_23AA8A05C((uint64_t)v15, qword_2542E5640);
  if (v13)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AC396B8(a3, 0);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
LABEL_4:
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

unint64_t sub_23AE576C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a2 + 88);
  v5 = *(void **)(a2 + 96);
  LOBYTE(a2) = *(_BYTE *)(a2 + 104);
  sub_23AAAE478(v6, v5, a2);
  sub_23ADFDFE8(v6, v5, a2, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_23AAAEE10(v6, v5, a2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AC396B8(a3, 0);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

uint64_t sub_23AE57808()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5ED0);
  if (swift_dynamicCastMetatype())
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5568);
  if (swift_dynamicCastMetatype())
    return 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6120);
  if (swift_dynamicCastMetatype())
    return 2;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
  if (swift_dynamicCastMetatype())
    return 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE630);
  if (swift_dynamicCastMetatype())
    return 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6118);
  if (swift_dynamicCastMetatype())
    return 5;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
  if (swift_dynamicCastMetatype())
    return 6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F20);
  if (swift_dynamicCastMetatype())
    return 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0DD0);
  if (swift_dynamicCastMetatype())
    return 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6110);
  if (swift_dynamicCastMetatype())
    return 9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5570);
  if (swift_dynamicCastMetatype())
    return 10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6100);
  if (swift_dynamicCastMetatype())
    return 11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60F8);
  if (swift_dynamicCastMetatype())
    return 12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60F0);
  if (swift_dynamicCastMetatype())
    return 13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60E8);
  if (swift_dynamicCastMetatype())
    return 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60E0);
  if (swift_dynamicCastMetatype())
    return 15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60D8);
  if (swift_dynamicCastMetatype())
    return 16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60D0);
  if (swift_dynamicCastMetatype())
    return 17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60C8);
  if (swift_dynamicCastMetatype())
    return 18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60C0);
  if (swift_dynamicCastMetatype())
    return 19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5578);
  if (swift_dynamicCastMetatype())
    return 20;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E60B0);
  if (swift_dynamicCastMetatype())
    return 21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60A8);
  if (swift_dynamicCastMetatype())
    return 22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60A0);
  if (swift_dynamicCastMetatype())
    return 23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6098);
  if (swift_dynamicCastMetatype())
    return 24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6090);
  if (swift_dynamicCastMetatype())
    return 25;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E0660);
  if (swift_dynamicCastMetatype())
    return 26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6088);
  if (swift_dynamicCastMetatype())
    return 27;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E98);
  if (swift_dynamicCastMetatype())
    return 28;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E0810);
  if (swift_dynamicCastMetatype())
    return 29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6080);
  if (swift_dynamicCastMetatype())
    return 30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6078);
  if (swift_dynamicCastMetatype())
    return 31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE408);
  if (swift_dynamicCastMetatype())
    return 32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6070);
  if (swift_dynamicCastMetatype())
    return 33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F80);
  if (swift_dynamicCastMetatype())
    return 63;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F78);
  if (swift_dynamicCastMetatype())
    return 64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6068);
  if (swift_dynamicCastMetatype())
    return 34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6060);
  if (swift_dynamicCastMetatype())
    return 35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6058);
  if (swift_dynamicCastMetatype())
    return 36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6050);
  if (swift_dynamicCastMetatype())
    return 37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6048);
  if (swift_dynamicCastMetatype())
    return 38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6040);
  if (swift_dynamicCastMetatype())
    return 39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6038);
  if (swift_dynamicCastMetatype())
    return 40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6030);
  if (swift_dynamicCastMetatype())
    return 41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6028);
  if (swift_dynamicCastMetatype())
    return 42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6020);
  if (swift_dynamicCastMetatype())
    return 43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6018);
  if (swift_dynamicCastMetatype())
    return 44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6010);
  if (swift_dynamicCastMetatype())
    return 45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6008);
  if (swift_dynamicCastMetatype())
    return 46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6000);
  if (swift_dynamicCastMetatype())
    return 47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FF8);
  if (swift_dynamicCastMetatype())
    return 48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FF0);
  if (swift_dynamicCastMetatype())
    return 49;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FE8);
  if (swift_dynamicCastMetatype())
    return 50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FE0);
  if (swift_dynamicCastMetatype())
    return 51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FD8);
  if (swift_dynamicCastMetatype())
    return 52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FD0);
  if (swift_dynamicCastMetatype())
    return 53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FC8);
  if (swift_dynamicCastMetatype())
    return 54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FC0);
  if (swift_dynamicCastMetatype())
    return 55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FB8);
  if (swift_dynamicCastMetatype())
    return 56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FB0);
  if (swift_dynamicCastMetatype())
    return 57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FA8);
  if (swift_dynamicCastMetatype())
    return 58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FA0);
  if (swift_dynamicCastMetatype())
    return 59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F98);
  if (swift_dynamicCastMetatype())
    return 62;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F90);
  if (swift_dynamicCastMetatype())
    return 60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F88);
  if (swift_dynamicCastMetatype())
    return 61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F70);
  if (swift_dynamicCastMetatype())
    return 65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F68);
  if (swift_dynamicCastMetatype())
    return 66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F60);
  if (swift_dynamicCastMetatype())
    return 67;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F58);
  if (swift_dynamicCastMetatype())
    return 68;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F50);
  if (swift_dynamicCastMetatype())
    return 69;
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE58240()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
  if (swift_dynamicCastMetatype())
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69B0);
  if (swift_dynamicCastMetatype())
    return 1;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E6928);
  if (swift_dynamicCastMetatype())
    return 2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
  if (swift_dynamicCastMetatype())
    return 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF8);
  if (swift_dynamicCastMetatype())
    return 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E63A0);
  if (swift_dynamicCastMetatype())
    return 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
  if (swift_dynamicCastMetatype())
    return 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6390);
  if (swift_dynamicCastMetatype())
    return 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6388);
  if (swift_dynamicCastMetatype())
    return 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6380);
  if (swift_dynamicCastMetatype())
    return 9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E61B0);
  if (swift_dynamicCastMetatype())
    return 10;
  __swift_instantiateConcreteTypeFromMangledName(qword_2569E5580);
  if (swift_dynamicCastMetatype())
    return 11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6378);
  if (swift_dynamicCastMetatype())
    return 12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6370);
  if (swift_dynamicCastMetatype())
    return 13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F00);
  if (swift_dynamicCastMetatype())
    return 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6368);
  if (swift_dynamicCastMetatype())
    return 15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6360);
  if (swift_dynamicCastMetatype())
    return 16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6358);
  if (swift_dynamicCastMetatype())
    return 17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6350);
  if (swift_dynamicCastMetatype())
    return 18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6348);
  if (swift_dynamicCastMetatype())
    return 19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61C0);
  if (swift_dynamicCastMetatype())
    return 20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6340);
  if (swift_dynamicCastMetatype())
    return 21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6338);
  if (swift_dynamicCastMetatype())
    return 22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6330);
  if (swift_dynamicCastMetatype())
    return 23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE498);
  if (swift_dynamicCastMetatype())
    return 24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF0);
  if (swift_dynamicCastMetatype())
    return 25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6320);
  if (swift_dynamicCastMetatype())
    return 26;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0800);
  if (swift_dynamicCastMetatype())
    return 27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6318);
  if (swift_dynamicCastMetatype())
    return 28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6310);
  if (swift_dynamicCastMetatype())
    return 29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6308);
  if (swift_dynamicCastMetatype())
    return 30;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E0770);
  if (swift_dynamicCastMetatype())
    return 31;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542DE410);
  if (swift_dynamicCastMetatype())
    return 32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6300);
  if (swift_dynamicCastMetatype())
    return 33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6210);
  if (swift_dynamicCastMetatype())
    return 63;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6208);
  if (swift_dynamicCastMetatype())
    return 64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62F8);
  if (swift_dynamicCastMetatype())
    return 34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62F0);
  if (swift_dynamicCastMetatype())
    return 35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62E8);
  if (swift_dynamicCastMetatype())
    return 36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62E0);
  if (swift_dynamicCastMetatype())
    return 37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62D8);
  if (swift_dynamicCastMetatype())
    return 38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62D0);
  if (swift_dynamicCastMetatype())
    return 39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62C8);
  if (swift_dynamicCastMetatype())
    return 40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62C0);
  if (swift_dynamicCastMetatype())
    return 41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62B8);
  if (swift_dynamicCastMetatype())
    return 42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62B0);
  if (swift_dynamicCastMetatype())
    return 43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62A8);
  if (swift_dynamicCastMetatype())
    return 44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62A0);
  if (swift_dynamicCastMetatype())
    return 45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6298);
  if (swift_dynamicCastMetatype())
    return 46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6290);
  if (swift_dynamicCastMetatype())
    return 47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6288);
  if (swift_dynamicCastMetatype())
    return 48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6280);
  if (swift_dynamicCastMetatype())
    return 49;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6278);
  if (swift_dynamicCastMetatype())
    return 50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6270);
  if (swift_dynamicCastMetatype())
    return 51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6268);
  if (swift_dynamicCastMetatype())
    return 52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6260);
  if (swift_dynamicCastMetatype())
    return 53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6258);
  if (swift_dynamicCastMetatype())
    return 54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6250);
  if (swift_dynamicCastMetatype())
    return 55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6248);
  if (swift_dynamicCastMetatype())
    return 56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6240);
  if (swift_dynamicCastMetatype())
    return 57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6238);
  if (swift_dynamicCastMetatype())
    return 58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6230);
  if (swift_dynamicCastMetatype())
    return 59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6228);
  if (swift_dynamicCastMetatype())
    return 62;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6220);
  if (swift_dynamicCastMetatype())
    return 60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6218);
  if (swift_dynamicCastMetatype())
    return 61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6200);
  if (swift_dynamicCastMetatype())
    return 65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61F8);
  if (swift_dynamicCastMetatype())
    return 66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61F0);
  if (swift_dynamicCastMetatype())
    return 67;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61E8);
  if (swift_dynamicCastMetatype())
    return 68;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61E0);
  if (swift_dynamicCastMetatype())
    return 69;
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

void sub_23AE58C78(uint64_t a1, char a2, unsigned __int8 a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  _BYTE v7[16];
  char *v8;
  uint64_t *v9;
  unsigned __int8 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v13 = a4;
  v14 = a5;
  v15 = 0;
  v12 = a2 & 1 ^ (a3 < 3u);
  v8 = &v12;
  v9 = &v13;
  v10 = a3;
  v11 = a6;
  sub_23AE56B84((uint64_t)sub_23AEB161C, (uint64_t)v7, (void (*)(unint64_t))sub_23AEB1634);
  if (!v6 && v15 > 0)
  {
    if (swift_weakLoadStrong())
    {
      sub_23AE2C874();
      swift_release();
    }
  }
}

void sub_23AE58D3C(uint64_t a1, unsigned __int8 a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _BYTE v6[16];
  _BYTE *v7;
  uint64_t *v8;
  unsigned __int8 v9;
  uint64_t v10;
  _BYTE v11[9];
  uint64_t v12;

  v12 = a4;
  v11[8] = 0;
  *(_QWORD *)v11 = a2 & 1u ^ (a3 < 3u);
  v7 = v11;
  v8 = &v12;
  v9 = a3;
  v10 = a5;
  sub_23AE56B84((uint64_t)sub_23AEB1B64, (uint64_t)v6, (void (*)(unint64_t))sub_23AEB57BC);
  if (!v5 && *(uint64_t *)&v11[1] > 0)
  {
    if (swift_weakLoadStrong())
    {
      sub_23AE2C874();
      swift_release();
    }
  }
}

uint64_t sub_23AE58DFC(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v26 = a4;
  v27 = a5;
  v7 = sub_23B1C6428();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_23B1C6EFC();
  v31 = v28;
  v32 = v29;
  sub_23B1C64F4();
  v11 = *a2;
  v12 = MEMORY[0x24BEE1768];
  v30 = MEMORY[0x24BEE1768];
  v28 = v11;
  sub_23AA94C90((uint64_t)&v28);
  v14 = v13;
  sub_23AA8A05C((uint64_t)&v28, qword_2542E5640);
  if (v14)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C63E0();
    sub_23B1C641C();
    v15 = sub_23B1C63EC();
    v17 = v16;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v17 >> 60 == 15)
    {
      __break(1u);
    }
    else
    {
      v18 = (void *)sub_23B1C5AA4();
      sub_23AAA3E18(v15, v17);
      v19 = objc_msgSend(a1, sel_bindObjectParameter_, v18);

      sub_23B1C63E0();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v20 = qword_23B1DB328[(char)v26];
      v30 = v12;
      v28 = v20;
      sub_23AA94C90((uint64_t)&v28);
      v22 = v21;
      sub_23AA8A05C((uint64_t)&v28, qword_2542E5640);
      if (v22)
      {
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        v28 = 0;
        sub_23B1C7304();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        v30 = v12;
        v28 = v27;
        sub_23AA94C90((uint64_t)&v28);
        v24 = v23;
        sub_23AA8A05C((uint64_t)&v28, qword_2542E5640);
        if (v24)
        {
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          return v31;
        }
      }
    }
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE5917C(void *a1, unsigned __int8 *a2, unint64_t a3, char a4, char a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v25 = 0;
  v26 = 0xE000000000000000;
  sub_23B1C64F4();
  v12 = *a2;
  v13 = MEMORY[0x24BEE1768];
  v24 = MEMORY[0x24BEE1768];
  v23[0] = v12;
  sub_23AA94C90((uint64_t)v23);
  v15 = v14;
  sub_23AA8A05C((uint64_t)v23, qword_2542E5640);
  if (!v15)
    goto LABEL_11;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (!a4)
    goto LABEL_6;
  if (a4 != 1)
  {
    a3 = (unint64_t)(a3 != 0) << 63;
    goto LABEL_8;
  }
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_6:
    a3 = -(uint64_t)a3;
  }
LABEL_8:
  v16 = objc_msgSend(a1, sel_bindLongParameter_, a3);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v17 = qword_23B1DB328[a5];
  v24 = v13;
  v23[0] = v17;
  sub_23AA94C90((uint64_t)v23);
  v19 = v18;
  sub_23AA8A05C((uint64_t)v23, qword_2542E5640);
  if (v19)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v23[0] = 0;
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v24 = v13;
    v23[0] = a6;
    sub_23AA94C90((uint64_t)v23);
    v21 = v20;
    sub_23AA8A05C((uint64_t)v23, qword_2542E5640);
    if (v21)
    {
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      return v25;
    }
  }
LABEL_11:
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE59474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  char v32;
  id v33;
  unint64_t v34;
  void *v35;
  int v36;
  void *v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  char v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  void *v62;
  void *v63;
  int v64;
  void *v65;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  _BOOL4 v70;
  uint64_t *v71;
  uint64_t v72;
  void *v73;
  void *v74;
  unint64_t v75;

  v6 = v5;
  v71 = a5;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F10);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DD0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  v17 = (char *)&v69 - v16;
  v72 = a4;
  if (a1 < 0)
  {
    swift_retain();
    sub_23ADFE870();
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v13, 0, 1, v39);
    if (!swift_weakLoadStrong())
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    v40 = sub_23AE4F234();
    swift_release();
    if (*(_BYTE *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68))
      goto LABEL_79;
    v41 = *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x58);
    v42 = v41 & a3;
    v74 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
    swift_retain();
    v73 = (void *)v41;
    if ((v41 & a3) != 0)
    {
      v75 = v41;
      while (1)
      {
        v43 = __clz(__rbit64(v42));
        v44 = v42 & ~(1 << v43);
        if (((1 << v43) & v42) == 0)
          v44 = v42;
        if (v43 >= 0x40)
          v45 = 0;
        else
          v45 = 1 << v43;
        if (v43 < 0x40)
          v42 = v44;
        v46 = sub_23AE09508(v45, a1 & 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v13, (_QWORD **)v40);
        if (v5)
          break;
        if ((v46 & 1) != 0)
        {
          v47 = v75;
          v48 = -1;
          if ((v45 & v75) != 0)
            v48 = ~v45;
          v49 = v13;
          v50 = v40;
          v51 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x58);
          v52 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
          v75 &= v48;
          v53 = v73;
          v54 = v74;
          *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x58) = v48 & v47;
          *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60) = v54;
          v55 = *(_BYTE *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68);
          *(_BYTE *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68) = 0;
          sub_23AAAE478(v53, v54, 0);
          v56 = v52;
          v40 = v50;
          v13 = v49;
          sub_23AAAEE10(v51, v56, v55);
        }
        if (!v42)
          goto LABEL_51;
      }
      sub_23AAAEE10(v73, v74, 0);
      sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2569E5F10);
      swift_release();
      goto LABEL_66;
    }
    v75 = v41;
LABEL_51:
    v60 = v75;
    v70 = v75 == 0;
    if (v75)
      v61 = v75;
    else
      v61 = (unint64_t)v74;
    v69 = v61;
    if (v75)
      v62 = v74;
    else
      v62 = 0;
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2569E5F10);
    swift_release();
    v63 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x58);
    v64 = *(unsigned __int8 *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68);
    if (v60)
    {
      if (!*(_BYTE *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68) && (void *)v75 == v63)
        goto LABEL_60;
    }
    else if (v64 == 1)
    {
LABEL_60:
      v37 = v73;
      v38 = v74;
      goto LABEL_65;
    }
    v65 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
    *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x58) = v69;
    *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60) = v62;
    *(_BYTE *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68) = v70;
    v33 = v73;
    v22 = (unint64_t)v74;
    sub_23AAAE478(v73, v74, 0);
    sub_23AAAEE10(v63, v65, v64);
    sub_23AE56EC4(a1);
    if (v5)
    {
      v37 = v33;
      v38 = (id)v22;
      goto LABEL_65;
    }
LABEL_72:
    swift_release();
    sub_23AAAEE10(v33, (id)v22, 0);
    if (v75)
      return 1;
    v67 = v71;
    v68 = *v71 + 1;
    if (!__OFADD__(*v71, 1))
      goto LABEL_74;
    __break(1u);
    goto LABEL_76;
  }
  sub_23AA8EFC8(a2, (uint64_t)&v69 - v16, (uint64_t *)&unk_2542DDFB0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (*(_BYTE *)(a1 + 104))
  {
LABEL_78:
    swift_retain();
LABEL_79:
    sub_23AFF02CC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/JobRegistry.swift", 113, 2, 646);
  }
  v20 = Strong;
  v22 = *(_QWORD *)(a1 + 88);
  v21 = *(void **)(a1 + 96);
  v23 = v22 & a3;
  swift_retain();
  v75 = (unint64_t)v21;
  sub_23AAAE478((id)v22, v21, 0);
  v74 = (void *)v22;
  if ((v22 & a3) != 0)
  {
    while (1)
    {
      v24 = __clz(__rbit64(v23));
      v25 = v23 & ~(1 << v24);
      if (((1 << v24) & v23) == 0)
        v25 = v23;
      if (v24 >= 0x40)
        v26 = 0;
      else
        v26 = 1 << v24;
      if (v24 < 0x40)
        v23 = v25;
      v27 = sub_23AE0BD0C(v26, a1, (uint64_t)v17, v20);
      if (v6)
        break;
      if ((v27 & 1) != 0)
      {
        v28 = -1;
        if ((v26 & v22) != 0)
          v28 = ~v26;
        v22 &= v28;
        v29 = *(void **)(a1 + 88);
        v30 = *(void **)(a1 + 96);
        v31 = (id)v75;
        *(_QWORD *)(a1 + 88) = v22;
        *(_QWORD *)(a1 + 96) = v31;
        v32 = *(_BYTE *)(a1 + 104);
        *(_BYTE *)(a1 + 104) = 0;
        sub_23AAAE478(v74, v31, 0);
        sub_23AAAEE10(v29, v30, v32);
      }
      if (!v23)
        goto LABEL_19;
    }
    sub_23AAAEE10(v74, (id)v75, 0);
    sub_23AA8A05C((uint64_t)v17, &qword_2569E5DD0);
    swift_release();
    goto LABEL_66;
  }
LABEL_19:
  if (v22)
    v33 = (id)v22;
  else
    v33 = (id)v75;
  if (v22)
    v34 = v75;
  else
    v34 = 0;
  sub_23AA8A05C((uint64_t)v17, &qword_2569E5DD0);
  swift_release();
  v35 = *(void **)(a1 + 88);
  v36 = *(unsigned __int8 *)(a1 + 104);
  if (v22)
  {
    if (!*(_BYTE *)(a1 + 104) && (void *)v22 == v35)
      goto LABEL_28;
    goto LABEL_48;
  }
  if (v36 != 1)
  {
LABEL_48:
    v57 = *(void **)(a1 + 96);
    *(_QWORD *)(a1 + 88) = v33;
    *(_QWORD *)(a1 + 96) = v34;
    *(_BYTE *)(a1 + 104) = v22 == 0;
    v58 = v74;
    v59 = (id)v75;
    sub_23AAAE478(v74, (id)v75, 0);
    sub_23AAAEE10(v35, v57, v36);
    sub_23AE56EC4(a1);
    if (v6)
    {
      v37 = v58;
      v38 = v59;
      goto LABEL_65;
    }
    swift_release();
    sub_23AAAEE10(v58, v59, 0);
    if (v22)
      return 1;
    v67 = v71;
    v68 = *v71 + 1;
    if (!__OFADD__(*v71, 1))
    {
LABEL_74:
      *v67 = v68;
      return 1;
    }
    __break(1u);
    goto LABEL_72;
  }
LABEL_28:
  v37 = v74;
  v38 = (id)v75;
LABEL_65:
  sub_23AAAEE10(v37, v38, 0);
LABEL_66:
  swift_release();
  return 1;
}

void sub_23AE59A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  char v10;
  unsigned __int8 v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unsigned int v19;
  id v20;
  void *v21;
  unsigned int v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id aBlock;
  uint64_t v28;
  id (*v29)(uint64_t, void *);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AE060FC();
  if (v11 != 255)
  {
    v13 = v7;
    v14 = (void *)v9;
    if (!v11)
    {
      sub_23AE58C78(a1, 0, v8, v9, v10, v7);
      if (v2)
        return;
      goto LABEL_2;
    }
    if (v11 == 1)
    {
      sub_23AE58D3C(a1, 1u, v8, v9, v7);

      if (v2)
        return;
      goto LABEL_2;
    }
    v15 = *(void **)(v1 + 16);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v13;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_23AEB1604;
    *(_QWORD *)(v17 + 24) = v16;
    v31 = sub_23AA956C8;
    v32 = v17;
    aBlock = (id)MEMORY[0x24BDAC760];
    v28 = 1107296256;
    v29 = sub_23AA9432C;
    v30 = &block_descriptor_204;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v26 = v15;
    aBlock = 0;
    v19 = objc_msgSend(v15, sel_executeSwift_error_, v18, &aBlock);
    _Block_release(v18);
    v25 = aBlock;
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v18 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      if (!v19)
      {
        sub_23B1C587C();

        goto LABEL_24;
      }
      v20 = v26;
      if (!objc_msgSend(v26, sel_changes))
      {
LABEL_21:
        v12 = sub_23AEB1604;
        goto LABEL_3;
      }
      v31 = sub_23ADFA244;
      v32 = 0;
      aBlock = (id)MEMORY[0x24BDAC760];
      v28 = 1107296256;
      v29 = sub_23AA9432C;
      v30 = &block_descriptor_207;
      v21 = _Block_copy(&aBlock);
      swift_release();
      aBlock = 0;
      v22 = objc_msgSend(v20, sel_executeSwift_error_, v21, &aBlock);
      _Block_release(v21);
      v23 = aBlock;
      if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
      {
        if (v22)
        {
          if (objc_msgSend(v26, sel_changes) && swift_weakLoadStrong())
          {
            sub_23AE2C874();
            swift_release();
          }
          goto LABEL_21;
        }
        sub_23B1C587C();

LABEL_24:
        swift_willThrow();
        swift_release();
        return;
      }
    }
    __break(1u);
  }
LABEL_2:
  v12 = 0;
LABEL_3:
  sub_23AE1335C(a1);
  if (!v2)
  {
    sub_23ADFE870();
    sub_23AE13508((uint64_t)v6);
    sub_23AA8A05C((uint64_t)v6, &qword_2542DDFC0);
    sub_23AEA45C8(a1);
  }
  sub_23AAB7948((uint64_t)v12);
}

void sub_23AE59E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v7);
  sub_23AA8EFC8(v0, (uint64_t)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542E1608);
  v9 = (char *)&loc_23AE59F6C + *((int *)qword_23AE5A760 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23AE59F7C()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31B0);
  v5 = (uint64_t)v0 + v4[12];
  v6 = *(uint64_t *)((char *)v0 + v4[16]);

  v7 = *v0;
  v8 = &qword_2542E4770;
  sub_23AA724E8(v5, v1, &qword_2542E4770);
  *(_QWORD *)(v3 - 96) = 0x20657461657263;
  *(_QWORD *)(v3 - 88) = 0xE700000000000000;
  sub_23AA7B734();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(v3 - 104) = v6;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AA8EFC8(v1, v2, &qword_2542E4770);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v2, 1, v9) != 1)
  {
    sub_23ADF78A4();
    v8 = (uint64_t *)&unk_2542E4760;
  }
  sub_23AA8A05C(v2, v8);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v3 - 96);
  sub_23AA8A05C(v1, &qword_2542E4770);

  return v10;
}

void sub_23AE5A780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v7);
  sub_23AA8EFC8(v0, (uint64_t)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542E1600);
  v9 = (char *)&loc_23AE5A8CC + dword_23AE5B0F4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE5A8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3190);
  v5 = v0 + v4[12];
  v6 = *(_QWORD *)(v0 + v4[16]);

  v7 = *(_QWORD *)v0;
  v8 = *(_BYTE *)(v0 + 8);
  v9 = (uint64_t *)&unk_2542E4750;
  sub_23AA724E8(v5, v1, (uint64_t *)&unk_2542E4750);
  *(_QWORD *)(v3 - 96) = 0x20657461657263;
  *(_QWORD *)(v3 - 88) = 0xE700000000000000;
  sub_23AA96F18(v7, v8);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(v3 - 104) = v6;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AA8EFC8(v1, v2, (uint64_t *)&unk_2542E4750);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v2, 1, v10) != 1)
  {
    sub_23ADF7370();
    v9 = (uint64_t *)&unk_2542E6B00;
  }
  sub_23AA8A05C(v2, v9);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v3 - 96);
  sub_23AA8A05C(v1, (uint64_t *)&unk_2542E4750);
  return v11;
}

void sub_23AE5B114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v1);
  sub_23AA8EFC8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542E1600);
  v3 = (char *)sub_23AE5B1B8 + 4 * byte_23B1DAE5D[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE5B1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23AA8A05C(v1, &qword_2542E1600);
  return sub_23AA8EFC8(v2, v0, &qword_2542E1600);
}

void sub_23AE5B51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v1);
  sub_23AA8EFC8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542E1608);
  v3 = (char *)sub_23AE5B5C0 + 4 * byte_23B1DAE65[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE5B5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23AA8A05C(v1, &qword_2542E1608);
  return sub_23AA8EFC8(v2, v0, &qword_2542E1608);
}

uint64_t sub_23AE5B8EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15;
  unint64_t v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(v1, (uint64_t)v10, &qword_2542DDDB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v10, (uint64_t)v4, &qword_2542E1608);
    v15 = 0x205046206D6F7266;
    v16 = 0xE800000000000000;
    sub_23AE59E20();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v11 = v15;
    v12 = (uint64_t)v4;
    v13 = &qword_2542E1608;
  }
  else
  {
    sub_23AA724E8((uint64_t)v10, (uint64_t)v7, &qword_2542E1600);
    v15 = 0x205346206D6F7266;
    v16 = 0xE800000000000000;
    sub_23AE5A780();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v11 = v15;
    v12 = (uint64_t)v7;
    v13 = &qword_2542E1600;
  }
  sub_23AA8A05C(v12, v13);
  return v11;
}

uint64_t sub_23AE5BAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(v0, (uint64_t)v9, &qword_2542DDDB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v9, (uint64_t)v3, &qword_2542E1608);
    sub_23AE5B51C();
    sub_23AA8A05C((uint64_t)v3, &qword_2542E1608);
  }
  else
  {
    sub_23AA724E8((uint64_t)v9, (uint64_t)v6, &qword_2542E1600);
    sub_23AE5B114();
    sub_23AA8A05C((uint64_t)v6, &qword_2542E1600);
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_23AE5BC48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23B1C5A08();
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

uint64_t sub_23AE5BD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  *(_QWORD *)(v2 - 96) = 0;
  *(_QWORD *)(v2 - 88) = 0xE000000000000000;
  v5 = v3;
  v6 = v4;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = 0x800000023B2068C0;
  sub_23AA7B734();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v7 = objc_msgSend(v6, sel_description);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();

  return *(_QWORD *)(v2 - 96);
}

void sub_23AE5DE58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23B1C5A08();
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

uint64_t sub_23AE5DF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  id v6;
  id v7;

  v3 = *(void **)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_BYTE *)(v0 + 24);
  *(_QWORD *)(v2 - 96) = 0;
  *(_QWORD *)(v2 - 88) = 0xE000000000000000;
  v6 = v3;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = 0x800000023B2068C0;
  sub_23AA96F18(v4, v5);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v7 = objc_msgSend(v6, sel_description);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();

  return *(_QWORD *)(v2 - 96);
}

unint64_t sub_23AE60058(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  id *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;

  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      v7 = (id *)(a1 + 24);
      goto LABEL_17;
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x16uLL:
    case 0x24uLL:
      v7 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 24);
      goto LABEL_17;
    case 2uLL:
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6F0);
      v10 = swift_projectBox();
      v11 = *(int *)(v9 + 64);
      goto LABEL_16;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      v8 = (uint64_t *)&unk_2542DD400;
      goto LABEL_15;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      v7 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 32);
      goto LABEL_17;
    case 0x15uLL:
    case 0x22uLL:
      return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x20);
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      v7 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 16);
      goto LABEL_17;
    case 0x1AuLL:
      return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x18);
    case 0x1BuLL:
    case 0x1CuLL:
      return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
    case 0x1EuLL:
      v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      sub_23AA93780(v12);
      v6 = sub_23AE603B4(v12);
      sub_23AC03BE4(v12);
      return v6;
    case 0x1FuLL:
      return 0;
    case 0x23uLL:
      v8 = (uint64_t *)&unk_2569E2FB8;
      goto LABEL_15;
    case 0x28uLL:
      v8 = (uint64_t *)&unk_2569E2FE8;
LABEL_15:
      v13 = __swift_instantiateConcreteTypeFromMangledName(v8);
      v10 = swift_projectBox();
      v11 = *(int *)(v13 + 48);
LABEL_16:
      v7 = (id *)(v10 + v11);
LABEL_17:
      v14 = *v7;
      v15 = objc_msgSend(v14, sel_qos);
      v16 = 0x6000000000000000;
      v17 = 0x4000000000000000;
      if (v15 <= 0x14)
        v17 = (unint64_t)(v15 - 17 < 0xFFFFFFF0) << 61;
      if (v15 <= 0x18)
        v16 = v17;
      if (v15 <= 0x20)
        v18 = v16;
      else
        v18 = 0x8000000000000000;
      v19 = objc_msgSend(v14, sel_date);

      sub_23B1C5BAC();
      sub_23B1C5B94();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v22 = v21 * 1000000000.0;
      if ((~COERCE__INT64(v21 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v22 <= -9.22337204e18)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v22 >= 9.22337204e18)
      {
LABEL_31:
        __break(1u);
        JUMPOUT(0x23AE60310);
      }
      return ((uint64_t)v22 & ~((uint64_t)v22 >> 63)) + v18;
    default:
      return v6;
  }
}

unint64_t sub_23AE603B4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;

  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      v7 = (id *)(a1 + 32);
      goto LABEL_17;
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x16uLL:
    case 0x24uLL:
      v7 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 32);
      goto LABEL_17;
    case 2uLL:
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6F0);
      v10 = swift_projectBox();
      v11 = *(int *)(v9 + 64);
      goto LABEL_16;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      v8 = (uint64_t *)&unk_2542DD400;
      goto LABEL_15;
    case 0xEuLL:
    case 0xFuLL:
      v7 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 24);
      goto LABEL_17;
    case 0x15uLL:
    case 0x22uLL:
      return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x20);
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      v7 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 16);
      goto LABEL_17;
    case 0x1AuLL:
      return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x18);
    case 0x1BuLL:
    case 0x1CuLL:
      return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
    case 0x1EuLL:
      v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      sub_23AA93780(v12);
      v6 = sub_23AE60058(v12);
      sub_23AC03BE4(v12);
      return v6;
    case 0x1FuLL:
      return 0;
    case 0x23uLL:
      v8 = (uint64_t *)&unk_2569E2FB8;
      goto LABEL_15;
    case 0x28uLL:
      v8 = (uint64_t *)&unk_2569E2FE8;
LABEL_15:
      v13 = __swift_instantiateConcreteTypeFromMangledName(v8);
      v10 = swift_projectBox();
      v11 = *(int *)(v13 + 48);
LABEL_16:
      v7 = (id *)(v10 + v11);
LABEL_17:
      v14 = *v7;
      v15 = objc_msgSend(v14, sel_qos);
      v16 = 0x6000000000000000;
      v17 = 0x4000000000000000;
      if (v15 <= 0x14)
        v17 = (unint64_t)(v15 - 17 < 0xFFFFFFF0) << 61;
      if (v15 <= 0x18)
        v16 = v17;
      if (v15 <= 0x20)
        v18 = v16;
      else
        v18 = 0x8000000000000000;
      v19 = objc_msgSend(v14, sel_date);

      sub_23B1C5BAC();
      sub_23B1C5B94();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v22 = v21 * 1000000000.0;
      if ((~COERCE__INT64(v21 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      if (v22 <= -9.22337204e18)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v22 >= 9.22337204e18)
      {
LABEL_31:
        __break(1u);
        JUMPOUT(0x23AE6066CLL);
      }
      return ((uint64_t)v22 & ~((uint64_t)v22 >> 63)) + v18;
    default:
      return v6;
  }
}

unint64_t sub_23AE60710(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int (**v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(id *, uint64_t, _QWORD);
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  _QWORD *v33;
  unsigned int (**v34)(char *, uint64_t, uint64_t);
  _QWORD **v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  id v57;
  id v58;
  char v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  id v68;
  unint64_t v69;
  void (*v70)(_QWORD *__return_ptr, id *, uint64_t);
  id v71;
  char v72;
  char *v73;
  uint64_t v74;
  unsigned int (**v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  char v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  char v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t (*v105)(uint64_t);
  uint64_t v106;
  char v107;
  uint64_t v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  unint64_t v123;
  char v124;
  id v125;
  _QWORD *v126;
  unint64_t v127;
  unint64_t v128;
  _QWORD *v129;
  uint64_t (*v130)(uint64_t);
  uint64_t v131;
  char v132;
  unint64_t v133;
  id v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  unint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  char *v144;
  unsigned int (**v145)(char *, uint64_t, uint64_t);
  id v146;
  uint64_t v147;
  __int128 v148;
  void *v149;
  uint64_t v150;
  __int128 v151;
  char v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int16 v157;
  char v158;
  __int128 v159;
  char v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  char v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int16 v194;
  char v195;
  __int128 v196;
  char v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  uint64_t v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  __int128 v221;
  char v222;
  uint64_t v223;
  _OWORD v224[31];
  id v225;
  __int16 v226;
  _QWORD v227[63];
  _BYTE v228[504];
  id v229;
  __int16 v230;
  _QWORD v231[63];
  id v232;
  __int16 v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  unint64_t v237;
  _QWORD v238[63];
  id v239;
  _QWORD v240[31];
  _QWORD v241[31];
  _BYTE v242[256];
  unint64_t v243;

  v2 = MEMORY[0x24BDAC7A8](a1);
  v243 = v1;
  v4 = v3;
  v147 = v5;
  v149 = v6;
  v7 = (void *)v2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v12 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = v7;
  *(_QWORD *)&v148 = v4;
  v15 = *(_QWORD *)(v4 + 24);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
  v17 = *(uint64_t (**)(id *, uint64_t, _QWORD))(*(_QWORD *)v15 + 288);
  v18 = v15;
  v19 = v243;
  v20 = v17(&v239, v16, 0);
  if (v19)
    return v18;
  v145 = v12;
  v243 = 0;
  v146 = v7;
  v144 = v14;
  if ((v20 & 1) != 0)
  {
    v238[0] = 0;
    v238[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v238[0] = 0xD00000000000001ELL;
    v238[1] = 0x800000023B207470;
    sub_23AA7B734();
    sub_23B1C64F4();
LABEL_5:
    swift_bridgeObjectRelease();
    return v238[0];
  }
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF8);
  v18 = v15;
  v23 = v243;
  v24 = v17(&v239, v22, 0);
  if (v23)
    return v18;
  if ((v24 & 1) != 0)
  {
    v243 = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E67E8);
    v25 = swift_allocObject();
    v26 = v25;
    *(_OWORD *)(v25 + 16) = xmmword_23B1CA760;
    v27 = v146;
    *(_QWORD *)(v25 + 32) = v146;
    v28 = v148;
    v29 = v149;
    if (v149)
    {
      v30 = v27;
      v31 = v29;
      *(_QWORD *)(v26 + 40) = sub_23ADAB49C();

    }
    else
    {
      *(_QWORD *)(v25 + 40) = 0;
      v47 = v27;
    }
    v48 = v147;
    *(_BYTE *)(v26 + 56) = 2;
    v49 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v28 + 32) + 16) + 304);
    v50 = swift_retain();
    v51 = v49(v50);
    swift_release();
    v18 = sub_23AEA1438(v26, v48, v51 & 1);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6520);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return v18;
  }
  v32 = v149;
  if (v149)
  {
    v33 = (_QWORD *)v148;
    v34 = v145;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6120);
    v52 = sub_23AE57808();
    v53 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v15 + 240))(v52, 0);
    v34 = v145;
    v33 = (_QWORD *)v148;
    if ((v53 & 1) != 0)
      return 0xD000000000000041;
  }
  v35 = (_QWORD **)v33[4];
  ((void (*)(id *, uint64_t))(*v35)[30])(&v239, 1);
  v243 = 0;
  if (v34[6](v10, 1, v11) != 1)
  {
    v54 = (uint64_t)v144;
    sub_23AA724E8((uint64_t)v10, (uint64_t)v144, (uint64_t *)&unk_2542E4760);
    if (!v32)
    {
LABEL_47:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E67E8);
      v76 = swift_allocObject();
      v77 = v146;
      *(_QWORD *)(v76 + 32) = v146;
      *(_OWORD *)(v76 + 16) = xmmword_23B1D2330;
      v78 = *(void **)(v54 + 8);
      *(_QWORD *)(v76 + 40) = v78;
      *(_BYTE *)(v76 + 56) = 2;
      *(_QWORD *)(v76 + 64) = v77;
      if (v32)
      {
        v79 = v77;
        v80 = v32;
        v81 = v78;
        v82 = sub_23ADAB49C();

      }
      else
      {
        v83 = v77;
        v84 = v78;
        v85 = v83;
        v82 = v84;
      }
      *(_QWORD *)(v76 + 72) = v82;
      *(_BYTE *)(v76 + 88) = 2;
      v86 = *(uint64_t (**)(uint64_t))(*v35[2] + 304);
      v87 = swift_retain();
      v88 = v86(v87);
      swift_release();
      v18 = sub_23AEA1438(v76, v147, v88 & 1);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6520);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_23AA8A05C((uint64_t)v144, (uint64_t *)&unk_2542E4760);
      return v18;
    }
    v145 = v32;
    sub_23AAA4B74((uint64_t)v240);
    sub_23AAB7E4C(v240, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    sub_23AA724E8((uint64_t)v240, (uint64_t)v242, &qword_2542E5050);
    if (sub_23AAFCF2C((uint64_t)v242) == 1)
    {
      v55 = v243;
    }
    else
    {
      v60 = v54 + *(int *)(v11 + 52);
      sub_23AA724E8(v60, (uint64_t)&v236, &qword_2542E5050);
      sub_23AA724E8((uint64_t)&v236, (uint64_t)v238, &qword_2542E5050);
      if (sub_23AAFCF2C((uint64_t)v238) == 1)
      {
        v61 = v243;
        ((void (*)(_QWORD *__return_ptr, id *))(*v35)[33])(v241, &v239);
        if (v61)
        {
          v18 = v61;

          sub_23AA8A05C(v54, (uint64_t *)&unk_2542E4760);
          return v18;
        }
        v55 = 0;
        sub_23AA724E8((uint64_t)v241, v60, &qword_2542E5050);
      }
      else
      {
        v55 = v243;
      }
      v33 = (_QWORD *)v148;
    }
    v69 = v33[2];
    v232 = v146;
    v233 = 0;
    v70 = *(void (**)(_QWORD *__return_ptr, id *, uint64_t))(*(_QWORD *)v69 + 168);
    v71 = v146;
    v18 = v69;
    v70(v238, &v232, 1);
    if (v55)
    {

      sub_23AA8A05C((uint64_t)v144, (uint64_t *)&unk_2542E4760);
      return v18;
    }

    sub_23AA724E8((uint64_t)v238, (uint64_t)&v234, &qword_2569E6458);
    sub_23AA724E8((uint64_t)&v234, (uint64_t)&v236, &qword_2569E6458);
    if (sub_23AAFC2A4((uint64_t)&v236) != 1)
    {
      memcpy(v231, v238, 0x1F0uLL);
      sub_23AAFCF50((uint64_t)v231);
      v72 = v231[24];
      v73 = &v144[*(int *)(v11 + 48)];
      v74 = type metadata accessor for ItemMetadata();
      v73[*(int *)(v74 + 92)] = (v72 & 4) != 0;
      v73[*(int *)(v74 + 96)] = (v72 & 8) != 0;
    }
    v75 = v145;
    if (sub_23AE52AD0((uint64_t)v145))
    {

      v243 = 0;
      v54 = (uint64_t)v144;
LABEL_46:
      v32 = v149;
      goto LABEL_47;
    }
    v229 = v146;
    v230 = 0;
    v89 = v71;
    v70(v231, &v229, 1);
    v243 = 0;

    sub_23AA724E8((uint64_t)v231, (uint64_t)v227, &qword_2569E6458);
    sub_23AA724E8((uint64_t)v227, (uint64_t)v228, &qword_2569E6458);
    v96 = sub_23AAFC2A4((uint64_t)v228) == 1;
    v54 = (uint64_t)v144;
    if (v96)
    {
      sub_23ACFC784(v224);
    }
    else
    {
      memcpy(v224, v231, sizeof(v224));
      nullsub_1(v224);
    }
    sub_23AA724E8((uint64_t)v224, (uint64_t)&v225, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8((uint64_t)&v225, (uint64_t)&v187, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8((uint64_t)&v225, (uint64_t)v224, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4((uint64_t)v224) == 1)
    {

    }
    else
    {
      v178 = v215;
      v179 = v216;
      v180 = v217;
      v174 = v211;
      v175 = v212;
      v176 = v213;
      v177 = v214;
      v170 = v207;
      v171 = v208;
      v172 = v209;
      v173 = v210;
      v169 = v206;
      v166 = v203;
      v167 = v204;
      v168 = v205;
      v150 = v187;
      v148 = v188;
      v151 = v188;
      v152 = v189;
      v153 = v190;
      v154 = v191;
      v155 = v192;
      v156 = v193;
      v157 = v194;
      v158 = v195;
      v159 = v196;
      v160 = v197;
      v161 = v198;
      v162 = v199;
      v163 = v200;
      v164 = v201;
      v165 = v202;
      v181 = v218;
      v182 = v219;
      v183 = v220;
      v184 = v221;
      v185 = v222;
      v186 = v223;
      sub_23AAFCF50((uint64_t)&v150);

      if ((_QWORD)v148)
        goto LABEL_46;
    }
    sub_23AA8A05C(v54, (uint64_t *)&unk_2542E4760);
    return 0;
  }
  v36 = sub_23AA8A05C((uint64_t)v10, &qword_2542E4770);
  if (!v32)
  {
    v56 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*v33 + 216))(v36);
    v238[2] = 0;
    v238[0] = v239;
    v238[1] = 0;
    LOBYTE(v238[3]) = 2;
    MEMORY[0x24BDAC7A8](v56);
    v142 = v56;
    v143 = v238;
    v58 = v57;
    v59 = sub_23AABC838(v56, (void (*)(uint64_t *__return_ptr))sub_23AEB45D0);

    swift_release();
    if ((v59 & 1) == 0)
      return 0xD000000000000018;
    v238[0] = 0;
    v238[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v238[0];
  }
  v146 = v35;
  v37 = v32;
  v38 = objc_msgSend(v37, sel_filename);
  v39 = sub_23B1C63E0();
  v41 = v40;

  v238[0] = v39;
  v238[1] = v41;
  v236 = 58;
  v237 = 0xE100000000000000;
  v234 = 47;
  v235 = 0xE100000000000000;
  v42 = sub_23AAA420C();
  v43 = MEMORY[0x24BEE0D00];
  v142 = (_QWORD *)v42;
  v143 = (_QWORD *)v42;
  v140 = MEMORY[0x24BEE0D00];
  v141 = v42;
  v44 = sub_23B1C6CF8();
  v46 = v45;
  swift_bridgeObjectRelease();
  if (v44 == 11822 && v46 == 0xE200000000000000
    || (sub_23B1C7388() & 1) != 0
    || v44 == 46 && v46 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_37:
    v238[0] = 0;
    v238[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v238[0] = 0xD00000000000001ELL;
    v238[1] = 0x800000023B207400;
    v63 = objc_msgSend(v37, sel_filename);
    v64 = sub_23B1C63E0();
    v66 = v65;

    v236 = v64;
    v237 = v66;
    v234 = 58;
    v235 = 0xE100000000000000;
    v231[0] = 47;
    v231[1] = 0xE100000000000000;
    v142 = (_QWORD *)v42;
    v143 = (_QWORD *)v42;
    v140 = v43;
    v141 = v42;
    sub_23B1C6CF8();
    swift_bridgeObjectRelease();
    v67 = (void *)sub_23B1C63BC();
    v68 = objc_msgSend(v67, sel_fp_obfuscatedFilename);

    sub_23B1C63E0();
    sub_23B1C64F4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v238[0];
  }
  v62 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v62 & 1) != 0)
    goto LABEL_37;
  v90 = objc_msgSend(v37, sel_itemID);
  v91 = objc_msgSend(v90, sel_identifier);

  if (qword_2542E1FE0 != -1)
    swift_once();
  v92 = sub_23B1C63E0();
  v94 = v93;
  if (v92 == sub_23B1C63E0() && v94 == v95)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v97 = sub_23B1C7388();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v97 & 1) == 0)
      goto LABEL_62;
  }
  if ((*((_BYTE *)v146 + 32) & 1) == 0)
  {

    return 0xD000000000000024;
  }
LABEL_62:
  v98 = objc_msgSend(v37, sel_itemID, v144);
  v99 = objc_msgSend(v98, sel_identifier);

  if (qword_2542E1FE8 != -1)
    swift_once();
  v100 = sub_23B1C63E0();
  v102 = v101;
  if (v100 == sub_23B1C63E0() && v102 == v103)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_73;
  }
  v104 = sub_23B1C7388();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v104 & 1) != 0)
  {
LABEL_73:
    if ((*((_BYTE *)v146 + 32) & 1) == 0)
    {

      return 0xD000000000000025;
    }
  }
  v105 = *(uint64_t (**)(uint64_t))(**((_QWORD **)v146 + 2) + 304);
  v106 = swift_retain();
  v107 = v105(v106);
  v108 = swift_release();
  if ((v107 & 1) == 0)
  {
    if (v147)
    {
      v109 = v239;
      v110 = v239;
      v111 = sub_23ADAB49C();
      v238[0] = v109;
      v238[1] = v111;
      LOBYTE(v238[3]) = 2;
      v112 = v147;
      v113 = swift_beginAccess();
      v114 = *(_QWORD *)(v112 + 16);
      MEMORY[0x24BDAC7A8](v113);
      v142 = v238;
      swift_bridgeObjectRetain();
      v115 = v243;
      sub_23ADF8D0C((uint64_t (*)(_QWORD *))sub_23AEB45E8, (uint64_t)&v140, v114);
      v117 = v116;
      v243 = v115;
      swift_bridgeObjectRelease();
      sub_23ABE4D94(v109, v111, v118, 2);
      if ((v117 & 1) != 0)
      {
        v238[0] = 0;
        v238[1] = 0xE000000000000000;
        sub_23B1C6EFC();
        sub_23B1C64F4();
        v119 = sub_23ADAB49C();
        sub_23AA7B734();
        sub_23B1C64F4();

        goto LABEL_5;
      }
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v148 + 256))(v108) & 1) != 0
    && (*((_BYTE *)v146 + 32) & 1) == 0)
  {
    v133 = *(_QWORD *)(v148 + 16);
    v134 = sub_23ADAB49C();
    v225 = v134;
    v226 = 0;
    v18 = v133;
    v135 = v243;
    (*(void (**)(_QWORD *__return_ptr, id *, uint64_t))(*(_QWORD *)v133 + 168))(v238, &v225, 1);
    v243 = v135;
    if (v135)
    {

      return v18;
    }
    sub_23AA724E8((uint64_t)v238, (uint64_t)&v234, &qword_2569E6458);
    sub_23AA724E8((uint64_t)&v234, (uint64_t)&v236, &qword_2569E6458);
    if (sub_23AAFC2A4((uint64_t)&v236) == 1)
    {

    }
    else
    {

      memcpy(v231, v238, 0x1F0uLL);
      if (BYTE1(v231[12]) == 3 && (!LOBYTE(v231[12]) || LOBYTE(v231[12]) != 2))
      {
        v227[0] = 0;
        v227[1] = 0xE000000000000000;
        sub_23B1C6EFC();
        sub_23B1C64F4();
        v139 = sub_23ADAB49C();
        sub_23AA7B734();
        sub_23B1C64F4();

        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        sub_23AAFCF50((uint64_t)v231);

        return v227[0];
      }
      sub_23AAFCF50((uint64_t)v231);
    }
  }
  v120 = objc_msgSend(v37, sel_itemID);
  v121 = objc_msgSend(v120, sel_identifier);

  v18 = (unint64_t)v37;
  v122 = sub_23ADAB49C();
  v123 = v243;
  v124 = sub_23AE9F278(v121, v148);
  if (v123)
  {

  }
  else
  {
    if ((v124 & 1) != 0)
    {

    }
    else
    {
      sub_23AE9F4B8(v122, 0, v148);
      v18 = v136;
      v138 = v137;

      if (v138)
      {

        return v18;
      }
    }
    v125 = v239;
    v126 = sub_23AF99700(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v128 = v126[2];
    v127 = v126[3];
    if (v128 >= v127 >> 1)
      v126 = sub_23AF99700((_QWORD *)(v127 > 1), v128 + 1, 1, v126);
    v126[2] = v128 + 1;
    v129 = &v126[4 * v128];
    v129[5] = 0;
    v129[6] = 0;
    v129[4] = v125;
    *((_BYTE *)v129 + 56) = 2;
    v130 = *(uint64_t (**)(uint64_t))(**((_QWORD **)v146 + 2) + 304);
    v131 = swift_retain();
    v132 = v130(v131);
    swift_release();
    v18 = sub_23AEA1438((uint64_t)v126, v147, v132 & 1);

    swift_bridgeObjectRelease();
  }
  return v18;
}

unint64_t sub_23AE61C64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t *, uint64_t, _QWORD);
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(_OWORD *__return_ptr, uint64_t *, uint64_t);
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  void (*v106)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  int v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  char v132;
  __int128 v133;
  char v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int16 v141;
  char v142;
  __int128 v143;
  char v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  __int128 v171;
  char v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int16 v179;
  char v180;
  __int128 v181;
  char v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  __int128 v204;
  char v205;
  uint64_t v206;
  _OWORD v207[31];
  uint64_t v208;
  __int16 v209;
  unint64_t v210;
  unint64_t v211;
  _BYTE v212[504];
  uint64_t v213;
  char v214;
  char v215;
  _QWORD v216[63];
  uint64_t v217;
  char v218;
  char v219;
  _BYTE v220[248];
  _BYTE v221[248];
  _BYTE v222[504];
  _BYTE v223[504];
  _OWORD v224[31];
  uint64_t v225;
  unsigned __int8 v226;
  _QWORD v227[32];
  unsigned int v228;

  v2 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)&v130 = v1;
  v4 = v3;
  v125 = v5;
  v127 = v6;
  v8 = v7;
  v9 = v2;
  v128 = type metadata accessor for VFSItem(0);
  v126 = *(_QWORD *)(v128 - 8);
  v10 = MEMORY[0x24BDAC7A8](v128);
  v119 = (uint64_t)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v124 = (uint64_t)&v114 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v13);
  v122 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v120 = *(_QWORD *)(v15 - 8);
  v121 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v114 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v114 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v114 - v28;
  v129 = v9;
  v225 = v9;
  v228 = v8;
  v226 = v8;
  v123 = v4;
  v30 = v4[3];
  v31 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
  v32 = *(uint64_t (**)(uint64_t *, uint64_t, _QWORD))(*(_QWORD *)v30 + 288);
  v33 = v30;
  v34 = v130;
  v35 = v32(&v225, v31, 0);
  if (v34)
    return v33;
  v117 = v17;
  v118 = v29;
  v115 = v27;
  v116 = v24;
  v114 = v21;
  *(_QWORD *)&v130 = 0;
  if ((v35 & 1) != 0)
  {
    *(_QWORD *)&v224[0] = 0;
    *((_QWORD *)&v224[0] + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v224[0] = 0xD00000000000001ELL;
    *((_QWORD *)&v224[0] + 1) = 0x800000023B207470;
    sub_23AA96F18(v129, v228);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return *(_QWORD *)&v224[0];
  }
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE630);
  v38 = v130;
  v39 = v32(&v225, v37, 0);
  v33 = v228;
  v40 = v129;
  if (v38)
    return v33;
  if ((v39 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20E0);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_23B1CA760;
    *(_QWORD *)(v41 + 32) = v40;
    *(_BYTE *)(v41 + 40) = v33;
    v42 = (uint64_t)v118;
    sub_23AA8EFC8(v127, (uint64_t)v118, &qword_2542E72C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v42, 1, v128) == 1)
    {
      sub_23AA8A05C(v42, &qword_2542E72C0);
      *(_QWORD *)(v41 + 48) = 0;
      *(_BYTE *)(v41 + 56) = -1;
    }
    else
    {
      v50 = *(_BYTE *)(v42 + 24);
      *(_QWORD *)(v41 + 48) = *(_QWORD *)(v42 + 16);
      *(_BYTE *)(v41 + 56) = v50;
      sub_23AA937BC(v42, type metadata accessor for VFSItem);
    }
    v51 = v125;
    *(_BYTE *)(v41 + 73) = 2;
    v33 = sub_23AEA17B8(v41, v51, 0);
    swift_setDeallocating();
    swift_deallocClassInstance();
    return v33;
  }
  v43 = v127;
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  v45 = v128;
  if (v44(v127, 1, v128) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2542E6928);
    v46 = sub_23AE58240();
    v47 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v30 + 240))(v46, 0);
    v48 = v124;
    v49 = v123;
    if ((v47 & 1) != 0)
      return 0xD000000000000041;
  }
  else
  {
    v49 = v123;
    v48 = v124;
  }
  v52 = v49[4];
  v53 = (uint64_t)v122;
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)v52 + 240))(&v225, 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v53, 1, v121) != 1)
  {
    sub_23AA724E8(v53, (uint64_t)v117, (uint64_t *)&unk_2542E6B00);
    v59 = (uint64_t)v115;
    sub_23AA8EFC8(v43, (uint64_t)v115, &qword_2542E72C0);
    if (v44(v59, 1, v45) == 1)
    {
      sub_23AA8A05C(v59, &qword_2542E72C0);
    }
    else
    {
      sub_23AA94050(v59, v48, type metadata accessor for VFSItem);
      sub_23AA724E8(v48 + *(int *)(v45 + 32), (uint64_t)v220, &qword_2542E5050);
      sub_23AA724E8((uint64_t)v220, (uint64_t)v221, &qword_2542E5050);
      if (sub_23AAFCF2C((uint64_t)v221) != 1)
      {
        v73 = (uint64_t)&v117[*(int *)(v121 + 52)];
        sub_23AA724E8(v73, (uint64_t)v223, &qword_2542E5050);
        sub_23AA724E8((uint64_t)v223, (uint64_t)v224, &qword_2542E5050);
        if (sub_23AAFCF2C((uint64_t)v224) == 1)
        {
          (*(void (**)(_QWORD *__return_ptr, uint64_t *))(*(_QWORD *)v52 + 264))(v227, &v225);
          sub_23AA724E8((uint64_t)v227, v73, &qword_2542E5050);
        }
        v49 = v123;
      }
      v80 = v49[2];
      v217 = v129;
      v218 = v228;
      v219 = 0;
      v81 = *(void (**)(_OWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v80 + 168);
      v81(v224, &v217, 1);
      sub_23AA724E8((uint64_t)v224, (uint64_t)v222, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v222, (uint64_t)v223, (uint64_t *)&unk_2542E4CB0);
      if (sub_23AAFC2A4((uint64_t)v223) != 1)
      {
        memcpy(v216, v224, 0x1F0uLL);
        sub_23AAFC3AC((uint64_t)v216);
        v82 = v216[29];
        v83 = &v117[*(int *)(v121 + 48)];
        v84 = type metadata accessor for ItemMetadata();
        v83[*(int *)(v84 + 92)] = (v82 & 4) != 0;
        v83[*(int *)(v84 + 96)] = (v82 & 8) != 0;
        v48 = v124;
      }
      if (!sub_23AE54894(v48))
      {
        v213 = v129;
        v214 = v228;
        v215 = 0;
        v81(v216, &v213, 1);
        sub_23AA724E8((uint64_t)v216, (uint64_t)&v210, (uint64_t *)&unk_2542E4CB0);
        sub_23AA724E8((uint64_t)&v210, (uint64_t)v212, (uint64_t *)&unk_2542E4CB0);
        if (sub_23AAFC2A4((uint64_t)v212) == 1)
        {
          sub_23ACFC784(v207);
        }
        else
        {
          memcpy(v207, v216, sizeof(v207));
          nullsub_1(v207);
        }
        sub_23AA724E8((uint64_t)v207, (uint64_t)&v208, qword_2542E6E20);
        sub_23AA724E8((uint64_t)&v208, (uint64_t)&v169, qword_2542E6E20);
        sub_23AA724E8((uint64_t)&v208, (uint64_t)v207, qword_2542E6E20);
        if (sub_23AAFC2A4((uint64_t)v207) == 1)
        {
          sub_23AA937BC(v124, type metadata accessor for VFSItem);
          sub_23AA724E8((uint64_t)&v169, (uint64_t)&v131, qword_2542E6E20);
          sub_23ADF2D34((uint64_t)&v131, (voidsub_23AAAEC3C);
        }
        else
        {
          v160 = v198;
          v161 = v199;
          v162 = v200;
          v156 = v194;
          v157 = v195;
          v158 = v196;
          v159 = v197;
          v152 = v190;
          v153 = v191;
          v154 = v192;
          v155 = v193;
          v150 = v188;
          v151 = v189;
          v131 = v169;
          v132 = v170;
          v130 = v171;
          v133 = v171;
          v134 = v172;
          v135 = v173;
          v136 = v174;
          v137 = v175;
          v138 = v176;
          v139 = v177;
          v140 = v178;
          v141 = v179;
          v142 = v180;
          v143 = v181;
          v144 = v182;
          v145 = v183;
          v146 = v184;
          v147 = v185;
          v148 = v186;
          v149 = v187;
          v163 = v201;
          v164 = v202;
          v165 = v203;
          v166 = v204;
          v167 = v205;
          v168 = v206;
          sub_23AAFC3AC((uint64_t)&v131);
          v85 = v130;
          sub_23AA937BC(v124, type metadata accessor for VFSItem);
          if (v85)
          {
            v43 = v127;
            v45 = v128;
            goto LABEL_21;
          }
        }
        sub_23AA8A05C((uint64_t)v117, (uint64_t *)&unk_2542E6B00);
        return 0;
      }
      sub_23AA937BC(v48, type metadata accessor for VFSItem);
    }
LABEL_21:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20E0);
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_23B1D2330;
    v61 = v225;
    v62 = v226;
    *(_QWORD *)(v60 + 32) = v225;
    *(_BYTE *)(v60 + 40) = v62;
    v63 = (uint64_t)v117;
    v64 = v117[24];
    *(_QWORD *)(v60 + 48) = *((_QWORD *)v117 + 2);
    *(_BYTE *)(v60 + 56) = v64;
    *(_BYTE *)(v60 + 73) = 2;
    *(_QWORD *)(v60 + 80) = v61;
    *(_BYTE *)(v60 + 88) = v62;
    v65 = v43;
    v66 = (uint64_t)v114;
    sub_23AA8EFC8(v65, (uint64_t)v114, &qword_2542E72C0);
    if (v44(v66, 1, v45) == 1)
    {
      sub_23AA8A05C(v66, &qword_2542E72C0);
      v67 = *(_QWORD *)(v63 + 16);
      v68 = *(_BYTE *)(v63 + 24);
    }
    else
    {
      v67 = *(_QWORD *)(v66 + 16);
      v68 = *(_BYTE *)(v66 + 24);
      sub_23AA937BC(v66, type metadata accessor for VFSItem);
    }
    *(_QWORD *)(v60 + 96) = v67;
    *(_BYTE *)(v60 + 104) = v68;
    *(_BYTE *)(v60 + 121) = 2;
    v33 = sub_23AEA17B8(v60, v125, 0);
    swift_setDeallocating();
    swift_deallocClassInstance();
    sub_23AA8A05C(v63, (uint64_t *)&unk_2542E6B00);
    return v33;
  }
  sub_23AA8A05C(v53, (uint64_t *)&unk_2542E4750);
  v54 = (uint64_t)v116;
  sub_23AA8EFC8(v43, (uint64_t)v116, &qword_2542E72C0);
  if (v44(v54, 1, v45) == 1)
  {
    v55 = sub_23AA8A05C(v54, &qword_2542E72C0);
    v56 = (*(uint64_t (**)(uint64_t))(*v49 + 216))(v55);
    *(_QWORD *)&v224[0] = v225;
    *((_QWORD *)&v224[0] + 1) = v226;
    v224[1] = xmmword_23B1DA950;
    *(_QWORD *)&v224[2] = 0;
    WORD4(v224[2]) = 512;
    v57 = (char *)MEMORY[0x24BDAC7A8](v56);
    *(&v114 - 2) = v57;
    *(&v114 - 1) = (char *)v224;
    v58 = sub_23AABC838(v57, (void (*)(uint64_t *__return_ptr))sub_23AEB4AD4);
    swift_release();
    if ((v58 & 1) == 0)
      return 0xD000000000000018;
    *(_QWORD *)&v224[0] = 0;
    *((_QWORD *)&v224[0] + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return *(_QWORD *)&v224[0];
  }
  v69 = v119;
  sub_23AA94050(v54, v119, type metadata accessor for VFSItem);
  v70 = sub_23AC3C0B0();
  v72 = v70;
  if (!(v71 >> 62))
  {
    sub_23AAA12F0(v70, v71);
    *(_QWORD *)&v224[0] = 0;
    *((_QWORD *)&v224[0] + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v224[0] = 0xD000000000000019;
    *((_QWORD *)&v224[0] + 1) = 0x800000023B2074B0;
    sub_23ADB47EC(v72);
    sub_23B1C64F4();
LABEL_41:
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)&v224[0];
    v79 = v69;
LABEL_42:
    sub_23AA937BC(v79, type metadata accessor for VFSItem);
    return v33;
  }
  if (v71 >> 62 == 1)
  {
    sub_23AA937BC(v69, type metadata accessor for VFSItem);
    return v72;
  }
  v74 = v52;
  v76 = *(_QWORD *)(v69 + 32);
  v75 = *(_QWORD *)(v69 + 40);
  if (v76 == 11822 && v75 == 0xE200000000000000
    || (sub_23B1C7388() & 1) != 0
    || v76 == 46 && v75 == 0xE100000000000000
    || (sub_23B1C7388() & 1) != 0)
  {
    *(_QWORD *)&v224[0] = 0;
    *((_QWORD *)&v224[0] + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v224[0] = 0xD00000000000001ELL;
    *((_QWORD *)&v224[0] + 1) = 0x800000023B207400;
    swift_bridgeObjectRetain();
    v77 = (void *)sub_23B1C63BC();
    v78 = objc_msgSend(v77, sel_fp_obfuscatedFilename);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  v86 = *(_QWORD *)v69;
  v87 = *(unsigned __int8 *)(v69 + 8);
  if (v87 != 2 || v86)
  {
    if (v87 == 2 && v86 == 1 && (*(_BYTE *)(v74 + 32) & 1) == 0)
    {
      sub_23AA937BC(v119, type metadata accessor for VFSItem);
      return 0xD000000000000025;
    }
  }
  else if ((*(_BYTE *)(v74 + 32) & 1) == 0)
  {
    sub_23AA937BC(v119, type metadata accessor for VFSItem);
    return 0xD000000000000024;
  }
  if (v125)
  {
    v88 = *(_QWORD *)(v119 + 16);
    v89 = *(unsigned __int8 *)(v119 + 24);
    *(_QWORD *)&v224[0] = v225;
    *((_QWORD *)&v224[0] + 1) = v226;
    *(_QWORD *)&v224[1] = v88;
    *((_QWORD *)&v224[1] + 1) = v89;
    *(_QWORD *)&v224[2] = 0;
    WORD4(v224[2]) = 512;
    v90 = v125;
    v91 = swift_beginAccess();
    v92 = *(_QWORD *)(v90 + 16);
    MEMORY[0x24BDAC7A8](v91);
    *(&v114 - 2) = (char *)v224;
    swift_bridgeObjectRetain();
    v93 = sub_23ADF91CC((uint64_t (*)(_OWORD *))sub_23AEB4AEC, (uint64_t)(&v114 - 4), v92);
    swift_bridgeObjectRelease();
    if ((v93 & 1) != 0)
    {
      *(_QWORD *)&v224[0] = 0;
      *((_QWORD *)&v224[0] + 1) = 0xE000000000000000;
      sub_23B1C6EFC();
      sub_23B1C64F4();
      v94 = v119;
      sub_23AA96F18(*(_QWORD *)(v119 + 16), *(_BYTE *)(v119 + 24));
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v33 = *(_QWORD *)&v224[0];
      sub_23AA937BC(v94, type metadata accessor for VFSItem);
      return v33;
    }
  }
  if (((*(uint64_t (**)(void))(*v123 + 256))() & 1) != 0 && (*(_BYTE *)(v74 + 32) & 1) == 0)
  {
    v97 = v123[2];
    v98 = *(_QWORD *)(v119 + 16);
    v99 = *(_BYTE *)(v119 + 24);
    v208 = v98;
    v209 = v99;
    (*(void (**)(_OWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v97 + 168))(v224, &v208, 1);
    sub_23AA724E8((uint64_t)v224, (uint64_t)v222, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v222, (uint64_t)v223, (uint64_t *)&unk_2542E4CB0);
    v113 = sub_23AAFC2A4((uint64_t)v223);
    if (v113 != 1)
    {
      memcpy(v216, v224, 0x1F0uLL);
      if (BYTE1(v216[17]) == 3)
      {
        if (!LOBYTE(v216[17]))
        {
          v210 = 0;
          v211 = 0xE000000000000000;
          sub_23B1C6EFC();
          sub_23B1C64F4();
          sub_23AA96F18(v98, v99);
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          sub_23AAFC3AC((uint64_t)v216);
          v33 = v210;
          v79 = v119;
          goto LABEL_42;
        }
        if (LOBYTE(v216[17]) != 2)
        {
          v210 = 0;
          v211 = 0xE000000000000000;
          sub_23B1C6EFC();
          sub_23B1C64F4();
          sub_23AA96F18(v98, v99);
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          sub_23AAFC3AC((uint64_t)v216);
          v33 = v210;
          sub_23AA937BC(v119, type metadata accessor for VFSItem);
          return v33;
        }
      }
      sub_23AAFC3AC((uint64_t)v216);
    }
  }
  v95 = sub_23AE1C4A4(*(_QWORD *)v119, *(_BYTE *)(v119 + 8), *(_QWORD *)(v119 + 16), *(_BYTE *)(v119 + 24), 0, (uint64_t)v123);
  if (v96)
  {
    v33 = (unint64_t)v95;
    sub_23AA937BC(v119, type metadata accessor for VFSItem);
  }
  else
  {
    v100 = v225;
    v101 = v226;
    v102 = sub_23AF9980C(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v104 = v102[2];
    v103 = v102[3];
    if (v104 >= v103 >> 1)
      v102 = sub_23AF9980C((_QWORD *)(v103 > 1), v104 + 1, 1, v102);
    v102[2] = v104 + 1;
    v105 = &v102[6 * v104];
    v105[4] = v100;
    v105[5] = v101;
    v130 = xmmword_23B1DA950;
    *((_OWORD *)v105 + 3) = xmmword_23B1DA950;
    v105[8] = 0;
    *((_WORD *)v105 + 36) = 512;
    v106 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(v74 + 16) + 504);
    v107 = sub_23AA7E38C(&qword_2542DE270, type metadata accessor for VFSItem, (uint64_t)&unk_23B1D2C0C);
    swift_retain();
    v106(v224, v119, v128, v107);
    swift_release();
    v108 = BYTE8(v224[0]);
    if (BYTE8(v224[0]) != 255)
    {
      v109 = *(_QWORD *)&v224[0];
      v111 = v102[2];
      v110 = v102[3];
      if (v111 >= v110 >> 1)
        v102 = sub_23AF9980C((_QWORD *)(v110 > 1), v111 + 1, 1, v102);
      v102[2] = v111 + 1;
      v112 = &v102[6 * v111];
      v112[4] = v109;
      v112[5] = v108;
      *((_OWORD *)v112 + 3) = v130;
      v112[8] = 0;
      *((_WORD *)v112 + 36) = 512;
    }
    v33 = sub_23AEA17B8((uint64_t)v102, v125, 0);
    swift_bridgeObjectRelease();
    sub_23AA937BC(v119, type metadata accessor for VFSItem);
  }
  return v33;
}

uint64_t sub_23AE631AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  __int128 v41;
  unint64_t v42;
  BOOL v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  char v50;
  uint64_t v51;
  uint8_t *v52;
  char v53;
  id v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t **v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  void (*v71)(unint64_t, char *);
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v75;
  unint64_t v76;
  void *v77;
  double v78;
  double v79;
  double v80;
  int64_t v81;
  uint64_t v82;
  char v83;
  id v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v88;
  uint8_t *v89;
  uint8_t **v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint8_t *v96;
  uint64_t result;
  uint64_t v98;
  uint64_t v99;
  char v100;
  double v101;
  double v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  double v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  double v122;
  double v123;
  double v124;
  uint64_t v125;
  uint64_t v126;
  double v127;
  double v128;
  double v129;
  uint64_t v130;
  id v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  uint64_t v135;
  uint8_t **v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  id v142;
  char *v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  uint64_t v147;
  uint8_t **v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  id v154;
  char *v155;
  NSObject *v156;
  os_log_type_t v157;
  uint8_t *v158;
  uint64_t v159;
  uint8_t **v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  double v169;
  double v170;
  void (*v171)(unint64_t, char *);
  double v172;
  uint64_t v173;
  uint64_t v174;
  double v175;
  double v176;
  double v177;
  char v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  __int128 v184;
  void (*v185)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t (*)(), uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t ObjectType;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  double v202;
  double v203;
  void (*v204)(unint64_t, char *);
  double v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  void *v209;
  double v210;
  double v211;
  double v212;
  uint64_t v213;
  void (*v214)(uint64_t);
  uint64_t v215;
  char *v216;
  uint64_t v217;
  _BYTE *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  __int128 v226;
  uint8_t **v227;
  _QWORD *v228;
  uint64_t v229;
  int64_t v230;
  uint64_t v231;
  __int128 v232;
  char *v233;
  uint8_t *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  int64_t v242;
  uint8_t *v243;
  char *v244;
  uint64_t v245;
  char v246;
  uint64_t v247;
  char v248;
  char v249[8];
  _QWORD v250[2];
  char v251;

  v3 = v2;
  v5 = type metadata accessor for SyncState();
  v222 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v221 = (char *)&v216 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v220 = (uint64_t)&v216 - v8;
  v217 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v217);
  v218 = (char *)&v216 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5BDC();
  v235 = *(_QWORD *)(v10 - 8);
  v236 = (char *)v10;
  MEMORY[0x24BDAC7A8](v10);
  v244 = (char *)&v216 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C5E4C();
  v237 = *(_QWORD *)(v12 - 8);
  v238 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v219 = (char *)&v216 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v216 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v216 = (char *)&v216 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v216 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v216 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v227 = (uint8_t **)((char *)&v216 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v216 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v216 - v31;
  v223 = a1[4];
  v224 = v1;
  v33 = v1 + 16;
  v34 = (unint64_t)&unk_2542E1F10;
  sub_23AA724E8(v33, (uint64_t)v249, (uint64_t *)&unk_2542E1F10);
  sub_23AA724E8((uint64_t)v249, (uint64_t)v250, (uint64_t *)&unk_2542E1F10);
  v228 = a1;
  v240 = v25;
  v233 = v17;
  v239 = v22;
  if (LOBYTE(v250[0]) == 2)
    goto LABEL_3;
  v81 = v250[0] & 1;
  v82 = v250[1];
  v83 = v251;
  *v32 = v81;
  *((_QWORD *)v32 + 1) = v82;
  v32[16] = v83;
  swift_storeEnumTagMultiPayload();
  v84 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v243 = (uint8_t *)v32;
  sub_23AA8EFC8((uint64_t)v32, (uint64_t)v30, qword_2542DDA70);
  v85 = sub_23B1C5E40();
  v86 = sub_23B1C6AA0();
  if (os_log_type_enabled(v85, v86))
  {
    v88 = swift_slowAlloc();
    v242 = v81;
    v89 = (uint8_t *)v88;
    v241 = swift_slowAlloc();
    v247 = v241;
    *(_DWORD *)v89 = 136446210;
    v234 = v89 + 4;
    v90 = v227;
    sub_23AA8EFC8((uint64_t)v30, (uint64_t)v227, qword_2542DDA70);
    sub_23AA8A05C((uint64_t)v30, qword_2542DDA70);
    sub_23AE2DEF0();
    v92 = v91;
    v94 = v93;
    sub_23AA8A05C((uint64_t)v90, qword_2542DDA70);
    v245 = sub_23AABEC68(v92, v94, &v247);
    v3 = v2;
    a1 = v228;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v85, v86, "%{public}s", v89, 0xCu);
    v95 = v241;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v95, -1, -1);
    v96 = v89;
    v81 = v242;
    MEMORY[0x23B8614BC](v96, -1, -1);
  }
  else
  {
    sub_23AA8A05C((uint64_t)v30, qword_2542DDA70);
  }

  v98 = (*(uint64_t (**)(char *, uint64_t))(v237 + 8))(v24, v238);
  v32 = v236;
  if (!v81)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v223 + 16) + 96))(&v247, v98);
    v99 = v247;
    v100 = v248;
    v34 = (unint64_t)v244;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v102 = v101;
    a1 = *(_QWORD **)(v235 + 8);
    ((void (*)(unint64_t, char *))a1)(v34, v32);
    v103 = v102 * 1000000000.0;
    if ((~COERCE__INT64(v102 * 1000000000.0) & 0x7FF0000000000000) == 0)
      goto LABEL_132;
    if (v103 <= -9.22337204e18)
      goto LABEL_133;
    if (v103 >= 9.22337204e18)
      goto LABEL_134;
    v104 = (uint64_t)v103;
    __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
    swift_allocObject();
    v105 = sub_23AEA220C(v99, v100, 0, v104, 0x8000);
    v34 = (unint64_t)v244;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v107 = v106;
    ((void (*)(unint64_t, char *))a1)(v34, v32);
    v108 = v107 * 1000000000.0;
    if ((~COERCE__INT64(v107 * 1000000000.0) & 0x7FF0000000000000) == 0)
      goto LABEL_135;
    if (v108 <= -9.22337204e18)
      goto LABEL_136;
    if (v108 >= 9.22337204e18)
      goto LABEL_137;
    sub_23ADF3AAC(v105, (uint64_t)v108);
    if (v3)
    {
      swift_release();
LABEL_50:
      v112 = (uint64_t)v243;
      return sub_23AA8A05C(v112, qword_2542DDA70);
    }
    v119 = swift_release();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v223 + 16) + 104))(&v247, v119);
    v120 = v247;
    v121 = v248;
    v34 = (unint64_t)v244;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v123 = v122;
    ((void (*)(unint64_t, char *))a1)(v34, v32);
    v124 = v123 * 1000000000.0;
    if ((~COERCE__INT64(v123 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v124 > -9.22337204e18)
      {
        if (v124 < 9.22337204e18)
        {
          v125 = (uint64_t)v124;
          swift_allocObject();
          v126 = sub_23AEA220C(v120, v121, 0, v125, 0x8000);
          v34 = (unint64_t)v244;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v128 = v127;
          ((void (*)(unint64_t, char *))a1)(v34, v32);
          v129 = v128 * 1000000000.0;
          if ((~COERCE__INT64(v128 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            a1 = v228;
            v17 = v233;
            v22 = v239;
            v130 = (uint64_t)v243;
            if (v129 > -9.22337204e18)
            {
              if (v129 < 9.22337204e18)
              {
                v34 = (unint64_t)v228;
                sub_23ADF3AAC(v126, (uint64_t)v129);
                sub_23AA8A05C(v130, qword_2542DDA70);
                swift_release();
                goto LABEL_3;
              }
              goto LABEL_158;
            }
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
            goto LABEL_159;
          }
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
LABEL_155:
        __break(1u);
        goto LABEL_156;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_155;
  }
  v109 = a1[3];
  a1 = (_QWORD *)v223;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v223 + 16) + 96))(&v245, v98);
  v247 = v245;
  v248 = v246;
  sub_23AAB5630();
  v110 = swift_allocObject();
  *(_OWORD *)(v110 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v110 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE408);
  v111 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v109 + 272))(&v247, v110);
  if (v3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  v34 = v111;
  swift_bridgeObjectRelease();
  if (v34 >> 62)
    goto LABEL_139;
  v22 = v239;
  if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_140;
LABEL_53:
  if ((v34 & 0xC000000000000001) != 0)
    goto LABEL_171;
  if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_173;
  }
  v113 = v3;
  v114 = *(_QWORD *)(v34 + 32);
  swift_retain();
  while (1)
  {
    swift_bridgeObjectRelease();
    v116 = *(_QWORD *)(v114 + 88);
    v115 = *(_QWORD *)(v114 + 96);
    v117 = *(unsigned __int8 *)(v114 + 104);
    sub_23AAAE478((id)v116, (id)v115, *(_BYTE *)(v114 + 104));
    swift_release();
    if (v117 == 3)
    {
      sub_23AAAEE10((void *)v116, (id)v115, 3);
      v3 = v113;
      a1 = (_QWORD *)v223;
      v22 = v239;
      goto LABEL_141;
    }
    v22 = v239;
    if (v117 != 4)
    {
      sub_23AAAEE10((void *)v116, (id)v115, v117);
      goto LABEL_50;
    }
    sub_23AAAEE10((void *)v116, (id)v115, 4);
    v3 = v113;
    a1 = (_QWORD *)v223;
    if (v116 & 0xFFFFFFFFFFFFFFFELL | v115)
      goto LABEL_50;
LABEL_141:
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)a1[2] + 96))(&v247, v118);
    v200 = v247;
    v201 = v248;
    v34 = (unint64_t)v244;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v203 = v202;
    v204 = *(void (**)(unint64_t, char *))(v235 + 8);
    v204(v34, v32);
    v205 = v203 * 1000000000.0;
    if ((~COERCE__INT64(v203 * 1000000000.0) & 0x7FF0000000000000) == 0)
      goto LABEL_165;
    if (v205 > -9.22337204e18)
      break;
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    v113 = v3;
    v114 = MEMORY[0x23B85F860](0, v34);
  }
  if (v205 >= 9.22337204e18)
    goto LABEL_167;
  v206 = (uint64_t)v205;
  v207 = swift_allocObject();
  *(_BYTE *)(v207 + 144) = v201;
  *(_QWORD *)(v207 + 24) = 0;
  *(_QWORD *)(v207 + 32) = 0;
  *(_QWORD *)(v207 + 16) = 0;
  *(_BYTE *)(v207 + 40) = 1;
  *(_OWORD *)(v207 + 48) = 0u;
  *(_OWORD *)(v207 + 64) = 0u;
  *(_QWORD *)(v207 + 80) = 0;
  *(_QWORD *)(v207 + 112) = 0;
  *(_QWORD *)(v207 + 120) = v206;
  *(_QWORD *)(v207 + 128) = 0x8000;
  *(_QWORD *)(v207 + 136) = v200;
  *(_OWORD *)(v207 + 88) = xmmword_23B1DA960;
  *(_BYTE *)(v207 + 104) = 0;
  sub_23AAAEE10((void *)0x40100, 0, 0);
  if (*(_BYTE *)(v207 + 104))
    goto LABEL_174;
  v208 = *(_QWORD *)(v207 + 88);
  v209 = *(void **)(v207 + 96);
  *(_QWORD *)(v207 + 88) = v208 | 0x20000;
  *(_BYTE *)(v207 + 104) = 0;
  swift_retain();
  sub_23AAAEE10((void *)v208, v209, 0);
  v34 = (unint64_t)v244;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v211 = v210;
  v204(v34, v32);
  v212 = v211 * 1000000000.0;
  a1 = v228;
  v213 = (uint64_t)v243;
  if ((~COERCE__INT64(v211 * 1000000000.0) & 0x7FF0000000000000) == 0)
    goto LABEL_168;
  v17 = v233;
  if (v212 <= -9.22337204e18)
    goto LABEL_169;
  if (v212 >= 9.22337204e18)
    goto LABEL_170;
  sub_23ADF3AAC(v207, (uint64_t)v212);
  if (v3)
  {
    swift_release();
    v112 = v213;
    return sub_23AA8A05C(v112, qword_2542DDA70);
  }
  swift_release();
  v34 = *(_QWORD *)(v223 + 16);
  v214 = *(void (**)(uint64_t))(*(_QWORD *)v34 + 832);
  v215 = swift_retain();
  v214(v215);
  swift_release();
  sub_23AA8A05C(v213, qword_2542DDA70);
LABEL_3:
  v35 = *(_QWORD *)(v224 + 40);
  v36 = *(_QWORD *)(v35 + 64);
  v229 = v35 + 64;
  v37 = 1 << *(_BYTE *)(v35 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & v36;
  v230 = (unint64_t)(v37 + 63) >> 6;
  v234 = (uint8_t *)v35;
  swift_bridgeObjectRetain();
  v40 = 0;
  *(_QWORD *)&v41 = 136446210;
  v226 = v41;
  v225 = MEMORY[0x24BEE4AD8] + 8;
  v232 = xmmword_23B1DA960;
  if (v39)
  {
LABEL_6:
    v241 = (v39 - 1) & v39;
    v242 = v40;
    v42 = __clz(__rbit64(v39)) | (v40 << 6);
    goto LABEL_18;
  }
  while (1)
  {
    v43 = __OFADD__(v40, 1);
    v44 = v40 + 1;
    if (v43)
      goto LABEL_130;
    if (v44 >= v230)
      goto LABEL_68;
    v45 = *(_QWORD *)(v229 + 8 * v44);
    if (!v45)
      break;
LABEL_17:
    v241 = (v45 - 1) & v45;
    v242 = v44;
    v42 = __clz(__rbit64(v45)) + (v44 << 6);
LABEL_18:
    v47 = 16 * v42;
    v48 = *((_QWORD *)v234 + 6) + v47;
    v49 = *(uint8_t **)v48;
    v50 = *(_BYTE *)(v48 + 8);
    v51 = *((_QWORD *)v234 + 7) + v47;
    v52 = *(uint8_t **)v51;
    v53 = *(_BYTE *)(v51 + 8);
    v54 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v55 = v22;
    v56 = sub_23B1C5E40();
    v57 = sub_23B1C6A94();
    v58 = os_log_type_enabled(v56, v57);
    v243 = v49;
    if (v58)
    {
      v59 = swift_slowAlloc();
      v231 = v3;
      v60 = v59;
      v61 = swift_slowAlloc();
      v247 = v61;
      *(_DWORD *)v60 = v226;
      v62 = v227;
      *v227 = v49;
      *((_BYTE *)v62 + 8) = v50;
      v62[2] = v52;
      *((_BYTE *)v62 + 24) = v53;
      swift_storeEnumTagMultiPayload();
      sub_23AE2DEF0();
      v64 = v63;
      v66 = v65;
      sub_23AA8A05C((uint64_t)v62, qword_2542DDA70);
      *(_QWORD *)(v60 + 4) = sub_23AABEC68(v64, v66, &v247);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v56, v57, "%{public}s", (uint8_t *)v60, 0xCu);
      swift_arrayDestroy();
      v67 = v61;
      a1 = v228;
      MEMORY[0x23B8614BC](v67, -1, -1);
      v68 = v60;
      v3 = v231;
      MEMORY[0x23B8614BC](v68, -1, -1);

      (*(void (**)(char *, uint64_t))(v237 + 8))(v239, v238);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v237 + 8))(v55, v238);
    }
    v34 = (unint64_t)v244;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v70 = v69;
    v32 = v236;
    v71 = *(void (**)(unint64_t, char *))(v235 + 8);
    v71(v34, v236);
    v72 = v70 * 1000000000.0;
    if ((~COERCE__INT64(v70 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      swift_bridgeObjectRetain();
      v199 = sub_23B1C7088();
      swift_bridgeObjectRelease();
      v22 = v239;
      if (v199)
        goto LABEL_53;
LABEL_140:
      v118 = swift_bridgeObjectRelease();
      goto LABEL_141;
    }
    if (v72 <= -9.22337204e18)
      goto LABEL_125;
    if (v72 >= 9.22337204e18)
      goto LABEL_126;
    v73 = (uint64_t)v72;
    __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
    v74 = swift_allocObject();
    *(_BYTE *)(v74 + 144) = v50;
    *(_QWORD *)(v74 + 24) = 0;
    *(_QWORD *)(v74 + 32) = 0;
    *(_QWORD *)(v74 + 16) = 0;
    *(_BYTE *)(v74 + 40) = 1;
    *(_OWORD *)(v74 + 48) = 0u;
    *(_OWORD *)(v74 + 64) = 0u;
    *(_QWORD *)(v74 + 80) = 0;
    *(_QWORD *)(v74 + 112) = 0;
    *(_QWORD *)(v74 + 120) = v73;
    v75 = v243;
    *(_QWORD *)(v74 + 128) = 0x8000;
    *(_QWORD *)(v74 + 136) = v75;
    *(_OWORD *)(v74 + 88) = v232;
    *(_BYTE *)(v74 + 104) = 0;
    sub_23AAAEE10((void *)0x40100, 0, 0);
    if (*(_BYTE *)(v74 + 104))
      goto LABEL_174;
    v76 = *(_QWORD *)(v74 + 88);
    v77 = *(void **)(v74 + 96);
    *(_QWORD *)(v74 + 88) = v76 | 0x2000;
    *(_BYTE *)(v74 + 104) = 0;
    swift_retain();
    sub_23AAAEE10((void *)v76, v77, 0);
    v34 = (unint64_t)v244;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v79 = v78;
    v71(v34, v32);
    v80 = v79 * 1000000000.0;
    if ((~COERCE__INT64(v79 * 1000000000.0) & 0x7FF0000000000000) == 0)
      goto LABEL_127;
    if (v80 <= -9.22337204e18)
      goto LABEL_128;
    if (v80 >= 9.22337204e18)
      goto LABEL_129;
    v34 = (unint64_t)a1;
    sub_23ADF3AAC(v74, (uint64_t)v80);
    if (v3)
    {
      swift_release();
      return swift_release();
    }
    swift_release();
    v17 = v233;
    v22 = v239;
    v39 = v241;
    v40 = v242;
    if (v241)
      goto LABEL_6;
  }
  v46 = v44 + 1;
  if (v44 + 1 >= v230)
    goto LABEL_68;
  v45 = *(_QWORD *)(v229 + 8 * v46);
  if (v45)
    goto LABEL_16;
  v46 = v44 + 2;
  if (v44 + 2 >= v230)
    goto LABEL_68;
  v45 = *(_QWORD *)(v229 + 8 * v46);
  if (v45)
    goto LABEL_16;
  v46 = v44 + 3;
  if (v44 + 3 >= v230)
    goto LABEL_68;
  v45 = *(_QWORD *)(v229 + 8 * v46);
  if (v45)
  {
LABEL_16:
    v44 = v46;
    goto LABEL_17;
  }
  while (1)
  {
    v44 = v46 + 1;
    if (__OFADD__(v46, 1))
      goto LABEL_131;
    if (v44 >= v230)
      break;
    v45 = *(_QWORD *)(v229 + 8 * v44);
    ++v46;
    if (v45)
      goto LABEL_17;
  }
  v17 = v233;
LABEL_68:
  result = swift_release();
  if ((*(_BYTE *)(v224 + 48) & 1) != 0)
  {
    result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[3] + 304))(0);
    if (v3)
      return result;
    if ((result & 1) == 0)
    {
      v142 = (id)fpfs_current_or_default_log();
      v143 = v216;
      sub_23B1C5E58();
      v144 = sub_23B1C5E40();
      v145 = sub_23B1C6A94();
      if (os_log_type_enabled(v144, v145))
      {
        v146 = (uint8_t *)swift_slowAlloc();
        v147 = swift_slowAlloc();
        v247 = v147;
        *(_DWORD *)v146 = v226;
        v243 = v146 + 4;
        v148 = v227;
        swift_storeEnumTagMultiPayload();
        sub_23AE2DEF0();
        v150 = v149;
        v152 = v151;
        sub_23AA8A05C((uint64_t)v148, qword_2542DDA70);
        v245 = sub_23AABEC68(v150, v152, &v247);
        a1 = v228;
        sub_23B1C6CBC();
        v3 = 0;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v144, v145, "%{public}s", v146, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v147, -1, -1);
        MEMORY[0x23B8614BC](v146, -1, -1);

        (*(void (**)(char *, uint64_t))(v237 + 8))(v216, v238);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v237 + 8))(v143, v238);
      }
      v198 = (uint64_t)v218;
      *v218 = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t))(*a1 + 312))(v198);
      result = sub_23AA8A05C(v198, (uint64_t *)&unk_2542DDFB0);
      v17 = v233;
    }
  }
  if ((*(_BYTE *)(v224 + 49) & 1) != 0)
  {
    v131 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v132 = sub_23B1C5E40();
    v133 = sub_23B1C6A94();
    if (os_log_type_enabled(v132, v133))
    {
      v134 = (uint8_t *)swift_slowAlloc();
      v135 = swift_slowAlloc();
      v247 = v135;
      *(_DWORD *)v134 = v226;
      v243 = v134 + 4;
      v136 = v227;
      swift_storeEnumTagMultiPayload();
      sub_23AE2DEF0();
      v138 = v137;
      v139 = v3;
      v141 = v140;
      sub_23AA8A05C((uint64_t)v136, qword_2542DDA70);
      v245 = sub_23AABEC68(v138, v141, &v247);
      a1 = v228;
      sub_23B1C6CBC();
      v3 = v139;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v132, v133, "%{public}s", v134, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v135, -1, -1);
      MEMORY[0x23B8614BC](v134, -1, -1);

      (*(void (**)(char *, uint64_t))(v237 + 8))(v233, v238);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v237 + 8))(v17, v238);
    }
    v153 = (uint64_t)v218;
    *v218 = 0;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t))(*a1 + 312))(v153);
    result = sub_23AA8A05C(v153, (uint64_t *)&unk_2542DDFB0);
  }
  if ((*(_BYTE *)(v224 + 50) & 1) != 0)
  {
    v154 = (id)fpfs_current_or_default_log();
    v155 = v219;
    sub_23B1C5E58();
    v156 = sub_23B1C5E40();
    v157 = sub_23B1C6A94();
    if (os_log_type_enabled(v156, v157))
    {
      v158 = (uint8_t *)swift_slowAlloc();
      v159 = swift_slowAlloc();
      v247 = v159;
      *(_DWORD *)v158 = v226;
      v243 = v158 + 4;
      v160 = v227;
      swift_storeEnumTagMultiPayload();
      sub_23AE2DEF0();
      v162 = v161;
      v163 = v3;
      v165 = v164;
      sub_23AA8A05C((uint64_t)v160, qword_2542DDA70);
      v245 = sub_23AABEC68(v162, v165, &v247);
      sub_23B1C6CBC();
      v3 = v163;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v156, v157, "%{public}s", v158, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v159, -1, -1);
      MEMORY[0x23B8614BC](v158, -1, -1);

      v166 = (*(uint64_t (**)(char *, uint64_t))(v237 + 8))(v219, v238);
    }
    else
    {

      v166 = (*(uint64_t (**)(char *, uint64_t))(v237 + 8))(v155, v238);
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v223 + 16) + 96))(&v247, v166);
    v167 = v247;
    v168 = v248;
    v34 = (unint64_t)v244;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v170 = v169;
    v32 = v236;
    v171 = *(void (**)(unint64_t, char *))(v235 + 8);
    v171(v34, v236);
    v172 = v170 * 1000000000.0;
    if ((~COERCE__INT64(v170 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v172 > -9.22337204e18)
      {
        if (v172 < 9.22337204e18)
        {
          v173 = (uint64_t)v172;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6098);
          v174 = swift_allocObject();
          *(_BYTE *)(v174 + 144) = v168;
          *(_QWORD *)(v174 + 24) = 0;
          *(_QWORD *)(v174 + 32) = 0;
          *(_QWORD *)(v174 + 16) = 0;
          *(_BYTE *)(v174 + 40) = 1;
          *(_OWORD *)(v174 + 48) = 0u;
          *(_OWORD *)(v174 + 64) = 0u;
          *(_QWORD *)(v174 + 80) = 0;
          *(_QWORD *)(v174 + 112) = 0x2000000000000000;
          *(_QWORD *)(v174 + 120) = v173;
          *(_QWORD *)(v174 + 128) = 0;
          *(_QWORD *)(v174 + 136) = v167;
          *(_OWORD *)(v174 + 88) = xmmword_23B1DA970;
          *(_BYTE *)(v174 + 104) = 0;
          sub_23AAAEE10((void *)0x40100, 0, 0);
          v34 = (unint64_t)v244;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v176 = v175;
          v171(v34, v32);
          v177 = v176 * 1000000000.0;
          if ((~COERCE__INT64(v176 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            a1 = v228;
            if (v177 > -9.22337204e18)
            {
              if (v177 < 9.22337204e18)
              {
                sub_23ADF3AAC(v174, (uint64_t)v177);
                result = swift_release();
                if (v3)
                  return result;
                goto LABEL_89;
              }
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
              goto LABEL_166;
            }
LABEL_163:
            __break(1u);
            goto LABEL_164;
          }
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
LABEL_161:
        __break(1u);
        goto LABEL_162;
      }
    }
    else
    {
LABEL_159:
      __break(1u);
    }
    __break(1u);
    goto LABEL_161;
  }
LABEL_89:
  if ((*(_BYTE *)(v223 + 32) & 1) != 0)
  {
LABEL_90:
    v178 = *(_BYTE *)((*(uint64_t (**)(uint64_t))(*a1 + 192))(result) + 49);
    result = swift_release();
    if ((v178 & 1) != 0)
    {
LABEL_95:
      v180 = *(unsigned __int8 *)(v223 + 32);
      v181 = swift_allocObject();
      v182 = v224;
      v183 = *(_OWORD *)(v224 + 16);
      *(_OWORD *)(v181 + 16) = *(_OWORD *)v224;
      *(_OWORD *)(v181 + 32) = v183;
      v184 = *(_OWORD *)(v182 + 48);
      *(_OWORD *)(v181 + 48) = *(_OWORD *)(v182 + 32);
      *(_OWORD *)(v181 + 64) = v184;
      *(_QWORD *)(v181 + 80) = a1;
      v185 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t (*)(), uint64_t))(*a1 + 416);
      sub_23ADF2564(v182);
      swift_retain();
      v185("processStreamEvent(db:)", 23, 2, v180, 1, nullsub_1, 0, sub_23AEB46D4, v181);
      return swift_release();
    }
  }
  else
  {
    v179 = *(_BYTE *)((*(uint64_t (**)(uint64_t))(*a1 + 192))(result) + 48);
    result = swift_release();
    if ((v179 & 1) != 0)
      goto LABEL_95;
    if ((*(_BYTE *)(v223 + 32) & 1) != 0)
      goto LABEL_90;
  }
  v34 = (unint64_t)a1;
  if (((*(uint64_t (**)(uint64_t))(*a1 + 152))(result) & 4) == 0)
    goto LABEL_95;
  v186 = *(_QWORD *)(v224 + 8);
  a1 = (_QWORD *)(v186 + 64);
  v187 = 1 << *(_BYTE *)(v186 + 32);
  v188 = -1;
  if (v187 < 64)
    v188 = ~(-1 << v187);
  v189 = v188 & *(_QWORD *)(v186 + 64);
  v244 = (char *)((unint64_t)(v187 + 63) >> 6);
  swift_bridgeObjectRetain();
  v190 = 0;
  v32 = v221;
  while (2)
  {
    if (v189)
    {
      v191 = __clz(__rbit64(v189));
      v189 &= v189 - 1;
      v192 = v191 | (v190 << 6);
      goto LABEL_101;
    }
    v43 = __OFADD__(v190++, 1);
    if (v43)
      goto LABEL_138;
    if (v190 >= (uint64_t)v244)
      return swift_release();
    v196 = a1[v190];
    if (v196)
    {
LABEL_115:
      v189 = (v196 - 1) & v196;
      v192 = __clz(__rbit64(v196)) + (v190 << 6);
LABEL_101:
      v193 = v220;
      sub_23AA907B0(*(_QWORD *)(v186 + 56) + *(_QWORD *)(v222 + 72) * v192, v220, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
      sub_23AA94050(v193, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
      v34 = v228[6];
      v194 = v228[7];
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v194 + 8))(v32, ObjectType, v194);
      sub_23AA937BC((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
      if (v3)
        return swift_release();
      continue;
    }
    break;
  }
  v197 = v190 + 1;
  if (v190 + 1 >= (uint64_t)v244)
    return swift_release();
  v196 = a1[v197];
  if (v196)
    goto LABEL_114;
  v197 = v190 + 2;
  if (v190 + 2 >= (uint64_t)v244)
    return swift_release();
  v196 = a1[v197];
  if (v196)
    goto LABEL_114;
  v197 = v190 + 3;
  if (v190 + 3 >= (uint64_t)v244)
    return swift_release();
  v196 = a1[v197];
  if (v196)
    goto LABEL_114;
  v197 = v190 + 4;
  if (v190 + 4 >= (uint64_t)v244)
    return swift_release();
  v196 = a1[v197];
  if (v196)
  {
LABEL_114:
    v190 = v197;
    goto LABEL_115;
  }
  while (1)
  {
    v190 = v197 + 1;
    if (__OFADD__(v197, 1))
      break;
    if (v190 >= (uint64_t)v244)
      return swift_release();
    v196 = a1[v190];
    ++v197;
    if (v196)
      goto LABEL_115;
  }
LABEL_173:
  __break(1u);
LABEL_174:
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

void sub_23AE64CC0(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  __int128 v34;
  _QWORD **v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  BOOL v40;
  int64_t v41;
  unint64_t v42;
  char *v43;
  int64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  NSObject *v51;
  char *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  double v60;
  double v61;
  void (*v62)(char *, uint64_t);
  double v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  double v68;
  double v69;
  double v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  double v81;
  double v82;
  void (*v83)(char *, uint64_t);
  double v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  double v91;
  double v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  double v96;
  double v97;
  double v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  double v121;
  double v122;
  void (*v123)(char *, uint64_t);
  double v124;
  uint64_t v125;
  double v126;
  double v127;
  double v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  void (*v136)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t (*)(), uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t ObjectType;
  unint64_t v147;
  uint64_t v148;
  id v149;
  NSObject *v150;
  os_log_type_t v151;
  uint8_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  double v158;
  double v159;
  void (*v160)(char *, uint64_t);
  double v161;
  uint64_t v162;
  unint64_t v163;
  void *v164;
  double v165;
  double v166;
  double v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  _BYTE *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t *v179;
  __int128 v180;
  uint64_t v181;
  int64_t v182;
  uint64_t v183;
  uint8_t *v184;
  uint64_t v185;
  unint64_t v186;
  __int128 v187;
  char *v188;
  uint8_t *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  unint64_t v197;
  char *v198;
  uint64_t v199[2];
  void *v200;
  char v201[8];
  char v202[8];
  uint64_t v203;
  unsigned __int8 v204;

  v3 = v2;
  v5 = type metadata accessor for SyncState();
  v174 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v173 = (char *)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v172 = (uint64_t)&v168 - v8;
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  MEMORY[0x24BDAC7A8](v170);
  v171 = (char *)&v168 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5BDC();
  v191 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C5E4C();
  v193 = *(_QWORD *)(v13 - 8);
  v194 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v168 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v177 = (char *)&v168 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v169 = (char *)&v168 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v198 = (char *)&v168 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v168 - v23;
  v175 = a1[4];
  v176 = v1;
  v25 = (unint64_t)&qword_2542DE710;
  sub_23AA724E8(v1 + 16, (uint64_t)v201, &qword_2542DE710);
  sub_23AA724E8((uint64_t)v201, (uint64_t)v202, &qword_2542DE710);
  v26 = v202[0];
  v195 = a1;
  v190 = v10;
  v192 = v12;
  v188 = v16;
  if (v202[0] == 2)
  {
    v27 = v198;
    goto LABEL_3;
  }
  v72 = v203;
  LODWORD(v197) = v204;
  v73 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v74 = sub_23B1C5E40();
  v75 = sub_23B1C6AA0();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc();
    v77 = swift_slowAlloc();
    v196 = v77;
    v186 = v2;
    *(_DWORD *)v76 = 136446210;
    *(_QWORD *)&v187 = v72;
    v199[0] = 0;
    v199[1] = 0xE000000000000000;
    v200 = (void *)v77;
    sub_23B1C6EFC();
    v189 = v76 + 4;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B149E14(v187, v197);
    sub_23B1C64F4();
    a1 = v195;
    swift_bridgeObjectRelease();
    v199[0] = sub_23AABEC68(v199[0], v199[1], (uint64_t *)&v200);
    v3 = v186;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v74, v75, "%{public}s", v76, 0xCu);
    v78 = v196;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v78, -1, -1);
    v79 = v76;
    v10 = v190;
    MEMORY[0x23B8614BC](v79, -1, -1);
  }

  v80 = (*(uint64_t (**)(char *, uint64_t))(v193 + 8))(v24, v194);
  v12 = v192;
  if ((v26 & 1) == 0)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v175 + 16) + 96))(v199, v80);
    v25 = v199[0];
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v82 = v81;
    v83 = *(void (**)(char *, uint64_t))(v191 + 8);
    v83(v12, v10);
    v84 = v82 * 1000000000.0;
    if ((~COERCE__INT64(v82 * 1000000000.0) & 0x7FF0000000000000) == 0)
      goto LABEL_131;
    if (v84 <= -9.22337204e18)
      goto LABEL_132;
    if (v84 >= 9.22337204e18)
      goto LABEL_133;
    v85 = (uint64_t)v84;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
    swift_allocObject();
    v86 = sub_23AEA89CC((void *)v25, 0, v85, 0x8000);

    sub_23B1C5BD0();
    sub_23B1C5B94();
    v88 = v87;
    v83(v12, v10);
    v89 = v88 * 1000000000.0;
    if ((~COERCE__INT64(v88 * 1000000000.0) & 0x7FF0000000000000) == 0)
      goto LABEL_134;
    if (v89 <= -9.22337204e18)
      goto LABEL_135;
    if (v89 >= 9.22337204e18)
      goto LABEL_136;
    sub_23ADF3AAC(v86, (uint64_t)v89);
    v90 = swift_release();
    v16 = v188;
    v27 = v198;
    if (v3)
      return;
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v175 + 16) + 104))(v199, v90);
    v25 = v199[0];
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v92 = v91;
    v83(v12, v10);
    v93 = v92 * 1000000000.0;
    if ((~COERCE__INT64(v92 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v93 > -9.22337204e18)
      {
        if (v93 < 9.22337204e18)
        {
          v94 = (uint64_t)v93;
          swift_allocObject();
          v95 = sub_23AEA89CC((void *)v25, 0, v94, 0x8000);

          sub_23B1C5BD0();
          sub_23B1C5B94();
          v97 = v96;
          v83(v12, v10);
          v98 = v97 * 1000000000.0;
          if ((~COERCE__INT64(v97 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v98 > -9.22337204e18)
            {
              if (v98 < 9.22337204e18)
              {
                sub_23ADF3AAC(v95, (uint64_t)v98);
                swift_release();
                goto LABEL_3;
              }
              goto LABEL_154;
            }
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
            goto LABEL_155;
          }
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
LABEL_151:
        __break(1u);
        goto LABEL_152;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_151;
  }
  v99 = a1[3];
  (*(void (**)(void **__return_ptr, uint64_t))(**(_QWORD **)(v175 + 16) + 96))(&v200, v80);
  v100 = v200;
  v199[0] = (uint64_t)v200;
  sub_23AEA49E8();
  v101 = swift_allocObject();
  *(_OWORD *)(v101 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v101 + 32) = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE410);
  v102 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v99 + 272))(v199, v101);
  if (v3)
  {

    swift_bridgeObjectRelease();
    return;
  }
  v25 = v102;
  swift_bridgeObjectRelease();

  if (v25 >> 62)
    goto LABEL_138;
  v27 = v198;
  if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_139;
LABEL_58:
  if ((v25 & 0xC000000000000001) != 0)
    goto LABEL_167;
  if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_169;
  }
  v103 = *(_QWORD *)(v25 + 32);
  swift_retain();
  while (1)
  {
    swift_bridgeObjectRelease();
    v104 = *(_QWORD *)(v103 + 88);
    v25 = *(_QWORD *)(v103 + 96);
    v105 = *(unsigned __int8 *)(v103 + 104);
    sub_23AAAE478((id)v104, (id)v25, *(_BYTE *)(v103 + 104));
    swift_release();
    if (v105 == 3)
    {
      sub_23AAAEE10((void *)v104, (id)v25, 3);
      goto LABEL_140;
    }
    if (v105 != 4)
    {
      sub_23AAAEE10((void *)v104, (id)v25, v105);
      return;
    }
    sub_23AAAEE10((void *)v104, (id)v25, 4);
    if (v104 & 0xFFFFFFFFFFFFFFFELL | v25)
      break;
    while (1)
    {
LABEL_140:
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v175 + 16) + 96))(v199, v106);
      v157 = v199[0];
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v159 = v158;
      v160 = *(void (**)(char *, uint64_t))(v191 + 8);
      v160(v12, v10);
      v161 = v159 * 1000000000.0;
      if ((~COERCE__INT64(v159 * 1000000000.0) & 0x7FF0000000000000) == 0)
        goto LABEL_161;
      if (v161 <= -9.22337204e18)
        break;
      if (v161 >= 9.22337204e18)
        goto LABEL_163;
      v162 = (uint64_t)v161;
      v25 = swift_allocObject();
      *(_BYTE *)(v25 + 40) = 1;
      *(_QWORD *)(v25 + 24) = 0;
      *(_QWORD *)(v25 + 32) = 0;
      *(_QWORD *)(v25 + 16) = 0;
      *(_OWORD *)(v25 + 48) = 0u;
      *(_OWORD *)(v25 + 64) = 0u;
      *(_QWORD *)(v25 + 80) = 0;
      *(_QWORD *)(v25 + 112) = 0;
      *(_QWORD *)(v25 + 120) = v162;
      *(_QWORD *)(v25 + 128) = 0x8000;
      *(_QWORD *)(v25 + 136) = v157;
      *(_OWORD *)(v25 + 88) = xmmword_23B1DA960;
      *(_BYTE *)(v25 + 104) = 0;
      sub_23AAAEE10((void *)0x40100, 0, 0);
      if (*(_BYTE *)(v25 + 104))
        goto LABEL_170;
      v163 = *(_QWORD *)(v25 + 88);
      v164 = *(void **)(v25 + 96);
      *(_QWORD *)(v25 + 88) = v163 | 0x20000;
      *(_BYTE *)(v25 + 104) = 0;
      swift_retain();
      sub_23AAAEE10((void *)v163, v164, 0);
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v166 = v165;
      v160(v12, v10);
      v167 = v166 * 1000000000.0;
      if ((~COERCE__INT64(v166 * 1000000000.0) & 0x7FF0000000000000) == 0)
        goto LABEL_164;
      v16 = v188;
      if (v167 <= -9.22337204e18)
        goto LABEL_165;
      if (v167 >= 9.22337204e18)
        goto LABEL_166;
      sub_23ADF3AAC(v25, (uint64_t)v167);
      if (v3)
        goto LABEL_92;
      swift_release();
LABEL_3:
      v28 = *(_QWORD *)(v176 + 40);
      v29 = *(_QWORD *)(v28 + 64);
      v181 = v28 + 64;
      v30 = 1 << *(_BYTE *)(v28 + 32);
      v31 = -1;
      if (v30 < 64)
        v31 = ~(-1 << v30);
      v32 = v31 & v29;
      v182 = (unint64_t)(v30 + 63) >> 6;
      v179 = &v199[1];
      v189 = (uint8_t *)v28;
      swift_bridgeObjectRetain();
      v33 = 0;
      *(_QWORD *)&v34 = 136446210;
      v180 = v34;
      v178 = MEMORY[0x24BEE4AD8] + 8;
      v187 = xmmword_23B1DA960;
      v35 = (_QWORD **)v195;
      if (v32)
      {
LABEL_6:
        v36 = v3;
        v37 = __clz(__rbit64(v32));
        v38 = (v32 - 1) & v32;
        v198 = v33;
        v39 = v37 | ((_QWORD)v33 << 6);
        goto LABEL_18;
      }
      while (1)
      {
        v40 = __OFADD__(v33, 1);
        v41 = (int64_t)(v33 + 1);
        if (v40)
          goto LABEL_129;
        if (v41 >= v182)
        {
          v43 = v177;
          goto LABEL_66;
        }
        v42 = *(_QWORD *)(v181 + 8 * v41);
        v43 = v177;
        if (!v42)
        {
          v44 = v41 + 1;
          if (v41 + 1 >= v182)
            goto LABEL_66;
          v42 = *(_QWORD *)(v181 + 8 * v44);
          if (!v42)
          {
            v44 = v41 + 2;
            if (v41 + 2 >= v182)
              goto LABEL_66;
            v42 = *(_QWORD *)(v181 + 8 * v44);
            if (!v42)
            {
              v44 = v41 + 3;
              if (v41 + 3 >= v182)
                goto LABEL_66;
              v42 = *(_QWORD *)(v181 + 8 * v44);
              if (!v42)
              {
                while (1)
                {
                  v41 = v44 + 1;
                  if (__OFADD__(v44, 1))
                    goto LABEL_130;
                  if (v41 >= v182)
                    break;
                  v42 = *(_QWORD *)(v181 + 8 * v41);
                  ++v44;
                  if (v42)
                    goto LABEL_17;
                }
                v10 = v190;
                v12 = v192;
LABEL_66:
                v107 = swift_release();
                if ((*(_BYTE *)(v176 + 48) & 1) != 0)
                {
                  v107 = (*(uint64_t (**)(_QWORD))(*v35[3] + 304))(0);
                  if (v3)
                    return;
                  if ((v107 & 1) != 0)
                  {
                    v35 = (_QWORD **)v195;
                    v43 = v177;
                  }
                  else
                  {
                    v149 = (id)fpfs_current_or_default_log();
                    v27 = v169;
                    sub_23B1C5E58();
                    v150 = sub_23B1C5E40();
                    v151 = sub_23B1C6A94();
                    if (os_log_type_enabled(v150, v151))
                    {
                      v152 = (uint8_t *)swift_slowAlloc();
                      v153 = swift_slowAlloc();
                      v199[0] = v153;
                      *(_DWORD *)v152 = v180;
                      v200 = (void *)sub_23AABEC68(0xD000000000000035, 0x800000023B202B90, v199);
                      v10 = v190;
                      sub_23B1C6CBC();
                      _os_log_impl(&dword_23AA66000, v150, v151, "%{public}s", v152, 0xCu);
                      swift_arrayDestroy();
                      v154 = v153;
                      v16 = v188;
                      MEMORY[0x23B8614BC](v154, -1, -1);
                      MEMORY[0x23B8614BC](v152, -1, -1);
                    }

                    (*(void (**)(char *, uint64_t))(v193 + 8))(v27, v194);
                    v35 = (_QWORD **)v195;
                    v43 = v177;
                    v155 = (uint64_t)v171;
                    *v171 = 0;
                    swift_storeEnumTagMultiPayload();
                    ((void (*)(uint64_t))(*v35)[39])(v155);
                    v107 = sub_23AA8A05C(v155, &qword_2542DDFC0);
                  }
                }
                if ((*(_BYTE *)(v176 + 49) & 1) != 0)
                {
                  v108 = (id)fpfs_current_or_default_log();
                  sub_23B1C5E58();
                  v109 = sub_23B1C5E40();
                  v27 = v43;
                  v110 = sub_23B1C6A94();
                  if (os_log_type_enabled(v109, v110))
                  {
                    v111 = (uint8_t *)swift_slowAlloc();
                    v112 = swift_slowAlloc();
                    v199[0] = v112;
                    *(_DWORD *)v111 = v180;
                    v200 = (void *)sub_23AABEC68(0xD000000000000030, 0x800000023B202B50, v199);
                    v10 = v190;
                    v35 = (_QWORD **)v195;
                    sub_23B1C6CBC();
                    _os_log_impl(&dword_23AA66000, v109, v110, "%{public}s", v111, 0xCu);
                    swift_arrayDestroy();
                    v113 = v112;
                    v16 = v188;
                    MEMORY[0x23B8614BC](v113, -1, -1);
                    MEMORY[0x23B8614BC](v111, -1, -1);
                  }

                  (*(void (**)(char *, uint64_t))(v193 + 8))(v27, v194);
                  v114 = (uint64_t)v171;
                  *v171 = 0;
                  swift_storeEnumTagMultiPayload();
                  ((void (*)(uint64_t))(*v35)[39])(v114);
                  v107 = sub_23AA8A05C(v114, &qword_2542DDFC0);
                }
                if ((*(_BYTE *)(v176 + 50) & 1) != 0)
                {
                  v115 = (id)fpfs_current_or_default_log();
                  sub_23B1C5E58();
                  v25 = sub_23B1C5E40();
                  v116 = sub_23B1C6A94();
                  if (os_log_type_enabled((os_log_t)v25, v116))
                  {
                    v117 = (uint8_t *)swift_slowAlloc();
                    v27 = v16;
                    v118 = swift_slowAlloc();
                    v199[0] = v118;
                    *(_DWORD *)v117 = v180;
                    v200 = (void *)sub_23AABEC68(0xD000000000000013, 0x800000023B202B30, v199);
                    v10 = v190;
                    sub_23B1C6CBC();
                    _os_log_impl(&dword_23AA66000, (os_log_t)v25, v116, "%{public}s", v117, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x23B8614BC](v118, -1, -1);
                    MEMORY[0x23B8614BC](v117, -1, -1);

                    v119 = (*(uint64_t (**)(char *, uint64_t))(v193 + 8))(v27, v194);
                  }
                  else
                  {

                    v119 = (*(uint64_t (**)(char *, uint64_t))(v193 + 8))(v16, v194);
                  }
                  (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v175 + 16) + 96))(v199, v119);
                  v120 = v199[0];
                  sub_23B1C5BD0();
                  sub_23B1C5B94();
                  v122 = v121;
                  v123 = *(void (**)(char *, uint64_t))(v191 + 8);
                  v123(v12, v10);
                  v124 = v122 * 1000000000.0;
                  if ((~COERCE__INT64(v122 * 1000000000.0) & 0x7FF0000000000000) != 0)
                  {
                    if (v124 > -9.22337204e18)
                    {
                      if (v124 < 9.22337204e18)
                      {
                        v125 = (uint64_t)v124;
                        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE498);
                        v25 = swift_allocObject();
                        *(_QWORD *)(v25 + 24) = 0;
                        *(_QWORD *)(v25 + 32) = 0;
                        *(_QWORD *)(v25 + 16) = 0;
                        *(_BYTE *)(v25 + 40) = 1;
                        *(_OWORD *)(v25 + 48) = 0u;
                        *(_OWORD *)(v25 + 64) = 0u;
                        *(_QWORD *)(v25 + 80) = 0;
                        *(_QWORD *)(v25 + 112) = 0x2000000000000000;
                        *(_QWORD *)(v25 + 120) = v125;
                        *(_QWORD *)(v25 + 128) = 0;
                        *(_QWORD *)(v25 + 136) = v120;
                        *(_OWORD *)(v25 + 88) = xmmword_23B1DA970;
                        *(_BYTE *)(v25 + 104) = 0;
                        sub_23AAAEE10((void *)0x40100, 0, 0);
                        sub_23B1C5BD0();
                        sub_23B1C5B94();
                        v127 = v126;
                        v123(v12, v10);
                        v128 = v127 * 1000000000.0;
                        if ((~COERCE__INT64(v127 * 1000000000.0) & 0x7FF0000000000000) != 0)
                        {
                          if (v128 > -9.22337204e18)
                          {
                            if (v128 < 9.22337204e18)
                            {
                              sub_23ADF3AAC(v25, (uint64_t)v128);
                              v107 = swift_release();
                              if (v3)
                                return;
                              goto LABEL_85;
                            }
LABEL_160:
                            __break(1u);
LABEL_161:
                            __break(1u);
                            goto LABEL_162;
                          }
LABEL_159:
                          __break(1u);
                          goto LABEL_160;
                        }
LABEL_158:
                        __break(1u);
                        goto LABEL_159;
                      }
LABEL_157:
                      __break(1u);
                      goto LABEL_158;
                    }
                  }
                  else
                  {
LABEL_155:
                    __break(1u);
                  }
                  __break(1u);
                  goto LABEL_157;
                }
LABEL_85:
                v129 = v175;
                v130 = v195;
                if ((*(_BYTE *)(v175 + 32) & 1) != 0)
                {
LABEL_86:
                  v25 = *(unsigned __int8 *)((*(uint64_t (**)(uint64_t))(*v130 + 192))(v107) + 49);
                  v107 = swift_release();
                  if ((v25 & 1) != 0)
                    goto LABEL_91;
                }
                else
                {
                  v25 = *(unsigned __int8 *)((*(uint64_t (**)(uint64_t))(*v195 + 192))(v107) + 48);
                  v107 = swift_release();
                  if ((v25 & 1) != 0)
                  {
LABEL_91:
                    v131 = *(unsigned __int8 *)(v129 + 32);
                    v132 = swift_allocObject();
                    v133 = v176;
                    v134 = *(_OWORD *)(v176 + 16);
                    *(_OWORD *)(v132 + 16) = *(_OWORD *)v176;
                    *(_OWORD *)(v132 + 32) = v134;
                    v135 = *(_OWORD *)(v133 + 48);
                    *(_OWORD *)(v132 + 48) = *(_OWORD *)(v133 + 32);
                    *(_OWORD *)(v132 + 64) = v135;
                    *(_QWORD *)(v132 + 80) = v130;
                    v136 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t (*)(), uint64_t))(*v130 + 416);
                    sub_23ADF2564(v133);
                    swift_retain();
                    v136("processStreamEvent(db:)", 23, 2, v131, 1, nullsub_1, 0, sub_23AEB5544, v132);
                    goto LABEL_92;
                  }
                  if ((*(_BYTE *)(v129 + 32) & 1) != 0)
                    goto LABEL_86;
                }
                if (((*(uint64_t (**)(uint64_t))(*v130 + 152))(v107) & 4) != 0)
                {
                  v12 = (char *)v3;
                  v137 = *(_QWORD *)(v176 + 8);
                  v138 = v137 + 64;
                  v139 = 1 << *(_BYTE *)(v137 + 32);
                  v140 = -1;
                  if (v139 < 64)
                    v140 = ~(-1 << v139);
                  v3 = v140 & *(_QWORD *)(v137 + 64);
                  v198 = (char *)((unint64_t)(v139 + 63) >> 6);
                  swift_bridgeObjectRetain();
                  v141 = 0;
                  v10 = (uint64_t)v173;
                  while (1)
                  {
                    if (v3)
                    {
                      v142 = __clz(__rbit64(v3));
                      v3 &= v3 - 1;
                      v143 = v142 | (v141 << 6);
                    }
                    else
                    {
                      v40 = __OFADD__(v141++, 1);
                      if (v40)
                        goto LABEL_137;
                      if (v141 >= (uint64_t)v198)
                        goto LABEL_92;
                      v147 = *(_QWORD *)(v138 + 8 * v141);
                      if (!v147)
                      {
                        v148 = v141 + 1;
                        if (v141 + 1 >= (uint64_t)v198)
                          goto LABEL_92;
                        v147 = *(_QWORD *)(v138 + 8 * v148);
                        if (!v147)
                        {
                          v148 = v141 + 2;
                          if (v141 + 2 >= (uint64_t)v198)
                            goto LABEL_92;
                          v147 = *(_QWORD *)(v138 + 8 * v148);
                          if (!v147)
                          {
                            v148 = v141 + 3;
                            if (v141 + 3 >= (uint64_t)v198)
                              goto LABEL_92;
                            v147 = *(_QWORD *)(v138 + 8 * v148);
                            if (!v147)
                            {
                              v148 = v141 + 4;
                              if (v141 + 4 >= (uint64_t)v198)
                                goto LABEL_92;
                              v147 = *(_QWORD *)(v138 + 8 * v148);
                              if (!v147)
                              {
                                while (1)
                                {
                                  v141 = v148 + 1;
                                  if (__OFADD__(v148, 1))
                                    break;
                                  if (v141 >= (uint64_t)v198)
                                    goto LABEL_92;
                                  v147 = *(_QWORD *)(v138 + 8 * v141);
                                  ++v148;
                                  if (v147)
                                    goto LABEL_112;
                                }
LABEL_169:
                                __break(1u);
LABEL_170:
                                sub_23B1C704C();
                                __break(1u);
                                return;
                              }
                            }
                          }
                        }
                        v141 = v148;
                      }
LABEL_112:
                      v3 = (v147 - 1) & v147;
                      v143 = __clz(__rbit64(v147)) + (v141 << 6);
                    }
                    v144 = v172;
                    sub_23AA907B0(*(_QWORD *)(v137 + 56) + *(_QWORD *)(v174 + 72) * v143, v172, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
                    sub_23AA94050(v144, v10, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
                    v145 = v195[7];
                    ObjectType = swift_getObjectType();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 8))(v10, ObjectType, v145);
                    v25 = (unint64_t)v12;
                    sub_23AA937BC(v10, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
                    if (v12)
                    {
                      swift_release();
                      return;
                    }
                  }
                }
                goto LABEL_91;
              }
            }
          }
          v41 = v44;
        }
LABEL_17:
        v36 = v3;
        v38 = (v42 - 1) & v42;
        v198 = (char *)v41;
        v39 = __clz(__rbit64(v42)) + (v41 << 6);
LABEL_18:
        v45 = *(void **)(*((_QWORD *)v189 + 6) + 8 * v39);
        v46 = *((_QWORD *)v189 + 7) + 16 * v39;
        v47 = *(_QWORD *)v46;
        LODWORD(v196) = *(unsigned __int8 *)(v46 + 8);
        v48 = v45;
        v49 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v50 = v48;
        v51 = sub_23B1C5E40();
        v52 = v27;
        v53 = sub_23B1C6A94();
        v54 = os_log_type_enabled(v51, v53);
        v197 = v38;
        if (v54)
        {
          v55 = swift_slowAlloc();
          v183 = v47;
          v56 = (uint8_t *)v55;
          v57 = swift_slowAlloc();
          v186 = v36;
          v185 = v57;
          *(_DWORD *)v56 = v180;
          v184 = v56 + 4;
          v199[0] = 0;
          v199[1] = 0xE000000000000000;
          v200 = (void *)v57;
          v58 = v50;
          sub_23B1C6EFC();
          swift_bridgeObjectRelease();
          strcpy((char *)v199, "rescan below ");
          HIWORD(v199[1]) = -4864;
          sub_23AA7B734();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          sub_23B149E14(v183, v196);
          sub_23B1C64F4();

          swift_bridgeObjectRelease();
          v199[0] = sub_23AABEC68(v199[0], v199[1], (uint64_t *)&v200);
          sub_23B1C6CBC();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23AA66000, v51, v53, "%{public}s", v56, 0xCu);
          v59 = v185;
          swift_arrayDestroy();
          v36 = v186;
          MEMORY[0x23B8614BC](v59, -1, -1);
          MEMORY[0x23B8614BC](v56, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v193 + 8))(v52, v194);
        v27 = v52;
        v25 = (unint64_t)v50;
        v12 = v192;
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v61 = v60;
        v10 = v190;
        v62 = *(void (**)(char *, uint64_t))(v191 + 8);
        v62(v12, v190);
        v3 = 0x41CDCD6500000000;
        v63 = v61 * 1000000000.0;
        if ((~COERCE__INT64(v61 * 1000000000.0) & 0x7FF0000000000000) == 0)
          break;
        if (v63 <= -9.22337204e18)
          goto LABEL_124;
        if (v63 >= 9.22337204e18)
          goto LABEL_125;
        v64 = (uint64_t)v63;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
        v65 = swift_allocObject();
        *(_QWORD *)(v65 + 24) = 0;
        *(_QWORD *)(v65 + 32) = 0;
        *(_QWORD *)(v65 + 16) = 0;
        *(_BYTE *)(v65 + 40) = 1;
        *(_OWORD *)(v65 + 48) = 0u;
        *(_OWORD *)(v65 + 64) = 0u;
        *(_QWORD *)(v65 + 80) = 0;
        *(_QWORD *)(v65 + 112) = 0;
        *(_QWORD *)(v65 + 120) = v64;
        *(_QWORD *)(v65 + 128) = 0x8000;
        *(_QWORD *)(v65 + 136) = v25;
        *(_OWORD *)(v65 + 88) = v187;
        *(_BYTE *)(v65 + 104) = 0;
        v25 = (unint64_t)(id)v25;
        sub_23AAAE478((id)0x40100, 0, 0);
        sub_23AAAEE10((void *)0x40100, 0, 0);
        if (*(_BYTE *)(v65 + 104))
          goto LABEL_170;
        v66 = *(_QWORD *)(v65 + 88);
        v67 = *(void **)(v65 + 96);
        *(_QWORD *)(v65 + 88) = v66 | 0x2000;
        *(_BYTE *)(v65 + 104) = 0;
        swift_retain();
        sub_23AAAEE10((void *)v66, v67, 0);

        sub_23B1C5BD0();
        sub_23B1C5B94();
        v69 = v68;
        v62(v12, v10);
        v70 = v69 * 1000000000.0;
        if ((~COERCE__INT64(v69 * 1000000000.0) & 0x7FF0000000000000) == 0)
          goto LABEL_126;
        if (v70 <= -9.22337204e18)
          goto LABEL_127;
        if (v70 >= 9.22337204e18)
          goto LABEL_128;
        v71 = v36;
        v35 = (_QWORD **)v195;
        sub_23ADF3AAC(v65, (uint64_t)v70);
        v3 = v71;
        if (v71)
        {
          swift_release();

LABEL_92:
          swift_release();
          return;
        }
        swift_release();

        v16 = v188;
        v32 = v197;
        v33 = v198;
        if (v197)
          goto LABEL_6;
      }
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      swift_bridgeObjectRetain();
      v156 = sub_23B1C7088();
      swift_bridgeObjectRelease();
      v27 = v198;
      if (v156)
        goto LABEL_58;
LABEL_139:
      v106 = swift_bridgeObjectRelease();
    }
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    v103 = MEMORY[0x23B85F860](0, v25);
  }
}

uint64_t sub_23AE6669C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for SyncState();
  v28 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(v11 + 64);
  v26 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v27 = (unint64_t)(v13 + 63) >> 6;
  v29 = v11;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  while (v15)
  {
    v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v19 = v18 | (v17 << 6);
LABEL_5:
    sub_23AA907B0(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v28 + 72) * v19, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    sub_23AA94050((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    v20 = *(_QWORD *)(a2 + 56);
    ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 8))(v8, ObjectType, v20);
    result = sub_23AA937BC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    if (v2)
      return swift_release();
  }
  if (__OFADD__(v17++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v17 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v17);
  if (v23)
  {
LABEL_19:
    v15 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v17 << 6);
    goto LABEL_5;
  }
  v24 = v17 + 1;
  if (v17 + 1 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v17 + 2;
  if (v17 + 2 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v17 + 3;
  if (v17 + 3 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v17 + 4;
  if (v17 + 4 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
LABEL_18:
    v17 = v24;
    goto LABEL_19;
  }
  while (1)
  {
    v17 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v17 >= v27)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v17);
    ++v24;
    if (v23)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23AE668F8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int64_t v28;
  _QWORD *v29;

  v29 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1568);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - v8;
  v10 = *v1;
  v12 = (_QWORD *)(*v1 + 64);
  v11 = *v12;
  v26 = v1;
  v27 = v12;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v11;
  v28 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_23AA8EFC8(*(_QWORD *)(v10 + 56) + *(_QWORD *)(v4 + 72) * i, (uint64_t)v9, &qword_2542E1568);
    v23 = sub_23AA724E8((uint64_t)v9, (uint64_t)v7, &qword_2542E1568);
    v24 = (void *)MEMORY[0x23B8601A8](v23);
    sub_23AE66FEC((uint64_t)v7, (uint64_t)v29);
    if (v2)
    {
      objc_autoreleasePoolPop(v24);
      swift_release();
      return sub_23AA8A05C((uint64_t)v7, &qword_2542E1568);
    }
    objc_autoreleasePoolPop(v24);
    result = sub_23AA8A05C((uint64_t)v7, &qword_2542E1568);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v28)
      goto LABEL_26;
    v21 = v27[v17];
    if (!v21)
      break;
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v28)
    goto LABEL_26;
  v21 = v27[v22];
  if (v21)
    goto LABEL_16;
  v22 = v17 + 2;
  if (v17 + 2 >= v28)
    goto LABEL_26;
  v21 = v27[v22];
  if (v21)
    goto LABEL_16;
  v22 = v17 + 3;
  if (v17 + 3 >= v28)
    goto LABEL_26;
  v21 = v27[v22];
  if (v21)
    goto LABEL_16;
  v22 = v17 + 4;
  if (v17 + 4 >= v28)
  {
LABEL_26:
    swift_release();
    return sub_23AE631AC(v29);
  }
  v21 = v27[v22];
  if (v21)
  {
LABEL_16:
    v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v28)
      goto LABEL_26;
    v21 = v27[v17];
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_23AE66B78(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  int64_t v22;

  v3 = v2;
  v4 = *v1;
  v5 = 1 << *(_BYTE *)(*v1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*v1 + 64);
  v22 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = *(_QWORD *)(v4 + 56) + 24 * i;
    v15 = *(void **)v14;
    v16 = *(void **)(v14 + 8);
    v17 = *(_QWORD *)(v14 + 16);
    swift_retain();
    v18 = v15;
    v19 = v16;
    v20 = (void *)MEMORY[0x23B8601A8]();
    sub_23AE66DAC(v18, v16, v17, (uint64_t)a1);
    if (v3)
    {
      objc_autoreleasePoolPop(v20);
      swift_release();

      swift_release();
      return;
    }
    objc_autoreleasePoolPop(v20);
    swift_release();

    if (v7)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v8 >= v22)
      goto LABEL_26;
    v12 = *(_QWORD *)(v21 + 8 * v8);
    if (!v12)
      break;
LABEL_17:
    v7 = (v12 - 1) & v12;
  }
  v13 = v8 + 1;
  if (v8 + 1 >= v22)
    goto LABEL_26;
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v8 + 2;
  if (v8 + 2 >= v22)
    goto LABEL_26;
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v8 + 3;
  if (v8 + 3 >= v22)
    goto LABEL_26;
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v8 + 4;
  if (v8 + 4 >= v22)
  {
LABEL_26:
    swift_release();
    sub_23AE64CC0(a1);
    return;
  }
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
  {
LABEL_16:
    v8 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v22)
      goto LABEL_26;
    v12 = *(_QWORD *)(v21 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
}

void sub_23AE66DAC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t inited;
  uint64_t v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v21 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6490);
  inited = swift_initStackObject();
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 24) = v13;
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(inited + 40) = v13;
  *(_QWORD *)(inited + 48) = 0;
  swift_retain();
  v22 = a1;
  v14 = a2;
  sub_23AE67290(a1, a2, a3, 0, 0, inited, a4);
  if (v4)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    v15 = v22;
LABEL_7:

    return;
  }
  swift_release();

  sub_23B1C5BD0();
  sub_23B1C5B94();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  v18 = v17 * 1000000000.0;
  if ((~COERCE__INT64(v17 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v18 < 9.22337204e18)
  {
    v19 = sub_23ADF691C((_QWORD *)inited, (uint64_t)v18, (void (*)(_QWORD, _QWORD))sub_23ADF71B0);
    (*(void (**)(uint64_t))(*(_QWORD *)a4 + 544))(v19);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = *(id *)(inited + 48);
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
}

void sub_23AE66FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_23B1C5BDC();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  inited = swift_initStackObject();
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 24) = v11;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 48) = 0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
  v13 = (uint64_t)&v9[*(int *)(v12 + 48)];
  v14 = *(int *)(v12 + 64);
  v15 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)v9 = *(_QWORD *)a1;
  v9[8] = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1568);
  sub_23AA8EFC8(a1 + *(int *)(v16 + 36), v13, &qword_2542E72C0);
  *(_QWORD *)&v9[v14] = *(_QWORD *)(a1 + *(int *)(v16 + 40));
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v17 = v24;
  sub_23AE6898C((uint64_t)v9, 0, inited, a2);
  if (v17)
  {
    swift_release();
    sub_23AA8A05C((uint64_t)v9, qword_2542DDA70);
    return;
  }
  sub_23AA8A05C((uint64_t)v9, qword_2542DDA70);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
  v20 = v19 * 1000000000.0;
  if ((~COERCE__INT64(v19 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v20 < 9.22337204e18)
  {
    v21 = sub_23ADF691C((_QWORD *)inited, (uint64_t)v20, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 544))(v21);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_23AE67290(void *a1, void *a2, uint64_t a3, unsigned __int8 a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  unint64_t v37;
  _QWORD v39[21];
  int v40;
  uint64_t v41;

  v8 = v7;
  v41 = a7;
  v39[20] = a6;
  v40 = a5;
  v12 = a4;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C5BDC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23B1C5E4C();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v39 - v26;
  result = MEMORY[0x24BDAC7A8](v25);
  if (!v12)
  {
    v39[10] = v29;
    v39[11] = v30;
    v39[12] = v27;
    v39[13] = v34;
    v39[14] = (char *)v39 - v31;
    v39[8] = v33;
    v39[9] = v15;
    v39[15] = v19;
    v39[16] = v17;
    v39[17] = v16;
    v39[18] = v32;
    v39[19] = result;
    swift_retain();
    v35 = a1;
    v36 = a2;
    v37 = sub_23AE60710((uint64_t)v35);
    if (!v8)
    {
      v39[4] = v37;
      v39[6] = v36;
      v39[5] = a2;
      v39[7] = a3;
      __asm { BR              X10 }
    }

    return swift_release();
  }
  return result;
}

void sub_23AE674EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = (id)fpfs_current_or_default_log();
  v6 = *(_QWORD *)(v4 - 232);
  sub_23B1C5E58();
  v7 = *(void **)(v4 - 296);
  v8 = *(_QWORD *)(v4 - 280);
  sub_23AEB43C4(v1, v7, v8, 0);
  sub_23AEB43C4(v1, v7, v8, 0);
  v9 = *(_QWORD *)(v4 - 304);
  sub_23AEB4428(v9, v2, v0, 0);
  *(_QWORD *)(v4 - 168) = v2;
  v10 = v1;
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6A94();
  *(_DWORD *)(v4 - 176) = v12;
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    *(_QWORD *)(v4 - 320) = v3;
    v14 = v13;
    v15 = swift_slowAlloc();
    *(_QWORD *)(v4 - 200) = v15;
    *(_QWORD *)(v4 - 120) = v15;
    *(_DWORD *)v14 = 136315394;
    *(_QWORD *)(v4 - 160) = v0;
    v16 = v10;
    *(_QWORD *)(v4 - 208) = v14 + 4;
    sub_23AE2DB48((uint64_t)v10, (uint64_t)v7, v8, 0);
    v17 = v8;
    v19 = v18;
    v21 = v20;
    sub_23AEB4464(v16, v7, v17, 0);
    *(_QWORD *)(v4 - 152) = sub_23AABEC68(v19, v21, (uint64_t *)(v4 - 120));
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AEB4464(v16, v7, v17, 0);
    *(_WORD *)(v14 + 12) = 2080;
    v22 = *(_QWORD *)(v4 - 168);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v4 - 152) = sub_23AABEC68(v9, v22, (uint64_t *)(v4 - 120));
    sub_23B1C6CBC();
    v23 = *(_QWORD *)(v4 - 160);
    sub_23AEB44B0(v9, v22, v23, 0);
    sub_23AEB44B0(v9, v22, v23, 0);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v11, (os_log_type_t)*(_DWORD *)(v4 - 176), "⛔️  discarded %s: %s", (uint8_t *)v14, 0x16u);
    v24 = *(_QWORD *)(v4 - 200);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v24, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    swift_release();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 192) + 8))(*(_QWORD *)(v4 - 232), *(_QWORD *)(v4 - 184));

  }
  else
  {
    sub_23AEB4464(v10, v7, v8, 0);

    swift_release();
    v25 = *(_QWORD *)(v4 - 168);
    sub_23AEB44B0(v9, v25, v0, 0);
    sub_23AEB44B0(v9, v25, v0, 0);
    sub_23AEB4464(v10, v7, v8, 0);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 192) + 8))(v6, *(_QWORD *)(v4 - 184));

  }
  JUMPOUT(0x23AE67478);
}

uint64_t sub_23AE6898C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v56[9];
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v77 = a4;
  v68 = a3;
  LODWORD(v74) = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_23B1C5BDC();
  v71 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v70 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C5E4C();
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)v56 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v76 = (char *)v56 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)v56 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v66 = (char *)v56 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v65 = (char *)v56 - v19;
  v78 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  v57 = *(_QWORD *)(v78 - 8);
  v20 = *(_QWORD *)(v57 + 64);
  v21 = MEMORY[0x24BDAC7A8](v78);
  v61 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v58 = (char *)v56 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v67 = (char *)v56 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v63 = (char *)v56 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v62 = (char *)v56 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)v56 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (_QWORD *)((char *)v56 - v33);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)v56 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)v56 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)v56 - v43;
  v45 = MEMORY[0x24BDAC7A8](v42);
  v47 = (char *)v56 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v49 = (char *)v56 - v48;
  sub_23AA8EFC8(a1, (uint64_t)v34, qword_2542DDA70);
  if (swift_getEnumCaseMultiPayload())
    return sub_23AA8A05C((uint64_t)v34, qword_2542DDA70);
  v56[7] = v32;
  v56[5] = v38;
  v56[8] = v47;
  v56[6] = v41;
  v56[3] = v20;
  v56[4] = v44;
  v78 = a1;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
  v52 = *(uint64_t *)((char *)v34 + *(int *)(v51 + 64));
  v53 = *v34;
  sub_23AA724E8((uint64_t)v34 + *(int *)(v51 + 48), (uint64_t)v49, &qword_2542E72C0);
  v54 = v79;
  sub_23AE61C64(v53);
  v79 = v54;
  if (!v54)
  {
    v56[2] = v52;
    v56[1] = v53;
    __asm { BR              X10 }
  }
  sub_23AA8A05C((uint64_t)v49, &qword_2542E72C0);
  return swift_release();
}

void sub_23AE6A224(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  _QWORD *inited;
  uint64_t v13;
  _QWORD *v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  id v38[2];
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v3 = sub_23B1C5BDC();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (id *)((char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6490);
  inited = (_QWORD *)swift_initStackObject();
  v13 = MEMORY[0x24BEE4AF8];
  inited[2] = MEMORY[0x24BEE4AF8];
  inited[3] = v13;
  inited[4] = v13;
  inited[5] = v13;
  v14 = inited + 5;
  inited[6] = 0;
  sub_23AA8EFC8((uint64_t)a1, (uint64_t)v11, &qword_2542E1608);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 7)
  {
    if (EnumCaseMultiPayload != 6)
    {
      sub_23AA8A05C((uint64_t)v11, &qword_2542E1608);
      goto LABEL_15;
    }
    a1 = *v11;
    v16 = sub_23B182BF4((uint64_t)*v11);
    v20 = v39;
    v19 = v40;
    if (!v16)
    {

      swift_release();
      return;
    }
    v14 = (_QWORD *)v16;
    v38[0] = v17;
    v38[1] = v18;
    if (v17)
    {
      sub_23ADF7DC8(v17, (uint64_t)v8);
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 0, 1, v21);
    }
    else
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 1, 1, v34);
    }
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v42);
    v37 = v36 * 1000000000.0;
    if ((~COERCE__INT64(v36 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v37 > -9.22337204e18)
      {
        if (v37 < 9.22337204e18)
        {
          sub_23AE181D0((uint64_t)v8, a1, 0, 0, 1, v20, 0x2000000000000000, (uint64_t)v37, 2048, (uint64_t)inited);
          if (v19)
          {
            swift_release();
            sub_23AA8A05C((uint64_t)v8, &qword_2542E4770);

            swift_release();
            return;
          }
          sub_23AA8A05C((uint64_t)v8, &qword_2542E4770);

          swift_release();
LABEL_15:
          while (1)
          {
            sub_23B1C5BD0();
            v24 = (uint64_t)v5;
            sub_23B1C5B94();
            v32 = v31;
            (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v42);
            v33 = v32 * 1000000000.0;
            if ((~COERCE__INT64(v32 * 1000000000.0) & 0x7FF0000000000000) == 0)
              break;
            if (v33 <= -9.22337204e18)
              goto LABEL_29;
            if (v33 < 9.22337204e18)
            {
              sub_23ADF691C(inited, (uint64_t)v33, (void (*)(_QWORD, _QWORD))sub_23ADF71B0);
              swift_release();
              return;
            }
LABEL_30:
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            a1 = sub_23AF990D8(0, a1[2] + 1, 1, a1);
LABEL_11:
            v30 = a1[2];
            v29 = a1[3];
            if (v30 >= v29 >> 1)
              a1 = sub_23AF990D8((_QWORD *)(v29 > 1), v30 + 1, 1, a1);
            a1[2] = v30 + 1;
            a1[v30 + 4] = v24;
            *v14 = a1;
            swift_endAccess();

            swift_release();
          }
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        goto LABEL_37;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_37:
    __break(1u);
    return;
  }
  a1 = *v11;
  v22 = (void *)sub_23B182BF4((uint64_t)*v11);
  sub_23AEB323C(v22, v23);
  if (v22)
  {
    v11 = a1;
    sub_23B1C5BD0();
    v24 = (uint64_t)v5;
    sub_23B1C5B94();
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v42);
    v27 = v26 * 1000000000.0;
    if ((~COERCE__INT64(v26 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v27 > -9.22337204e18)
      {
        if (v27 < 9.22337204e18)
        {
          v28 = (uint64_t)v27;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
          v24 = swift_allocObject();
          *(_QWORD *)(v24 + 24) = 0;
          *(_QWORD *)(v24 + 32) = 0;
          *(_QWORD *)(v24 + 16) = 0;
          *(_BYTE *)(v24 + 40) = 1;
          *(_OWORD *)(v24 + 48) = 0u;
          *(_OWORD *)(v24 + 64) = 0u;
          *(_QWORD *)(v24 + 80) = 0;
          *(_QWORD *)(v24 + 112) = 0x2000000000000000;
          *(_QWORD *)(v24 + 120) = v28;
          *(_QWORD *)(v24 + 128) = 2048;
          *(_QWORD *)(v24 + 136) = v11;
          sub_23AAAEE10((void *)0x40100, 0, 0);
          *(_QWORD *)(v24 + 88) = 0;
          *(_QWORD *)(v24 + 96) = 0;
          *(_BYTE *)(v24 + 104) = 1;
          sub_23AAAEE10((void *)0x42100, 0, 0);
          swift_beginAccess();
          a1 = (_QWORD *)*v14;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            goto LABEL_11;
          goto LABEL_34;
        }
        goto LABEL_33;
      }
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  swift_release();

}

uint64_t sub_23AE6A7BC(uint64_t a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *inited;
  uint64_t v22;
  _QWORD **v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  unsigned int v26;
  int v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD **v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;

  v55 = a2;
  v3 = sub_23B1C5BDC();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v5);
  v52 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v7);
  v53 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E1570);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t)&v52 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1568);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v54 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  inited = (_QWORD *)swift_initStackObject();
  v22 = MEMORY[0x24BEE4AF8];
  inited[2] = MEMORY[0x24BEE4AF8];
  inited[3] = v22;
  inited[4] = v22;
  inited[5] = v22;
  v23 = (_QWORD **)(inited + 5);
  v60 = inited;
  inited[6] = 0;
  sub_23AA8EFC8(a1, (uint64_t)v20, &qword_2542E1600);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    v31 = *(_QWORD *)v20;
    v14 = v20[8];
    sub_23ADF8C04(*(_QWORD *)v20, v20[8], &qword_2542E1568, (void (*)(unint64_t, uint64_t))sub_23B184D60, (void (*)(void))sub_23B188DD0, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) != 1)
    {
      sub_23AA8A05C((uint64_t)v12, qword_2542E1570);
      v38 = v58;
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v44 = v43;
      v34 = v56;
      v33 = v57;
      (*(void (**)(_QWORD *, uint64_t))(v56 + 8))(v38, v57);
      v45 = v44 * 1000000000.0;
      if ((~COERCE__INT64(v44 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v45 > -9.22337204e18)
        {
          if (v45 < 9.22337204e18)
          {
            v46 = (uint64_t)v45;
            __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
            v18 = swift_allocObject();
            *(_BYTE *)(v18 + 144) = v14;
            *(_QWORD *)(v18 + 24) = 0;
            *(_QWORD *)(v18 + 32) = 0;
            *(_QWORD *)(v18 + 16) = 0;
            *(_BYTE *)(v18 + 40) = 1;
            *(_OWORD *)(v18 + 48) = 0u;
            *(_OWORD *)(v18 + 64) = 0u;
            *(_QWORD *)(v18 + 80) = 0;
            *(_QWORD *)(v18 + 112) = 0x2000000000000000;
            *(_QWORD *)(v18 + 120) = v46;
            *(_QWORD *)(v18 + 128) = 2048;
            *(_QWORD *)(v18 + 136) = v31;
            sub_23AAAEE10((void *)0x40100, 0, 0);
            *(_QWORD *)(v18 + 88) = 0;
            *(_QWORD *)(v18 + 96) = 0;
            *(_BYTE *)(v18 + 104) = 1;
            sub_23AAAEE10((void *)0x42100, 0, 0);
            v14 = (uint64_t)v23;
            swift_beginAccess();
            v38 = *v23;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              goto LABEL_18;
            goto LABEL_35;
          }
          goto LABEL_34;
        }
        goto LABEL_33;
      }
      goto LABEL_32;
    }
    swift_release();
    v29 = qword_2542E1570;
    v30 = (uint64_t)v12;
    return sub_23AA8A05C(v30, v29);
  }
  if (EnumCaseMultiPayload != 6)
  {
    sub_23AA8A05C((uint64_t)v20, &qword_2542E1600);
    v18 = v59;
    v28 = v60;
    v34 = v56;
    v33 = v57;
    goto LABEL_22;
  }
  v25 = (uint64_t)&v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6420) + 48)];
  v18 = *(_QWORD *)v20;
  v26 = v20[8];
  sub_23ADF8C04(*(_QWORD *)v20, v20[8], &qword_2542E1568, (void (*)(unint64_t, uint64_t))sub_23B184D60, (void (*)(void))sub_23B188DD0, v14);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  v28 = v60;
  if (v27 == 1)
  {
    swift_release();
    sub_23AA8A05C(v14, qword_2542E1570);
    v29 = &qword_2542E72C0;
    v30 = v25;
    return sub_23AA8A05C(v30, v29);
  }
  v35 = v54;
  sub_23AA724E8(v14, v54, &qword_2542E1568);
  v36 = v35 + *(int *)(v15 + 36);
  v37 = v52;
  sub_23AA8EFC8(v36, v52, &qword_2542E72C0);
  v14 = v53;
  sub_23AE4FBAC(v37, v53);
  v38 = v58;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v40 = v39;
  v34 = v56;
  v33 = v57;
  (*(void (**)(_QWORD *, uint64_t))(v56 + 8))(v38, v57);
  v41 = v40 * 1000000000.0;
  if ((~COERCE__INT64(v40 * 1000000000.0) & 0x7FF0000000000000) == 0)
    goto LABEL_29;
  if (v41 <= -9.22337204e18)
    goto LABEL_30;
  if (v41 >= 9.22337204e18)
    goto LABEL_31;
  v42 = v59;
  sub_23AEACCDC(v14, v18, v26, 0, 0, v55, 0x2000000000000000, (uint64_t)v41, 2048, (uint64_t)v28);
  v18 = v42;
  if (v42)
  {
    swift_release();
    sub_23AA8A05C(v14, (uint64_t *)&unk_2542E4750);
    sub_23AA8A05C(v54, &qword_2542E1568);
    return sub_23AA8A05C(v25, &qword_2542E72C0);
  }
  sub_23AA8A05C(v14, (uint64_t *)&unk_2542E4750);
  sub_23AA8A05C(v54, &qword_2542E1568);
  sub_23AA8A05C(v25, &qword_2542E72C0);
  while (1)
  {
LABEL_22:
    v38 = v58;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v50 = v49;
    (*(void (**)(_QWORD *, uint64_t))(v34 + 8))(v38, v33);
    v51 = v50 * 1000000000.0;
    if ((~COERCE__INT64(v50 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (v51 <= -9.22337204e18)
      goto LABEL_27;
    if (v51 < 9.22337204e18)
      break;
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    v38 = sub_23AF98DD4(0, v38[2] + 1, 1, v38);
LABEL_18:
    v28 = v60;
    v48 = v38[2];
    v47 = v38[3];
    if (v48 >= v47 >> 1)
      v38 = sub_23AF98DD4((_QWORD *)(v47 > 1), v48 + 1, 1, v38);
    v38[2] = v48 + 1;
    v38[v48 + 4] = v18;
    *(_QWORD *)v14 = v38;
    swift_endAccess();
    swift_release();
    v18 = v59;
  }
  sub_23ADF691C(v28, (uint64_t)v51, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
  return swift_release();
}

uint64_t sub_23AE6AEDC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23AE6AF30();
    return swift_release();
  }
  return result;
}

void sub_23AE6AF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v19 = sub_23B1C5E4C();
  v1 = *(_QWORD *)(v19 - 8);
  v2 = MEMORY[0x24BDAC7A8](v19);
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - v4;
  v6 = sub_23B1C60EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (id)fpfs_adopt_log();
  v11 = *(void **)(v0 + 64);
  *v9 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v12 = v11;
  LOBYTE(v11) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v11 & 1) != 0)
  {
    if (*(_BYTE *)(v0 + 88) == 1)
    {
      if ((fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v0 + 168) + 16)) & 1) != 0
        || (*(_BYTE *)(v0 + 152) & 1) != 0)
      {
        v13 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v14 = sub_23B1C5E40();
        v15 = sub_23B1C6A94();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v16 = 0;
          _os_log_impl(&dword_23AA66000, v14, v15, "not processing more jobs since we were cancelled", v16, 2u);
          MEMORY[0x23B8614BC](v16, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v19);
      }
      else
      {
        sub_23AE2C224((uint64_t)"onRunnableJobs()", 16, 2, (uint64_t)sub_23AEB4B24, v0);
      }
    }
    v17 = (id)fpfs_adopt_log();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23AE6B3C0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23AE2BBEC((uint64_t)"init(reconciliationTable:jobRegistry:snapshotA:snapshotB:syncState:telemetry:options:)", 86, 2, (uint64_t)sub_23AEB436C, result);
    return swift_release();
  }
  return result;
}

uint64_t sub_23AE6B448(uint64_t a1)
{
  swift_getObjectType();
  sub_23B1C6BCC();
  sub_23B1C6BA8();
  if ((*(_BYTE *)(a1 + 88) & 1) == 0)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B1C6BB4();
    swift_unknownObjectRelease();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_23B1C6BCC();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_23B1C6BA8();
  return swift_unknownObjectRelease();
}

uint64_t sub_23AE6B51C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  int v22;
  id v23;
  char *v24;
  char *v25;
  char *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_t v51;
  NSObject *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  NSObject *v62;
  unint64_t v63;
  uint64_t v64;

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v49 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v55 = (uint64_t)&v47 - v6;
  v7 = sub_23B1C5E4C();
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5DC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = ((char *)&v47 - v16);
  v18 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v18);
  v61 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v20 = (void *)qword_2542EDD28;
  (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v17, 1, 1, v9);
  v62 = 0;
  v63 = 0xE000000000000000;
  sub_23B1C64F4();
  sub_23B1C7028();
  v21 = v63;
  v51 = v62;
  v52 = v17;
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  v60 = a1;
  v50 = v3;
  if (v22 == 1)
  {
    v23 = v20;
    v24 = v54;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v24 = v54;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v54, v15, v9);
  }
  v25 = v61;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v61, v24, v9);
  v53 = *(int *)(v18 + 20);
  *(_QWORD *)&v25[v53] = v20;
  v26 = &v25[*(int *)(v18 + 24)];
  *(_QWORD *)v26 = "SQLDB: React to trigger";
  *((_QWORD *)v26 + 1) = 23;
  v54 = v26;
  v26[16] = 2;
  v27 = v20;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v28 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v28 + 32) = v51;
  *(_QWORD *)(v28 + 40) = v21;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v24, v9);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v52, (uint64_t *)&unk_2542E67B8);
  v29 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v30 = (id)fpfs_current_or_default_log();
  v31 = v56;
  sub_23B1C5E58();
  v32 = v60;
  v33 = v55;
  sub_23AA8EFC8(v60, v55, (uint64_t *)&unk_2542DDFB0);
  v34 = v29;
  v35 = sub_23B1C5E40();
  v36 = sub_23B1C6A88();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v51 = v35;
    v39 = (_QWORD *)v38;
    v48 = v38;
    v52 = swift_slowAlloc();
    v62 = v52;
    *(_DWORD *)v37 = 138412546;
    v40 = objc_msgSend(v34, sel_enter);
    v64 = (uint64_t)v40;
    sub_23B1C6CBC();
    *v39 = v40;

    *(_WORD *)(v37 + 12) = 2082;
    sub_23AA8EFC8(v33, v49, (uint64_t *)&unk_2542DDFB0);
    v41 = sub_23B1C6434();
    v64 = sub_23AABEC68(v41, v42, (uint64_t *)&v62);
    sub_23B1C6CBC();
    v32 = v60;
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v33, (uint64_t *)&unk_2542DDFB0);
    v35 = v51;
    _os_log_impl(&dword_23AA66000, v51, v36, "%@  💡 trigger: %{public}s", (uint8_t *)v37, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    v43 = v48;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v43, -1, -1);
    v44 = (uint64_t)v52;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v44, -1, -1);
    MEMORY[0x23B8614BC](v37, -1, -1);
  }
  else
  {

    sub_23AA8A05C(v33, (uint64_t *)&unk_2542DDFB0);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
  (*(void (**)(uint64_t))(*(_QWORD *)v59 + 2384))(v32);
  sub_23AFC45E8(v34);

  sub_23B1C6BD8();
  v45 = (uint64_t)v61;
  sub_23B1C5DA4();
  return sub_23AA937BC(v45, type metadata accessor for Signpost);
}

void sub_23AE6BB8C(uint64_t a1, char a2, int a3, void (*a4)(void))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  unsigned __int8 *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  _QWORD *v74;
  unsigned __int8 *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(void (*)(void));
  void (*v113)(void (*)(void));
  void (**v114)(void (*)(void));
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  void (**v119)(void (*)(void));
  char *v120;
  unsigned __int8 *v121;
  _QWORD *v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  char *v138;
  _QWORD *v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  char *v145;
  _QWORD *v146;
  char *v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  unint64_t *v151;
  uint64_t v152;
  char *v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  unint64_t *v163;
  char *v164;
  _QWORD *v165;
  void (*v166)(void);
  void *v167;
  void *v168;
  void (*v169)(char *, uint64_t);
  char *v170;
  BOOL v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char *i;
  _QWORD *v178;
  unint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t *v190;
  char *v191;
  uint64_t v192;
  void (*v193)(char *, char *, uint64_t);
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t (**v198)(uint64_t);
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(_QWORD);
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  char *v212;
  _QWORD *v213;
  char *v214;
  void (*v215)(char *, uint64_t);
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  int v236;
  _QWORD *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  char *v244;
  uint64_t v245;
  void (*v246)(char *, char *, uint64_t);
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t *v254;
  uint64_t v255;
  unint64_t *v256;
  char *v257;
  unint64_t v258;
  unint64_t v259;
  char *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t v266;
  unint64_t *v267;
  char *v268;
  _QWORD *v269;
  void *v270;
  void *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  BOOL v275;
  char *v276;
  char *v277;
  _QWORD *v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  unint64_t v285;
  uint64_t v286;
  void (*v287)(uint64_t *, uint64_t *, char *, uint64_t, uint64_t (*)(void *, char), uint64_t);
  id v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  _QWORD *v297;
  unint64_t v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  uint64_t v302;
  _QWORD *v303;
  _QWORD *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t *v310;
  char *v311;
  void (*v312)(char *, char *, uint64_t);
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  _QWORD *v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  _QWORD *v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  char *v328;
  void (*v329)(uint64_t);
  void (*v330)(uint64_t);
  void (**v331)(uint64_t);
  _QWORD *v332;
  char *v333;
  void (**v334)(uint64_t);
  char *v335;
  void *v336;
  uint64_t v337;
  uint64_t v338;
  _QWORD *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  _QWORD *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  char *v350;
  char *v351;
  unint64_t *v352;
  unint64_t *v353;
  _QWORD *v354;
  char *v355;
  unint64_t *v356;
  unsigned __int8 *v357;
  int64_t v358;
  uint64_t v359;
  uint64_t v360;
  _QWORD *v361;
  unint64_t *v362;
  uint64_t *v363;
  _QWORD *v364;
  _QWORD *v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  void (*v369)(void);
  _QWORD *v370;
  char *v371;
  _QWORD *v372;
  char *v373;
  _QWORD *v374;
  _QWORD *v375;
  _QWORD *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  int v380;
  uint64_t v381;
  char v382;
  __int128 v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  __int128 v387;
  uint64_t v388;
  uint64_t v389;
  int v390;
  uint64_t v391;
  char v392;
  __int128 v393;
  char v394;
  uint64_t v395;
  uint64_t v396;
  __int128 v397;
  uint64_t v398;
  uint64_t v399;
  char v400;
  uint64_t v401;

  v369 = a4;
  LODWORD(v378) = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v375 = *(_QWORD **)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v370 = (uint64_t *)((char *)&v341 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v8);
  v352 = (unint64_t *)((char *)&v341 - v11);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v356 = (unint64_t *)((char *)&v341 - v13);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v362 = (unint64_t *)((char *)&v341 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v341 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v376 = (uint64_t *)((char *)&v341 - v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A18);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v377 = (uint64_t)&v341 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v365 = (uint64_t *)((char *)&v341 - v24);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v350 = (char *)&v341 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v355 = (char *)&v341 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v373 = (char *)&v341 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v371 = (char *)&v341 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v364 = (uint64_t *)((char *)&v341 - v34);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v349 = (uint64_t *)((char *)&v341 - v36);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v341 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37);
  v354 = (uint64_t *)((char *)&v341 - v41);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v363 = (uint64_t *)((char *)&v341 - v43);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v353 = (unint64_t *)((char *)&v341 - v45);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v372 = (uint64_t *)((char *)&v341 - v47);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v368 = (uint64_t)&v341 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v367 = (uint64_t)&v341 - v50;
  v51 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDD10);
  MEMORY[0x24BDAC7A8](v51);
  v366 = (char *)&v341 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v374 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v359 = *(v374 - 1);
  v53 = MEMORY[0x24BDAC7A8](v374);
  v347 = (uint64_t)&v341 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v57 = (unsigned __int8 *)&v341 - v56;
  v58 = MEMORY[0x24BDAC7A8](v55);
  v60 = (char *)&v341 - v59;
  v346 = v61;
  MEMORY[0x24BDAC7A8](v58);
  v357 = (unsigned __int8 *)&v341 - v62;
  v63 = a1;
  v399 = a1;
  v64 = a2;
  v400 = a2;
  v348 = v4;
  v65 = (uint64_t *)(v4 + qword_2542EDFF0);
  swift_beginAccess();
  v66 = *v65;
  if (!*(_QWORD *)(*v65 + 16))
    return;
  v67 = sub_23AA97254(v63, v64);
  if ((v68 & 1) == 0)
    return;
  v344 = v39;
  v69 = v378;
  sub_23AA8EFC8(*(_QWORD *)(v66 + 56) + *(_QWORD *)(v359 + 72) * v67, (uint64_t)v60, &qword_2542E6C80);
  v70 = v357;
  sub_23AA724E8((uint64_t)v60, (uint64_t)v357, &qword_2542E6C80);
  sub_23AA8EFC8((uint64_t)v70, (uint64_t)v57, &qword_2542E6C80);
  if (v69 == 3)
    v69 = *v57;
  sub_23AA8A05C((uint64_t)v57, &qword_2542E6C80);
  if (v69 != *v357)
  {
    v121 = v357;
LABEL_112:
    sub_23AA8A05C((uint64_t)v121, &qword_2542E6C80);
    return;
  }
  v71 = v399;
  v72 = v400;
  v73 = (uint64_t)v366;
  v74 = v374;
  v75 = v357;
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v359 + 56))(v366, 1, 1, v374);
  swift_beginAccess();
  sub_23AD03AA8(v73, v71, v72);
  swift_endAccess();
  v76 = *((int *)v74 + 14);
  v77 = *(char **)&v75[v76];
  v78 = *((_QWORD *)v77 + 8);
  v351 = v77 + 64;
  v79 = 1 << v77[32];
  v80 = -1;
  if (v79 < 64)
    v80 = ~(-1 << v79);
  v81 = v80 & v78;
  v82 = (unint64_t)(v79 + 63) >> 6;
  v401 = v7;
  v366 = v77;
  v358 = v82;
  if (!v369)
  {
    v343 = v76;
    v342 = v82 - 1;
    swift_bridgeObjectRetain();
    v368 = 0;
    v122 = v375;
    v361 = v18;
    while (!v81)
    {
      v128 = v368 + 1;
      v126 = v373;
      if (__OFADD__(v368, 1))
      {
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
LABEL_213:
        __break(1u);
        goto LABEL_214;
      }
      if (v128 < v358)
      {
        v129 = *(_QWORD *)&v351[8 * v128];
        if (v129)
          goto LABEL_49;
        v130 = v368 + 2;
        ++v368;
        if (v128 + 1 < v358)
        {
          v129 = *(_QWORD *)&v351[8 * v130];
          if (v129)
            goto LABEL_52;
          v368 = v128 + 1;
          if (v128 + 2 < v358)
          {
            v129 = *(_QWORD *)&v351[8 * v128 + 16];
            if (v129)
            {
              v128 += 2;
              goto LABEL_49;
            }
            v368 = v128 + 2;
            if (v128 + 3 < v358)
            {
              v129 = *(_QWORD *)&v351[8 * v128 + 24];
              if (v129)
              {
                v128 += 3;
LABEL_49:
                v378 = (v129 - 1) & v129;
                v124 = __clz(__rbit64(v129)) + (v128 << 6);
                v368 = v128;
                v125 = v366;
LABEL_45:
                sub_23AA8EFC8(*((_QWORD *)v125 + 7) + v122[9] * v124, (uint64_t)v126, &qword_2542E6A10);
                v127 = (_QWORD *)v122[7];
                ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v127)(v126, 0, 1, v7);
                goto LABEL_67;
              }
              v130 = v128 + 4;
              v368 = v128 + 3;
              if (v128 + 4 < v358)
              {
                v129 = *(_QWORD *)&v351[8 * v130];
                if (v129)
                {
LABEL_52:
                  v128 = v130;
                  goto LABEL_49;
                }
                while (1)
                {
                  v128 = v130 + 1;
                  if (__OFADD__(v130, 1))
                    goto LABEL_216;
                  if (v128 >= v358)
                    break;
                  v129 = *(_QWORD *)&v351[8 * v128];
                  ++v130;
                  if (v129)
                    goto LABEL_49;
                }
                v368 = v342;
              }
            }
          }
        }
      }
      v127 = (_QWORD *)v122[7];
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v127)(v373, 1, 1, v7);
      v378 = 0;
LABEL_67:
      v131 = 1;
      v377 = v122[6];
      v132 = ((uint64_t (*)(_QWORD *, uint64_t, uint64_t))v377)(v126, 1, v7);
      v374 = v127;
      if (v132 != 1)
      {
        v133 = *(int *)(v7 + 64);
        v134 = (char *)v126 + v133;
        v135 = *(int *)(v7 + 80);
        v136 = v126[1];
        v137 = v376;
        *v376 = *v126;
        v137[1] = v136;
        v138 = (char *)v137 + v133;
        v139 = v122;
        v140 = sub_23B1C60A4();
        v141 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32);
        v141(v138, v134, v140);
        v142 = swift_allocObject();
        *(_OWORD *)(v142 + 16) = *(_OWORD *)&v373[v135];
        v143 = v137[1];
        v144 = v372;
        v145 = (char *)v372 + *(int *)(v7 + 64);
        v146 = (_QWORD *)((char *)v372 + *(int *)(v7 + 80));
        *v372 = *v137;
        v144[1] = v143;
        v147 = v138;
        v127 = v374;
        v148 = v140;
        v122 = v139;
        v141(v145, v147, v148);
        v131 = 0;
        *v146 = sub_23ADF35F8;
        v146[1] = v142;
        v18 = v361;
      }
      v149 = v372;
      ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v127)(v372, v131, 1, v7);
      v150 = (uint64_t)v149;
      v151 = (unint64_t *)v367;
      sub_23AA724E8(v150, v367, &qword_2542E6A18);
      if (((unsigned int (*)(unint64_t *, uint64_t, uint64_t))v377)(v151, 1, v7) == 1)
      {
        swift_release();
        v172 = *(char **)&v357[v343];
        v173 = *((_QWORD *)v172 + 8);
        v368 = (uint64_t)(v172 + 64);
        v174 = 1 << v172[32];
        v175 = -1;
        if (v174 < 64)
          v175 = ~(-1 << v174);
        v176 = v175 & v173;
        v369 = (void (*)(void))((unint64_t)(v174 + 63) >> 6);
        v367 = (uint64_t)v369 - 1;
        v371 = v172;
        swift_bridgeObjectRetain();
        for (i = 0; ; i = v373)
        {
          v178 = v365;
          if (v176)
            break;
          v216 = (uint64_t)(i + 1);
          if (__OFADD__(i, 1))
            goto LABEL_210;
          if (v216 < (uint64_t)v369)
          {
            v217 = *(_QWORD *)(v368 + 8 * v216);
            v180 = v374;
            if (v217)
              goto LABEL_90;
            v218 = (uint64_t)(i + 2);
            if ((uint64_t)(i + 2) >= (uint64_t)v369)
            {
              v378 = 0;
              v181 = 1;
              goto LABEL_96;
            }
            v217 = *(_QWORD *)(v368 + 8 * v218);
            if (v217)
              goto LABEL_94;
            v219 = (uint64_t)(i + 3);
            if (v216 + 2 >= (uint64_t)v369)
              goto LABEL_108;
            v217 = *(_QWORD *)(v368 + 8 * v219);
            if (v217)
              goto LABEL_99;
            v218 = v216 + 3;
            if (v216 + 3 >= (uint64_t)v369)
            {
              v378 = 0;
              v181 = 1;
              v373 = (char *)(v216 + 2);
              goto LABEL_81;
            }
            v217 = *(_QWORD *)(v368 + 8 * v218);
            if (v217)
            {
LABEL_94:
              v216 = v218;
              goto LABEL_90;
            }
            v219 = v216 + 4;
            if (v216 + 4 >= (uint64_t)v369)
            {
LABEL_108:
              v373 = (char *)v218;
              v378 = 0;
              v181 = 1;
              goto LABEL_81;
            }
            v217 = *(_QWORD *)(v368 + 8 * v219);
            if (!v217)
            {
              while (1)
              {
                v216 = v219 + 1;
                if (__OFADD__(v219, 1))
                  goto LABEL_217;
                if (v216 >= (uint64_t)v369)
                  break;
                v217 = *(_QWORD *)(v368 + 8 * v216);
                ++v219;
                if (v217)
                  goto LABEL_90;
              }
              v378 = 0;
              v181 = 1;
              v216 = v367;
LABEL_96:
              v373 = (char *)v216;
LABEL_81:
              ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v180)(v178, v181, 1, v7);
              goto LABEL_82;
            }
LABEL_99:
            v216 = v219;
LABEL_90:
            v378 = (v217 - 1) & v217;
            v179 = __clz(__rbit64(v217)) + (v216 << 6);
            v373 = (char *)v216;
LABEL_80:
            sub_23AA8EFC8(*((_QWORD *)v371 + 7) + v122[9] * v179, (uint64_t)v365, &qword_2542E6A10);
            v181 = 0;
            goto LABEL_81;
          }
          v373 = i;
          v378 = 0;
          v180 = v374;
          ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v374)(v365, 1, 1, v7);
LABEL_82:
          if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))v377)(v178, 1, v7) == 1)
          {
            v182 = (uint64_t)v364;
            v183 = v364;
            v184 = 1;
          }
          else
          {
            v185 = *(int *)(v7 + 64);
            v186 = (char *)v178 + v185;
            v187 = *(int *)(v7 + 80);
            v188 = v178[1];
            v189 = v178;
            v190 = v376;
            *v376 = *v178;
            v190[1] = v188;
            v191 = (char *)v190 + v185;
            v192 = sub_23B1C60A4();
            v193 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32);
            v193(v191, v186, v192);
            v194 = swift_allocObject();
            *(_OWORD *)(v194 + 16) = *(_OWORD *)((char *)v189 + v187);
            v195 = *v190;
            v196 = v190[1];
            v182 = (uint64_t)v364;
            v197 = (char *)v364 + *(int *)(v7 + 64);
            v198 = (uint64_t (**)(uint64_t))((char *)v364 + *(int *)(v7 + 80));
            *v364 = v195;
            *(_QWORD *)(v182 + 8) = v196;
            v193(v197, v191, v192);
            *v198 = sub_23ADF26C4;
            v198[1] = (uint64_t (*)(uint64_t))v194;
            v183 = (_QWORD *)v182;
            v184 = 0;
          }
          ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v180)(v183, v184, 1, v7);
          v199 = v363;
          sub_23AA724E8(v182, (uint64_t)v363, &qword_2542E6A18);
          if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v377)(v199, 1, v7) == 1)
          {
LABEL_111:
            swift_release();
            v121 = v357;
            goto LABEL_112;
          }
          v374 = v180;
          v200 = *(int *)(v7 + 64);
          v201 = (uint64_t)v376;
          v202 = (char *)v376 + v200;
          v203 = *v199;
          v204 = v199[1];
          v372 = (uint64_t *)((char *)v199 + v200);
          v205 = *(int *)(v7 + 80);
          v206 = *(void (**)(_QWORD))((char *)v199 + v205);
          v207 = *(uint64_t *)((char *)v199 + v205 + 8);
          v208 = (_QWORD *)((char *)v376 + v205);
          *v376 = v203;
          *(_QWORD *)(v201 + 8) = v204;
          v209 = sub_23B1C60A4();
          v210 = *(_QWORD *)(v209 - 8);
          (*(void (**)(char *, _QWORD *, uint64_t))(v210 + 32))(v202, v372, v209);
          *v208 = v206;
          v208[1] = v207;
          v211 = v370;
          v212 = (char *)v370 + *(int *)(v401 + 64);
          v213 = (_QWORD *)((char *)v370 + *(int *)(v401 + 80));
          *v370 = v203;
          v211[1] = v204;
          v214 = v212;
          (*(void (**)(void))(v210 + 16))();
          *v213 = v206;
          v213[1] = v207;
          swift_retain();
          v206(0);
          swift_release();
          sub_23AA8A05C(v201, &qword_2542E6A10);
          v215 = *(void (**)(char *, uint64_t))(v210 + 8);
          v7 = v401;
          v215(v214, v209);
          v122 = v375;
          v176 = v378;
        }
        v378 = (v176 - 1) & v176;
        v373 = i;
        v179 = __clz(__rbit64(v176)) | ((_QWORD)i << 6);
        v180 = v374;
        goto LABEL_80;
      }
      v152 = *(int *)(v7 + 64);
      v153 = (char *)v18 + v152;
      v369 = (void (*)(void))((char *)v18 + v152);
      v155 = *v151;
      v154 = v151[1];
      v371 = (char *)v151 + v152;
      v156 = *(int *)(v7 + 80);
      v158 = *(unint64_t *)((char *)v151 + v156);
      v157 = *(unint64_t *)((char *)v151 + v156 + 8);
      v159 = (_QWORD *)((char *)v18 + v156);
      *v18 = v155;
      v18[1] = v154;
      v160 = sub_23B1C60A4();
      v161 = *(_QWORD *)(v160 - 8);
      v162 = v371;
      v371 = *(char **)(v161 + 32);
      ((void (*)(char *, char *, uint64_t))v371)(v153, v162, v160);
      *v159 = v158;
      v159[1] = v157;
      v163 = v362;
      v164 = (char *)v362 + *(int *)(v7 + 64);
      v165 = (unint64_t *)((char *)v362 + *(int *)(v7 + 80));
      *v362 = v155;
      v163[1] = v154;
      v166 = *(void (**)(void))(v161 + 16);
      ((void (*)(char *, void (*)(void), uint64_t))v166)(v164, v369, v160);
      *v165 = v158;
      v165[1] = v157;
      v167 = sub_23ADF6D74(v155);
      if (!v167)
      {
        v123 = (uint64_t)v361;
        sub_23AA8A05C((uint64_t)v361, &qword_2542E6A10);
        (*(void (**)(char *, uint64_t))(v161 + 8))(v164, v160);
        v122 = v375;
        v7 = v401;
        v18 = (_QWORD *)v123;
        goto LABEL_42;
      }
      v168 = v167;
      v169 = *(void (**)(char *, uint64_t))(v161 + 8);
      v169(v164, v160);
      if ((objc_msgSend(v168, sel_selectedForMaterialization) & 1) != 0)
      {
        v369 = v166;
        v170 = (char *)objc_msgSend(v168, sel_requestedExtent);

        v18 = v361;
        sub_23AA8A05C((uint64_t)v361, &qword_2542E6A10);
        v171 = v170 + 1 == 0;
        v122 = v375;
        v7 = v401;
        v81 = v378;
        if (!v171)
        {
          v367 = (uint64_t)v169;
          swift_release();
          v220 = *(char **)&v357[v343];
          v221 = *((_QWORD *)v220 + 8);
          v364 = v220 + 64;
          v222 = 1 << v220[32];
          v223 = -1;
          if (v222 < 64)
            v224 = ~(-1 << v222);
          else
            v224 = -1;
          v225 = v224 & v221;
          v365 = (_QWORD *)((unint64_t)(v222 + 63) >> 6);
          v363 = (_QWORD *)((char *)v365 - 1);
          v366 = v220;
          swift_bridgeObjectRetain();
          v226 = 0;
          v227 = -1;
          v228 = v374;
          v229 = v355;
          v345 = v160;
          v230 = v401;
          while (1)
          {
            if (v225)
            {
              v372 = (_QWORD *)((v225 - 1) & v225);
              v231 = __clz(__rbit64(v225)) | (v226 << 6);
              goto LABEL_122;
            }
            v233 = v226 + 1;
            if (__OFADD__(v226, 1))
              goto LABEL_212;
            if (v233 >= (uint64_t)v365)
              break;
            v234 = v364[v233];
            if (v234)
              goto LABEL_126;
            v226 += 2;
            if (v233 + 1 >= (uint64_t)v365)
            {
              v372 = 0;
              v232 = 1;
              v226 = v233;
              goto LABEL_143;
            }
            v234 = v364[v226];
            if (v234)
              goto LABEL_129;
            v235 = v233 + 2;
            if (v233 + 2 >= (uint64_t)v365)
              break;
            v234 = v364[v235];
            if (v234)
              goto LABEL_133;
            v226 = v233 + 3;
            if (v233 + 3 >= (uint64_t)v365)
            {
              v372 = 0;
              v232 = 1;
              v226 = v233 + 2;
            }
            else
            {
              v234 = v364[v226];
              if (v234)
              {
LABEL_129:
                v233 = v226;
                goto LABEL_126;
              }
              v235 = v233 + 4;
              if (v233 + 4 >= (uint64_t)v365)
                break;
              v234 = v364[v235];
              if (v234)
              {
LABEL_133:
                v233 = v235;
LABEL_126:
                v372 = (_QWORD *)((v234 - 1) & v234);
                v231 = __clz(__rbit64(v234)) + (v233 << 6);
                v226 = v233;
LABEL_122:
                sub_23AA8EFC8(*((_QWORD *)v366 + 7) + v122[9] * v231, (uint64_t)v229, &qword_2542E6A10);
                v232 = 0;
                goto LABEL_143;
              }
              while (1)
              {
                v233 = v235 + 1;
                if (__OFADD__(v235, 1))
                  goto LABEL_218;
                if (v233 >= (uint64_t)v365)
                  break;
                v234 = v364[v233];
                ++v235;
                if (v234)
                  goto LABEL_126;
              }
              v372 = 0;
              v232 = 1;
              v226 = (uint64_t)v363;
            }
LABEL_143:
            v373 = (char *)v227;
            ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v228)(v229, v232, 1, v230);
            v236 = ((uint64_t (*)(_QWORD *, uint64_t, uint64_t))v377)(v229, 1, v230);
            v378 = v223;
            v368 = v226;
            if (v236 == 1)
            {
              v237 = v354;
              v238 = v354;
              v239 = 1;
            }
            else
            {
              v240 = *(int *)(v230 + 64);
              v241 = *(int *)(v230 + 80);
              v242 = v229[1];
              v243 = v376;
              *v376 = *v229;
              v243[1] = v242;
              v244 = (char *)v243 + v240;
              v245 = v345;
              v246 = (void (*)(char *, char *, uint64_t))v371;
              ((void (*)(char *, char *, uint64_t))v371)((char *)v243 + v240, (char *)v229 + v240, v345);
              v247 = swift_allocObject();
              *(_OWORD *)(v247 + 16) = *(_OWORD *)((char *)v229 + v241);
              v248 = *v243;
              v249 = v243[1];
              v237 = v354;
              v250 = (char *)v354 + *(int *)(v230 + 64);
              v251 = (_QWORD *)((char *)v354 + *(int *)(v230 + 80));
              *v354 = v248;
              v237[1] = v249;
              v246(v250, v244, v245);
              *v251 = sub_23ADF35F8;
              v251[1] = v247;
              v238 = v237;
              v239 = 0;
            }
            ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v228)(v238, v239, 1, v230);
            v252 = v359;
            v253 = (uint64_t)v237;
            v254 = v353;
            sub_23AA724E8(v253, (uint64_t)v353, &qword_2542E6A18);
            if (((unsigned int (*)(unint64_t *, uint64_t, uint64_t))v377)(v254, 1, v230) == 1)
            {
              swift_release();
              v278 = *(_QWORD **)(v348 + 32);
              v279 = v360;
              (*(void (**)(uint64_t *__return_ptr, uint64_t *))(*v278 + 616))(&v379, &v399);
              if (v279)
              {
                sub_23AA8A05C((uint64_t)v357, &qword_2542E6C80);
                return;
              }
              v360 = 0;
              if (v386)
              {
                v389 = v379;
                v390 = v380;
                v391 = v381;
                v392 = v382 & 1;
                v393 = v383;
                v394 = v384;
                v395 = v385;
                v396 = v386;
                v397 = v387;
                v398 = v388;
                v280 = v378;
                v281 = v373;
                if (v378 < (uint64_t)v373)
                  goto LABEL_215;
                v282 = v278[2];
                v283 = v347;
                sub_23AA8EFC8((uint64_t)v357, v347, &qword_2542E6C80);
                v379 = v399;
                LOBYTE(v380) = v400;
                v284 = (*(unsigned __int8 *)(v252 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80);
                v285 = (v346 + v284 + 7) & 0xFFFFFFFFFFFFFFF8;
                v286 = swift_allocObject();
                *(_QWORD *)(v286 + 16) = v348;
                sub_23AA724E8(v283, v286 + v284, &qword_2542E6C80);
                *(_QWORD *)(v286 + v285) = 0;
                sub_23AA9F454(&v379, v286 + ((v285 + 15) & 0xFFFFFFFFFFFFFFF8));
                v287 = *(void (**)(uint64_t *, uint64_t *, char *, uint64_t, uint64_t (*)(void *, char), uint64_t))(*(_QWORD *)v282 + 752);
                swift_retain();
                swift_retain();
                v288 = 0;
                v287(&v399, &v389, v281, v280, sub_23AEB2870, v286);
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v121 = v357;
                goto LABEL_112;
              }
              v289 = *(_QWORD *)&v357[v343];
              v290 = *(_QWORD *)(v289 + 64);
              v366 = (char *)(v289 + 64);
              v291 = 1 << *(_BYTE *)(v289 + 32);
              v292 = -1;
              if (v291 < 64)
                v292 = ~(-1 << v291);
              v293 = v292 & v290;
              v368 = (unint64_t)(v291 + 63) >> 6;
              v365 = (_QWORD *)(v368 - 1);
              v372 = (_QWORD *)v289;
              swift_bridgeObjectRetain();
              v294 = 0;
              v295 = v345;
              while (2)
              {
                v296 = v375;
                v297 = v350;
                if (v293)
                {
                  v373 = (char *)((v293 - 1) & v293);
                  v378 = v294;
                  v298 = __clz(__rbit64(v293)) | (v294 << 6);
                  goto LABEL_172;
                }
                v300 = v294 + 1;
                if (__OFADD__(v294, 1))
                  goto LABEL_213;
                if (v300 >= v368)
                {
                  v378 = v294;
                }
                else
                {
                  v301 = *(_QWORD *)&v366[8 * v300];
                  if (v301)
                  {
LABEL_176:
                    v373 = (char *)((v301 - 1) & v301);
                    v298 = __clz(__rbit64(v301)) + (v300 << 6);
                    v378 = v300;
LABEL_172:
                    sub_23AA8EFC8(v372[7] + v296[9] * v298, (uint64_t)v297, &qword_2542E6A10);
                    v299 = 0;
LABEL_179:
                    v302 = v401;
                    ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v228)(v297, v299, 1, v401);
                    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))v377)(v297, 1, v302) == 1)
                    {
                      v303 = v349;
                      v304 = v349;
                      v305 = 1;
                    }
                    else
                    {
                      v306 = *(int *)(v302 + 64);
                      v307 = v295;
                      v308 = *(int *)(v302 + 80);
                      v309 = v297[1];
                      v310 = v376;
                      *v376 = *v297;
                      v310[1] = v309;
                      v311 = (char *)v310 + v306;
                      v312 = (void (*)(char *, char *, uint64_t))v371;
                      ((void (*)(char *, char *, uint64_t))v371)((char *)v310 + v306, (char *)v297 + v306, v307);
                      v313 = swift_allocObject();
                      *(_OWORD *)(v313 + 16) = *(_OWORD *)((char *)v297 + v308);
                      v314 = *v310;
                      v315 = v310[1];
                      v303 = v349;
                      v316 = (char *)v349 + *(int *)(v302 + 64);
                      v317 = (_QWORD *)((char *)v349 + *(int *)(v302 + 80));
                      *v349 = v314;
                      v303[1] = v315;
                      v312(v316, v311, v307);
                      *v317 = sub_23ADF35F8;
                      v317[1] = v313;
                      v304 = v303;
                      v305 = 0;
                    }
                    ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v228)(v304, v305, 1, v302);
                    v318 = (uint64_t)v303;
                    v319 = v344;
                    sub_23AA724E8(v318, (uint64_t)v344, &qword_2542E6A18);
                    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))v377)(v319, 1, v302) == 1)
                      goto LABEL_111;
                    v320 = *(int *)(v302 + 64);
                    v321 = (uint64_t)v376;
                    v322 = (char *)v376 + v320;
                    v323 = v319;
                    v325 = *v319;
                    v324 = v319[1];
                    v326 = (char *)v323 + v320;
                    v327 = *(int *)(v302 + 80);
                    v328 = (char *)v323 + v327;
                    v329 = *(void (**)(uint64_t))v328;
                    v330 = (void (*)(uint64_t))*((_QWORD *)v328 + 1);
                    v374 = v228;
                    v331 = (void (**)(uint64_t))((char *)v376 + v327);
                    *v376 = v325;
                    *(_QWORD *)(v321 + 8) = v324;
                    v295 = v345;
                    ((void (*)(char *, char *, uint64_t))v371)(v322, v326, v345);
                    *v331 = v329;
                    v331[1] = v330;
                    v332 = v370;
                    v333 = (char *)v370 + *(int *)(v302 + 64);
                    v334 = (void (**)(uint64_t))((char *)v370 + *(int *)(v302 + 80));
                    *v370 = v325;
                    v332[1] = v324;
                    v335 = v333;
                    v369();
                    *v334 = v329;
                    v334[1] = v330;
                    v228 = v374;
                    type metadata accessor for NSFileProviderError(0);
                    v379 = -1005;
                    swift_retain();
                    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
                    sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
                    sub_23B1C5864();
                    v336 = (void *)v389;
                    v329(v389);
                    swift_release();

                    sub_23AA8A05C(v321, &qword_2542E6A10);
                    ((void (*)(char *, uint64_t))v367)(v335, v295);
                    v293 = (unint64_t)v373;
                    v294 = v378;
                    continue;
                  }
                  v337 = v294 + 2;
                  if (v294 + 2 >= v368)
                  {
                    v373 = 0;
                    v299 = 1;
                    v378 = v294 + 1;
                    goto LABEL_179;
                  }
                  v301 = *(_QWORD *)&v366[8 * v337];
                  if (v301)
                  {
                    v300 = v294 + 2;
                    goto LABEL_176;
                  }
                  v338 = v294 + 3;
                  if (v300 + 2 < v368)
                  {
                    v301 = *(_QWORD *)&v366[8 * v338];
                    if (v301)
                    {
                      v300 += 2;
                      goto LABEL_176;
                    }
                    if (v300 + 3 >= v368)
                    {
                      v373 = 0;
                      v299 = 1;
                      v378 = v338;
                      goto LABEL_179;
                    }
                    v339 = v228;
                    v378 = v300 + 3;
                    v301 = *(_QWORD *)&v366[8 * v300 + 24];
                    if (v301)
                    {
                      v300 = v378;
LABEL_195:
                      v296 = v375;
                      v297 = v350;
                      v295 = v345;
                      goto LABEL_176;
                    }
                    v340 = v300 + 4;
                    if (v300 + 4 >= v368)
                    {
                      v373 = 0;
                      v299 = 1;
                    }
                    else
                    {
                      v301 = *(_QWORD *)&v366[8 * v340];
                      if (v301)
                      {
                        v300 += 4;
                        goto LABEL_195;
                      }
                      while (1)
                      {
                        v300 = v340 + 1;
                        if (__OFADD__(v340, 1))
                          goto LABEL_219;
                        if (v300 >= v368)
                          break;
                        v301 = *(_QWORD *)&v366[8 * v300];
                        ++v340;
                        v296 = v375;
                        v297 = v350;
                        v228 = v339;
                        v295 = v345;
                        if (v301)
                          goto LABEL_176;
                      }
                      v373 = 0;
                      v299 = 1;
                      v378 = (uint64_t)v365;
                    }
                    v297 = v350;
                    v228 = v339;
                    v295 = v345;
                    goto LABEL_179;
                  }
                  v378 = v337;
                }
                break;
              }
              v373 = 0;
              v299 = 1;
              goto LABEL_179;
            }
            v374 = v228;
            v255 = *(int *)(v230 + 64);
            v256 = v356;
            v257 = (char *)v356 + v255;
            v259 = *v254;
            v258 = v254[1];
            v260 = (char *)v254 + v255;
            v261 = *(int *)(v230 + 80);
            v262 = (char *)v254 + v261;
            v263 = *(unint64_t *)((char *)v254 + v261);
            v264 = *((_QWORD *)v262 + 1);
            v265 = (unint64_t *)((char *)v356 + v261);
            *v356 = v259;
            v256[1] = v258;
            v266 = v345;
            ((void (*)(char *, char *, uint64_t))v371)(v257, v260, v345);
            *v265 = v263;
            v265[1] = v264;
            v267 = v352;
            v268 = (char *)v352 + *(int *)(v230 + 64);
            v269 = (unint64_t *)((char *)v352 + *(int *)(v230 + 80));
            *v352 = v259;
            v267[1] = v258;
            ((void (*)(char *, char *, uint64_t))v369)(v268, v257, v266);
            *v269 = v263;
            v269[1] = v264;
            v270 = sub_23ADF6D74(v259);
            if (v270)
            {
              v271 = v270;
              v272 = (char *)objc_msgSend(v270, sel_requestedExtent);
              v274 = v273;

              ((void (*)(char *, uint64_t))v367)(v268, v266);
              v227 = (uint64_t)v373;
              if (v274 == -1)
              {
                v122 = v375;
                v228 = v374;
                v229 = v355;
                v223 = v378;
              }
              else
              {
                v275 = __OFADD__(v272, v274);
                v276 = &v272[v274];
                v122 = v375;
                v228 = v374;
                v223 = v378;
                if (v275)
                  goto LABEL_211;
                if ((uint64_t)v272 >= (uint64_t)v373)
                  v277 = v373;
                else
                  v277 = v272;
                if (v373 == (char *)-1)
                  v227 = (uint64_t)v272;
                else
                  v227 = (uint64_t)v277;
                if ((uint64_t)v276 > v378)
                  v223 = (uint64_t)v276;
                v229 = v355;
              }
            }
            else
            {
              ((void (*)(char *, uint64_t))v367)(v268, v266);
              v122 = v375;
              v228 = v374;
              v229 = v355;
              v223 = v378;
              v227 = (uint64_t)v373;
            }
            sub_23AA8A05C((uint64_t)v356, &qword_2542E6A10);
            v225 = (unint64_t)v372;
            v226 = v368;
          }
          v372 = 0;
          v232 = 1;
          goto LABEL_143;
        }
      }
      else
      {
        v18 = v361;
        sub_23AA8A05C((uint64_t)v361, &qword_2542E6A10);

        v122 = v375;
        v7 = v401;
LABEL_42:
        v81 = v378;
      }
    }
    v378 = (v81 - 1) & v81;
    v124 = __clz(__rbit64(v81)) | (v368 << 6);
    v125 = v366;
    v126 = v373;
    goto LABEL_45;
  }
  v365 = (_QWORD *)(v82 - 1);
  swift_bridgeObjectRetain();
  v367 = 0;
  v83 = v375;
  while (1)
  {
    v84 = v377;
    if (v81)
    {
      v378 = (v81 - 1) & v81;
      v85 = __clz(__rbit64(v81)) | (v367 << 6);
      v86 = v401;
LABEL_12:
      sub_23AA8EFC8(*((_QWORD *)v366 + 7) + v83[9] * v85, v377, &qword_2542E6A10);
      v87 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v83[7];
      v87(v84, 0, 1, v86);
      goto LABEL_34;
    }
    v88 = v367 + 1;
    v86 = v401;
    if (__OFADD__(v367, 1))
    {
      __break(1u);
      goto LABEL_209;
    }
    if (v88 < v358)
    {
      v89 = *(_QWORD *)&v351[8 * v88];
      if (v89)
        goto LABEL_16;
      v90 = v367 + 2;
      ++v367;
      if (v88 + 1 < v358)
      {
        v89 = *(_QWORD *)&v351[8 * v90];
        if (v89)
          goto LABEL_19;
        v367 = v88 + 1;
        if (v88 + 2 < v358)
        {
          v89 = *(_QWORD *)&v351[8 * v88 + 16];
          if (v89)
          {
            v88 += 2;
            goto LABEL_16;
          }
          v367 = v88 + 2;
          if (v88 + 3 < v358)
          {
            v89 = *(_QWORD *)&v351[8 * v88 + 24];
            if (v89)
            {
              v88 += 3;
              goto LABEL_16;
            }
            v90 = v88 + 4;
            v367 = v88 + 3;
            if (v88 + 4 < v358)
              break;
          }
        }
      }
    }
LABEL_33:
    v87 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v83[7];
    v87(v377, 1, 1, v401);
    v378 = 0;
LABEL_34:
    v91 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v83[6];
    v92 = 1;
    if (v91(v84, 1, v86) != 1)
    {
      v93 = *(int *)(v86 + 64);
      v94 = v84 + v93;
      v95 = *(int *)(v86 + 80);
      v96 = *(_QWORD *)(v377 + 8);
      v97 = v376;
      *v376 = *(_QWORD *)v377;
      v97[1] = v96;
      v98 = (char *)v97 + v93;
      v99 = sub_23B1C60A4();
      v100 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 32);
      v100(v98, v94, v99);
      v101 = swift_allocObject();
      *(_OWORD *)(v101 + 16) = *(_OWORD *)(v377 + v95);
      v102 = v97[1];
      v103 = v371;
      v104 = &v371[*(int *)(v401 + 64)];
      v105 = &v371[*(int *)(v401 + 80)];
      *(_QWORD *)v371 = *v97;
      *((_QWORD *)v103 + 1) = v102;
      v100(v104, (uint64_t)v98, v99);
      v86 = v401;
      v92 = 0;
      *(_QWORD *)v105 = sub_23ADF35F8;
      *((_QWORD *)v105 + 1) = v101;
    }
    v106 = (uint64_t)v371;
    v87((uint64_t)v371, v92, 1, v86);
    v107 = v368;
    sub_23AA724E8(v106, v368, &qword_2542E6A18);
    if (v91(v107, 1, v86) == 1)
      goto LABEL_111;
    v108 = *(int *)(v86 + 64);
    v109 = (uint64_t)v376;
    v373 = (char *)v376 + v108;
    v110 = *(_QWORD *)(v107 + 8);
    v374 = *(_QWORD **)v107;
    v372 = (_QWORD *)(v107 + v108);
    v111 = *(int *)(v86 + 80);
    v112 = *(void (**)(void (*)(void)))(v107 + v111);
    v113 = *(void (**)(void (*)(void)))(v107 + v111 + 8);
    v114 = (void (**)(void (*)(void)))((char *)v376 + v111);
    *v376 = v374;
    *(_QWORD *)(v109 + 8) = v110;
    v115 = sub_23B1C60A4();
    v116 = *(_QWORD *)(v115 - 8);
    (*(void (**)(char *, _QWORD *, uint64_t))(v116 + 32))(v373, v372, v115);
    *v114 = v112;
    v114[1] = v113;
    v117 = v370;
    v118 = (char *)v370 + *(int *)(v86 + 64);
    v119 = (void (**)(void (*)(void)))((char *)v370 + *(int *)(v86 + 80));
    *v370 = v374;
    v117[1] = v110;
    v120 = v118;
    (*(void (**)(void))(v116 + 16))();
    *v119 = v112;
    v119[1] = v113;
    swift_retain();
    v112(v369);
    swift_release();
    sub_23AA8A05C(v109, &qword_2542E6A10);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v120, v115);
    v83 = v375;
    v81 = v378;
  }
  v89 = *(_QWORD *)&v351[8 * v90];
  if (v89)
  {
LABEL_19:
    v88 = v90;
LABEL_16:
    v378 = (v89 - 1) & v89;
    v85 = __clz(__rbit64(v89)) + (v88 << 6);
    v367 = v88;
    goto LABEL_12;
  }
  while (1)
  {
    v88 = v90 + 1;
    if (__OFADD__(v90, 1))
      break;
    if (v88 >= v358)
    {
      v367 = (uint64_t)v365;
      goto LABEL_33;
    }
    v89 = *(_QWORD *)&v351[8 * v88];
    ++v90;
    if (v89)
      goto LABEL_16;
  }
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
}

void sub_23AE6DCCC(uint64_t a1, int a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  unint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char v57;
  char v58;
  int64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  __int128 v65;
  unint64_t *v66;
  char *v67;
  unint64_t **v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t *v71;
  unint64_t *v72;
  unint64_t *v73;
  unsigned int (*v74)(unint64_t *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  unint64_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  unint64_t *v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t *v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t *v92;
  uint64_t v93;
  unint64_t *v94;
  uint64_t v95;
  unint64_t *v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t *v102;
  unint64_t *v103;
  unint64_t **v104;
  uint64_t v105;
  void (**v106)(char *, void (**)(char *, void *), uint64_t);
  id v107;
  uint64_t v108;
  char *v109;
  unint64_t **v110;
  void (*v111)(char *, void (**)(char *, void *), uint64_t);
  unint64_t *v112;
  uint64_t v113;
  id v114;
  char *v115;
  NSObject *v116;
  int v117;
  uint64_t v118;
  unint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t *v126;
  void (**v127)(char *, void *);
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  void *v133;
  unint64_t *v134;
  os_log_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  unint64_t v143;
  unint64_t *v144;
  unint64_t *v145;
  uint64_t v146;
  void (***v147)(char *, void *);
  void (***v148)(char *, void *);
  unint64_t v149;
  int64_t v150;
  id v151;
  uint64_t v152;
  void (**v153)(char *, void *);
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  unint64_t *v160;
  uint64_t v161;
  unint64_t *v162;
  char *v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t *v167;
  unint64_t v168;
  int64_t v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  int64_t v176;
  uint64_t v177;
  unint64_t *v178;
  char *v179;
  uint64_t v180;
  void *v181;
  void *v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  int64_t v196;
  uint64_t v197;
  uint64_t v198;
  __int128 v199;
  int v200;
  unint64_t v201;
  uint64_t v202;
  unint64_t *v203;
  unint64_t v204;
  uint64_t v205;
  char *v206;
  os_log_t v207;
  char *v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t *v212;
  unint64_t *v213;
  uint64_t v214;
  char *v215;
  void (*v216)(char *, void (**)(char *, void *), uint64_t);
  id v217;
  unint64_t *v218;
  uint64_t v219;
  unint64_t *v220;
  unint64_t *v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  int64_t v225;
  char *v226;
  unint64_t *v227;
  void (**v228)(char *, void *);
  uint64_t v229;
  unint64_t *v230;
  char *v231;
  uint64_t v232;
  _QWORD v233[62];
  uint64_t v234[63];
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  char v238;
  char v239;
  _QWORD v240[65];

  v4 = v3;
  v202 = a1;
  v7 = sub_23B1C5E4C();
  v210 = *(_QWORD *)(v7 - 8);
  v211 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v231 = (char *)&v193 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v215 = (char *)&v193 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v220 = (unint64_t *)((char *)&v193 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v213 = (unint64_t *)((char *)&v193 - v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F0);
  v214 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v219 = (uint64_t)&v193 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v218 = (unint64_t *)((char *)&v193 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v212 = (unint64_t *)((char *)&v193 - v21);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v227 = (unint64_t *)((char *)&v193 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v221 = (unint64_t *)((char *)&v193 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v229 = (uint64_t)&v193 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v230 = (unint64_t *)((char *)&v193 - v28);
  v29 = sub_23B1C60EC();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (uint64_t *)((char *)&v193 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = *(void **)(v4 + 64);
  *v32 = v33;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x24BEE5610], v29);
  v34 = v33;
  LOBYTE(v33) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) == 0)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    v143 = v35;
    v15 = v232;
LABEL_75:
    v138 = v198;
    v40 = (uint64_t *)v199;
    goto LABEL_76;
  }
  if (!a3)
    goto LABEL_9;
  v235 = (uint64_t)a3;
  v36 = a3;
  v37 = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E08A0);
  if (!swift_dynamicCast() || !v240[3])
    goto LABEL_8;
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(v4 + 16);
  v237 = v202;
  v238 = a2;
  v239 = 0;
  v39 = v197;
  (*(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v38 + 168))(v240, &v237, 1);
  if (v39)
  {

    return;
  }
  v197 = 0;
  sub_23AA724E8((uint64_t)v240, (uint64_t)v234, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v234, (uint64_t)&v235, (uint64_t *)&unk_2542E4CB0);
  if (sub_23AAFC2A4((uint64_t)&v235) == 1)
  {
LABEL_8:

LABEL_9:
    v40 = (uint64_t *)(v4 + qword_2542EE008);
    swift_beginAccess();
    v41 = *v40;
    if (*(_QWORD *)(*v40 + 16))
    {
      v42 = sub_23AA97254(v202, a2);
      if ((v43 & 1) != 0)
      {
        v44 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42);
        swift_bridgeObjectRetain_n();
        v232 = v15;
        if (a3)
        {
          v200 = a2;
          v45 = v44;
          v46 = (unint64_t *)v215;
          v47 = v44;
LABEL_13:
          v201 = v45;
          v48 = *(_QWORD *)(v45 + 16);
          v49 = *(_QWORD *)(v47 + 16);
          swift_bridgeObjectRelease();
          if (v48 == v49)
          {
            swift_beginAccess();
            v50 = sub_23AA97254(v202, v200);
            if ((v51 & 1) != 0)
            {
              v52 = v50;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v54 = *v40;
              v234[0] = *v40;
              *v40 = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_23B1878CC();
                v54 = v234[0];
              }
              sub_23B183BF4(v52, v54);
              *v40 = v54;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_endAccess();
          }
          v209 = a3;
          if (a3)
          {
            swift_getErrorValue();
            v55 = sub_23B0D9CF0(v240[64]);
          }
          else
          {
            sub_23AA9F52C(0, &qword_2569E27C0);
            v55 = (void *)sub_23B1C6C74();
          }
          v217 = v55;
          v60 = v214;
          v61 = *(char **)(v201 + 16);
          if (v202)
            v62 = 0x6873617274;
          else
            v62 = 1953460082;
          v63 = 0xE500000000000000;
          if (!v202)
            v63 = 0xE400000000000000;
          v195 = v63;
          v196 = v62;
          swift_bridgeObjectRetain();
          v64 = 0;
          *(_QWORD *)&v65 = 136315650;
          v199 = v65;
          v198 = MEMORY[0x24BEE4AD8] + 8;
          v208 = v61;
          while (1)
          {
            if ((char *)v64 == v61)
            {
              v73 = *(unint64_t **)(v60 + 56);
              ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))v73)(v46, 1, 1, v15);
              v226 = v61;
            }
            else
            {
              v35 = *(_QWORD *)(v201 + 16);
              if (v64 >= v35)
              {
                __break(1u);
                goto LABEL_93;
              }
              sub_23AA8EFC8(v201+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v64, (uint64_t)v46, &qword_2542DF1F0);
              v226 = (char *)(v64 + 1);
              v73 = *(unint64_t **)(v60 + 56);
              ((void (*)(unint64_t *, _QWORD, uint64_t, uint64_t))v73)(v46, 0, 1, v15);
            }
            v74 = *(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v60 + 48);
            v75 = 1;
            if (v74(v46, 1, v15) != 1)
            {
              v76 = *(int *)(v15 + 64);
              v77 = (char *)v46 + v76;
              v229 = *(int *)(v15 + 80);
              v78 = v46[1];
              v79 = v221;
              *v221 = *v46;
              v79[1] = v78;
              v80 = (char *)v79 + v76;
              v81 = sub_23B1C60A4();
              v230 = v73;
              v82 = v81;
              v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32);
              v83(v80, v77, v81);
              v84 = swift_allocObject();
              v85 = v46;
              v86 = v84;
              *(_OWORD *)(v84 + 16) = *(_OWORD *)((char *)v85 + v229);
              v87 = *v79;
              v88 = v220;
              v89 = (char *)v220 + *(int *)(v232 + 64);
              v90 = (unint64_t *)((char *)v220 + *(int *)(v232 + 80));
              *v220 = v87;
              v88[1] = v78;
              v15 = v232;
              v91 = v82;
              v73 = v230;
              v83(v89, v80, v91);
              v75 = 0;
              *v90 = sub_23ADF35F8;
              v90[1] = v86;
            }
            v92 = v220;
            ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))v73)(v220, v75, 1, v15);
            v93 = (uint64_t)v92;
            v94 = v213;
            sub_23AA724E8(v93, (uint64_t)v213, &qword_2542DF1F8);
            if (v74(v94, 1, v15) == 1)
            {

              goto LABEL_47;
            }
            v95 = *(int *)(v15 + 64);
            v96 = v227;
            v97 = (char *)v227 + v95;
            v98 = v15;
            v99 = *v94;
            v100 = v94[1];
            v228 = (void (**)(char *, void *))((char *)v94 + v95);
            v229 = (uint64_t)v227 + v95;
            v101 = *(int *)(v98 + 80);
            v102 = *(unint64_t **)((char *)v94 + v101 + 8);
            v230 = *(unint64_t **)((char *)v94 + v101);
            v103 = v230;
            v104 = (unint64_t **)((char *)v227 + v101);
            *v227 = v99;
            v96[1] = v100;
            v105 = sub_23B1C60A4();
            v106 = *(void (***)(char *, void (**)(char *, void *), uint64_t))(v105 - 8);
            v106[4](v97, v228, v105);
            *v104 = v103;
            v104[1] = v102;
            sub_23AA93780(v99);
            swift_retain();
            v107 = (id)fpfs_current_or_default_log();
            sub_23B1C5E58();
            v108 = (uint64_t)v212;
            v109 = (char *)v212 + *(int *)(v232 + 64);
            v110 = (unint64_t **)((char *)v212 + *(int *)(v232 + 80));
            *v212 = v99;
            *(_QWORD *)(v108 + 8) = v100;
            v222 = v105;
            v223 = v100;
            v228 = (void (**)(char *, void *))v106;
            v111 = v106[2];
            v111(v109, (void (**)(char *, void *))v229, v105);
            *v110 = v230;
            v110[1] = v102;
            v112 = v218;
            sub_23AA8EFC8(v108, (uint64_t)v218, &qword_2542DF1F0);
            v113 = v219;
            sub_23AA724E8(v108, v219, &qword_2542DF1F0);
            v114 = v217;
            v224 = v99;
            sub_23AA93780(v99);
            v225 = (int64_t)v102;
            swift_retain();
            v115 = (char *)v114;
            v116 = sub_23B1C5E40();
            v117 = sub_23B1C6A88();
            if (!os_log_type_enabled(v116, (os_log_type_t)v117))
            {
              sub_23AA8A05C(v113, &qword_2542DF1F0);
              sub_23AA8A05C((uint64_t)v112, &qword_2542DF1F0);

              (*(void (**)(char *, uint64_t))(v210 + 8))(v231, v211);
              v15 = v232;
              v66 = v221;
              a3 = (void *)v222;
              goto LABEL_31;
            }
            v216 = v111;
            v118 = swift_slowAlloc();
            v119 = (unint64_t *)swift_slowAlloc();
            v120 = swift_slowAlloc();
            v234[0] = v120;
            *(_DWORD *)v118 = v199;
            v206 = v115;
            v207 = v116;
            v205 = v120;
            LODWORD(v204) = v117;
            v203 = v119;
            if (!(_BYTE)v200)
              break;
            v122 = v195;
            v121 = v196;
            if (v200 == 1)
            {
              v235 = 0x284449656C6966;
              v236 = 0xE700000000000000;
              v233[0] = v202;
LABEL_44:
              sub_23B1C7304();
              sub_23B1C64F4();
              swift_bridgeObjectRelease();
              sub_23B1C64F4();
              v121 = v235;
              v122 = v236;
            }
            *(_QWORD *)(v118 + 4) = sub_23AABEC68(v121, v122, v234);
            swift_bridgeObjectRelease();
            *(_WORD *)(v118 + 12) = 2080;
            v15 = v232;
            v123 = *(int *)(v232 + 64);
            v66 = v221;
            a3 = (void *)v222;
            v124 = (char *)v221 + v123;
            v125 = *(int *)(v232 + 80);
            v126 = v218;
            v127 = (void (**)(char *, void *))((char *)v218 + v123);
            v128 = *v218;
            v221[1] = v218[1];
            v216((char *)v66 + v123, v127, (uint64_t)a3);
            *(_OWORD *)((char *)v66 + v125) = *(_OWORD *)((char *)v126 + v125);
            sub_23AA93780(v128);
            v228[1](v124, a3);
            sub_23AE5BC48(v128);
            v130 = v129;
            v132 = v131;
            sub_23AC03BE4(v128);
            *(_QWORD *)(v118 + 14) = sub_23AABEC68(v130, v132, v234);
            swift_bridgeObjectRelease();
            sub_23AA8A05C(v219, &qword_2542DF1F0);
            sub_23AA8A05C((uint64_t)v126, &qword_2542DF1F0);
            *(_WORD *)(v118 + 22) = 2112;
            v133 = v206;
            *(_QWORD *)(v118 + 24) = v206;
            v134 = v203;
            *v203 = (unint64_t)v217;

            v135 = v207;
            _os_log_impl(&dword_23AA66000, v207, (os_log_type_t)v204, "propagation <fs:%s reason:%s> completed: %@", (uint8_t *)v118, 0x20u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v134, -1, -1);
            v136 = v205;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v136, -1, -1);
            v137 = v118;
            v111 = v216;
            MEMORY[0x23B8614BC](v137, -1, -1);

            (*(void (**)(char *, uint64_t))(v210 + 8))(v231, v211);
LABEL_31:
            v67 = (char *)v66 + *(int *)(v15 + 64);
            v68 = (unint64_t **)((char *)v66 + *(int *)(v15 + 80));
            v69 = v223;
            v70 = v224;
            *v66 = v224;
            v66[1] = v69;
            v111(v67, (void (**)(char *, void *))v229, (uint64_t)a3);
            sub_23AC03BE4(v70);
            v71 = v230;
            v72 = (unint64_t *)v225;
            *v68 = v230;
            v68[1] = v72;
            ((void (*)(void *))v71)(v209);
            swift_release();
            sub_23AA8A05C((uint64_t)v227, &qword_2542DF1F0);
            v228[1](v67, a3);
            v60 = v214;
            v46 = (unint64_t *)v215;
            v61 = v208;
            v64 = (unint64_t)v226;
          }
          v235 = 0x284449636F64;
          v236 = 0xE600000000000000;
          LODWORD(v233[0]) = v202;
          goto LABEL_44;
        }
        v223 = v44;
        v56 = v197;
        v57 = sub_23AE71260(v202, a2, v4);
        v225 = v59;
        if (v56)
        {
          swift_bridgeObjectRelease_n();
          return;
        }
        v197 = 0;
        v46 = (unint64_t *)v215;
        if ((v57 & 1) != 0)
        {
          v200 = a2;
          v47 = v223;
          v45 = v223;
          if ((v58 & 1) != 0)
            goto LABEL_13;
          v138 = v223;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v138 = sub_23B052294(v223);
          v139 = (*(unsigned __int8 *)(v214 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v214 + 80);
          v205 = *(_QWORD *)(v138 + 16);
          if (!v205)
            goto LABEL_78;
          v194 = v139;
          v140 = v138 + v139;
          v141 = *(_QWORD *)(v214 + 72);
          v142 = (_QWORD *)sub_23B1C60A4();
          v206 = 0;
          v143 = 0;
          v201 = *(v142 - 1);
          v216 = *(void (**)(char *, void (**)(char *, void *), uint64_t))(v201 + 16);
          v217 = v142;
          v209 = 0;
          v198 = v138;
          *(_QWORD *)&v199 = v40;
          v204 = v140;
          v222 = v141;
          do
          {
            v224 = v143;
            v196 = v141 * v143;
            v144 = (unint64_t *)(v140 + v141 * v143);
            v145 = v230;
            v226 = (char *)v230 + *(int *)(v15 + 64);
            v146 = *(int *)(v15 + 80);
            v147 = (void (***)(char *, void *))((char *)v230 + v146);
            v148 = (void (***)(char *, void *))((char *)v144 + v146);
            v149 = *v144;
            *v230 = *v144;
            v203 = v144;
            v150 = v144[1];
            v145[1] = v150;
            v151 = v217;
            ((void (*)(void))v216)();
            v228 = *v148;
            v152 = v15;
            v153 = v148[1];
            *v147 = v228;
            v147[1] = v153;
            v154 = (uint64_t)v221;
            *v221 = v149;
            *(_QWORD *)(v154 + 8) = v150;
            v155 = v154 + *(int *)(v152 + 64);
            v208 = *(char **)(v201 + 32);
            ((void (*)(uint64_t, char *, id))v208)(v155, v226, v151);
            v156 = (_QWORD *)(v154 + *(int *)(v152 + 80));
            v157 = swift_allocObject();
            *(_QWORD *)(v157 + 16) = v228;
            *(_QWORD *)(v157 + 24) = v153;
            *v156 = sub_23ADF35F8;
            v156[1] = v157;
            sub_23AA93780(v149);
            swift_retain();
            sub_23AA8A05C(v154, &qword_2542DF1F0);
            if (v150 >= v225)
            {
              v140 = v204;
              v176 = v205;
              v15 = v232;
              v138 = v198;
              v40 = (uint64_t *)v199;
              v177 = v224;
            }
            else
            {
              v35 = v224;
              if (v224 >= v205 - 1)
                goto LABEL_94;
              v158 = 0;
              v207 = (os_log_t)(v204 + v222 * (v205 - 1));
              v195 = v205 - 1;
              v159 = (char *)(v205 - 1);
              v15 = v232;
              while (1)
              {
                v228 = (void (**)(char *, void *))v159;
                v226 = v158;
                v160 = (unint64_t *)&v158[(_QWORD)v207];
                v161 = *(int *)(v15 + 64);
                v162 = v230;
                v163 = (char *)v230 + v161;
                v164 = *(int *)(v15 + 80);
                v165 = (unint64_t *)((char *)v230 + v164);
                v166 = v15;
                v167 = (uint64_t *)((char *)v160 + v164);
                v168 = *v160;
                *v230 = *v160;
                v169 = v160[1];
                v162[1] = v169;
                v170 = v217;
                v216((char *)v162 + v161, (void (**)(char *, void *))((char *)v160 + v161), (uint64_t)v217);
                v171 = *v167;
                v172 = v167[1];
                *v165 = v171;
                v165[1] = v172;
                v173 = (uint64_t)v221;
                *v221 = v168;
                *(_QWORD *)(v173 + 8) = v169;
                ((void (*)(uint64_t, char *, id))v208)(v173 + *(int *)(v166 + 64), v163, v170);
                v174 = (_QWORD *)(v173 + *(int *)(v166 + 80));
                v175 = swift_allocObject();
                *(_QWORD *)(v175 + 16) = v171;
                *(_QWORD *)(v175 + 24) = v172;
                *v174 = sub_23ADF35F8;
                v174[1] = v175;
                sub_23AA93780(v168);
                swift_retain();
                sub_23AA8A05C(v173, &qword_2542DF1F0);
                if (v169 >= v225)
                  break;
                v159 = (char *)v228 - 1;
                v158 = &v226[-v222];
                v143 = v224;
                v15 = v232;
                if (v224 >= (uint64_t)v228 - 1)
                {
                  a3 = v209;
                  goto LABEL_75;
                }
              }
              v178 = v203;
              sub_23AA724E8((uint64_t)v203, v229, &qword_2542DF1F0);
              v179 = &v226[v222 * v195];
              v140 = v204;
              v180 = (uint64_t)&v179[v204];
              v177 = v224;
              if (v196 < (uint64_t)v179 || v178 >= (unint64_t *)&v226[v204 + v222 * v205])
              {
                v15 = v232;
                swift_arrayInitWithTakeFrontToBack();
                a3 = v209;
                v138 = v198;
                v40 = (uint64_t *)v199;
              }
              else
              {
                a3 = v209;
                v15 = v232;
                v138 = v198;
                v40 = (uint64_t *)v199;
                if (&v206[-(v222 * v195)] != v226)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_23AA724E8(v229, v180, &qword_2542DF1F0);
              v176 = (int64_t)v228;
              v205 = (uint64_t)v228;
            }
            v143 = v177 + 1;
            v141 = v222;
            v206 += v222;
          }
          while ((uint64_t)v143 < v176);
LABEL_76:
          v139 = v194;
          if (*(_QWORD *)(v138 + 16) >= v143)
            goto LABEL_79;
          __break(1u);
LABEL_78:
          v143 = 0;
LABEL_79:
          v230 = (unint64_t *)(v138 + v139);
          sub_23B1C73AC();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain_n();
          v184 = swift_dynamicCastClass();
          if (!v184)
          {
            swift_bridgeObjectRelease();
            v184 = MEMORY[0x24BEE4AF8];
          }
          v185 = *(_QWORD *)(v184 + 16);
          swift_release();
          if (v185 == v143)
          {
            v186 = swift_dynamicCastClass();
            if (!v186)
            {
              swift_bridgeObjectRelease();
              v186 = MEMORY[0x24BEE4AF8];
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            v186 = sub_23AEA51B4(v138, (uint64_t)v230, 0, (2 * v143) | 1, &qword_2569E1C40, &qword_2542DF1F0);
          }
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v187 = swift_isUniquelyReferenced_nonNull_native();
          v234[0] = *v40;
          *v40 = 0x8000000000000000;
          sub_23AD25380(v186, v202, v200, v187);
          *v40 = v234[0];
          swift_bridgeObjectRelease();
          swift_endAccess();
          v188 = *(_QWORD *)(v138 + 16);
          v189 = v188 - v143;
          if (v188 < v143)
          {
            __break(1u);
          }
          else
          {
            v224 = v143;
            swift_unknownObjectRetain_n();
            v190 = swift_dynamicCastClass();
            if (!v190)
            {
              swift_bridgeObjectRelease();
              v190 = MEMORY[0x24BEE4AF8];
            }
            v143 = v138;
            v191 = *(_QWORD *)(v190 + 16);
            swift_release();
            if (v191 == v189)
            {
              v192 = swift_dynamicCastClass();
              swift_bridgeObjectRelease();
              v46 = (unint64_t *)v215;
              if (v192)
              {
LABEL_91:
                v45 = v192;
                v47 = v223;
                goto LABEL_13;
              }
              v192 = MEMORY[0x24BEE4AF8];
LABEL_90:
              swift_bridgeObjectRelease();
              goto LABEL_91;
            }
          }
          swift_bridgeObjectRelease();
          v192 = sub_23AEA51B4(v143, (uint64_t)v230, v224, (2 * v188) | 1, &qword_2569E1C40, &qword_2542DF1F0);
          v46 = (unint64_t *)v215;
          goto LABEL_90;
        }
LABEL_47:
        swift_bridgeObjectRelease_n();
      }
    }
    return;
  }
  memcpy(v233, v240, sizeof(v233));
  v181 = (void *)v233[18];
  v182 = (void *)v233[19];
  v183 = LOBYTE(v233[20]);
  sub_23AAAE478((id)v233[18], (id)v233[19], v233[20]);

  sub_23AAFC3AC((uint64_t)v233);
  if (v183)
  {
    sub_23AAAEE10(v181, v182, v183);
    return;
  }
  sub_23AAAEE10(v181, v182, 0);
  if (((unsigned __int16)v181 & 0x100) != 0)
    goto LABEL_9;
}

void sub_23AE6EEBC(void *a1, NSObject *a2)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class *v30;
  Class isa;
  objc_class *v32;
  uint64_t v33;
  unint64_t v34;
  NSObject *v35;
  NSObject *v36;
  int v37;
  id v38;
  uint64_t v39;
  Class v40;
  void (*v41)(id *__return_ptr, id *, uint64_t);
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  unint64_t *v60;
  unint64_t v61;
  __int128 v62;
  uint64_t v63;
  _QWORD *v64;
  void (*v65)(char *, unint64_t *, char *);
  char *v66;
  void (**v67);
  unint64_t v68;
  unint64_t *v69;
  uint64_t v70;
  char *v71;
  void (*v72);
  unint64_t *v73;
  unsigned int (*v74)(unint64_t *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  unint64_t *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  unint64_t v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  unint64_t *v90;
  uint64_t v91;
  unint64_t *v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  void (*v98);
  uint64_t v99;
  void (**v100);
  uint64_t v101;
  uint64_t v102;
  id v103;
  char *v104;
  unint64_t *v105;
  uint64_t v106;
  char *v107;
  void (**v108);
  uint64_t v109;
  void (*v110)(char *, char *, char *);
  uint64_t v111;
  void (*v112)(char *, char *, char *);
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  unint64_t v117;
  char *v118;
  NSObject *v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  void (*v128)(char *, char *, char *);
  uint64_t v129;
  unint64_t *v130;
  char *v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  NSObject *v138;
  _QWORD *v139;
  NSObject *v140;
  uint64_t v141;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  NSObject *v148;
  unint64_t v149;
  void *v150;
  unint64_t *v151;
  unint64_t *v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t *v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t *v167;
  char *v168;
  uint64_t v169;
  NSObject **v170;
  uint64_t v171;
  NSObject **v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  NSObject *v176;
  NSObject *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  NSObject *v181;
  unint64_t v182;
  int64_t v183;
  id v184;
  id v185;
  int v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  char v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  int64_t v200;
  unint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  __int128 v204;
  uint64_t v205;
  NSObject *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(uint64_t, char *, NSObject *);
  NSObject *v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t *v214;
  unint64_t *v215;
  uint64_t v216;
  id v217;
  uint64_t v218;
  id v219;
  uint64_t v220;
  char *v221;
  char *v222;
  char *v223;
  unint64_t *v224;
  NSObject *v225;
  uint64_t v226;
  void (*v227);
  uint64_t v228;
  unint64_t *v229;
  unint64_t *v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  unint64_t *v234;
  uint64_t v235;
  _BYTE v236[496];
  id v237[62];
  _QWORD v238[63];
  uint64_t v239[63];
  id v240;
  __int16 v241;
  id v242[66];
  _BYTE v243[504];

  v3 = v2;
  v217 = a1;
  v5 = sub_23B1C5E4C();
  v212 = *(_QWORD *)(v5 - 8);
  v213 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v221 = (char *)&v198 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF208);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v223 = (char *)&v198 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v222 = (char *)&v198 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v215 = (unint64_t *)((char *)&v198 - v12);
  v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF200);
  v216 = *(_QWORD *)(v235 - 8);
  v13 = MEMORY[0x24BDAC7A8](v235);
  v220 = (uint64_t)&v198 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (unint64_t *)((char *)&v198 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v214 = (unint64_t *)((char *)&v198 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v230 = (unint64_t *)((char *)&v198 - v21);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v224 = (unint64_t *)((char *)&v198 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v233 = (uint64_t)&v198 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v234 = (unint64_t *)((char *)&v198 - v26);
  v27 = sub_23B1C60EC();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (Class *)((char *)&v198 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  isa = v3[8].isa;
  *v30 = isa;
  (*(void (**)(Class *, _QWORD, uint64_t))(v28 + 104))(v30, *MEMORY[0x24BEE5610], v27);
  v32 = isa;
  v33 = sub_23B1C6104();
  (*(void (**)(Class *, uint64_t))(v28 + 8))(v30, v27);
  if ((v33 & 1) == 0)
  {
LABEL_66:
    __break(1u);
LABEL_67:
    v149 = v34;
LABEL_68:
    a2 = v211;
    goto LABEL_69;
  }
  if (!a2)
  {
    v38 = v217;
    v39 = v235;
    goto LABEL_9;
  }
  v239[0] = (uint64_t)a2;
  v35 = a2;
  v36 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E08B0);
  v37 = swift_dynamicCast();
  v38 = v217;
  v39 = v235;
  if (!v37 || !v242[0])
  {

LABEL_9:
    v44 = (char *)v3 + qword_2542EE000;
    swift_beginAccess();
    v45 = *(_QWORD *)v44;
    if (!*(_QWORD *)(*(_QWORD *)v44 + 16))
      return;
    swift_bridgeObjectRetain();
    v46 = sub_23AA88CF8(v38);
    if ((v47 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v48 = *(_QWORD *)(*(_QWORD *)(v45 + 56) + 8 * v46);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    v229 = v17;
    if (a2)
    {
      v49 = v48;
      goto LABEL_13;
    }
    v227 = (void (*))v48;
    v208 = (uint64_t)v44;
    v54 = sub_23AE4F234();
    v55 = v202;
    v56 = sub_23AE70A6C(v38, (uint64_t)v54);
    v228 = v57;
    v59 = v58;
    swift_release();
    if (v55)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
    v202 = 0;
    v39 = v235;
    v48 = (unint64_t)v227;
    if ((v56 & 1) == 0)
      goto LABEL_36;
    v49 = (uint64_t)v227;
    if ((v59 & 1) != 0)
    {
LABEL_13:
      v205 = v49;
      v50 = *(_QWORD *)(v49 + 16);
      v51 = *(_QWORD *)(v48 + 16);
      swift_bridgeObjectRelease();
      if (v50 == v51)
      {
        swift_beginAccess();
        v52 = v217;
        sub_23B1825E8((uint64_t)v52);
        swift_endAccess();

        swift_bridgeObjectRelease();
      }
      v211 = a2;
      if (a2)
      {
        swift_getErrorValue();
        v53 = sub_23B0D9CF0((uint64_t)v242[64]);
      }
      else
      {
        sub_23AA9F52C(0, &qword_2569E27C0);
        v53 = (void *)sub_23B1C6C74();
      }
      v219 = v53;
      v60 = (unint64_t *)v223;
      v33 = *(_QWORD *)(v205 + 16);
      swift_bridgeObjectRetain();
      v61 = 0;
      *(_QWORD *)&v62 = 136315650;
      v204 = v62;
      v203 = MEMORY[0x24BEE4AD8] + 8;
      v63 = v216;
      v210 = (void (*)(uint64_t, char *, NSObject *))v33;
      while (1)
      {
        if (v61 == v33)
        {
          v73 = *(unint64_t **)(v63 + 56);
          ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))v73)(v60, 1, 1, v39);
          v228 = v33;
        }
        else
        {
          v34 = *(_QWORD *)(v205 + 16);
          if (v61 >= v34)
          {
            __break(1u);
            goto LABEL_66;
          }
          sub_23AA8EFC8(v205+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(_QWORD *)(v63 + 72) * v61, (uint64_t)v60, &qword_2542DF200);
          v228 = v61 + 1;
          v73 = *(unint64_t **)(v63 + 56);
          ((void (*)(unint64_t *, _QWORD, uint64_t, uint64_t))v73)(v60, 0, 1, v39);
        }
        v74 = *(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v63 + 48);
        v75 = 1;
        if (v74(v60, 1, v39) != 1)
        {
          v76 = *(int *)(v39 + 64);
          v77 = (char *)v60 + v76;
          v233 = *(int *)(v39 + 80);
          v78 = v60[1];
          v79 = v224;
          *v224 = *v60;
          v79[1] = v78;
          v80 = (char *)v79 + v76;
          v81 = sub_23B1C60A4();
          v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32);
          v82(v80, v77, v81);
          v83 = swift_allocObject();
          v234 = v73;
          v84 = v83;
          v85 = (unint64_t *)v222;
          *(_OWORD *)(v83 + 16) = *(_OWORD *)&v223[v233];
          v86 = *v79;
          v87 = (char *)v85 + *(int *)(v235 + 64);
          v88 = (unint64_t *)((char *)v85 + *(int *)(v235 + 80));
          *v85 = v86;
          v85[1] = v78;
          v82(v87, v80, v81);
          v75 = 0;
          *v88 = sub_23ADF35F8;
          v88[1] = v84;
          v73 = v234;
          v39 = v235;
        }
        v89 = (uint64_t)v222;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v73)(v222, v75, 1, v39);
        v90 = v215;
        sub_23AA724E8(v89, (uint64_t)v215, &qword_2542DF208);
        if (v74(v90, 1, v39) == 1)
          break;
        v91 = *(int *)(v39 + 64);
        v92 = v230;
        v93 = (char *)v230 + v91;
        v95 = *v90;
        v233 = v90[1];
        v94 = v233;
        v234 = (unint64_t *)((char *)v230 + v91);
        v96 = (char *)v90 + v91;
        v97 = *(int *)(v39 + 80);
        v98 = *(void (**))((char *)v90 + v97);
        v99 = *(unint64_t *)((char *)v90 + v97 + 8);
        v100 = (unint64_t *)((char *)v230 + v97);
        *v230 = v95;
        v92[1] = v94;
        v101 = sub_23B1C60A4();
        v102 = *(_QWORD *)(v101 - 8);
        (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v93, v96, v101);
        *v100 = v98;
        v100[1] = v99;
        sub_23AA93780(v95);
        swift_retain();
        v103 = (id)fpfs_current_or_default_log();
        v104 = v221;
        sub_23B1C5E58();
        v105 = v234;
        v106 = (uint64_t)v214;
        v107 = (char *)v214 + *(int *)(v235 + 64);
        v108 = (unint64_t *)((char *)v214 + *(int *)(v235 + 80));
        v109 = v233;
        *v214 = v95;
        *(_QWORD *)(v106 + 8) = v109;
        v231 = v102;
        v232 = (char *)v101;
        v110 = *(void (**)(char *, char *, char *))(v102 + 16);
        v111 = v99;
        v112 = v110;
        v110(v107, (char *)v105, (char *)v101);
        v227 = v98;
        *v108 = v98;
        v108[1] = v111;
        sub_23AA8EFC8(v106, (uint64_t)v229, &qword_2542DF200);
        v113 = v106;
        v114 = v220;
        sub_23AA724E8(v113, v220, &qword_2542DF200);
        v115 = v219;
        v116 = v217;
        v226 = v95;
        v117 = v95;
        v118 = v104;
        sub_23AA93780(v117);
        swift_retain();
        v119 = v115;
        v120 = sub_23B1C5E40();
        v121 = sub_23B1C6A88();
        v122 = v235;
        v225 = v120;
        LODWORD(v218) = v121;
        if (os_log_type_enabled(v120, v121))
        {
          v123 = swift_slowAlloc();
          v207 = swift_slowAlloc();
          v208 = swift_slowAlloc();
          v239[0] = v208;
          *(_DWORD *)v123 = v204;
          v124 = sub_23AA7B734();
          *(_QWORD *)(v123 + 4) = sub_23AABEC68(v124, v125, v239);

          swift_bridgeObjectRelease();
          *(_WORD *)(v123 + 12) = 2080;
          v126 = *(int *)(v122 + 64);
          v206 = v119;
          v64 = v224;
          v127 = (char *)v224 + v126;
          v128 = v112;
          v209 = v111;
          v129 = *(int *)(v235 + 80);
          v130 = v229;
          v131 = (char *)v229 + v126;
          v132 = *v229;
          v224[1] = v229[1];
          v133 = v232;
          v128(v127, v131, v232);
          *(_OWORD *)((char *)v64 + v129) = *(_OWORD *)((char *)v130 + v129);
          sub_23AA93780(v132);
          (*(void (**)(char *, char *))(v231 + 8))(v127, v133);
          sub_23AA8A05C((uint64_t)v130, &qword_2542DF200);
          sub_23AE5DE58(v132);
          v135 = v134;
          v137 = v136;
          sub_23AC03BE4(v132);
          *(_QWORD *)(v123 + 14) = sub_23AABEC68(v135, v137, v239);
          v111 = v209;
          v122 = v235;
          swift_bridgeObjectRelease();
          sub_23AA8A05C(v220, &qword_2542DF200);
          *(_WORD *)(v123 + 22) = 2112;
          v138 = v206;
          v139 = (_QWORD *)v207;
          *(_QWORD *)(v123 + 24) = v206;
          *v139 = v219;

          v140 = v225;
          _os_log_impl(&dword_23AA66000, v225, (os_log_type_t)v218, "propagation <fp:%s reason:%s> completed: %@", (uint8_t *)v123, 0x20u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v139, -1, -1);
          v141 = v208;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v141, -1, -1);
          MEMORY[0x23B8614BC](v123, -1, -1);

          (*(void (**)(char *, uint64_t))(v212 + 8))(v221, v213);
          v65 = (void (*)(char *, unint64_t *, char *))v128;
        }
        else
        {
          sub_23AA8A05C((uint64_t)v229, &qword_2542DF200);

          sub_23AA8A05C(v114, &qword_2542DF200);
          (*(void (**)(char *, uint64_t))(v212 + 8))(v118, v213);
          v64 = v224;
          v65 = (void (*)(char *, unint64_t *, char *))v112;
        }
        v3 = v122;
        v66 = (char *)v64 + *(int *)(v122 + 64);
        v67 = (void (**))((char *)v64 + *(int *)(v122 + 80));
        v68 = v226;
        v70 = v233;
        v69 = v234;
        *v64 = v226;
        v64[1] = v70;
        v71 = v232;
        v65(v66, v69, v232);
        sub_23AC03BE4(v68);
        v72 = v227;
        *v67 = v227;
        v67[1] = (void (*))v111;
        v72(v211);
        swift_release();
        sub_23AA8A05C((uint64_t)v230, &qword_2542DF200);
        (*(void (**)(char *, char *))(v231 + 8))(v66, v71);
        v60 = (unint64_t *)v223;
        v39 = (uint64_t)v3;
        v63 = v216;
        v33 = (uint64_t)v210;
        v61 = v228;
      }

LABEL_36:
      swift_bridgeObjectRelease_n();
      return;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v143 = v48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v143 = sub_23B052280(v48);
    v144 = *(_QWORD *)(v143 + 16);
    v145 = (*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80);
    *(_QWORD *)&v204 = v143;
    v207 = v144;
    if (!v144)
    {
      v187 = 0;
      v188 = v143;
      goto LABEL_71;
    }
    v198 = v145;
    v146 = v143 + v145;
    v147 = *(_QWORD *)(v216 + 72);
    v148 = sub_23B1C60A4();
    v3 = 0;
    v149 = 0;
    v225 = v148;
    v203 = (uint64_t)v148[-1].isa;
    v150 = *(void **)(v203 + 16);
    v218 = v147;
    v219 = v150;
    v211 = 0;
    v205 = v146;
    do
    {
      v226 = v149;
      v206 = v3;
      v200 = v147 * v149;
      v151 = (unint64_t *)(v146 + v147 * v149);
      v152 = v234;
      v232 = (char *)v234 + *(int *)(v39 + 64);
      v153 = *(int *)(v39 + 80);
      v154 = (uint64_t *)((char *)v234 + v153);
      v155 = (uint64_t *)((char *)v151 + v153);
      v156 = *v151;
      *v234 = *v151;
      v201 = v151;
      v33 = v151[1];
      v152[1] = v33;
      v3 = v225;
      ((void (*)(void))v219)();
      v157 = *v155;
      v158 = v155[1];
      v39 = v235;
      *v154 = *v155;
      v154[1] = v158;
      v159 = (uint64_t)v224;
      *v224 = v156;
      *(_QWORD *)(v159 + 8) = v33;
      v160 = v159 + *(int *)(v39 + 64);
      v210 = *(void (**)(uint64_t, char *, NSObject *))(v203 + 32);
      v210(v160, v232, v3);
      v161 = (_QWORD *)(v159 + *(int *)(v39 + 80));
      v162 = swift_allocObject();
      *(_QWORD *)(v162 + 16) = v157;
      *(_QWORD *)(v162 + 24) = v158;
      *v161 = sub_23ADF35F8;
      v161[1] = v162;
      sub_23AA93780(v156);
      swift_retain();
      sub_23AA8A05C(v159, &qword_2542DF200);
      if (v33 >= v228)
      {
        v181 = v206;
        v180 = v207;
        a2 = v211;
        v146 = v205;
        v147 = v218;
      }
      else
      {
        v34 = v226;
        if (v226 >= v207 - 1)
          goto LABEL_67;
        v163 = 0;
        v209 = v205 + v218 * (v207 - 1);
        v199 = v207 - 1;
        v164 = v207 - 1;
        while (1)
        {
          v231 = v163;
          v232 = (char *)v164;
          v165 = v209 + v163;
          v166 = *(int *)(v39 + 64);
          v167 = v234;
          v168 = (char *)v234 + v166;
          v169 = *(int *)(v39 + 80);
          v170 = (NSObject **)((char *)v234 + v169);
          v171 = v209 + v163 + v166;
          v172 = (NSObject **)(v209 + v163 + v169);
          v173 = *(_QWORD *)(v209 + v163);
          *v234 = v173;
          v174 = v39;
          v175 = *(_QWORD *)(v165 + 8);
          v167[1] = v175;
          v176 = v225;
          ((void (*)(char *, uint64_t, NSObject *))v219)((char *)v167 + v166, v171, v225);
          v3 = *v172;
          v177 = v172[1];
          *v170 = v3;
          v170[1] = v177;
          v178 = (uint64_t)v224;
          *v224 = v173;
          *(_QWORD *)(v178 + 8) = v175;
          v210(v178 + *(int *)(v174 + 64), v168, v176);
          v33 = v178 + *(int *)(v174 + 80);
          v179 = swift_allocObject();
          *(_QWORD *)(v179 + 16) = v3;
          *(_QWORD *)(v179 + 24) = v177;
          *(_QWORD *)v33 = sub_23ADF35F8;
          *(_QWORD *)(v33 + 8) = v179;
          sub_23AA93780(v173);
          swift_retain();
          sub_23AA8A05C(v178, &qword_2542DF200);
          if (v175 >= v228)
            break;
          v164 = (uint64_t)(v232 - 1);
          v163 = v231 - v218;
          v149 = v226;
          v39 = v235;
          if (v226 >= (uint64_t)(v232 - 1))
            goto LABEL_68;
        }
        v182 = (unint64_t)v201;
        sub_23AA724E8((uint64_t)v201, v233, &qword_2542DF200);
        v147 = v218;
        v183 = v218 * v199 + v231;
        v146 = v205;
        v33 = v183 + v205;
        if (v200 < v183 || v182 >= v205 + v218 * v207 + v231)
        {
          v39 = v235;
          swift_arrayInitWithTakeFrontToBack();
          a2 = v211;
          v181 = v206;
        }
        else
        {
          v181 = v206;
          a2 = v211;
          v39 = v235;
          if (((char *)v206 - v218 * v199) != v231)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_23AA724E8(v233, v33, &qword_2542DF200);
        v180 = (uint64_t)v232;
        v207 = (uint64_t)v232;
      }
      v149 = v226 + 1;
      v3 = ((char *)v181 + v147);
    }
    while (v226 + 1 < v180);
LABEL_69:
    v188 = v204;
    v187 = v149;
    v145 = v198;
    if (*(_QWORD *)(v204 + 16) < v149)
    {
      __break(1u);
      goto LABEL_84;
    }
LABEL_71:
    v234 = (unint64_t *)(v188 + v145);
    sub_23B1C73AC();
    swift_bridgeObjectRetain_n();
    v33 = (uint64_t)v217;
    v189 = swift_dynamicCastClass();
    if (!v189)
    {
      swift_bridgeObjectRelease();
      v189 = MEMORY[0x24BEE4AF8];
    }
    v3 = a2;
    v190 = *(_QWORD *)(v189 + 16);
    swift_release();
    if (v190 == v187)
    {
      v191 = swift_dynamicCastClass();
      if (!v191)
      {
        swift_bridgeObjectRelease();
        v191 = MEMORY[0x24BEE4AF8];
      }
LABEL_76:
      swift_bridgeObjectRelease();
      v192 = (_QWORD *)v208;
      swift_beginAccess();
      v193 = swift_isUniquelyReferenced_nonNull_native();
      v238[0] = *v192;
      *v192 = 0x8000000000000000;
      sub_23AD25230(v191, (void *)v33, v193);
      *v192 = v238[0];
      v194 = v204;

      swift_bridgeObjectRelease();
      swift_endAccess();
      v195 = *(_QWORD *)(v194 + 16);
      if (v195 < v187)
      {
        __break(1u);
      }
      else
      {
        swift_unknownObjectRetain_n();
        v196 = swift_dynamicCastClass();
        if (!v196)
        {
          swift_bridgeObjectRelease();
          v196 = MEMORY[0x24BEE4AF8];
        }
        v197 = *(_QWORD *)(v196 + 16);
        swift_release();
        if (v197 == v195 - v187)
        {
          v49 = swift_dynamicCastClass();
          swift_bridgeObjectRelease();
          a2 = v3;
          if (v49)
          {
            v39 = v235;
            v48 = (unint64_t)v227;
            goto LABEL_13;
          }
          v49 = MEMORY[0x24BEE4AF8];
          v39 = v235;
          goto LABEL_83;
        }
      }
      swift_bridgeObjectRelease();
      v49 = sub_23AEA51B4(v194, (uint64_t)v234, v187, (2 * v195) | 1, &qword_2569E6450, &qword_2542DF200);
      v39 = v235;
      a2 = v3;
LABEL_83:
      v48 = (unint64_t)v227;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
LABEL_84:
    swift_bridgeObjectRelease();
    v191 = sub_23AEA51B4(v188, (uint64_t)v234, 0, (2 * v187) | 1, &qword_2569E6450, &qword_2542DF200);
    goto LABEL_76;
  }

  swift_bridgeObjectRelease();
  v40 = v3[2].isa;
  v240 = v38;
  v241 = 256;
  v41 = *(void (**)(id *__return_ptr, id *, uint64_t))(*(_QWORD *)v40 + 168);
  v42 = v38;
  v43 = v202;
  v41(v242, &v240, 1);
  if (v43)
  {

    return;
  }
  v202 = 0;

  sub_23AA724E8((uint64_t)v242, (uint64_t)v238, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v238, (uint64_t)v239, (uint64_t *)&unk_2542E4CB0);
  if (sub_23AAFC2A4((uint64_t)v239) == 1)
  {

    v38 = v217;
    goto LABEL_9;
  }
  memcpy(v243, v242, 0x1F0uLL);
  sub_23AFFD9BC((uint64_t)v236);
  sub_23AAFC3AC((uint64_t)v243);
  memcpy(v237, v236, sizeof(v237));
  v184 = v237[13];
  v185 = v237[14];
  v186 = LOBYTE(v237[15]);
  sub_23AAAE478(v237[13], v237[14], (char)v237[15]);

  sub_23AAFCF50((uint64_t)v237);
  if (v186)
  {
    sub_23AAAEE10(v184, v185, v186);
    return;
  }
  sub_23AAAEE10(v184, v185, 0);
  v38 = v217;
  if (((unsigned __int16)v184 & 0x100) != 0)
    goto LABEL_9;
}

uint64_t sub_23AE70050(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t *v61;
  __int128 v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  char *v69;
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD v80[2];
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  id v96;
  void (*v97)(uint64_t *);
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;

  v7 = v6;
  v13 = sub_23B1C5E4C();
  v94 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v91 = (char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t *)(v5 + qword_2542EDFE8);
  result = swift_beginAccess();
  v17 = *v15;
  if (!*(_QWORD *)(*v15 + 16))
    return result;
  result = sub_23AA97254(a1, a2);
  if ((v18 & 1) == 0)
    return result;
  v89 = v13;
  v83 = a1;
  v19 = *(_QWORD **)(*(_QWORD *)(v17 + 56) + 8 * result);
  swift_bridgeObjectRetain_n();
  v20 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_23B05226C(v19);
  v90 = a2;
  v21 = v20[2];
  if (!v21)
  {
LABEL_22:
    v22 = 0;
    goto LABEL_23;
  }
  v22 = 0;
  v23 = v20 + 4;
  v24 = qword_23B1DB328[a3];
  while (1)
  {
    v29 = &v23[5 * v22];
    v30 = *((char *)v29 + 8);
    v31 = v29[2];
    if (qword_23B1DB328[v30] == v24 && v31 > a4)
      break;
LABEL_8:
    if (++v22 >= v21)
      goto LABEL_20;
  }
  if (v22 < v21 - 1)
  {
    v33 = (uint64_t)&v20[5 * v21-- + 1];
    while (qword_23B1DB328[*(char *)(v33 - 8)] == v24 && *(_QWORD *)v33 > a4)
    {
      --v21;
      v33 -= 40;
      if (v22 >= v21)
        goto LABEL_20;
    }
    v25 = *v29;
    v26 = *(_OWORD *)&v23[5 * v22 + 3];
    v27 = *(_QWORD *)(v33 + 16);
    v28 = *(_OWORD *)v33;
    *(_OWORD *)v29 = *(_OWORD *)(v33 - 16);
    *((_OWORD *)v29 + 1) = v28;
    v29[4] = v27;
    *(_QWORD *)(v33 - 16) = v25;
    *(_BYTE *)(v33 - 8) = v30;
    *(_QWORD *)v33 = v31;
    *(_OWORD *)(v33 + 8) = v26;
    goto LABEL_8;
  }
LABEL_20:
  if (v20[2] < (unint64_t)v22)
  {
    __break(1u);
    goto LABEL_22;
  }
LABEL_23:
  v80[1] = v7;
  sub_23B1C73AC();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v35 = swift_dynamicCastClass();
  if (!v35)
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x24BEE4AF8];
  }
  v88 = a5;
  v36 = *(_QWORD *)(v35 + 16);
  swift_release();
  if (v36 == v22)
  {
    v37 = swift_dynamicCastClass();
    if (!v37)
    {
      swift_bridgeObjectRelease();
      v37 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v37 = sub_23AEA501C((uint64_t)v20, (uint64_t)(v20 + 4), 0, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v103 = *v15;
  *v15 = 0x8000000000000000;
  sub_23AD25E58(v37, v83, v90, isUniquelyReferenced_nonNull_native);
  *v15 = v103;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v39 = v20[2];
  if (v39 < v22)
  {
    __break(1u);
LABEL_63:
    swift_bridgeObjectRelease();
    v42 = sub_23AEA501C((uint64_t)v20, (uint64_t)v98, v22, (2 * v39) | 1);
    v43 = v88;
    v44 = v90;
    goto LABEL_34;
  }
  v98 = v20 + 4;
  swift_unknownObjectRetain_n();
  v40 = swift_dynamicCastClass();
  if (!v40)
  {
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x24BEE4AF8];
  }
  v41 = *(_QWORD *)(v40 + 16);
  swift_release();
  if (v41 != v39 - v22)
    goto LABEL_63;
  v42 = swift_dynamicCastClass();
  v43 = v88;
  v44 = v90;
  if (!v42)
  {
    swift_bridgeObjectRelease();
    v42 = MEMORY[0x24BEE4AF8];
  }
LABEL_34:
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v42 + 16);
  v46 = v19[2];
  swift_bridgeObjectRelease();
  v47 = v83;
  v48 = v89;
  if (v45 == v46)
  {
    swift_beginAccess();
    v49 = sub_23AA97254(v47, v44);
    if ((v50 & 1) != 0)
    {
      v51 = v49;
      v52 = swift_isUniquelyReferenced_nonNull_native();
      v53 = *v15;
      v103 = *v15;
      *v15 = 0x8000000000000000;
      if ((v52 & 1) == 0)
      {
        sub_23B1891E8();
        v53 = v103;
      }
      sub_23B183BF4(v51, v53);
      *v15 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = v83;
    }
    swift_endAccess();
  }
  v54 = sub_23AE063E0(a3);
  v86 = (*(uint64_t (**)(void))(v54 + 168))();
  v87 = v55;
  if (v43)
  {
    swift_getErrorValue();
    v56 = sub_23B0D9CF0(v99);
  }
  else
  {
    sub_23AA9F52C(0, &qword_2569E27C0);
    v56 = (void *)sub_23B1C6C74();
  }
  v96 = v56;
  v57 = v91;
  v58 = *(_QWORD *)(v42 + 16);
  v80[0] = v42;
  if (v58)
  {
    v59 = 1953460082;
    if (v47)
      v59 = 0x6873617274;
    v82 = v59;
    v60 = 0xE500000000000000;
    if (!v47)
      v60 = 0xE400000000000000;
    v81 = v60;
    swift_bridgeObjectRetain();
    v61 = (uint64_t *)(v42 + 64);
    *(_QWORD *)&v62 = 136315906;
    v85 = v62;
    v84 = MEMORY[0x24BEE4AD8] + 8;
    v63 = v87;
    while (1)
    {
      v64 = *(v61 - 4);
      v65 = *v61;
      v97 = (void (*)(uint64_t *))*(v61 - 1);
      v98 = (_QWORD *)v65;
      swift_retain_n();
      sub_23AA93780(v64);
      v66 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      sub_23AA93780(v64);
      swift_bridgeObjectRetain();
      v67 = v96;
      sub_23AA93780(v64);
      swift_bridgeObjectRetain();
      v68 = v67;
      v69 = v57;
      v70 = sub_23B1C5E40();
      v95 = sub_23B1C6A94();
      if (os_log_type_enabled(v70, (os_log_type_t)v95))
        break;
      sub_23AC03BE4(v64);
      swift_bridgeObjectRelease_n();
      sub_23AC03BE4(v64);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v69, v48);
      v57 = v69;
LABEL_50:
      v101 = v43;
      v97(&v101);
      sub_23AC03BE4(v64);
      swift_release_n();
      v61 += 5;
      if (!--v58)
        goto LABEL_59;
    }
    v71 = swift_slowAlloc();
    v92 = (_QWORD *)swift_slowAlloc();
    v93 = swift_slowAlloc();
    v103 = v93;
    *(_DWORD *)v71 = v85;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v71 + 4) = sub_23AABEC68(v86, v63, &v103);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v71 + 12) = 2080;
    if ((_BYTE)v90)
    {
      v72 = v82;
      v73 = v81;
      if (v90 != 1)
      {
LABEL_57:
        *(_QWORD *)(v71 + 14) = sub_23AABEC68(v72, v73, &v103);
        swift_bridgeObjectRelease();
        *(_WORD *)(v71 + 22) = 2080;
        sub_23AE5BC48(v64);
        v75 = v74;
        v77 = v76;
        sub_23AC03BE4(v64);
        *(_QWORD *)(v71 + 24) = sub_23AABEC68(v75, v77, &v103);
        swift_bridgeObjectRelease();
        sub_23AC03BE4(v64);
        *(_WORD *)(v71 + 32) = 2112;
        *(_QWORD *)(v71 + 34) = v68;
        v78 = v92;
        *v92 = v96;

        _os_log_impl(&dword_23AA66000, v70, (os_log_type_t)v95, "%s <fs:%s reason:%s> completed: %@", (uint8_t *)v71, 0x2Au);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v78, -1, -1);
        v79 = v93;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v79, -1, -1);
        MEMORY[0x23B8614BC](v71, -1, -1);

        v57 = v91;
        v48 = v89;
        (*(void (**)(char *, uint64_t))(v94 + 8))(v91, v89);
        v43 = v88;
        v63 = v87;
        goto LABEL_50;
      }
      v101 = 0x284449656C6966;
      v102 = 0xE700000000000000;
      v100 = v83;
    }
    else
    {
      v101 = 0x284449636F64;
      v102 = 0xE600000000000000;
      LODWORD(v100) = v83;
    }
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v72 = v101;
    v73 = v102;
    goto LABEL_57;
  }
  swift_bridgeObjectRetain();
LABEL_59:
  swift_bridgeObjectRelease();

  return swift_release_n();
}

uint64_t sub_23AE70970(_QWORD **a1, uint64_t a2)
{
  swift_beginAccess();
  sub_23AE6A7BC(a2, a1);
  return swift_endAccess();
}

uint64_t sub_23AE709E8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;

  v3 = sub_23AE4F234();
  swift_beginAccess();
  sub_23AE6A224(a2, v3);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_23AE70A6C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, void **, uint64_t);
  id v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  int i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t j;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  unint64_t v61;
  int64x2_t v62;
  int64x2_t *v63;
  unint64_t v64;
  int64x2_t v65;
  int8x16_t v66;
  uint64_t v67;
  unint64_t v68;
  int64_t *v69;
  int64_t v70;
  int64_t v71;
  unint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[62];
  _BYTE v80[504];
  _BYTE v81[504];
  void *v82;
  __int16 v83;
  _QWORD v84[64];
  void *v85;

  v4 = sub_23B1C5E4C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v73 - v9;
  v85 = a1;
  v11 = *(_QWORD *)(a2 + 16);
  v82 = a1;
  v83 = 0;
  v12 = *(void (**)(_QWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v11 + 168);
  v13 = a1;
  v14 = v76;
  v12(v84, &v82, 1);
  if (!v14)
  {
    v75 = v4;
    v76 = 0;

    sub_23AA724E8((uint64_t)v84, (uint64_t)v80, &qword_2569E6458);
    sub_23AA724E8((uint64_t)v80, (uint64_t)v81, &qword_2569E6458);
    if (sub_23AAFC2A4((uint64_t)v81) != 1)
    {
      memcpy(v79, v84, sizeof(v79));
      if (LOBYTE(v79[15]) == 2)
      {
        v30 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v31 = v13;
        v32 = sub_23B1C5E40();
        v33 = sub_23B1C6A94();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = swift_slowAlloc();
          v74 = v5;
          v35 = (uint8_t *)v34;
          v36 = swift_slowAlloc();
          v78 = v36;
          *(_DWORD *)v35 = 136315138;
          v73 = v35 + 4;
          v37 = sub_23AA7B734();
          v77 = sub_23AABEC68(v37, v38, &v78);
          sub_23B1C6CBC();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23AA66000, v32, v33, "%s did not propagate: propagating is still in progress", v35, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v36, -1, -1);
          MEMORY[0x23B8614BC](v35, -1, -1);

          v39 = *(void (**)(char *, uint64_t))(v74 + 8);
        }
        else
        {

          v39 = *(void (**)(char *, uint64_t))(v5 + 8);
        }
        v42 = v10;
      }
      else
      {
        LOBYTE(v24) = v79[1];
        v40 = v5;
        if (v79[1])
        {
          if (!v79[0] || (v41 = LOBYTE(v79[26]), LOBYTE(v79[26]) == 255))
          {
            sub_23AAFCF50((uint64_t)v79);
            v15 = 1;
            return v15 & 1;
          }
        }
        else
        {
          v41 = LOBYTE(v79[26]);
        }
        if (v79[0] && v41 != 255)
        {
          v23 = ((unint64_t)(LODWORD(v79[24]) | LODWORD(v79[54])) >> 2) & 1;
          sub_23AAFC2BC((uint64_t)v79);
          if (qword_2542E7190 != -1)
            goto LABEL_71;
          goto LABEL_29;
        }
        v45 = (id)fpfs_current_or_default_log();
        v46 = v8;
        sub_23B1C5E58();
        v47 = v13;
        v48 = sub_23B1C5E40();
        v49 = sub_23B1C6A94();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          v74 = swift_slowAlloc();
          v78 = v74;
          *(_DWORD *)v50 = 136315138;
          v73 = v50 + 4;
          v51 = sub_23AA7B734();
          v77 = sub_23AABEC68(v51, v52, &v78);
          sub_23B1C6CBC();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23AA66000, v48, v49, "%s did not propagate: item is not bound", v50, 0xCu);
          v53 = v74;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v53, -1, -1);
          MEMORY[0x23B8614BC](v50, -1, -1);
        }
        else
        {

        }
        v39 = *(void (**)(char *, uint64_t))(v40 + 8);
        v42 = v46;
      }
      v39(v42, v75);
      sub_23AAFCF50((uint64_t)v79);
      v15 = 0;
      return v15 & 1;
    }
LABEL_5:
    v17 = 0;
    for (i = 1; ; i = 0)
    {
      v19 = *(_QWORD *)(a2 + 24);
      sub_23AEA49E8();
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v20 + 32) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
      v21 = v76;
      v22 = (*(uint64_t (**)(void **, uint64_t))(*(_QWORD *)v19 + 272))(&v85, v20);
      swift_bridgeObjectRelease();
      if (v21)
        return v15 & 1;
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        v23 = sub_23B1C7088();
        swift_bridgeObjectRelease();
        if (!v23)
        {
LABEL_66:
          swift_bridgeObjectRelease();
          v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
          v58 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
          if (!v58)
          {
LABEL_67:
            swift_bridgeObjectRelease();
            if ((i & 1) != 0)
            {
              v15 = 1;
              return v15 & 1;
            }
            goto LABEL_69;
          }
LABEL_40:
          v59 = v25[4];
          v60 = v58 - 1;
          if (v58 != 1)
          {
            if (v58 >= 5)
            {
              v61 = v60 & 0xFFFFFFFFFFFFFFFCLL | 1;
              v62 = vdupq_n_s64(v59);
              v63 = (int64x2_t *)(v25 + 7);
              v64 = v60 & 0xFFFFFFFFFFFFFFFCLL;
              v65 = v62;
              do
              {
                v62 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v62, v63[-1]), (int8x16_t)v63[-1], (int8x16_t)v62);
                v65 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v65, *v63), *(int8x16_t *)v63, (int8x16_t)v65);
                v63 += 2;
                v64 -= 4;
              }
              while (v64);
              v66 = vbslq_s8((int8x16_t)vcgtq_s64(v65, v62), (int8x16_t)v62, (int8x16_t)v65);
              v67 = vextq_s8(v66, v66, 8uLL).u64[0];
              v59 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v67, v66.i64[0]), *(int8x8_t *)v66.i8, (int8x8_t)v67);
              if (v60 != (v60 & 0xFFFFFFFFFFFFFFFCLL))
                goto LABEL_49;
            }
            else
            {
              v61 = 1;
LABEL_49:
              v68 = v58 - v61;
              v69 = &v25[v61 + 4];
              do
              {
                v71 = *v69++;
                v70 = v71;
                if (v71 < v59)
                  v59 = v70;
                --v68;
              }
              while (v68);
            }
          }
          swift_bridgeObjectRelease();
          if ((i & 1) == 0)
          {
            v15 = 1;
            return v15 & 1;
          }
LABEL_69:
          v15 = 1;
          return v15 & 1;
        }
      }
      else
      {
        v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v23)
          goto LABEL_66;
      }
      v79[0] = MEMORY[0x24BEE4AF8];
      v24 = v79;
      sub_23ADACEC4(0, v23 & ~(v23 >> 63), 0);
      if ((v23 & 0x8000000000000000) == 0)
      {
        LODWORD(v75) = i;
        v76 = v17;
        v25 = (_QWORD *)v79[0];
        if ((v22 & 0xC000000000000001) != 0)
        {
          for (j = 0; j != v23; ++j)
          {
            v27 = *(_QWORD *)(MEMORY[0x23B85F860](j, v22) + 120);
            swift_unknownObjectRelease();
            v79[0] = v25;
            v29 = v25[2];
            v28 = v25[3];
            if (v29 >= v28 >> 1)
            {
              sub_23ADACEC4(v28 > 1, v29 + 1, 1);
              v25 = (_QWORD *)v79[0];
            }
            v25[2] = v29 + 1;
            v25[v29 + 4] = v27;
          }
        }
        else
        {
          v54 = 0;
          v55 = *(_QWORD *)(v79[0] + 16);
          do
          {
            v56 = *(_QWORD *)(*(_QWORD *)(v22 + 8 * v54 + 32) + 120);
            v79[0] = v25;
            v57 = v25[3];
            if (v55 >= v57 >> 1)
            {
              sub_23ADACEC4(v57 > 1, v55 + 1, 1);
              v25 = (_QWORD *)v79[0];
            }
            ++v54;
            v25[2] = v55 + 1;
            v25[v55++ + 4] = v56;
          }
          while (v23 != v54);
        }
        swift_bridgeObjectRelease();
        LOBYTE(i) = v75;
        v58 = v25[2];
        if (!v58)
          goto LABEL_67;
        goto LABEL_40;
      }
      __break(1u);
LABEL_71:
      swift_once();
LABEL_29:
      v43 = qword_2542EDE38;
      sub_23AAFC540((uint64_t)v79);
      sub_23AAFCF50((uint64_t)v79);
      if (v43)
      {
        if ((v43 & 0x10) != 0)
        {
          v44 = v43;
          if ((_DWORD)v23)
          {
LABEL_58:
            v72 = v44 & 0xFFFFDFFFFFFEF6E7;
            if ((v43 & 0x4000) == 0)
LABEL_59:
              v43 |= 0x4000uLL;
            v44 = (v43 | 0x64090000008000) & v72;
            goto LABEL_63;
          }
          v44 = v43;
        }
        else
        {
          v44 = v43 | 0x10;
          if ((v23 & 1) != 0)
            goto LABEL_58;
        }
      }
      else
      {
        if ((v23 & 1) != 0)
        {
          v72 = 0;
          goto LABEL_59;
        }
        v44 = 16;
      }
LABEL_63:
      if (!(v79[2] & v44 | v24 & 0x51))
        goto LABEL_5;
      v17 = v79[58];
    }
  }

  return v15 & 1;
}

uint64_t sub_23AE71260(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6;
  void (**v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (**v10)(char *, uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v17;
  unint64_t v18;
  int i;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  void (**v32)(char *, uint64_t);
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t j;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void (**v44)(char *, uint64_t);
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint8_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int64_t v57;
  unint64_t v58;
  unint64_t v59;
  int64x2_t v60;
  int64x2_t *v61;
  unint64_t v62;
  int64x2_t v63;
  int8x16_t v64;
  uint64_t v65;
  unint64_t v66;
  int64_t *v67;
  int64_t v68;
  int64_t v69;
  unint64_t v70;
  uint8_t *v71;
  void (**v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD v77[62];
  _BYTE v78[504];
  _BYTE v79[504];
  uint64_t v80;
  char v81;
  char v82;
  _QWORD v83[63];
  uint64_t v84;
  char v85;
  uint64_t v86;

  v6 = sub_23B1C5E4C();
  v7 = *(void (***)(char *, uint64_t))(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (void (**)(char *, uint64_t))((char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v71 - v11;
  v84 = a1;
  v85 = a2;
  v13 = *(_QWORD *)(a3 + 16);
  v80 = a1;
  v81 = a2;
  v82 = 0;
  v14 = v75;
  (*(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v13 + 168))(v83, &v80, 1);
  if (!v14)
  {
    v75 = 0;
    LODWORD(v74) = a2;
    v72 = v10;
    v73 = v6;
    sub_23AA724E8((uint64_t)v83, (uint64_t)v78, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v78, (uint64_t)v79, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v79) != 1)
    {
      memcpy(v77, v83, sizeof(v77));
      if (LOBYTE(v77[20]) == 2)
      {
        v23 = (id)fpfs_current_or_default_log();
        v24 = v12;
        sub_23B1C5E58();
        v25 = sub_23B1C5E40();
        v26 = sub_23B1C6A94();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc();
          v86 = swift_slowAlloc();
          v72 = v7;
          v28 = v86;
          *(_DWORD *)v27 = 136315138;
          v71 = v27 + 4;
          v29 = sub_23AA96F18(a1, v74);
          v76 = sub_23AABEC68(v29, v30, &v86);
          sub_23B1C6CBC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23AA66000, v25, v26, "%s did not propagate: propagating is still in progress", v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v28, -1, -1);
          MEMORY[0x23B8614BC](v27, -1, -1);

          v72[1](v24, v73);
        }
        else
        {

          v7[1](v24, v73);
        }
      }
      else
      {
        LOBYTE(v31) = v77[2];
        v32 = v7;
        if (v77[2])
        {
          v33 = v74;
          if (LOBYTE(v77[1]) == 255 || (v34 = v77[30]) == 0)
          {
            sub_23AAFC3AC((uint64_t)v77);
            v15 = 1;
            return v15 & 1;
          }
        }
        else
        {
          v34 = v77[30];
          v33 = v74;
        }
        if (LOBYTE(v77[1]) != 255 && v34)
        {
          v17 = v75;
          v18 = ((unint64_t)(LODWORD(v77[29]) | LODWORD(v77[54])) >> 2) & 1;
          sub_23ACF4048((uint64_t)v77);
          if (qword_2542E7190 != -1)
            goto LABEL_69;
          goto LABEL_30;
        }
        v43 = (id)fpfs_current_or_default_log();
        v44 = v72;
        sub_23B1C5E58();
        v45 = sub_23B1C5E40();
        v46 = sub_23B1C6A94();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          v74 = swift_slowAlloc();
          v86 = v74;
          v48 = v47;
          *(_DWORD *)v47 = 136315138;
          v71 = v47 + 4;
          v49 = sub_23AA96F18(a1, v33);
          v76 = sub_23AABEC68(v49, v50, &v86);
          sub_23B1C6CBC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23AA66000, v45, v46, "%s did not propagate: item is not bound", v47, 0xCu);
          v51 = v74;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v51, -1, -1);
          MEMORY[0x23B8614BC](v48, -1, -1);

          v32[1]((char *)v72, v73);
        }
        else
        {

          v32[1]((char *)v44, v73);
        }
      }
      sub_23AAFC3AC((uint64_t)v77);
      v15 = 0;
      return v15 & 1;
    }
    v17 = v75;
LABEL_5:
    v18 = 0;
    for (i = 1; ; i = 0)
    {
      v20 = *(_QWORD *)(a3 + 24);
      sub_23AAB5630();
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v21 + 32) = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
      v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v20 + 272))(&v84, v21);
      swift_bridgeObjectRelease();
      if (v17)
        return v15 & 1;
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        v35 = sub_23B1C7088();
        swift_bridgeObjectRelease();
        if (!v35)
        {
LABEL_64:
          swift_bridgeObjectRelease();
          v36 = (_QWORD *)MEMORY[0x24BEE4AF8];
          v56 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
          if (!v56)
          {
LABEL_65:
            swift_bridgeObjectRelease();
            if ((i & 1) != 0)
            {
              v15 = 1;
              return v15 & 1;
            }
            goto LABEL_67;
          }
LABEL_41:
          v57 = v36[4];
          v58 = v56 - 1;
          if (v56 != 1)
          {
            if (v56 >= 5)
            {
              v59 = v58 & 0xFFFFFFFFFFFFFFFCLL | 1;
              v60 = vdupq_n_s64(v57);
              v61 = (int64x2_t *)(v36 + 7);
              v62 = v58 & 0xFFFFFFFFFFFFFFFCLL;
              v63 = v60;
              do
              {
                v60 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v60, v61[-1]), (int8x16_t)v61[-1], (int8x16_t)v60);
                v63 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v63, *v61), *(int8x16_t *)v61, (int8x16_t)v63);
                v61 += 2;
                v62 -= 4;
              }
              while (v62);
              v64 = vbslq_s8((int8x16_t)vcgtq_s64(v63, v60), (int8x16_t)v60, (int8x16_t)v63);
              v65 = vextq_s8(v64, v64, 8uLL).u64[0];
              v57 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v65, v64.i64[0]), *(int8x8_t *)v64.i8, (int8x8_t)v65);
              if (v58 != (v58 & 0xFFFFFFFFFFFFFFFCLL))
                goto LABEL_48;
            }
            else
            {
              v59 = 1;
LABEL_48:
              v66 = v56 - v59;
              v67 = &v36[v59 + 4];
              do
              {
                v69 = *v67++;
                v68 = v69;
                if (v69 < v57)
                  v57 = v68;
                --v66;
              }
              while (v66);
            }
          }
          swift_bridgeObjectRelease();
LABEL_67:
          v15 = 1;
          return v15 & 1;
        }
      }
      else
      {
        v35 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v35)
          goto LABEL_64;
      }
      v77[0] = MEMORY[0x24BEE4AF8];
      v31 = v77;
      sub_23ADACEC4(0, v35 & ~(v35 >> 63), 0);
      if ((v35 & 0x8000000000000000) == 0)
      {
        LODWORD(v74) = i;
        v75 = v18;
        v36 = (_QWORD *)v77[0];
        if ((v22 & 0xC000000000000001) != 0)
        {
          for (j = 0; j != v35; ++j)
          {
            v38 = *(_QWORD *)(MEMORY[0x23B85F860](j, v22) + 120);
            swift_unknownObjectRelease();
            v77[0] = v36;
            v40 = v36[2];
            v39 = v36[3];
            if (v40 >= v39 >> 1)
            {
              sub_23ADACEC4(v39 > 1, v40 + 1, 1);
              v36 = (_QWORD *)v77[0];
            }
            v36[2] = v40 + 1;
            v36[v40 + 4] = v38;
          }
        }
        else
        {
          v52 = 0;
          v53 = *(_QWORD *)(v77[0] + 16);
          do
          {
            v54 = *(_QWORD *)(*(_QWORD *)(v22 + 8 * v52 + 32) + 120);
            v77[0] = v36;
            v55 = v36[3];
            if (v53 >= v55 >> 1)
            {
              sub_23ADACEC4(v55 > 1, v53 + 1, 1);
              v36 = (_QWORD *)v77[0];
            }
            ++v52;
            v36[2] = v53 + 1;
            v36[v53++ + 4] = v54;
          }
          while (v35 != v52);
        }
        swift_bridgeObjectRelease();
        LOBYTE(i) = v74;
        v56 = v36[2];
        if (!v56)
          goto LABEL_65;
        goto LABEL_41;
      }
      __break(1u);
LABEL_69:
      swift_once();
LABEL_30:
      v41 = qword_2542EDE38;
      sub_23ACF410C((uint64_t)v77);
      sub_23AAFC3AC((uint64_t)v77);
      if (v41)
      {
        if ((v41 & 0x10) != 0)
        {
          v42 = v41;
          if ((_DWORD)v18)
          {
LABEL_56:
            v70 = v42 & 0xFFFFDFFFFFFEF6E7;
            if ((v41 & 0x4000) == 0)
LABEL_57:
              v41 |= 0x4000uLL;
            v42 = (v41 | 0x64090000008000) & v70;
            goto LABEL_61;
          }
          v42 = v41;
        }
        else
        {
          v42 = v41 | 0x10;
          if ((v18 & 1) != 0)
            goto LABEL_56;
        }
      }
      else
      {
        if ((v18 & 1) != 0)
        {
          v70 = 0;
          goto LABEL_57;
        }
        v42 = 16;
      }
LABEL_61:
      if (!(v77[3] & v42 | v31 & 0x51))
        goto LABEL_5;
      v18 = v77[58];
    }
  }
  return v15 & 1;
}

int64_t sub_23AE71A80(uint64_t a1)
{
  unint64_t v1;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  int64x2_t v5;
  int64x2_t *v6;
  unint64_t v7;
  int64x2_t v8;
  int8x16_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t *v12;
  int64_t v13;
  int64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    if (v1 >= 5)
    {
      v4 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
      v5 = vdupq_n_s64(v2);
      v6 = (int64x2_t *)(a1 + 56);
      v7 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      v8 = v5;
      do
      {
        v5 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v5, v6[-1]), (int8x16_t)v6[-1], (int8x16_t)v5);
        v8 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v8, *v6), *(int8x16_t *)v6, (int8x16_t)v8);
        v6 += 2;
        v7 -= 4;
      }
      while (v7);
      v9 = vbslq_s8((int8x16_t)vcgtq_s64(v8, v5), (int8x16_t)v5, (int8x16_t)v8);
      v10 = vextq_s8(v9, v9, 8uLL).u64[0];
      v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v10, v9.i64[0]), *(int8x8_t *)v9.i8, (int8x8_t)v10);
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL))
        return v2;
    }
    else
    {
      v4 = 1;
    }
    v11 = v1 - v4;
    v12 = (int64_t *)(a1 + 8 * v4 + 32);
    do
    {
      v14 = *v12++;
      v13 = v14;
      if (v14 < v2)
        v2 = v13;
      --v11;
    }
    while (v11);
  }
  return v2;
}

uint64_t sub_23AE71B34(void *a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, int a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE v31[4];
  int v32;
  id v33;
  int v34;
  void *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];
  uint64_t v43;
  char v44;

  v32 = a7;
  v35 = a5;
  v34 = a2;
  v37 = sub_23B1C602C();
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_23B1C60A4();
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v31[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = *(id *)(a3 + 64);
  sub_23AA8EFC8(a4, (uint64_t)v18, &qword_2542E6C80);
  v43 = a6;
  v44 = v32;
  v19 = (*(unsigned __int8 *)(v16 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = (v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  v23 = a1;
  LOBYTE(a1) = v34 & 1;
  *(_BYTE *)(v22 + 24) = v34 & 1;
  sub_23AA724E8((uint64_t)v18, v22 + v19, &qword_2542E6C80);
  v24 = v35;
  *(_QWORD *)(v22 + v20) = v35;
  *(_QWORD *)(v22 + v21) = a3;
  sub_23AA9F454(&v43, v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
  aBlock[4] = sub_23AEB29CC;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698FC;
  aBlock[3] = &block_descriptor_426;
  v25 = _Block_copy(aBlock);
  v26 = v33;
  sub_23AA724DC(v23, (char)a1);
  v27 = v24;
  swift_retain();
  sub_23B1C6068();
  v41 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
  v29 = v36;
  v28 = v37;
  sub_23B1C6DE8();
  MEMORY[0x23B85F470](0, v14, v29, v25);
  _Block_release(v25);

  (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v29, v28);
  (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v14, v39);
  return swift_release();
}

void sub_23AE71E2C(_QWORD *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t *v41;
  char *v42;
  void (**v43)(uint64_t);
  void (*v44)(uint64_t);
  unint64_t v45;
  void (*v46)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(unint64_t *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t *v72;
  void *v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  unint64_t *v80;
  char *v81;
  void (**v82)(uint64_t);
  void *v83;
  void *v84;
  id v85;
  void (*v86)(char *, uint64_t);
  id v87;
  unint64_t *v88;
  char *v89;
  void (**v90)(uint64_t);
  void *v91;
  void *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t *v105;
  char *v106;
  uint64_t v107;
  void *v108;
  id v109;
  char *v110;
  unint64_t *v111;
  char *v112;
  void (**v113)(uint64_t);
  void (*v114)(uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  void (*v126)(id);
  void (*v127)(id);
  void (**v128)(id);
  uint64_t v129;
  uint64_t v130;
  unint64_t *v131;
  char *v132;
  void (**v133)(id);
  char *v134;
  id v135;
  unint64_t v136;
  uint64_t v137;
  void (*v138)(void (*)(uint64_t), _QWORD, uint64_t, uint64_t);
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unsigned int (*v142)(void (*)(uint64_t), uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  unint64_t *v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  uint64_t v152;
  unint64_t v153;
  _QWORD *v154;
  char *v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  unint64_t *v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  int64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  unint64_t *v168;
  _QWORD *v169;
  unint64_t *v170;
  unint64_t *v171;
  unint64_t *v172;
  _QWORD *v173;
  uint64_t v174;
  char *v175;
  _QWORD *v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  uint64_t v180;
  void (*v181)(char *, uint64_t, uint64_t);
  unint64_t v182;
  void (*v183)(uint64_t);
  unint64_t *v184;

  v167 = a7;
  v165 = a5;
  v166 = a6;
  v163 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v11 = *(_QWORD **)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v168 = (unint64_t *)((char *)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v12);
  v170 = (unint64_t *)((char *)&v160 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v160 - v17);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v171 = (unint64_t *)((char *)&v160 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v184 = (unint64_t *)((char *)&v160 - v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A18);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v160 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (void (*)(uint64_t))((char *)&v160 - v27);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v175 = (char *)&v160 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v178 = (uint64_t *)((char *)&v160 - v32);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v172 = (unint64_t *)((char *)&v160 - v34);
  MEMORY[0x24BDAC7A8](v33);
  v173 = a1;
  v174 = (uint64_t)&v160 - v35;
  v179 = v11;
  v180 = v10;
  if ((a2 & 1) == 0)
  {
    v36 = *(_QWORD *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80) + 56));
    v37 = *(_QWORD *)(v36 + 64);
    v162 = v36 + 64;
    v38 = 1 << *(_BYTE *)(v36 + 32);
    v39 = -1;
    if (v38 < 64)
      v39 = ~(-1 << v38);
    v40 = v39 & v37;
    v161 = a1 + 5;
    v164 = (unint64_t)(v38 + 63) >> 6;
    v160 = v164 - 1;
    v171 = (unint64_t *)v36;
    swift_bridgeObjectRetain();
    v174 = 0;
    v176 = v25;
    v169 = v18;
    while (!v40)
    {
      v47 = v174 + 1;
      if (__OFADD__(v174, 1))
        goto LABEL_92;
      if (v47 < v164)
      {
        v48 = *(_QWORD *)(v162 + 8 * v47);
        if (v48)
          goto LABEL_12;
        v49 = v174 + 2;
        ++v174;
        if (v47 + 1 < v164)
        {
          v48 = *(_QWORD *)(v162 + 8 * v49);
          if (v48)
            goto LABEL_15;
          v174 = v47 + 1;
          if (v47 + 2 < v164)
          {
            v48 = *(_QWORD *)(v162 + 8 * (v47 + 2));
            if (v48)
            {
              v47 += 2;
              goto LABEL_12;
            }
            v174 = v47 + 2;
            if (v47 + 3 < v164)
            {
              v48 = *(_QWORD *)(v162 + 8 * (v47 + 3));
              if (v48)
              {
                v47 += 3;
                goto LABEL_12;
              }
              v49 = v47 + 4;
              v174 = v47 + 3;
              if (v47 + 4 < v164)
              {
                v48 = *(_QWORD *)(v162 + 8 * v49);
                if (!v48)
                {
                  while (1)
                  {
                    v47 = v49 + 1;
                    if (__OFADD__(v49, 1))
                      goto LABEL_95;
                    if (v47 >= v164)
                    {
                      v174 = v160;
                      goto LABEL_29;
                    }
                    v48 = *(_QWORD *)(v162 + 8 * v47);
                    ++v49;
                    if (v48)
                      goto LABEL_12;
                  }
                }
LABEL_15:
                v47 = v49;
LABEL_12:
                v178 = (_QWORD *)((v48 - 1) & v48);
                v45 = __clz(__rbit64(v48)) + (v47 << 6);
                v174 = v47;
LABEL_8:
                sub_23AA8EFC8(v171[7] + v11[9] * v45, (uint64_t)v25, &qword_2542E6A10);
                v46 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v11[7];
                v46(v25, 0, 1, v10);
                goto LABEL_30;
              }
            }
          }
        }
      }
LABEL_29:
      v46 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v11[7];
      v46(v25, 1, 1, v10);
      v178 = 0;
LABEL_30:
      v50 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v11[6];
      v51 = 1;
      if (v50(v25, 1, v10) != 1)
      {
        v52 = *(int *)(v10 + 64);
        v53 = (char *)v25 + v52;
        v54 = *(int *)(v10 + 80);
        v55 = v25[1];
        v56 = v184;
        *v184 = *v25;
        v56[1] = v55;
        v57 = (char *)v56 + v52;
        v58 = sub_23B1C60A4();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32);
        v59(v57, v53, v58);
        v60 = swift_allocObject();
        v61 = (unint64_t *)v175;
        *(_OWORD *)(v60 + 16) = *(_OWORD *)((char *)v176 + v54);
        v62 = *v56;
        v63 = v56[1];
        v10 = v180;
        v64 = (char *)v61 + *(int *)(v180 + 64);
        v65 = (unint64_t *)((char *)v61 + *(int *)(v180 + 80));
        *v61 = v62;
        v61[1] = v63;
        v59(v64, v57, v58);
        v51 = 0;
        *v65 = sub_23ADF35F8;
        v65[1] = v60;
      }
      v66 = (uint64_t)v175;
      v46(v175, v51, 1, v10);
      v67 = v172;
      sub_23AA724E8(v66, (uint64_t)v172, &qword_2542E6A18);
      if (v50(v67, 1, v10) == 1)
      {
        swift_release();
        return;
      }
      v68 = *(int *)(v10 + 64);
      v69 = (uint64_t)v18 + v68;
      v70 = *(int *)(v10 + 80);
      v71 = (_QWORD *)((char *)v18 + v70);
      v72 = v18;
      v74 = *v67;
      v73 = (void *)v67[1];
      v75 = (char *)v67 + v68;
      v77 = *(void (**)(uint64_t))((char *)v67 + v70);
      v76 = *(unint64_t *)((char *)v67 + v70 + 8);
      *v72 = *v67;
      v72[1] = (unint64_t)v73;
      v78 = sub_23B1C60A4();
      v79 = *(_QWORD *)(v78 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v69, v75, v78);
      *v71 = (unint64_t)v77;
      v71[1] = v76;
      v177 = (uint64_t)v71;
      v80 = v170;
      v81 = (char *)v170 + *(int *)(v10 + 64);
      v82 = (void (**)(uint64_t))((char *)v170 + *(int *)(v10 + 80));
      *v170 = v74;
      v80[1] = (unint64_t)v73;
      v181 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
      v182 = v69;
      v181(v81, v69, v78);
      v183 = v77;
      *v82 = v77;
      v82[1] = (void (*)(uint64_t))v76;
      v83 = sub_23ADF6D74(v74);
      if (!v83)
      {
        v87 = v73;
        swift_retain();
        sub_23AA93780(v74);
        v86 = *(void (**)(char *, uint64_t))(v79 + 8);
        v86(v81, v78);
        goto LABEL_37;
      }
      v84 = v83;
      v85 = v73;
      swift_retain();
      sub_23AA93780(v74);
      v86 = *(void (**)(char *, uint64_t))(v79 + 8);
      v86(v81, v78);
      if ((objc_msgSend(v84, sel_selectedForMaterialization) & 1) != 0)
      {
        v41 = v184;
        v42 = (char *)v184 + *(int *)(v10 + 64);
        v43 = (void (**)(uint64_t))((char *)v184 + *(int *)(v10 + 80));
        *v184 = v74;
        v41[1] = (unint64_t)v85;
        v181(v42, v182, v78);
        sub_23AC03BE4(v74);

        v44 = v183;
        *v43 = v183;
        v43[1] = (void (*)(uint64_t))v76;
        v44(v163);
        swift_release();

        v18 = v169;
        sub_23AA8A05C((uint64_t)v169, &qword_2542E6A10);
        v86(v42, v78);
        v40 = (unint64_t)v178;
        v11 = v179;
        v25 = v176;
      }
      else
      {

LABEL_37:
        v88 = v168;
        v89 = (char *)v168 + *(int *)(v10 + 64);
        v90 = (void (**)(uint64_t))((char *)v168 + *(int *)(v10 + 80));
        *v168 = v74;
        v88[1] = (unint64_t)v73;
        v181(v89, v182, v78);
        *v90 = v183;
        v90[1] = (void (*)(uint64_t))v76;
        v91 = sub_23ADF6D74(v74);
        if (v91)
        {
          v92 = v91;
          v93 = (char *)objc_msgSend(v91, sel_requestedExtent);
          v95 = v94;

          v86(v89, v78);
          if (v93 == (char *)-1 || v95 == -1)
            goto LABEL_53;
          v96 = &v93[v95];
          if (__OFADD__(v93, v95))
            goto LABEL_93;
          if ((uint64_t)v96 < (uint64_t)v93)
            goto LABEL_94;
          v97 = v173[2];
          if (!v97 || (v98 = v173[4], v25 = v176, (uint64_t)v96 < v98))
          {
LABEL_53:

            goto LABEL_55;
          }
          v99 = v161;
          while ((uint64_t)v93 < v98 || (uint64_t)v93 >= *v99 || *v99 < (uint64_t)v96)
          {
            if (--v97)
            {
              v98 = v99[1];
              v99 += 2;
              if ((uint64_t)v96 >= v98)
                continue;
            }
            goto LABEL_53;
          }
          v111 = v184;
          v112 = (char *)v184 + *(int *)(v10 + 64);
          v113 = (void (**)(uint64_t))((char *)v184 + *(int *)(v10 + 80));
          *v184 = v74;
          v111[1] = (unint64_t)v73;
          v181(v112, v182, v78);
          sub_23AC03BE4(v74);

          v114 = v183;
          *v113 = v183;
          v113[1] = (void (*)(uint64_t))v76;
          v114(v163);
          swift_release();
          v18 = v169;
          sub_23AA8A05C((uint64_t)v169, &qword_2542E6A10);
          v86(v112, v78);
          v40 = (unint64_t)v178;
          v11 = v179;
        }
        else
        {

          v86(v89, v78);
LABEL_55:
          v101 = v182;
          v102 = sub_23ADF4384(v166, v167, v74, v182, (uint64_t)v183, v76);
          swift_release();
          sub_23AC03BE4(v74);
          v103 = *(int *)(v10 + 64);
          v104 = v10;
          v105 = v184;
          v106 = (char *)v184 + v103;
          v107 = *(int *)(v104 + 80);
          v18 = v169;
          v108 = (void *)v169[1];
          *v184 = *v169;
          v105[1] = (unint64_t)v108;
          v181((char *)v105 + v103, v101, v78);
          *(_OWORD *)((char *)v105 + v107) = *(_OWORD *)v177;
          v109 = v108;
          v86(v106, v78);
          v110 = (char *)objc_msgSend(v109, sel_totalUnitCount);
          if (__OFADD__(v110, 1))
          {
            __break(1u);
            goto LABEL_91;
          }
          objc_msgSend(v109, sel_setTotalUnitCount_, v110 + 1);
          objc_msgSend(v109, sel_addChild_withPendingUnitCount_, v102, 1);

          sub_23AA8A05C((uint64_t)v18, &qword_2542E6A10);
          v11 = v179;
          v10 = v180;
          v40 = (unint64_t)v178;
          v25 = v176;
        }
      }
    }
    v178 = (_QWORD *)((v40 - 1) & v40);
    v45 = __clz(__rbit64(v40)) | (v174 << 6);
    goto LABEL_8;
  }
  v115 = *(_QWORD *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80) + 56));
  v116 = *(_QWORD *)(v115 + 64);
  v172 = (unint64_t *)(v115 + 64);
  v117 = 1 << *(_BYTE *)(v115 + 32);
  v118 = -1;
  if (v117 < 64)
    v118 = ~(-1 << v117);
  v119 = v118 & v116;
  sub_23AA724DC(a1, 1);
  v175 = (char *)((unint64_t)(v117 + 63) >> 6);
  v176 = (_QWORD *)v115;
  v170 = (unint64_t *)(v175 - 1);
  swift_bridgeObjectRetain();
  v177 = 0;
  v183 = v28;
  if (!v119)
    goto LABEL_64;
LABEL_62:
  v182 = (v119 - 1) & v119;
  v136 = __clz(__rbit64(v119)) | (v177 << 6);
  v137 = v180;
  while (2)
  {
    sub_23AA8EFC8(v176[7] + v11[9] * v136, (uint64_t)v28, &qword_2542E6A10);
    v138 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v11[7];
    v138(v28, 0, 1, v137);
    while (1)
    {
      v142 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v11[6];
      v143 = 1;
      if (v142(v28, 1, v137) != 1)
      {
        v144 = *(int *)(v137 + 64);
        v145 = (char *)v28 + v144;
        v146 = *(int *)(v137 + 80);
        v147 = v184;
        v148 = *((_QWORD *)v183 + 1);
        *v184 = *(_QWORD *)v183;
        v147[1] = v148;
        v149 = (char *)v147 + v144;
        v150 = sub_23B1C60A4();
        v151 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32);
        v151(v149, v145, v150);
        v152 = swift_allocObject();
        *(_OWORD *)(v152 + 16) = *(_OWORD *)((char *)v183 + v146);
        v153 = v147[1];
        v154 = v178;
        v155 = (char *)v178 + *(int *)(v137 + 64);
        v156 = (_QWORD *)((char *)v178 + *(int *)(v137 + 80));
        *v178 = *v147;
        v154[1] = v153;
        v151(v155, v149, v150);
        v143 = 0;
        *v156 = sub_23ADF35F8;
        v156[1] = v152;
      }
      v157 = v178;
      v138(v178, v143, 1, v137);
      v158 = (uint64_t)v157;
      v159 = (unint64_t *)v174;
      sub_23AA724E8(v158, v174, &qword_2542E6A18);
      if (v142(v159, 1, v137) == 1)
      {
        swift_release();
        sub_23AEB29C0(v173, 1);
        return;
      }
      v120 = *(int *)(v137 + 64);
      v121 = (uint64_t)v184;
      v122 = (char *)v184 + v120;
      v123 = *v159;
      v124 = v159[1];
      v181 = (void (*)(char *, uint64_t, uint64_t))((char *)v159 + v120);
      v125 = *(int *)(v137 + 80);
      v126 = *(void (**)(id))((char *)v159 + v125);
      v127 = *(void (**)(id))((char *)v159 + v125 + 8);
      v128 = (void (**)(id))((char *)v184 + v125);
      *v184 = v123;
      *(_QWORD *)(v121 + 8) = v124;
      v129 = sub_23B1C60A4();
      v130 = *(_QWORD *)(v129 - 8);
      (*(void (**)(char *, _QWORD *, uint64_t))(v130 + 32))(v122, v181, v129);
      *v128 = v126;
      v128[1] = v127;
      v131 = v171;
      v132 = (char *)v171 + *(int *)(v137 + 64);
      v133 = (void (**)(id))((char *)v171 + *(int *)(v137 + 80));
      *v171 = v123;
      v131[1] = v124;
      v28 = v183;
      v134 = v132;
      (*(void (**)(void))(v130 + 16))();
      *v133 = v126;
      v133[1] = v127;
      v135 = v173;
      sub_23AA724DC(v173, 1);
      swift_retain();
      v126(v135);
      sub_23AEB29C0(v135, 1);
      swift_release();
      sub_23AA8A05C(v121, &qword_2542E6A10);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v134, v129);
      v11 = v179;
      v119 = v182;
      if (v182)
        goto LABEL_62;
LABEL_64:
      v139 = v177 + 1;
      v137 = v180;
      if (__OFADD__(v177, 1))
      {
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      if (v139 < (uint64_t)v175)
      {
        v140 = v172[v139];
        if (v140)
          goto LABEL_67;
        v141 = v177 + 2;
        ++v177;
        if (v139 + 1 < (uint64_t)v175)
        {
          v140 = v172[v141];
          if (v140)
            goto LABEL_70;
          v177 = v139 + 1;
          if (v139 + 2 < (uint64_t)v175)
          {
            v140 = v172[v139 + 2];
            if (v140)
            {
              v139 += 2;
              goto LABEL_67;
            }
            v177 = v139 + 2;
            if (v139 + 3 < (uint64_t)v175)
            {
              v140 = v172[v139 + 3];
              if (v140)
              {
                v139 += 3;
                goto LABEL_67;
              }
              v141 = v139 + 4;
              v177 = v139 + 3;
              if (v139 + 4 < (uint64_t)v175)
                break;
            }
          }
        }
      }
LABEL_84:
      v138 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v11[7];
      v138(v28, 1, 1, v180);
      v182 = 0;
    }
    v140 = v172[v141];
    if (v140)
    {
LABEL_70:
      v139 = v141;
LABEL_67:
      v182 = (v140 - 1) & v140;
      v136 = __clz(__rbit64(v140)) + (v139 << 6);
      v177 = v139;
      continue;
    }
    break;
  }
  while (1)
  {
    v139 = v141 + 1;
    if (__OFADD__(v141, 1))
      break;
    if (v139 >= (uint64_t)v175)
    {
      v177 = (uint64_t)v170;
      goto LABEL_84;
    }
    v140 = v172[v139];
    ++v141;
    if (v140)
      goto LABEL_67;
  }
LABEL_96:
  __break(1u);
}

void sub_23AE72B50(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  void (**v9)(void (*)(_QWORD), id);
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  void (**v18)(void (*)(_QWORD), id);
  uint64_t v19;
  uint64_t v20;
  id v21;
  void (*v22)(_QWORD);
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(id *, uint64_t);
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  int v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(id *, uint64_t);
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD);
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t *v69;
  void *v70;
  id v71;
  void *v72;
  void *v73;
  int v74;
  uint64_t v75;
  void (*v76)(id *);
  id v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  __int128 *v82;
  _QWORD *v83;
  uint8_t *v84;
  void *v85;
  void *v86;
  void (*v87)(uint64_t);
  uint64_t v88;
  void *v89;
  void *v90;
  _QWORD *v91;
  void (*v92)(uint64_t);
  uint64_t v93;
  unint64_t v94;
  int v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  void *v100;
  uint64_t v101;
  void (*v102)(_QWORD);
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  id v106;
  void (**v107)(void (*)(_QWORD), id);
  void *v108;
  void *v109;
  uint64_t v110;
  void (*v111)(uint64_t);
  uint64_t v112;
  void *v113;
  void *v114;
  void (*v115)(uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  __int128 v128;
  _QWORD *v129;
  __int128 *v130;
  _QWORD *v131;
  unint64_t v132;
  void (*v133)(uint64_t);
  void *v134;
  id v135;
  int v136;
  unint64_t v137;
  uint64_t v138;
  uint8_t *v139;
  uint8_t *v140;
  void *v141;
  uint64_t v142;
  unint64_t v143;
  void (*v144)(_QWORD);
  id v145;
  __int128 v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  _QWORD v155[2];
  _BYTE v156[12];
  char v157;
  _QWORD v158[62];
  _BYTE v159[504];
  _QWORD v160[63];
  void *v161;
  __int16 v162;
  uint64_t v163[63];
  void *v164;
  unsigned __int8 v165;
  id v166;

  v147 = a4;
  v8 = (_QWORD *)sub_23B1C5E4C();
  v9 = (void (**)(void (*)(_QWORD), id))*(v8 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = a1;
  v165 = a2;
  v12 = *(_QWORD *)(a3 + 24);
  sub_23AAB5630();
  v13 = swift_allocObject();
  v146 = xmmword_23B1CA760;
  *(_OWORD *)(v13 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v13 + 32) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F20);
  v14 = (*(uint64_t (**)(void **, uint64_t))(*(_QWORD *)v12 + 272))(&v164, v13);
  v15 = v4;
  if (v4)
    goto LABEL_2;
  v16 = v14;
  v144 = (void (*)(_QWORD))v11;
  v145 = v8;
  v143 = v12;
  swift_bridgeObjectRelease();
  if (!(v16 >> 62))
  {
    v18 = v9;
    if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_2:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v117 = sub_23B1C7088();
  swift_bridgeObjectRelease();
  v18 = v9;
  if (!v117)
    goto LABEL_2;
LABEL_5:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v19 = MEMORY[0x23B85F860](0, v16);
  }
  else
  {
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_59;
    }
    v19 = *(_QWORD *)(v16 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 128);
  if ((v20 & 0x10000) != 0 || (v20 & 0x20000) != 0)
  {
    swift_release();
    return;
  }
  v21 = (id)fpfs_current_or_default_log();
  v22 = v144;
  sub_23B1C5E58();
  swift_retain();
  v23 = sub_23B1C5E40();
  v24 = sub_23B1C6AB8();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    LODWORD(v141) = v25;
    v27 = (uint8_t *)v26;
    v142 = swift_slowAlloc();
    v163[0] = v142;
    *(_DWORD *)v27 = 136446210;
    v139 = v27 + 4;
    v140 = v27;
    sub_23AE17C44();
    v160[0] = sub_23AABEC68(v28, v29, v163);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    v30 = v140;
    _os_log_impl(&dword_23AA66000, v23, (os_log_type_t)v141, "✴️  cancelling materialization %{public}s", v140, 0xCu);
    v31 = v142;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v31, -1, -1);
    MEMORY[0x23B8614BC](v30, -1, -1);

  }
  else
  {

    swift_release();
  }
  v18[1](v22, v145);
  v32 = *(_QWORD *)(a3 + 16);
  v33 = v164;
  v34 = v165;
  v161 = v164;
  v162 = v165;
  (*(void (**)(uint64_t *__return_ptr, void **, uint64_t))(*(_QWORD *)v32 + 168))(v163, &v161, 1);
  sub_23AA724E8((uint64_t)v163, (uint64_t)v159, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v159, (uint64_t)v160, (uint64_t *)&unk_2542E4CB0);
  if (sub_23AAFC2A4((uint64_t)v160) == 1)
  {
LABEL_23:
    LOBYTE(v148) = 0;
    v41 = v19;
    v42 = *(_QWORD *)(v19 + 112);
    v43 = *(_QWORD *)(v41 + 120);
    v158[0] = v33;
    v158[1] = v34;
    v158[2] = 768;
    v158[3] = v42;
    v158[4] = v43;
    LODWORD(v158[14]) = 151781376;
    (*(void (**)(_QWORD *))(*(_QWORD *)v147 + 136))(v158);
    swift_release();
    sub_23AEB2410(v33, v34, (void *)0x300, v42, v43, v44, v45, v46, v121, v122, v123, v124, v125, v126, 0, 12, 0, 9);
    return;
  }
  memcpy(v158, v163, sizeof(v158));
  v145 = (id)v158[30];
  if (!v158[30])
  {
    sub_23AAFC3AC((uint64_t)v158);
    goto LABEL_23;
  }
  v166 = v145;
  if (LOBYTE(v158[42]) == 1)
  {
    v141 = v33;
    if (LOBYTE(v158[55]) != 1)
    {
      v138 = v19;
      v36 = v143;
      if (LOBYTE(v158[55]) != 4)
      {
        sub_23AEA49E8();
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v146;
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6330);
        *(_QWORD *)(v37 + 32) = v38;
        v39 = *(uint64_t (**)(id *, uint64_t))(*(_QWORD *)v36 + 264);
        v40 = (uint8_t *)v145;
        v57 = v39(&v166, v37);
        *(_QWORD *)&v146 = v38;
        swift_bridgeObjectRelease();
        v58 = v57;
        if (v57 >> 62)
          goto LABEL_64;
        v144 = *(void (**)(_QWORD))((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v144)
        {
          do
          {
            v143 = v58 & 0xC000000000000001;
            v130 = &v150;
            v131 = (_QWORD *)(v138 + 88);
            v129 = v155;
            v128 = xmmword_23B1CA770;
            v59 = 4;
            v132 = v34;
            v139 = (uint8_t *)v58;
            v140 = v40;
            while (1)
            {
              if (v143)
              {
                v60 = MEMORY[0x23B85F860](v59 - 4, v58);
              }
              else
              {
                v60 = *(_QWORD *)(v58 + 8 * v59);
                swift_retain();
              }
              v61 = (void (*)(_QWORD))(v59 - 3);
              if (__OFADD__(v59 - 4, 1))
                break;
              if ((*(_BYTE *)(v60 + 128) & 1) != 0)
              {
                v142 = v59 - 3;
                v62 = swift_dynamicCastClassUnconditional();
                v63 = v62;
                if (*(_BYTE *)(v62 + 104) == 2)
                {
                  v64 = *(void **)(v62 + 96);
                  v134 = *(void **)(v62 + 88);
                  v65 = v134;
                  v135 = v64;
                  v66 = *(_QWORD *)(v60 + 112);
                  v67 = *(_QWORD *)(v60 + 120);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6368);
                  v68 = swift_allocObject();
                  *(_QWORD *)(v68 + 24) = 0;
                  *(_QWORD *)(v68 + 32) = 0;
                  *(_QWORD *)(v68 + 16) = 0;
                  *(_BYTE *)(v68 + 40) = 1;
                  *(_OWORD *)(v68 + 48) = 0u;
                  *(_OWORD *)(v68 + 64) = 0u;
                  *(_QWORD *)(v68 + 80) = 0;
                  *(_OWORD *)(v68 + 88) = v128;
                  *(_BYTE *)(v68 + 104) = 0;
                  *(_QWORD *)(v68 + 112) = v66;
                  *(_QWORD *)(v68 + 120) = v67;
                  v40 = v140;
                  *(_QWORD *)(v68 + 128) = 0x80000;
                  *(_QWORD *)(v68 + 136) = v40;
                  v133 = *(void (**)(uint64_t))(*(_QWORD *)v147 + 152);
                  v69 = v40;
                  v70 = v65;
                  v71 = v135;
                  sub_23AAAE478(v70, v135, 2);
                  v133(v68);
                  swift_release();
                  swift_release();
                  sub_23AAAEE10(v134, v71, 2);
                }
                else
                {
                  v157 = 0;
                  v72 = *(void **)(v138 + 112);
                  v134 = *(void **)(v138 + 120);
                  v135 = v72;
                  v73 = (void *)(v137 & 0xFFFFFFFFFFFF0000 | 0x300);
                  v74 = (unsigned __int16)v136 | 0xC0000;
                  v137 = v34;
                  v148 = v141;
                  v149 = v34;
                  *(_QWORD *)&v150 = v73;
                  *((_QWORD *)&v150 + 1) = v72;
                  *(_QWORD *)&v151 = v134;
                  *(_WORD *)&v156[8] = v136;
                  *(_WORD *)&v156[10] = 2316;
                  v75 = v147;
                  v76 = *(void (**)(id *))(*(_QWORD *)v147 + 136);
                  swift_retain();
                  v76(&v148);
                  v136 = v74;
                  v127 = v74;
                  v77 = v145;
                  v78 = v137;
                  v137 = (unint64_t)v73;
                  sub_23AEB2410(v141, v78, v73, (unint64_t)v135, (unint64_t)v134, v79, v80, v81, v121, v122, v123, v124, v125, v126, v127, SBYTE2(v127), SHIBYTE(v127), 9);
                  v148 = v77;
                  v149 = 256;
                  v82 = v130;
                  *v130 = 0u;
                  v82[1] = 0u;
                  v82[2] = 0u;
                  v82[3] = 0u;
                  v154 = 589824;
                  v83 = v129;
                  v129[1] = 0;
                  v83[2] = 0;
                  *v83 = 0;
                  *(_DWORD *)((char *)v83 + 23) = 0;
                  v156[11] = 8;
                  v84 = v140;
                  v76(&v148);
                  sub_23AA862DC(v77, 0, 1);
                  sub_23AEAD8A8(0, 0, 0, 0, 0, 0, 0, 0, 0, 9);
                  v35 = *(unsigned __int8 *)(v63 + 104);
                  if ((_DWORD)v35 == 2)
                    goto LABEL_74;
                  v85 = *(void **)(v63 + 88);
                  v86 = *(void **)(v63 + 96);
                  *(_QWORD *)(v63 + 88) = 0;
                  *(_QWORD *)(v63 + 96) = 0;
                  *(_BYTE *)(v63 + 104) = 4;
                  sub_23AAAEE10(v85, v86, v35);
                  v87 = *(void (**)(uint64_t))(*(_QWORD *)v75 + 152);
                  swift_retain();
                  v87(v63);
                  swift_release();
                  v88 = v138;
                  v35 = *(unsigned __int8 *)(v138 + 104);
                  if ((_DWORD)v35 == 2)
                    goto LABEL_74;
                  v89 = *(void **)(v138 + 88);
                  v90 = *(void **)(v138 + 96);
                  v91 = v131;
                  *v131 = 0;
                  v91[1] = 0;
                  *(_BYTE *)(v88 + 104) = 4;
                  sub_23AAAEE10(v89, v90, v35);
                  v92 = *(void (**)(uint64_t))(*(_QWORD *)v75 + 144);
                  v93 = swift_retain();
                  v92(v93);
                  swift_release();
                  swift_release_n();
                  v34 = v132;
                  v40 = v140;
                }
                v58 = (unint64_t)v139;
                v61 = (void (*)(_QWORD))v142;
              }
              else
              {
                swift_release();
              }
              ++v59;
              if (v61 == v144)
                goto LABEL_65;
            }
            __break(1u);
LABEL_64:
            swift_bridgeObjectRetain();
            v118 = sub_23B1C7088();
            swift_bridgeObjectRelease();
            v144 = (void (*)(_QWORD))v118;
          }
          while (v118);
        }
LABEL_65:
        swift_bridgeObjectRelease();
        swift_release();

        goto LABEL_66;
      }
      goto LABEL_71;
    }
    v132 = v34;
    v15 = v19;
    sub_23AEA49E8();
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v146;
    *(_QWORD *)(v55 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
    v56 = *(uint64_t (**)(id *, uint64_t))(*(_QWORD *)v143 + 264);
    v9 = (void (**)(void (*)(_QWORD), id))v145;
    v94 = v56(&v166, v55);
    swift_bridgeObjectRelease();
    if (v94 >> 62)
    {
      swift_bridgeObjectRetain();
      v119 = sub_23B1C7088();
      swift_bridgeObjectRelease();
      if (v119)
      {
LABEL_46:
        if ((v94 & 0xC000000000000001) != 0)
        {
          a3 = MEMORY[0x23B85F860](0, v94);
        }
        else
        {
          if (!*(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_74;
          }
          a3 = *(_QWORD *)(v94 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v17 = (_QWORD *)(a3 + 88);
        v95 = *(unsigned __int8 *)(a3 + 104);
        if (*(_BYTE *)(a3 + 104))
        {
          if (v95 != 1)
          {
            if (v95 != 2)
              goto LABEL_52;
LABEL_60:

            swift_release();
            swift_release();
            goto LABEL_66;
          }
          if (*v17)
            goto LABEL_60;
LABEL_52:
          *(_QWORD *)&v146 = v17;
          v157 = 0;
          v97 = *(_QWORD *)(v15 + 112);
          v96 = *(_QWORD *)(v15 + 120);
          v98 = v15;
          v99 = v132;
          v100 = v141;
          v148 = v141;
          v149 = v132;
          *(_QWORD *)&v150 = 768;
          *((_QWORD *)&v150 + 1) = v97;
          *(_QWORD *)&v151 = v96;
          *(_DWORD *)&v156[8] = 151781376;
          v101 = v147;
          v102 = *(void (**)(_QWORD))(*(_QWORD *)v147 + 136);
          v143 = v96;
          v144 = v102;
          v102(&v148);
          sub_23AEB2410(v100, v99, (void *)0x300, v97, v143, v103, v104, v105, v121, v122, v123, v124, v125, v126, 0, 12, 0, 9);
          v106 = v145;
          v148 = v145;
          v149 = 256;
          v150 = 0u;
          v151 = 0u;
          v152 = 0u;
          v153 = 0u;
          v154 = 589824;
          v155[0] = 0;
          v155[1] = 0;
          *(_QWORD *)v156 = 0;
          *(_DWORD *)&v156[7] = 0;
          v156[11] = 8;
          v107 = v9;
          v144(&v148);
          sub_23AA862DC(v106, 0, 1);
          sub_23AEAD8A8(0, 0, 0, 0, 0, 0, 0, 0, 0, 9);
          v35 = *(unsigned __int8 *)(a3 + 104);
          if ((_DWORD)v35 == 2)
            goto LABEL_74;
          v108 = *(void **)(a3 + 88);
          v109 = *(void **)(a3 + 96);
          v110 = v146;
          *(_QWORD *)v146 = 0;
          *(_QWORD *)(v110 + 8) = 0;
          *(_BYTE *)(a3 + 104) = 4;
          sub_23AAAEE10(v108, v109, v35);
          v111 = *(void (**)(uint64_t))(*(_QWORD *)v101 + 152);
          v112 = swift_retain();
          v111(v112);
          swift_release();
          v35 = *(unsigned __int8 *)(v98 + 104);
          if ((_DWORD)v35 == 2)
LABEL_74:
            sub_23AFF07BC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/Job.swift", 97, v35, 140);
          v113 = *(void **)(v98 + 88);
          v114 = *(void **)(v98 + 96);
          *(_QWORD *)(v98 + 88) = 0;
          *(_QWORD *)(v98 + 96) = 0;
          *(_BYTE *)(v98 + 104) = 4;
          sub_23AAAEE10(v113, v114, v35);
          v115 = *(void (**)(uint64_t))(*(_QWORD *)v101 + 144);
          v116 = swift_retain();
          v115(v116);

          swift_release();
          goto LABEL_26;
        }
LABEL_59:
        if (*(_QWORD *)(a3 + 96))
          goto LABEL_60;
        goto LABEL_52;
      }
    }
    else if (*(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_46;
    }

    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  v47 = v145;
  v48 = *(unsigned __int8 *)(v19 + 104);
  if (v48 == 2)
  {
    v120 = v145;
    v35 = 2;
    goto LABEL_74;
  }
  v49 = v19;
  v50 = *(void **)(v19 + 88);
  v51 = *(void **)(v49 + 96);
  *(_QWORD *)(v49 + 88) = 0;
  *(_QWORD *)(v49 + 96) = 0;
  *(_BYTE *)(v49 + 104) = 4;
  v52 = v47;
  sub_23AAAEE10(v50, v51, v48);
  v53 = *(void (**)(uint64_t))(*(_QWORD *)v147 + 144);
  v54 = swift_retain();
  v53(v54);

LABEL_26:
  swift_release_n();
LABEL_66:
  sub_23AAFC3AC((uint64_t)v158);
}

uint64_t sub_23AE737C4(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[14];
  int v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;

  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1;
  v52 = a2;
  v13 = *(_QWORD *)(a3 + 24);
  sub_23AAB5630();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v14 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0DD0);
  v15 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v13 + 272))(&v51, v14);
  result = swift_bridgeObjectRelease();
  if (!v4)
  {
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v38 = sub_23B1C7088();
      swift_bridgeObjectRelease();
      if (v38)
      {
LABEL_4:
        if ((v15 & 0xC000000000000001) != 0)
        {
          v18 = MEMORY[0x23B85F860](0, v15);
        }
        else
        {
          if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          v18 = *(_QWORD *)(v15 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v19 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        swift_retain();
        v20 = sub_23B1C5E40();
        v21 = sub_23B1C6AB8();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          v47 = swift_slowAlloc();
          v48 = a4;
          v49[0] = v47;
          *(_DWORD *)v22 = 136446210;
          v45 = v22 + 4;
          v46 = v22;
          sub_23AE17C44();
          v53 = sub_23AABEC68(v23, v24, v49);
          a4 = v48;
          sub_23B1C6CBC();
          swift_release();
          swift_bridgeObjectRelease();
          v25 = v46;
          _os_log_impl(&dword_23AA66000, v20, v21, "✴️  cancelling eviction %{public}s", v46, 0xCu);
          v26 = v47;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v26, -1, -1);
          MEMORY[0x23B8614BC](v25, -1, -1);

        }
        else
        {

          swift_release();
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        v27 = (void *)v51;
        LOBYTE(v53) = 0;
        v28 = *(_QWORD *)(v18 + 112);
        v29 = *(_QWORD *)(v18 + 120);
        v30 = v52;
        v49[0] = v51;
        v49[1] = v52;
        v49[2] = 769;
        v49[3] = v28;
        v49[4] = v29;
        v50 = 151781376;
        (*(void (**)(uint64_t *))(*(_QWORD *)a4 + 136))(v49);
        sub_23AEB2410(v27, v30, (void *)0x301, v28, v29, v31, v32, v33, v39, v40, v41, v42, v43, v44, 0, 12, 0, 9);
        v17 = *(unsigned __int8 *)(v18 + 104);
        if ((_DWORD)v17 != 2)
        {
          v34 = *(void **)(v18 + 88);
          v35 = *(void **)(v18 + 96);
          *(_QWORD *)(v18 + 88) = 0;
          *(_QWORD *)(v18 + 96) = 0;
          *(_BYTE *)(v18 + 104) = 4;
          sub_23AAAEE10(v34, v35, v17);
          v36 = *(void (**)(uint64_t))(*(_QWORD *)a4 + 144);
          v37 = swift_retain();
          v36(v37);
          return swift_release_n();
        }
LABEL_17:
        sub_23AFF07BC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/Job.swift", 97, v17, 140);
      }
    }
    else if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23AE73B74(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  os_log_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  void *v63;
  unint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  char v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  NSObject *v84;
  NSObject *v85;
  uint64_t v86;
  uint64_t (*v87)();
  uint64_t *v88;
  uint64_t v89;
  NSObject *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t (*v120)();
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t (*v131)(_QWORD, _QWORD *, uint64_t (*), _QWORD *);
  unint64_t v132;
  id v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  uint64_t (*v142)(unint64_t, uint64_t (*), _QWORD *);
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  _QWORD *v148;
  char v149;
  char v150;
  uint64_t v151;
  BOOL v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  os_log_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  id v166;
  void *v167;
  _BYTE v169[4];
  int v170;
  uint64_t v171;
  void (*v172)(uint64_t, uint64_t);
  unsigned int v173;
  uint64_t v174;
  void *v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  __int128 *v182;
  __int128 *v183;
  os_log_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  _BYTE v195[40];
  _QWORD v196[2];
  char v197;
  unint64_t v198;
  char v199;
  _BYTE v200[40];
  _QWORD v201[2];
  char v202;
  unint64_t v203;
  char v204;
  _QWORD v205[2];
  char v206;
  uint64_t v207;
  char v208;
  _QWORD v209[2];
  char v210;
  uint64_t v211;
  char v212;
  unint64_t v213;

  v3 = v2;
  v174 = a2;
  v177 = sub_23B1C5E4C();
  v5 = *(_QWORD *)(v177 - 8);
  v6 = MEMORY[0x24BDAC7A8](v177);
  v176 = &v169[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v169[-v8];
  v10 = sub_23B1C60EC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t)&v169[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = (void *)v3[8];
  *(_QWORD *)v13 = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  LOBYTE(v14) = sub_23B1C6104();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
    goto LABEL_147;
  v16 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v17 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain_n();
  v13 = (uint64_t)v16;
  v18 = sub_23B1C5E40();
  v19 = sub_23B1C6A94();
  v20 = v19;
  v21 = os_log_type_enabled(v18, v19);
  v179 = v3;
  v175 = (void *)v13;
  v173 = a1;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v185 = (uint64_t)v9;
    v24 = (_QWORD *)v23;
    v183 = (__int128 *)v23;
    v186 = swift_slowAlloc();
    *(_QWORD *)&v191 = v186;
    *(_DWORD *)v22 = 138414850;
    v184 = v18;
    v25 = objc_msgSend((id)v13, sel_enter);
    LODWORD(v182) = v20;
    v26 = v25;
    *(_QWORD *)&v188 = v25;
    v11 = (uint64_t)&v188 + 8;
    sub_23B1C6CBC();
    *v24 = v26;

    *(_WORD *)(v22 + 12) = 2080;
    swift_retain();
    v27 = sub_23AEFEA18();
    v181 = v5;
    v29 = v28;
    swift_release();
    *(_QWORD *)&v188 = sub_23AABEC68(v27, v29, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2080;
    swift_retain();
    swift_release();
    v30 = sub_23AEFEA18();
    v32 = v31;
    swift_release();
    *(_QWORD *)&v188 = sub_23AABEC68(v30, v32, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2080;
    swift_retain();
    swift_release();
    v33 = sub_23AEFEA18();
    v35 = v34;
    swift_release();
    *(_QWORD *)&v188 = sub_23AABEC68(v33, v35, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 42) = 2080;
    swift_retain();
    swift_release();
    v36 = sub_23AEFEA18();
    v38 = v37;
    swift_release();
    *(_QWORD *)&v188 = sub_23AABEC68(v36, v38, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 52) = 2080;
    v39 = (void *)v179[17];
    swift_retain_n();
    swift_release();
    v40 = v178;
    v41 = sub_23B0EA6A0(v39);
    v43 = v42;
    v180 = v40;
    swift_release_n();
    *(_QWORD *)&v188 = sub_23AABEC68(v41, v43, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 62) = 2080;
    swift_retain();
    swift_release();
    v44 = sub_23AEFEA18();
    v46 = v45;
    swift_release();
    *(_QWORD *)&v188 = sub_23AABEC68(v44, v46, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 72) = 2080;
    swift_retain();
    swift_release();
    v47 = sub_23AEFEA18();
    v49 = v48;
    swift_release();
    *(_QWORD *)&v188 = sub_23AABEC68(v47, v49, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 82) = 2080;
    swift_retain();
    swift_release();
    v50 = sub_23AEFEA18();
    v52 = v51;
    swift_release();
    *(_QWORD *)&v188 = sub_23AABEC68(v50, v52, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 92) = 2080;
    swift_retain();
    swift_release();
    v53 = sub_23AEFEA18();
    v55 = v54;
    swift_release();
    *(_QWORD *)&v188 = sub_23AABEC68(v53, v55, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 102) = 2080;
    v56 = (void *)v179[18];
    swift_retain_n();
    swift_release();
    v57 = v180;
    v58 = sub_23B0EA6A0(v56);
    v5 = v59;
    v178 = v57;
    swift_release_n();
    *(_QWORD *)&v188 = sub_23AABEC68(v58, v5, (uint64_t *)&v191);
    sub_23B1C6CBC();
    swift_release();
    v3 = v179;
    swift_bridgeObjectRelease();
    v60 = v184;
    _os_log_impl(&dword_23AA66000, v184, (os_log_type_t)v182, "%@ ⚙️  executing jobs, availabilities update-content-fs:\"%s\" update-metadata-only-fs:\"%s\" fetch-from-fs:\"%s\" other-fs:\"%s\"/%s update-content-fp:\"%s\" update-metadata-only-fp:\"%s\" fetch-from-fp:\"%s\" other-fp:\"%s\"/%s", (uint8_t *)v22, 0x70u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    v61 = (uint64_t)v183;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v61, -1, -1);
    v13 = v186;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v13, -1, -1);
    MEMORY[0x23B8614BC](v22, -1, -1);

    v62 = *(void (**)(uint64_t, uint64_t))(v181 + 8);
    v62(v185, v177);
  }
  else
  {

    swift_release_n();
    v62 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v62((uint64_t)v9, v177);
  }
  v63 = (void *)swift_retain();
  if (objc_sync_enter(v63))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v3);
  v172 = v62;
  v3[26] = 0;
  swift_unknownObjectRelease();
  if (objc_sync_exit(v3))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v3);
  swift_release();
  v171 = v3[20];
  *(_BYTE *)(v171 + 50) = 0;
  v64 = v3[17];
  v65 = (void *)swift_retain();
  if (objc_sync_enter(v65))
    goto LABEL_190;
  swift_beginAccess();
  a1 = *(_QWORD *)(v64 + 16);
  swift_bridgeObjectRetain();
  if (objc_sync_exit((id)v64))
    goto LABEL_191;
  swift_release();
  sub_23AEA7FA0(a1, (void (*)(uint64_t *__return_ptr, __int128 *))sub_23ABD4ABC, (uint64_t)v195);
  v66 = *(unsigned int *)(a1 + 36);
  v209[0] = 1 << *(_BYTE *)(a1 + 32);
  v209[1] = v66;
  v210 = 0;
  v211 = 0;
  v212 = 1;
  v67 = sub_23AEA81E0((uint64_t)v195, (uint64_t)v209, a1, (void (*)(uint64_t *__return_ptr, __int128 *))sub_23ABD4ABC);
  sub_23AAB7550((uint64_t)v195);
  if (v67)
  {
    v187 = MEMORY[0x24BEE4AF8];
    sub_23ADACEE0(0, v67 & ~(v67 >> 63), 0);
    v186 = v187;
    sub_23AEA7FA0(a1, (void (*)(uint64_t *__return_ptr, __int128 *))sub_23ABD4ABC, (uint64_t)v196);
    if (v67 < 0)
      goto LABEL_148;
    v11 = 0;
    LODWORD(v180) = v197 & 1;
    v64 = v196[0];
    v68 = v196[1];
    v69 = v199;
    v5 = a1 + 64;
    v70 = v198;
    v182 = (__int128 *)(a1 + 64);
    v183 = &v192;
    v181 = v67;
    while (v11 != v67)
    {
      if ((v64 & 0x8000000000000000) != 0 || (uint64_t)v64 >= 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_130;
      v71 = v64 >> 6;
      v13 = 1 << v64;
      if ((*(_QWORD *)(v5 + 8 * (v64 >> 6)) & (1 << v64)) == 0)
        goto LABEL_131;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v68)
        goto LABEL_132;
      if ((v69 & 1) != 0)
        goto LABEL_184;
      if ((v70 & 0x8000000000000000) != 0)
        goto LABEL_133;
      v72 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v64 + 8);
      if (v70 >= *(_QWORD *)(v72 + 16))
        goto LABEL_134;
      v184 = v68;
      v185 = v64;
      v5 = a1;
      sub_23AA77B28(v72 + 40 * v70 + 32, (uint64_t)&v188);
      v73 = v189;
      v74 = v190;
      __swift_project_boxed_opaque_existential_1(&v188, v189);
      *(_QWORD *)&v191 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 16))(v73, v74);
      *((_QWORD *)&v191 + 1) = v75;
      sub_23ABD76F0(&v188, (uint64_t)v183);
      v76 = v186;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v187 = v76;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23ADACEE0(0, *(_QWORD *)(v76 + 16) + 1, 1);
        v76 = v187;
      }
      a1 = *(_QWORD *)(v76 + 16);
      v78 = *(_QWORD *)(v76 + 24);
      if (a1 >= v78 >> 1)
      {
        sub_23ADACEE0(v78 > 1, a1 + 1, 1);
        v76 = v187;
      }
      *(_QWORD *)(v76 + 16) = a1 + 1;
      v186 = v76;
      v79 = v76 + 56 * a1;
      v80 = v191;
      v81 = v192;
      v82 = v193;
      *(_QWORD *)(v79 + 80) = v194;
      *(_OWORD *)(v79 + 48) = v81;
      *(_OWORD *)(v79 + 64) = v82;
      *(_OWORD *)(v79 + 32) = v80;
      v64 = v185;
      if (v185 >= 1 << *(_BYTE *)(v5 + 32))
        goto LABEL_135;
      a1 = v5;
      v5 = (unint64_t)v182;
      if ((*((_QWORD *)v182 + v71) & v13) == 0)
        goto LABEL_136;
      v68 = v184;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v184)
        goto LABEL_137;
      if (++v70 == *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v185 + 8) + 16))
      {
        swift_bridgeObjectRetain();
        v64 = sub_23AEA754C(v64, (int)v68, v180 & 1, a1);
        v85 = v84;
        v86 = a1;
        while (1)
        {
          a1 = v83;
          swift_bridgeObjectRelease();
          if ((a1 & 1) != 0)
            goto LABEL_188;
          v13 = *(unsigned int *)(v86 + 36);
          if ((_DWORD)v13 != (_DWORD)v85)
            goto LABEL_180;
          a1 = v86;
          if (v64 == 1 << *(_BYTE *)(v86 + 32))
          {
            sub_23AB3D0AC(v185, (uint64_t)v184, v180 & 1);
            LODWORD(v180) = 0;
            v70 = 0;
            v69 = 1;
            v68 = v13;
            goto LABEL_29;
          }
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6818);
          sub_23AEB4C04();
          v87 = sub_23AEA8848((uint64_t)&v191, v64, (int)v85, 0, v86, (void (*)(_QWORD *))sub_23ABD4ABC);
          v89 = *v88;
          swift_bridgeObjectRetain();
          ((void (*)(__int128 *, _QWORD))v87)(&v191, 0);
          swift_bridgeObjectRelease();
          v13 = *(_QWORD *)(v89 + 16);
          swift_bridgeObjectRelease();
          if (v13)
            break;
          swift_bridgeObjectRetain();
          v64 = sub_23AEA754C(v64, (int)v85, 0, v86);
          v85 = v90;
        }
        sub_23AB3D0AC(v185, (uint64_t)v184, v180 & 1);
        LODWORD(v180) = 0;
        v70 = 0;
        v69 = 0;
        v68 = v85;
        a1 = v86;
      }
      else
      {
        v69 = 0;
      }
LABEL_29:
      ++v11;
      v67 = v181;
      if (v11 == v181)
      {
        sub_23AB3D0AC(v64, (uint64_t)v68, v180 & 1);
        swift_bridgeObjectRelease();
        v3 = v179;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  swift_bridgeObjectRelease();
  v186 = MEMORY[0x24BEE4AF8];
LABEL_40:
  v64 = v3[18];
  v91 = (void *)swift_retain();
  if (objc_sync_enter(v91))
    goto LABEL_190;
  swift_beginAccess();
  v92 = *(_QWORD *)(v64 + 16);
  swift_bridgeObjectRetain();
  if (objc_sync_exit((id)v64))
LABEL_191:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v64);
  swift_release();
  sub_23AEA7FA0(v92, (void (*)(uint64_t *__return_ptr, __int128 *))sub_23ABD4ABC, (uint64_t)v200);
  v93 = *(unsigned int *)(v92 + 36);
  v205[0] = 1 << *(_BYTE *)(v92 + 32);
  v205[1] = v93;
  v206 = 0;
  v207 = 0;
  v208 = 1;
  v94 = sub_23AEA81E0((uint64_t)v200, (uint64_t)v205, v92, (void (*)(uint64_t *__return_ptr, __int128 *))sub_23ABD4ABC);
  sub_23AAB7550((uint64_t)v200);
  if (v94)
  {
    v213 = MEMORY[0x24BEE4AF8];
    sub_23ADACEE0(0, v94 & ~(v94 >> 63), 0);
    v95 = v213;
    sub_23AEA7FA0(v92, (void (*)(uint64_t *__return_ptr, __int128 *))sub_23ABD4ABC, (uint64_t)v201);
    if (v94 < 0)
    {
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
    v5 = 0;
    v170 = v202 & 1;
    v96 = v201[0];
    v97 = v201[1];
    v98 = v204;
    v99 = v92 + 64;
    v100 = v203;
    v182 = &v192;
    v183 = (__int128 *)v92;
    v11 = 1;
    v180 = v94;
    v181 = v92 + 64;
    do
    {
      if (v5 == v94)
        goto LABEL_138;
      if (v96 < 0 || v96 >= 1 << *(_BYTE *)(v92 + 32))
        goto LABEL_139;
      v13 = (unint64_t)v96 >> 6;
      a1 = 1 << v96;
      if ((*(_QWORD *)(v99 + 8 * ((unint64_t)v96 >> 6)) & (1 << v96)) == 0)
        goto LABEL_140;
      if (*(_DWORD *)(v92 + 36) != (_DWORD)v97)
        goto LABEL_141;
      if ((v98 & 1) != 0)
        goto LABEL_185;
      if ((v100 & 0x8000000000000000) != 0)
        goto LABEL_142;
      v101 = *(_QWORD *)(*(_QWORD *)(v92 + 56) + 16 * v96 + 8);
      if (v100 >= *(_QWORD *)(v101 + 16))
        goto LABEL_143;
      v184 = (os_log_t)v96;
      v185 = v97;
      sub_23AA77B28(v101 + 40 * v100 + 32, (uint64_t)&v188);
      v103 = v189;
      v102 = v190;
      __swift_project_boxed_opaque_existential_1(&v188, v189);
      *(_QWORD *)&v191 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 16))(v103, v102);
      *((_QWORD *)&v191 + 1) = v104;
      sub_23ABD76F0(&v188, (uint64_t)v182);
      v105 = swift_isUniquelyReferenced_nonNull_native();
      v213 = v95;
      if ((v105 & 1) == 0)
      {
        sub_23ADACEE0(0, *(_QWORD *)(v95 + 16) + 1, 1);
        v95 = v213;
      }
      v96 = (uint64_t)v184;
      v97 = v185;
      v107 = *(_QWORD *)(v95 + 16);
      v106 = *(_QWORD *)(v95 + 24);
      if (v107 >= v106 >> 1)
      {
        sub_23ADACEE0(v106 > 1, v107 + 1, 1);
        v96 = (uint64_t)v184;
        v97 = v185;
        v95 = v213;
      }
      *(_QWORD *)(v95 + 16) = v107 + 1;
      v108 = v95 + 56 * v107;
      v109 = v191;
      v110 = v192;
      v111 = v193;
      *(_QWORD *)(v108 + 80) = v194;
      *(_OWORD *)(v108 + 48) = v110;
      *(_OWORD *)(v108 + 64) = v111;
      *(_OWORD *)(v108 + 32) = v109;
      v92 = (uint64_t)v183;
      v11 = 1;
      if (v96 >= 1 << *((_BYTE *)v183 + 32))
        goto LABEL_144;
      v99 = v181;
      if ((*(_QWORD *)(v181 + 8 * v13) & a1) == 0)
        goto LABEL_145;
      if (*((_DWORD *)v183 + 9) != (_DWORD)v97)
        goto LABEL_146;
      if (++v100 == *(_QWORD *)(*(_QWORD *)(*((_QWORD *)v183 + 7) + 16 * v96 + 8) + 16))
      {
        v112 = v95;
        v113 = v96;
        swift_bridgeObjectRetain();
        v114 = v170;
        v115 = v170 & 1;
        v116 = v113;
        v117 = v97;
        while (1)
        {
          a1 = sub_23AEA754C(v116, v117, v115, v92);
          v64 = v118;
          v11 = v119;
          swift_bridgeObjectRelease();
          if ((v11 & 1) != 0)
            goto LABEL_189;
          v13 = *(unsigned int *)(v92 + 36);
          if ((_DWORD)v13 != (_DWORD)v64)
            goto LABEL_181;
          v11 = 1;
          if (a1 == 1 << *(_BYTE *)(v92 + 32))
          {
            sub_23AB3D0AC((uint64_t)v184, v185, v114 & 1);
            v170 = 0;
            v100 = 0;
            v98 = 1;
            v96 = a1;
            v97 = v13;
            v95 = v112;
            v99 = v181;
            goto LABEL_62;
          }
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E67F8);
          sub_23AEB4B88();
          v120 = sub_23AEA87C0((uint64_t)&v191, a1, v64, 0, v92, (void (*)(_QWORD *))sub_23ABD4ABC);
          v122 = *v121;
          swift_bridgeObjectRetain();
          ((void (*)(__int128 *, _QWORD))v120)(&v191, 0);
          swift_bridgeObjectRelease();
          v13 = *(_QWORD *)(v122 + 16);
          swift_bridgeObjectRelease();
          if (v13)
            break;
          swift_bridgeObjectRetain();
          v116 = a1;
          v117 = v64;
          v115 = 0;
        }
        sub_23AB3D0AC((uint64_t)v184, v185, v114 & 1);
        v170 = 0;
        v100 = 0;
        v98 = 0;
        v96 = a1;
        v97 = v64;
        v95 = v112;
        v99 = v181;
        v11 = 1;
      }
      else
      {
        v98 = 0;
      }
LABEL_62:
      ++v5;
      v94 = v180;
    }
    while (v5 != v180);
    sub_23AB3D0AC(v96, v97, v170 & 1);
    swift_bridgeObjectRelease();
    v123 = v95;
  }
  else
  {
    swift_bridgeObjectRelease();
    v123 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v191 = v186;
  sub_23AD7DCD4(v123);
  v124 = (_QWORD *)v191;
  if (*(_QWORD *)(v191 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40B0);
    v125 = sub_23B1C70AC();
  }
  else
  {
    v125 = MEMORY[0x24BEE4B00];
  }
  *(_QWORD *)&v191 = v125;
  v126 = v178;
  sub_23AEADDAC((uint64_t)v124, 1, &v191);
  if (v126)
  {
    swift_bridgeObjectRelease();
    swift_release();
    __break(1u);
    goto LABEL_195;
  }
  v5 = 0;
  swift_bridgeObjectRelease();
  v127 = v191;
  v11 = *(_QWORD *)(v191 + 16);
  v128 = v179;
  a1 = v179[16];
  v213 = MEMORY[0x24BEE4AF8];
  if (v11 >= a1)
  {
    v133 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain_n();
    swift_retain();
    v134 = sub_23B1C5E40();
    v135 = sub_23B1C6AB8();
    if (os_log_type_enabled(v134, v135))
    {
      v136 = swift_slowAlloc();
      *(_DWORD *)v136 = 134218240;
      v183 = (__int128 *)a1;
      v184 = (os_log_t)v11;
      v137 = *(_QWORD *)(v127 + 16);
      swift_release();
      *(_QWORD *)&v191 = v137;
      sub_23B1C6CBC();
      swift_release();
      *(_WORD *)(v136 + 12) = 2048;
      v138 = v128[16];
      swift_release();
      *(_QWORD *)&v191 = v138;
      a1 = (uint64_t)v183;
      v11 = (uint64_t)v184;
      sub_23B1C6CBC();
      swift_release();
      _os_log_impl(&dword_23AA66000, v134, v135, "%ld blocked jobs, cannot schedule any more jobs (limit: %ld)", (uint8_t *)v136, 0x16u);
      MEMORY[0x23B8614BC](v136, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    v172((uint64_t)v176, v177);
  }
  else
  {
    v129 = v179[3];
    v130 = sub_23AEA537C(v191);
    swift_release();
    v131 = *(uint64_t (**)(_QWORD, _QWORD *, uint64_t (*), _QWORD *))(*(_QWORD *)v129 + 144);
    swift_retain();
    v132 = v173;
    v139 = v131(v173, v130, sub_23AEB4B74, v128);
    swift_release();
    swift_release();
    if (v139 >> 62)
    {
LABEL_178:
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E08C0);
      v140 = sub_23B1C7058();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_23B1C73A0();
      v140 = v139;
    }
    swift_bridgeObjectRelease();
    sub_23AD7DB1C(v140);
    v141 = v179;
    if ((v179[10] & 8) != 0)
    {
      v142 = *(uint64_t (**)(unint64_t, uint64_t (*), _QWORD *))(*(_QWORD *)v179[2] + 280);
      swift_retain();
      v143 = v142(v132, sub_23AEB555C, v141);
      swift_release();
      if (v143 >> 62)
        goto LABEL_186;
      swift_bridgeObjectRetain();
      sub_23B1C73A0();
      v144 = v143;
LABEL_88:
      swift_bridgeObjectRelease();
      sub_23AD7DB1C(v144);
    }
    sub_23AEA5C78((uint64_t *)&v213);
  }
  v13 = v213;
  if (!(v213 >> 62))
  {
    v145 = *(_QWORD *)((v213 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v145)
      goto LABEL_152;
    goto LABEL_92;
  }
LABEL_151:
  swift_bridgeObjectRetain();
  v145 = sub_23B1C7088();
  swift_bridgeObjectRelease();
  if (!v145)
  {
LABEL_152:
    swift_bridgeObjectRelease();
    v186 = 0;
    if (v11 >= a1)
      goto LABEL_158;
    goto LABEL_153;
  }
LABEL_92:
  v185 = v13 & 0xC000000000000001;
  if ((v13 & 0xC000000000000001) != 0)
  {
    v64 = MEMORY[0x23B85F860](0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_176:
      swift_once();
      goto LABEL_164;
    }
    v64 = *(_QWORD *)(v13 + 32);
    swift_retain();
  }
  v146 = v179[21];
  if ((fp_task_tracker_is_cancelled(*(void **)(v146 + 16)) & 1) != 0)
  {
LABEL_96:
    swift_bridgeObjectRelease();
    sub_23AD2C7F8();
    swift_allocError();
    swift_willThrow();
    swift_release();
LABEL_97:
    v147 = v175;
    sub_23AFC09DC(v175);

    return v147 & 1;
  }
  if (v174 < 1)
  {
    v186 = 0;
LABEL_119:
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_158;
  }
  v183 = (__int128 *)a1;
  v184 = (os_log_t)v11;
  v148 = v179 + 24;
  v181 = qword_2542EDFC0;
  swift_beginAccess();
  v11 = 0;
  v186 = 0;
  v182 = (__int128 *)(v13 & 0xFFFFFFFFFFFFFF8);
  a1 = v145 - 1;
  while (1)
  {
    if (*(_QWORD *)(*v148 + 16) >= 0x100uLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_158;
    }
    v149 = (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v64 + 136))(v179);
    if (v5)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_97;
    }
    if (v149)
      break;
    ++v186;
    v150 = *(_BYTE *)(v64 + 32);
    swift_release();
    if ((v150 & 1) != 0)
    {
      v151 = *(_QWORD *)((char *)v179 + v181);
      v152 = __OFADD__(v151, 1);
      v153 = v151 + 1;
      if (v152)
      {
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E08C0);
        v144 = sub_23B1C7058();
        swift_bridgeObjectRelease();
        goto LABEL_88;
      }
      *(_QWORD *)((char *)v179 + v181) = v153;
    }
LABEL_108:
    if (a1 == v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_126;
    }
    v132 = v11 + 1;
    if (v185)
    {
      v64 = MEMORY[0x23B85F860](v11 + 1, v13);
      if (__OFADD__(v132, 1))
        goto LABEL_149;
    }
    else
    {
      if (v132 >= *((_QWORD *)v182 + 2))
      {
        __break(1u);
        goto LABEL_178;
      }
      v64 = *(_QWORD *)(v13 + 8 * v11 + 40);
      swift_retain();
      if (__OFADD__(v132, 1))
        goto LABEL_149;
    }
    if ((fp_task_tracker_is_cancelled(*(void **)(v146 + 16)) & 1) != 0)
      goto LABEL_96;
    ++v11;
    if (v186 >= v174)
      goto LABEL_119;
  }
  if (v149 == 2)
  {
    swift_release();
    goto LABEL_108;
  }
  swift_bridgeObjectRelease();
  ++v186;
  v154 = *(_BYTE *)(v64 + 32);
  swift_release();
  if ((v154 & 1) != 0)
  {
    v155 = *(_QWORD *)((char *)v179 + v181);
    v152 = __OFADD__(v155, 1);
    v156 = v155 + 1;
    v158 = (uint64_t)v183;
    v157 = v184;
    if (!v152)
    {
      *(_QWORD *)((char *)v179 + v181) = v156;
      goto LABEL_127;
    }
    __break(1u);
LABEL_188:
    __break(1u);
LABEL_189:
    __break(1u);
LABEL_190:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v64);
  }
LABEL_126:
  v158 = (uint64_t)v183;
  v157 = v184;
LABEL_127:
  if ((uint64_t)v157 < v158)
  {
LABEL_153:
    v159 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v179[5] + 16) + 80) + 16);
    v160 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v179[5] + 16) + 80) + 24);
    v152 = __OFSUB__(v160, v159);
    v161 = v160 - v159;
    if (v152)
      goto LABEL_182;
    if (v161 > 0)
      goto LABEL_157;
    v162 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v179[4] + 16) + 80) + 16);
    v163 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v179[4] + 16) + 80) + 24);
    v152 = __OFSUB__(v163, v162);
    v164 = v163 - v162;
    if (v152)
      goto LABEL_183;
    if (v164 >= 1)
LABEL_157:
      *(_BYTE *)(v171 + 50) = 1;
  }
LABEL_158:
  v124 = v179;
  if (!v179[25])
  {
    swift_beginAccess();
    if (*(_QWORD *)(v124[24] + 16))
    {
      v124[25] = os_transaction_create();
      swift_unknownObjectRelease();
    }
  }
  v165 = (void *)swift_retain();
  if (objc_sync_enter(v165))
LABEL_195:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v124);
  v166 = *(id *)((char *)v124 + qword_2542E6C60);
  if (objc_sync_exit(v124))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v124);
  swift_release();
  sub_23AFEA2F8((uint64_t)nullsub_1, 0);

  if (qword_2542E4C20 != -1)
    goto LABEL_176;
LABEL_164:
  sub_23AFEA2F8((uint64_t)nullsub_1, 0);
  if (qword_2542E6EE0 != -1)
    swift_once();
  sub_23AFEA2F8((uint64_t)nullsub_1, 0);
  if (qword_2542E6C40 != -1)
    swift_once();
  sub_23AFEA2F8((uint64_t)nullsub_1, 0);
  if (qword_2542E7160 != -1)
    swift_once();
  sub_23AFEA2F8((uint64_t)nullsub_1, 0);
  if (qword_2542E5068 != -1)
    swift_once();
  sub_23AFEA2F8((uint64_t)nullsub_1, 0);
  LOBYTE(v147) = v186 != 0;
  v167 = v175;
  sub_23AFC09DC(v175);

  return v147 & 1;
}

uint64_t sub_23AE75608(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t (*)(), uint64_t);
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  result = *(_QWORD *)(a1 + 56);
  v10 = result;
  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = *(void (**)(uint64_t (*)(), uint64_t))(*(_QWORD *)a2 + 2344);
    v5 = (__int128 *)(result + 32);
    swift_bridgeObjectRetain();
    do
    {
      v6 = swift_allocObject();
      v7 = *v5++;
      *(_OWORD *)(v6 + 16) = v7;
      v8 = swift_retain();
      v9 = (void *)MEMORY[0x23B8601A8](v8);
      v4(sub_23ADF35F8, v6);
      objc_autoreleasePoolPop(v9);
      swift_release();
      --v3;
    }
    while (v3);
    return sub_23AAB7500((uint64_t)&v10);
  }
  return result;
}

uint64_t sub_23AE756D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t (*)(), uint64_t);
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  result = *(_QWORD *)(a1 + 56);
  v10 = result;
  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = *(void (**)(uint64_t (*)(), uint64_t))(*(_QWORD *)a2 + 2344);
    v5 = (__int128 *)(result + 32);
    swift_bridgeObjectRetain();
    do
    {
      v6 = swift_allocObject();
      v7 = *v5++;
      *(_OWORD *)(v6 + 16) = v7;
      v8 = swift_retain();
      v9 = (void *)MEMORY[0x23B8601A8](v8);
      v4(sub_23ADF35F8, v6);
      objc_autoreleasePoolPop(v9);
      swift_release();
      --v3;
    }
    while (v3);
    return sub_23AAB7500((uint64_t)&v10);
  }
  return result;
}

uint64_t sub_23AE757A0()
{
  __int128 *v0;
  __n128 v1;
  __n128 v2;
  __n128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  unsigned __int8 v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[6];
  uint64_t v24;
  __n128 v25;
  __n128 v26;
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __n128 v37[5];
  __int128 v38;
  __n128 v39;
  _BYTE v40[16];
  _BYTE v41[16];
  __n128 v42;
  char v43;
  __n128 v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  char v48;
  __n128 v49;
  char v50;

  v1 = (__n128)v0[13];
  v37[3] = (__n128)v0[12];
  v37[4] = v1;
  v38 = v0[14];
  v2 = (__n128)v0[9];
  v36 = v0[8];
  v37[0] = v2;
  v3 = (__n128)v0[11];
  v37[1] = (__n128)v0[10];
  v37[2] = v3;
  v4 = v0[5];
  v32 = v0[4];
  v33 = v4;
  v5 = v0[7];
  v34 = v0[6];
  v35 = v5;
  v6 = v0[1];
  v28 = *v0;
  v29 = v6;
  v7 = v0[3];
  v30 = v0[2];
  v31 = v7;
  if ((BYTE8(v38) & 4) != 0)
    return 2;
  v8 = v0[26];
  v23[4] = v0[25];
  v23[5] = v8;
  v24 = *((_QWORD *)v0 + 54);
  v9 = v0[22];
  v23[0] = v0[21];
  v23[1] = v9;
  v10 = v0[24];
  v23[2] = v0[23];
  v23[3] = v10;
  v11 = v0[18];
  v19 = v0[17];
  v20 = v11;
  v12 = v0[20];
  v21 = v0[19];
  v22 = v12;
  v13 = v0[16];
  v17 = v0[15];
  v18 = v13;
  if ((v24 & 4) != 0)
    return 2;
  v14 = *((_BYTE *)v0 + 440);
  v15 = v14 - 1;
  if (v14 == 1)
    return 2;
  if ((BYTE8(v29) & 8) == 0 || !BYTE9(v36))
    goto LABEL_13;
  sub_23ADF1BC0(v37, &v39);
  sub_23ADF1BC0(&v39, &v44);
  if (v45)
  {
    if ((v29 & 0x10) != 0)
      goto LABEL_13;
    sub_23ADF1BC0(&v39, &v42);
    if (v43 == 2)
      goto LABEL_13;
    return 0;
  }
  if ((v44.n128_u8[2] & 4) == 0 && (v29 & 0x10) == 0)
    return 0;
LABEL_13:
  if (v15 < 4u)
    return 2;
  result = 2;
  if ((v18 & 8) != 0 && LOBYTE(v23[0]))
  {
    sub_23AA724E8((uint64_t)&v28, (uint64_t)v40, (uint64_t *)&unk_2542E7420);
    sub_23AA724E8((uint64_t)v40, (uint64_t)v41, (uint64_t *)&unk_2542E7420);
    if (v41[8] != 255
      && (sub_23AA724E8((uint64_t)&v17, (uint64_t)v27, &qword_2542E7550),
          sub_23AA724E8((uint64_t)v27, (uint64_t)&v46, &qword_2542E7550),
          v46)
      || (sub_23ADF1BC0((__n128 *)((char *)v23 + 8), &v25), sub_23ADF1BC0(&v25, &v49), v50)
      || v49.n128_u64[0] != 2)
    {
      sub_23ADF1BC0((__n128 *)((char *)v23 + 8), &v26);
      sub_23ADF1BC0(&v26, &v47);
      if (v48 || (v47.n128_u8[2] & 4) == 0)
        return 1;
    }
    return 2;
  }
  return result;
}

uint64_t sub_23AE759B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  id v13;

  result = sub_23AE7642C(0, a1);
  if (!v2)
  {
    v6 = result;
    v7 = sub_23AE7616C(5, a1);
    v8 = sub_23AE7616C(1, a1);
    v9 = sub_23AE7616C(2, a1);
    v10 = sub_23AE7616C(3, a1);
    v13 = (id)sub_23AE75E9C(4, a1);
    v11 = sub_23AE7642C(6, a1);
    result = sub_23AE75BCC(7, a1);
    if (v11 <= 0xBu && ((1 << v11) & 0x860) != 0)
      v9 = 0x7FFFFFFFFFFFFFFFLL;
    *(_BYTE *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v8;
    *(_QWORD *)(a2 + 24) = v9;
    *(_QWORD *)(a2 + 32) = v10;
    *(_QWORD *)(a2 + 40) = v13;
    *(_BYTE *)(a2 + 48) = v11;
    *(_QWORD *)(a2 + 56) = result;
    *(_QWORD *)(a2 + 64) = v12;
  }
  return result;
}

uint64_t sub_23AE75BCC(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  _OWORD v10[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5A38(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v10);
  else
    memset(v10, 0, sizeof(v10));
  sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7460);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_23AB23A94();
    swift_allocError();
    sub_23AA8EFC8((uint64_t)v10, v7, qword_2542E5640);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    __asm { BR              X10 }
  }
  sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
  return v8;
}

uint64_t sub_23AE75E9C(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  _OWORD v10[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5A38(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v10);
  else
    memset(v10, 0, sizeof(v10));
  sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7700);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_23AB23A94();
    swift_allocError();
    sub_23AA8EFC8((uint64_t)v10, v7, qword_2542E5640);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    __asm { BR              X10 }
  }
  sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
  return v8;
}

uint64_t sub_23AE7616C(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  _OWORD v10[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5A38(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v10);
  else
    memset(v10, 0, sizeof(v10));
  sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_23AB23A94();
    swift_allocError();
    sub_23AA8EFC8((uint64_t)v10, v7, qword_2542E5640);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    __asm { BR              X10 }
  }
  sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
  return v8;
}

uint64_t sub_23AE7642C(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  unsigned __int8 v8;
  _QWORD v9[4];
  _OWORD v10[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5A38(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v10);
  else
    memset(v10, 0, sizeof(v10));
  sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_23AB23A94();
    swift_allocError();
    sub_23AA8EFC8((uint64_t)v10, v7, qword_2542E5640);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    __asm { BR              X10 }
  }
  sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
  return v8;
}

uint64_t sub_23AE766E8(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  _OWORD v10[2];

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_23ACD5A98(a1), (v4 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v3, (uint64_t)v10);
  else
    memset(v10, 0, sizeof(v10));
  sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4680);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
    return v8;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v7 = v6;
    sub_23AA8EFC8((uint64_t)v10, v6, qword_2542E5640);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 32) = 0xD00000000000002DLL;
    *(_QWORD *)(v7 + 40) = 0x800000023B205AD0;
    *(_BYTE *)(v7 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
  }
}

uint64_t sub_23AE76908(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  _OWORD v15[2];

  if (*(_QWORD *)(a2 + 16) && (v8 = sub_23ACD5A98(a1), (v9 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v8, (uint64_t)v15);
  else
    memset(v15, 0, sizeof(v15));
  sub_23AA8EFC8((uint64_t)v15, (uint64_t)v14, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v15, qword_2542E5640);
    return v13;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v12 = v11;
    sub_23AA8EFC8((uint64_t)v15, v11, qword_2542E5640);
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v15, (uint64_t)v14, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 32) = a4;
    *(_QWORD *)(v12 + 40) = a5;
    *(_BYTE *)(v12 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v15, qword_2542E5640);
  }
}

uint64_t sub_23AE76B18(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205B90;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE76CE0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000027;
    *(_QWORD *)(v8 + 40) = 0x800000023B205AA0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE76EA8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23AAA15E8(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD824BC(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205CD0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE77070(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _OWORD v14[2];

  if (*(_QWORD *)(a2 + 16) && (v7 = a3(a1), (v8 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v7, (uint64_t)v14);
  else
    memset(v14, 0, sizeof(v14));
  sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4680);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
    return v12;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v11 = v10;
    sub_23AA8EFC8((uint64_t)v14, v10, qword_2542E5640);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    a4(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 32) = 0xD00000000000002DLL;
    *(_QWORD *)(v11 + 40) = 0x800000023B205AD0;
    *(_BYTE *)(v11 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
  }
}

uint64_t sub_23AE77248(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000027;
    *(_QWORD *)(v8 + 40) = 0x800000023B205AA0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE77410(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205B00;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE775D8(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74F0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000024;
    *(_QWORD *)(v8 + 40) = 0x800000023B2060B0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE777B0(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000020;
    *(_QWORD *)(v8 + 40) = 0x800000023B2060E0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE77978(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000024;
    *(_QWORD *)(v8 + 40) = 0x800000023B205BE0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE77B40(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000002CLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205C10;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE77D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD v22[2];

  v3 = a1;
  if (*(_QWORD *)(a2 + 16) && (v6 = sub_23ACD5F8C(a1), (v7 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)v22);
  else
    memset(v22, 0, sizeof(v22));
  sub_23AA8EFC8((uint64_t)v22, (uint64_t)&v20, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    result = sub_23AA8A05C((uint64_t)v22, qword_2542E5640);
    v9 = v17;
    v10 = v18;
    v11 = v19;
    v12 = v16[1];
    *(_OWORD *)a3 = v16[0];
    *(_OWORD *)(a3 + 16) = v12;
    *(_QWORD *)(a3 + 32) = v9;
    *(_BYTE *)(a3 + 40) = v10 & 1;
    *(_QWORD *)(a3 + 48) = v11;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v14 = v13;
    sub_23AA8EFC8((uint64_t)v22, v13, qword_2542E5640);
    *(_QWORD *)&v16[0] = 0;
    *((_QWORD *)&v16[0] + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v20 = 0xD000000000000026;
    v21 = 0x800000023B206170;
    sub_23AA8EFC8((uint64_t)v22, (uint64_t)v16, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v3);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v15 = v21;
    *(_QWORD *)(v14 + 32) = v20;
    *(_QWORD *)(v14 + 40) = v15;
    *(_BYTE *)(v14 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v22, qword_2542E5640);
  }
  return result;
}

uint64_t sub_23AE77EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD v20[2];

  v3 = a1;
  if (*(_QWORD *)(a2 + 16) && (v6 = sub_23ACD5F8C(a1), (v7 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)v20);
  else
    memset(v20, 0, sizeof(v20));
  sub_23AA8EFC8((uint64_t)v20, (uint64_t)&v18, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61D8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    result = sub_23AA8A05C((uint64_t)v20, qword_2542E5640);
    v9 = v16;
    v10 = v17;
    v11 = v15[1];
    *(_OWORD *)a3 = v15[0];
    *(_OWORD *)(a3 + 16) = v11;
    *(_QWORD *)(a3 + 32) = v9;
    *(_BYTE *)(a3 + 40) = v10;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v13 = v12;
    sub_23AA8EFC8((uint64_t)v20, v12, qword_2542E5640);
    *(_QWORD *)&v15[0] = 0;
    *((_QWORD *)&v15[0] + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v18 = 0xD000000000000012;
    v19 = 0x800000023B205D80;
    sub_23B1C7568();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AA8EFC8((uint64_t)v20, (uint64_t)v15, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v3);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v14 = v19;
    *(_QWORD *)(v13 + 32) = v18;
    *(_QWORD *)(v13 + 40) = v14;
    *(_BYTE *)(v13 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v20, qword_2542E5640);
  }
  return result;
}

uint64_t sub_23AE78118(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001BLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B206110;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE782E0(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001DLL;
    *(_QWORD *)(v8 + 40) = 0x800000023B205E50;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE784A8(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  _OWORD v11[2];

  v2 = a1;
  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5F8C(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E61A0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23B1C7568();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B06D430(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000012;
    *(_QWORD *)(v8 + 40) = 0x800000023B205D80;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE786BC(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  _QWORD v11[4];
  _OWORD v12[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5EFC(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v12);
  else
    memset(v12, 0, sizeof(v12));
  sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
    return v10 & 1;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v12, v7, qword_2542E5640);
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v9 = a1 >> 2;
    if (v9 != 63 && v9 != 55)
      sub_23B06D430(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000023;
    *(_QWORD *)(v8 + 40) = 0x800000023B2061A0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
  }
}

uint64_t sub_23AE788C0(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned __int8 v10;
  _QWORD v11[4];
  _OWORD v12[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5EFC(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v12);
  else
    memset(v12, 0, sizeof(v12));
  sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
    return v10;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v12, v7, qword_2542E5640);
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v9 = a1 >> 2;
    if (v9 != 63 && v9 != 55)
      sub_23B06D430(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD00000000000001ELL;
    *(_QWORD *)(v8 + 40) = 0x800000023B2061D0;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
  }
}

uint64_t sub_23AE78AC0(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _QWORD v11[4];
  _OWORD v12[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = sub_23ACD5EFC(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v12);
  else
    memset(v12, 0, sizeof(v12));
  sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3628);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
    return v10;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v12, v7, qword_2542E5640);
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23B1C7568();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AA8EFC8((uint64_t)v12, (uint64_t)v11, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v9 = a1 >> 2;
    if (v9 != 63 && v9 != 55)
      sub_23B06D430(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000012;
    *(_QWORD *)(v8 + 40) = 0x800000023B205D80;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
  }
}

uint64_t sub_23AE78D10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  _OWORD v10[2];

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_23ACD607C(a1), (v4 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v3, (uint64_t)v10);
  else
    memset(v10, 0, sizeof(v10));
  sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7550);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
    return v8;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v7 = v6;
    sub_23AA8EFC8((uint64_t)v10, v6, qword_2542E5640);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 32) = 0xD00000000000003DLL;
    *(_QWORD *)(v7 + 40) = 0x800000023B205EA0;
    *(_BYTE *)(v7 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
  }
}

uint64_t sub_23AE78F24(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD v10[4];
  _OWORD v11[2];

  if (*(_QWORD *)(a2 + 16) && (v4 = a3(a1), (v5 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)v11);
  else
    memset(v11, 0, sizeof(v11));
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE260);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
    return v9;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v8 = v7;
    sub_23AA8EFC8((uint64_t)v11, v7, qword_2542E5640);
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v11, (uint64_t)v10, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = 0xD000000000000028;
    *(_QWORD *)(v8 + 40) = 0x800000023B207080;
    *(_BYTE *)(v8 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  }
}

uint64_t sub_23AE79138(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  _OWORD v10[2];

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_23ACD607C(a1), (v4 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v3, (uint64_t)v10);
  else
    memset(v10, 0, sizeof(v10));
  sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7420);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
    return v8;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v7 = v6;
    sub_23AA8EFC8((uint64_t)v10, v6, qword_2542E5640);
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v9, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 32) = 0xD00000000000002ALL;
    *(_QWORD *)(v7 + 40) = 0x800000023B205F90;
    *(_BYTE *)(v7 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
  }
}

uint64_t sub_23AE79350(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4)
{
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v12[4];
  _OWORD v13[2];

  if (*(_QWORD *)(a2 + 16) && (v6 = a3(a1), (v7 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)v13);
  else
    memset(v13, 0, sizeof(v13));
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v12, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v13, qword_2542E5640);
    return v11 & 1;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v10 = v9;
    sub_23AA8EFC8((uint64_t)v13, v9, qword_2542E5640);
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v13, (uint64_t)v12, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 32) = 0xD000000000000025;
    *(_QWORD *)(v10 + 40) = 0x800000023B2070B0;
    *(_BYTE *)(v10 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v13, qword_2542E5640);
  }
}

uint64_t sub_23AE7956C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _OWORD v14[2];

  if (*(_QWORD *)(a2 + 16) && (v7 = a3(a1), (v8 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v7, (uint64_t)v14);
  else
    memset(v14, 0, sizeof(v14));
  sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  type metadata accessor for NSFileProviderItemIdentifier(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
    return v12;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v11 = v10;
    sub_23AA8EFC8((uint64_t)v14, v10, qword_2542E5640);
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v14, (uint64_t)v13, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    a4(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 32) = 0xD000000000000033;
    *(_QWORD *)(v11 + 40) = 0x800000023B206130;
    *(_BYTE *)(v11 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
  }
}

uint64_t sub_23AE79740@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD v12[4];
  _OWORD v13[2];

  if (*(_QWORD *)(a2 + 16) && (v6 = sub_23AAAFD94(a1), (v7 & 1) != 0))
    sub_23AAA15AC(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)v13);
  else
    memset(v13, 0, sizeof(v13));
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v12, qword_2542E5640);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  if ((swift_dynamicCast() & 1) != 0)
  {
    result = sub_23AA8A05C((uint64_t)v13, qword_2542E5640);
    *a3 = v11;
  }
  else
  {
    sub_23AB23A94();
    swift_allocError();
    v10 = v9;
    sub_23AA8EFC8((uint64_t)v13, v9, qword_2542E5640);
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AA8EFC8((uint64_t)v13, (uint64_t)v12, qword_2542E5640);
    sub_23B1C6434();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF13684(a1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 32) = 0xD000000000000028;
    *(_QWORD *)(v10 + 40) = 0x800000023B207770;
    *(_BYTE *)(v10 + 48) = 4;
    swift_willThrow();
    return sub_23AA8A05C((uint64_t)v13, qword_2542E5640);
  }
  return result;
}

uint64_t sub_23AE7990C@<X0>(id a1@<X1>, uint64_t a2@<X0>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _OWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  _OWORD v32[4];
  uint64_t v33;
  _QWORD *v34;

  objc_msgSend(a1, sel_columns);
  sub_23AEB4138();
  v7 = (_QWORD *)sub_23B1C6230();
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
  {
LABEL_22:
    sub_23AE759B4((uint64_t)v7, (uint64_t)v32);
    result = swift_bridgeObjectRelease();
    if (!v4)
    {
      v25 = v32[3];
      *(_OWORD *)(a4 + 32) = v32[2];
      *(_OWORD *)(a4 + 48) = v25;
      *(_QWORD *)(a4 + 64) = v33;
      v26 = v32[1];
      *(_OWORD *)a4 = v32[0];
      *(_OWORD *)(a4 + 16) = v26;
    }
    return result;
  }
  v27 = a4;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (!__OFADD__(a3, (_DWORD)v9))
  {
    v10 = *(unsigned __int8 *)(a2 + v9 + 32);
    sub_23AFDEB5C(*(_BYTE *)(a2 + v9 + 32));
    if (v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (!v30)
    {
      sub_23AA8A05C((uint64_t)&v29, qword_2542E5640);
      goto LABEL_19;
    }
    sub_23AAA159C(&v29, v31);
    sub_23AAA15AC((uint64_t)v31, (uint64_t)&v29);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = v7;
    v13 = sub_23ACD5A38(v10);
    v14 = v7[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      goto LABEL_28;
    v17 = v12;
    if (v7[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v7 = v34;
        if ((v12 & 1) == 0)
          goto LABEL_16;
      }
      else
      {
        sub_23B186818();
        v7 = v34;
        if ((v17 & 1) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_23AD0FEA8(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_23ACD5A38(v10);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_30;
      v13 = v18;
      v7 = v34;
      if ((v17 & 1) == 0)
      {
LABEL_16:
        v7[(v13 >> 6) + 8] |= 1 << v13;
        *(_BYTE *)(v7[6] + v13) = v10;
        sub_23AAA159C(&v29, (_OWORD *)(v7[7] + 32 * v13));
        v21 = v7[2];
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
          goto LABEL_29;
        v7[2] = v23;
        goto LABEL_18;
      }
    }
    v20 = (_OWORD *)(v7[7] + 32 * v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    sub_23AAA159C(&v29, v20);
LABEL_18:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
LABEL_19:
    if (v9 == 0x7FFFFFFF)
      goto LABEL_27;
    if (v8 == ++v9)
    {
      swift_bridgeObjectRelease();
      a4 = v27;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

char **sub_23AE79BC0(uint64_t a1, id a2, int a3)
{
  char **v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  int v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _OWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v36;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];
  _QWORD *v41;

  v5 = v4;
  objc_msgSend(a2, sel_columns);
  sub_23AEB12C4();
  v7 = (_QWORD *)sub_23B1C6230();
  v36 = *(_QWORD *)(a1 + 16);
  if (v36)
  {
    swift_bridgeObjectRetain();
    v8 = 0;
    v3 = &selRef_defaultManager;
    v9 = a2;
    v34 = a1;
    while (1)
    {
      v10 = (a3 + v8);
      if (__OFADD__(a3, (_DWORD)v8))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        sub_23B1C7418();
        __break(1u);
LABEL_40:
        sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
      }
      v11 = *(unsigned __int8 *)(a1 + v8 + 32);
      if (!*(_BYTE *)(a1 + v8 + 32))
        break;
      if (v11 == 1)
      {
        *((_QWORD *)&v39 + 1) = &type metadata for JobWaitCondition;
        v12 = objc_msgSend(v9, sel_longAtIndex_, (a3 + v8));
LABEL_8:
        *(_QWORD *)&v38 = v12;
        goto LABEL_9;
      }
      if ((objc_msgSend(v9, v3[398], (a3 + v8)) & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
        if (objc_msgSend(v9, v3[398], v10))
          goto LABEL_40;
        v26 = v5;
        if (swift_dynamicCastMetatype())
          sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
        sub_23B1C5780();
        swift_allocObject();
        v3 = (char **)sub_23B1C5774();
        v27 = objc_msgSend(v9, sel_dataAtIndex_, v10);
        v28 = sub_23B1C5AD4();
        v30 = v29;

        sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
        sub_23B1C5768();
        v5 = v26;
        if (v26)
        {
          sub_23AAAE53C(v28, v30);
          swift_bridgeObjectRelease();
          swift_release();
LABEL_31:
          swift_bridgeObjectRelease();
          return v3;
        }
        sub_23AAAE53C(v28, v30);
        swift_release();
        v31 = v41;
        *((_QWORD *)&v39 + 1) = type metadata accessor for Continuation();
        *(_QWORD *)&v38 = v31;
        a1 = v34;
LABEL_9:
        sub_23AAA159C(&v38, v40);
        sub_23AAA15AC((uint64_t)v40, (uint64_t)&v38);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v41 = v7;
        v15 = sub_23ACD5A98(v11);
        v16 = v7[2];
        v17 = (v14 & 1) == 0;
        v18 = v16 + v17;
        if (__OFADD__(v16, v17))
          goto LABEL_37;
        v19 = v14;
        if (v7[3] >= v18)
        {
          v3 = &selRef_defaultManager;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23B18738C();
            goto LABEL_13;
          }
        }
        else
        {
          sub_23AD10FD0(v18, isUniquelyReferenced_nonNull_native);
          v20 = sub_23ACD5A98(v11);
          if ((v19 & 1) != (v21 & 1))
            goto LABEL_39;
          v15 = v20;
LABEL_13:
          v3 = &selRef_defaultManager;
        }
        v7 = v41;
        if ((v19 & 1) != 0)
        {
          v22 = (_OWORD *)(v41[7] + 32 * v15);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
          sub_23AAA159C(&v38, v22);
        }
        else
        {
          v41[(v15 >> 6) + 8] |= 1 << v15;
          *(_BYTE *)(v7[6] + v15) = v11;
          sub_23AAA159C(&v38, (_OWORD *)(v7[7] + 32 * v15));
          v23 = v7[2];
          v24 = __OFADD__(v23, 1);
          v25 = v23 + 1;
          if (v24)
            goto LABEL_38;
          v7[2] = v25;
        }
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
        v9 = a2;
        goto LABEL_20;
      }
      v38 = 0u;
      v39 = 0u;
      sub_23AA8A05C((uint64_t)&v38, qword_2542E5640);
LABEL_20:
      if (v8 == 0x7FFFFFFF)
        goto LABEL_36;
      if (v36 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    v12 = objc_msgSend(v9, sel_longAtIndex_, (a3 + v8));
    *((_QWORD *)&v39 + 1) = MEMORY[0x24BEE1768];
    goto LABEL_8;
  }
LABEL_30:
  v32 = sub_23AE29C98((uint64_t)v7);
  if (v5)
    goto LABEL_31;
  v3 = (char **)v32;
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_23AE7A008(uint64_t a1, id a2, int a3)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v10;
  id v11;
  char v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _OWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  unint64_t result;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  _QWORD *v34;

  v4 = v3;
  objc_msgSend(a2, sel_columns);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6178);
  sub_23AAB5A28(&qword_2569E6180, &qword_2569E6178, (uint64_t)&unk_23B1E36B4);
  v8 = (_QWORD *)sub_23B1C6230();
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_30:
    v27 = sub_23AE87464((uint64_t)v8);
    if (v4)
    {
LABEL_33:
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = v27;
      swift_bridgeObjectRelease();
    }
    return v4;
  }
  swift_bridgeObjectRetain();
  v4 = 0;
  v30 = a1;
  while (!__OFADD__(a3, (_DWORD)v4))
  {
    v10 = *(unsigned __int8 *)(a1 + v4 + 32);
    if (v10 >> 2 == 55)
    {
      *((_QWORD *)&v32 + 1) = &type metadata for JobCode;
      v12 = sub_23B06F1C0((uint64_t)objc_msgSend(a2, sel_longAtIndex_, (a3 + v4)));
      if (v12 == 70)
      {
LABEL_32:
        sub_23AB7B620();
        swift_allocError();
        *v28 = 0;
        swift_willThrow();
        __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v31);
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      LOBYTE(v31) = v12;
    }
    else if (v10 >> 2 == 63)
    {
      *((_QWORD *)&v32 + 1) = &type metadata for FileTreeSide;
      v11 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v4));
      if (v11)
      {
        if (v11 != (id)1)
          goto LABEL_32;
        LOBYTE(v31) = 1;
      }
      else
      {
        LOBYTE(v31) = 0;
      }
    }
    else
    {
      if (v10 != 64)
      {
        v31 = 0u;
        v32 = 0u;
        sub_23AA8A05C((uint64_t)&v31, qword_2542E5640);
        goto LABEL_27;
      }
      *((_QWORD *)&v32 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3628);
      *(_QWORD *)&v31 = a2;
      DWORD2(v31) = a3 + v4;
      v13 = a2;
    }
    sub_23AAA159C(&v31, v33);
    sub_23AAA15AC((uint64_t)v33, (uint64_t)&v31);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = v8;
    v16 = sub_23ACD5EFC(v10);
    v17 = v8[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      goto LABEL_37;
    v20 = v15;
    if (v8[3] >= v19)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v8 = v34;
        if ((v15 & 1) == 0)
          goto LABEL_24;
      }
      else
      {
        sub_23B188F90();
        v8 = v34;
        if ((v20 & 1) == 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_23AD146A4(v19, isUniquelyReferenced_nonNull_native);
      v21 = sub_23ACD5EFC(v10);
      if ((v20 & 1) != (v22 & 1))
        goto LABEL_39;
      v16 = v21;
      v8 = v34;
      if ((v20 & 1) == 0)
      {
LABEL_24:
        v8[(v16 >> 6) + 8] |= 1 << v16;
        *(_BYTE *)(v8[6] + v16) = v10;
        sub_23AAA159C(&v31, (_OWORD *)(v8[7] + 32 * v16));
        v24 = v8[2];
        v25 = __OFADD__(v24, 1);
        v26 = v24 + 1;
        if (v25)
          goto LABEL_38;
        v8[2] = v26;
        goto LABEL_26;
      }
    }
    v23 = (_OWORD *)(v8[7] + 32 * v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    sub_23AAA159C(&v31, v23);
LABEL_26:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    a1 = v30;
LABEL_27:
    if (v4 == 0x7FFFFFFF)
      goto LABEL_36;
    if (v9 == ++v4)
    {
      swift_bridgeObjectRelease();
      v4 = v3;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AE7A38C(uint64_t a1, id a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  uint64_t v12;
  id v13;
  id v14;
  ValueMetadata *v15;
  id v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int v34;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];
  _QWORD *v40;

  v4 = v3;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v8 = (_QWORD *)sub_23B1C6230();
  v36 = *(_QWORD *)(a1 + 16);
  if (v36)
  {
    swift_bridgeObjectRetain();
    v9 = 0;
    v34 = a3;
    while (2)
    {
      if (__OFADD__(a3, (_DWORD)v9))
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        sub_23B1C7418();
        __break(1u);
LABEL_55:
        sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
      }
      v10 = *(unsigned __int8 *)(a1 + v9 + 32);
      switch(v10 >> 5)
      {
        case 0u:
          if (!*(_BYTE *)(a1 + v9 + 32))
            goto LABEL_18;
          if ((_DWORD)v10 == 1)
          {
            v11 = &type metadata for JobWaitCondition;
LABEL_20:
            *((_QWORD *)&v38 + 1) = v11;
            v16 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v9));
LABEL_25:
            *(_QWORD *)&v37 = v16;
          }
          else
          {
            if ((objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v9)) & 1) != 0)
            {
LABEL_22:
              v37 = 0u;
              v38 = 0u;
              sub_23AA8A05C((uint64_t)&v37, qword_2542E5640);
              goto LABEL_36;
            }
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
            if (objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v9)))
              goto LABEL_55;
            if (swift_dynamicCastMetatype())
              sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
            sub_23B1C5780();
            swift_allocObject();
            sub_23B1C5774();
            v28 = objc_msgSend(a2, sel_dataAtIndex_, (a3 + v9));
            isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
            v30 = v29;

            sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
            sub_23B1C5768();
            if (v3)
            {
              sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v30);
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              return isUniquelyReferenced_nonNull_native;
            }
            sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v30);
            swift_release();
            v31 = v40;
            *((_QWORD *)&v38 + 1) = type metadata accessor for Continuation();
            *(_QWORD *)&v37 = v31;
            a3 = v34;
          }
LABEL_26:
          sub_23AAA159C(&v37, v39);
          sub_23AAA15AC((uint64_t)v39, (uint64_t)&v37);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v40 = v8;
          v18 = sub_23ACD5F8C(v10);
          v19 = v8[2];
          v20 = (v17 & 1) == 0;
          v21 = v19 + v20;
          if (__OFADD__(v19, v20))
            goto LABEL_52;
          v22 = v17;
          if (v8[3] >= v21)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v8 = v40;
              if ((v17 & 1) != 0)
                goto LABEL_34;
            }
            else
            {
              sub_23B188F9C();
              v8 = v40;
              if ((v22 & 1) != 0)
                goto LABEL_34;
            }
          }
          else
          {
            sub_23AD14BAC(v21, isUniquelyReferenced_nonNull_native);
            v23 = sub_23ACD5F8C(v10);
            if ((v22 & 1) != (v24 & 1))
              goto LABEL_54;
            v18 = v23;
            v8 = v40;
            if ((v22 & 1) != 0)
            {
LABEL_34:
              isUniquelyReferenced_nonNull_native = v8[7] + 32 * v18;
              __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
              sub_23AAA159C(&v37, (_OWORD *)isUniquelyReferenced_nonNull_native);
              goto LABEL_35;
            }
          }
          v8[(v18 >> 6) + 8] |= 1 << v18;
          *(_BYTE *)(v8[6] + v18) = v10;
          sub_23AAA159C(&v37, (_OWORD *)(v8[7] + 32 * v18));
          v25 = v8[2];
          v26 = __OFADD__(v25, 1);
          v27 = v25 + 1;
          if (v26)
            goto LABEL_53;
          v8[2] = v27;
LABEL_35:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
LABEL_36:
          if (v9 == 0x7FFFFFFF)
            goto LABEL_51;
          if (v36 != ++v9)
            continue;
          swift_bridgeObjectRelease();
          v4 = v3;
          break;
        case 1u:
          if ((v10 & 1) == 0)
          {
            v15 = &type metadata for JobSchedulingPriority;
            goto LABEL_24;
          }
          v11 = &type metadata for NSecTimestamp;
          goto LABEL_20;
        case 2u:
          if ((_DWORD)v10 == 64)
          {
LABEL_18:
            v16 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v9));
            *((_QWORD *)&v38 + 1) = MEMORY[0x24BEE1768];
            goto LABEL_25;
          }
          if ((_DWORD)v10 == 65)
          {
            v15 = &type metadata for JobReason;
LABEL_24:
            *((_QWORD *)&v38 + 1) = v15;
            v16 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v9));
            goto LABEL_25;
          }
          if ((_DWORD)v10 != 66)
            goto LABEL_22;
LABEL_13:
          type metadata accessor for NSFileProviderItemIdentifier(0);
          *((_QWORD *)&v38 + 1) = v12;
          v13 = a2;
          v14 = objc_msgSend(v13, sel_stringAtIndex_, (a3 + v9));
          if (!v14)
          {
            sub_23B1C63E0();
            v14 = (id)sub_23B1C63BC();
            a3 = v34;
            swift_bridgeObjectRelease();
          }

          *(_QWORD *)&v37 = v14;
          goto LABEL_26;
        case 3u:
          if ((_DWORD)v10 == 96)
            goto LABEL_13;
          goto LABEL_22;
        default:
          goto LABEL_22;
      }
      break;
    }
  }
  v32 = sub_23AE17708((uint64_t)v8);
  if (!v4)
    isUniquelyReferenced_nonNull_native = v32;
  swift_bridgeObjectRelease();
  return isUniquelyReferenced_nonNull_native;
}

uint64_t sub_23AE7A8E8(uint64_t a1, id a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  ValueMetadata *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v50;
  int v51;
  _OWORD v53[2];
  uint64_t v54;
  char v55;
  __int128 v56;
  __int128 v57;
  _OWORD v58[2];
  uint64_t v59;

  v4 = v3;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v8 = (_QWORD *)sub_23B1C6230();
  v59 = *(_QWORD *)(a1 + 16);
  if (!v59)
    goto LABEL_57;
  swift_bridgeObjectRetain();
  v9 = 0;
  v51 = a3;
  while (2)
  {
    if (__OFADD__(a3, (_DWORD)v9))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      sub_23B1C7418();
      __break(1u);
LABEL_67:
      sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
    }
    v10 = *(unsigned __int8 *)(a1 + v9 + 32);
    switch(v10 >> 5)
    {
      case 0u:
        if (!*(_BYTE *)(a1 + v9 + 32))
        {
LABEL_13:
          v15 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v9), v50);
          v16 = MEMORY[0x24BEE1768];
LABEL_33:
          *((_QWORD *)&v57 + 1) = v16;
LABEL_36:
          *(_QWORD *)&v56 = v15;
          goto LABEL_37;
        }
        if ((_DWORD)v10 == 1)
        {
          v11 = &type metadata for JobWaitCondition;
LABEL_24:
          *((_QWORD *)&v57 + 1) = v11;
          v15 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v9), v50);
          goto LABEL_36;
        }
        if ((objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v9)) & 1) != 0)
        {
LABEL_28:
          v56 = 0u;
          v57 = 0u;
          sub_23AA8A05C((uint64_t)&v56, qword_2542E5640);
          goto LABEL_47;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
        if (objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v9)))
          goto LABEL_67;
        if (swift_dynamicCastMetatype())
LABEL_68:
          sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
        sub_23B1C5780();
        swift_allocObject();
        sub_23B1C5774();
        v45 = objc_msgSend(a2, sel_dataAtIndex_, (a3 + v9));
        isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
        v20 = v46;

        sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
        sub_23B1C5768();
        if (v3)
        {
LABEL_61:
          sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v20);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return isUniquelyReferenced_nonNull_native;
        }
        sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v20);
        swift_release();
        v47 = *(_QWORD *)&v53[0];
        *((_QWORD *)&v57 + 1) = type metadata accessor for Continuation();
        *(_QWORD *)&v56 = v47;
LABEL_54:
        a3 = v51;
LABEL_37:
        sub_23AAA159C(&v56, v58);
        sub_23AAA15AC((uint64_t)v58, (uint64_t)v53);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v56 = v8;
        v35 = sub_23ACD5F8C(v10);
        v36 = v8[2];
        v37 = (v34 & 1) == 0;
        v38 = v36 + v37;
        if (__OFADD__(v36, v37))
          goto LABEL_64;
        v39 = v34;
        if (v8[3] >= v38)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v8 = (_QWORD *)v56;
            if ((v34 & 1) != 0)
              goto LABEL_45;
          }
          else
          {
            sub_23B188F9C();
            v8 = (_QWORD *)v56;
            if ((v39 & 1) != 0)
              goto LABEL_45;
          }
        }
        else
        {
          sub_23AD14BAC(v38, isUniquelyReferenced_nonNull_native);
          v40 = sub_23ACD5F8C(v10);
          if ((v39 & 1) != (v41 & 1))
            goto LABEL_66;
          v35 = v40;
          v8 = (_QWORD *)v56;
          if ((v39 & 1) != 0)
          {
LABEL_45:
            isUniquelyReferenced_nonNull_native = v8[7] + 32 * v35;
            __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
            sub_23AAA159C(v53, (_OWORD *)isUniquelyReferenced_nonNull_native);
            goto LABEL_46;
          }
        }
        v8[(v35 >> 6) + 8] |= 1 << v35;
        *(_BYTE *)(v8[6] + v35) = v10;
        sub_23AAA159C(v53, (_OWORD *)(v8[7] + 32 * v35));
        v42 = v8[2];
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (v43)
          goto LABEL_65;
        v8[2] = v44;
LABEL_46:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
LABEL_47:
        if (v9 == 0x7FFFFFFF)
          goto LABEL_63;
        if (v59 != ++v9)
          continue;
        swift_bridgeObjectRelease();
        v4 = v3;
LABEL_57:
        v48 = sub_23AE16E04((uint64_t)v8);
        if (!v4)
          isUniquelyReferenced_nonNull_native = v48;
        swift_bridgeObjectRelease();
        return isUniquelyReferenced_nonNull_native;
      case 1u:
        if ((v10 & 1) != 0)
        {
          v11 = &type metadata for NSecTimestamp;
          goto LABEL_24;
        }
        v26 = &type metadata for JobSchedulingPriority;
LABEL_35:
        *((_QWORD *)&v57 + 1) = v26;
        v15 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v9), v50);
        goto LABEL_36;
      case 2u:
        switch(*(_BYTE *)(a1 + v9 + 32))
        {
          case '@':
            goto LABEL_13;
          case 'A':
            v26 = &type metadata for JobReason;
            goto LABEL_35;
          case 'B':
            type metadata accessor for NSFileProviderItemIdentifier(0);
            *((_QWORD *)&v57 + 1) = v31;
            v32 = a2;
            v33 = objc_msgSend(v32, sel_stringAtIndex_, (a3 + v9));
            if (!v33)
            {
              sub_23B1C63E0();
              v33 = (id)sub_23B1C63BC();
              a3 = v51;
              swift_bridgeObjectRelease();
            }

            *(_QWORD *)&v56 = v33;
            goto LABEL_37;
          case 'C':
            v15 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v9));
            v16 = MEMORY[0x24BEE1E88];
            goto LABEL_33;
          default:
            goto LABEL_28;
        }
      case 3u:
        if ((_DWORD)v10 == 97)
        {
          *((_QWORD *)&v57 + 1) = &type metadata for Filename;
          v27 = objc_msgSend(a2, sel_stringAtIndex_, (a3 + v9));
          v28 = sub_23B1C63E0();
          v30 = v29;

          *(_QWORD *)&v56 = v28;
          *((_QWORD *)&v56 + 1) = v30;
          goto LABEL_37;
        }
        if ((_DWORD)v10 != 98 || (objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v9)) & 1) != 0)
          goto LABEL_28;
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61C8);
        if (objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v9)))
          goto LABEL_67;
        if (swift_dynamicCastMetatype())
          goto LABEL_68;
        sub_23B1C5780();
        swift_allocObject();
        sub_23B1C5774();
        v18 = objc_msgSend(a2, sel_dataAtIndex_, (a3 + v9));
        isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
        v20 = v19;

        sub_23AAB5A28(&qword_2569E61D0, &qword_2569E61C8, (uint64_t)&unk_23B1E6080);
        sub_23B1C5768();
        if (v3)
          goto LABEL_61;
        sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v20);
        swift_release();
        v21 = *(_QWORD *)&v53[0];
        v22 = BYTE8(v53[0]);
        v50 = v53[1];
        v23 = v54;
        v24 = v55;
        *((_QWORD *)&v57 + 1) = v17;
        v25 = swift_allocObject();
        *(_QWORD *)&v56 = v25;
        *(_QWORD *)(v25 + 16) = v21;
        *(_BYTE *)(v25 + 24) = v22;
        *(_OWORD *)(v25 + 32) = v50;
        *(_QWORD *)(v25 + 48) = v23;
        *(_BYTE *)(v25 + 56) = v24;
        goto LABEL_54;
      case 4u:
        if ((_DWORD)v10 != 129)
          goto LABEL_28;
        v12 = a2;
        if ((objc_msgSend(v12, sel_isNullAtIndex_, (a3 + v9)) & 1) == 0)
        {
          v13 = objc_msgSend(v12, sel_integerAtIndex_, (a3 + v9));
          if (v13)
          {
            v14 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v13);

            *((_QWORD *)&v57 + 1) = sub_23AA9F52C(0, (unint64_t *)&qword_2569E3140);
            *(_QWORD *)&v56 = v14;
            goto LABEL_37;
          }
        }

        goto LABEL_28;
      default:
        goto LABEL_28;
    }
  }
}

uint64_t sub_23AE7B08C(unint64_t a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  ValueMetadata *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  ValueMetadata *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  int v52;
  __int128 v53;
  __int128 v54;
  _OWORD v55[2];
  _QWORD *v56;

  v4 = v3;
  v52 = a3;
  v7 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5474();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a2;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v13 = (_QWORD *)sub_23B1C6230();
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v45 = v10;
    v46 = v9;
    swift_bridgeObjectRetain();
    v15 = 0;
    v50 = a1;
    while (1)
    {
      v16 = (v52 + v15);
      if (__OFADD__(v52, (_DWORD)v15))
        break;
      v17 = *(unsigned __int8 *)(a1 + v15 + 32);
      switch(v17 >> 5)
      {
        case 0u:
          if (!*(_BYTE *)(a1 + v15 + 32))
            goto LABEL_20;
          if ((_DWORD)v17 == 1)
          {
            v18 = &type metadata for JobWaitCondition;
LABEL_22:
            *((_QWORD *)&v54 + 1) = v18;
            v27 = objc_msgSend(v51, sel_longAtIndex_, v16);
LABEL_28:
            *(_QWORD *)&v53 = v27;
          }
          else
          {
            if ((objc_msgSend(v51, sel_isNullAtIndex_, v16) & 1) != 0)
            {
LABEL_25:
              v53 = 0u;
              v54 = 0u;
              sub_23AA8A05C((uint64_t)&v53, qword_2542E5640);
              goto LABEL_52;
            }
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
            if (objc_msgSend(v51, sel_isNullAtIndex_, v16))
              goto LABEL_66;
            v49 = v4;
            if (swift_dynamicCastMetatype())
              sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
            sub_23B1C5780();
            swift_allocObject();
            sub_23B1C5774();
            v35 = objc_msgSend(v51, sel_dataAtIndex_, v16);
            isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
            v37 = v36;

            sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
            v38 = v49;
            sub_23B1C5768();
            v4 = v38;
            if (v38)
            {
              sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v37);
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_56;
            }
            sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v37);
            swift_release();
            v25 = v56;
            v26 = type metadata accessor for Continuation();
LABEL_41:
            *((_QWORD *)&v54 + 1) = v26;
            *(_QWORD *)&v53 = v25;
          }
LABEL_29:
          sub_23AAA159C(&v53, v55);
          sub_23AAA15AC((uint64_t)v55, (uint64_t)&v53);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v56 = v13;
          a1 = sub_23ACD5F8C(v17);
          v29 = v13[2];
          v30 = (v28 & 1) == 0;
          v31 = v29 + v30;
          if (__OFADD__(v29, v30))
            goto LABEL_62;
          v32 = v28;
          if (v13[3] >= v31)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v13 = v56;
              if ((v28 & 1) != 0)
                goto LABEL_36;
            }
            else
            {
              sub_23B188F9C();
              v13 = v56;
              if ((v32 & 1) != 0)
                goto LABEL_36;
            }
          }
          else
          {
            sub_23AD14BAC(v31, isUniquelyReferenced_nonNull_native);
            v33 = sub_23ACD5F8C(v17);
            if ((v32 & 1) != (v34 & 1))
              goto LABEL_65;
            a1 = v33;
            v13 = v56;
            if ((v32 & 1) != 0)
            {
LABEL_36:
              isUniquelyReferenced_nonNull_native = v13[7] + 32 * a1;
              __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
              sub_23AAA159C(&v53, (_OWORD *)isUniquelyReferenced_nonNull_native);
              goto LABEL_51;
            }
          }
          v13[(a1 >> 6) + 8] |= 1 << a1;
          *(_BYTE *)(v13[6] + a1) = v17;
          sub_23AAA159C(&v53, (_OWORD *)(v13[7] + 32 * a1));
          v39 = v13[2];
          v40 = __OFADD__(v39, 1);
          v41 = v39 + 1;
          if (v40)
          {
            __break(1u);
LABEL_65:
            sub_23B1C7418();
            __break(1u);
LABEL_66:
            sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
          }
          v13[2] = v41;
LABEL_51:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
          a1 = v50;
LABEL_52:
          if (v15 == 0x7FFFFFFF)
            goto LABEL_61;
          if (v14 == ++v15)
          {
            swift_bridgeObjectRelease();
            goto LABEL_55;
          }
          break;
        case 1u:
          if ((v17 & 1) == 0)
          {
            v22 = &type metadata for JobSchedulingPriority;
            goto LABEL_27;
          }
          v18 = &type metadata for NSecTimestamp;
          goto LABEL_22;
        case 2u:
          if ((_DWORD)v17 == 64)
          {
LABEL_20:
            v27 = objc_msgSend(v51, sel_longAtIndex_, v16);
            *((_QWORD *)&v54 + 1) = MEMORY[0x24BEE1768];
            goto LABEL_28;
          }
          if ((_DWORD)v17 == 65)
          {
            v22 = &type metadata for JobReason;
LABEL_27:
            *((_QWORD *)&v54 + 1) = v22;
            v27 = objc_msgSend(v51, sel_unsignedLongAtIndex_, v16);
            goto LABEL_28;
          }
          if ((_DWORD)v17 != 66)
            goto LABEL_25;
          *((_QWORD *)&v54 + 1) = &type metadata for VFSItemID;
          a1 = (unint64_t)v51;
          v19 = (uint64_t)objc_msgSend((id)a1, sel_longAtIndex_, v16);
          if (v19 == 0x8000000000000000)
          {
            v21 = 2;
            v20 = 1;
          }
          else
          {
            v20 = v19;
            if (v19)
            {
              if (v19 < 0)
              {
                v20 = -v19;
                if ((unint64_t)-v19 >> 32)
                  goto LABEL_63;
                v21 = 0;
              }
              else
              {
                v21 = 1;
              }
            }
            else
            {
              v21 = 2;
            }
          }

          *(_QWORD *)&v53 = v20;
          BYTE8(v53) = v21;
          goto LABEL_29;
        case 4u:
          if ((_DWORD)v17 != 129)
            goto LABEL_25;
          v23 = v51;
          if ((objc_msgSend(v23, sel_isNullAtIndex_, v16) & 1) == 0)
          {
            v24 = objc_msgSend(v23, sel_integerAtIndex_, v16);
            if (v24)
            {
              v25 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v24);

              v26 = sub_23AA9F52C(0, (unint64_t *)&qword_2569E3140);
              goto LABEL_41;
            }
          }

          goto LABEL_25;
        default:
          goto LABEL_25;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    sub_23B1C53FC();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v44 = v47;
    isUniquelyReferenced_nonNull_native = v46;
    sub_23B1C5864();
    sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v44, isUniquelyReferenced_nonNull_native);
    swift_willThrow();

    __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v53);
    swift_bridgeObjectRelease();
LABEL_56:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_55:
    v42 = sub_23AE2D61C((uint64_t)v13);
    if (v4)
      goto LABEL_56;
    isUniquelyReferenced_nonNull_native = v42;
    swift_bridgeObjectRelease();
  }
  return isUniquelyReferenced_nonNull_native;
}

uint64_t sub_23AE7B760(unint64_t a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  ValueMetadata *v18;
  id v19;
  uint64_t v20;
  ValueMetadata *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  int v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[2];
  _QWORD *v57;

  v4 = v3;
  v53 = a3;
  v7 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5474();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a2;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v13 = (_QWORD *)sub_23B1C6230();
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v46 = v10;
    v47 = v9;
    swift_bridgeObjectRetain();
    v15 = 0;
    v51 = a1;
    while (1)
    {
      v16 = (v53 + v15);
      if (__OFADD__(v53, (_DWORD)v15))
        break;
      v17 = *(unsigned __int8 *)(a1 + v15 + 32);
      switch(v17 >> 5)
      {
        case 0u:
          if (!*(_BYTE *)(a1 + v15 + 32))
          {
LABEL_9:
            v19 = objc_msgSend(v52, sel_longAtIndex_, v16);
            v20 = MEMORY[0x24BEE1768];
LABEL_32:
            *((_QWORD *)&v55 + 1) = v20;
LABEL_35:
            *(_QWORD *)&v54 = v19;
            goto LABEL_36;
          }
          if ((_DWORD)v17 == 1)
          {
            v18 = &type metadata for JobWaitCondition;
LABEL_19:
            *((_QWORD *)&v55 + 1) = v18;
            v19 = objc_msgSend(v52, sel_longAtIndex_, v16);
            goto LABEL_35;
          }
          if ((objc_msgSend(v52, sel_isNullAtIndex_, v16) & 1) != 0)
          {
LABEL_27:
            v54 = 0u;
            v55 = 0u;
            sub_23AA8A05C((uint64_t)&v54, qword_2542E5640);
            goto LABEL_46;
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
          if (objc_msgSend(v52, sel_isNullAtIndex_, v16))
            goto LABEL_68;
          v50 = v4;
          if (swift_dynamicCastMetatype())
            sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
          sub_23B1C5780();
          swift_allocObject();
          sub_23B1C5774();
          v26 = objc_msgSend(v52, sel_dataAtIndex_, v16);
          isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
          v28 = v27;

          sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
          v29 = v50;
          sub_23B1C5768();
          v4 = v29;
          if (v29)
          {
            sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v28);
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_58;
          }
          sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v28);
          swift_release();
          v24 = v57;
          v25 = type metadata accessor for Continuation();
LABEL_25:
          *((_QWORD *)&v55 + 1) = v25;
          *(_QWORD *)&v54 = v24;
LABEL_36:
          sub_23AAA159C(&v54, v56);
          sub_23AAA15AC((uint64_t)v56, (uint64_t)&v54);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v57 = v13;
          a1 = sub_23ACD5F8C(v17);
          v34 = v13[2];
          v35 = (v33 & 1) == 0;
          v36 = v34 + v35;
          if (__OFADD__(v34, v35))
            goto LABEL_64;
          v37 = v33;
          if (v13[3] >= v36)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v13 = v57;
              if ((v33 & 1) != 0)
                goto LABEL_44;
            }
            else
            {
              sub_23B188F9C();
              v13 = v57;
              if ((v37 & 1) != 0)
                goto LABEL_44;
            }
          }
          else
          {
            sub_23AD14BAC(v36, isUniquelyReferenced_nonNull_native);
            v38 = sub_23ACD5F8C(v17);
            if ((v37 & 1) != (v39 & 1))
              goto LABEL_67;
            a1 = v38;
            v13 = v57;
            if ((v37 & 1) != 0)
            {
LABEL_44:
              isUniquelyReferenced_nonNull_native = v13[7] + 32 * a1;
              __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
              sub_23AAA159C(&v54, (_OWORD *)isUniquelyReferenced_nonNull_native);
              goto LABEL_45;
            }
          }
          v13[(a1 >> 6) + 8] |= 1 << a1;
          *(_BYTE *)(v13[6] + a1) = v17;
          sub_23AAA159C(&v54, (_OWORD *)(v13[7] + 32 * a1));
          v40 = v13[2];
          v41 = __OFADD__(v40, 1);
          v42 = v40 + 1;
          if (v41)
          {
            __break(1u);
LABEL_67:
            sub_23B1C7418();
            __break(1u);
LABEL_68:
            sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
          }
          v13[2] = v42;
LABEL_45:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
          a1 = v51;
LABEL_46:
          if (v15 == 0x7FFFFFFF)
            goto LABEL_63;
          if (v14 == ++v15)
          {
            swift_bridgeObjectRelease();
            goto LABEL_57;
          }
          break;
        case 1u:
          if ((v17 & 1) != 0)
          {
            v18 = &type metadata for NSecTimestamp;
            goto LABEL_19;
          }
          v21 = &type metadata for JobSchedulingPriority;
LABEL_34:
          *((_QWORD *)&v55 + 1) = v21;
          v19 = objc_msgSend(v52, sel_unsignedLongAtIndex_, v16);
          goto LABEL_35;
        case 2u:
          switch(*(_BYTE *)(a1 + v15 + 32))
          {
            case '@':
              goto LABEL_9;
            case 'A':
              v21 = &type metadata for JobReason;
              goto LABEL_34;
            case 'B':
              *((_QWORD *)&v55 + 1) = &type metadata for VFSItemID;
              a1 = (unint64_t)v52;
              v30 = (uint64_t)objc_msgSend((id)a1, sel_longAtIndex_, v16);
              if (v30 == 0x8000000000000000)
              {
                v32 = 2;
                v31 = 1;
              }
              else
              {
                v31 = v30;
                if (v30)
                {
                  if (v30 < 0)
                  {
                    v31 = -v30;
                    if ((unint64_t)-v30 >> 32)
                      goto LABEL_65;
                    v32 = 0;
                  }
                  else
                  {
                    v32 = 1;
                  }
                }
                else
                {
                  v32 = 2;
                }
              }

              *(_QWORD *)&v54 = v31;
              BYTE8(v54) = v32;
              break;
            case 'C':
              v19 = objc_msgSend(v52, sel_unsignedLongAtIndex_, v16);
              v20 = MEMORY[0x24BEE1E88];
              goto LABEL_32;
            default:
              goto LABEL_27;
          }
          goto LABEL_36;
        case 4u:
          if ((_DWORD)v17 == 128)
          {
            v18 = &type metadata for Fields;
            goto LABEL_19;
          }
          if ((_DWORD)v17 != 129)
            goto LABEL_27;
          v22 = v52;
          if ((objc_msgSend(v22, sel_isNullAtIndex_, v16) & 1) == 0)
          {
            v23 = objc_msgSend(v22, sel_integerAtIndex_, v16);
            if (v23)
            {
              v24 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v23);

              v25 = sub_23AA9F52C(0, (unint64_t *)&qword_2569E3140);
              goto LABEL_25;
            }
          }

          goto LABEL_27;
        default:
          goto LABEL_27;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    sub_23B1C53FC();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v45 = v48;
    isUniquelyReferenced_nonNull_native = v47;
    sub_23B1C5864();
    sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v45, isUniquelyReferenced_nonNull_native);
    swift_willThrow();

    __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v54);
    swift_bridgeObjectRelease();
LABEL_58:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_57:
    v43 = sub_23AE2D0E8((uint64_t)v13);
    if (v4)
      goto LABEL_58;
    isUniquelyReferenced_nonNull_native = v43;
    swift_bridgeObjectRelease();
  }
  return isUniquelyReferenced_nonNull_native;
}

uint64_t sub_23AE7BE84(unint64_t a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  ValueMetadata *v18;
  id v19;
  uint64_t v20;
  ValueMetadata *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  int v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[2];
  _QWORD *v57;

  v4 = v3;
  v53 = a3;
  v7 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5474();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a2;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v13 = (_QWORD *)sub_23B1C6230();
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v46 = v10;
    v47 = v9;
    swift_bridgeObjectRetain();
    v15 = 0;
    v51 = a1;
    while (1)
    {
      v16 = (v53 + v15);
      if (__OFADD__(v53, (_DWORD)v15))
        break;
      v17 = *(unsigned __int8 *)(a1 + v15 + 32);
      switch(v17 >> 5)
      {
        case 0u:
          if (!*(_BYTE *)(a1 + v15 + 32))
          {
LABEL_9:
            v19 = objc_msgSend(v52, sel_longAtIndex_, v16);
            v20 = MEMORY[0x24BEE1768];
LABEL_25:
            *((_QWORD *)&v55 + 1) = v20;
LABEL_28:
            *(_QWORD *)&v54 = v19;
            goto LABEL_29;
          }
          if ((_DWORD)v17 == 1)
          {
            v18 = &type metadata for JobWaitCondition;
LABEL_17:
            *((_QWORD *)&v55 + 1) = v18;
            v19 = objc_msgSend(v52, sel_longAtIndex_, v16);
            goto LABEL_28;
          }
          if ((objc_msgSend(v52, sel_isNullAtIndex_, v16) & 1) != 0)
          {
LABEL_20:
            v54 = 0u;
            v55 = 0u;
            sub_23AA8A05C((uint64_t)&v54, qword_2542E5640);
            goto LABEL_39;
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
          if (objc_msgSend(v52, sel_isNullAtIndex_, v16))
            goto LABEL_66;
          v50 = v4;
          if (swift_dynamicCastMetatype())
            sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
          sub_23B1C5780();
          swift_allocObject();
          sub_23B1C5774();
          v39 = objc_msgSend(v52, sel_dataAtIndex_, v16);
          isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
          v41 = v40;

          sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
          v42 = v50;
          sub_23B1C5768();
          v4 = v42;
          if (v42)
          {
            sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v41);
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_56;
          }
          sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v41);
          swift_release();
          v24 = v57;
          v25 = type metadata accessor for Continuation();
LABEL_46:
          *((_QWORD *)&v55 + 1) = v25;
          *(_QWORD *)&v54 = v24;
LABEL_29:
          sub_23AAA159C(&v54, v56);
          sub_23AAA15AC((uint64_t)v56, (uint64_t)&v54);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v57 = v13;
          a1 = sub_23ACD5F8C(v17);
          v30 = v13[2];
          v31 = (v29 & 1) == 0;
          v32 = v30 + v31;
          if (__OFADD__(v30, v31))
            goto LABEL_62;
          v33 = v29;
          if (v13[3] >= v32)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v13 = v57;
              if ((v29 & 1) != 0)
                goto LABEL_37;
            }
            else
            {
              sub_23B188F9C();
              v13 = v57;
              if ((v33 & 1) != 0)
                goto LABEL_37;
            }
          }
          else
          {
            sub_23AD14BAC(v32, isUniquelyReferenced_nonNull_native);
            v34 = sub_23ACD5F8C(v17);
            if ((v33 & 1) != (v35 & 1))
              goto LABEL_65;
            a1 = v34;
            v13 = v57;
            if ((v33 & 1) != 0)
            {
LABEL_37:
              isUniquelyReferenced_nonNull_native = v13[7] + 32 * a1;
              __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
              sub_23AAA159C(&v54, (_OWORD *)isUniquelyReferenced_nonNull_native);
              goto LABEL_38;
            }
          }
          v13[(a1 >> 6) + 8] |= 1 << a1;
          *(_BYTE *)(v13[6] + a1) = v17;
          sub_23AAA159C(&v54, (_OWORD *)(v13[7] + 32 * a1));
          v36 = v13[2];
          v37 = __OFADD__(v36, 1);
          v38 = v36 + 1;
          if (v37)
          {
            __break(1u);
LABEL_65:
            sub_23B1C7418();
            __break(1u);
LABEL_66:
            sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
          }
          v13[2] = v38;
LABEL_38:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
          a1 = v51;
LABEL_39:
          if (v15 == 0x7FFFFFFF)
            goto LABEL_61;
          if (v14 == ++v15)
          {
            swift_bridgeObjectRelease();
            goto LABEL_55;
          }
          break;
        case 1u:
          if ((v17 & 1) != 0)
          {
            v18 = &type metadata for NSecTimestamp;
            goto LABEL_17;
          }
          v21 = &type metadata for JobSchedulingPriority;
LABEL_27:
          *((_QWORD *)&v55 + 1) = v21;
          v19 = objc_msgSend(v52, sel_unsignedLongAtIndex_, v16);
          goto LABEL_28;
        case 2u:
          switch(*(_BYTE *)(a1 + v15 + 32))
          {
            case '@':
              goto LABEL_9;
            case 'A':
              v21 = &type metadata for JobReason;
              goto LABEL_27;
            case 'B':
              *((_QWORD *)&v55 + 1) = &type metadata for VFSItemID;
              a1 = (unint64_t)v52;
              v26 = (uint64_t)objc_msgSend((id)a1, sel_longAtIndex_, v16);
              if (v26 == 0x8000000000000000)
              {
                v28 = 2;
                v27 = 1;
              }
              else
              {
                v27 = v26;
                if (v26)
                {
                  if (v26 < 0)
                  {
                    v27 = -v26;
                    if ((unint64_t)-v26 >> 32)
                      goto LABEL_63;
                    v28 = 0;
                  }
                  else
                  {
                    v28 = 1;
                  }
                }
                else
                {
                  v28 = 2;
                }
              }

              *(_QWORD *)&v54 = v27;
              BYTE8(v54) = v28;
              break;
            case 'C':
              v19 = objc_msgSend(v52, sel_unsignedLongAtIndex_, v16);
              v20 = MEMORY[0x24BEE1E88];
              goto LABEL_25;
            default:
              goto LABEL_20;
          }
          goto LABEL_29;
        case 4u:
          if ((_DWORD)v17 != 129)
            goto LABEL_20;
          v22 = v52;
          if ((objc_msgSend(v22, sel_isNullAtIndex_, v16) & 1) == 0)
          {
            v23 = objc_msgSend(v22, sel_integerAtIndex_, v16);
            if (v23)
            {
              v24 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v23);

              v25 = sub_23AA9F52C(0, (unint64_t *)&qword_2569E3140);
              goto LABEL_46;
            }
          }

          goto LABEL_20;
        default:
          goto LABEL_20;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    sub_23B1C53FC();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v45 = v48;
    isUniquelyReferenced_nonNull_native = v47;
    sub_23B1C5864();
    sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v45, isUniquelyReferenced_nonNull_native);
    swift_willThrow();

    __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v54);
    swift_bridgeObjectRelease();
LABEL_56:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_55:
    v43 = sub_23AE2CB64((uint64_t)v13);
    if (v4)
      goto LABEL_56;
    isUniquelyReferenced_nonNull_native = v43;
    swift_bridgeObjectRelease();
  }
  return isUniquelyReferenced_nonNull_native;
}

uint64_t sub_23AE7C598(uint64_t a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  ValueMetadata *v20;
  id v21;
  id v22;
  unint64_t v23;
  char v24;
  id v25;
  ValueMetadata *v26;
  id v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  int v54;
  __int128 v55;
  __int128 v56;
  _OWORD v57[2];
  _QWORD *v58;

  v4 = v3;
  v54 = a3;
  v7 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5474();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a2;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v15 = (_QWORD *)sub_23B1C6230();
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
LABEL_52:
    v44 = sub_23AE179A4((uint64_t)v15);
    if (v4)
      goto LABEL_53;
    isUniquelyReferenced_nonNull_native = v44;
    swift_bridgeObjectRelease();
    return isUniquelyReferenced_nonNull_native;
  }
  v47 = v9;
  v48 = v13;
  v49 = v11;
  v50 = v10;
  swift_bridgeObjectRetain();
  v17 = 0;
  v52 = a1;
  while (2)
  {
    v18 = (v54 + v17);
    if (__OFADD__(v54, (_DWORD)v17))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      sub_23B1C7418();
      __break(1u);
LABEL_63:
      sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
    }
    v19 = *(unsigned __int8 *)(a1 + v17 + 32);
    switch(v19 >> 5)
    {
      case 0u:
        if (!*(_BYTE *)(a1 + v17 + 32))
          goto LABEL_21;
        if ((_DWORD)v19 == 1)
        {
          v20 = &type metadata for JobWaitCondition;
LABEL_23:
          *((_QWORD *)&v56 + 1) = v20;
          v27 = objc_msgSend(v53, sel_longAtIndex_, v18);
          goto LABEL_28;
        }
        if ((objc_msgSend(v53, sel_isNullAtIndex_, v18) & 1) != 0)
          goto LABEL_25;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
        if (objc_msgSend(v53, sel_isNullAtIndex_, v18))
          goto LABEL_63;
        v51 = v4;
        if (swift_dynamicCastMetatype())
          sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
        sub_23B1C5780();
        swift_allocObject();
        sub_23B1C5774();
        v28 = objc_msgSend(v53, sel_dataAtIndex_, v18);
        isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
        v30 = v29;

        sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
        v31 = v51;
        sub_23B1C5768();
        v4 = v31;
        if (v31)
        {
          sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v30);
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_53;
        }
        sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v30);
        swift_release();
        v32 = v58;
        *((_QWORD *)&v56 + 1) = type metadata accessor for Continuation();
        *(_QWORD *)&v55 = v32;
        goto LABEL_37;
      case 1u:
        if ((v19 & 1) == 0)
        {
          v26 = &type metadata for JobSchedulingPriority;
          goto LABEL_27;
        }
        v20 = &type metadata for NSecTimestamp;
        goto LABEL_23;
      case 2u:
        if ((_DWORD)v19 == 64)
        {
LABEL_21:
          v27 = objc_msgSend(v53, sel_longAtIndex_, v18);
          *((_QWORD *)&v56 + 1) = MEMORY[0x24BEE1768];
LABEL_28:
          *(_QWORD *)&v55 = v27;
          goto LABEL_37;
        }
        if ((_DWORD)v19 == 65)
        {
          v26 = &type metadata for JobReason;
LABEL_27:
          *((_QWORD *)&v56 + 1) = v26;
          v27 = objc_msgSend(v53, sel_unsignedLongAtIndex_, v18);
          goto LABEL_28;
        }
        if ((_DWORD)v19 != 66)
        {
LABEL_25:
          v55 = 0u;
          v56 = 0u;
          sub_23AA8A05C((uint64_t)&v55, qword_2542E5640);
LABEL_47:
          if (v17 == 0x7FFFFFFF)
            goto LABEL_59;
          if (v16 == ++v17)
          {
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
          continue;
        }
        *((_QWORD *)&v56 + 1) = &type metadata for VFSItemID;
        v21 = v53;
        v22 = objc_msgSend(v21, sel_longAtIndex_, v18);
        if (v22 == (id)0x8000000000000000)
        {
LABEL_29:
          v24 = 2;
          v23 = 1;
          goto LABEL_36;
        }
        v23 = (unint64_t)v22;
        if (!v22)
        {
LABEL_18:
          v24 = 2;
          goto LABEL_36;
        }
LABEL_13:
        if ((v23 & 0x8000000000000000) == 0)
        {
          v24 = 1;
          goto LABEL_36;
        }
        v23 = -(uint64_t)v23;
        if (!HIDWORD(v23))
        {
          v24 = 0;
LABEL_36:

          *(_QWORD *)&v55 = v23;
          BYTE8(v55) = v24;
LABEL_37:
          sub_23AAA159C(&v55, v57);
          sub_23AAA15AC((uint64_t)v57, (uint64_t)&v55);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v58 = v15;
          v34 = sub_23ACD5F8C(v19);
          v35 = v15[2];
          v36 = (v33 & 1) == 0;
          v37 = v35 + v36;
          if (__OFADD__(v35, v36))
            goto LABEL_60;
          v38 = v33;
          if (v15[3] >= v37)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v15 = v58;
              if ((v33 & 1) == 0)
                goto LABEL_41;
            }
            else
            {
              sub_23B188F9C();
              v15 = v58;
              if ((v38 & 1) == 0)
                goto LABEL_41;
            }
          }
          else
          {
            sub_23AD14BAC(v37, isUniquelyReferenced_nonNull_native);
            v39 = sub_23ACD5F8C(v19);
            if ((v38 & 1) != (v40 & 1))
              goto LABEL_62;
            v34 = v39;
            v15 = v58;
            if ((v38 & 1) == 0)
            {
LABEL_41:
              v15[(v34 >> 6) + 8] |= 1 << v34;
              *(_BYTE *)(v15[6] + v34) = v19;
              sub_23AAA159C(&v55, (_OWORD *)(v15[7] + 32 * v34));
              v41 = v15[2];
              v42 = __OFADD__(v41, 1);
              v43 = v41 + 1;
              if (v42)
                goto LABEL_61;
              v15[2] = v43;
              goto LABEL_46;
            }
          }
          isUniquelyReferenced_nonNull_native = v15[7] + 32 * v34;
          __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
          sub_23AAA159C(&v55, (_OWORD *)isUniquelyReferenced_nonNull_native);
LABEL_46:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
          a1 = v52;
          goto LABEL_47;
        }
        sub_23B1C53FC();
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
        v46 = v48;
        isUniquelyReferenced_nonNull_native = v50;
        sub_23B1C5864();
        sub_23B1C5354();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v46, isUniquelyReferenced_nonNull_native);
        swift_willThrow();

        __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v55);
        swift_bridgeObjectRelease();
LABEL_53:
        swift_bridgeObjectRelease();
        return isUniquelyReferenced_nonNull_native;
      case 3u:
        if ((_DWORD)v19 != 96)
          goto LABEL_25;
        *((_QWORD *)&v56 + 1) = &type metadata for VFSItemID;
        v21 = v53;
        v25 = objc_msgSend(v21, sel_longAtIndex_, v18);
        if (v25 == (id)0x8000000000000000)
          goto LABEL_29;
        v23 = (unint64_t)v25;
        if (!v25)
          goto LABEL_18;
        goto LABEL_13;
      default:
        goto LABEL_25;
    }
  }
}

uint64_t sub_23AE7CC18(uint64_t a1, id a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  ValueMetadata *v16;
  id v17;
  uint64_t v18;
  id v19;
  ValueMetadata *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  _QWORD *v44;

  v6 = v4;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v9 = (_QWORD *)sub_23B1C6230();
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v38 = a4;
    swift_bridgeObjectRetain();
    v11 = 0;
    while (1)
    {
      v12 = (a3 + v11);
      if (__OFADD__(a3, (_DWORD)v11))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        sub_23B1C7418();
        __break(1u);
LABEL_56:
        sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
      }
      v13 = *(unsigned __int8 *)(a1 + v11 + 32);
      v14 = v13 >> 5;
      if ((_DWORD)v13 == 99 && v14 == 3)
      {
        v17 = objc_msgSend(a2, sel_unsignedLongLongAtIndex_, (a3 + v11));
        *((_QWORD *)&v42 + 1) = &type metadata for CapturedContent;
        v18 = swift_allocObject();
        *(_QWORD *)&v41 = v18;
        *(_QWORD *)(v18 + 16) = v17;
        *(_OWORD *)(v18 + 24) = xmmword_23B1CA780;
        *(_QWORD *)(v18 + 40) = 0;
        *(_QWORD *)(v18 + 48) = 0;
        *(_BYTE *)(v18 + 56) = 1;
        *(_QWORD *)(v18 + 64) = 0;
        goto LABEL_25;
      }
      if (v14)
      {
        if (v14 == 1)
        {
          if ((v13 & 1) != 0)
          {
            v20 = &type metadata for NSecTimestamp;
LABEL_23:
            *((_QWORD *)&v42 + 1) = v20;
            v19 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v11));
          }
          else
          {
            v16 = &type metadata for JobSchedulingPriority;
LABEL_17:
            *((_QWORD *)&v42 + 1) = v16;
            v19 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v11));
          }
LABEL_24:
          *(_QWORD *)&v41 = v19;
          goto LABEL_25;
        }
        if (v14 == 2)
        {
          if ((_DWORD)v13 == 64)
            goto LABEL_21;
          if ((_DWORD)v13 == 65)
          {
            v16 = &type metadata for JobReason;
            goto LABEL_17;
          }
        }
      }
      else
      {
        if (!*(_BYTE *)(a1 + v11 + 32))
        {
LABEL_21:
          v19 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v11));
          *((_QWORD *)&v42 + 1) = MEMORY[0x24BEE1768];
          goto LABEL_24;
        }
        if ((_DWORD)v13 == 1)
        {
          v20 = &type metadata for JobWaitCondition;
          goto LABEL_23;
        }
        if ((objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v11)) & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
          if (objc_msgSend(a2, sel_isNullAtIndex_, v12))
            goto LABEL_56;
          if (swift_dynamicCastMetatype())
            sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
          sub_23B1C5780();
          swift_allocObject();
          sub_23B1C5774();
          v29 = objc_msgSend(a2, sel_dataAtIndex_, v12);
          isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
          v31 = v30;

          sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
          sub_23B1C5768();
          if (v4)
          {
            sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v31);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            return isUniquelyReferenced_nonNull_native;
          }
          sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v31);
          swift_release();
          v32 = v44;
          *((_QWORD *)&v42 + 1) = type metadata accessor for Continuation();
          *(_QWORD *)&v41 = v32;
LABEL_25:
          sub_23AAA159C(&v41, v43);
          sub_23AAA15AC((uint64_t)v43, (uint64_t)&v41);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v44 = v9;
          v22 = sub_23ACD5F8C(v13);
          v23 = v9[2];
          v24 = (v21 & 1) == 0;
          v25 = v23 + v24;
          if (__OFADD__(v23, v24))
            goto LABEL_53;
          v26 = v21;
          if (v9[3] >= v25)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v9 = v44;
              if ((v21 & 1) == 0)
                goto LABEL_40;
            }
            else
            {
              sub_23B188F9C();
              v9 = v44;
              if ((v26 & 1) == 0)
                goto LABEL_40;
            }
          }
          else
          {
            sub_23AD14BAC(v25, isUniquelyReferenced_nonNull_native);
            v27 = sub_23ACD5F8C(v13);
            if ((v26 & 1) != (v28 & 1))
              goto LABEL_55;
            v22 = v27;
            v9 = v44;
            if ((v26 & 1) == 0)
            {
LABEL_40:
              v9[(v22 >> 6) + 8] |= 1 << v22;
              *(_BYTE *)(v9[6] + v22) = v13;
              sub_23AAA159C(&v41, (_OWORD *)(v9[7] + 32 * v22));
              v33 = v9[2];
              v34 = __OFADD__(v33, 1);
              v35 = v33 + 1;
              if (v34)
                goto LABEL_54;
              v9[2] = v35;
              goto LABEL_42;
            }
          }
          isUniquelyReferenced_nonNull_native = v9[7] + 32 * v22;
          __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
          sub_23AAA159C(&v41, (_OWORD *)isUniquelyReferenced_nonNull_native);
LABEL_42:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
          goto LABEL_43;
        }
      }
      v41 = 0u;
      v42 = 0u;
      sub_23AA8A05C((uint64_t)&v41, qword_2542E5640);
LABEL_43:
      if (v11 == 0x7FFFFFFF)
        goto LABEL_52;
      if (v10 == ++v11)
      {
        swift_bridgeObjectRelease();
        a4 = v38;
        v6 = v4;
        break;
      }
    }
  }
  v36 = sub_23AE17474((uint64_t)v9, a4);
  if (!v6)
    isUniquelyReferenced_nonNull_native = v36;
  swift_bridgeObjectRelease();
  return isUniquelyReferenced_nonNull_native;
}

uint64_t sub_23AE7D128(unint64_t a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  ValueMetadata *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  ValueMetadata *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  __int128 v61;
  unint64_t v62;
  id v63;
  _QWORD *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _OWORD v69[2];
  int v70;

  v4 = v3;
  v70 = a3;
  v7 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v7);
  v60 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5474();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a2;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v13 = (_QWORD *)sub_23B1C6230();
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v57 = v10;
    v58 = v9;
    swift_bridgeObjectRetain();
    v15 = 0;
    v62 = a1;
    while (1)
    {
      v16 = (v70 + v15);
      if (__OFADD__(v70, (_DWORD)v15))
        break;
      v17 = *(unsigned __int8 *)(a1 + v15 + 32);
      switch(v17 >> 5)
      {
        case 0u:
          if (!*(_BYTE *)(a1 + v15 + 32))
          {
LABEL_13:
            v23 = objc_msgSend(v63, sel_longAtIndex_, v16);
            v24 = MEMORY[0x24BEE1768];
LABEL_33:
            *((_QWORD *)&v68 + 1) = v24;
LABEL_36:
            *(_QWORD *)&v67 = v23;
            goto LABEL_37;
          }
          if ((_DWORD)v17 == 1)
          {
            v18 = &type metadata for JobWaitCondition;
LABEL_24:
            *((_QWORD *)&v68 + 1) = v18;
            v23 = objc_msgSend(v63, sel_longAtIndex_, v16);
            goto LABEL_36;
          }
          if ((objc_msgSend(v63, sel_isNullAtIndex_, v16) & 1) != 0)
          {
LABEL_28:
            v67 = 0u;
            v68 = 0u;
            sub_23AA8A05C((uint64_t)&v67, qword_2542E5640);
            goto LABEL_47;
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
          if (objc_msgSend(v63, sel_isNullAtIndex_, v16))
            goto LABEL_74;
          *(_QWORD *)&v61 = v4;
          if (swift_dynamicCastMetatype())
LABEL_75:
            sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
          sub_23B1C5780();
          swift_allocObject();
          sub_23B1C5774();
          v51 = objc_msgSend(v63, sel_dataAtIndex_, v16);
          isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
          v28 = v52;

          sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
          v53 = v61;
          sub_23B1C5768();
          v4 = v53;
          if (v53)
          {
LABEL_67:
            sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v28);
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_64;
          }
          sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v28);
          swift_release();
          v21 = v64;
          v22 = type metadata accessor for Continuation();
LABEL_54:
          *((_QWORD *)&v68 + 1) = v22;
          *(_QWORD *)&v67 = v21;
LABEL_37:
          sub_23AAA159C(&v67, v69);
          sub_23AAA15AC((uint64_t)v69, (uint64_t)&v67);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v64 = v13;
          a1 = sub_23ACD5F8C(v17);
          v42 = v13[2];
          v43 = (v41 & 1) == 0;
          v44 = v42 + v43;
          if (__OFADD__(v42, v43))
            goto LABEL_70;
          v45 = v41;
          if (v13[3] >= v44)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v13 = v64;
              if ((v41 & 1) != 0)
                goto LABEL_45;
            }
            else
            {
              sub_23B188F9C();
              v13 = v64;
              if ((v45 & 1) != 0)
                goto LABEL_45;
            }
          }
          else
          {
            sub_23AD14BAC(v44, isUniquelyReferenced_nonNull_native);
            v46 = sub_23ACD5F8C(v17);
            if ((v45 & 1) != (v47 & 1))
            {
              sub_23B1C7418();
              __break(1u);
LABEL_74:
              sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
            }
            a1 = v46;
            v13 = v64;
            if ((v45 & 1) != 0)
            {
LABEL_45:
              isUniquelyReferenced_nonNull_native = v13[7] + 32 * a1;
              __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
              sub_23AAA159C(&v67, (_OWORD *)isUniquelyReferenced_nonNull_native);
              goto LABEL_46;
            }
          }
          v13[(a1 >> 6) + 8] |= 1 << a1;
          *(_BYTE *)(v13[6] + a1) = v17;
          sub_23AAA159C(&v67, (_OWORD *)(v13[7] + 32 * a1));
          v48 = v13[2];
          v49 = __OFADD__(v48, 1);
          v50 = v48 + 1;
          if (v49)
            goto LABEL_71;
          v13[2] = v50;
LABEL_46:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
          a1 = v62;
LABEL_47:
          if (v15 == 0x7FFFFFFF)
            goto LABEL_69;
          if (v14 == ++v15)
          {
            swift_bridgeObjectRelease();
            goto LABEL_63;
          }
          break;
        case 1u:
          if ((v17 & 1) != 0)
          {
            v18 = &type metadata for NSecTimestamp;
            goto LABEL_24;
          }
          v33 = &type metadata for JobSchedulingPriority;
LABEL_35:
          *((_QWORD *)&v68 + 1) = v33;
          v23 = objc_msgSend(v63, sel_unsignedLongAtIndex_, v16);
          goto LABEL_36;
        case 2u:
          switch(*(_BYTE *)(a1 + v15 + 32))
          {
            case '@':
              goto LABEL_13;
            case 'A':
              v33 = &type metadata for JobReason;
              goto LABEL_35;
            case 'B':
              *((_QWORD *)&v68 + 1) = &type metadata for VFSItemID;
              a1 = (unint64_t)v63;
              v38 = (uint64_t)objc_msgSend((id)a1, sel_longAtIndex_, v16);
              if (v38 == 0x8000000000000000)
              {
                v40 = 2;
                v39 = 1;
              }
              else
              {
                v39 = v38;
                if (v38)
                {
                  if (v38 < 0)
                  {
                    v39 = -v38;
                    if ((unint64_t)-v38 >> 32)
                      goto LABEL_72;
                    v40 = 0;
                  }
                  else
                  {
                    v40 = 1;
                  }
                }
                else
                {
                  v40 = 2;
                }
              }

              *(_QWORD *)&v67 = v39;
              BYTE8(v67) = v40;
              break;
            case 'C':
              v23 = objc_msgSend(v63, sel_unsignedLongAtIndex_, v16);
              v24 = MEMORY[0x24BEE1E88];
              goto LABEL_33;
            default:
              goto LABEL_28;
          }
          goto LABEL_37;
        case 3u:
          if ((_DWORD)v17 == 97)
          {
            *((_QWORD *)&v68 + 1) = &type metadata for Filename;
            v34 = objc_msgSend(v63, sel_stringAtIndex_, v16);
            v35 = sub_23B1C63E0();
            v37 = v36;

            *(_QWORD *)&v67 = v35;
            *((_QWORD *)&v67 + 1) = v37;
            goto LABEL_37;
          }
          if ((_DWORD)v17 != 98 || (objc_msgSend(v63, sel_isNullAtIndex_, v16) & 1) != 0)
            goto LABEL_28;
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6188);
          if (objc_msgSend(v63, sel_isNullAtIndex_, v16))
            goto LABEL_74;
          *(_QWORD *)&v61 = v4;
          if (swift_dynamicCastMetatype())
            goto LABEL_75;
          sub_23B1C5780();
          swift_allocObject();
          sub_23B1C5774();
          v26 = objc_msgSend(v63, sel_dataAtIndex_, v16);
          isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
          v28 = v27;

          sub_23AAB5A28((unint64_t *)&unk_2569E6190, &qword_2569E6188, (uint64_t)&unk_23B1E6080);
          v29 = v61;
          sub_23B1C5768();
          v4 = v29;
          if (v29)
            goto LABEL_67;
          sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v28);
          swift_release();
          v30 = v64;
          v31 = v65;
          v61 = v66;
          *((_QWORD *)&v68 + 1) = v25;
          v32 = swift_allocObject();
          *(_QWORD *)&v67 = v32;
          *(_QWORD *)(v32 + 16) = v30;
          *(_QWORD *)(v32 + 24) = v31;
          *(_OWORD *)(v32 + 32) = v61;
          goto LABEL_37;
        case 4u:
          if ((_DWORD)v17 != 129)
            goto LABEL_28;
          v19 = v63;
          if ((objc_msgSend(v19, sel_isNullAtIndex_, v16) & 1) == 0)
          {
            v20 = objc_msgSend(v19, sel_integerAtIndex_, v16);
            if (v20)
            {
              v21 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v20);

              v22 = sub_23AA9F52C(0, (unint64_t *)&qword_2569E3140);
              goto LABEL_54;
            }
          }

          goto LABEL_28;
        default:
          goto LABEL_28;
      }
    }
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    sub_23B1C53FC();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v56 = v59;
    isUniquelyReferenced_nonNull_native = v58;
    sub_23B1C5864();
    sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, isUniquelyReferenced_nonNull_native);
    swift_willThrow();

    __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v67);
    swift_bridgeObjectRelease();
LABEL_64:
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_63:
    v54 = sub_23AE17118((uint64_t)v13);
    if (v4)
      goto LABEL_64;
    isUniquelyReferenced_nonNull_native = v54;
    swift_bridgeObjectRelease();
  }
  return isUniquelyReferenced_nonNull_native;
}

uint64_t sub_23AE7D9CC(uint64_t a1, id a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  uint64_t v12;
  id v13;
  id v14;
  ValueMetadata *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v39;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  _QWORD *v44;

  v4 = v3;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v7 = (_QWORD *)sub_23B1C6230();
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = (a3 + v8);
      if (__OFADD__(a3, (_DWORD)v8))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        sub_23B1C7418();
        __break(1u);
LABEL_59:
        sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
      }
      v10 = *(unsigned __int8 *)(a1 + v8 + 32);
      switch(v10 >> 5)
      {
        case 0u:
          if (!*(_BYTE *)(a1 + v8 + 32))
            goto LABEL_20;
          if ((_DWORD)v10 == 1)
          {
            v11 = &type metadata for JobWaitCondition;
LABEL_22:
            *((_QWORD *)&v42 + 1) = v11;
            v20 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v8), v37);
LABEL_28:
            *(_QWORD *)&v41 = v20;
            goto LABEL_29;
          }
          if ((objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v8)) & 1) == 0)
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
            if (objc_msgSend(a2, sel_isNullAtIndex_, v9))
              goto LABEL_59;
            v37 = v4;
            if (swift_dynamicCastMetatype())
              sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
            sub_23B1C5780();
            swift_allocObject();
            sub_23B1C5774();
            v29 = objc_msgSend(a2, sel_dataAtIndex_, v9);
            isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
            v31 = v30;

            sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
            sub_23B1C5768();
            v4 = v37;
            if (v37)
            {
              sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v31);
              swift_bridgeObjectRelease();
              swift_release();
LABEL_50:
              swift_bridgeObjectRelease();
              return isUniquelyReferenced_nonNull_native;
            }
            sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v31);
            swift_release();
            v18 = v44;
            v19 = type metadata accessor for Continuation();
LABEL_41:
            *((_QWORD *)&v42 + 1) = v19;
            *(_QWORD *)&v41 = v18;
LABEL_29:
            sub_23AAA159C(&v41, v43);
            sub_23AAA15AC((uint64_t)v43, (uint64_t)&v41);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v44 = v7;
            v22 = sub_23ACD5F8C(v10);
            v23 = v7[2];
            v24 = (v21 & 1) == 0;
            v25 = v23 + v24;
            if (__OFADD__(v23, v24))
              goto LABEL_56;
            v26 = v21;
            if (v7[3] >= v25)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v7 = v44;
                if ((v21 & 1) == 0)
                  goto LABEL_43;
              }
              else
              {
                sub_23B188F9C();
                v7 = v44;
                if ((v26 & 1) == 0)
                  goto LABEL_43;
              }
            }
            else
            {
              sub_23AD14BAC(v25, isUniquelyReferenced_nonNull_native);
              v27 = sub_23ACD5F8C(v10);
              if ((v26 & 1) != (v28 & 1))
                goto LABEL_58;
              v22 = v27;
              v7 = v44;
              if ((v26 & 1) == 0)
              {
LABEL_43:
                v7[(v22 >> 6) + 8] |= 1 << v22;
                *(_BYTE *)(v7[6] + v22) = v10;
                sub_23AAA159C(&v41, (_OWORD *)(v7[7] + 32 * v22));
                v32 = v7[2];
                v33 = __OFADD__(v32, 1);
                v34 = v32 + 1;
                if (v33)
                  goto LABEL_57;
                v7[2] = v34;
                goto LABEL_45;
              }
            }
            isUniquelyReferenced_nonNull_native = v7[7] + 32 * v22;
            __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
            sub_23AAA159C(&v41, (_OWORD *)isUniquelyReferenced_nonNull_native);
LABEL_45:
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
            goto LABEL_46;
          }
LABEL_25:
          v41 = 0u;
          v42 = 0u;
          sub_23AA8A05C((uint64_t)&v41, qword_2542E5640);
LABEL_46:
          if (v8 == 0x7FFFFFFF)
            goto LABEL_55;
          if (v39 == ++v8)
          {
            swift_bridgeObjectRelease();
            goto LABEL_49;
          }
          break;
        case 1u:
          if ((v10 & 1) == 0)
          {
            v15 = &type metadata for JobSchedulingPriority;
            goto LABEL_27;
          }
          v11 = &type metadata for NSecTimestamp;
          goto LABEL_22;
        case 2u:
          if ((_DWORD)v10 == 64)
          {
LABEL_20:
            v20 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v8), v37);
            *((_QWORD *)&v42 + 1) = MEMORY[0x24BEE1768];
            goto LABEL_28;
          }
          if ((_DWORD)v10 == 65)
          {
            v15 = &type metadata for JobReason;
LABEL_27:
            *((_QWORD *)&v42 + 1) = v15;
            v20 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v8), v37);
            goto LABEL_28;
          }
          if ((_DWORD)v10 != 66)
            goto LABEL_25;
          type metadata accessor for NSFileProviderItemIdentifier(0);
          *((_QWORD *)&v42 + 1) = v12;
          v13 = a2;
          v14 = objc_msgSend(v13, sel_stringAtIndex_, v9);
          if (!v14)
          {
            sub_23B1C63E0();
            v14 = (id)sub_23B1C63BC();
            swift_bridgeObjectRelease();
          }

          *(_QWORD *)&v41 = v14;
          goto LABEL_29;
        case 4u:
          if ((_DWORD)v10 != 129)
            goto LABEL_25;
          v16 = a2;
          if ((objc_msgSend(v16, sel_isNullAtIndex_, v9) & 1) == 0)
          {
            v17 = objc_msgSend(v16, sel_integerAtIndex_, v9);
            if (v17)
            {
              v18 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v17);

              v19 = sub_23AA9F52C(0, (unint64_t *)&qword_2569E3140);
              goto LABEL_41;
            }
          }

          goto LABEL_25;
        default:
          goto LABEL_25;
      }
    }
  }
LABEL_49:
  v35 = sub_23AE2D86C((uint64_t)v7);
  if (v4)
    goto LABEL_50;
  isUniquelyReferenced_nonNull_native = v35;
  swift_bridgeObjectRelease();
  return isUniquelyReferenced_nonNull_native;
}

uint64_t sub_23AE7DF74(uint64_t a1, id a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  id v12;
  uint64_t v13;
  ValueMetadata *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v38;
  __int128 v40;
  __int128 v41;
  _OWORD v42[2];
  _QWORD *v43;

  v4 = v3;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v7 = (_QWORD *)sub_23B1C6230();
  v38 = *(_QWORD *)(a1 + 16);
  if (!v38)
    goto LABEL_51;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (2)
  {
    v9 = (a3 + v8);
    if (__OFADD__(a3, (_DWORD)v8))
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      sub_23B1C7418();
      __break(1u);
LABEL_61:
      sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
    }
    v10 = *(unsigned __int8 *)(a1 + v8 + 32);
    switch(v10 >> 5)
    {
      case 0u:
        if (!*(_BYTE *)(a1 + v8 + 32))
        {
LABEL_9:
          v12 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v8), v36);
          v13 = MEMORY[0x24BEE1768];
LABEL_32:
          *((_QWORD *)&v41 + 1) = v13;
LABEL_35:
          *(_QWORD *)&v40 = v12;
          goto LABEL_36;
        }
        if ((_DWORD)v10 == 1)
        {
          v11 = &type metadata for JobWaitCondition;
LABEL_19:
          *((_QWORD *)&v41 + 1) = v11;
          v12 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v8), v36);
          goto LABEL_35;
        }
        if ((objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v8)) & 1) != 0)
        {
LABEL_26:
          v40 = 0u;
          v41 = 0u;
          sub_23AA8A05C((uint64_t)&v40, qword_2542E5640);
LABEL_46:
          if (v8 == 0x7FFFFFFF)
            goto LABEL_57;
          if (v38 == ++v8)
          {
            swift_bridgeObjectRelease();
LABEL_51:
            v34 = sub_23AE2D380((uint64_t)v7);
            if (v4)
              goto LABEL_52;
            isUniquelyReferenced_nonNull_native = v34;
            swift_bridgeObjectRelease();
            return isUniquelyReferenced_nonNull_native;
          }
          continue;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
        if (objc_msgSend(a2, sel_isNullAtIndex_, v9))
          sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
        v36 = v4;
        if (swift_dynamicCastMetatype())
          goto LABEL_61;
        sub_23B1C5780();
        swift_allocObject();
        sub_23B1C5774();
        v18 = objc_msgSend(a2, sel_dataAtIndex_, v9);
        isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
        v20 = v19;

        sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
        sub_23B1C5768();
        v4 = v36;
        if (!v36)
        {
          sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v20);
          swift_release();
          v17 = v43;
          *((_QWORD *)&v41 + 1) = type metadata accessor for Continuation();
LABEL_30:
          *(_QWORD *)&v40 = v17;
LABEL_36:
          sub_23AAA159C(&v40, v42);
          sub_23AAA15AC((uint64_t)v42, (uint64_t)&v40);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v43 = v7;
          v24 = sub_23ACD5F8C(v10);
          v25 = v7[2];
          v26 = (v23 & 1) == 0;
          v27 = v25 + v26;
          if (__OFADD__(v25, v26))
            goto LABEL_58;
          v28 = v23;
          if (v7[3] >= v27)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v7 = v43;
              if ((v23 & 1) == 0)
                goto LABEL_40;
            }
            else
            {
              sub_23B188F9C();
              v7 = v43;
              if ((v28 & 1) == 0)
                goto LABEL_40;
            }
          }
          else
          {
            sub_23AD14BAC(v27, isUniquelyReferenced_nonNull_native);
            v29 = sub_23ACD5F8C(v10);
            if ((v28 & 1) != (v30 & 1))
              goto LABEL_60;
            v24 = v29;
            v7 = v43;
            if ((v28 & 1) == 0)
            {
LABEL_40:
              v7[(v24 >> 6) + 8] |= 1 << v24;
              *(_BYTE *)(v7[6] + v24) = v10;
              sub_23AAA159C(&v40, (_OWORD *)(v7[7] + 32 * v24));
              v31 = v7[2];
              v32 = __OFADD__(v31, 1);
              v33 = v31 + 1;
              if (v32)
                goto LABEL_59;
              v7[2] = v33;
              goto LABEL_45;
            }
          }
          isUniquelyReferenced_nonNull_native = v7[7] + 32 * v24;
          __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
          sub_23AAA159C(&v40, (_OWORD *)isUniquelyReferenced_nonNull_native);
LABEL_45:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
          goto LABEL_46;
        }
        sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v20);
        swift_bridgeObjectRelease();
        swift_release();
LABEL_52:
        swift_bridgeObjectRelease();
        return isUniquelyReferenced_nonNull_native;
      case 1u:
        if ((v10 & 1) != 0)
        {
          v11 = &type metadata for NSecTimestamp;
          goto LABEL_19;
        }
        v14 = &type metadata for JobSchedulingPriority;
LABEL_34:
        *((_QWORD *)&v41 + 1) = v14;
        v12 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v8), v36);
        goto LABEL_35;
      case 2u:
        switch(*(_BYTE *)(a1 + v8 + 32))
        {
          case '@':
            goto LABEL_9;
          case 'A':
            v14 = &type metadata for JobReason;
            goto LABEL_34;
          case 'B':
            type metadata accessor for NSFileProviderItemIdentifier(0);
            *((_QWORD *)&v41 + 1) = v21;
            v22 = a2;
            v17 = objc_msgSend(v22, sel_stringAtIndex_, v9);
            if (!v17)
            {
              sub_23B1C63E0();
              v17 = (id)sub_23B1C63BC();
              swift_bridgeObjectRelease();
            }

            goto LABEL_30;
          case 'C':
            v12 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v8));
            v13 = MEMORY[0x24BEE1E88];
            goto LABEL_32;
          default:
            goto LABEL_26;
        }
      case 4u:
        if ((_DWORD)v10 == 128)
        {
          v11 = &type metadata for Fields;
          goto LABEL_19;
        }
        if ((_DWORD)v10 != 129)
          goto LABEL_26;
        v15 = a2;
        if ((objc_msgSend(v15, sel_isNullAtIndex_, v9) & 1) == 0)
        {
          v16 = objc_msgSend(v15, sel_integerAtIndex_, v9);
          if (v16)
          {
            v17 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v16);

            *((_QWORD *)&v41 + 1) = sub_23AA9F52C(0, (unint64_t *)&qword_2569E3140);
            goto LABEL_30;
          }
        }

        goto LABEL_26;
      default:
        goto LABEL_26;
    }
  }
}

uint64_t sub_23AE7E56C(uint64_t a1, id a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  id v12;
  uint64_t v13;
  ValueMetadata *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v40;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  _QWORD *v45;

  v4 = v3;
  isUniquelyReferenced_nonNull_native = (uint64_t)objc_msgSend(a2, sel_columns);
  sub_23AEB1694();
  v7 = (_QWORD *)sub_23B1C6230();
  v40 = *(_QWORD *)(a1 + 16);
  if (v40)
  {
    swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = (a3 + v8);
      if (__OFADD__(a3, (_DWORD)v8))
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        sub_23B1C7418();
        __break(1u);
LABEL_60:
        sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
      }
      v10 = *(unsigned __int8 *)(a1 + v8 + 32);
      switch(v10 >> 5)
      {
        case 0u:
          if (!*(_BYTE *)(a1 + v8 + 32))
          {
LABEL_9:
            v12 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v8), v38);
            v13 = MEMORY[0x24BEE1768];
LABEL_25:
            *((_QWORD *)&v43 + 1) = v13;
            *(_QWORD *)&v42 = v12;
            goto LABEL_35;
          }
          if ((_DWORD)v10 == 1)
          {
            v11 = &type metadata for JobWaitCondition;
LABEL_17:
            *((_QWORD *)&v43 + 1) = v11;
            v19 = objc_msgSend(a2, sel_longAtIndex_, (a3 + v8), v38);
LABEL_28:
            *(_QWORD *)&v42 = v19;
            goto LABEL_35;
          }
          if ((objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v8)) & 1) == 0)
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
            if (objc_msgSend(a2, sel_isNullAtIndex_, v9))
              goto LABEL_60;
            v38 = v4;
            if (swift_dynamicCastMetatype())
              sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
            sub_23B1C5780();
            swift_allocObject();
            sub_23B1C5774();
            v22 = objc_msgSend(a2, sel_dataAtIndex_, v9);
            isUniquelyReferenced_nonNull_native = sub_23B1C5AD4();
            v24 = v23;

            sub_23AAB5A28(&qword_2569E2DB0, (uint64_t *)&unk_2569E5F30, (uint64_t)&unk_23B1E04B8);
            sub_23B1C5768();
            v4 = v38;
            if (v38)
            {
              sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v24);
              swift_bridgeObjectRelease();
              swift_release();
LABEL_51:
              swift_bridgeObjectRelease();
              return isUniquelyReferenced_nonNull_native;
            }
            sub_23AAAE53C(isUniquelyReferenced_nonNull_native, v24);
            swift_release();
            v17 = v45;
            v18 = type metadata accessor for Continuation();
LABEL_33:
            *((_QWORD *)&v43 + 1) = v18;
LABEL_34:
            *(_QWORD *)&v42 = v17;
LABEL_35:
            sub_23AAA159C(&v42, v44);
            sub_23AAA15AC((uint64_t)v44, (uint64_t)&v42);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v45 = v7;
            v26 = sub_23ACD5F8C(v10);
            v27 = v7[2];
            v28 = (v25 & 1) == 0;
            v29 = v27 + v28;
            if (__OFADD__(v27, v28))
              goto LABEL_57;
            v30 = v25;
            if (v7[3] >= v29)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v7 = v45;
                if ((v25 & 1) == 0)
                  goto LABEL_39;
              }
              else
              {
                sub_23B188F9C();
                v7 = v45;
                if ((v30 & 1) == 0)
                  goto LABEL_39;
              }
            }
            else
            {
              sub_23AD14BAC(v29, isUniquelyReferenced_nonNull_native);
              v31 = sub_23ACD5F8C(v10);
              if ((v30 & 1) != (v32 & 1))
                goto LABEL_59;
              v26 = v31;
              v7 = v45;
              if ((v30 & 1) == 0)
              {
LABEL_39:
                v7[(v26 >> 6) + 8] |= 1 << v26;
                *(_BYTE *)(v7[6] + v26) = v10;
                sub_23AAA159C(&v42, (_OWORD *)(v7[7] + 32 * v26));
                v33 = v7[2];
                v34 = __OFADD__(v33, 1);
                v35 = v33 + 1;
                if (v34)
                  goto LABEL_58;
                v7[2] = v35;
                goto LABEL_44;
              }
            }
            isUniquelyReferenced_nonNull_native = v7[7] + 32 * v26;
            __swift_destroy_boxed_opaque_existential_1(isUniquelyReferenced_nonNull_native);
            sub_23AAA159C(&v42, (_OWORD *)isUniquelyReferenced_nonNull_native);
LABEL_44:
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
            goto LABEL_45;
          }
LABEL_20:
          v42 = 0u;
          v43 = 0u;
          sub_23AA8A05C((uint64_t)&v42, qword_2542E5640);
LABEL_45:
          if (v8 == 0x7FFFFFFF)
            goto LABEL_56;
          if (v40 == ++v8)
          {
            swift_bridgeObjectRelease();
            goto LABEL_50;
          }
          break;
        case 1u:
          if ((v10 & 1) != 0)
          {
            v11 = &type metadata for NSecTimestamp;
            goto LABEL_17;
          }
          v14 = &type metadata for JobSchedulingPriority;
LABEL_27:
          *((_QWORD *)&v43 + 1) = v14;
          v19 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v8), v38);
          goto LABEL_28;
        case 2u:
          switch(*(_BYTE *)(a1 + v8 + 32))
          {
            case '@':
              goto LABEL_9;
            case 'A':
              v14 = &type metadata for JobReason;
              goto LABEL_27;
            case 'B':
              type metadata accessor for NSFileProviderItemIdentifier(0);
              *((_QWORD *)&v43 + 1) = v20;
              v21 = a2;
              v17 = objc_msgSend(v21, sel_stringAtIndex_, v9);
              if (!v17)
              {
                sub_23B1C63E0();
                v17 = (id)sub_23B1C63BC();
                swift_bridgeObjectRelease();
              }

              goto LABEL_34;
            case 'C':
              v12 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (a3 + v8));
              v13 = MEMORY[0x24BEE1E88];
              goto LABEL_25;
            default:
              goto LABEL_20;
          }
        case 4u:
          if ((_DWORD)v10 != 129)
            goto LABEL_20;
          v15 = a2;
          if ((objc_msgSend(v15, sel_isNullAtIndex_, v9) & 1) == 0)
          {
            v16 = objc_msgSend(v15, sel_integerAtIndex_, v9);
            if (v16)
            {
              v17 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v16);

              v18 = sub_23AA9F52C(0, (unint64_t *)&qword_2569E3140);
              goto LABEL_33;
            }
          }

          goto LABEL_20;
        default:
          goto LABEL_20;
      }
    }
  }
LABEL_50:
  v36 = sub_23AE2CDDC((uint64_t)v7);
  if (v4)
    goto LABEL_51;
  isUniquelyReferenced_nonNull_native = v36;
  swift_bridgeObjectRelease();
  return isUniquelyReferenced_nonNull_native;
}

_QWORD *sub_23AE7EB54(_QWORD *a1, id a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  _OWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  _BYTE *v30;
  _BYTE *v31;
  _QWORD *result;
  __int128 v34;
  __int128 v35;
  _OWORD v36[2];
  _QWORD *v37;

  v4 = v3;
  objc_msgSend(a2, sel_columns);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6780);
  sub_23AAB5A28(&qword_2569E6788, &qword_2569E6780, (uint64_t)&unk_23B1CFE68);
  v7 = (_QWORD *)sub_23B1C6230();
  v8 = a1[2];
  if (!v8)
  {
LABEL_32:
    v29 = sub_23ADF9C30((uint64_t)v7);
    if (v4)
    {
LABEL_36:
      swift_bridgeObjectRelease();
    }
    else
    {
      a1 = v29;
      swift_bridgeObjectRelease();
    }
    return a1;
  }
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    v10 = (a3 + v9);
    if (__OFADD__(a3, (_DWORD)v9))
      break;
    v11 = *((unsigned __int8 *)a1 + v9 + 32);
    if (*((_BYTE *)a1 + v9 + 32))
    {
      if ((_DWORD)v11 == 1)
      {
        v12 = a2;
        if ((objc_msgSend(v12, sel_isNullAtIndex_, v10) & 1) != 0)
        {

LABEL_11:
          v34 = 0u;
          v35 = 0u;
          sub_23AA8A05C((uint64_t)&v34, qword_2542E5640);
          goto LABEL_29;
        }
        v13 = objc_msgSend(v12, sel_stringAtIndex_, v10);
        if (!v13)
        {
          sub_23B1C63E0();
          v13 = (id)sub_23B1C63BC();
          swift_bridgeObjectRelease();
        }

        type metadata accessor for NSFileProviderItemIdentifier(0);
        *((_QWORD *)&v35 + 1) = v14;
        *(_QWORD *)&v34 = v13;
      }
      else
      {
        if ((objc_msgSend(a2, sel_isNullAtIndex_, (a3 + v9)) & 1) != 0)
          goto LABEL_11;
        v15 = sub_23B06F1C0((uint64_t)objc_msgSend(a2, sel_longAtIndex_, v10));
        if (v15 == 70)
        {
          sub_23AB7B620();
          swift_allocError();
          *v31 = 0;
          swift_willThrow();
          goto LABEL_35;
        }
        *((_QWORD *)&v35 + 1) = &type metadata for JobCode;
        LOBYTE(v34) = v15;
      }
    }
    else
    {
      *((_QWORD *)&v35 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6790);
      if (objc_msgSend(a2, sel_longAtIndex_, v10))
      {
        sub_23AB7B620();
        swift_allocError();
        *v30 = 0;
        swift_willThrow();
        __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v34);
LABEL_35:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    sub_23AAA159C(&v34, v36);
    sub_23AAA15AC((uint64_t)v36, (uint64_t)&v34);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = v7;
    v18 = sub_23ACD607C(v11);
    v19 = v7[2];
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      goto LABEL_40;
    v22 = v17;
    if (v7[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v7 = v37;
        if ((v17 & 1) == 0)
          goto LABEL_26;
      }
      else
      {
        sub_23B1891F4();
        v7 = v37;
        if ((v22 & 1) == 0)
          goto LABEL_26;
      }
    }
    else
    {
      sub_23AD152C0(v21, isUniquelyReferenced_nonNull_native);
      v23 = sub_23ACD607C(v11);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_42;
      v18 = v23;
      v7 = v37;
      if ((v22 & 1) == 0)
      {
LABEL_26:
        v7[(v18 >> 6) + 8] |= 1 << v18;
        *(_BYTE *)(v7[6] + v18) = v11;
        sub_23AAA159C(&v34, (_OWORD *)(v7[7] + 32 * v18));
        v26 = v7[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
          goto LABEL_41;
        v7[2] = v28;
        goto LABEL_28;
      }
    }
    v25 = (_OWORD *)(v7[7] + 32 * v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    sub_23AAA159C(&v34, v25);
LABEL_28:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
LABEL_29:
    if (v9 == 0x7FFFFFFF)
      goto LABEL_39;
    if (v8 == ++v9)
    {
      swift_bridgeObjectRelease();
      v4 = v3;
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = (_QWORD *)sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AE7EF58(uint64_t a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  _OWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t result;
  _BYTE *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  __int128 v56;
  __int128 v57;
  _OWORD v58[2];
  _QWORD *v59;

  v4 = v3;
  v55 = a3;
  v7 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5474();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v52 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2;
  objc_msgSend(a2, sel_columns);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E67B0);
  sub_23AAB5A28(&qword_2569E67B8, &qword_2569E67B0, (uint64_t)&unk_23B1CFE68);
  v51 = v14;
  v15 = (_QWORD *)sub_23B1C6230();
  v54 = *(_QWORD *)(a1 + 16);
  if (v54)
  {
    v48 = v9;
    v49 = v11;
    v50 = (void *)v10;
    v53 = v3;
    swift_bridgeObjectRetain();
    v16 = 0;
    while (1)
    {
      v17 = (v55 + v16);
      if (__OFADD__(v55, (_DWORD)v16))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        result = sub_23B1C7418();
        __break(1u);
        return result;
      }
      v18 = *(unsigned __int8 *)(a1 + v16 + 32);
      if (*(_BYTE *)(a1 + v16 + 32))
      {
        if ((_DWORD)v18 == 1)
        {
          v19 = v13;
          if ((objc_msgSend(v19, sel_isNullAtIndex_, v17) & 1) != 0)
          {

LABEL_11:
            v56 = 0u;
            v57 = 0u;
            sub_23AA8A05C((uint64_t)&v56, qword_2542E5640);
            goto LABEL_34;
          }
          v20 = (uint64_t)objc_msgSend(v19, sel_longAtIndex_, v17);
          if (v20 == 0x8000000000000000)
          {
            v22 = 2;
            v21 = 1;
          }
          else
          {
            v21 = v20;
            if (v20)
            {
              if (v20 < 0)
              {
                v21 = -v20;
                if ((unint64_t)-v20 >> 32)
                {
                  sub_23B1C53FC();
                  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
                  sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
                  v47 = v52;
                  v13 = v50;
                  sub_23B1C5864();
                  sub_23B1C5354();
                  (*(void (**)(char *, void *))(v49 + 8))(v47, v13);
                  swift_willThrow();
                  swift_bridgeObjectRelease();

                  goto LABEL_44;
                }
                v22 = 0;
              }
              else
              {
                v22 = 1;
              }
            }
            else
            {
              v22 = 2;
            }
          }

          *((_QWORD *)&v57 + 1) = &type metadata for VFSItemID;
          *(_QWORD *)&v56 = v21;
          BYTE8(v56) = v22;
        }
        else
        {
          if ((objc_msgSend(v13, sel_isNullAtIndex_, v17) & 1) != 0)
            goto LABEL_11;
          v23 = sub_23B06F1C0((uint64_t)objc_msgSend(v13, sel_longAtIndex_, v17));
          if (v23 == 70)
          {
            sub_23AB7B620();
            swift_allocError();
            *v44 = 0;
            swift_willThrow();
            goto LABEL_43;
          }
          *((_QWORD *)&v57 + 1) = &type metadata for JobCode;
          LOBYTE(v56) = v23;
        }
      }
      else
      {
        *((_QWORD *)&v57 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E67C0);
        if (objc_msgSend(v13, sel_longAtIndex_, v17))
        {
          sub_23AB7B620();
          swift_allocError();
          *v43 = 0;
          swift_willThrow();
          __swift_deallocate_boxed_opaque_existential_0((uint64_t)&v56);
LABEL_43:
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
      }
      v24 = a1;
      sub_23AAA159C(&v56, v58);
      sub_23AAA15AC((uint64_t)v58, (uint64_t)&v56);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = v15;
      v27 = sub_23ACD607C(v18);
      v28 = v15[2];
      v29 = (v26 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
        goto LABEL_49;
      v31 = v26;
      if (v15[3] >= v30)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_23B189200();
      }
      else
      {
        sub_23AD152CC(v30, isUniquelyReferenced_nonNull_native);
        v32 = sub_23ACD607C(v18);
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_51;
        v27 = v32;
      }
      a1 = v24;
      v15 = v59;
      if ((v31 & 1) != 0)
      {
        v34 = (_OWORD *)(v59[7] + 32 * v27);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
        sub_23AAA159C(&v56, v34);
      }
      else
      {
        v59[(v27 >> 6) + 8] |= 1 << v27;
        *(_BYTE *)(v15[6] + v27) = v18;
        sub_23AAA159C(&v56, (_OWORD *)(v15[7] + 32 * v27));
        v35 = v15[2];
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_50;
        v15[2] = v37;
      }
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
LABEL_34:
      if (v16 == 0x7FFFFFFF)
        goto LABEL_48;
      if (v54 == ++v16)
      {
        swift_bridgeObjectRelease();
        v4 = v53;
        break;
      }
    }
  }
  v38 = sub_23AE79350(0, (uint64_t)v15, sub_23ACD607C, (uint64_t *)&unk_2569E67C8);
  if (!v4)
  {
    v39 = v38;
    v13 = (void *)sub_23AE79138(1, (uint64_t)v15);
    v41 = v40;
    v42 = sub_23AE78F24(2, (uint64_t)v15, sub_23ACD607C);
    if ((v39 & 1) != 0 || v41 == -1 || v42 == 70)
    {
      sub_23AB7B620();
      swift_allocError();
      *v46 = 0;
      swift_willThrow();
    }
  }
LABEL_44:
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_23AE7F538@<X0>(id a1@<X1>, uint64_t a2@<X0>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned int v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  ValueMetadata *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _OWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v43;
  __int128 v46;
  ValueMetadata *v47;
  _OWORD v48[2];
  _QWORD *v49;

  objc_msgSend(a1, sel_columns);
  sub_23AAB0F80();
  v7 = (_QWORD *)sub_23B1C6230();
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
  {
LABEL_33:
    sub_23AE4F780((uint64_t)v7, a4);
    return swift_bridgeObjectRelease();
  }
  v43 = a4;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (2)
  {
    v10 = (a3 + v9);
    if (__OFADD__(a3, (_DWORD)v9))
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      sub_23B1C7418();
      __break(1u);
LABEL_40:
      sub_23B1C7040();
      __break(1u);
      JUMPOUT(0x23AE7F9F4);
    }
    v11 = *(_BYTE *)(a2 + v9 + 32);
    switch(v11)
    {
      case 0x1Cu:
      case 0x1Du:
        type metadata accessor for NSFileProviderItemIdentifier(0);
        v47 = v18;
        v19 = a1;
        v20 = objc_msgSend(v19, sel_stringAtIndex_, v10);
        if (!v20)
        {
          sub_23B1C63E0();
          v20 = (id)sub_23B1C63BC();
          swift_bridgeObjectRelease();
        }

        *(_QWORD *)&v46 = v20;
        goto LABEL_18;
      case 0x1Eu:
        v47 = &type metadata for Filename;
        v13 = objc_msgSend(a1, sel_stringAtIndex_, (a3 + v9));
        v14 = sub_23B1C63E0();
        v16 = v15;

        goto LABEL_17;
      case 0x1Fu:
        v17 = (unint64_t)objc_msgSend(a1, sel_longLongAtIndex_, (a3 + v9));
        v47 = (ValueMetadata *)MEMORY[0x24BEE4568];
        if ((v17 & 0x8000000000000000) != 0)
          goto LABEL_40;
        *(_QWORD *)&v46 = v17;
        goto LABEL_18;
      case 0x20u:
        v12 = objc_msgSend(a1, sel_unsignedIntAtIndex_, (a3 + v9));
        v47 = (ValueMetadata *)MEMORY[0x24BEE44F0];
        LODWORD(v46) = v12;
        goto LABEL_18;
      case 0x21u:
        v47 = &type metadata for FPItemVersionData;
        v21 = a1;
        v22 = objc_msgSend(v21, sel_dataAtIndex_, v10);
        v23 = sub_23B1C5AD4();
        v25 = v24;

        *(_QWORD *)&v46 = v23;
        *((_QWORD *)&v46 + 1) = v25;
        goto LABEL_18;
      case 0x22u:
        v47 = &type metadata for FPItemVersionData;
        v26 = a1;
        v27 = objc_msgSend(v26, sel_dataAtIndex_, v10);
        v14 = sub_23B1C5AD4();
        v16 = v28;

LABEL_17:
        *(_QWORD *)&v46 = v14;
        *((_QWORD *)&v46 + 1) = v16;
        goto LABEL_18;
      default:
        sub_23AAB096C(*(_BYTE *)(a2 + v9 + 32));
        if (!v4)
        {
          if (v47)
          {
LABEL_18:
            sub_23AAA159C(&v46, v48);
            sub_23AAA15AC((uint64_t)v48, (uint64_t)&v46);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v49 = v7;
            v31 = sub_23AAAFD94(v11);
            v32 = v7[2];
            v33 = (v30 & 1) == 0;
            v34 = v32 + v33;
            if (__OFADD__(v32, v33))
              goto LABEL_37;
            v35 = v30;
            if (v7[3] >= v34)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v7 = v49;
                if ((v30 & 1) == 0)
                  goto LABEL_27;
              }
              else
              {
                sub_23B18AFF8();
                v7 = v49;
                if ((v35 & 1) == 0)
                  goto LABEL_27;
              }
            }
            else
            {
              sub_23AD18414(v34, isUniquelyReferenced_nonNull_native);
              v36 = sub_23AAAFD94(v11);
              if ((v35 & 1) != (v37 & 1))
                goto LABEL_39;
              v31 = v36;
              v7 = v49;
              if ((v35 & 1) == 0)
              {
LABEL_27:
                v7[(v31 >> 6) + 8] |= 1 << v31;
                *(_BYTE *)(v7[6] + v31) = v11;
                sub_23AAA159C(&v46, (_OWORD *)(v7[7] + 32 * v31));
                v39 = v7[2];
                v40 = __OFADD__(v39, 1);
                v41 = v39 + 1;
                if (v40)
                  goto LABEL_38;
                v7[2] = v41;
                goto LABEL_29;
              }
            }
            v38 = (_OWORD *)(v7[7] + 32 * v31);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
            sub_23AAA159C(&v46, v38);
LABEL_29:
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
            goto LABEL_30;
          }
          sub_23AA8A05C((uint64_t)&v46, qword_2542E5640);
LABEL_30:
          if (v9 == 0x7FFFFFFF)
            goto LABEL_36;
          if (v8 == ++v9)
          {
            swift_bridgeObjectRelease();
            a4 = v43;
            goto LABEL_33;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_23AE7FA2C(void *a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = WORD1(a2);
  if ((a2 & 0x100) != 0)
  {
    v8 = 14959;
    sub_23AB5692C(a1, a2, 1);
    sub_23AA96F18((uint64_t)a1, a2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v6 = sub_23AE063CC(v4);
    (*(void (**)(void))(v6 + 168))();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 14953;
    sub_23AB5692C(a1, a2, 0);
    sub_23AA7B734();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v5 = sub_23AE063CC(v4);
    (*(void (**)(void))(v5 + 168))();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AB7C6B4(a1, a2, 0);
  }
  return v8;
}

uint64_t sub_23AE7FB68(void *a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v4 = WORD1(a2);
  if ((a2 & 0x100) != 0)
  {
    v8 = 14959;
    sub_23AA88218(a1, a2, 1);
    sub_23AA7B734();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v6 = sub_23AE063CC(v4);
    (*(void (**)(void))(v6 + 168))();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AA862DC(a1, a2, 1);
  }
  else
  {
    v8 = 14953;
    sub_23AA88218(a1, a2, 0);
    sub_23AA96F18((uint64_t)a1, a2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v5 = sub_23AE063CC(v4);
    (*(void (**)(void))(v5 + 168))();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_23AE7FCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  uint64_t result;
  double v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v42 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v42 - v10;
  v12 = sub_23B1C5BDC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v17 = v16;
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v19 = v17 * 1000000000.0;
  if ((~COERCE__INT64(v17 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = (uint64_t)v19;
  result = swift_beginAccess();
  if ((*(_BYTE *)(v1 + 88) & 1) != 0)
  {
    v21 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v22 = sub_23B1C5E40();
    v23 = sub_23B1C6A94();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_23AA66000, v22, v23, "🔮 setting maximum downloads allowed", v24, 2u);
      MEMORY[0x23B8614BC](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
LABEL_13:
    v33 = 0;
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = v20;
    *(_BYTE *)(v1 + 88) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    goto LABEL_15;
  }
  v25 = *(_QWORD *)(v1 + 80);
  v26 = *(_QWORD *)(v1 + 128);
  v27 = __OFADD__(v25, v26);
  v28 = v25 + v26;
  if (v27)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  if (v28 < v20)
  {
    v29 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v30 = sub_23B1C5E40();
    v31 = sub_23B1C6A94();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23AA66000, v30, v31, "🔮 resetting maximum downloads allowed", v32, 2u);
      MEMORY[0x23B8614BC](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    goto LABEL_13;
  }
  v33 = *(_QWORD *)(v1 + 72);
LABEL_15:
  v34 = *(_QWORD *)(v1 + 152);
  if (v33 < v34)
  {
    result = v34 - v33;
    if (!__OFSUB__(v34, v33))
      return result;
    goto LABEL_30;
  }
  v35 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v36 = sub_23B1C5E40();
  v37 = sub_23B1C6A94();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_23AA66000, v36, v37, "🔮 reached maximum downloads allowed", v38, 2u);
    MEMORY[0x23B8614BC](v38, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  if ((*(_BYTE *)(v1 + 88) & 1) != 0)
    return 0;
  v39 = *(_QWORD *)(v1 + 80);
  v40 = *(_QWORD *)(v1 + 128);
  result = v39 + v40;
  if (__OFADD__(v39, v40))
    goto LABEL_31;
  v41 = v42;
  result = sub_23AE81994(result);
  if (!v41)
    return 0;
  return result;
}

uint64_t sub_23AE8007C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v1;
  v5 = sub_23B1C5E4C();
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v31 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v31 - v15;
  result = sub_23B1C5BB8();
  if ((unsigned __int128)(*(uint64_t *)(v3 + 136) * (__int128)-86400) >> 64 == (-86400 * *(_QWORD *)(v3 + 136)) >> 63)
  {
    v33 = v5;
    sub_23B1C5B58();
    v32 = *(void (**)(char *, uint64_t))(v8 + 8);
    v32(v14, v7);
    v18 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v16, v7);
    v19 = sub_23B1C5E40();
    v20 = sub_23B1C6A94();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v31[2] = v3;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v31[3] = a1;
      v24 = v23;
      v37 = v23;
      v31[4] = v2;
      *(_DWORD *)v22 = 136446210;
      v31[1] = v22 + 4;
      sub_23AA7E38C((unint64_t *)&unk_2542E0240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v25 = sub_23B1C7304();
      v36 = sub_23AABEC68(v25, v26, &v37);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v27 = v32;
      v32(v11, v7);
      _os_log_impl(&dword_23AA66000, v19, v20, "🔮  refreshing speculative set with threshold %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v24, -1, -1);
      MEMORY[0x23B8614BC](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
      v28 = v27;
    }
    else
    {
      v28 = v32;
      v32(v11, v7);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
    }
    sub_23AE803A4((uint64_t)v16);
    v30 = v29;
    v28(v16, v7);
    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23AE803A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t i;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *__return_ptr, void **, uint64_t);
  id v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  void *v57;
  int v58;
  id v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _OWORD *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  _BYTE *v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  double v101;
  double v102;
  double v103;
  int64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t j;
  unint64_t v111;
  int64_t v112;
  id v113;
  id v114;
  char *v115;
  double v116;
  double v117;
  void (*v118)(char *, uint64_t);
  double v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  double v123;
  double v124;
  double v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int64_t v135;
  _OWORD *v136;
  void (*v137)(uint64_t *__return_ptr, void **, uint64_t);
  uint64_t v138;
  uint64_t v139;
  id v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  int64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  int64_t v148;
  __int128 v149;
  _QWORD *v150;
  _QWORD v151[62];
  _BYTE v152[496];
  _BYTE v153[504];
  _BYTE v154[504];
  void *v155;
  __int16 v156;
  uint64_t v157[63];
  _OWORD v158[12];
  uint64_t v159;
  _BYTE v160[248];
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  _OWORD v167[31];
  _BYTE v168[504];
  _BYTE v169[504];
  id v170;
  __int16 v171;
  _QWORD v172[63];
  id v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _BYTE v177[512];

  v3 = MEMORY[0x24BDAC7A8](a1);
  v4 = v2;
  v139 = v5;
  v7 = v6;
  v8 = v3;
  v146 = sub_23B1C5BDC();
  v142 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v145 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v10);
  v141 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C60EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v1 + 64);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v17 = v16;
  LOBYTE(v16) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  v18 = sub_23AE8764C(v8, v7);
  if (v2)
    return;
  v176 = v18;
  v175 = MEMORY[0x24BEE4B08];
  v19 = *(_QWORD *)(v1 + 24);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
  v21 = *(_QWORD *)(swift_dynamicCastClassUnconditional() + 40);
  swift_retain();
  swift_retain();
  sub_23B1BD8CC(64, v21, v1, (uint64_t)&v175, &v176);
  v148 = v19;
  *(_QWORD *)&v149 = v20;
  v147 = v1;
  swift_release();
  v22 = v175;
  v23 = v175 + 56;
  v24 = 1 << *(_BYTE *)(v175 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & *(_QWORD *)(v175 + 56);
  v150 = (_QWORD *)((unint64_t)(v24 + 63) >> 6);
  swift_bridgeObjectRetain();
  v27 = 0;
  if (!v26)
    goto LABEL_7;
LABEL_6:
  v28 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  for (i = v28 | (v27 << 6); ; i = __clz(__rbit64(v31)) + (v27 << 6))
  {
    v34 = *(_QWORD *)(v22 + 48) + 16 * i;
    v35 = *(void **)v34;
    v36 = *(unsigned __int8 *)(v34 + 8);
    swift_dynamicCastClassUnconditional();
    swift_retain();
    sub_23AEA3208(v35, v36, 0x40uLL);
    swift_release();
    if (v26)
      goto LABEL_6;
LABEL_7:
    v30 = __OFADD__(v27++, 1);
    if (v30)
    {
      __break(1u);
      goto LABEL_118;
    }
    if (v27 >= (uint64_t)v150)
    {
      v32 = v147;
LABEL_26:
      v37 = MEMORY[0x24BEE4B08];
      swift_release();
      v38 = v176;
      v39 = *(_QWORD *)(v176 + 56);
      v134 = v176 + 56;
      v40 = 1 << *(_BYTE *)(v176 + 32);
      v41 = -1;
      if (v40 < 64)
        v41 = ~(-1 << v40);
      v174 = v37;
      v42 = v41 & v39;
      v135 = (unint64_t)(v40 + 63) >> 6;
      v130 = v160;
      v131 = (char *)&v167[30];
      swift_bridgeObjectRetain();
      v128 = 0;
      v129 = v38;
      v43 = 0;
      v44 = (uint64_t)v141;
      v136 = &v167[15];
      while (1)
      {
        while (1)
        {
          while (1)
          {
            if (v42)
            {
              v143 = (v42 - 1) & v42;
              v144 = v43;
              v45 = __clz(__rbit64(v42)) | (v43 << 6);
            }
            else
            {
              v30 = __OFADD__(v43, 1);
              v46 = v43 + 1;
              if (v30)
                goto LABEL_125;
              if (v46 >= v135)
              {
LABEL_87:
                swift_release();
                v104 = 0;
                v105 = *(_QWORD *)(v174 + 56);
                v144 = v174 + 56;
                v150 = (_QWORD *)v174;
                v106 = 1 << *(_BYTE *)(v174 + 32);
                v107 = -1;
                if (v106 < 64)
                  v107 = ~(-1 << v106);
                v108 = v107 & v105;
                v148 = (unint64_t)(v106 + 63) >> 6;
                v149 = xmmword_23B1DA910;
                if ((v107 & v105) == 0)
                  goto LABEL_91;
LABEL_90:
                v109 = __clz(__rbit64(v108));
                v108 &= v108 - 1;
                for (j = v109 | (v104 << 6); ; j = __clz(__rbit64(v111)) + (v104 << 6))
                {
                  v113 = *(id *)(v150[6] + 8 * j);
                  sub_23AE4F234();
                  v114 = v113;
                  v115 = v145;
                  sub_23B1C5BD0();
                  sub_23B1C5B94();
                  v117 = v116;
                  v118 = *(void (**)(char *, uint64_t))(v142 + 8);
                  v118(v115, v146);
                  v119 = v117 * 1000000000.0;
                  if ((~COERCE__INT64(v117 * 1000000000.0) & 0x7FF0000000000000) == 0)
                    break;
                  if (v119 <= -9.22337204e18)
                    goto LABEL_120;
                  if (v119 >= 9.22337204e18)
                    goto LABEL_121;
                  v120 = (uint64_t)v119;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6240);
                  v121 = swift_allocObject();
                  *(_QWORD *)(v121 + 24) = 0;
                  *(_QWORD *)(v121 + 32) = 0;
                  *(_QWORD *)(v121 + 16) = 0;
                  *(_BYTE *)(v121 + 40) = 1;
                  *(_OWORD *)(v121 + 48) = 0u;
                  *(_OWORD *)(v121 + 64) = 0u;
                  *(_QWORD *)(v121 + 80) = 0;
                  *(_QWORD *)(v121 + 112) = 0;
                  *(_QWORD *)(v121 + 120) = v120;
                  *(_QWORD *)(v121 + 128) = 0x4000000000;
                  *(_QWORD *)(v121 + 136) = v114;
                  *(_OWORD *)(v121 + 88) = v149;
                  *(_BYTE *)(v121 + 104) = 0;
                  sub_23AAAEE10((void *)0x40100, 0, 0);
                  v122 = v145;
                  sub_23B1C5BD0();
                  sub_23B1C5B94();
                  v124 = v123;
                  v118(v122, v146);
                  v125 = v124 * 1000000000.0;
                  if ((~COERCE__INT64(v124 * 1000000000.0) & 0x7FF0000000000000) == 0)
                    goto LABEL_122;
                  if (v125 <= -9.22337204e18)
                    goto LABEL_123;
                  if (v125 >= 9.22337204e18)
                    goto LABEL_124;
                  sub_23ADF3AAC(v121, (uint64_t)v125);
                  swift_release();
                  swift_release();

                  if (v108)
                    goto LABEL_90;
LABEL_91:
                  v30 = __OFADD__(v104++, 1);
                  if (v30)
                    goto LABEL_127;
                  if (v104 >= v148)
                  {
LABEL_116:
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    return;
                  }
                  v111 = *(_QWORD *)(v144 + 8 * v104);
                  if (!v111)
                  {
                    v112 = v104 + 1;
                    if (v104 + 1 >= v148)
                      goto LABEL_116;
                    v111 = *(_QWORD *)(v144 + 8 * v112);
                    if (!v111)
                    {
                      v112 = v104 + 2;
                      if (v104 + 2 >= v148)
                        goto LABEL_116;
                      v111 = *(_QWORD *)(v144 + 8 * v112);
                      if (!v111)
                      {
                        v112 = v104 + 3;
                        if (v104 + 3 >= v148)
                          goto LABEL_116;
                        v111 = *(_QWORD *)(v144 + 8 * v112);
                        if (!v111)
                        {
                          while (1)
                          {
                            v104 = v112 + 1;
                            if (__OFADD__(v112, 1))
                              goto LABEL_129;
                            if (v104 >= v148)
                              goto LABEL_116;
                            v111 = *(_QWORD *)(v144 + 8 * v104);
                            ++v112;
                            if (v111)
                              goto LABEL_101;
                          }
                        }
                      }
                    }
                    v104 = v112;
                  }
LABEL_101:
                  v108 = (v111 - 1) & v111;
                }
                goto LABEL_119;
              }
              v47 = *(_QWORD *)(v134 + 8 * v46);
              if (!v47)
              {
                v48 = v46 + 1;
                if (v46 + 1 >= v135)
                  goto LABEL_87;
                v47 = *(_QWORD *)(v134 + 8 * v48);
                if (!v47)
                {
                  v48 = v46 + 2;
                  if (v46 + 2 >= v135)
                    goto LABEL_87;
                  v47 = *(_QWORD *)(v134 + 8 * v48);
                  if (!v47)
                  {
                    v48 = v46 + 3;
                    if (v46 + 3 >= v135)
                      goto LABEL_87;
                    v47 = *(_QWORD *)(v134 + 8 * v48);
                    if (!v47)
                    {
                      while (1)
                      {
                        v46 = v48 + 1;
                        if (__OFADD__(v48, 1))
                          break;
                        if (v46 >= v135)
                          goto LABEL_87;
                        v47 = *(_QWORD *)(v134 + 8 * v46);
                        ++v48;
                        if (v47)
                          goto LABEL_44;
                      }
                      __break(1u);
LABEL_129:
                      __break(1u);
LABEL_130:
                      __break(1u);
LABEL_131:
                      __break(1u);
LABEL_132:
                      __break(1u);
LABEL_133:
                      __break(1u);
                      return;
                    }
                  }
                }
                v46 = v48;
              }
LABEL_44:
              v143 = (v47 - 1) & v47;
              v144 = v46;
              v45 = __clz(__rbit64(v47)) + (v46 << 6);
            }
            v173 = *(id *)(*(_QWORD *)(v38 + 48) + 8 * v45);
            v49 = *(_QWORD *)(v32 + 16);
            v170 = v173;
            v171 = 256;
            v50 = *(void (**)(uint64_t *__return_ptr, void **, uint64_t))(*(_QWORD *)v49 + 168);
            v140 = v173;
            v51 = v173;
            v137 = v50;
            v138 = v49;
            v50(v172, &v170, 1);

            sub_23AA724E8((uint64_t)v172, (uint64_t)v168, (uint64_t *)&unk_2542E4CB0);
            sub_23AA724E8((uint64_t)v168, (uint64_t)v169, (uint64_t *)&unk_2542E4CB0);
            if (sub_23AAFC2A4((uint64_t)v169) == 1)
              goto LABEL_30;
            memcpy(v167, v172, sizeof(v167));
            v52 = *(_QWORD *)&v167[28];
            v53 = *(_QWORD *)(*(_QWORD *)&v167[28] + 16);
            v150 = v51;
            if (v53)
            {
              v133 = 0;
              sub_23AAFC2BC((uint64_t)v136);
              sub_23ACF4048((uint64_t)v167);
              v157[0] = MEMORY[0x24BEE4AF8];
              swift_bridgeObjectRetain();
              v54 = v52;
              sub_23ADACE74(0, v53, 0);
              v55 = v157[0];
              v132 = v54;
              v56 = (unsigned __int8 *)(v54 + 41);
              do
              {
                v57 = *(void **)(v56 - 9);
                v58 = *v56;
                if (v58 == 1)
                {
                  v59 = v57;
                  v60 = 0;
                }
                else
                {
                  v60 = *(v56 - 1);
                }
                v157[0] = v55;
                v62 = *(_QWORD *)(v55 + 16);
                v61 = *(_QWORD *)(v55 + 24);
                if (v62 >= v61 >> 1)
                {
                  sub_23ADACE74(v61 > 1, v62 + 1, 1);
                  v55 = v157[0];
                }
                v56 += 16;
                *(_QWORD *)(v55 + 16) = v62 + 1;
                v63 = v55 + 16 * v62;
                *(_QWORD *)(v63 + 32) = v57;
                *(_BYTE *)(v63 + 40) = v60;
                *(_BYTE *)(v63 + 41) = v58 ^ 1;
                --v53;
                v51 = v150;
              }
              while (v53);
              swift_bridgeObjectRelease();
              sub_23AAFC3AC((uint64_t)v167);
              v4 = v133;
              v32 = v147;
              v44 = (uint64_t)v141;
              v38 = v129;
              v64 = v136;
            }
            else
            {
              v64 = v136;
              sub_23AAFC2BC((uint64_t)v136);
              sub_23ACF4048((uint64_t)v167);
              sub_23AAFC3AC((uint64_t)v167);
              v55 = MEMORY[0x24BEE4AF8];
            }
            v65 = v64[11];
            v158[10] = v64[10];
            v158[11] = v65;
            v66 = v64[7];
            v158[6] = v64[6];
            v158[7] = v66;
            v67 = v64[9];
            v158[8] = v64[8];
            v158[9] = v67;
            v68 = v64[3];
            v158[2] = v64[2];
            v158[3] = v68;
            v69 = v64[5];
            v158[4] = v64[4];
            v158[5] = v69;
            v70 = v64[1];
            v158[0] = *v64;
            v158[1] = v70;
            v71 = v167[11];
            v72 = v167[13];
            v73 = v167[14];
            v74 = v130;
            *((_OWORD *)v130 + 12) = v167[12];
            v74[13] = v72;
            v74[14] = v73;
            v75 = v167[7];
            v76 = v167[9];
            v77 = v167[10];
            v74[8] = v167[8];
            v74[9] = v76;
            v74[10] = v77;
            v74[11] = v71;
            v78 = v167[3];
            v79 = v167[5];
            v80 = v167[6];
            v74[4] = v167[4];
            v74[5] = v79;
            v74[6] = v80;
            v74[7] = v75;
            v81 = v167[1];
            v82 = v167[2];
            *v74 = v167[0];
            v74[1] = v81;
            v83 = BYTE8(v167[27]);
            v84 = *((_QWORD *)&v167[28] + 1);
            v85 = *(_QWORD *)&v167[29];
            v86 = *v131;
            v87 = *((_QWORD *)&v167[30] + 1);
            v159 = *((_QWORD *)v64 + 24);
            v74[2] = v82;
            v74[3] = v78;
            v160[240] = v83;
            v161 = v55;
            v162 = v84;
            v163 = v85;
            v164 = 0;
            v165 = v86;
            v166 = v87;
            if (BYTE8(v167[0]) != 255)
              break;
            (*(void (**)(uint64_t *__return_ptr, id *))(**(_QWORD **)(v32 + 40) + 280))(v157, &v173);
            if (v4)
              goto LABEL_114;
            v88 = (void *)v157[0];
            if (!v157[0])
            {
              sub_23AAFCF50((uint64_t)v158);
LABEL_30:

              goto LABEL_31;
            }
            v89 = sub_23B1C63E0();
            v91 = v90;
            if (v89 == sub_23B1C63E0() && v91 == v92)
            {

              swift_bridgeObjectRelease_n();
LABEL_64:
              sub_23AAFCF50((uint64_t)v158);

              goto LABEL_31;
            }
            v93 = sub_23B1C7388();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v93 & 1) != 0)
            {

              goto LABEL_64;
            }
            v155 = v88;
            v156 = 256;
            v51 = v88;
            v137(v157, &v155, 1);

            sub_23AA724E8((uint64_t)v157, (uint64_t)v153, (uint64_t *)&unk_2542E4CB0);
            sub_23AA724E8((uint64_t)v153, (uint64_t)v154, (uint64_t *)&unk_2542E4CB0);
            if (sub_23AAFC2A4((uint64_t)v154) == 1)
            {
              v94 = v158;
LABEL_73:
              sub_23AAFCF50((uint64_t)v94);

              goto LABEL_30;
            }
            memcpy(v177, v157, 0x1F0uLL);
            sub_23AFFD9BC((uint64_t)v151);
            sub_23AAFC3AC((uint64_t)v177);
            memcpy(v152, v151, sizeof(v152));
            if (v152[96] == 2)
            {
              sub_23AAFCF50((uint64_t)v158);
              v94 = v152;
              goto LABEL_73;
            }
            v95 = v51;
            sub_23ADE0CE4(v151, v95);
            sub_23AAFCF50((uint64_t)v152);
            sub_23AAFCF50((uint64_t)v158);
            v96 = (void *)v151[0];

LABEL_31:
            v42 = v143;
            v43 = v144;
          }
          v157[0] = *(_QWORD *)&v167[0];
          LOBYTE(v157[1]) = BYTE8(v167[0]);
          (*(void (**)(uint64_t *, uint64_t))(**(_QWORD **)(v32 + 32) + 240))(v157, 1);
          if (v4)
          {
LABEL_114:
            sub_23AAFCF50((uint64_t)v158);
            swift_release();

            goto LABEL_115;
          }
          v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 48))(v44, 1, v97) == 1)
          {
            sub_23AA8A05C(v44, (uint64_t *)&unk_2542E4750);
            goto LABEL_84;
          }
          v98 = v44 + *(int *)(v97 + 48);
          LODWORD(v98) = *(unsigned __int8 *)(v98 + *(int *)(type metadata accessor for ItemMetadata() + 80));
          sub_23AA8A05C(v44, (uint64_t *)&unk_2542E6B00);
          if ((_DWORD)v98 == 1)
            break;
LABEL_84:
          v43 = v144;
          sub_23AAFCF50((uint64_t)v158);

          v42 = v143;
        }
        v99 = v139 - 1;
        if (v139 >= 1)
        {
          swift_dynamicCastClassUnconditional();
          swift_retain();
          v100 = v145;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v102 = v101;
          (*(void (**)(char *, uint64_t))(v142 + 8))(v100, v146);
          v103 = v102 * 1000000000.0;
          if ((~COERCE__INT64(v102 * 1000000000.0) & 0x7FF0000000000000) == 0)
            goto LABEL_130;
          if (v103 <= -9.22337204e18)
            goto LABEL_131;
          if (v103 >= 9.22337204e18)
            goto LABEL_132;
          sub_23AEA241C(v157[0], LOBYTE(v157[1]), 0x40uLL, (uint64_t)v103, -1, -1);
          swift_release();
          v139 = v99;
          v44 = (uint64_t)v141;
          goto LABEL_84;
        }
        sub_23AAFCF50((uint64_t)v158);

        v30 = __OFADD__(v128++, 1);
        if (v30)
          goto LABEL_133;
        v44 = (uint64_t)v141;
        v42 = v143;
        v43 = v144;
      }
    }
    v31 = *(_QWORD *)(v23 + 8 * v27);
    v32 = v147;
    if (v31)
      goto LABEL_17;
    v33 = v27 + 1;
    if (v27 + 1 >= (uint64_t)v150)
      goto LABEL_26;
    v31 = *(_QWORD *)(v23 + 8 * v33);
    if (!v31)
    {
      v33 = v27 + 2;
      if (v27 + 2 >= (uint64_t)v150)
        goto LABEL_26;
      v31 = *(_QWORD *)(v23 + 8 * v33);
      if (!v31)
      {
        v33 = v27 + 3;
        if (v27 + 3 >= (uint64_t)v150)
          goto LABEL_26;
        v31 = *(_QWORD *)(v23 + 8 * v33);
        if (!v31)
          break;
      }
    }
    v27 = v33;
LABEL_17:
    v26 = (v31 - 1) & v31;
  }
  while (1)
  {
    v27 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v27 >= (uint64_t)v150)
      goto LABEL_26;
    v31 = *(_QWORD *)(v23 + 8 * v27);
    ++v33;
    if (v31)
      goto LABEL_17;
  }
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
  swift_release();
  sub_23AAFCF50((uint64_t)v158);
  v126 = v173;
  swift_release();

LABEL_115:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_23AE812FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v0;
  v21 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C60EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(*(_QWORD *)(v2 + 96) + 64);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  result = sub_23AE7FCA4();
  if (!v1 && result >= 1)
  {
    v13 = sub_23AE8007C(result);
    sub_23AE2C874();
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v15 = v14;
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v21);
    v16 = v15 * 1000000000.0;
    if ((~COERCE__INT64(v15 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v16 > -9.22337204e18)
      {
        if (v16 < 9.22337204e18)
        {
          v17 = (uint64_t)v16;
          v18 = swift_beginAccess();
          *(_QWORD *)(v2 + 56) = v17;
          *(_BYTE *)(v2 + 64) = 0;
          if (v13 < 1)
          {
            *(_BYTE *)(v2 + 48) = 0;
            *(_BYTE *)(v2 + 40) = 1;
            return sub_23AE8243C(v18);
          }
          *(_BYTE *)(v2 + 48) = 1;
          *(_BYTE *)(v2 + 40) = 1;
          if ((*(_BYTE *)(v2 + 88) & 1) != 0)
            return sub_23AE8243C(v18);
          v19 = *(_QWORD *)(v2 + 80);
          v20 = *(_QWORD *)(v2 + 128);
          result = v19 + v20;
          if (!__OFADD__(v19, v20))
          {
            v18 = sub_23AE81994(result);
            return sub_23AE8243C(v18);
          }
          goto LABEL_18;
        }
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        return result;
      }
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_23AE81544()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 160))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B1C6BCC();
    swift_unknownObjectRelease();
    if (*(_QWORD *)(v0 + 160))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_23B1C6BA8();
      swift_unknownObjectRelease();
    }
  }
  *(_QWORD *)(v0 + 160) = 0;
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 168) = 0;
  result = swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 176) = 0;
  *(_BYTE *)(v0 + 184) = 1;
  return result;
}

uint64_t sub_23AE815EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v7 = sub_23B1C5E40();
  v8 = sub_23B1C6A94();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23AA66000, v7, v8, "🔮  disabling scheduler", v9, 2u);
    MEMORY[0x23B8614BC](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (*(_BYTE *)(v1 + 185) == 1)
  {
    if (qword_2542E4C20 != -1)
      swift_once();
    objc_msgSend((id)qword_2542EDD60, sel_removeWatcher_, v1);
    *(_BYTE *)(v1 + 185) = 0;
  }
  return sub_23AE81544();
}

uint64_t sub_23AE81744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C60EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(*(_QWORD *)(v1 + 96) + 64);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
LABEL_4:
    result = sub_23AFE9F34((uint64_t)sub_23AB6FFCC, 0);
    if ((result & 1) != 0)
      return sub_23AE812FC();
    return result;
  }
  sub_23AE81544();
  if (*(_BYTE *)(v1 + 185) == 1)
  {
    if (qword_2542E4C20 == -1)
      goto LABEL_4;
    goto LABEL_13;
  }
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v14 = sub_23B1C5E40();
  v15 = sub_23B1C6A94();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_23AA66000, v14, v15, "🔮  waiting for background scheduler", v16, 2u);
    MEMORY[0x23B8614BC](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_BYTE *)(v1 + 185) = 1;
  if (qword_2542E4C20 != -1)
    swift_once();
  return (uint64_t)objc_msgSend((id)qword_2542EDD60, sel_addWatcher_, v1);
}

uint64_t sub_23AE81994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  double v22;
  uint64_t result;
  double v24;
  int64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  dispatch_time_t v47;
  dispatch_time_t v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  _QWORD v53[2];
  uint64_t v54;
  int64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = v1;
  v4 = sub_23B1C60A4();
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v56 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C6B78();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v62 - 8);
  v9 = MEMORY[0x24BDAC7A8](v62);
  v11 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v53 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v53 - v15;
  v17 = sub_23B1C5BDC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v22 = v21;
  result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v24 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v25 = a1 - (uint64_t)v24;
  if (__OFSUB__(a1, (uint64_t)v24))
  {
LABEL_24:
    __break(1u);
    return result;
  }
  if ((*(_BYTE *)(v2 + 184) & 1) != 0 || *(_QWORD *)(v2 + 176) > a1)
  {
    v26 = *(_QWORD *)(v2 + 192);
    v27 = (id)fpfs_current_or_default_log();
    if (v26 < 1)
    {
      sub_23B1C5E58();
      v32 = sub_23B1C5E40();
      v33 = sub_23B1C6A94();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v54 = v35;
        v55 = v25;
        *(_DWORD *)v34 = 136446210;
        v53[1] = v34 + 4;
        v63 = a1 / 1000000000;
        v64 = v35;
        sub_23AB55910();
        v36 = sub_23B1C6D70();
        v63 = sub_23AABEC68(v36, v37, &v64);
        v25 = v55;
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v32, v33, "🔮  pacing scheduler until %{public}s", v34, 0xCu);
        v38 = v54;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v38, -1, -1);
        MEMORY[0x23B8614BC](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v62);
      sub_23AE81544();
      *(_QWORD *)(v2 + 176) = a1;
      *(_BYTE *)(v2 + 184) = 0;
      sub_23B1C6458();
      v39 = os_transaction_create();
      swift_release();
      *(_QWORD *)(v2 + 168) = v39;
      swift_unknownObjectRelease();
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
      v40 = *(void **)(*(_QWORD *)(v2 + 96) + 64);
      v64 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&qword_2542E1F80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
      v41 = v40;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1EF0);
      sub_23AAB5A28((unint64_t *)&qword_2542E1F00, (uint64_t *)&unk_2542E1EF0, MEMORY[0x24BEE12C8]);
      v42 = v59;
      v43 = v61;
      sub_23B1C6DE8();
      v44 = sub_23B1C6B84();

      (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v43);
      *(_QWORD *)(v2 + 160) = v44;
      result = swift_unknownObjectRelease();
      if (*(_QWORD *)(v2 + 160))
      {
        swift_getObjectType();
        v45 = swift_allocObject();
        swift_weakInit();
        swift_unknownObjectRetain();
        swift_retain();
        v46 = (uint64_t)v56;
        sub_23B1C6080();
        sub_23AA78928(0, v46, (uint64_t)sub_23AEB1CE8, v45);
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v46, v58);
        result = swift_release();
        if (*(_QWORD *)(v2 + 160))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v47 = dispatch_time(0x8000000000000000, 0);
          v48 = dispatch_time(v47, v25);
          sub_23AFAA444(v48);
          result = swift_unknownObjectRelease();
          if (*(_QWORD *)(v2 + 160))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            sub_23B1C6BB4();
            return swift_unknownObjectRelease();
          }
        }
      }
    }
    else
    {
      sub_23B1C5E58();
      v28 = sub_23B1C5E40();
      v29 = sub_23B1C6A94();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_23AA66000, v28, v29, "🔮  pacing scheduler timer bypassed", v30, 2u);
        MEMORY[0x23B8614BC](v30, -1, -1);
      }

      v31 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v62);
      return sub_23AE81744(v31);
    }
  }
  else
  {
    v49 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v50 = sub_23B1C5E40();
    v51 = sub_23B1C6A94();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_23AA66000, v50, v51, "🔮  pacer already registered", v52, 2u);
      MEMORY[0x23B8614BC](v52, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v16, v62);
  }
  return result;
}

uint64_t sub_23AE82058()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  v0 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v2 = result;
    sub_23AE81544();
    swift_retain();
    sub_23AE2BBEC((uint64_t)"timerRefresh(nextRefreshDate:)", 30, 2, (uint64_t)sub_23AEB1CF0, v2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23AE822DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v7 = v6;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = v7 * 1000000000.0;
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  result = swift_beginAccess();
  if ((*(_BYTE *)(v1 + 64) & 1) != 0)
    return sub_23AE81744();
  v10 = (uint64_t)v9;
  v11 = *(_QWORD *)(v1 + 56);
  if (v11 >= (uint64_t)v9)
    return sub_23AE81744();
  v12 = v10 - v11;
  if (__OFSUB__(v10, v11))
    goto LABEL_15;
  v13 = *(_QWORD *)(v1 + 120);
  v14 = __OFSUB__(v13, v12);
  v15 = v13 - v12;
  if (!v14)
  {
    if (v15 >= 1)
    {
      result = v11 + v13;
      if (!__OFADD__(v11, v13))
        return sub_23AE81994(result);
      goto LABEL_17;
    }
    return sub_23AE81744();
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

void sub_23AE8243C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  char v12;
  id v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C60EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(*(_QWORD *)(v1 + 96) + 64);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  v12 = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v12 & 1) != 0)
  {
    v25 = v3;
    v26 = v2;
    v13 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
    v14 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v15 = v13;
    v16 = sub_23B1C5E40();
    v17 = sub_23B1C6A94();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v1;
      v20 = (_QWORD *)v19;
      *(_DWORD *)v18 = 138543362;
      v21 = -[NSObject enter](v15, sel_enter);
      v27 = v21;
      sub_23B1C6CBC();
      *v20 = v21;

      _os_log_impl(&dword_23AA66000, v16, v17, "%{public}@ 🔮  reevaluating speculative scheduler state", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      v22 = v20;
      v1 = v24;
      MEMORY[0x23B8614BC](v22, -1, -1);
      MEMORY[0x23B8614BC](v18, -1, -1);
    }
    else
    {

      v16 = v15;
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
    swift_beginAccess();
    if ((*(_BYTE *)(v1 + 48) & 1) != 0)
    {
      v23 = v28;
      sub_23AE822DC();
      v28 = v23;
    }
    else
    {
      sub_23AE815EC();
    }
    sub_23AFF84B8(v15);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23AE826E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  unsigned int (*v69)(uint64_t, uint64_t, int *);
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  _BYTE *v75;
  uint64_t v76;
  void *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t result;
  uint64_t v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  int v85;
  uint64_t v86;
  unsigned int v87;
  char *v88;
  int v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  void *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  void *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void (*v119)(char *, uint64_t);
  char v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  char *v129;
  void *v130;
  _QWORD *v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  int *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;

  v162 = (char *)a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v154 = *(_QWORD *)(v1 - 8);
  v155 = (int *)v1;
  MEMORY[0x24BDAC7A8](v1);
  v153 = (char *)&v136 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_23B1C60EC();
  v139 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141);
  v140 = (uint64_t *)((char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v151 = sub_23B1C5BDC();
  v158 = *(_QWORD *)(v151 - 8);
  v7 = MEMORY[0x24BDAC7A8](v151);
  v137 = (char *)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v138 = (char *)&v136 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v145 = (char *)&v136 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v150 = (char *)&v136 - v13;
  v156 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v156);
  v152 = (uint64_t)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v142 = (uint64_t)&v136 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v143 = (uint64_t)&v136 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v149 = (char *)&v136 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v136 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v146 = (char *)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v144 = (uint64_t)&v136 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v147 = (uint64_t)&v136 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v148 = (uint64_t)&v136 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v136 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v160 = (uint64_t)&v136 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v159 = (uint64_t)&v136 - v41;
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v136 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v43);
  v48 = (char *)&v136 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v50 = (char *)&v136 - v49;
  sub_23AA8EFC8((uint64_t)v162, (uint64_t)&v136 - v49, (uint64_t *)&unk_2542DDFB0);
  v162 = v50;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    v60 = (uint64_t)v18;
    v64 = (uint64_t)v153;
    sub_23AA8EFC8((uint64_t)v162, (uint64_t)v45, (uint64_t *)&unk_2542DDFB0);
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
    v66 = (uint64_t)&v45[*(int *)(v65 + 48)];
    v67 = *(_QWORD *)&v45[*(int *)(v65 + 64)];
    v68 = v155;
    v69 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v154 + 48);
    if (v69(v66, 1, v155) == 1)
    {
      sub_23AA8A05C(v66, (uint64_t *)&unk_2542E4750);
      v70 = (uint64_t)v45;
      v71 = (uint64_t *)&unk_2542E4750;
LABEL_27:
      sub_23AA8A05C(v70, v71);
      return sub_23AA8A05C((uint64_t)v162, (uint64_t *)&unk_2542DDFB0);
    }
    v72 = (uint64_t)v45;
    v73 = (uint64_t)v5;
    sub_23AA724E8(v72, (uint64_t)v5, (uint64_t *)&unk_2542E4750);
    sub_23AA724E8(v66, v64, (uint64_t *)&unk_2542E6B00);
    v74 = v69((uint64_t)v5, 1, v68);
    v75 = (_BYTE *)(v64 + v68[12]);
    if (v74 == 1 || *v75 != 1)
    {
      if (*v75)
        goto LABEL_23;
      sub_23AA8EFC8((uint64_t)&v75[*(int *)(v156 + 116)], v60, (uint64_t *)&unk_2542E4310);
      v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v60, 1, v151);
      sub_23AA8A05C(v60, (uint64_t *)&unk_2542E4310);
      if (v89 == 1)
        goto LABEL_23;
      if (v69(v73, 1, v68) == 1 || (v67 & 0x10) == 0)
      {
        v121 = v161;
        if (v75[*(int *)(v156 + 80)] != 1 || (v67 & 0x20) == 0)
          goto LABEL_23;
        v76 = v157;
        v130 = *(void **)(*(_QWORD *)(v157 + 96) + 64);
        v131 = v140;
        *v140 = v130;
        v132 = v139;
        v119 = (void (*)(char *, uint64_t))v141;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v139 + 104))(v131, *MEMORY[0x24BEE5610], v141);
        v133 = v130;
        v120 = sub_23B1C6104();
        (*(void (**)(_QWORD *, _QWORD))(v132 + 8))(v131, v119);
        if ((v120 & 1) == 0)
        {
          __break(1u);
          goto LABEL_59;
        }
      }
      else
      {
        v76 = v157;
        v109 = *(void **)(*(_QWORD *)(v157 + 96) + 64);
        v110 = v140;
        *v140 = v109;
        v111 = v139;
        v112 = v141;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v139 + 104))(v110, *MEMORY[0x24BEE5610], v141);
        v113 = v109;
        LOBYTE(v109) = sub_23B1C6104();
        (*(void (**)(_QWORD *, uint64_t))(v111 + 8))(v110, v112);
        if ((v109 & 1) == 0)
        {
          __break(1u);
          goto LABEL_49;
        }
      }
    }
    else
    {
      if ((v75[*(int *)(v156 + 80)] & 1) != 0 || (v67 & 0x10) == 0)
        goto LABEL_23;
      v76 = v157;
      v77 = *(void **)(*(_QWORD *)(v157 + 96) + 64);
      v78 = v140;
      *v140 = v77;
      v79 = v139;
      v80 = v141;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v139 + 104))(v78, *MEMORY[0x24BEE5610], v141);
      v81 = v77;
      LOBYTE(v77) = sub_23B1C6104();
      result = (*(uint64_t (**)(_QWORD *, uint64_t))(v79 + 8))(v78, v80);
      if ((v77 & 1) == 0)
      {
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
    }
    swift_beginAccess();
    if ((*(_BYTE *)(v76 + 48) & 1) == 0)
    {
      *(_BYTE *)(v76 + 48) = 1;
      *(_BYTE *)(v76 + 40) = 1;
      sub_23AE8243C();
    }
LABEL_23:
    sub_23AA8A05C(v64, (uint64_t *)&unk_2542E6B00);
    v90 = (uint64_t *)&unk_2542E4750;
LABEL_40:
    sub_23AA8A05C(v73, v90);
    return sub_23AA8A05C((uint64_t)v162, (uint64_t *)&unk_2542DDFB0);
  }
  if (EnumCaseMultiPayload == 39)
  {
    sub_23AE24470();
    return sub_23AA8A05C((uint64_t)v162, (uint64_t *)&unk_2542DDFB0);
  }
  if (EnumCaseMultiPayload != 6)
    return sub_23AA8A05C((uint64_t)v162, (uint64_t *)&unk_2542DDFB0);
  sub_23AA8EFC8((uint64_t)v162, (uint64_t)v48, (uint64_t *)&unk_2542DDFB0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
  v53 = &v48[*(int *)(v52 + 48)];
  v54 = *(_QWORD *)&v48[*(int *)(v52 + 64)];
  v55 = v159;
  sub_23AA724E8((uint64_t)v48, v159, &qword_2542E4770);
  v56 = (uint64_t)v53;
  v57 = v160;
  sub_23AA724E8(v56, v160, &qword_2542E4770);
  if ((v54 & 0x40200000000002ALL) == 0)
  {
    sub_23AA8A05C(v57, &qword_2542E4770);
    v70 = v55;
LABEL_26:
    v71 = &qword_2542E4770;
    goto LABEL_27;
  }
  sub_23AA8EFC8(v55, (uint64_t)v38, &qword_2542E4770);
  v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48);
  if (v59(v38, 1, v58) == 1)
  {
    sub_23AA8A05C((uint64_t)v38, &qword_2542E4770);
    v60 = v151;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v26, 1, 1, v151);
    sub_23AA8A05C((uint64_t)v26, (uint64_t *)&unk_2542E4310);
    v61 = v160;
    v62 = v148;
    sub_23AA8EFC8(v160, v148, &qword_2542E4770);
    v63 = (uint64_t)v149;
  }
  else
  {
    v83 = v152;
    sub_23AA907B0((uint64_t)&v38[*(int *)(v58 + 48)], v152, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA8A05C((uint64_t)v38, (uint64_t *)&unk_2542E4760);
    sub_23AA8EFC8(v83 + *(int *)(v156 + 116), (uint64_t)v26, (uint64_t *)&unk_2542E4310);
    sub_23AA937BC(v83, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v158 + 48);
    v60 = v151;
    v85 = v84(v26, 1, v151);
    sub_23AA8A05C((uint64_t)v26, (uint64_t *)&unk_2542E4310);
    v61 = v160;
    v62 = v148;
    sub_23AA8EFC8(v160, v148, &qword_2542E4770);
    v63 = (uint64_t)v149;
    if (v85 != 1)
    {
      sub_23AA8A05C(v62, &qword_2542E4770);
      v88 = v150;
      v92 = v158;
      goto LABEL_31;
    }
  }
  v86 = v147;
  sub_23AA724E8(v62, v147, &qword_2542E4770);
  v87 = v59((char *)v86, 1, v58);
  v88 = v150;
  if (v87 == 1)
  {
    sub_23AA8A05C(v86, &qword_2542E4770);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v63, 1, 1, v60);
LABEL_25:
    sub_23AA8A05C(v63, (uint64_t *)&unk_2542E4310);
    sub_23AA8A05C(v61, &qword_2542E4770);
    v70 = v159;
    goto LABEL_26;
  }
  v91 = v152;
  sub_23AA907B0(v86 + *(int *)(v58 + 48), v152, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA8A05C(v86, (uint64_t *)&unk_2542E4760);
  sub_23AA8EFC8(v91 + *(int *)(v156 + 116), v63, (uint64_t *)&unk_2542E4310);
  sub_23AA937BC(v91, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v92 = v158;
  v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v158 + 48);
  if (v84((char *)v63, 1, v60) == 1)
    goto LABEL_25;
  sub_23AA8A05C(v63, (uint64_t *)&unk_2542E4310);
LABEL_31:
  v93 = v145;
  result = sub_23B1C5BB8();
  v94 = (uint64_t)v146;
  if ((unsigned __int128)(*(uint64_t *)(v157 + 136) * (__int128)-86400) >> 64 != (-86400 * *(_QWORD *)(v157 + 136)) >> 63)
  {
    __break(1u);
    goto LABEL_70;
  }
  sub_23B1C5B58();
  v155 = *(int **)(v92 + 8);
  ((void (*)(char *, uint64_t))v155)(v93, v60);
  v95 = v144;
  sub_23AA8EFC8(v159, v144, &qword_2542E4770);
  if (v59((char *)v95, 1, v58) == 1)
  {
    sub_23AA8A05C(v95, &qword_2542E4770);
    v96 = v143;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v143, 1, 1, v60);
    v97 = v160;
LABEL_35:
    sub_23AA8A05C(v96, (uint64_t *)&unk_2542E4310);
    v100 = v155;
    goto LABEL_36;
  }
  v98 = v152;
  sub_23AA907B0(v95 + *(int *)(v58 + 48), v152, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA8A05C(v95, (uint64_t *)&unk_2542E4760);
  v96 = v143;
  sub_23AA8EFC8(v98 + *(int *)(v156 + 116), v143, (uint64_t *)&unk_2542E4310);
  v92 = v158;
  sub_23AA937BC(v98, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v99 = v84((char *)v96, 1, v60);
  v97 = v160;
  if (v99 == 1)
    goto LABEL_35;
  v106 = v138;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v138, v96, v60);
  sub_23AA7E38C(&qword_2569E2A10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  if ((sub_23B1C6344() & 1) == 0)
  {
LABEL_49:
    v76 = v157;
    v114 = *(void **)(*(_QWORD *)(v157 + 96) + 64);
    v115 = v140;
    *v140 = v114;
    v116 = v139;
    v117 = v141;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v139 + 104))(v115, *MEMORY[0x24BEE5610], v141);
    v118 = v114;
    LOBYTE(v114) = sub_23B1C6104();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v116 + 8))(v115, v117);
    v119 = (void (*)(char *, uint64_t))v155;
    if ((v114 & 1) != 0)
    {
      v120 = 1;
      swift_beginAccess();
      v121 = v161;
      if ((*(_BYTE *)(v76 + 48) & 1) != 0)
      {
        v122 = v150;
LABEL_61:
        v134 = v160;
        v119(v138, v60);
        v119(v122, v60);
        goto LABEL_67;
      }
LABEL_59:
      *(_BYTE *)(v76 + 48) = v120;
      *(_BYTE *)(v76 + 40) = v120;
      sub_23AE8243C();
      v122 = v150;
      if (v121)
      {
        v119(v138, v60);
        v119(v122, v60);
LABEL_65:
        v135 = v160;
LABEL_68:
        sub_23AA8A05C(v135, &qword_2542E4770);
        sub_23AA8A05C(v159, &qword_2542E4770);
        return sub_23AA8A05C((uint64_t)v162, (uint64_t *)&unk_2542DDFB0);
      }
      goto LABEL_61;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v100 = v155;
  ((void (*)(char *, uint64_t))v155)(v106, v60);
  v97 = v160;
  v94 = (uint64_t)v146;
LABEL_36:
  sub_23AA8EFC8(v97, v94, &qword_2542E4770);
  if (v59((char *)v94, 1, v58) == 1)
  {
    sub_23AA8A05C(v94, &qword_2542E4770);
    v73 = v142;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v142, 1, 1, v60);
LABEL_39:
    ((void (*)(char *, uint64_t))v100)(v88, v60);
    sub_23AA8A05C(v97, &qword_2542E4770);
    sub_23AA8A05C(v159, &qword_2542E4770);
    v90 = (uint64_t *)&unk_2542E4310;
    goto LABEL_40;
  }
  v101 = v94 + *(int *)(v58 + 48);
  v102 = v94;
  v103 = v152;
  sub_23AA907B0(v101, v152, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA8A05C(v102, (uint64_t *)&unk_2542E4760);
  v73 = v142;
  sub_23AA8EFC8(v103 + *(int *)(v156 + 116), v142, (uint64_t *)&unk_2542E4310);
  sub_23AA937BC(v103, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v104 = v84((char *)v73, 1, v60);
  v105 = v161;
  if (v104 == 1)
    goto LABEL_39;
  v107 = v137;
  (*(void (**)(char *, uint64_t, uint64_t))(v158 + 32))(v137, v73, v60);
  sub_23AA7E38C(&qword_2569E2A10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  if ((sub_23B1C6344() & 1) != 0)
  {
    ((void (*)(char *, uint64_t))v100)(v107, v60);
    v108 = v88;
LABEL_64:
    ((void (*)(char *, uint64_t))v100)(v108, v60);
    goto LABEL_65;
  }
  v123 = v157;
  v124 = *(void **)(*(_QWORD *)(v157 + 96) + 64);
  v125 = v140;
  *v140 = v124;
  v126 = v139;
  v127 = v141;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v139 + 104))(v125, *MEMORY[0x24BEE5610], v141);
  v128 = v124;
  LOBYTE(v124) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v126 + 8))(v125, v127);
  if ((v124 & 1) != 0)
  {
    swift_beginAccess();
    if ((*(_BYTE *)(v123 + 48) & 1) != 0)
    {
      v129 = v150;
    }
    else
    {
      *(_BYTE *)(v123 + 48) = 1;
      *(_BYTE *)(v123 + 40) = 1;
      sub_23AE8243C();
      v129 = v150;
      if (v105)
      {
        ((void (*)(char *, uint64_t))v100)(v107, v60);
        v108 = v129;
        goto LABEL_64;
      }
    }
    v134 = v160;
    ((void (*)(char *, uint64_t))v100)(v107, v60);
    ((void (*)(char *, uint64_t))v100)(v129, v60);
LABEL_67:
    v135 = v134;
    goto LABEL_68;
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_23AE836FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  objc_class *v9;
  _QWORD *v10;
  char *v11;
  id v12;
  void *v13;
  objc_class *v14;
  char *v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  objc_super v21;
  objc_super v22;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2360);
  v5 = swift_allocObject();
  memcpy((void *)(v5 + 16), a1, 0x1F0uLL);
  *(_QWORD *)(v5 + 512) = a2;
  v6 = *((unsigned __int8 *)a1 + 8);
  v7 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (v6 == 255)
  {
    sub_23ACFC940((uint64_t)a1);
    v13 = (void *)a1[30];
    if (!v13)
      return swift_release();
    goto LABEL_3;
  }
  v8 = *a1;
  v9 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542DF258);
  v10 = objc_allocWithZone(v9);
  v11 = (char *)v10 + *(_QWORD *)((*v7 & *v10) + 0x70);
  *(_QWORD *)v11 = v8;
  v11[8] = v6;
  v11[9] = 0;
  sub_23ACFC940((uint64_t)a1);
  v21.receiver = v10;
  v21.super_class = v9;
  v12 = objc_msgSendSuper2(&v21, sel_init);
  objc_msgSend(*(id *)(v2 + 88), sel_setObject_forKey_, v5, v12);

  v13 = (void *)a1[30];
  if (v13)
  {
LABEL_3:
    v14 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542DF258);
    v15 = (char *)objc_allocWithZone(v14);
    v16 = &v15[*(_QWORD *)((*v7 & *(_QWORD *)v15) + 0x70)];
    *(_QWORD *)v16 = v13;
    *((_WORD *)v16 + 4) = 256;
    v22.receiver = v15;
    v22.super_class = v14;
    v17 = v13;
    v18 = objc_msgSendSuper2(&v22, sel_init);
    v19 = *(id *)(v2 + 88);
    objc_msgSend(v19, sel_setObject_forKey_, v5, v18);

  }
  return swift_release();
}

void sub_23AE838A4(uint64_t *a1)
{
  uint64_t v1;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  void *v10;
  objc_class *v11;
  char *v12;
  char *v13;
  id v14;
  id v15;
  objc_super v16;
  objc_super v17;

  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (v3 != 255)
  {
    v5 = *a1;
    v6 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542DF258);
    v7 = (char *)objc_allocWithZone(v6);
    v8 = &v7[*(_QWORD *)((*v4 & *(_QWORD *)v7) + 0x70)];
    *(_QWORD *)v8 = v5;
    v8[8] = v3;
    v8[9] = 0;
    v16.receiver = v7;
    v16.super_class = v6;
    v9 = objc_msgSendSuper2(&v16, sel_init);
    objc_msgSend(*(id *)(v1 + 88), sel_removeObjectForKey_, v9);

  }
  v10 = (void *)a1[30];
  if (v10)
  {
    v11 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542DF258);
    v12 = (char *)objc_allocWithZone(v11);
    v13 = &v12[*(_QWORD *)((*v4 & *(_QWORD *)v12) + 0x70)];
    *(_QWORD *)v13 = v10;
    *((_WORD *)v13 + 4) = 256;
    v17.receiver = v12;
    v17.super_class = v11;
    v14 = v10;
    v15 = objc_msgSendSuper2(&v17, sel_init);
    objc_msgSend(*(id *)(v1 + 88), sel_removeObjectForKey_, v15);

  }
}

uint64_t sub_23AE839D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 96);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = sub_23B1C6E24();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)(v3 + 16);
  }
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v6 = objc_msgSend(v5, sel_pendingSetMaxItemCount);

  if (((*(_BYTE *)(v1 + 104) & 1) != 0 || v4 == v6)
    && (v7 = *(_QWORD *)(v1 + 96),
        swift_bridgeObjectRetain(),
        v8 = sub_23ADF8184(a1, v7),
        result = swift_bridgeObjectRelease(),
        (v8 & 1) == 0))
  {
    *(_BYTE *)(v1 + 104) = 1;
  }
  else
  {
    swift_beginAccess();
    v10 = swift_retain();
    sub_23AEA6AC4(v10);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void sub_23AE83B14(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE v37[4];
  int v38;
  id v39;
  char v40;
  uint64_t v41;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v37[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_23AE757A0();
  if (v17 != 2)
  {
    if ((v17 & 1) != 0)
    {
      v22 = *(void **)(a1 + 240);
      if (!v22)
        return;
      v39 = *(id *)(a1 + 240);
      Strong = swift_weakLoadStrong();
      v24 = v41;
      if (Strong)
      {
        v25 = *(_QWORD *)(Strong + 40);
        v26 = v22;
        swift_retain();
        swift_release();
        (*(void (**)(id *, uint64_t))(*(_QWORD *)v25 + 240))(&v39, 1);
        swift_release();
        if (v24)
        {

          return;
        }
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {

          sub_23AA8A05C((uint64_t)v5, &qword_2542E4770);
          return;
        }
        sub_23AA724E8((uint64_t)v5, (uint64_t)v9, (uint64_t *)&unk_2542E4760);
        v27 = swift_weakLoadStrong();
        if (v27)
        {
          v28 = v27;
          v29 = &v9[*(int *)(v6 + 48)];
          v30 = type metadata accessor for ItemMetadata();
          (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v28 + 488))(1, *(_QWORD *)&v29[*(int *)(v30 + 100)], v38 & 1, 0);
          swift_release();
          sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E4760);

          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      if ((*(_BYTE *)(a1 + 16) & 0x10) != 0)
        return;
      if ((*(_BYTE *)(a1 + 232) & 4) != 0)
        return;
      if ((*(_BYTE *)(a1 + 432) & 4) != 0)
        return;
      if (!*(_BYTE *)(a1 + 137))
        return;
      v18 = *(unsigned __int8 *)(a1 + 8);
      if (v18 == 255)
        return;
      v39 = *(id *)a1;
      v40 = v18;
      v19 = swift_weakLoadStrong();
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + 32);
        swift_retain();
        swift_release();
        v21 = v41;
        (*(void (**)(id *, uint64_t))(*(_QWORD *)v20 + 240))(&v39, 1);
        swift_release();
        if (v21)
          return;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
        {
          v31 = (uint64_t *)&unk_2542E4750;
          v32 = (uint64_t)v12;
LABEL_24:
          sub_23AA8A05C(v32, v31);
          return;
        }
        sub_23AA724E8((uint64_t)v12, (uint64_t)v16, (uint64_t *)&unk_2542E6B00);
        v33 = swift_weakLoadStrong();
        if (v33)
        {
          v34 = v33;
          v35 = &v16[*(int *)(v13 + 48)];
          v36 = type metadata accessor for ItemMetadata();
          (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v34 + 488))(0, *(_QWORD *)&v35[*(int *)(v36 + 100)], v38 & 1, 0);
          swift_release();
          v31 = (uint64_t *)&unk_2542E6B00;
          v32 = (uint64_t)v16;
          goto LABEL_24;
        }
LABEL_28:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
}

uint64_t sub_23AE83EE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  const void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  BOOL v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  id v43;
  char *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *);
  uint64_t result;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  unsigned int v57;
  id v58;
  char isEscapingClosureAtFileLocation;
  void *v60;
  __int128 v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];
  id v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91[6];
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _BYTE *v95;
  _BYTE v96[496];
  _QWORD v97[62];
  _QWORD v98[62];
  uint64_t v99[62];
  _QWORD v100[62];
  _BYTE v101[496];
  _OWORD v102[31];
  _BYTE v103[496];
  uint64_t v104;
  _OWORD v105[31];
  uint64_t v106[62];
  _BYTE v107[496];
  _OWORD v108[12];
  uint64_t v109;
  uint64_t v110;
  _OWORD v111[15];
  _BYTE v112[16];
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __n128 v122[6];
  __n128 v123;
  __n128 v124;
  char v125;
  _BYTE v126[16];
  _QWORD v127[4];

  v3 = MEMORY[0x24BDAC7A8](a1);
  v79 = v4;
  v6 = v5;
  v7 = (const void *)v3;
  v127[1] = *MEMORY[0x24BDAC8D0];
  v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v74);
  v75 = (_QWORD *)((char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86 = sub_23B1C5DC8();
  v89 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v85 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v83 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v88 = (uint64_t)v72 - v13;
  v84 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v84);
  v15 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C5E4C();
  v81 = *(_QWORD *)(v16 - 8);
  v82 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v101, v7, sizeof(v101));
  memcpy(v100, v6, sizeof(v100));
  v19 = *(void **)(v1 + 24);
  objc_msgSend(v19, sel_assertOnQueue);
  v20 = sub_23AAAE8F4();
  v90 = v1;
  v93 = v1;
  v94 = v100;
  v95 = v101;
  v21 = sub_23AE07B64((uint64_t)sub_23AEB0E5C, (uint64_t)&v92, v20);
  v22 = *(_QWORD *)(v21 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    return v22 != 0;
  }
  v80 = v2;
  v78 = v21;
  memcpy(v107, v101, sizeof(v107));
  v23 = sub_23B02F54C();
  v25 = v24;
  v26 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v27 = sub_23B1C5E40();
  v28 = sub_23B1C6A88();
  v29 = os_log_type_enabled(v27, v28);
  v87 = v15;
  v76 = v22;
  v77 = v23;
  v73 = v19;
  if (v29)
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v99[0] = v31;
    *(_DWORD *)v30 = 136446210;
    v72[1] = v30 + 4;
    swift_bridgeObjectRetain();
    v98[0] = sub_23AABEC68(v23, v25, v99);
    sub_23B1C6CBC();
    v32 = v25;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v27, v28, " ✍️  reconciliation update: %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v31, -1, -1);
    MEMORY[0x23B8614BC](v30, -1, -1);

  }
  else
  {

    v32 = v25;
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v81 + 8))(v18, v82);
  v33 = v86;
  v35 = (uint64_t)v83;
  v34 = v84;
  memcpy(v106, v100, sizeof(v106));
  sub_23AE838A4(v106);
  v36 = v85;
  if (qword_2542E6818 != -1)
    swift_once();
  v37 = (void *)qword_2542EDD28;
  v38 = v88;
  v39 = v89;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v88, 1, 1, v33);
  sub_23AA8EFC8(v38, v35, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v35, 1, v33) == 1)
  {
    v40 = v37;
    sub_23B1C5DB0();
    sub_23AA8A05C(v35, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v36, v35, v33);
  }
  v41 = v87;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v87, v36, v33);
  v86 = *(int *)(v34 + 20);
  *(_QWORD *)&v41[v86] = v37;
  v42 = (uint64_t)&v41[*(int *)(v34 + 24)];
  *(_QWORD *)v42 = "SQLDB: reconciliation update";
  *(_QWORD *)(v42 + 8) = 28;
  v84 = v42;
  *(_BYTE *)(v42 + 16) = 2;
  swift_bridgeObjectRetain();
  v43 = v37;
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v44 = v36;
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v45 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v45 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v45 + 32) = v77;
  *(_QWORD *)(v45 + 40) = v32;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v44, v33);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v88, (uint64_t *)&unk_2542E67B8);
  memcpy(v105, v101, sizeof(v105));
  memcpy(v99, v101, sizeof(v99));
  v108[10] = v105[25];
  v108[11] = v105[26];
  v109 = *(_QWORD *)&v105[27];
  v108[6] = v105[21];
  v108[7] = v105[22];
  v108[9] = v105[24];
  v108[8] = v105[23];
  v108[2] = v105[17];
  v108[3] = v105[18];
  v108[5] = v105[20];
  v108[4] = v105[19];
  v108[1] = v105[16];
  v108[0] = v105[15];
  sub_23AA724E8((uint64_t)v108, (uint64_t)&v110, &qword_2542E7550);
  sub_23AA724E8((uint64_t)&v110, (uint64_t)v127, &qword_2542E7550);
  if (v127[0])
    v46 = sub_23B026C90();
  else
    v46 = 0;
  v47 = v80;
  memcpy(v96, v99, sizeof(v96));
  nullsub_1(v96);
  sub_23AA724E8((uint64_t)v96, (uint64_t)v103, qword_2542E6E20);
  memcpy(v97, v100, sizeof(v97));
  memcpy(v98, v100, sizeof(v98));
  nullsub_1(v98);
  sub_23AA724E8((uint64_t)v98, (uint64_t)&v104, qword_2542E6E20);
  sub_23ACFC940((uint64_t)v105);
  sub_23ACFC940((uint64_t)v97);
  sub_23AE85134((uint64_t)v103);
  v48 = (uint64_t)v87;
  if (v47)
  {
    swift_bridgeObjectRelease();
    sub_23AAFC3AC((uint64_t)v97);
    sub_23AAFC3AC((uint64_t)v105);
    v49 = 0;
LABEL_16:
    sub_23B1C6BD8();
    sub_23B1C5DA4();
    sub_23AA937BC(v48, type metadata accessor for Signpost);
    sub_23AAB7948((uint64_t)v49);
LABEL_17:
    v22 = v76;
    return v22 != 0;
  }
  sub_23AAFC3AC((uint64_t)v97);
  v51 = v97[0];
  v52 = LOBYTE(v97[1]);
  sub_23AAFC3AC((uint64_t)v105);
  if (v52 != 255)
  {
    v111[12] = v105[12];
    v111[13] = v105[13];
    v111[14] = v105[14];
    v111[8] = v105[8];
    v111[9] = v105[9];
    v111[11] = v105[11];
    v111[10] = v105[10];
    v111[4] = v105[4];
    v111[5] = v105[5];
    v111[7] = v105[7];
    v111[6] = v105[6];
    v111[0] = v105[0];
    v111[1] = v105[1];
    v111[3] = v105[3];
    v111[2] = v105[2];
    sub_23AA724E8((uint64_t)v111, (uint64_t)v112, (uint64_t *)&unk_2542E7420);
    sub_23AA724E8((uint64_t)v112, (uint64_t)v126, (uint64_t *)&unk_2542E7420);
    if (v126[8] == 255)
      sub_23AE857A8(v51, v52, 0xD000000000000022, 0x800000023B205A30);
  }
  v80 = 0;
  v53 = v78;
  v54 = swift_allocObject();
  *(_QWORD *)(v54 + 16) = v53;
  memcpy((void *)(v54 + 24), v105, 0x1F0uLL);
  *(_BYTE *)(v54 + 520) = v46;
  *(_QWORD *)(v54 + 528) = v79;
  v55 = (_QWORD *)swift_allocObject();
  v55[2] = sub_23AEB0FC8;
  v55[3] = v54;
  v91[4] = sub_23AA956C8;
  v91[5] = v55;
  v91[0] = (id)MEMORY[0x24BDAC760];
  v91[1] = (id)1107296256;
  v91[2] = sub_23AA9432C;
  v91[3] = &block_descriptor_57;
  v56 = _Block_copy(v91);
  sub_23ACFC940((uint64_t)v105);
  swift_retain();
  swift_release();
  v91[0] = 0;
  v57 = objc_msgSend(v73, sel_executeSwift_error_, v56, v91);
  _Block_release(v56);
  v58 = v91[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (!v57)
  {
    sub_23B1C587C();

    swift_willThrow();
    v49 = sub_23AEB0FC8;
    v48 = (uint64_t)v87;
    goto LABEL_16;
  }
  memcpy(v102, v101, sizeof(v102));
  result = sub_23AE836FC((uint64_t *)v102, v79);
  if (v46)
  {
    v60 = *(void **)&v102[15];
    if (!*(_QWORD *)&v102[15])
    {
      __break(1u);
      goto LABEL_44;
    }
    v61 = v102[29];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3130);
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = v60;
    *(_OWORD *)(v62 + 24) = v61;
    *(_BYTE *)(v62 + 40) = 0;
    v63 = v60;
    sub_23AE839D4(v62);
    swift_release();
  }
  else
  {
    v64 = (void *)v100[30];
    if (v100[30])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3130);
      v65 = swift_allocObject();
      *(_QWORD *)(v65 + 24) = 0;
      *(_QWORD *)(v65 + 32) = 0;
      *(_QWORD *)(v65 + 16) = v64;
      *(_BYTE *)(v65 + 40) = 1;
      v66 = v64;
      v67 = v80;
      sub_23AE84DD0();
      v48 = (uint64_t)v87;
      if (v67)
      {
        swift_release();

        v49 = sub_23AEB0FC8;
        goto LABEL_16;
      }
      swift_release();

      goto LABEL_32;
    }
  }
  v48 = (uint64_t)v87;
LABEL_32:
  v122[3] = (__n128)v102[12];
  v122[4] = (__n128)v102[13];
  v122[5] = (__n128)v102[14];
  v121 = v102[8];
  v122[0] = (__n128)v102[9];
  v122[2] = (__n128)v102[11];
  v122[1] = (__n128)v102[10];
  v117 = v102[4];
  v118 = v102[5];
  v120 = v102[7];
  v119 = v102[6];
  v113 = v102[0];
  v114 = v102[1];
  v116 = v102[3];
  v115 = v102[2];
  v68 = BYTE8(v102[0]);
  if (BYTE8(v102[0]) == 255)
    goto LABEL_40;
  if ((v114 & 2) == 0)
    goto LABEL_40;
  if (LOBYTE(v100[20]))
    goto LABEL_40;
  if ((v100[18] & 0x200) == 0)
    goto LABEL_40;
  v69 = v113;
  sub_23ADF1BC0(v122, &v123);
  sub_23ADF1BC0(&v123, &v124);
  if (!v125 && (v124.n128_u8[1] & 2) != 0)
    goto LABEL_40;
  result = swift_weakLoadStrong();
  if (result)
  {
    v70 = result;
    v71 = (uint64_t)v75;
    *v75 = v69;
    *(_BYTE *)(v71 + 8) = v68;
    *(_BYTE *)(v71 + 9) = 0;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t))(*(_QWORD *)v70 + 312))(v71);
    swift_release();
    sub_23AA8A05C(v71, (uint64_t *)&unk_2542DDFB0);
LABEL_40:
    sub_23B1C6BD8();
    sub_23B1C5DA4();
    sub_23AA937BC(v48, type metadata accessor for Signpost);
    swift_release();
    goto LABEL_17;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23AE84BB8(void *a1, uint64_t a2, const void *a3, char a4, uint64_t a5)
{
  uint64_t v9;
  id v10;
  id v11;
  id v12;

  v9 = swift_allocObject();
  memcpy((void *)(v9 + 16), a3, 0x1F0uLL);
  *(_QWORD *)(v9 + 512) = a1;
  swift_bridgeObjectRetain();
  sub_23ACFC940((uint64_t)a3);
  v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2060);
  sub_23AEB145C();
  sub_23B1C6338();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v11 = objc_msgSend(v10, sel_bindBooleanParameter_, a4 & 1);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = objc_msgSend(v10, sel_bindLongParameter_, a5);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23AE84DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  signed int v8;
  void *v9;
  _QWORD *v10;
  char v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  unsigned __int8 v22;
  id aBlock[7];

  v2 = v0;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = (uint64_t *)(v0 + 96);
  swift_beginAccess();
  v4 = sub_23B18D4E4();
  swift_endAccess();
  swift_release();
  if (!v4 || *(_BYTE *)(v2 + 104) != 1)
    return;
  v5 = *v3;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23B1C6E24();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 16);
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v8 = objc_msgSend(v7, sel_pendingSetRegatherThreshold);

  if (v6 > v8)
    return;
  v9 = *(void **)(v2 + 24);
  v10 = sub_23ABE343C((uint64_t)sub_23B04EB98, 0);
  if (v1)
    return;
  if ((v11 & 1) != 0)
  {
    if (v6 < 0)
      goto LABEL_10;
LABEL_23:
    *(_BYTE *)(v2 + 104) = 0;
    return;
  }
  if (v6 >= (uint64_t)v10)
    goto LABEL_23;
LABEL_10:
  *(_BYTE *)(v2 + 104) = 0;
  aBlock[4] = sub_23ADFA228;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_188;
  v12 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v13 = objc_msgSend(v9, sel_fetchSwift_error_, v12, aBlock);
  _Block_release(v12);
  v14 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v13)
  {
    if (objc_msgSend(v13, sel_next))
    {
      do
      {
        v18 = (void *)MEMORY[0x23B8601A8]();
        if ((*(_BYTE *)(v2 + 104) & 1) == 0)
        {
          v19 = v13;
          v20 = objc_msgSend(v19, sel_stringAtIndex_, 0);
          if (!v20)
          {
            sub_23B1C63E0();
            v20 = (id)sub_23B1C63BC();
            swift_bridgeObjectRelease();
          }

          v21 = objc_msgSend(v19, sel_longAtIndex_, 1);
          v22 = objc_msgSend(v19, sel_isNullAtIndex_, 2);
          if ((v22 & 1) != 0)
            v15 = 0;
          else
            v15 = objc_msgSend(v19, sel_integerAtIndex_, 2);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3130);
          v16 = swift_allocObject();
          *(_QWORD *)(v16 + 16) = v20;
          *(_QWORD *)(v16 + 24) = v21;
          *(_QWORD *)(v16 + 32) = v15;
          *(_BYTE *)(v16 + 40) = v22;
          v17 = v20;
          sub_23AE839D4(v16);

          swift_release();
        }
        objc_autoreleasePoolPop(v18);
      }
      while ((objc_msgSend(v13, sel_next) & 1) != 0);
    }

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
}

uint64_t sub_23AE85134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t result;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  os_log_type_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _BYTE *v32;
  uint64_t v33;
  id v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[496];
  _BYTE v40[496];
  _BYTE v41[496];
  _BYTE v42[496];
  _BYTE v43[496];
  _BYTE v44[496];
  _BYTE v45[496];
  _BYTE v46[496];
  _BYTE v47[496];
  _BYTE v48[496];
  _BYTE v49[496];
  _BYTE v50[496];
  _BYTE v51[496];
  _BYTE v52[496];
  _BYTE v53[496];
  _BYTE v54[496];
  _BYTE v55[504];
  uint64_t v56;

  v3 = MEMORY[0x24BDAC7A8](a1);
  v56 = v2;
  v36 = v1;
  v5 = v4;
  v6 = v3;
  sub_23AA724E8(v3, (uint64_t)v41, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v41, (uint64_t)v54, qword_2542E6E20);
  sub_23AA724E8(v5, (uint64_t)v40, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v40, (uint64_t)v55, qword_2542E6E20);
  v7 = sub_23B1C5E4C();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v36 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v36 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v36 - v17;
  sub_23AA724E8(v5, (uint64_t)v47, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v47) == 1)
  {
    v19 = 2;
  }
  else
  {
    sub_23AA724E8((uint64_t)v55, (uint64_t)v39, qword_2542E6E20);
    memcpy(v53, v39, sizeof(v53));
    v19 = sub_23AE757A0();
  }
  sub_23AA724E8(v6, (uint64_t)v46, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v46) == 1)
  {
    result = 2;
  }
  else
  {
    sub_23AA724E8((uint64_t)v54, (uint64_t)v39, qword_2542E6E20);
    memcpy(v52, v39, sizeof(v52));
    result = sub_23AE757A0();
  }
  if (v19 != 2)
  {
    if (result == 2)
    {
      sub_23AA724E8(v5, (uint64_t)v42, qword_2542E6E20);
      if (sub_23AAFC2A4((uint64_t)v42) == 1)
      {
        v21 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v22 = sub_23B1C5E40();
        v23 = sub_23B1C6AA0();
        if (!os_log_type_enabled(v22, v23))
        {
LABEL_30:
          v13 = v18;
          goto LABEL_31;
        }
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_23AA66000, v22, v23, "[GlobalProgress] RT.agp, oldSide!=nil, side==nil, but no oldEntry", v24, 2u);
LABEL_29:
        MEMORY[0x23B8614BC](v24, -1, -1);
        goto LABEL_30;
      }
      sub_23AA724E8((uint64_t)v55, (uint64_t)v39, qword_2542E6E20);
      memcpy(v48, v39, sizeof(v48));
      sub_23ACFC940((uint64_t)v39);
      v32 = v48;
    }
    else
    {
      v27 = v56;
      if (((result ^ v19) & 1) == 0)
        return result;
      sub_23AA724E8(v6, (uint64_t)v44, qword_2542E6E20);
      if (sub_23AAFC2A4((uint64_t)v44) == 1)
      {
        v28 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v29 = sub_23B1C5E40();
        v30 = sub_23B1C6AA0();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v31 = 0;
          _os_log_impl(&dword_23AA66000, v29, v30, "[GlobalProgress] RT.agp, oldSide!=side, but no entry", v31, 2u);
          MEMORY[0x23B8614BC](v31, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
      }
      else
      {
        sub_23AA724E8((uint64_t)v54, (uint64_t)v39, qword_2542E6E20);
        memcpy(v50, v39, sizeof(v50));
        sub_23ACFC940((uint64_t)v39);
        sub_23AE83B14((uint64_t)v50, 1);
        result = sub_23ADF2D34(v6, (voidsub_23AAAEC3C);
        if (v27)
          return result;
      }
      sub_23AA724E8(v5, (uint64_t)v43, qword_2542E6E20);
      if (sub_23AAFC2A4((uint64_t)v43) == 1)
      {
        v34 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v22 = sub_23B1C5E40();
        v35 = sub_23B1C6AA0();
        if (os_log_type_enabled(v22, v35))
        {
          v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v24 = 0;
          _os_log_impl(&dword_23AA66000, v22, v35, "[GlobalProgress] RT.agp, oldSide!=side, but no oldEntry", v24, 2u);
          v18 = v13;
          goto LABEL_29;
        }
        goto LABEL_31;
      }
      sub_23AA724E8((uint64_t)v55, (uint64_t)v39, qword_2542E6E20);
      memcpy(v49, v39, sizeof(v49));
      sub_23ACFC940((uint64_t)v39);
      v32 = v49;
    }
    sub_23AE83B14((uint64_t)v32, 0);
    v33 = v5;
    return sub_23ADF2D34(v33, (voidsub_23AAAEC3C);
  }
  if (result != 2)
  {
    sub_23AA724E8(v6, (uint64_t)v45, qword_2542E6E20);
    if (sub_23AAFC2A4((uint64_t)v45) == 1)
    {
      v25 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v22 = sub_23B1C5E40();
      v26 = sub_23B1C6AA0();
      if (os_log_type_enabled(v22, v26))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_23AA66000, v22, v26, "[GlobalProgress] RT.agp, oldSide=nil, side!=nil, but no entry", v24, 2u);
        v18 = v10;
        goto LABEL_29;
      }
      v13 = v10;
LABEL_31:

      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v13, v38);
    }
    sub_23AA724E8((uint64_t)v54, (uint64_t)v39, qword_2542E6E20);
    memcpy(v51, v39, sizeof(v51));
    sub_23ACFC940((uint64_t)v39);
    sub_23AE83B14((uint64_t)v51, 1);
    v33 = v6;
    return sub_23ADF2D34(v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
  }
  return result;
}

uint64_t sub_23AE857A8(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  __int128 v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  char v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  __int128 v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;

  v5 = v4;
  v51 = a3;
  v9 = sub_23B1C5E4C();
  v58 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v48 - v12;
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = *(_QWORD *)(result + 24);
    swift_retain();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6BA0);
    v16 = swift_dynamicCastClass();
    if (v16)
    {
      v17 = v16;
      v50 = a4;
      v18 = *(_QWORD *)(v16 + 24);
      v60 = a1;
      v61 = a2;
      v62 = MEMORY[0x24BEE4AF8];
      MEMORY[0x24BDAC7A8](v16);
      v48[-2] = &v60;
      v48[-1] = &unk_250BDEBF0;
      swift_retain();
      sub_23ABF6148(sub_23AEB1040, &v48[-4], 0, 0, v18, &v62);
      if (v4)
      {
        swift_release();
        goto LABEL_5;
      }
      swift_release();
      v25 = v62;
      if (v62 >> 62)
        goto LABEL_25;
      v26 = v50;
      v27 = v53;
      v57 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v57)
      {
        do
        {
          v48[0] = v15;
          v56 = v25 & 0xC000000000000001;
          *(_QWORD *)&v24 = 136315394;
          v49 = v24;
          v48[1] = MEMORY[0x24BEE4AD8] + 8;
          v15 = 4;
          v54 = v25;
          v55 = v17;
          while (1)
          {
            v28 = v15 - 4;
            if (!v56)
              break;
            v29 = MEMORY[0x23B85F860](v15 - 4, v25);
            v30 = v15 - 3;
            if (__OFADD__(v28, 1))
              goto LABEL_24;
LABEL_17:
            v59 = v30;
            v31 = *(void **)(v29 + 88);
            v32 = *(void **)(v29 + 96);
            *(_QWORD *)(v29 + 88) = 0;
            *(_QWORD *)(v29 + 96) = 0;
            v33 = *(_BYTE *)(v29 + 104);
            *(_BYTE *)(v29 + 104) = 4;
            sub_23AAAEE10(v31, v32, v33);
            v34 = (id)fpfs_current_or_default_log();
            sub_23B1C5E58();
            swift_retain_n();
            swift_bridgeObjectRetain_n();
            v35 = sub_23B1C5E40();
            v36 = sub_23B1C6A88();
            if (os_log_type_enabled(v35, v36))
            {
              v37 = swift_slowAlloc();
              v38 = swift_slowAlloc();
              v52 = 0;
              v39 = v38;
              v60 = v38;
              *(_DWORD *)v37 = v49;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v37 + 4) = sub_23AABEC68(v51, v26, &v60);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v37 + 12) = 2080;
              sub_23AE17C44();
              v41 = v40;
              v42 = v9;
              v44 = v43;
              swift_release();
              *(_QWORD *)(v37 + 14) = sub_23AABEC68(v41, v44, &v60);
              swift_release();
              v9 = v42;
              v26 = v50;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23AA66000, v35, v36, "✍️  Cancelling materialize job due to %s: %s", (uint8_t *)v37, 0x16u);
              swift_arrayDestroy();
              v45 = v39;
              v5 = v52;
              MEMORY[0x23B8614BC](v45, -1, -1);
              v46 = v37;
              v27 = v53;
              MEMORY[0x23B8614BC](v46, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release_n();
            }
            (*(void (**)(char *, uint64_t))(v58 + 8))(v27, v9);
            v17 = v55;
            swift_retain();
            sub_23AE10548(v29);
            v25 = v54;
            if (v5)
            {
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              return swift_release();
            }
            swift_release();
            swift_release();
            ++v15;
            if (v59 == v57)
              goto LABEL_5;
          }
          v29 = *(_QWORD *)(v25 + 8 * v15);
          swift_retain();
          v30 = v15 - 3;
          if (!__OFADD__(v28, 1))
            goto LABEL_17;
LABEL_24:
          __break(1u);
LABEL_25:
          swift_bridgeObjectRetain();
          v47 = sub_23B1C7088();
          swift_bridgeObjectRelease();
          v26 = v50;
          v27 = v53;
          v57 = v47;
        }
        while (v47);
      }
LABEL_5:
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v19 = v9;
      swift_release();
      v20 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v21 = sub_23B1C5E40();
      v22 = sub_23B1C6AA0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_23AA66000, v21, v22, "unable to cancel materializations, job registry didn't cast", v23, 2u);
        MEMORY[0x23B8614BC](v23, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v13, v19);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23AE85CEC(uint64_t a1)
{
  _BYTE v2[40];
  uint64_t v3;
  _BYTE v4[40];

  sub_23AA724E8(a1, (uint64_t)&v3, &qword_2569E5EC0);
  sub_23AA724E8(a1, (uint64_t)v2, &qword_2569E5EC0);
  sub_23AA724E8(a1, (uint64_t)v4, &qword_2569E5EC0);
  __asm { BR              X10 }
}

uint64_t sub_23AE85D7C()
{
  void *v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  void (*v4)(void *);
  uint64_t v5;
  uint64_t v7;

  sub_23AA724E8((uint64_t)&v7, v5 - 104, &qword_2542E6CD8);
  sub_23AA88218(v2, v3, BYTE1(v3) & 1);
  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B054250((unint64_t)v2, v3 | (((v3 >> 8) & 1) << 8), v0, 3044466, (uint64_t *)0xE300000000000000);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v4(v0);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEADC58(v1, (uint64_t)sub_23AA862DC, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEADBEC);
  return 0;
}

uint64_t sub_23AE86314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  void *v15;
  char v16;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = *(void **)(v5 + 24);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a4;
  v10[3] = a5;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v10;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_46;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v12 = objc_msgSend(v9, sel_fetchSwift_error_, v11, aBlock);
  _Block_release(v11);
  v13 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v12)
  {
    LOBYTE(aBlock[0]) = 0;
    if (objc_msgSend(v12, sel_next))
    {
      while (1)
      {
        v15 = (void *)MEMORY[0x23B8601A8]();
        sub_23AE86520((uint64_t)v12);
        if (v6)
          break;
        objc_autoreleasePoolPop(v15);
        if ((objc_msgSend(v12, sel_next) & 1) == 0)
        {

          v16 = (char)aBlock[0];
          return v16 & 1;
        }
      }
      objc_autoreleasePoolPop(v15);

    }
    else
    {

      v16 = 0;
    }
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  return v16 & 1;
}

uint64_t sub_23AE86520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  id v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  void *v38;
  char v39;
  _BYTE *v40;
  char v41;
  id v42;
  uint64_t v43;
  char v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _BYTE v55[496];
  _OWORD v56[31];
  _QWORD v57[192];
  _BYTE v58[496];
  _OWORD v59[31];
  _BYTE v60[496];
  _BYTE v61[496];
  _BYTE v62[1536];
  _BYTE v63[496];
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int16 v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  char v96;
  __int128 v97;
  __int128 v98;
  char v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __n128 v110[6];
  __n128 v111;
  __n128 v112;
  char v113;
  uint64_t v114;

  v2 = MEMORY[0x24BDAC7A8](a1);
  v114 = v1;
  v50 = v4;
  v51 = v3;
  v52 = v6;
  v53 = v5;
  LODWORD(v54) = v7;
  v8 = (void *)v2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F10);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DD0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(v8, sel_longAtIndex_, 0);
  v20 = sub_23AAAE8F4();
  v21 = v114;
  sub_23AAA1310(v8, v20, 1, (uint64_t)v59);
  if (v21)
    return swift_bridgeObjectRelease();
  v47 = v13;
  v114 = 0;
  v24 = v52;
  v23 = v53;
  v48 = v12;
  v49 = v11;
  v45 = v15;
  v46 = v19;
  swift_bridgeObjectRelease();
  memcpy(v61, v59, sizeof(v61));
  memcpy(v58, v59, sizeof(v58));
  if ((v54 & 1) != 0)
  {
    sub_23ACFC940((uint64_t)v61);
    if (!BYTE8(v59[22]))
    {
      v25 = (void *)*((_QWORD *)&v59[21] + 1);
      if ((*((_QWORD *)&v59[21] + 1) & v23) != 0)
      {
        v76 = v59[12];
        v77 = v59[13];
        v72 = v59[8];
        v73 = v59[9];
        v75 = v59[11];
        v74 = v59[10];
        v68 = v59[4];
        v69 = v59[5];
        v71 = v59[7];
        v70 = v59[6];
        v64 = v59[0];
        v65 = v59[1];
        v67 = v59[3];
        v66 = v59[2];
        v78 = v59[14];
        v79 = v59[15];
        v80 = *(_QWORD *)&v59[16];
        v81 = BYTE8(v59[16]);
        v82 = v59[17];
        v83 = v59[18];
        v84 = v59[19];
        v85 = v59[20];
        v86 = v59[21];
        v87 = BYTE2(v59[21]);
        v88 = *((_QWORD *)&v59[21] + 1);
        v54 = *(id *)&v59[22];
        v89 = *(_QWORD *)&v59[22];
        v90 = 0;
        v91 = v59[23];
        v92 = v59[24];
        v93 = v59[25];
        v94 = v59[26];
        v96 = BYTE8(v59[27]);
        v95 = *(_QWORD *)&v59[27];
        v97 = v59[28];
        v98 = v59[29];
        v99 = v59[30];
        v100 = *((_QWORD *)&v59[30] + 1);
        sub_23AFFD9BC((uint64_t)v57);
        v26 = (uint64_t)v49;
        sub_23ADFE870();
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
        Strong = swift_weakLoadStrong();
        if (!Strong)
        {
          __break(1u);
          goto LABEL_31;
        }
        (*(void (**)(uint64_t))(*(_QWORD *)Strong + 176))(Strong);
        swift_release();
        memcpy(v63, v57, sizeof(v63));
        v29 = v114;
        v30 = sub_23B004DB0((uint64_t)v63, v26, v23);
        v114 = v29;
        if (v29)
        {
          swift_release();
          sub_23AA8A05C(v26, (uint64_t *)&unk_2569E5F10);
          memcpy(v55, v57, sizeof(v55));
          sub_23AAFCF50((uint64_t)v55);
          sub_23AAFC3AC((uint64_t)v61);
          memcpy(v56, v59, sizeof(v56));
          return sub_23AAFC3AC((uint64_t)v56);
        }
        v37 = v30;
        v38 = v31;
        v39 = v32;
        swift_release();
        sub_23AA8A05C(v26, (uint64_t *)&unk_2569E5F10);
        memcpy(v56, v57, sizeof(v56));
        sub_23AAFCF50((uint64_t)v56);
        if (v39 || v37 != v25)
        {
          *((_QWORD *)&v59[21] + 1) = v37;
          *(_QWORD *)&v59[22] = v38;
          BYTE8(v59[22]) = v39;
          sub_23AAAE478(v37, v38, v39);
          sub_23AAAEE10(v25, v54, 0);
          if (v39 == 1)
          {
            sub_23AAAEE10(v37, v38, 1);
            *v50 = 1;
          }
          else
          {
            sub_23AAAEE10(v37, v38, v39);
          }
          v42 = v46;
          v43 = v114;
          memcpy(v60, v59, sizeof(v60));
          sub_23ACFC784(v56);
          v57[0] = v42;
          LOBYTE(v57[1]) = 0;
          memcpy(&v57[2], v58, 0x1F0uLL);
          memcpy(&v57[64], v59, 0x1F0uLL);
          memset(&v57[126], 0, 24);
          LOBYTE(v57[129]) = 2;
          sub_23AA724E8((uint64_t)v56, (uint64_t)&v57[130], qword_2542E6E20);
          memcpy(v62, v57, sizeof(v62));
          sub_23ACFC940((uint64_t)v61);
          sub_23ACFC940((uint64_t)v60);
          v44 = sub_23B008ED8((uint64_t)v62);
          if (v43)
          {
            sub_23AEB0870((uint64_t)v57);
            sub_23AAFC3AC((uint64_t)v61);
            v40 = v60;
            return sub_23AAFC3AC((uint64_t)v40);
          }
          if ((v44 & 1) == 0)
            sub_23AE83EE4((uint64_t)v60);
          sub_23AEB0870((uint64_t)v57);
        }
        else
        {
          sub_23AAAEE10(v25, v38, 0);
        }
      }
    }
LABEL_18:
    sub_23AAFC3AC((uint64_t)v61);
    memcpy(v57, v59, 0x1F0uLL);
    v40 = v57;
    return sub_23AAFC3AC((uint64_t)v40);
  }
  v110[3] = (__n128)v59[12];
  v110[4] = (__n128)v59[13];
  v110[5] = (__n128)v59[14];
  v109 = v59[8];
  v110[0] = (__n128)v59[9];
  v110[2] = (__n128)v59[11];
  v110[1] = (__n128)v59[10];
  v105 = v59[4];
  v106 = v59[5];
  v108 = v59[7];
  v107 = v59[6];
  v101 = v59[0];
  v102 = v59[1];
  v104 = v59[3];
  v103 = v59[2];
  sub_23ADF1BC0(v110, &v111);
  sub_23ADF1BC0(&v111, &v112);
  if (v113 || (v33 = v24, v34 = v114, (v112.n128_u64[0] & v23) == 0))
  {
    sub_23ACFC940((uint64_t)v61);
    goto LABEL_18;
  }
  sub_23AA8EFC8(v33, (uint64_t)v18, (uint64_t *)&unk_2542DDFB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v18, 0, 1, v48);
  if (!swift_weakLoadStrong())
  {
LABEL_31:
    __break(1u);
    JUMPOUT(0x23AE87018);
  }
  sub_23ACFC940((uint64_t)v61);
  sub_23ACFC940((uint64_t)v61);
  sub_23B004C70((uint64_t)v61, (uint64_t)v18, v23);
  if (!v34)
  {
    v41 = v36;
    v114 = v35;
    swift_release();
    sub_23AA8A05C((uint64_t)v18, &qword_2569E5DD0);
    sub_23AAFC3AC((uint64_t)v61);
    __asm { BR              X10 }
  }
  swift_release();
  sub_23AA8A05C((uint64_t)v18, &qword_2569E5DD0);
  sub_23AAFC3AC((uint64_t)v61);
  sub_23AAFC3AC((uint64_t)v61);
  memcpy(v57, v59, 0x1F0uLL);
  return sub_23AAFC3AC((uint64_t)v57);
}

uint64_t sub_23AE87034(char a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  sub_23AE063E0(a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5ED0);
  if (swift_dynamicCastMetatype())
  {
    v6 = sub_23AD7EF88();
    a3 = sub_23AE7E56C(v6, a2, a3);
    swift_bridgeObjectRelease();
    return a3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5568);
  if (swift_dynamicCastMetatype())
  {
    v7 = sub_23AD7EF7C();
    v8 = sub_23AE7DF74(v7, a2, a3);
LABEL_13:
    if (!v3)
      a3 = v8;
    swift_bridgeObjectRelease();
    return a3;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6120);
  if (swift_dynamicCastMetatype())
  {
    v9 = sub_23AD7EF70();
    v8 = sub_23AE7D9CC(v9, a2, a3);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5570);
  if (swift_dynamicCastMetatype())
  {
    v10 = sub_23AD7EF64();
    v8 = sub_23AE7D128(v10, a2, a3);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6100);
  if (swift_dynamicCastMetatype())
  {
    v11 = sub_23AD7EF58();
    v8 = sub_23AE7CC18(v11, a2, a3, (uint64_t)&unk_2569E6100);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5578);
  if (swift_dynamicCastMetatype())
  {
    v12 = sub_23AD7EF4C();
    v8 = sub_23AE7C598(v12, a2, a3);
    goto LABEL_13;
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE8724C(char a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  sub_23AE063F4(a1);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
  if (swift_dynamicCastMetatype())
  {
    v6 = sub_23AD7EF40();
    a3 = sub_23AE7BE84(v6, a2, a3);
    swift_bridgeObjectRelease();
    return a3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69B0);
  if (swift_dynamicCastMetatype())
  {
    v7 = sub_23AD7EF34();
    v8 = sub_23AE7B760(v7, a2, a3);
LABEL_13:
    if (!v3)
      a3 = v8;
    swift_bridgeObjectRelease();
    return a3;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E6928);
  if (swift_dynamicCastMetatype())
  {
    v9 = sub_23AD7EF28();
    v8 = sub_23AE7B08C(v9, a2, a3);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E61B0);
  if (swift_dynamicCastMetatype())
  {
    v10 = sub_23AD7EF1C();
    v8 = sub_23AE7A8E8(v10, a2, a3);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2569E5580);
  if (swift_dynamicCastMetatype())
  {
    v11 = sub_23AD7EF10();
    v8 = sub_23AE7CC18(v11, a2, a3, (uint64_t)qword_2569E5580);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61C0);
  if (swift_dynamicCastMetatype())
  {
    v12 = sub_23AD7EF04();
    v8 = sub_23AE7A38C(v12, a2, a3);
    goto LABEL_13;
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

unint64_t sub_23AE87464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;

  v4 = sub_23AE78AC0(0x40u, a1);
  if (!v1)
  {
    v6 = (void *)v4;
    v7 = v5;
    v8 = sub_23AE788C0(0xDCu, a1);
    v9 = sub_23AE786BC(0xFCu, a1);
    if ((v9 & 1) != 0)
    {
      v11 = sub_23AE8724C(v8, v6, v7);

      return v11 | 0x8000000000000000;
    }
    else
    {
      v2 = sub_23AE87034(v8, v6, v7);

    }
  }
  return v2;
}

void sub_23AE87544(uint64_t a1, void *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  id v10;

  v3 = (uint64_t *)(a1 + qword_2542EE0F8);
  if ((*(_BYTE *)(a1 + qword_2542EE0F8 + 8) & 1) != 0)
    goto LABEL_7;
  v4 = *v3;
  v5 = (uint64_t *)(a1 + qword_2542E7170);
  swift_beginAccess();
  v6 = *v5;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v7 = sub_23AA88CF8(a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_bridgeObjectRelease();
  if (!__OFSUB__(v4, v9))
  {
    *v3 = v4 - v9;
    *((_BYTE *)v3 + 8) = 0;
LABEL_7:
    swift_beginAccess();
    v10 = a2;
    sub_23B182CD8((uint64_t)v10);
    swift_endAccess();

    return;
  }
  __break(1u);
}

uint64_t sub_23AE8764C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23B1C60EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v2 + 64);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v16 = MEMORY[0x24BEE4B08];
    v13 = *(_QWORD *)(v2 + 40);
    MEMORY[0x24BDAC7A8](result);
    *(&v15 - 2) = (uint64_t)&v16;
    (*(void (**)(uint64_t, uint64_t, void (*)(id *)))(*(_QWORD *)v13 + 704))(a1, a2, sub_23AEB25F4);
    v14 = v16;
    if (v3)
      swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23AE8778C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, uint64_t);
  int v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  int *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  int *v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  id v66;
  _QWORD *v68;
  _BYTE v69[4];
  int v70;
  void *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;

  v73 = a6;
  v74 = a7;
  v70 = a5;
  v72 = a4;
  v71 = a3;
  v75 = a8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v69[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v69[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v69[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E64F0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = &v69[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_23AA8EFC8(a1, (uint64_t)v23, &qword_2542E4770);
  sub_23AA8EFC8(a2, v24, &qword_2542E4770);
  v25 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a1) = v25(v23, 1, v10);
  v26 = v25((_BYTE *)v24, 1, v10);
  if ((_DWORD)a1 != 1)
  {
    if (v26 != 1)
    {
      sub_23AA724E8((uint64_t)v23, (uint64_t)v17, (uint64_t *)&unk_2542E4760);
      sub_23AA724E8(v24, (uint64_t)v14, (uint64_t *)&unk_2542E4760);
      v51 = sub_23AE4FFB8((uint64_t)v14);
      if ((v51 == 0 || (v72 & 1) == 0) | (v51 >> 43) & 1)
        v52 = v51;
      else
        v52 = v51 | 0x80000000000;
      v53 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64C8);
      v54 = v75;
      v55 = (uint64_t)v75 + v53[12];
      v56 = v53[16];
      v57 = (_QWORD *)((char *)v75 + v53[20]);
      sub_23AA724E8((uint64_t)v17, (uint64_t)v75, (uint64_t *)&unk_2542E4760);
      sub_23AA724E8((uint64_t)v14, v55, (uint64_t *)&unk_2542E4760);
      *(_QWORD *)((char *)v54 + v56) = v52;
      v58 = v74;
      *v57 = v73;
      v57[1] = v58;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
      swift_storeEnumTagMultiPayload();
      return swift_bridgeObjectRetain();
    }
    sub_23AA724E8((uint64_t)v23, (uint64_t)v19, (uint64_t *)&unk_2542E4760);
    if (qword_2542E1FE0 != -1)
      swift_once();
    v32 = sub_23B1C63E0();
    v34 = v33;
    if (v32 == sub_23B1C63E0() && v34 == v35)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v37 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {
        v38 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E64E0);
        v39 = v75;
        v40 = (uint64_t)v75 + v38[12];
        v41 = v38[16];
        v42 = (_QWORD *)((char *)v75 + v38[20]);
        v43 = v71;
        *v75 = v71;
        sub_23AA724E8((uint64_t)v19, v40, (uint64_t *)&unk_2542E4760);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
        *((_BYTE *)v39 + v41) = v70 & 1;
        v44 = v74;
        *v42 = v73;
        v42[1] = v44;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
        swift_storeEnumTagMultiPayload();
        v45 = v43;
        return swift_bridgeObjectRetain();
      }
    }
    sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E4760);
    goto LABEL_27;
  }
  if (v26 != 1)
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E64E8);
    v47 = *(int *)(v46 + 48);
    v48 = v75;
    v49 = (_QWORD *)((char *)v75 + *(int *)(v46 + 64));
    sub_23AA724E8(v24, (uint64_t)v75, (uint64_t *)&unk_2542E4760);
    *((_BYTE *)v48 + v47) = v72 & 1;
    v50 = v74;
    *v49 = v73;
    v49[1] = v50;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
    swift_storeEnumTagMultiPayload();
    return swift_bridgeObjectRetain();
  }
  if (qword_2542E1FE0 != -1)
    swift_once();
  v27 = v71;
  v28 = sub_23B1C63E0();
  v30 = v29;
  if (v28 != sub_23B1C63E0() || v30 != v31)
  {
    v59 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v59 & 1) != 0)
      goto LABEL_27;
    v60 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E64E0);
    v61 = v75;
    v62 = (char *)v75 + v60[12];
    v63 = v60[16];
    v64 = (_QWORD *)((char *)v75 + v60[20]);
    *v75 = v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v62, 1, 1, v10);
    *((_BYTE *)v61 + v63) = v70 & 1;
    v65 = v74;
    *v64 = v73;
    v64[1] = v65;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
    swift_storeEnumTagMultiPayload();
    v66 = v27;
    return swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
LABEL_27:
  v68 = v75;
  *v75 = 0xD00000000000001ALL;
  v68[1] = 0x800000023B206C00;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23AE87CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, uint64_t, uint64_t);
  int v27;
  char v28;
  uint64_t v29;
  int *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v57;
  _BYTE v58[4];
  int v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v63 = a7;
  v64 = a8;
  v59 = a6;
  v61 = a4;
  v62 = a5;
  v60 = a3;
  v65 = a9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v58[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = &v58[-v17];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v58[-v19];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0928);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = &v58[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_23AA8EFC8(a1, (uint64_t)v24, (uint64_t *)&unk_2542E4750);
  sub_23AA8EFC8(a2, v25, (uint64_t *)&unk_2542E4750);
  v26 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(a2) = v26(v24, 1, v11);
  v27 = v26((_BYTE *)v25, 1, v11);
  if ((_DWORD)a2 == 1)
  {
    if (v27 != 1)
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6480);
      v44 = *(int *)(v43 + 48);
      v45 = v65;
      v46 = (_QWORD *)((char *)v65 + *(int *)(v43 + 64));
      sub_23AA724E8(v25, (uint64_t)v65, (uint64_t *)&unk_2542E6B00);
      *((_BYTE *)v45 + v44) = v62 & 1;
      v47 = v64;
      *v46 = v63;
      v46[1] = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
      goto LABEL_18;
    }
    v28 = v61;
    v29 = v60;
    if (v61 != 2 || v60)
    {
      v30 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6470);
      v31 = v65;
      v32 = (char *)v65 + v30[12];
      v33 = v30[16];
      v34 = (_QWORD *)((char *)v65 + v30[20]);
      *v65 = v29;
      *((_BYTE *)v31 + 8) = v28;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v32, 1, 1, v11);
      *((_BYTE *)v31 + v33) = v59 & 1;
      v35 = v64;
      *v34 = v63;
      v34[1] = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (v27 != 1)
    {
      sub_23AA724E8((uint64_t)v24, (uint64_t)v18, (uint64_t *)&unk_2542E6B00);
      sub_23AA724E8(v25, (uint64_t)v15, (uint64_t *)&unk_2542E6B00);
      v48 = sub_23AE51534((uint64_t)v15);
      if ((v48 == 0 || (v62 & 1) == 0) | (v48 >> 43) & 1)
        v49 = v48;
      else
        v49 = v48 | 0x80000000000;
      v50 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E08F0);
      v51 = v65;
      v52 = (uint64_t)v65 + v50[12];
      v53 = v50[16];
      v54 = (_QWORD *)((char *)v65 + v50[20]);
      sub_23AA724E8((uint64_t)v18, (uint64_t)v65, (uint64_t *)&unk_2542E6B00);
      sub_23AA724E8((uint64_t)v15, v52, (uint64_t *)&unk_2542E6B00);
      *(_QWORD *)((char *)v51 + v53) = v49;
      v55 = v64;
      *v54 = v63;
      v54[1] = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
      goto LABEL_18;
    }
    sub_23AA724E8((uint64_t)v24, (uint64_t)v20, (uint64_t *)&unk_2542E6B00);
    if (v20[8] != 2 || *(_QWORD *)v20 != 0)
    {
      v37 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6470);
      v38 = v65;
      v39 = (uint64_t)v65 + v37[12];
      v40 = v37[16];
      v41 = (_QWORD *)((char *)v65 + v37[20]);
      *v65 = v60;
      *((_BYTE *)v38 + 8) = v61;
      sub_23AA724E8((uint64_t)v20, v39, (uint64_t *)&unk_2542E6B00);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v39, 0, 1, v11);
      *((_BYTE *)v38 + v40) = v59 & 1;
      v42 = v64;
      *v41 = v63;
      v41[1] = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
      goto LABEL_18;
    }
    sub_23AA8A05C((uint64_t)v20, (uint64_t *)&unk_2542E6B00);
  }
  v57 = v65;
  *v65 = 0xD00000000000001ALL;
  v57[1] = 0x800000023B206C00;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
  return swift_storeEnumTagMultiPayload();
}

void sub_23AE88114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, id *, uint64_t);
  id v12;
  BOOL v13;
  int v14;
  int v15;
  int v16;
  void *v17;
  int v18;
  id v19;
  double v20;
  double v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  id v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unsigned __int8 v44;
  char v45;
  char v46;
  __int128 v47;
  char v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  char v73;
  uint64_t v74;
  _OWORD v75[12];
  uint64_t v76;
  uint64_t v77;
  char v78;
  __int128 v79;
  char v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int16 v87;
  char v88;
  __int128 v89;
  char v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  char v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  char v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  unsigned __int8 v109;
  char v110;
  char v111;
  __int128 v112;
  char v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  char v138;
  uint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  _OWORD v146[2];
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  __int128 v152;
  __int128 v153;
  _OWORD v154[7];
  __int128 v155;
  _OWORD v156[5];
  char v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  char v161;
  uint64_t v162;
  _OWORD v163[12];
  uint64_t v164;
  uint64_t v165;
  char v166;
  __int128 v167;
  char v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int16 v175;
  char v176;
  __int128 v177;
  char v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  __int128 v187;
  char v188;
  uint64_t v189;
  __int128 v190;
  uint64_t v191;
  char v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int16 v197;
  char v198;
  __int128 v199;
  char v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  char v221;
  uint64_t v222;
  uint64_t v223;
  __int128 v224;
  char v225;
  uint64_t v226;
  __int128 v227;
  uint64_t v228;
  char v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int16 v234;
  char v235;
  __int128 v236;
  char v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  char v258;
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  char v262;
  uint64_t v263;
  _OWORD v264[31];
  _BYTE v265[496];
  _BYTE v266[504];
  _BYTE v267[504];
  id v268;
  __int16 v269;
  _QWORD v270[63];
  uint64_t v271;

  v2 = MEMORY[0x24BDAC7A8](a1);
  v4 = v3;
  v5 = (id *)v2;
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = MEMORY[0x24BEE4AF8];
  if (*((_BYTE *)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48)) == 1)
  {
    v36 = v6;
    v10 = *(_QWORD *)(v4 + 16);
    v268 = *v5;
    v269 = 0;
    v11 = *(void (**)(_QWORD *__return_ptr, id *, uint64_t))(*(_QWORD *)v10 + 168);
    v12 = v268;
    v11(v270, &v268, 1);
    if (v1)
    {

      return;
    }

    sub_23AA724E8((uint64_t)v270, (uint64_t)v266, &qword_2569E6458);
    sub_23AA724E8((uint64_t)v266, (uint64_t)v267, &qword_2569E6458);
    v13 = sub_23AAFC2A4((uint64_t)v267) == 1;
    v34 = v4;
    if (v13)
    {
      sub_23ACFC784(v264);
    }
    else
    {
      memcpy(v264, v270, sizeof(v264));
      nullsub_1(v264);
    }
    sub_23AA724E8((uint64_t)v264, (uint64_t)v265, (uint64_t *)&unk_2569E63E0);
    v35 = v12;
    sub_23AA724E8((uint64_t)v265, (uint64_t)&v227, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8((uint64_t)v265, (uint64_t)v264, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4((uint64_t)v264) != 1)
    {
      sub_23AA724E8((uint64_t)v265, (uint64_t)v163, (uint64_t *)&unk_2569E63E0);
      v14 = HIBYTE(v234);
      v218 = v255;
      v219 = v256;
      v220 = v257;
      v214 = v251;
      v215 = v252;
      v216 = v253;
      v217 = v254;
      v210 = v247;
      v211 = v248;
      v212 = v249;
      v213 = v250;
      v209 = v246;
      v206 = v243;
      v207 = v244;
      v208 = v245;
      v190 = v227;
      v191 = v228;
      v192 = v229;
      v193 = v230;
      v194 = v231;
      v195 = v232;
      v196 = v233;
      v197 = v234;
      v198 = v235;
      v199 = v236;
      v200 = v237;
      v201 = v238;
      v202 = v239;
      v203 = v240;
      v204 = v241;
      v205 = v242;
      v221 = v258;
      v222 = v259;
      v223 = v260;
      v224 = v261;
      v225 = v262;
      v226 = v263;
      sub_23AEB34A4((uint64_t)v163);
      sub_23AAFCF50((uint64_t)&v190);
      if (v14 != 6)
        goto LABEL_27;
    }
    sub_23AA724E8((uint64_t)v265, (uint64_t)&v190, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8((uint64_t)v265, (uint64_t)&v227, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4((uint64_t)&v227) != 1)
    {
      v15 = v197;
      v156[2] = v218;
      v156[3] = v219;
      v156[4] = v220;
      v154[6] = v214;
      v155 = v215;
      v156[0] = v216;
      v156[1] = v217;
      v154[2] = v210;
      v154[3] = v211;
      v154[4] = v212;
      v154[5] = v213;
      v154[1] = v209;
      v152 = v206;
      v153 = v207;
      v154[0] = v208;
      v140 = v190;
      *(_QWORD *)&v141 = v191;
      BYTE8(v141) = v192;
      v142 = v193;
      v143 = v194;
      v144 = v195;
      v145 = v196;
      LOWORD(v146[0]) = v197;
      BYTE2(v146[0]) = v198;
      *(_OWORD *)((char *)v146 + 8) = v199;
      BYTE8(v146[1]) = v200;
      v147 = v201;
      v148 = v202;
      v149 = v203;
      v150 = v204;
      v151 = v205;
      v157 = v221;
      v158 = v222;
      v159 = v223;
      v160 = v224;
      v161 = v225;
      v162 = v226;
      sub_23AA724E8((uint64_t)v265, (uint64_t)v163, (uint64_t *)&unk_2569E63E0);
      sub_23AEB34A4((uint64_t)v163);
      sub_23AAFCF50((uint64_t)&v140);
      if (v15 == 3)
        goto LABEL_27;
    }
    sub_23AA724E8((uint64_t)v265, (uint64_t)v163, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8((uint64_t)v265, (uint64_t)&v190, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4((uint64_t)&v190) != 1)
    {
      sub_23AA724E8((uint64_t)v265, (uint64_t)&v102, (uint64_t *)&unk_2569E63E0);
      v16 = HIBYTE(v175);
      v149 = v163[10];
      v150 = v163[11];
      v146[0] = v163[6];
      v146[1] = v163[7];
      v148 = v163[9];
      v147 = v163[8];
      v142 = v163[2];
      v143 = v163[3];
      v145 = v163[5];
      v144 = v163[4];
      v141 = v163[1];
      v140 = v163[0];
      v151 = v164;
      *(_QWORD *)&v152 = v165;
      BYTE8(v152) = v166;
      v153 = v167;
      LOBYTE(v154[0]) = v168;
      *(_OWORD *)((char *)v154 + 8) = v169;
      *(_OWORD *)((char *)&v154[1] + 8) = v170;
      *(_OWORD *)((char *)&v154[2] + 8) = v171;
      *(_OWORD *)((char *)&v154[3] + 8) = v172;
      *(_OWORD *)((char *)&v154[4] + 8) = v173;
      *(_OWORD *)((char *)&v154[5] + 8) = v174;
      WORD4(v154[6]) = v175;
      BYTE10(v154[6]) = v176;
      v155 = v177;
      LOBYTE(v156[0]) = v178;
      *(_OWORD *)((char *)v156 + 8) = v179;
      *(_OWORD *)((char *)&v156[1] + 8) = v180;
      *(_OWORD *)((char *)&v156[2] + 8) = v181;
      *(_OWORD *)((char *)&v156[3] + 8) = v182;
      *((_QWORD *)&v156[4] + 1) = v183;
      v157 = v184;
      v158 = v185;
      v159 = v186;
      v160 = v187;
      v161 = v188;
      v162 = v189;
      sub_23AEB34A4((uint64_t)&v102);
      sub_23AAFCF50((uint64_t)&v140);
      if (v16 != 6)
        goto LABEL_27;
    }
    v17 = v35;
    sub_23AA724E8((uint64_t)v265, (uint64_t)&v140, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8((uint64_t)v265, (uint64_t)v163, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4((uint64_t)v163) != 1)
    {
      v18 = BYTE8(v154[6]);
      v75[10] = v149;
      v75[11] = v150;
      v75[6] = v146[0];
      v75[7] = v146[1];
      v75[8] = v147;
      v75[9] = v148;
      v75[2] = v142;
      v75[3] = v143;
      v75[4] = v144;
      v75[5] = v145;
      v75[0] = v140;
      v75[1] = v141;
      v76 = v151;
      v77 = v152;
      v78 = BYTE8(v152);
      v79 = v153;
      v80 = v154[0];
      v81 = *(_OWORD *)((char *)v154 + 8);
      v82 = *(_OWORD *)((char *)&v154[1] + 8);
      v83 = *(_OWORD *)((char *)&v154[2] + 8);
      v84 = *(_OWORD *)((char *)&v154[3] + 8);
      v85 = *(_OWORD *)((char *)&v154[4] + 8);
      v86 = *(_OWORD *)((char *)&v154[5] + 8);
      v87 = WORD4(v154[6]);
      v88 = BYTE10(v154[6]);
      v89 = v155;
      v90 = v156[0];
      v91 = *(_OWORD *)((char *)v156 + 8);
      v92 = *(_OWORD *)((char *)&v156[1] + 8);
      v93 = *(_OWORD *)((char *)&v156[2] + 8);
      v94 = *(_OWORD *)((char *)&v156[3] + 8);
      v95 = *((_QWORD *)&v156[4] + 1);
      v96 = v157;
      v97 = v158;
      v98 = v159;
      v99 = v160;
      v100 = v161;
      v101 = v162;
      sub_23AA724E8((uint64_t)v265, (uint64_t)&v102, (uint64_t *)&unk_2569E63E0);
      sub_23AEB34A4((uint64_t)&v102);
      sub_23AAFCF50((uint64_t)v75);
      if (v18 == 3)
        goto LABEL_27;
    }
    v19 = v17;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v21 = v20;
    v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23 = v36;
    v22(v9, v36);
    v24 = v21 * 1000000000.0;
    if ((~COERCE__INT64(v21 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          v25 = (uint64_t)v24;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E63A0);
          v26 = swift_allocObject();
          *(_BYTE *)(v26 + 40) = 1;
          *(_QWORD *)(v26 + 24) = 0;
          *(_QWORD *)(v26 + 32) = 0;
          *(_QWORD *)(v26 + 16) = 0;
          *(_OWORD *)(v26 + 48) = 0u;
          *(_OWORD *)(v26 + 64) = 0u;
          *(_QWORD *)(v26 + 80) = 0;
          *(_QWORD *)(v26 + 112) = 0;
          *(_QWORD *)(v26 + 120) = v25;
          *(_QWORD *)(v26 + 128) = 0x8000;
          *(_QWORD *)(v26 + 136) = v19;
          *(_OWORD *)(v26 + 88) = xmmword_23B1DA960;
          *(_BYTE *)(v26 + 104) = 0;
          sub_23AAAEE10((void *)0x40100, 0, 0);
          MEMORY[0x23B85F008]();
          if (*(_QWORD *)((v271 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v271 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_19:
            sub_23B1C6788();
            sub_23B1C671C();
            if (*(_BYTE *)(*(_QWORD *)(v34 + 32) + 32) == 1)
            {
              sub_23AA724E8((uint64_t)v265, (uint64_t)&v102, (uint64_t *)&unk_2569E63E0);
              sub_23AA724E8((uint64_t)v265, (uint64_t)&v140, (uint64_t *)&unk_2569E63E0);
              if (sub_23AAFC2A4((uint64_t)&v140) != 1)
              {
                v27 = v109;
                v66 = v131;
                v67 = v132;
                v68 = v133;
                v62 = v127;
                v63 = v128;
                v64 = v129;
                v65 = v130;
                v58 = v123;
                v59 = v124;
                v60 = v125;
                v61 = v126;
                v57 = v122;
                v54 = v119;
                v55 = v120;
                v56 = v121;
                v37 = v102;
                v38 = v103;
                v39 = v104;
                v40 = v105;
                v41 = v106;
                v42 = v107;
                v43 = v108;
                v44 = v109;
                v45 = v110;
                v46 = v111;
                v47 = v112;
                v48 = v113;
                v49 = v114;
                v50 = v115;
                v51 = v116;
                v52 = v117;
                v53 = v118;
                v69 = v134;
                v70 = v135;
                v71 = v136;
                v72 = v137;
                v73 = v138;
                v74 = v139;
                sub_23AA724E8((uint64_t)v265, (uint64_t)v75, (uint64_t *)&unk_2569E63E0);
                sub_23AEB34A4((uint64_t)v75);
                sub_23AAFCF50((uint64_t)&v37);
                if (!v27)
                  goto LABEL_27;
              }
            }
            v28 = *v5;
            sub_23B1C5BD0();
            sub_23B1C5B94();
            v30 = v29;
            v22(v9, v23);
            v31 = v30 * 1000000000.0;
            if ((~COERCE__INT64(v30 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              if (v31 > -9.22337204e18)
              {
                if (v31 < 9.22337204e18)
                {
                  v32 = (uint64_t)v31;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
                  swift_allocObject();
                  sub_23AEA89CC(v28, 0, v32, 0x8000);

                  MEMORY[0x23B85F008]();
                  if (*(_QWORD *)((v271 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v271 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  {
LABEL_26:
                    sub_23B1C6788();
                    sub_23B1C671C();
LABEL_27:
                    sub_23ADF2D34((uint64_t)v265, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB1930);
                    return;
                  }
LABEL_36:
                  sub_23B1C6740();
                  goto LABEL_26;
                }
LABEL_35:
                __break(1u);
                goto LABEL_36;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_35;
          }
LABEL_32:
          sub_23B1C6740();
          goto LABEL_19;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
}

_QWORD *sub_23AE88CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  _QWORD *result;
  BOOL v14;
  unsigned __int8 v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  char *v24;
  double v25;
  double v26;
  void (*v27)(char *, uint64_t);
  double v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  char *v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  char v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  unsigned __int8 v53;
  char v54;
  char v55;
  __int128 v56;
  char v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  char v80;
  uint64_t v81;
  _OWORD v82[16];
  uint64_t v83;
  char v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int16 v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  __int128 v107;
  char v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  unsigned __int8 v115;
  char v116;
  char v117;
  __int128 v118;
  char v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  char v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  _OWORD v146[7];
  __int128 v147;
  _OWORD v148[5];
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  char v166;
  uint64_t v167;
  _OWORD v168[16];
  uint64_t v169;
  char v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int16 v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  __int128 v193;
  char v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int16 v201;
  char v202;
  __int128 v203;
  char v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  uint64_t v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  __int128 v226;
  char v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  __int128 v231;
  char v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int16 v239;
  char v240;
  __int128 v241;
  char v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  uint64_t v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  uint64_t v260;
  char v261;
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  char v265;
  uint64_t v266;
  _OWORD v267[31];
  _BYTE v268[496];
  _BYTE v269[504];
  _BYTE v270[504];
  uint64_t v271;
  __int16 v272;
  _QWORD v273[63];
  uint64_t v274;

  v2 = MEMORY[0x24BDAC7A8](a1);
  v4 = v3;
  v5 = v2;
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = MEMORY[0x24BEE4AF8];
  if (*(_BYTE *)(v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48)) != 1)
    return (_QWORD *)v274;
  v41 = v9;
  v42 = v6;
  v10 = *(_QWORD *)(v4 + 16);
  v11 = *(_QWORD *)v5;
  v12 = *(_BYTE *)(v5 + 8);
  v271 = *(_QWORD *)v5;
  v272 = v12;
  result = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v10 + 168))(v273, &v271, 1);
  if (v1)
    return result;
  v40 = v11;
  sub_23AA724E8((uint64_t)v273, (uint64_t)v269, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v269, (uint64_t)v270, (uint64_t *)&unk_2542E4CB0);
  v14 = sub_23AAFC2A4((uint64_t)v270) == 1;
  v39 = v4;
  if (v14)
  {
    sub_23ACFC784(v267);
  }
  else
  {
    memcpy(v267, v273, sizeof(v267));
    nullsub_1(v267);
  }
  sub_23AA724E8((uint64_t)v267, (uint64_t)v268, qword_2542E6E20);
  v15 = v12;
  sub_23AA724E8((uint64_t)v268, (uint64_t)&v229, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v268, (uint64_t)v267, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v267) == 1)
    goto LABEL_40;
  sub_23AA724E8((uint64_t)v268, (uint64_t)v168, qword_2542E6E20);
  v16 = HIBYTE(v239);
  v220 = v258;
  v221 = v259;
  v222 = v260;
  v216 = v254;
  v217 = v255;
  v219 = v257;
  v218 = v256;
  v212 = v250;
  v213 = v251;
  v215 = v253;
  v214 = v252;
  v211 = v249;
  v210 = v248;
  v191 = v229;
  v192 = v230;
  v193 = v231;
  v194 = v232;
  v195 = v233;
  v196 = v234;
  v197 = v235;
  v198 = v236;
  v199 = v237;
  v200 = v238;
  v201 = v239;
  v202 = v240;
  v203 = v241;
  v204 = v242;
  v205 = v243;
  v206 = v244;
  v207 = v245;
  v208 = v246;
  v209 = v247;
  v223 = v261;
  v224 = v262;
  v225 = v263;
  v226 = v264;
  v227 = v265;
  v228 = v266;
  sub_23ACFC940((uint64_t)v168);
  sub_23AAFC3AC((uint64_t)&v191);
  if (v16 == 6)
  {
LABEL_40:
    sub_23AA724E8((uint64_t)v268, (uint64_t)&v191, qword_2542E6E20);
    sub_23AA724E8((uint64_t)v268, (uint64_t)&v229, qword_2542E6E20);
    v17 = sub_23AAFC2A4((uint64_t)&v229);
    v18 = v40;
    if (v17 == 1)
      goto LABEL_10;
    v19 = v201;
    v159 = v220;
    v160 = v221;
    v161 = v222;
    v155 = v216;
    v156 = v217;
    v158 = v219;
    v157 = v218;
    v151 = v212;
    v152 = v213;
    v154 = v215;
    v153 = v214;
    v150 = v211;
    v149 = v210;
    *(_QWORD *)&v144 = v191;
    BYTE8(v144) = v192;
    v145 = v193;
    LOBYTE(v146[0]) = v194;
    *(_OWORD *)((char *)v146 + 8) = v195;
    *(_OWORD *)((char *)&v146[1] + 8) = v196;
    *(_OWORD *)((char *)&v146[2] + 8) = v197;
    *(_OWORD *)((char *)&v146[3] + 8) = v198;
    *(_OWORD *)((char *)&v146[4] + 8) = v199;
    *(_OWORD *)((char *)&v146[5] + 8) = v200;
    WORD4(v146[6]) = v201;
    BYTE10(v146[6]) = v202;
    v147 = v203;
    LOBYTE(v148[0]) = v204;
    *(_OWORD *)((char *)v148 + 8) = v205;
    *(_OWORD *)((char *)&v148[1] + 8) = v206;
    *(_OWORD *)((char *)&v148[2] + 8) = v207;
    *(_OWORD *)((char *)&v148[3] + 8) = v208;
    *((_QWORD *)&v148[4] + 1) = v209;
    v162 = v223;
    v163 = v224;
    v164 = v225;
    v165 = v226;
    v166 = v227;
    v167 = v228;
    sub_23AA724E8((uint64_t)v268, (uint64_t)v168, qword_2542E6E20);
    sub_23ACFC940((uint64_t)v168);
    sub_23AAFC3AC((uint64_t)&v144);
    if (v19 != 3)
    {
LABEL_10:
      sub_23AA724E8((uint64_t)v268, (uint64_t)v168, qword_2542E6E20);
      sub_23AA724E8((uint64_t)v268, (uint64_t)&v191, qword_2542E6E20);
      v20 = sub_23AAFC2A4((uint64_t)&v191);
      v21 = v39;
      if (v20 == 1)
      {
LABEL_13:
        sub_23AA724E8((uint64_t)v268, (uint64_t)&v144, qword_2542E6E20);
        sub_23AA724E8((uint64_t)v268, (uint64_t)v168, qword_2542E6E20);
        if (sub_23AAFC2A4((uint64_t)v168) != 1)
        {
          v23 = v155;
          v82[12] = v148[2];
          v82[13] = v148[3];
          v82[8] = v146[6];
          v82[9] = v147;
          v82[10] = v148[0];
          v82[11] = v148[1];
          v82[4] = v146[2];
          v82[5] = v146[3];
          v82[6] = v146[4];
          v82[7] = v146[5];
          v82[0] = v144;
          v82[1] = v145;
          v82[2] = v146[0];
          v82[3] = v146[1];
          v82[14] = v148[4];
          v82[15] = v149;
          v83 = v150;
          v84 = BYTE8(v150);
          v85 = v151;
          v86 = v152;
          v87 = v153;
          v88 = v154;
          v89 = v155;
          v90 = BYTE2(v155);
          v91 = *((_QWORD *)&v155 + 1);
          v92 = v156;
          v93 = BYTE8(v156);
          v94 = v157;
          v95 = v158;
          v96 = v159;
          v97 = v160;
          v98 = v161;
          v99 = v162;
          v100 = v163;
          v101 = v164;
          v102 = v165;
          v103 = v166;
          v104 = v167;
          sub_23AA724E8((uint64_t)v268, (uint64_t)&v105, qword_2542E6E20);
          sub_23ACFC940((uint64_t)&v105);
          sub_23AAFC3AC((uint64_t)v82);
          if (v23 == 3)
            goto LABEL_27;
        }
        v24 = v41;
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v26 = v25;
        v27 = *(void (**)(char *, uint64_t))(v7 + 8);
        v27(v24, v42);
        v28 = v26 * 1000000000.0;
        if ((~COERCE__INT64(v26 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v28 > -9.22337204e18)
          {
            if (v28 < 9.22337204e18)
            {
              v29 = (uint64_t)v28;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6118);
              v30 = swift_allocObject();
              *(_BYTE *)(v30 + 144) = v15;
              *(_QWORD *)(v30 + 24) = 0;
              *(_QWORD *)(v30 + 32) = 0;
              *(_QWORD *)(v30 + 16) = 0;
              *(_BYTE *)(v30 + 40) = 1;
              *(_OWORD *)(v30 + 48) = 0u;
              *(_OWORD *)(v30 + 64) = 0u;
              *(_QWORD *)(v30 + 80) = 0;
              *(_QWORD *)(v30 + 112) = 0;
              *(_QWORD *)(v30 + 120) = v29;
              *(_QWORD *)(v30 + 128) = 0x8000;
              *(_QWORD *)(v30 + 136) = v18;
              *(_OWORD *)(v30 + 88) = xmmword_23B1DA960;
              *(_BYTE *)(v30 + 104) = 0;
              sub_23AAAEE10((void *)0x40100, 0, 0);
              MEMORY[0x23B85F008]();
              if (*(_QWORD *)((v274 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v274 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              {
LABEL_19:
                sub_23B1C6788();
                sub_23B1C671C();
                if (*(_BYTE *)(*(_QWORD *)(v21 + 32) + 32) == 1)
                {
                  sub_23AA724E8((uint64_t)v268, (uint64_t)&v105, qword_2542E6E20);
                  sub_23AA724E8((uint64_t)v268, (uint64_t)&v144, qword_2542E6E20);
                  if (sub_23AAFC2A4((uint64_t)&v144) != 1)
                  {
                    v31 = v115;
                    v73 = v135;
                    v74 = v136;
                    v75 = v137;
                    v69 = v131;
                    v70 = v132;
                    v71 = v133;
                    v72 = v134;
                    v65 = v127;
                    v66 = v128;
                    v67 = v129;
                    v68 = v130;
                    v63 = v125;
                    v64 = v126;
                    v43 = v105;
                    v44 = v106;
                    v45 = v107;
                    v46 = v108;
                    v47 = v109;
                    v48 = v110;
                    v49 = v111;
                    v50 = v112;
                    v51 = v113;
                    v52 = v114;
                    v53 = v115;
                    v54 = v116;
                    v55 = v117;
                    v56 = v118;
                    v57 = v119;
                    v58 = v120;
                    v59 = v121;
                    v60 = v122;
                    v61 = v123;
                    v62 = v124;
                    v76 = v138;
                    v77 = v139;
                    v78 = v140;
                    v79 = v141;
                    v80 = v142;
                    v81 = v143;
                    sub_23AA724E8((uint64_t)v268, (uint64_t)v82, qword_2542E6E20);
                    sub_23ACFC940((uint64_t)v82);
                    sub_23AAFC3AC((uint64_t)&v43);
                    if (!v31)
                      goto LABEL_27;
                  }
                }
                v32 = *(_QWORD *)v5;
                v33 = *(_BYTE *)(v5 + 8);
                v34 = v41;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v36 = v35;
                v27(v34, v42);
                v37 = v36 * 1000000000.0;
                if ((~COERCE__INT64(v36 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v37 > -9.22337204e18)
                  {
                    if (v37 < 9.22337204e18)
                    {
                      v38 = (uint64_t)v37;
                      __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
                      swift_allocObject();
                      sub_23AEA220C(v32, v33, 0, v38, 0x8000);
                      MEMORY[0x23B85F008]();
                      if (*(_QWORD *)((v274 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v274 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                      {
LABEL_26:
                        sub_23B1C6788();
                        sub_23B1C671C();
                        goto LABEL_27;
                      }
LABEL_37:
                      sub_23B1C6740();
                      goto LABEL_26;
                    }
LABEL_36:
                    __break(1u);
                    goto LABEL_37;
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
                goto LABEL_36;
              }
LABEL_33:
              sub_23B1C6740();
              goto LABEL_19;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_32;
      }
      sub_23AA724E8((uint64_t)v268, (uint64_t)&v105, qword_2542E6E20);
      v22 = HIBYTE(v175);
      v148[2] = v168[12];
      v148[3] = v168[13];
      v146[6] = v168[8];
      v147 = v168[9];
      v148[1] = v168[11];
      v148[0] = v168[10];
      v146[2] = v168[4];
      v146[3] = v168[5];
      v146[5] = v168[7];
      v146[4] = v168[6];
      v144 = v168[0];
      v145 = v168[1];
      v146[1] = v168[3];
      v146[0] = v168[2];
      v148[4] = v168[14];
      v149 = v168[15];
      *(_QWORD *)&v150 = v169;
      BYTE8(v150) = v170;
      v151 = v171;
      v152 = v172;
      v153 = v173;
      v154 = v174;
      LOWORD(v155) = v175;
      BYTE2(v155) = v176;
      *((_QWORD *)&v155 + 1) = v177;
      *(_QWORD *)&v156 = v178;
      BYTE8(v156) = v179;
      v157 = v180;
      v158 = v181;
      v159 = v182;
      v160 = v183;
      v161 = v184;
      v162 = v185;
      v163 = v186;
      v164 = v187;
      v165 = v188;
      v166 = v189;
      v167 = v190;
      sub_23ACFC940((uint64_t)&v105);
      sub_23AAFC3AC((uint64_t)&v144);
      if (v22 == 6)
      {
        v18 = v40;
        goto LABEL_13;
      }
    }
  }
LABEL_27:
  sub_23ADF2D34((uint64_t)v268, (voidsub_23AAAEC3C);
  return (_QWORD *)v274;
}

void sub_23AE898B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD, uint64_t, uint64_t, id *);
  id v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  id v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  id v27;

  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_BYTE **)(a2 + 32);
  if ((v11[32] & 1) == 0)
  {
    v12 = *(_QWORD *)(a1 + 88);
    v25 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)&v26 = a1 + 8;
    v27 = *(id *)a1;
    v13 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, id *))(*(_QWORD *)v11 + 256);
    v14 = v27;
    v15 = v13(v26, v25, v12, &v27);

    if (!v3)
    {
      v24 = 0;
      v25 = v15;
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v17 = (id *)(v25 + 32);
        v26 = xmmword_23B1CA750;
        while (1)
        {
          v18 = *v17;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v20 = v19;
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
          v21 = v20 * 1000000000.0;
          if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) == 0)
            break;
          if (v21 <= -9.22337204e18)
            goto LABEL_12;
          if (v21 >= 9.22337204e18)
            goto LABEL_13;
          v22 = (uint64_t)v21;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
          v23 = swift_allocObject();
          *(_QWORD *)(v23 + 24) = 0;
          *(_QWORD *)(v23 + 32) = 0;
          *(_QWORD *)(v23 + 16) = 0;
          *(_BYTE *)(v23 + 40) = 1;
          *(_OWORD *)(v23 + 48) = 0u;
          *(_OWORD *)(v23 + 64) = 0u;
          *(_QWORD *)(v23 + 80) = 0;
          *(_QWORD *)(v23 + 112) = 0x2000000000000000;
          *(_QWORD *)(v23 + 120) = v22;
          *(_QWORD *)(v23 + 128) = 0;
          *(_QWORD *)(v23 + 136) = v18;
          *(_OWORD *)(v23 + 88) = v26;
          *(_BYTE *)(v23 + 104) = 0;
          sub_23AAAEE10((void *)0x40100, 0, 0);
          (*(void (**)(uint64_t))(*(_QWORD *)a3 + 144))(v23);
          swift_release();
          ++v17;
          if (!--v16)
            goto LABEL_9;
        }
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
      }
      else
      {
LABEL_9:
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_23AE89AD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char *v30;
  uint64_t v31;
  char v32;

  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE **)(a2 + 32);
  if ((v12[32] & 1) == 0)
  {
    v13 = a1[16];
    v14 = a1[17];
    v15 = *((_BYTE *)a1 + 8);
    v31 = *a1;
    v32 = v15;
    result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t *))(*(_QWORD *)v12 + 256))(a1 + 2, v13, v14, &v31);
    if (!v3)
    {
      v27 = 0;
      v28 = result;
      v16 = *(_QWORD *)(result + 16);
      if (v16)
      {
        v17 = (_BYTE *)(v28 + 40);
        v29 = xmmword_23B1CA750;
        v30 = v11;
        while (1)
        {
          v18 = *((_QWORD *)v17 - 1);
          v19 = *v17;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v21 = v20;
          result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
          v22 = v21 * 1000000000.0;
          if ((~COERCE__INT64(v21 * 1000000000.0) & 0x7FF0000000000000) == 0)
            break;
          if (v22 <= -9.22337204e18)
            goto LABEL_12;
          if (v22 >= 9.22337204e18)
            goto LABEL_13;
          v17 += 16;
          v23 = (uint64_t)v22;
          __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
          v24 = v7;
          v25 = v8;
          v26 = swift_allocObject();
          *(_BYTE *)(v26 + 144) = v19;
          *(_QWORD *)(v26 + 24) = 0;
          *(_QWORD *)(v26 + 32) = 0;
          *(_QWORD *)(v26 + 16) = 0;
          *(_BYTE *)(v26 + 40) = 1;
          *(_OWORD *)(v26 + 48) = 0u;
          *(_OWORD *)(v26 + 64) = 0u;
          *(_QWORD *)(v26 + 80) = 0;
          *(_QWORD *)(v26 + 112) = 0x2000000000000000;
          *(_QWORD *)(v26 + 120) = v23;
          *(_QWORD *)(v26 + 128) = 0;
          *(_QWORD *)(v26 + 136) = v18;
          *(_OWORD *)(v26 + 88) = v29;
          *(_BYTE *)(v26 + 104) = 0;
          sub_23AAAEE10((void *)0x40100, 0, 0);
          (*(void (**)(uint64_t))(*(_QWORD *)a3 + 144))(v26);
          v8 = v25;
          v7 = v24;
          v11 = v30;
          swift_release();
          if (!--v16)
            return swift_bridgeObjectRelease();
        }
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

BOOL sub_23AE89CFC(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v5;
  int *v6;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    return 0;
  v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a4) + 48);
  v6 = (int *)type metadata accessor for ItemMetadata();
  return (*(_BYTE *)(v5 + v6[20]) & 1) == 0
      && !*(_BYTE *)(v5 + v6[21])
      && (*(_BYTE *)(v5 + v6[16]) & 1) == 0
      && (*(_BYTE *)(v5 + v6[17]) & 1) == 0
      && (*(_QWORD *)&a3 & 0x10008) == 0x10000;
}

uint64_t sub_23AE89D84(_QWORD **a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a2;
  v25 = a3;
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(*a1[5] + 368))(&v24, 1);
  if (!v4 && (result & 1) != 0)
  {
    v14 = a4[14];
    v15 = a4[16];
    v22 = a4[15];
    v23 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F98);
    v16 = swift_allocObject();
    v17 = v16;
    *(_BYTE *)(v16 + 144) = a3;
    *(_QWORD *)(v16 + 24) = 0;
    *(_QWORD *)(v16 + 32) = 0;
    *(_QWORD *)(v16 + 16) = 0;
    *(_BYTE *)(v16 + 40) = 1;
    *(_OWORD *)(v16 + 48) = 0u;
    *(_OWORD *)(v16 + 64) = 0u;
    *(_QWORD *)(v16 + 80) = 0;
    *(_OWORD *)(v16 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v16 + 104) = 0;
    v18 = v22;
    *(_QWORD *)(v16 + 112) = v23;
    *(_QWORD *)(v16 + 120) = v18;
    *(_QWORD *)(v16 + 128) = v15;
    *(_QWORD *)(v16 + 136) = a2;
    if ((v15 & 0x8000) != 0)
    {
      *(_QWORD *)(v16 + 88) = 2359552;
      *(_BYTE *)(v16 + 104) = 0;
      sub_23AAAEE10((void *)0x40100, 0, 0);
    }
    ((void (*)(void))(*a1)[22])();
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v20 = v19;
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v21 = v20 * 1000000000.0;
    if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v21 > -9.22337204e18)
      {
        if (v21 < 9.22337204e18)
        {
          sub_23ADF3AAC(v17, (uint64_t)v21);
          swift_release();
          return swift_release();
        }
LABEL_12:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_23AE89F90(_QWORD **a1, void *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  void *v22;

  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a2;
  result = (*(uint64_t (**)(void **, uint64_t))(*a1[5] + 368))(&v22, 1);
  if (!v3 && (result & 1) != 0)
  {
    v12 = a3[15];
    v21 = a3[14];
    v13 = a3[16];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6228);
    v14 = swift_allocObject();
    v15 = v14;
    *(_QWORD *)(v14 + 24) = 0;
    *(_QWORD *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 16) = 0;
    *(_BYTE *)(v14 + 40) = 1;
    *(_OWORD *)(v14 + 48) = 0u;
    *(_OWORD *)(v14 + 64) = 0u;
    *(_QWORD *)(v14 + 80) = 0;
    *(_OWORD *)(v14 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v14 + 104) = 0;
    *(_QWORD *)(v14 + 112) = v21;
    *(_QWORD *)(v14 + 120) = v12;
    *(_QWORD *)(v14 + 128) = v13;
    *(_QWORD *)(v14 + 136) = a2;
    if ((v13 & 0x8000) != 0)
    {
      *(_QWORD *)(v14 + 88) = 2359552;
      *(_BYTE *)(v14 + 104) = 0;
      v17 = a2;
      sub_23AAAEE10((void *)0x40100, 0, 0);
    }
    else
    {
      v16 = a2;
    }
    ((void (*)(id))(*a1)[22])(v16);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v19 = v18;
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v20 = v19 * 1000000000.0;
    if ((~COERCE__INT64(v19 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v20 > -9.22337204e18)
      {
        if (v20 < 9.22337204e18)
        {
          sub_23ADF3AAC(v15, (uint64_t)v20);
          swift_release();
          return swift_release();
        }
LABEL_13:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

void sub_23AE8A198(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t inited;
  uint64_t v15;
  unint64_t *v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v48 = a3;
  v51 = a2;
  v55 = a1;
  v5 = sub_23B1C5BDC();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  MEMORY[0x24BDAC7A8](v52);
  v54 = (uint64_t *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E19C0);
  v50 = *(_QWORD *)(v59 - 8);
  v8 = MEMORY[0x24BDAC7A8](v59);
  v53 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v45 - v10;
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  MEMORY[0x24BDAC7A8](v47);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  inited = swift_initStackObject();
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 24) = v15;
  v16 = (unint64_t *)(inited + 24);
  *(_QWORD *)(inited + 32) = v15;
  v17 = (_QWORD *)(inited + 32);
  *(_QWORD *)(inited + 40) = v15;
  *(_QWORD *)(inited + 48) = 0;
  v49 = a4;
  v46 = a4;
  swift_beginAccess();
  v18 = *(_QWORD **)(inited + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_23AF98DE8(0, v18[2] + 1, 1, v18);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_23AF98DE8((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
  v18[2] = v20 + 1;
  v21 = &v18[15 * v20];
  v22 = v48;
  v23 = v46;
  v21[4] = v48;
  v21[5] = v23;
  *((_OWORD *)v21 + 3) = 0u;
  *((_OWORD *)v21 + 4) = 0u;
  *((_OWORD *)v21 + 5) = 0u;
  *((_OWORD *)v21 + 6) = 0u;
  *((_OWORD *)v21 + 7) = 0u;
  *((_OWORD *)v21 + 8) = 0u;
  *(_DWORD *)((char *)v21 + 143) = 0;
  *((_BYTE *)v21 + 147) = 5;
  *v17 = v18;
  swift_endAccess();
  *(_QWORD *)v13 = v22;
  v13[8] = v49;
  strcpy(v13 + 16, "lazily deleted");
  v13[31] = -18;
  swift_storeEnumTagMultiPayload();
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_2542DDDA0);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  v24 = *v16;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_23AF98DC0(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
  v26 = *(_QWORD *)(v24 + 16);
  v25 = *(_QWORD *)(v24 + 24);
  if (v26 >= v25 >> 1)
    v24 = sub_23AF98DC0(v25 > 1, v26 + 1, 1, v24);
  *(_QWORD *)(v24 + 16) = v26 + 1;
  v49 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v27 = *(_QWORD *)(v50 + 72);
  sub_23AA724E8((uint64_t)v11, v24 + v49 + v27 * v26, &qword_2542E19C0);
  *v16 = v24;
  swift_endAccess();
  sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542DDDA0);
  swift_beginAccess();
  v28 = (_QWORD *)*v17;
  v29 = v51;
  v30 = v51;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v28 = sub_23AF98DE8(0, v28[2] + 1, 1, v28);
  v32 = v28[2];
  v31 = v28[3];
  if (v32 >= v31 >> 1)
    v28 = sub_23AF98DE8((_QWORD *)(v31 > 1), v32 + 1, 1, v28);
  v28[2] = v32 + 1;
  v33 = &v28[15 * v32];
  v33[4] = v29;
  *(_OWORD *)(v33 + 5) = xmmword_23B1DA990;
  *(_OWORD *)(v33 + 7) = 0u;
  *(_OWORD *)(v33 + 9) = 0u;
  *(_OWORD *)(v33 + 11) = 0u;
  *(_OWORD *)(v33 + 13) = 0u;
  *(_OWORD *)(v33 + 15) = 0u;
  *(_OWORD *)((char *)v33 + 131) = 0u;
  *((_BYTE *)v33 + 147) = 5;
  *v17 = v28;
  swift_endAccess();
  v34 = (uint64_t)v54;
  *v54 = v30;
  strcpy((char *)(v34 + 8), "lazily deleted");
  *(_BYTE *)(v34 + 23) = -18;
  swift_storeEnumTagMultiPayload();
  v35 = v53;
  sub_23AA8EFC8(v34, v53, (uint64_t *)&unk_2542E0F90);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  v36 = *v16;
  v37 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v36 = sub_23AF98DC0(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
  v39 = *(_QWORD *)(v36 + 16);
  v38 = *(_QWORD *)(v36 + 24);
  if (v39 >= v38 >> 1)
    v36 = sub_23AF98DC0(v38 > 1, v39 + 1, 1, v36);
  *(_QWORD *)(v36 + 16) = v39 + 1;
  sub_23AA724E8(v35, v36 + v49 + v39 * v27, &qword_2542E19C0);
  *v16 = v36;
  swift_endAccess();
  v40 = sub_23AA8A05C(v34, (uint64_t *)&unk_2542E0F90);
  (*(void (**)(uint64_t))(*(_QWORD *)v55 + 176))(v40);
  v41 = v56;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v58);
  v44 = v43 * 1000000000.0;
  if ((~COERCE__INT64(v43 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v44 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v44 < 9.22337204e18)
  {
    sub_23ADF691C((_QWORD *)inited, (uint64_t)v44, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
    swift_release();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_23AE8A814(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t inited;
  uint64_t v15;
  unint64_t *v16;
  _QWORD *v17;
  _QWORD *v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _BYTE *v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  double v44;
  double v45;
  double v46;
  _BYTE v47[16];
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _QWORD *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a3;
  v52 = a2;
  v55 = a1;
  v5 = sub_23B1C5BDC();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v56 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  MEMORY[0x24BDAC7A8](v51);
  v54 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6488);
  v50 = *(_QWORD *)(v59 - 8);
  v8 = MEMORY[0x24BDAC7A8](v59);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v49 = &v47[-v11];
  v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  MEMORY[0x24BDAC7A8](v48);
  v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6490);
  inited = swift_initStackObject();
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 24) = MEMORY[0x24BEE4AF8];
  v16 = (unint64_t *)(inited + 24);
  *(_QWORD *)(inited + 16) = v15;
  *(_QWORD *)(inited + 32) = v15;
  v17 = (_QWORD *)(inited + 32);
  *(_QWORD *)(inited + 40) = v15;
  *(_QWORD *)(inited + 48) = 0;
  swift_beginAccess();
  v18 = *(_QWORD **)(inited + 32);
  v19 = a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v53 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v18 = sub_23AF98F98(0, v18[2] + 1, 1, v18);
  v22 = v18[2];
  v21 = v18[3];
  if (v22 >= v21 >> 1)
    v18 = sub_23AF98F98((_QWORD *)(v21 > 1), v22 + 1, 1, v18);
  v18[2] = v22 + 1;
  v23 = &v18[15 * v22];
  v23[4] = a4;
  *(_OWORD *)(v23 + 5) = 0u;
  *(_OWORD *)(v23 + 7) = 0u;
  *(_OWORD *)(v23 + 9) = 0u;
  *(_OWORD *)(v23 + 11) = 0u;
  *(_OWORD *)(v23 + 13) = 0u;
  *(_OWORD *)(v23 + 15) = 0u;
  *(_OWORD *)((char *)v23 + 131) = 0u;
  *((_BYTE *)v23 + 147) = 5;
  *v17 = v18;
  swift_endAccess();
  *(_QWORD *)v13 = v19;
  strcpy(v13 + 8, "lazily deleted");
  v13[23] = -18;
  swift_storeEnumTagMultiPayload();
  v24 = v49;
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v49, (uint64_t *)&unk_2542E0F90);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  v25 = *v16;
  v26 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_23AF98F84(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
  v28 = *(_QWORD *)(v25 + 16);
  v27 = *(_QWORD *)(v25 + 24);
  if (v28 >= v27 >> 1)
    v25 = sub_23AF98F84(v27 > 1, v28 + 1, 1, v25);
  *(_QWORD *)(v25 + 16) = v28 + 1;
  v29 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v30 = *(_QWORD *)(v50 + 72);
  sub_23AA724E8((uint64_t)v24, v25 + v29 + v30 * v28, &qword_2569E6488);
  *v16 = v25;
  swift_endAccess();
  sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E0F90);
  swift_beginAccess();
  v31 = (_QWORD *)*v17;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v31 = sub_23AF98F98(0, v31[2] + 1, 1, v31);
  v32 = v60 | 0x100;
  v34 = v31[2];
  v33 = v31[3];
  if (v34 >= v33 >> 1)
    v31 = sub_23AF98F98((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
  v31[2] = v34 + 1;
  v35 = &v31[15 * v34];
  v36 = v52;
  v35[4] = v52;
  v35[5] = v32;
  v35[6] = 2;
  *(_OWORD *)(v35 + 7) = 0u;
  *(_OWORD *)(v35 + 9) = 0u;
  *(_OWORD *)(v35 + 11) = 0u;
  *(_OWORD *)(v35 + 13) = 0u;
  *(_OWORD *)(v35 + 15) = 0u;
  *(_OWORD *)((char *)v35 + 131) = 0u;
  *((_BYTE *)v35 + 147) = 5;
  *v17 = v31;
  swift_endAccess();
  v37 = v54;
  *v54 = v36;
  v37[8] = v60;
  strcpy(v37 + 16, "lazily deleted");
  v37[31] = -18;
  swift_storeEnumTagMultiPayload();
  v38 = (uint64_t)v53;
  sub_23AA8EFC8((uint64_t)v37, (uint64_t)v53, (uint64_t *)&unk_2542DDDA0);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  v39 = *v16;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v39 = sub_23AF98F84(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
  v41 = *(_QWORD *)(v39 + 16);
  v40 = *(_QWORD *)(v39 + 24);
  if (v41 >= v40 >> 1)
    v39 = sub_23AF98F84(v40 > 1, v41 + 1, 1, v39);
  *(_QWORD *)(v39 + 16) = v41 + 1;
  sub_23AA724E8(v38, v39 + v29 + v41 * v30, &qword_2569E6488);
  *v16 = v39;
  swift_endAccess();
  v42 = sub_23AA8A05C((uint64_t)v37, (uint64_t *)&unk_2542DDDA0);
  (*(void (**)(uint64_t))(*(_QWORD *)v55 + 176))(v42);
  v43 = v56;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v45 = v44;
  (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v43, v58);
  v46 = v45 * 1000000000.0;
  if ((~COERCE__INT64(v45 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v46 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v46 < 9.22337204e18)
  {
    sub_23ADF691C((_QWORD *)inited, (uint64_t)v46, (void (*)(_QWORD, _QWORD))sub_23ADF71B0);
    swift_release();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_23AE8AE90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD v63[25];
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE v90[6];
  _BYTE v91[6];
  _BYTE v92[6];
  _BYTE v93[9694];
  uint64_t v94;
  _QWORD v95[1494];

  v1 = MEMORY[0x24BDAC7A8](a1);
  v95[1493] = v2;
  v63[20] = v3;
  v71 = v4;
  v72 = v5;
  v7 = v6;
  v9 = v8;
  v89 = v1;
  v87 = v10;
  v63[11] = v95;
  v63[12] = &v94;
  v63[2] = v90;
  v63[6] = v92;
  v63[15] = v91;
  v63[16] = v93;
  v66 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v66);
  v63[1] = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v63[9] = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v63[3] = (char *)v63 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v63[8] = (char *)v63 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v63[7] = (char *)v63 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v63[13] = *(_QWORD *)(v20 - 8);
  v63[14] = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v63[10] = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v63[5] = (char *)v63 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v63[4] = (char *)v63 - v25;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (char *)v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_23B1C5E4C();
  v75 = *(_QWORD *)(v80 - 8);
  v27 = MEMORY[0x24BDAC7A8](v80);
  v70 = (char *)v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v68 = (char *)v63 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v74 = (char *)v63 - v31;
  v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  MEMORY[0x24BDAC7A8](v76);
  v77 = (char *)v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v63[22] = (char *)v63 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v67 = (char *)v63 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v69 = (char *)v63 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v82 = (char *)v63 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v63[18] = (char *)v63 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v63[21] = (char *)v63 - v46;
  v81 = v47;
  MEMORY[0x24BDAC7A8](v45);
  v86 = (char *)v63 - v48;
  v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v73 = *(_QWORD *)(v83 - 8);
  v49 = MEMORY[0x24BDAC7A8](v83);
  v63[17] = (char *)v63 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v49);
  v63[23] = (char *)v63 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v63[24] = (char *)v63 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v78 = (char *)v63 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v79 = (char *)v63 - v58;
  MEMORY[0x24BDAC7A8](v57);
  v84 = (char *)v63 - v59;
  v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
  MEMORY[0x24BDAC7A8](v60);
  *(_QWORD *)&v93[4646] = v9;
  v63[19] = *(_QWORD *)(v7 + 24);
  v88 = v7;
  v85 = *(_QWORD *)(v7 + 32);
  sub_23AA8EFC8(v89, (uint64_t)v63 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_2569E64B8);
  v62 = (char *)&loc_23AE8B414 + *((int *)qword_23AE95240 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23AE8B424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void **v42;
  void *v43;
  unint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t (*v55)(void);
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  char v85;
  uint64_t v86;
  char v87;
  char v88;
  char v89;
  char *v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  char v106;
  __int16 v107;
  char v108;
  char v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  BOOL v126;
  id *v127;
  id *v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  BOOL v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  __int16 v172;
  char v173;
  char v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  BOOL v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v201;
  unint64_t v202;
  _OWORD *v203;
  uint64_t v204;
  uint64_t (*v205)();
  uint64_t *v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  void *v210;
  void *v211;
  void (*v212)(uint64_t);
  uint64_t v213;
  void *v214;
  id v215;
  int v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t (*v225)(uint64_t, uint64_t);
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  _OWORD *v230;
  uint64_t (*v231)();
  unint64_t *v232;
  unint64_t v233;
  unint64_t v234;
  void *v235;
  void *v236;
  uint64_t v237;
  void (*v238)(uint64_t);
  uint64_t v239;
  void *v240;
  id v241;
  uint64_t v242;
  uint64_t v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  id v250;
  uint64_t v251;
  int v252;
  _BOOL4 v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  id v257;
  uint64_t v258;
  id v259;
  id v260;
  id v261;
  int v262;
  uint64_t v263;
  id v264;
  unint64_t v265;
  uint64_t v267;
  id v268;
  id v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  id v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t *v276;
  uint64_t v277;
  uint64_t v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t (*v283)(void);
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  void (*v288)(uint64_t);
  uint64_t v289;
  void (*v290)(id *);
  id *v291;
  id v292;
  unint64_t v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char v299;
  uint64_t v300;
  uint64_t v301;
  _OWORD *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  id v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  id v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  id v323;
  uint64_t v324;
  uint64_t v325;
  void **v326;
  void *v327;
  uint64_t v328;
  uint64_t v329;
  id v330;
  unint64_t v331;
  void *v332;
  id v333;
  uint64_t v334;
  BOOL v335;
  int v336;
  uint64_t v337;
  __int16 v338;
  char v339;
  char v340;
  uint64_t v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  char v347;
  uint64_t v348;
  uint64_t v349;
  char v350;
  uint64_t v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  id v356;
  unint64_t v357;
  void *v358;
  id v359;
  uint64_t v360;
  uint64_t v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  uint64_t v373;
  uint64_t v374;
  char v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  uint64_t (*v383)(uint64_t);
  uint64_t v384;
  char v385;
  uint64_t v386;
  id v387;
  id v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  BOOL v392;
  uint64_t v393;
  char v394;
  __int16 v395;
  char v396;
  char v397;
  uint64_t v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  char v404;
  uint64_t v405;
  uint64_t v406;
  char v407;
  uint64_t v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  BOOL v414;
  id v415;
  id v416;
  unint64_t v417;
  id v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  void *v424;
  unint64_t v425;
  void *v426;
  id v427;
  uint64_t v428;
  id v429;
  id v430;
  int v431;
  uint64_t v432;
  char v433;
  char v434;
  char v435;
  char v436;
  uint64_t v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  char v443;
  uint64_t v444;
  uint64_t v445;
  char v446;
  uint64_t v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  uint64_t v452;
  id v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  void *v457;
  uint64_t v458;
  unint64_t v459;
  uint64_t v460;
  uint64_t v461;
  unint64_t v462;
  uint64_t v463;
  __int128 v464;
  id v465;
  id v466;
  id v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  unint64_t v471;
  id v472;
  id v473;
  id v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  int v479;
  uint64_t v480;
  char v481;
  char v482;
  char v483;
  char v484;
  uint64_t v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  char v491;
  uint64_t v492;
  uint64_t v493;
  char v494;
  uint64_t v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  int v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  uint64_t v507;
  char v508;
  __int16 v509;
  char *v510;
  char v511;
  uint64_t v512;
  uint64_t v513;
  char v514;
  uint64_t v515;
  char v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  id v525;
  unint64_t v526;
  void *v527;
  id v528;
  uint64_t v529;
  uint64_t v530;
  _OWORD *v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  id v535;
  char v536;
  uint64_t v537;
  unsigned int v538;
  unint64_t v539;
  uint64_t v540;
  unint64_t v541;
  uint64_t v542;
  uint64_t v543;
  unint64_t v544;
  uint64_t v545;
  __int128 v546;
  id v547;
  unint64_t v548;
  uint64_t v549;
  unint64_t v550;
  void *v551;
  id v552;
  uint64_t v553;
  uint64_t v554;
  unint64_t v555;
  uint64_t v556;
  id v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  _BYTE *v561;
  _BYTE *v562;
  unint64_t v563;
  uint64_t (*v564)();
  unint64_t *v565;
  unint64_t v566;
  unint64_t v567;
  uint64_t v568;
  unint64_t v569;
  uint64_t v570;
  BOOL v571;
  uint64_t v572;
  int v573;
  id v574;
  id v575;
  id v576;
  id v577;
  id v578;
  id v579;
  id v580;
  BOOL v581;
  int v582;
  id v583;
  id v584;
  unint64_t v585;
  int v586;
  uint64_t v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  __int128 v596;
  __int128 v597;
  __int128 v598;
  uint64_t v599;
  uint64_t v600;
  char v601;
  _BOOL4 v602;
  BOOL v603;
  _QWORD *v604;
  void *v605;
  id v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  __int128 v615;
  __int128 v616;
  __int128 v617;
  __int128 v618;
  __int128 v619;
  __int128 v620;
  __int128 v621;
  __int128 v622;
  __int128 v623;
  __int128 v624;
  __int128 v625;
  __int128 v626;
  __int128 v627;
  __int128 v628;
  __int128 v629;
  __int128 v630;
  __int128 v631;
  __int128 v632;
  __int128 v633;
  __int128 v634;
  __int128 v635;
  __int128 v636;
  __int128 v637;
  uint64_t v638;
  char v639;
  uint64_t v640;
  uint64_t v641;
  char v642;
  uint64_t v643;
  uint64_t v644;
  unint64_t v645;
  uint64_t v646;
  uint64_t v647;
  unint64_t v648;
  unint64_t v649;
  uint64_t v650;
  void *v651;
  uint64_t v652;
  unint64_t v653;
  unint64_t v654;
  uint64_t v655;
  uint64_t v656;
  __int128 v657;
  id v658;
  BOOL v659;
  uint64_t v660;
  __int128 v661;
  __int128 v662;
  __int128 v663;
  __int128 v664;
  __int128 v665;
  __int128 v666;
  __int128 v667;
  __int128 v668;
  __int128 v669;
  __int128 v670;
  __int128 v671;
  __int128 v672;
  __int128 v673;
  __int128 v674;
  __int128 v675;
  __int128 v676;
  __int128 v677;
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  uint64_t v684;
  char v685;
  uint64_t v686;
  uint64_t v687;
  char v688;
  uint64_t v689;
  uint64_t v690;
  unint64_t v691;
  uint64_t v692;
  uint64_t v693;
  unint64_t v694;
  unint64_t v695;
  uint64_t v696;
  void *v697;
  uint64_t v698;
  unint64_t v699;
  uint64_t v700;
  uint64_t v701;
  unint64_t v702;
  uint64_t v703;
  uint64_t v704;
  id v705;
  uint64_t v706;
  id v707;
  unint64_t v708;
  void *v709;
  id v710;
  uint64_t v711;
  unint64_t v712;
  uint64_t v713;
  id v714;
  void *v715;
  id v716;
  BOOL v717;
  uint64_t v718;
  char v719;
  __int16 v720;
  char v721;
  char v722;
  uint64_t v723;
  __int128 v724;
  __int128 v725;
  __int128 v726;
  __int128 v727;
  __int128 v728;
  char v729;
  uint64_t v730;
  uint64_t v731;
  char v732;
  uint64_t v733;
  __int128 v734;
  __int128 v735;
  __int128 v736;
  __int128 v737;
  __int128 v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  char v746;
  int v747;
  __int128 v748;
  uint64_t v749;
  uint64_t v750;
  __int128 v751;
  __int128 v752;
  __int128 v753;
  __int128 v754;
  __int128 v755;
  char v756;
  __int16 v757;
  char *v758;
  char v759;
  uint64_t v760;
  uint64_t v761;
  char v762;
  uint64_t v763;
  char v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  __int128 v768;
  __int128 v769;
  __int128 v770;
  __int128 v771;
  __int128 v772;
  unint64_t v773;
  uint64_t v774;
  unint64_t v775;
  int v776;
  __int128 v777;
  uint64_t v778;
  uint64_t v779;
  __int128 v780;
  __int128 v781;
  __int128 v782;
  __int128 v783;
  __int128 v784;
  char v785;
  __int16 v786;
  char *v787;
  char v788;
  uint64_t v789;
  uint64_t v790;
  char v791;
  uint64_t v792;
  char v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  __int128 v797;
  __int128 v798;
  __int128 v799;
  __int128 v800;
  __int128 v801;
  id v802;
  char v803;
  id v804;
  char v805;
  id v806;
  id v807;
  void (*v808)(uint64_t, uint64_t);
  uint64_t v809;
  void *v810;
  uint64_t v811;
  unint64_t v812;
  uint64_t v813;
  uint64_t v814;
  unint64_t v815;
  uint64_t v816;
  __int128 v817;
  id v818;
  uint64_t *v819;
  uint64_t v820;
  __int128 v821;
  __int128 v822;
  __int128 v823;
  __int128 v824;
  __int128 v825;
  __int128 v826;
  __int128 v827;
  uint64_t v828;
  BOOL v829;
  char v830;
  _BOOL8 v831;
  id v832;
  uint64_t v833;
  id v834;
  uint64_t v835;
  uint64_t v836;
  void *v837;
  id v838;
  uint64_t v839;
  uint64_t v840;
  char v841;
  char v842;
  char v843;
  char v844;
  uint64_t v845;
  __int128 v846;
  __int128 v847;
  __int128 v848;
  __int128 v849;
  __int128 v850;
  char v851;
  char v852;
  uint64_t v853;
  uint64_t v854;
  char v855;
  uint64_t v856;
  __int128 v857;
  __int128 v858;
  __int128 v859;
  __int128 v860;
  int v861;
  BOOL v862;
  __int128 v863;
  __int128 v864;
  __int128 v865;
  __int128 v866;
  __int128 v867;
  __int128 v868;
  __int128 v869;
  uint64_t (*v870)(uint64_t);
  uint64_t v871;
  char v872;
  uint64_t v873;
  BOOL v874;
  BOOL v875;
  int v876;
  uint64_t v877;
  __int128 v878;
  __int128 v879;
  __int128 v880;
  __int128 v881;
  __int128 v882;
  __int128 v883;
  __int128 v884;
  __int128 v885;
  __int128 v886;
  __int128 v887;
  __int128 v888;
  uint64_t v889;
  uint64_t v890;
  char v891;
  char v892;
  id v893;
  id v894;
  uint64_t v895;
  uint64_t v896;
  __int128 v897;
  __int128 v898;
  __int128 v899;
  __int128 v900;
  __int128 v901;
  __int128 v902;
  __int128 v903;
  char v904;
  uint64_t v905;
  BOOL v906;
  BOOL v907;
  uint64_t v908;
  __int128 v909;
  __int128 v910;
  __int128 v911;
  __int128 v912;
  __int128 v913;
  __int128 v914;
  __int128 v915;
  __int128 v916;
  __int128 v917;
  __int128 v918;
  __int128 v919;
  uint64_t v920;
  uint64_t v921;
  char v922;
  uint64_t v923;
  int v924;
  __int128 v925;
  uint64_t v926;
  uint64_t v927;
  __int128 v928;
  __int128 v929;
  __int128 v930;
  __int128 v931;
  __int128 v932;
  char v933;
  __int16 v934;
  char *v935;
  char v936;
  uint64_t v937;
  uint64_t v938;
  char v939;
  uint64_t v940;
  char v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  __int128 v945;
  __int128 v946;
  __int128 v947;
  __int128 v948;
  __int128 v949;
  void **v950;
  void *v951;
  unint64_t v952;
  void *v953;
  id v954;
  id v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  char v962;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64C8);
  v5 = v1 + v4[12];
  v6 = *(_QWORD *)(v1 + v4[16]);
  v7 = (uint64_t *)(v1 + v4[20]);
  v8 = *v7;
  v9 = v7[1];
  v10 = v1;
  v11 = *(_QWORD *)(v0 + 328);
  sub_23AA724E8(v10, v11, (uint64_t *)&unk_2542E4760);
  v12 = *(_QWORD *)(v0 + 320);
  sub_23AA724E8(v5, v12, (uint64_t *)&unk_2542E4760);
  *(_QWORD *)(v0 + 9432) = v6;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  if ((sub_23AFA7428(*(_BYTE *)(v12 + *(int *)(v13 + 48)), *(_BYTE *)(v11 + *(int *)(v13 + 48))) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (*(_DWORD *)(v0 + 420) != 4)
    {
      *(_QWORD *)(v0 + 8936) = 0;
      *(_QWORD *)(v0 + 8944) = 0xE000000000000000;
      sub_23B1C6EFC();
      v20 = *(_QWORD *)(v0 + 8944);
      *(_QWORD *)(v0 + 8936) = *(_QWORD *)(v0 + 8936);
      *(_QWORD *)(v0 + 8944) = v20;
      sub_23B1C734C();
      sub_23AF14E14(v11);
      sub_23B1C734C();
      sub_23AF14E14(v12);
      sub_23B1C734C();
      v21 = *(_QWORD *)(v3 - 72);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v21 + 168))(*(_QWORD *)(v0 + 8936), *(_QWORD *)(v0 + 8944));
      swift_bridgeObjectRelease();
      v22 = *(id *)v12;
      v23 = sub_23ADA816C();
      v25 = v24;
      v26 = sub_23ACD8484(0);
      v27 = sub_23AFD7BC8(v26);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
      swift_allocObject();
      v28 = sub_23AEA89CC(v22, v23, v25, v27);

      v29 = *(void (**)(uint64_t))(*(_QWORD *)v21 + 144);
      v11 = *(_QWORD *)(v0 + 328);
      v29(v28);
      swift_release();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0960);
    sub_23AAB5A28(qword_2542DD8D0, (uint64_t *)&unk_2542E0960, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    *(_QWORD *)v30 = 4;
    *(_OWORD *)(v30 + 8) = 0u;
    *(_OWORD *)(v30 + 24) = 0u;
    *(_OWORD *)(v30 + 40) = 0u;
    *(_OWORD *)(v30 + 56) = 0u;
    *(_QWORD *)(v30 + 72) = 0;
    *(_BYTE *)(v30 + 80) = 10;
    swift_willThrow();
    sub_23AA8A05C(v11, (uint64_t *)&unk_2542E4760);
    v31 = v12;
    goto LABEL_345;
  }
  *(_QWORD *)(v0 + 432) = v9;
  v14 = *(_QWORD *)(v0 + 424);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = (void **)v12;
  v18 = *(void **)(v12 + 8);
  v17 = v12 + 8;
  v19 = *(_QWORD *)(v0 + 448);
  sub_23AFFA3FC(v18, (void *)(v0 + 8936));
  if (v19)
  {
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v11, (uint64_t *)&unk_2542E4760);
    v31 = (uint64_t)v16;
LABEL_345:
    sub_23AA8A05C(v31, (uint64_t *)&unk_2542E4760);
    return v41 & 1;
  }
  *(_QWORD *)(v0 + 408) = v17;
  sub_23AFFA3FC(*v16, (void *)(v0 + 8440));
  v32 = v15;
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) != 0)
  {
    sub_23AA8EFC8(v11, v2, (uint64_t *)&unk_2542E4760);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 56))(v2, 0, 1, *(_QWORD *)(v0 + 376));
    sub_23AE18910(v2, *(_QWORD *)(v0 + 320), (_QWORD *)(v0 + 9432), (_QWORD **)v14, *(_QWORD *)(v3 - 72), 1);
    sub_23AA8A05C(v2, &qword_2542E4770);
  }
  sub_23AA724E8(v0 + 8440, v0 + 7448, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 7448, v0 + 7944, (uint64_t *)&unk_2569E63E0);
  v33 = sub_23AAFC2A4(v0 + 7944);
  v34 = *(_QWORD *)(v3 - 72);
  v35 = v8;
  if (v33 == 1)
  {
    if ((*(_DWORD *)(v0 + 420) - 3) >= 2
      && (*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0
      && (sub_23AFFA4F4() & 1) != 0)
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
      if (sub_23AFA7480(*(_BYTE *)(*(_QWORD *)(v0 + 320) + *(int *)(v36 + 48))))
      {
        swift_bridgeObjectRelease();
        v37 = *(id **)(v0 + 320);
        v38 = *v37;
        v39 = sub_23ADA8168(v38);
        sub_23B02642C((uint64_t)v38, v39, v40, 0x10000000);
        (*(void (**)(void))(*(_QWORD *)v34 + 144))();
        swift_release();
        sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
        sub_23AA724E8(v0 + 8440, v0 + 6456, (uint64_t *)&unk_2569E63E0);
        sub_23ADF2D34(v0 + 6456, (voidsub_23AEB1930);
        sub_23AA724E8(v0 + 8936, v0 + 6952, (uint64_t *)&unk_2569E63E0);
        sub_23ADF2D34(v0 + 6952, (voidsub_23AEB1930);
        sub_23AA8A05C((uint64_t)v37, (uint64_t *)&unk_2542E4760);
        v41 = 0;
        return v41 & 1;
      }
    }
    v42 = *(void ***)(v0 + 320);
    v43 = *v42;
    v44 = (unint64_t)*((unsigned __int8 *)v42
                            + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48)) << 16;
    *(_QWORD *)(v0 + 25904) = v43;
    *(_QWORD *)(v0 + 25912) = v44;
    *(_OWORD *)(v0 + 25920) = 0u;
    *(_OWORD *)(v0 + 25936) = 0u;
    *(_OWORD *)(v0 + 25952) = 0u;
    *(_OWORD *)(v0 + 25968) = 0u;
    *(_OWORD *)(v0 + 25984) = 0u;
    *(_OWORD *)(v0 + 26000) = 0u;
    *(_DWORD *)(v0 + 26016) = 0;
    v45 = v43;
    sub_23B020598(v34, v0 + 25904);

    v46 = *v42;
    *(_QWORD *)(v0 + 6952) = *v42;
    *(_WORD *)(v0 + 6960) = 0;
    v47 = v46;
    v48 = *sub_23AFA7BFC();
    v49 = sub_23ADA816C();
    *(_QWORD *)(v0 + 6968) = v48;
    *(_QWORD *)(v0 + 6976) = v49;
    *(_QWORD *)(v0 + 6984) = v50;
    *(_BYTE *)(v0 + 7034) = 0;
    *(_BYTE *)(v0 + 7067) = 9;
    sub_23AA724E8(v0 + 6952, v0 + 25784, &qword_2569E64D8);
    sub_23B020598(v34, v0 + 25784);
    sub_23AEB3270(v0 + 25784, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
    if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0)
    {
      v51 = **(void ***)(v0 + 320);
      *(_QWORD *)(v0 + 6952) = v51;
      *(_WORD *)(v0 + 6960) = 0;
      *(_QWORD *)(v0 + 6968) = (*(uint64_t (**)(void *))(**(_QWORD **)(v0 + 424) + 272))(v51);
      *(_BYTE *)(v0 + 7034) = 8;
      *(_BYTE *)(v0 + 7067) = 9;
      sub_23AA724E8(v0 + 6952, v0 + 25664, &qword_2569E64D8);
      sub_23B020598(v34, v0 + 25664);
      sub_23AEB3270(v0 + 25664, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
      if (*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) != 1)
        goto LABEL_18;
    }
    v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
    if (!sub_23AFA7B8C(*(_BYTE *)(*(_QWORD *)(v0 + 320) + *(int *)(v52 + 48))))
    {
LABEL_18:
      v53 = **(void ***)(v0 + 320);
      *(_OWORD *)(v0 + 25552) = xmmword_23B1DA9B0;
      *(_OWORD *)(v0 + 25568) = 0u;
      *(_OWORD *)(v0 + 25584) = 0u;
      *(_OWORD *)(v0 + 25600) = 0u;
      *(_QWORD *)(v0 + 25544) = v53;
      *(_QWORD *)(v0 + 25616) = 0;
      *(_QWORD *)(v0 + 25624) = 589824;
      *(_QWORD *)(v0 + 25632) = 0;
      *(_QWORD *)(v0 + 25648) = 0;
      *(_QWORD *)(v0 + 25640) = 0;
      *(_DWORD *)(v0 + 25655) = 0;
      *(_BYTE *)(v0 + 25659) = 9;
      v54 = v53;
      sub_23B020598(v34, v0 + 25544);
      sub_23AB7C6B4(v53, 0, 0);
      sub_23AEAD8A8((void *)2, 0, 0, 0, 0, 0, 0, 0, 0, 9);
    }
  }
  *(_QWORD *)(v0 + 384) = v32;
  v55 = *(uint64_t (**)(void))(**(_QWORD **)(v0 + 424) + 152);
  v56 = v55();
  if (sub_23AA9F3D0(0x4000, v56))
  {
    sub_23AA724E8(v0 + 7448, v0 + 6952, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4(v0 + 6952) != 1)
    {
      sub_23AA724E8(v0 + 7448, v0 + 6456, (uint64_t *)&unk_2569E63E0);
      memcpy((void *)(v0 + 25048), (const void *)(v0 + 6456), 0x1F0uLL);
      if (*(_DWORD *)(v0 + 420) != 4)
      {
        sub_23AEB34A4(v0 + 6456);
        v199 = sub_23AE2A33C(v0 + 25048, *(_QWORD *)(v0 + 424));
        sub_23ADF2D34(v0 + 7448, (voidsub_23AEB1930);
        if ((v199 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
          sub_23AA724E8(v0 + 8440, v0 + 5456, (uint64_t *)&unk_2569E63E0);
          sub_23ADF2D34(v0 + 5456, (voidsub_23AEB1930);
          sub_23AA724E8(v0 + 8936, v0 + 5960, (uint64_t *)&unk_2569E63E0);
          sub_23ADF2D34(v0 + 5960, (voidsub_23AEB1930);
          sub_23AA8A05C(*(_QWORD *)(v0 + 320), (uint64_t *)&unk_2542E4760);
          v41 = 1;
          return v41 & 1;
        }
      }
    }
  }
  v57 = *(void **)(*(_QWORD *)(v0 + 320) + 8);
  if ((sub_23AC37680() & 1) == 0 && sub_23AA9F3D0(2, *(_QWORD *)(v0 + 9432)))
  {
    sub_23AA724E8(v0 + 8936, v0 + 6456, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8(v0 + 6456, v0 + 6952, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4(v0 + 6952) == 1)
      goto LABEL_417;
    sub_23AA724E8(v0 + 6456, v0 + 4960, (uint64_t *)&unk_2569E63E0);
    v58 = *(_QWORD *)(v0 + 4976);
    v59 = *(_BYTE *)(v0 + 4984);
    v60 = *(_BYTE *)(v0 + 5057);
    v61 = *(_BYTE *)(v0 + 5058);
    v62 = *(_BYTE *)(v0 + 5080);
    v63 = *(_OWORD *)(v0 + 5368);
    *(_OWORD *)(v0 + 5848) = *(_OWORD *)(v0 + 5352);
    *(_OWORD *)(v0 + 5864) = v63;
    *(_OWORD *)(v0 + 5880) = *(_OWORD *)(v0 + 5384);
    v64 = *(_OWORD *)(v0 + 5304);
    *(_OWORD *)(v0 + 5784) = *(_OWORD *)(v0 + 5288);
    *(_OWORD *)(v0 + 5800) = v64;
    v65 = *(_OWORD *)(v0 + 5336);
    *(_OWORD *)(v0 + 5816) = *(_OWORD *)(v0 + 5320);
    *(_OWORD *)(v0 + 5832) = v65;
    v66 = *(_OWORD *)(v0 + 5240);
    *(_OWORD *)(v0 + 5720) = *(_OWORD *)(v0 + 5224);
    *(_OWORD *)(v0 + 5736) = v66;
    v67 = *(_OWORD *)(v0 + 5272);
    *(_OWORD *)(v0 + 5752) = *(_OWORD *)(v0 + 5256);
    *(_OWORD *)(v0 + 5768) = v67;
    *(_OWORD *)(v0 + 5704) = *(_OWORD *)(v0 + 5208);
    *(_OWORD *)(v0 + 5656) = *(_OWORD *)(v0 + 5160);
    *(_OWORD *)(v0 + 5672) = *(_OWORD *)(v0 + 5176);
    *(_OWORD *)(v0 + 5688) = *(_OWORD *)(v0 + 5192);
    v68 = *(_BYTE *)(v0 + 5056);
    v69 = *(_BYTE *)(v0 + 5400);
    v70 = *(_QWORD *)(v0 + 5152);
    v71 = *(_QWORD *)(v0 + 5408);
    v72 = *(_QWORD *)(v0 + 5416);
    v73 = *(_BYTE *)(v0 + 5440);
    v74 = *(_QWORD *)(v0 + 5448);
    *(_OWORD *)(v0 + 5456) = *(_OWORD *)(v0 + 4960);
    *(_QWORD *)(v0 + 5472) = v58;
    *(_BYTE *)(v0 + 5480) = v59;
    v75 = *(_OWORD *)(v0 + 5008);
    *(_OWORD *)(v0 + 5488) = *(_OWORD *)(v0 + 4992);
    *(_OWORD *)(v0 + 5504) = v75;
    v76 = *(_OWORD *)(v0 + 5040);
    *(_OWORD *)(v0 + 5520) = *(_OWORD *)(v0 + 5024);
    *(_OWORD *)(v0 + 5536) = v76;
    *(_BYTE *)(v0 + 5552) = v68;
    *(_BYTE *)(v0 + 5553) = v60;
    *(_BYTE *)(v0 + 5554) = v61;
    *(_OWORD *)(v0 + 5560) = *(_OWORD *)(v0 + 5064);
    *(_BYTE *)(v0 + 5576) = v62;
    v77 = *(_OWORD *)(v0 + 5104);
    *(_OWORD *)(v0 + 5584) = *(_OWORD *)(v0 + 5088);
    *(_OWORD *)(v0 + 5600) = v77;
    v78 = *(_OWORD *)(v0 + 5136);
    *(_OWORD *)(v0 + 5616) = *(_OWORD *)(v0 + 5120);
    *(_OWORD *)(v0 + 5632) = v78;
    *(_BYTE *)(v0 + 5896) = v69;
    *(_QWORD *)(v0 + 5648) = v70;
    *(_QWORD *)(v0 + 5904) = v71;
    *(_QWORD *)(v0 + 5912) = v72;
    *(_OWORD *)(v0 + 5920) = *(_OWORD *)(v0 + 5424);
    *(_BYTE *)(v0 + 5936) = v73;
    *(_QWORD *)(v0 + 5944) = v74;
    sub_23AA724E8(v0 + 6456, v0 + 5960, (uint64_t *)&unk_2569E63E0);
    sub_23AEB34A4(v0 + 5960);
    sub_23AAFCF50(v0 + 5456);
    if (!sub_23AA9F51C(v68, 2))
      goto LABEL_417;
    sub_23AA724E8(v0 + 6456, v0 + 4456, (uint64_t *)&unk_2569E63E0);
    v79 = *(_OWORD *)(v0 + 4632);
    *(_OWORD *)(v0 + 5120) = *(_OWORD *)(v0 + 4616);
    *(_OWORD *)(v0 + 5136) = v79;
    v80 = *(_OWORD *)(v0 + 4568);
    *(_OWORD *)(v0 + 5056) = *(_OWORD *)(v0 + 4552);
    *(_OWORD *)(v0 + 5072) = v80;
    v81 = *(_OWORD *)(v0 + 4584);
    *(_OWORD *)(v0 + 5104) = *(_OWORD *)(v0 + 4600);
    *(_OWORD *)(v0 + 5088) = v81;
    v82 = *(_OWORD *)(v0 + 4504);
    *(_OWORD *)(v0 + 4992) = *(_OWORD *)(v0 + 4488);
    *(_OWORD *)(v0 + 5008) = v82;
    v83 = *(_OWORD *)(v0 + 4520);
    *(_OWORD *)(v0 + 5040) = *(_OWORD *)(v0 + 4536);
    *(_OWORD *)(v0 + 5024) = v83;
    v84 = *(_OWORD *)(v0 + 4456);
    *(_OWORD *)(v0 + 4976) = *(_OWORD *)(v0 + 4472);
    *(_OWORD *)(v0 + 4960) = v84;
    v85 = *(_BYTE *)(v0 + 4792);
    v86 = *(_QWORD *)(v0 + 4656);
    v87 = *(_BYTE *)(v0 + 4664);
    v88 = *(_BYTE *)(v0 + 4688);
    v89 = *(_BYTE *)(v0 + 4793);
    v90 = *(char **)(v0 + 128);
    v91 = *v90;
    v92 = *(_QWORD *)(v0 + 4800);
    v93 = *(_QWORD *)(v0 + 4808);
    v94 = *(_BYTE *)(v0 + 4816);
    v95 = *(_BYTE *)(v0 + 4896);
    v96 = *(_QWORD *)(v0 + 4888);
    v97 = *(_QWORD *)(v0 + 4904);
    LOBYTE(v90) = v90[142];
    v98 = *(_QWORD *)(v0 + 4912);
    v99 = *(_QWORD *)(v0 + 4944);
    *(_QWORD *)(v0 + 5152) = *(_QWORD *)(v0 + 4648);
    *(_QWORD *)(v0 + 5160) = v86;
    *(_BYTE *)(v0 + 5168) = v87;
    *(_OWORD *)(v0 + 5176) = *(_OWORD *)(v0 + 4672);
    *(_BYTE *)(v0 + 5192) = v88;
    v100 = *(_OWORD *)(v0 + 4712);
    *(_OWORD *)(v0 + 5200) = *(_OWORD *)(v0 + 4696);
    *(_OWORD *)(v0 + 5216) = v100;
    v101 = *(_OWORD *)(v0 + 4744);
    *(_OWORD *)(v0 + 5232) = *(_OWORD *)(v0 + 4728);
    *(_OWORD *)(v0 + 5248) = v101;
    v102 = *(_OWORD *)(v0 + 4776);
    *(_OWORD *)(v0 + 5264) = *(_OWORD *)(v0 + 4760);
    *(_OWORD *)(v0 + 5280) = v102;
    *(_BYTE *)(v0 + 5296) = v85;
    *(_BYTE *)(v0 + 5297) = v89;
    *(_BYTE *)(v0 + 5298) = v91;
    *(_QWORD *)(v0 + 5304) = v92;
    *(_QWORD *)(v0 + 5312) = v93;
    *(_BYTE *)(v0 + 5320) = v94;
    v103 = *(_OWORD *)(v0 + 4840);
    *(_OWORD *)(v0 + 5328) = *(_OWORD *)(v0 + 4824);
    *(_OWORD *)(v0 + 5344) = v103;
    v104 = *(_OWORD *)(v0 + 4872);
    *(_OWORD *)(v0 + 5360) = *(_OWORD *)(v0 + 4856);
    *(_OWORD *)(v0 + 5376) = v104;
    *(_BYTE *)(v0 + 5400) = v95;
    *(_QWORD *)(v0 + 5392) = v96;
    *(_QWORD *)(v0 + 5408) = v97;
    *(_QWORD *)(v0 + 5416) = v98;
    *(_OWORD *)(v0 + 5424) = *(_OWORD *)(v0 + 4920);
    *(_BYTE *)(v0 + 5440) = (_BYTE)v90;
    *(_QWORD *)(v0 + 5448) = v99;
    sub_23AEB34A4(v0 + 5960);
    sub_23AAFCF50(v0 + 4960);
    if (!sub_23AA9F51C(v85, 2))
      goto LABEL_417;
    sub_23AA724E8(v0 + 6456, v0 + 3456, (uint64_t *)&unk_2569E63E0);
    v105 = *(_QWORD *)(v0 + 3456);
    v106 = *(_BYTE *)(v0 + 3480);
    v107 = *(_WORD *)(v0 + 3552);
    v108 = *(_BYTE *)(v0 + 3554);
    v109 = *(_BYTE *)(v0 + 3576);
    v110 = *(_QWORD *)(v0 + 3648);
    v111 = *(_OWORD *)(v0 + 3864);
    *(_OWORD *)(v0 + 4344) = *(_OWORD *)(v0 + 3848);
    *(_OWORD *)(v0 + 4360) = v111;
    *(_OWORD *)(v0 + 4376) = *(_OWORD *)(v0 + 3880);
    v112 = *(_OWORD *)(v0 + 3800);
    *(_OWORD *)(v0 + 4280) = *(_OWORD *)(v0 + 3784);
    *(_OWORD *)(v0 + 4296) = v112;
    v113 = *(_OWORD *)(v0 + 3832);
    *(_OWORD *)(v0 + 4312) = *(_OWORD *)(v0 + 3816);
    *(_OWORD *)(v0 + 4328) = v113;
    v114 = *(_OWORD *)(v0 + 3736);
    *(_OWORD *)(v0 + 4216) = *(_OWORD *)(v0 + 3720);
    *(_OWORD *)(v0 + 4232) = v114;
    v115 = *(_OWORD *)(v0 + 3768);
    *(_OWORD *)(v0 + 4248) = *(_OWORD *)(v0 + 3752);
    *(_OWORD *)(v0 + 4264) = v115;
    *(_OWORD *)(v0 + 4200) = *(_OWORD *)(v0 + 3704);
    *(_OWORD *)(v0 + 4152) = *(_OWORD *)(v0 + 3656);
    *(_OWORD *)(v0 + 4168) = *(_OWORD *)(v0 + 3672);
    *(_OWORD *)(v0 + 4184) = *(_OWORD *)(v0 + 3688);
    v116 = *(_BYTE *)(v0 + 3896);
    v117 = *(_QWORD *)(v0 + 3904);
    v118 = *(_QWORD *)(v0 + 3912);
    v119 = *(_BYTE *)(v0 + 3936);
    v120 = *(_QWORD *)(v0 + 3944);
    *(_QWORD *)(v0 + 3952) = v105;
    v121 = *(_OWORD *)(v0 + 3464);
    *(_OWORD *)(v0 + 448) = v121;
    *(_OWORD *)(v0 + 3960) = v121;
    *(_BYTE *)(v0 + 3976) = v106;
    v122 = *(_OWORD *)(v0 + 3504);
    *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v0 + 3488);
    *(_OWORD *)(v0 + 4000) = v122;
    v123 = *(_OWORD *)(v0 + 3536);
    *(_OWORD *)(v0 + 4016) = *(_OWORD *)(v0 + 3520);
    *(_OWORD *)(v0 + 4032) = v123;
    *(_WORD *)(v0 + 4048) = v107;
    *(_BYTE *)(v0 + 4050) = v108;
    *(_OWORD *)(v0 + 4056) = *(_OWORD *)(v0 + 3560);
    *(_BYTE *)(v0 + 4072) = v109;
    v124 = *(_OWORD *)(v0 + 3600);
    *(_OWORD *)(v0 + 4080) = *(_OWORD *)(v0 + 3584);
    *(_OWORD *)(v0 + 4096) = v124;
    v125 = *(_OWORD *)(v0 + 3632);
    *(_OWORD *)(v0 + 4112) = *(_OWORD *)(v0 + 3616);
    *(_OWORD *)(v0 + 4128) = v125;
    *(_QWORD *)(v0 + 4144) = v110;
    *(_BYTE *)(v0 + 4392) = v116;
    *(_QWORD *)(v0 + 4400) = v117;
    *(_QWORD *)(v0 + 4408) = v118;
    *(_OWORD *)(v0 + 4416) = *(_OWORD *)(v0 + 3920);
    *(_BYTE *)(v0 + 4432) = v119;
    *(_QWORD *)(v0 + 4440) = v120;
    sub_23AA724E8(v0 + 6456, v0 + 4456, (uint64_t *)&unk_2569E63E0);
    sub_23AEB34A4(v0 + 4456);
    sub_23AEB34A4(v0 + 5960);
    sub_23AAFCF50(v0 + 3952);
    v126 = sub_23AA9F3C4(16, *(_QWORD *)(v0 + 448));
    sub_23ADF2D34(v0 + 6456, (voidsub_23AEB1930);
    if (v126)
    {
LABEL_417:
      if (*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) != 1
        || (sub_23AA724E8(v0 + 7448, v0 + 5960, (uint64_t *)&unk_2569E63E0), sub_23AAFC2A4(v0 + 5960) != 1)
        && (sub_23AA724E8(v0 + 7448, v0 + 5456, (uint64_t *)&unk_2569E63E0),
            memcpy((void *)(v0 + 24552), (const void *)(v0 + 5456), 0x1F0uLL),
            sub_23B002AF8()))
      {
        sub_23AE9EFA8((uint64_t)v57, *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 160), &qword_2569E6340);
        (*(void (**)(void))(*(_QWORD *)v34 + 144))();
        swift_release();
      }
    }
  }
  *(_QWORD *)(v0 + 368) = v55;
  v128 = *(id **)(v0 + 320);
  v127 = *(id **)(v0 + 328);
  v129 = *(_QWORD *)(v0 + 424);
  sub_23AE1BAAC(v127, v128, (uint64_t *)(v0 + 9432), v129, v34);
  *(_QWORD *)(v0 + 448) = 0;
  v130 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E78);
  v131 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 360) = v131 + v130[12];
  v132 = v130[16];
  v133 = (_QWORD *)(v131 + v130[20]);
  sub_23AA8EFC8((uint64_t)v127, v131, (uint64_t *)&unk_2542E4760);
  sub_23AA8EFC8((uint64_t)v128, *(_QWORD *)(v0 + 360), (uint64_t *)&unk_2542E4760);
  *(_QWORD *)(v131 + v132) = *(_QWORD *)(v0 + 9432);
  v134 = *(_QWORD *)(v0 + 432);
  *v133 = v35;
  v133[1] = v134;
  swift_storeEnumTagMultiPayload();
  sub_23B06B12C(v34, v131);
  sub_23AA8A05C(v131, (uint64_t *)&unk_2542E0F90);
  v135 = *(_BYTE **)(v0 + 400);
  v136 = *(_QWORD *)(v0 + 152);
  if ((v135[32] & 1) == 0)
  {
    sub_23AA724E8(v0 + 8440, v0 + 6456, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8(v0 + 6456, v0 + 5960, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8(v0 + 6456, v0 + 6952, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4(v0 + 6952) != 1)
    {
      v137 = *(_OWORD *)(v0 + 6104);
      v139 = *(_OWORD *)(v0 + 6120);
      v138 = *(_OWORD *)(v0 + 6136);
      *(_OWORD *)(v0 + 24512) = v139;
      *(_OWORD *)(v0 + 24528) = v138;
      v140 = *(_OWORD *)(v0 + 6040);
      v142 = *(_OWORD *)(v0 + 6056);
      v141 = *(_OWORD *)(v0 + 6072);
      *(_OWORD *)(v0 + 24448) = v142;
      *(_OWORD *)(v0 + 24464) = v141;
      v144 = *(_OWORD *)(v0 + 6072);
      v143 = *(_OWORD *)(v0 + 6088);
      v145 = v143;
      *(_OWORD *)(v0 + 24496) = *(_OWORD *)(v0 + 6104);
      *(_OWORD *)(v0 + 24480) = v143;
      v146 = *(_OWORD *)(v0 + 5976);
      v148 = *(_OWORD *)(v0 + 5992);
      v147 = *(_OWORD *)(v0 + 6008);
      *(_OWORD *)(v0 + 24384) = v148;
      *(_OWORD *)(v0 + 24400) = v147;
      v150 = *(_OWORD *)(v0 + 6008);
      v149 = *(_OWORD *)(v0 + 6024);
      v151 = v149;
      *(_OWORD *)(v0 + 24432) = *(_OWORD *)(v0 + 6040);
      *(_OWORD *)(v0 + 24416) = v149;
      v152 = *(_OWORD *)(v0 + 5960);
      v153 = v152;
      *(_OWORD *)(v0 + 24368) = *(_OWORD *)(v0 + 5976);
      *(_OWORD *)(v0 + 24352) = v152;
      v154 = *(_OWORD *)(v0 + 6136);
      *(_OWORD *)(v0 + 5616) = v139;
      *(_OWORD *)(v0 + 5632) = v154;
      *(_OWORD *)(v0 + 5552) = v142;
      *(_OWORD *)(v0 + 5568) = v144;
      *(_OWORD *)(v0 + 5600) = v137;
      *(_OWORD *)(v0 + 5584) = v145;
      *(_OWORD *)(v0 + 5488) = v148;
      *(_OWORD *)(v0 + 5504) = v150;
      *(_OWORD *)(v0 + 5536) = v140;
      *(_OWORD *)(v0 + 5520) = v151;
      v155 = *(_QWORD *)(v0 + 6152);
      *(_QWORD *)(v0 + 24544) = v155;
      *(_OWORD *)(v0 + 5472) = v146;
      *(_OWORD *)(v0 + 5456) = v153;
      v156 = *(_OWORD *)(v0 + 6368);
      *(_OWORD *)(v0 + 5848) = *(_OWORD *)(v0 + 6352);
      *(_OWORD *)(v0 + 5864) = v156;
      *(_OWORD *)(v0 + 5880) = *(_OWORD *)(v0 + 6384);
      v157 = *(_OWORD *)(v0 + 6304);
      *(_OWORD *)(v0 + 5784) = *(_OWORD *)(v0 + 6288);
      *(_OWORD *)(v0 + 5800) = v157;
      v158 = *(_OWORD *)(v0 + 6336);
      *(_OWORD *)(v0 + 5816) = *(_OWORD *)(v0 + 6320);
      *(_OWORD *)(v0 + 5832) = v158;
      v159 = *(_OWORD *)(v0 + 6240);
      *(_OWORD *)(v0 + 5720) = *(_OWORD *)(v0 + 6224);
      *(_OWORD *)(v0 + 5736) = v159;
      v160 = *(_OWORD *)(v0 + 6272);
      *(_OWORD *)(v0 + 5752) = *(_OWORD *)(v0 + 6256);
      *(_OWORD *)(v0 + 5768) = v160;
      *(_OWORD *)(v0 + 5704) = *(_OWORD *)(v0 + 6208);
      *(_OWORD *)(v0 + 5656) = *(_OWORD *)(v0 + 6160);
      *(_OWORD *)(v0 + 5672) = *(_OWORD *)(v0 + 6176);
      *(_OWORD *)(v0 + 5688) = *(_OWORD *)(v0 + 6192);
      v161 = *(_QWORD *)(v0 + 6408);
      v162 = *(_QWORD *)(v0 + 6416);
      v163 = *(_BYTE *)(v0 + 6440);
      *(_BYTE *)(v0 + 5896) = *(_BYTE *)(v0 + 6400);
      v164 = *(_QWORD *)(v0 + 6448);
      *(_QWORD *)(v0 + 5648) = v155;
      *(_QWORD *)(v0 + 5904) = v161;
      *(_QWORD *)(v0 + 5912) = v162;
      *(_OWORD *)(v0 + 5920) = *(_OWORD *)(v0 + 6424);
      *(_BYTE *)(v0 + 5936) = v163;
      *(_QWORD *)(v0 + 5944) = v164;
      sub_23ADF2D34(v0 + 6456, (voidsub_23AEB367C);
      sub_23AAFC2BC(v0 + 24352);
      v165 = sub_23AAFCF50(v0 + 5456);
      v166 = ((uint64_t (*)(uint64_t))sub_23B00634C)(v165);
      v167 = sub_23B006398(v166, 0);
      sub_23AAFC540(v0 + 24352);
      if (!v167)
      {
        v168 = **(void ***)(v0 + 320);
        *(_QWORD *)(v0 + 4960) = v168;
        *(_WORD *)(v0 + 4968) = 0;
        *(_QWORD *)(v0 + 4976) = (*(uint64_t (**)(void *))(*(_QWORD *)v129 + 272))(v168);
        *(_BYTE *)(v0 + 5042) = 8;
        *(_BYTE *)(v0 + 5075) = 9;
        sub_23AA724E8(v0 + 4960, v0 + 24232, &qword_2569E64D8);
        sub_23B020598(v34, v0 + 24232);
        sub_23AEB3270(v0 + 24232, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
      }
    }
  }
  sub_23AA724E8(v0 + 8936, v0 + 6456, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 6456, v0 + 5960, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 6456, v0 + 6952, (uint64_t *)&unk_2569E63E0);
  if (sub_23AAFC2A4(v0 + 6952) == 1)
  {
    v169 = *(_QWORD *)(v0 + 320);
  }
  else
  {
    v170 = *(_QWORD *)(v0 + 5960);
    v171 = *(_BYTE *)(v0 + 5984);
    v172 = *(_WORD *)(v0 + 6056);
    v173 = *(_BYTE *)(v0 + 6058);
    v174 = *(_BYTE *)(v0 + 6080);
    v175 = *(_OWORD *)(v0 + 6368);
    *(_OWORD *)(v0 + 5352) = *(_OWORD *)(v0 + 6352);
    *(_OWORD *)(v0 + 5368) = v175;
    *(_OWORD *)(v0 + 5384) = *(_OWORD *)(v0 + 6384);
    v176 = *(_OWORD *)(v0 + 6304);
    *(_OWORD *)(v0 + 5288) = *(_OWORD *)(v0 + 6288);
    *(_OWORD *)(v0 + 5304) = v176;
    v177 = *(_OWORD *)(v0 + 6336);
    *(_OWORD *)(v0 + 5320) = *(_OWORD *)(v0 + 6320);
    *(_OWORD *)(v0 + 5336) = v177;
    v178 = *(_OWORD *)(v0 + 6240);
    *(_OWORD *)(v0 + 5224) = *(_OWORD *)(v0 + 6224);
    *(_OWORD *)(v0 + 5240) = v178;
    v179 = *(_OWORD *)(v0 + 6272);
    *(_OWORD *)(v0 + 5256) = *(_OWORD *)(v0 + 6256);
    *(_OWORD *)(v0 + 5272) = v179;
    *(_OWORD *)(v0 + 5208) = *(_OWORD *)(v0 + 6208);
    *(_OWORD *)(v0 + 5160) = *(_OWORD *)(v0 + 6160);
    *(_OWORD *)(v0 + 5176) = *(_OWORD *)(v0 + 6176);
    *(_OWORD *)(v0 + 5192) = *(_OWORD *)(v0 + 6192);
    v180 = *(_BYTE *)(v0 + 6400);
    v181 = *(_QWORD *)(v0 + 6152);
    v182 = *(_QWORD *)(v0 + 6408);
    v183 = *(_BYTE *)(v0 + 6440);
    v184 = *(_QWORD *)(v0 + 6416);
    v185 = *(_QWORD *)(v0 + 6448);
    *(_QWORD *)(v0 + 4960) = v170;
    v186 = *(_OWORD *)(v0 + 5968);
    *(_OWORD *)(v0 + 432) = v186;
    *(_OWORD *)(v0 + 4968) = v186;
    *(_BYTE *)(v0 + 4984) = v171;
    v187 = *(_OWORD *)(v0 + 6008);
    *(_OWORD *)(v0 + 4992) = *(_OWORD *)(v0 + 5992);
    *(_OWORD *)(v0 + 5008) = v187;
    v188 = *(_OWORD *)(v0 + 6040);
    *(_OWORD *)(v0 + 5024) = *(_OWORD *)(v0 + 6024);
    *(_OWORD *)(v0 + 5040) = v188;
    *(_WORD *)(v0 + 5056) = v172;
    *(_BYTE *)(v0 + 5058) = v173;
    *(_OWORD *)(v0 + 5064) = *(_OWORD *)(v0 + 6064);
    *(_BYTE *)(v0 + 5080) = v174;
    v189 = *(_OWORD *)(v0 + 6104);
    *(_OWORD *)(v0 + 5088) = *(_OWORD *)(v0 + 6088);
    *(_OWORD *)(v0 + 5104) = v189;
    v190 = *(_OWORD *)(v0 + 6136);
    *(_OWORD *)(v0 + 5120) = *(_OWORD *)(v0 + 6120);
    *(_OWORD *)(v0 + 5136) = v190;
    *(_BYTE *)(v0 + 5400) = v180;
    *(_QWORD *)(v0 + 5152) = v181;
    *(_QWORD *)(v0 + 5408) = v182;
    *(_QWORD *)(v0 + 5416) = v184;
    *(_OWORD *)(v0 + 5424) = *(_OWORD *)(v0 + 6424);
    *(_BYTE *)(v0 + 5440) = v183;
    *(_QWORD *)(v0 + 5448) = v185;
    sub_23AA724E8(v0 + 6456, v0 + 5456, (uint64_t *)&unk_2569E63E0);
    sub_23AEB34A4(v0 + 5456);
    sub_23AAFCF50(v0 + 4960);
    v191 = sub_23AA9F3C4(4, *(_QWORD *)(v0 + 432));
    v169 = *(_QWORD *)(v0 + 320);
    if (v191)
    {
      sub_23AEA49E8();
      v192 = swift_allocObject();
      v193 = sub_23B1A1F64(v192, 1);
      *v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF8);
      v195 = nullsub_1(v193);
      v196 = *(_QWORD *)(v0 + 448);
      v197 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v136 + 272))(v169, v195);
      *(_QWORD *)(v0 + 448) = v196;
      if (v196)
      {
        swift_bridgeObjectRelease();
        sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
        sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
        sub_23ADF2D34(v0 + 3952, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB1930);
        sub_23AA724E8(v0 + 8936, v0 + 4456, (uint64_t *)&unk_2569E63E0);
        v198 = v0 + 4456;
LABEL_98:
        sub_23ADF2D34(v198, (voidsub_23AEB1930);
        v31 = v169;
        goto LABEL_345;
      }
      v201 = v197;
      swift_bridgeObjectRelease();
      if (!((uint64_t (*)(uint64_t))sub_23B0261BC)(v201))
      {
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      v202 = 0;
      v203 = (_OWORD *)(v0 + 24120);
      v204 = *(_QWORD *)(v3 - 72);
      while (1)
      {
        v205 = sub_23ACDBB7C((uint64_t (*)())(v0 + 4456), v202, v201);
        v207 = *v206;
        swift_retain();
        ((void (*)(uint64_t, _QWORD))v205)(v0 + 4456, 0);
        v208 = v202 + 1;
        if (__OFADD__(v202, 1))
          break;
        v209 = *(unsigned __int8 *)(v207 + 104);
        if ((_DWORD)v209 == 2)
          goto LABEL_413;
        v210 = *(void **)(v207 + 88);
        v211 = *(void **)(v207 + 96);
        *(_QWORD *)(v207 + 88) = 0;
        *(_QWORD *)(v207 + 96) = 0;
        *(_BYTE *)(v207 + 104) = 4;
        sub_23AAAEE10(v210, v211, v209);
        v212 = *(void (**)(uint64_t))(*(_QWORD *)v204 + 144);
        v213 = swift_retain();
        v212(v213);
        swift_release();
        v214 = *(void **)(v207 + 136);
        *v203 = 0u;
        *(_OWORD *)(v0 + 24136) = 0u;
        *(_OWORD *)(v0 + 24152) = 0u;
        *(_OWORD *)(v0 + 24168) = 0u;
        *(_QWORD *)(v0 + 24184) = 0;
        *(_QWORD *)(v0 + 24112) = v214;
        *(_QWORD *)(v0 + 24192) = 0x40000;
        *(_QWORD *)(v0 + 24208) = 0;
        *(_QWORD *)(v0 + 24216) = 0;
        *(_QWORD *)(v0 + 24200) = 0;
        *(_DWORD *)(v0 + 24223) = 0;
        *(_BYTE *)(v0 + 24227) = 9;
        v215 = v214;
        sub_23B020598(v204, v0 + 24112);
        swift_release();
        sub_23AB7C6B4(v214, 0, 0);
        sub_23AEAD8A8(0, 0, 0, 0, 0, 0, 0, 0, 0, 4);
        ++v202;
        if (v208 == ((uint64_t (*)(uint64_t))sub_23B0261BC)(v201))
        {
          swift_bridgeObjectRelease();
          v34 = *(_QWORD *)(v3 - 72);
          v135 = *(_BYTE **)(v0 + 400);
          v169 = *(_QWORD *)(v0 + 320);
          v136 = *(_QWORD *)(v0 + 152);
          goto LABEL_51;
        }
      }
      __break(1u);
      goto LABEL_141;
    }
  }
LABEL_51:
  sub_23AA724E8(v0 + 8440, v0 + 5456, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 5456, v0 + 5960, (uint64_t *)&unk_2569E63E0);
  v216 = sub_23AAFC2A4(v0 + 5960);
  v217 = *(_QWORD *)(v0 + 160);
  if (v216 != 1)
  {
    sub_23AA724E8(v0 + 5456, v0 + 4960, (uint64_t *)&unk_2569E63E0);
    v218 = *(_QWORD *)(v0 + 4968);
    if (!sub_23AA9F490(v218))
    {
      *(_QWORD *)(v0 + 432) = v218;
      if (sub_23AA9F3C4(4, v218))
      {
        sub_23AEA49E8();
        v219 = swift_allocObject();
        v220 = sub_23B1A1F64(v219, 1);
        *v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF8);
        v222 = nullsub_1(v220);
        v223 = v136;
        v224 = v222;
        v225 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v223 + 272);
        sub_23ADF2D34(v0 + 5456, (voidsub_23AEB367C);
        v226 = *(_QWORD *)(v0 + 448);
        v227 = v225(v169, v224);
        *(_QWORD *)(v0 + 448) = v226;
        if (v226)
        {
          swift_bridgeObjectRelease();
          sub_23ADF2D34(v0 + 5456, (voidsub_23AEB1930);
          sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
          sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
          sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
          sub_23AA724E8(v0 + 8936, v0 + 4456, (uint64_t *)&unk_2569E63E0);
          sub_23ADF2D34(v0 + 4456, (voidsub_23AEB1930);
          v31 = v169;
          goto LABEL_345;
        }
        v228 = v227;
        swift_bridgeObjectRelease();
        if (((uint64_t (*)(uint64_t))sub_23B0261BC)(v228))
        {
          v229 = 0;
          v230 = (_OWORD *)(v0 + 24000);
          while (1)
          {
            v231 = sub_23ACDBB7C((uint64_t (*)())(v0 + 4456), v229, v228);
            v233 = *v232;
            swift_retain();
            ((void (*)(uint64_t, _QWORD))v231)(v0 + 4456, 0);
            v234 = v229 + 1;
            if (__OFADD__(v229, 1))
            {
              __break(1u);
              goto LABEL_387;
            }
            v209 = *(unsigned __int8 *)(v233 + 104);
            if ((_DWORD)v209 == 2)
              break;
            v235 = *(void **)(v233 + 88);
            v236 = *(void **)(v233 + 96);
            *(_QWORD *)(v233 + 88) = 0;
            *(_QWORD *)(v233 + 96) = 0;
            *(_BYTE *)(v233 + 104) = 4;
            sub_23AAAEE10(v235, v236, v209);
            v237 = *(_QWORD *)(v3 - 72);
            v238 = *(void (**)(uint64_t))(*(_QWORD *)v237 + 144);
            v239 = swift_retain();
            v238(v239);
            swift_release();
            v240 = *(void **)(v233 + 136);
            *v230 = 0u;
            *(_OWORD *)(v0 + 24016) = 0u;
            *(_OWORD *)(v0 + 24032) = 0u;
            *(_OWORD *)(v0 + 24048) = 0u;
            *(_QWORD *)(v0 + 24064) = 0;
            *(_QWORD *)(v0 + 23992) = v240;
            *(_QWORD *)(v0 + 24072) = 0x40000;
            *(_QWORD *)(v0 + 24088) = 0;
            *(_QWORD *)(v0 + 24096) = 0;
            *(_QWORD *)(v0 + 24080) = 0;
            *(_DWORD *)(v0 + 24103) = 0;
            *(_BYTE *)(v0 + 24107) = 9;
            v241 = v240;
            sub_23B020598(v237, v0 + 23992);
            swift_release();
            sub_23AB7C6B4(v240, 0, 0);
            sub_23AEAD8A8(0, 0, 0, 0, 0, 0, 0, 0, 0, 4);
            v242 = ((uint64_t (*)(uint64_t))sub_23B0261BC)(v228);
            ++v229;
            v169 = *(_QWORD *)(v0 + 320);
            if (v234 == v242)
              goto LABEL_62;
          }
LABEL_413:
          sub_23AFF07BC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/Job.swift", 97, v209, 140);
        }
LABEL_62:
        swift_bridgeObjectRelease();
        v34 = *(_QWORD *)(v3 - 72);
        v135 = *(_BYTE **)(v0 + 400);
        v217 = *(_QWORD *)(v0 + 160);
      }
      else
      {
        sub_23ADF2D34(v0 + 5456, (voidsub_23AEB367C);
      }
      if ((v135[32] & 1) == 0)
      {
        v256 = *(id *)v169;
        *(_OWORD *)(v0 + 23880) = 0u;
        *(_OWORD *)(v0 + 23896) = 0u;
        *(_OWORD *)(v0 + 23912) = 0u;
        *(_OWORD *)(v0 + 23928) = 0u;
        *(_QWORD *)(v0 + 23872) = v256;
        *(_QWORD *)(v0 + 23944) = 0;
        *(_QWORD *)(v0 + 23952) = 196608;
        *(_QWORD *)(v0 + 23960) = 0;
        *(_QWORD *)(v0 + 23976) = 0;
        *(_QWORD *)(v0 + 23968) = 0;
        *(_DWORD *)(v0 + 23983) = 0;
        *(_BYTE *)(v0 + 23987) = 9;
        v257 = v256;
        sub_23B020598(v34, v0 + 23872);
        sub_23AB7C6B4(v256, 0, 0);
        sub_23AEAD8A8(0, 0, 0, 0, 0, 0, 0, 0, 0, 3);
        v258 = (*(uint64_t (**)(void))(v0 + 368))();
        if (sub_23AA9F3D0(0x4000, v258))
        {
          v259 = *(id *)v169;
          *(_OWORD *)(v0 + 23760) = 0u;
          *(_OWORD *)(v0 + 23776) = 0u;
          *(_OWORD *)(v0 + 23792) = 0u;
          *(_OWORD *)(v0 + 23808) = 0u;
          *(_QWORD *)(v0 + 23752) = v259;
          *(_QWORD *)(v0 + 23824) = 0;
          *(_QWORD *)(v0 + 23832) = 917504;
          *(_QWORD *)(v0 + 23840) = 0;
          *(_QWORD *)(v0 + 23856) = 0;
          *(_QWORD *)(v0 + 23848) = 0;
          *(_DWORD *)(v0 + 23863) = 0;
          *(_BYTE *)(v0 + 23867) = 9;
          v260 = v259;
          sub_23B020598(v34, v0 + 23752);
          sub_23AB7C6B4(v259, 0, 0);
          sub_23AEAD8A8(0, 0, 0, 0, 0, 0, 0, 0, 0, 14);
        }
        if (sub_23AA9F3C4(8, *(_QWORD *)(v0 + 432)))
        {
          v261 = *(id *)v169;
          *(_QWORD *)(v0 + 4456) = *(_QWORD *)v169;
          *(_WORD *)(v0 + 4464) = 0;
          v262 = *(unsigned __int8 *)(v169
                                    + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760)
                                             + 48));
          v263 = qword_2542E7190;
          v264 = v261;
          if (v263 != -1)
            swift_once();
          v265 = qword_2542EDE38;
          if ((qword_2542EDE38 & 8) != 0 && v262 == 1)
            v265 = qword_2542EDE38 & 0xFFFFFFFFFFFFFFF7;
          *(_QWORD *)(v0 + 4472) = v265;
          *(_QWORD *)(v0 + 4480) = *(_QWORD *)(v0 + 256);
          *(_QWORD *)(v0 + 4488) = *(_QWORD *)(v0 + 264);
          *(_BYTE *)(v0 + 4538) = 0;
          *(_BYTE *)(v0 + 4571) = 9;
          sub_23AA724E8(v0 + 4456, v0 + 23512, &qword_2569E64D8);
          sub_23B020598(v34, v0 + 23512);
          v267 = v0 + 23512;
        }
        else
        {
          v268 = *(id *)v169;
          *(_QWORD *)(v0 + 4456) = *(_QWORD *)v169;
          *(_WORD *)(v0 + 4464) = 0;
          v269 = v268;
          v270 = sub_23ACD83C0(0);
          v271 = sub_23AFD7BC8(v270);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v0 + 4472) = v271;
          *(_QWORD *)(v0 + 4480) = *(_QWORD *)(v0 + 256);
          *(_QWORD *)(v0 + 4488) = *(_QWORD *)(v0 + 264);
          *(_BYTE *)(v0 + 4538) = 0;
          *(_BYTE *)(v0 + 4571) = 9;
          sub_23AA724E8(v0 + 4456, v0 + 23632, &qword_2569E64D8);
          sub_23B020598(v34, v0 + 23632);
          v267 = v0 + 23632;
        }
        sub_23AEB3270(v267, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
        v217 = *(_QWORD *)(v0 + 160);
        v272 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if (sub_23AC37B08(*(_BYTE *)(v169 + *(int *)(v272 + 48)), 1)
          && (sub_23AFFA4F4() & 1) == 0
          && *(_BYTE *)(v169 + *(int *)(*(_QWORD *)(v0 + 376) + 48) + *(int *)(*(_QWORD *)(v0 + 216) + 64)) != 1)
        {
          v273 = *(id *)v169;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
          v274 = swift_allocObject();
          v275 = sub_23B1A1F64(v274, 2);
          *v276 = v217;
          v276[1] = 0x80000000;
          v277 = nullsub_1(v275);
          v278 = sub_23AFD7BC8(v277);
          v279 = v273;
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
          swift_allocObject();
          v280 = sub_23AEA89CC(v279, *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), v278);

          (*(void (**)(uint64_t))(*(_QWORD *)v34 + 144))(v280);
          v217 = *(_QWORD *)(v0 + 160);
          swift_release();
        }
      }
      sub_23ADF2D34(v0 + 5456, (voidsub_23AEB1930);
    }
  }
  if (sub_23AA9F3D0(0x4000000, v217))
  {
    v243 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
    if (sub_23AC37B08(*(_BYTE *)(v169 + *(int *)(v243 + 48)), 1))
    {
      v244 = *(id *)v169;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
      v245 = swift_allocObject();
      v246 = sub_23B1A1F64(v245, 2);
      *v247 = v217;
      v247[1] = 0x1000000000;
      v248 = nullsub_1(v246);
      v249 = sub_23AFD7BC8(v248);
      v250 = v244;
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
      swift_allocObject();
      v251 = sub_23AEA89CC(v250, *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), v249);

      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 144))(v251);
      v217 = *(_QWORD *)(v0 + 160);
      swift_release();
    }
  }
  v252 = sub_23AA9F3D0(0x1000000000, v217);
  v253 = sub_23AA9F3D0(0x2000000000, v217);
  if ((v135[32] & 1) != 0)
    goto LABEL_121;
  v254 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  if (sub_23AC37B08(*(_BYTE *)(v169 + *(int *)(v254 + 48)), 1)
    && sub_23AA9F3D0(0x100000000000, *(_QWORD *)(v0 + 9432)))
  {
    v255 = v169 + *(int *)(*(_QWORD *)(v0 + 376) + 48);
    if ((*(_BYTE *)(v255 + *(int *)(*(_QWORD *)(v0 + 216) + 64)) & 1) == 0)
    {
      if ((*(_BYTE *)(v255 + *(int *)(*(_QWORD *)(v0 + 216) + 60)) & 1) != 0
        && (sub_23AA724E8(v0 + 5456, v0 + 4960, (uint64_t *)&unk_2569E63E0), sub_23AAFC2A4(v0 + 4960) != 1))
      {
        sub_23AA724E8(v0 + 5456, v0 + 4456, (uint64_t *)&unk_2569E63E0);
        v252 |= !sub_23AA9F3C4(16, *(_QWORD *)(v0 + 4464));
      }
      else
      {
        v252 = 1;
      }
    }
  }
  if ((v135[32] & 1) != 0 || !sub_23AA9F3D0(2, *(_QWORD *)(v0 + 9432)))
  {
LABEL_121:
    if (((v252 | v253) & 1) != 0)
    {
      LOBYTE(v203) = v252 ^ 1 | v253;
      goto LABEL_123;
    }
    goto LABEL_144;
  }
  v281 = v34;
  v282 = *(_QWORD *)(v0 + 328);
  v283 = *(uint64_t (**)(void))(*(_QWORD *)v135 + 528);
  *(_QWORD *)(v0 + 432) = v282 + 8;
  v284 = *(_QWORD *)(v0 + 448);
  v285 = v283();
  *(_QWORD *)(v0 + 448) = v284;
  if (v284)
  {
    sub_23AA8A05C(v282, (uint64_t *)&unk_2542E4760);
    sub_23AA724E8(v0 + 8440, v0 + 4456, (uint64_t *)&unk_2569E63E0);
    sub_23ADF2D34(v0 + 4456, (voidsub_23AEB1930);
    sub_23AA724E8(v0 + 8936, v0 + 4960, (uint64_t *)&unk_2569E63E0);
    v198 = v0 + 4960;
    goto LABEL_98;
  }
  v286 = v285;
  if (sub_23AF9C8A8(v285))
  {
    swift_bridgeObjectRelease();
    if ((v252 & v253 & 1) != 0)
    {
      LOBYTE(v203) = 1;
      LOBYTE(v252) = 1;
      v34 = v281;
      goto LABEL_123;
    }
    goto LABEL_115;
  }
  if (!sub_23AB6CF48(v286))
  {
LABEL_114:
    swift_bridgeObjectRelease();
    LOBYTE(v203) = 1;
    v252 = 1;
    v34 = *(_QWORD *)(v3 - 72);
    v169 = *(_QWORD *)(v0 + 320);
    if (v253)
      goto LABEL_123;
LABEL_115:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
    v300 = swift_allocObject();
    v301 = sub_23B1A1F64(v300, 2);
    *v302 = xmmword_23B1DA9E0;
    v303 = nullsub_1(v301);
    v304 = sub_23AFD7BC8(v303);
    swift_bridgeObjectRelease();
    v305 = *(_QWORD *)(v0 + 448);
    v306 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v0 + 400) + 448))(*(_QWORD *)(v0 + 432), v304);
    *(_QWORD *)(v0 + 448) = v305;
    if (!v305)
    {
      v307 = v306;
      v252 |= sub_23AA9F3D0(0x1000000000, v306);
      if (sub_23AA9F3D0(0x2000000000, v307))
      {
        LOBYTE(v203) = 1;
        goto LABEL_139;
      }
      v34 = *(_QWORD *)(v3 - 72);
      v135 = *(_BYTE **)(v0 + 400);
      v169 = *(_QWORD *)(v0 + 320);
      goto LABEL_121;
    }
LABEL_119:
    sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
    sub_23AA724E8(v0 + 8440, v0 + 4456, (uint64_t *)&unk_2569E63E0);
    sub_23ADF2D34(v0 + 4456, (voidsub_23AEB1930);
    sub_23AA724E8(v0 + 8936, v0 + 4960, (uint64_t *)&unk_2569E63E0);
    sub_23ADF2D34(v0 + 4960, (voidsub_23AEB1930);
    v31 = *(_QWORD *)(v0 + 320);
    goto LABEL_345;
  }
  v287 = 0;
  v288 = *(void (**)(uint64_t))(**(_QWORD **)(v0 + 384) + 160);
  v289 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 360) = v286;
  while (1)
  {
    v290 = sub_23ACDBBE8((void (*)(id *))(v0 + 4960), v287, v286);
    v292 = *v291;
    ((void (*)(uint64_t, _QWORD))v290)(v0 + 4960, 0);
    v293 = v287 + 1;
    if (__OFADD__(v287, 1))
    {
      __break(1u);
      goto LABEL_404;
    }
    *(_QWORD *)(v0 + 2960) = v292;
    v294 = *(_QWORD *)(v0 + 448);
    v288(v0 + 2960);
    *(_QWORD *)(v0 + 448) = v294;
    if (v294)
    {
LABEL_118:
      swift_bridgeObjectRelease();

      goto LABEL_119;
    }
    v295 = *(unsigned __int8 *)(v0 + 3464);
    if (v295 != 255)
      break;

LABEL_105:
    ++v287;
    if (v293 == sub_23AB6CF48(v286))
      goto LABEL_114;
  }
  *(_QWORD *)(v0 + 3952) = *(_QWORD *)(v0 + 3456);
  *(_BYTE *)(v0 + 3960) = v295;
  v296 = *(_QWORD *)(v0 + 448);
  (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 424) + 40) + 240))(v0 + 3952, 1);
  *(_QWORD *)(v0 + 448) = v296;
  if (v296)
    goto LABEL_118;

  v297 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 48))(v289, 1, v297) == 1)
  {
    sub_23AA8A05C(v289, (uint64_t *)&unk_2542E4750);
    goto LABEL_105;
  }
  v298 = *(_QWORD *)(v0 + 80);
  sub_23AA724E8(v289, v298, (uint64_t *)&unk_2542E6B00);
  v299 = *(_BYTE *)(v298 + *(int *)(v297 + 48) + *(int *)(*(_QWORD *)(v0 + 216) + 60));
  sub_23AA8A05C(v298, (uint64_t *)&unk_2542E6B00);
  if ((v299 & 1) == 0)
  {
    v286 = *(_QWORD *)(v0 + 360);
    goto LABEL_105;
  }
  swift_bridgeObjectRelease();
  LOBYTE(v203) = 1;
  LOBYTE(v252) = 1;
LABEL_139:
  v34 = *(_QWORD *)(v3 - 72);
  v169 = *(_QWORD *)(v0 + 320);
LABEL_123:
  v308 = *(_QWORD *)(v0 + 160);
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) != 0)
    goto LABEL_137;
  v309 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  if (sub_23AC37B08(*(_BYTE *)(v169 + *(int *)(v309 + 48)), 1))
  {
    v310 = sub_23ACD8484(0);
    v311 = sub_23AFD7BC8(v310);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 4960) = v311;
    sub_23AF24980(0x1000000000, v252 & 1);
    sub_23AF24980(0x2000000000, v203 & 1);
    v312 = *(id *)v169;
    v313 = sub_23ADA8168(v312);
    v315 = v314;
    v316 = *(_QWORD *)(v0 + 4960);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
    swift_allocObject();
    v317 = sub_23AEA89CC(v312, v313, v315, v316);

    (*(void (**)(uint64_t))(*(_QWORD *)v34 + 144))(v317);
    swift_release();
    v318 = *(id *)v169;
    v319 = sub_23ADA8168(v318);
    sub_23AE9EFA8((uint64_t)v318, v319, v320, v316, (uint64_t *)&unk_2569E63A0);
    (*(void (**)(void))(*(_QWORD *)v34 + 144))();
    v308 = *(_QWORD *)(v0 + 160);
    swift_release();
    goto LABEL_137;
  }
  sub_23AA724E8(v0 + 8440, v0 + 4456, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 4456, v0 + 4960, (uint64_t *)&unk_2569E63E0);
  if (sub_23AAFC2A4(v0 + 4960) == 1
    || (sub_23AA724E8(v0 + 4456, v0 + 3952, (uint64_t *)&unk_2569E63E0),
        memcpy((void *)(v0 + 23016), (const void *)(v0 + 3952), 0x1F0uLL),
        !sub_23B002AF8())
    || !sub_23AA9F490(*(_QWORD *)(v0 + 3960)))
  {
LABEL_137:
    v135 = *(_BYTE **)(v0 + 400);
    goto LABEL_145;
  }
  if (!sub_23AA9F490(*(_QWORD *)(v0 + 4168)))
    goto LABEL_143;
  if ((v252 & 1) != 0)
  {
    v321 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
    if (sub_23AAA0A58(*(_BYTE *)(*(_QWORD *)(v0 + 320) + *(int *)(v321 + 48)))
      && !sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v0 + 320)+ *(int *)(*(_QWORD *)(v0 + 376) + 48)+ *(int *)(*(_QWORD *)(v0 + 216) + 84)), 0))
    {
LABEL_141:
      v326 = *(void ***)(v0 + 320);
      v327 = *v326;
      *(_QWORD *)(v0 + 3456) = *v326;
      *(_WORD *)(v0 + 3464) = 0;
      sub_23ADF2D34(v0 + 4456, (voidsub_23AEB367C);
      v328 = sub_23ADA8168(v327);
      *(_QWORD *)(v0 + 3472) = 0x10000;
      *(_QWORD *)(v0 + 3480) = v328;
      *(_QWORD *)(v0 + 3488) = v329;
      *(_WORD *)(v0 + 3570) = 2048;
      sub_23AA724E8(v0 + 3456, v0 + 22896, &qword_2569E64D8);
      sub_23B020598(*(_QWORD *)(v3 - 72), v0 + 22896);
      sub_23AEB3270(v0 + 22896, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
      if ((v203 & 1) != 0)
        goto LABEL_134;
      goto LABEL_142;
    }
  }
  sub_23AEB34A4(v0 + 3952);
  if ((v203 & 1) != 0)
  {
LABEL_134:
    if ((*(_BYTE *)(*(_QWORD *)(v0 + 320)
                   + *(int *)(*(_QWORD *)(v0 + 376) + 48)
                   + *(int *)(*(_QWORD *)(v0 + 216) + 80)) & 1) == 0)
    {
      v322 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
      if (sub_23AFA7480(*(_BYTE *)(*(_QWORD *)(v0 + 320) + *(int *)(v322 + 48))))
      {
        v169 = *(_QWORD *)(v0 + 320);
        v323 = *(id *)v169;
        *(_QWORD *)(v0 + 3456) = *(_QWORD *)v169;
        *(_WORD *)(v0 + 3464) = 0;
        v324 = sub_23ADA8168(v323);
        *(_QWORD *)(v0 + 3472) = 8;
        *(_QWORD *)(v0 + 3480) = v324;
        *(_QWORD *)(v0 + 3488) = v325;
        *(_BYTE *)(v0 + 3538) = 0;
        *(_BYTE *)(v0 + 3571) = 9;
        sub_23AA724E8(v0 + 3456, v0 + 22776, &qword_2569E64D8);
        v34 = *(_QWORD *)(v3 - 72);
        sub_23B020598(v34, v0 + 22776);
        sub_23AEB3270(v0 + 22776, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
        sub_23ADF2D34(v0 + 4456, (voidsub_23AEB1930);
        v135 = *(_BYTE **)(v0 + 400);
        goto LABEL_144;
      }
    }
  }
LABEL_142:
  sub_23ADF2D34(v0 + 4456, (voidsub_23AEB1930);
LABEL_143:
  v34 = *(_QWORD *)(v3 - 72);
  v135 = *(_BYTE **)(v0 + 400);
  v169 = *(_QWORD *)(v0 + 320);
LABEL_144:
  v308 = *(_QWORD *)(v0 + 160);
LABEL_145:
  LODWORD(v230) = sub_23AA9F3D0(1, v308);
  if ((v230 & 1) != 0 && v135[32] == 1)
  {
    sub_23AA724E8(v0 + 8440, v0 + 4456, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8(v0 + 4456, v0 + 4960, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4(v0 + 4960) != 1)
    {
      sub_23AA724E8(v0 + 4456, v0 + 3952, (uint64_t *)&unk_2569E63E0);
      memcpy((void *)(v0 + 22280), (const void *)(v0 + 3952), 0x1F0uLL);
      if (!sub_23B002AF8())
      {
        v330 = *(id *)v169;
        *(_OWORD *)(v0 + 22168) = xmmword_23B1DA9C0;
        *(_QWORD *)(v0 + 22160) = v330;
        v332 = *(void **)(v0 + 256);
        v331 = *(_QWORD *)(v0 + 264);
        *(_QWORD *)(v0 + 22184) = v332;
        *(_OWORD *)(v0 + 22200) = 0u;
        *(_OWORD *)(v0 + 22216) = 0u;
        *(_OWORD *)(v0 + 22232) = 0u;
        *(_OWORD *)(v0 + 22248) = 0u;
        *(_QWORD *)(v0 + 22192) = v331;
        *(_QWORD *)(v0 + 22264) = 0;
        *(_DWORD *)(v0 + 22272) = 135004160;
        v333 = v330;
        sub_23B020598(v34, v0 + 22160);
        sub_23AB7C6B4(v330, 0, 0);
        sub_23AEAD994((void *)0x203, v332, v331, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12);
      }
    }
  }
  v334 = *(_QWORD *)(v0 + 9432);
  v335 = sub_23AA9F3D0(8, v334);
  if (v335)
  {
    sub_23AA724E8(v0 + 8440, v0 + 4456, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8(v0 + 4456, v0 + 3952, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8(v0 + 4456, v0 + 4960, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4(v0 + 4960) != 1)
    {
      sub_23AA724E8(v0 + 4456, v0 + 2960, (uint64_t *)&unk_2569E63E0);
      v336 = *(unsigned __int8 *)(v0 + 3976);
      v337 = *(_QWORD *)(v0 + 3968);
      v338 = *(_WORD *)(v0 + 4048);
      v339 = *(_BYTE *)(v0 + 4050);
      v340 = *(_BYTE *)(v0 + 4072);
      v341 = *(_QWORD *)(v0 + 4144);
      v342 = *(_OWORD *)(v0 + 4360);
      *(_OWORD *)(v0 + 3848) = *(_OWORD *)(v0 + 4344);
      *(_OWORD *)(v0 + 3864) = v342;
      *(_OWORD *)(v0 + 3880) = *(_OWORD *)(v0 + 4376);
      v343 = *(_OWORD *)(v0 + 4296);
      *(_OWORD *)(v0 + 3784) = *(_OWORD *)(v0 + 4280);
      *(_OWORD *)(v0 + 3800) = v343;
      v344 = *(_OWORD *)(v0 + 4328);
      *(_OWORD *)(v0 + 3816) = *(_OWORD *)(v0 + 4312);
      *(_OWORD *)(v0 + 3832) = v344;
      v345 = *(_OWORD *)(v0 + 4232);
      *(_OWORD *)(v0 + 3720) = *(_OWORD *)(v0 + 4216);
      *(_OWORD *)(v0 + 3736) = v345;
      v346 = *(_OWORD *)(v0 + 4264);
      *(_OWORD *)(v0 + 3752) = *(_OWORD *)(v0 + 4248);
      *(_OWORD *)(v0 + 3768) = v346;
      *(_OWORD *)(v0 + 3704) = *(_OWORD *)(v0 + 4200);
      *(_OWORD *)(v0 + 3656) = *(_OWORD *)(v0 + 4152);
      *(_OWORD *)(v0 + 3672) = *(_OWORD *)(v0 + 4168);
      *(_OWORD *)(v0 + 3688) = *(_OWORD *)(v0 + 4184);
      v347 = *(_BYTE *)(v0 + 4392);
      v348 = *(_QWORD *)(v0 + 4400);
      v349 = *(_QWORD *)(v0 + 4408);
      v350 = *(_BYTE *)(v0 + 4432);
      v351 = *(_QWORD *)(v0 + 4440);
      *(_OWORD *)(v0 + 3456) = *(_OWORD *)(v0 + 3952);
      *(_QWORD *)(v0 + 3472) = v337;
      *(_BYTE *)(v0 + 3480) = v336;
      v352 = *(_OWORD *)(v0 + 4000);
      *(_OWORD *)(v0 + 3488) = *(_OWORD *)(v0 + 3984);
      *(_OWORD *)(v0 + 3504) = v352;
      v353 = *(_OWORD *)(v0 + 4032);
      *(_OWORD *)(v0 + 3520) = *(_OWORD *)(v0 + 4016);
      *(_OWORD *)(v0 + 3536) = v353;
      *(_WORD *)(v0 + 3552) = v338;
      *(_BYTE *)(v0 + 3554) = v339;
      *(_OWORD *)(v0 + 3560) = *(_OWORD *)(v0 + 4056);
      *(_BYTE *)(v0 + 3576) = v340;
      v354 = *(_OWORD *)(v0 + 4096);
      *(_OWORD *)(v0 + 3584) = *(_OWORD *)(v0 + 4080);
      *(_OWORD *)(v0 + 3600) = v354;
      v355 = *(_OWORD *)(v0 + 4128);
      *(_OWORD *)(v0 + 3616) = *(_OWORD *)(v0 + 4112);
      *(_OWORD *)(v0 + 3632) = v355;
      *(_QWORD *)(v0 + 3648) = v341;
      *(_BYTE *)(v0 + 3896) = v347;
      *(_QWORD *)(v0 + 3904) = v348;
      *(_QWORD *)(v0 + 3912) = v349;
      *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v0 + 4416);
      *(_BYTE *)(v0 + 3936) = v350;
      *(_QWORD *)(v0 + 3944) = v351;
      sub_23AEB34A4(v0 + 2960);
      sub_23AAFCF50(v0 + 3456);
      if (v336 != 3 && sub_23AA9F51C(v336, 1))
      {
        *(_QWORD *)(v0 + 432) = v334;
        v356 = *(id *)v169;
        *(_OWORD *)(v0 + 22048) = xmmword_23B1DA9F0;
        *(_QWORD *)(v0 + 22040) = v356;
        v358 = *(void **)(v0 + 256);
        v357 = *(_QWORD *)(v0 + 264);
        *(_QWORD *)(v0 + 22064) = v358;
        *(_OWORD *)(v0 + 22080) = 0u;
        *(_OWORD *)(v0 + 22096) = 0u;
        *(_QWORD *)(v0 + 22072) = v357;
        *(_QWORD *)(v0 + 22112) = 0;
        *(_QWORD *)(v0 + 22120) = 786432;
        *(_QWORD *)(v0 + 22128) = 0;
        *(_QWORD *)(v0 + 22144) = 0;
        *(_QWORD *)(v0 + 22136) = 0;
        *(_DWORD *)(v0 + 22151) = 0;
        *(_BYTE *)(v0 + 22155) = 9;
        v359 = v356;
        sub_23B020598(v34, v0 + 22040);
        sub_23AB7C6B4(v356, 0, 0);
        sub_23AEAD8A8((void *)0x301, v358, v357, 0, 0, 0, 0, 0, 0, 12);
        v360 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if (sub_23AC37B08(*(_BYTE *)(v169 + *(int *)(v360 + 48)), 0))
        {
          sub_23AA724E8(v0 + 4456, v0 + 1968, (uint64_t *)&unk_2569E63E0);
          v361 = *(_QWORD *)(v0 + 2456);
          v362 = *(_OWORD *)(v0 + 2144);
          *(_OWORD *)(v0 + 2624) = *(_OWORD *)(v0 + 2128);
          *(_OWORD *)(v0 + 2640) = v362;
          *(_QWORD *)(v0 + 2656) = *(_QWORD *)(v0 + 2160);
          v363 = *(_OWORD *)(v0 + 2080);
          *(_OWORD *)(v0 + 2560) = *(_OWORD *)(v0 + 2064);
          *(_OWORD *)(v0 + 2576) = v363;
          v364 = *(_OWORD *)(v0 + 2096);
          *(_OWORD *)(v0 + 2608) = *(_OWORD *)(v0 + 2112);
          *(_OWORD *)(v0 + 2592) = v364;
          v365 = *(_OWORD *)(v0 + 2016);
          *(_OWORD *)(v0 + 2496) = *(_OWORD *)(v0 + 2000);
          *(_OWORD *)(v0 + 2512) = v365;
          v366 = *(_OWORD *)(v0 + 2032);
          *(_OWORD *)(v0 + 2544) = *(_OWORD *)(v0 + 2048);
          *(_OWORD *)(v0 + 2528) = v366;
          v367 = *(_OWORD *)(v0 + 1968);
          *(_OWORD *)(v0 + 2480) = *(_OWORD *)(v0 + 1984);
          *(_OWORD *)(v0 + 2464) = v367;
          v368 = *(_OWORD *)(v0 + 2376);
          *(_OWORD *)(v0 + 2856) = *(_OWORD *)(v0 + 2360);
          *(_OWORD *)(v0 + 2872) = v368;
          *(_OWORD *)(v0 + 2888) = *(_OWORD *)(v0 + 2392);
          v369 = *(_OWORD *)(v0 + 2312);
          *(_OWORD *)(v0 + 2792) = *(_OWORD *)(v0 + 2296);
          *(_OWORD *)(v0 + 2808) = v369;
          v370 = *(_OWORD *)(v0 + 2344);
          *(_OWORD *)(v0 + 2824) = *(_OWORD *)(v0 + 2328);
          *(_OWORD *)(v0 + 2840) = v370;
          v371 = *(_OWORD *)(v0 + 2248);
          *(_OWORD *)(v0 + 2728) = *(_OWORD *)(v0 + 2232);
          *(_OWORD *)(v0 + 2744) = v371;
          v372 = *(_OWORD *)(v0 + 2280);
          *(_OWORD *)(v0 + 2760) = *(_OWORD *)(v0 + 2264);
          *(_OWORD *)(v0 + 2776) = v372;
          *(_OWORD *)(v0 + 2712) = *(_OWORD *)(v0 + 2216);
          *(_OWORD *)(v0 + 2664) = *(_OWORD *)(v0 + 2168);
          *(_OWORD *)(v0 + 2680) = *(_OWORD *)(v0 + 2184);
          *(_OWORD *)(v0 + 2696) = *(_OWORD *)(v0 + 2200);
          v373 = *(_QWORD *)(v0 + 2416);
          v374 = *(_QWORD *)(v0 + 2424);
          v375 = *(_BYTE *)(v0 + 2448);
          *(_BYTE *)(v0 + 2904) = *(_BYTE *)(v0 + 2408);
          *(_QWORD *)(v0 + 2912) = v373;
          *(_QWORD *)(v0 + 2920) = v374;
          *(_OWORD *)(v0 + 2928) = *(_OWORD *)(v0 + 2432);
          *(_BYTE *)(v0 + 2944) = v375;
          *(_QWORD *)(v0 + 2952) = v361;
          sub_23AEB34A4(v0 + 2960);
          sub_23AAFCF50(v0 + 2464);
          if (!sub_23AA9F3D0(1, v361))
          {
            sub_23AA724E8(*(_QWORD *)(v0 + 328) + *(int *)(*(_QWORD *)(v0 + 376) + 52), v0 + 960, &qword_2542E5050);
            sub_23AA724E8(v0 + 960, v0 + 1968, &qword_2542E5050);
            if (sub_23AAFCF2C(v0 + 1968) == 1)
              goto LABEL_159;
            v376 = *(_OWORD *)(v0 + 2176);
            *(_OWORD *)(v0 + 21984) = *(_OWORD *)(v0 + 2160);
            *(_OWORD *)(v0 + 22000) = v376;
            *(_OWORD *)(v0 + 22016) = *(_OWORD *)(v0 + 2192);
            *(_QWORD *)(v0 + 22032) = *(_QWORD *)(v0 + 2208);
            v377 = *(_OWORD *)(v0 + 2112);
            *(_OWORD *)(v0 + 21920) = *(_OWORD *)(v0 + 2096);
            *(_OWORD *)(v0 + 21936) = v377;
            v378 = *(_OWORD *)(v0 + 2144);
            *(_OWORD *)(v0 + 21952) = *(_OWORD *)(v0 + 2128);
            *(_OWORD *)(v0 + 21968) = v378;
            v379 = *(_OWORD *)(v0 + 2048);
            *(_OWORD *)(v0 + 21856) = *(_OWORD *)(v0 + 2032);
            *(_OWORD *)(v0 + 21872) = v379;
            v380 = *(_OWORD *)(v0 + 2080);
            *(_OWORD *)(v0 + 21888) = *(_OWORD *)(v0 + 2064);
            *(_OWORD *)(v0 + 21904) = v380;
            v381 = *(_OWORD *)(v0 + 1984);
            *(_OWORD *)(v0 + 21792) = *(_OWORD *)(v0 + 1968);
            *(_OWORD *)(v0 + 21808) = v381;
            v382 = *(_OWORD *)(v0 + 2016);
            *(_OWORD *)(v0 + 21824) = *(_OWORD *)(v0 + 2000);
            *(_OWORD *)(v0 + 21840) = v382;
            v383 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 424) + 512);
            sub_23AA724E8(v0 + 960, v0 + 464, &qword_2542E5050);
            v384 = sub_23AC42B28(v0 + 464);
            v385 = v383(v384);
            v386 = sub_23AF9679C(v385 & 1, 0, 0);
            sub_23AAB7E4C((_QWORD *)(v0 + 960), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
            if (!sub_23AC37674(v386, 501))
            {
LABEL_159:
              v34 = *(_QWORD *)(v3 - 72);
              v135 = *(_BYTE **)(v0 + 400);
              v169 = *(_QWORD *)(v0 + 320);
            }
            else
            {
              v169 = *(_QWORD *)(v0 + 320);
              v387 = *(id *)v169;
              v388 = *(id *)v169;
              v389 = sub_23ACD8490(0);
              v390 = sub_23AFD7BC8(v389);
              swift_bridgeObjectRelease();
              *(_OWORD *)(v0 + 21680) = xmmword_23B1CFA60;
              *(_QWORD *)(v0 + 21672) = v387;
              *(_QWORD *)(v0 + 21696) = v390;
              *(_OWORD *)(v0 + 21704) = 0u;
              *(_OWORD *)(v0 + 21720) = 0u;
              *(_OWORD *)(v0 + 21736) = 0u;
              *(_OWORD *)(v0 + 21752) = 0u;
              *(_OWORD *)(v0 + 21768) = 0u;
              *(_DWORD *)(v0 + 21783) = 0;
              *(_BYTE *)(v0 + 21787) = 13;
              v34 = *(_QWORD *)(v3 - 72);
              sub_23B020598(v34, v0 + 21672);

              v135 = *(_BYTE **)(v0 + 400);
            }
          }
        }
        v334 = *(_QWORD *)(v0 + 432);
      }
    }
  }
  if (!*(_DWORD *)(v0 + 420))
  {
    v391 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
    sub_23AC37B08(*(_BYTE *)(v169 + *(int *)(v391 + 48)), 0);
  }
  v392 = sub_23AA9F490(v334);
  sub_23AA724E8(v0 + 8440, v0 + 4960, (uint64_t *)&unk_2569E63E0);
  if (!v392)
    goto LABEL_167;
  sub_23AA724E8(v0 + 4960, v0 + 3952, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 4960, v0 + 4456, (uint64_t *)&unk_2569E63E0);
  if (sub_23AAFC2A4(v0 + 4456) != 1)
  {
    v393 = *(_QWORD *)(v0 + 3952);
    v394 = *(_BYTE *)(v0 + 3976);
    v395 = *(_WORD *)(v0 + 4048);
    v396 = *(_BYTE *)(v0 + 4050);
    v397 = *(_BYTE *)(v0 + 4072);
    v398 = *(_QWORD *)(v0 + 4144);
    v399 = *(_OWORD *)(v0 + 4360);
    *(_OWORD *)(v0 + 2856) = *(_OWORD *)(v0 + 4344);
    *(_OWORD *)(v0 + 2872) = v399;
    *(_OWORD *)(v0 + 2888) = *(_OWORD *)(v0 + 4376);
    v400 = *(_OWORD *)(v0 + 4296);
    *(_OWORD *)(v0 + 2792) = *(_OWORD *)(v0 + 4280);
    *(_OWORD *)(v0 + 2808) = v400;
    v401 = *(_OWORD *)(v0 + 4328);
    *(_OWORD *)(v0 + 2824) = *(_OWORD *)(v0 + 4312);
    *(_OWORD *)(v0 + 2840) = v401;
    v402 = *(_OWORD *)(v0 + 4232);
    *(_OWORD *)(v0 + 2728) = *(_OWORD *)(v0 + 4216);
    *(_OWORD *)(v0 + 2744) = v402;
    v403 = *(_OWORD *)(v0 + 4264);
    *(_OWORD *)(v0 + 2760) = *(_OWORD *)(v0 + 4248);
    *(_OWORD *)(v0 + 2776) = v403;
    *(_OWORD *)(v0 + 2712) = *(_OWORD *)(v0 + 4200);
    *(_OWORD *)(v0 + 2664) = *(_OWORD *)(v0 + 4152);
    *(_OWORD *)(v0 + 2680) = *(_OWORD *)(v0 + 4168);
    *(_OWORD *)(v0 + 2696) = *(_OWORD *)(v0 + 4184);
    v404 = *(_BYTE *)(v0 + 4392);
    v405 = *(_QWORD *)(v0 + 4400);
    v406 = *(_QWORD *)(v0 + 4408);
    v407 = *(_BYTE *)(v0 + 4432);
    v408 = *(_QWORD *)(v0 + 4440);
    *(_QWORD *)(v0 + 2464) = v393;
    v409 = *(_OWORD *)(v0 + 3960);
    *(_OWORD *)(v0 + 432) = v409;
    *(_OWORD *)(v0 + 2472) = v409;
    *(_BYTE *)(v0 + 2488) = v394;
    v410 = *(_OWORD *)(v0 + 4000);
    *(_OWORD *)(v0 + 2496) = *(_OWORD *)(v0 + 3984);
    *(_OWORD *)(v0 + 2512) = v410;
    v411 = *(_OWORD *)(v0 + 4032);
    *(_OWORD *)(v0 + 2528) = *(_OWORD *)(v0 + 4016);
    *(_OWORD *)(v0 + 2544) = v411;
    *(_WORD *)(v0 + 2560) = v395;
    *(_BYTE *)(v0 + 2562) = v396;
    *(_OWORD *)(v0 + 2568) = *(_OWORD *)(v0 + 4056);
    *(_BYTE *)(v0 + 2584) = v397;
    v412 = *(_OWORD *)(v0 + 4096);
    *(_OWORD *)(v0 + 2592) = *(_OWORD *)(v0 + 4080);
    *(_OWORD *)(v0 + 2608) = v412;
    v413 = *(_OWORD *)(v0 + 4128);
    *(_OWORD *)(v0 + 2624) = *(_OWORD *)(v0 + 4112);
    *(_OWORD *)(v0 + 2640) = v413;
    *(_QWORD *)(v0 + 2656) = v398;
    *(_BYTE *)(v0 + 2904) = v404;
    *(_QWORD *)(v0 + 2912) = v405;
    *(_QWORD *)(v0 + 2920) = v406;
    *(_OWORD *)(v0 + 2928) = *(_OWORD *)(v0 + 4416);
    *(_BYTE *)(v0 + 2944) = v407;
    *(_QWORD *)(v0 + 2952) = v408;
    sub_23AA724E8(v0 + 4960, v0 + 2960, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8(v0 + 4960, v0 + 3456, (uint64_t *)&unk_2569E63E0);
    sub_23AEB34A4(v0 + 3456);
    sub_23AEB34A4(v0 + 2960);
    sub_23AAFCF50(v0 + 2464);
    v414 = sub_23AA9F490(*(_QWORD *)(v0 + 432));
    sub_23ADF2D34(v0 + 4960, (voidsub_23AEB1930);
    if (!v414)
    {
LABEL_167:
      v418 = *(id *)v169;
      if ((sub_23AAA0E10() & 1) != 0 || (sub_23AAA0D58() & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
        v419 = swift_allocObject();
        v420 = sub_23B1A1F64(v419, 3);
        *(_OWORD *)v421 = xmmword_23B1D7770;
        *(_QWORD *)(v421 + 16) = 256;
        v422 = nullsub_1(v420);
        v423 = sub_23AFD7BC8(v422);
        swift_bridgeObjectRelease();
        v424 = (void *)sub_23AFA7CC0(v423, v334);
        if (!sub_23AA9F490((uint64_t)v424))
        {
          *(_QWORD *)(v0 + 18736) = v418;
          *(_QWORD *)(v0 + 18744) = 0;
          *(_QWORD *)(v0 + 18752) = v424;
          v426 = *(void **)(v0 + 256);
          v425 = *(_QWORD *)(v0 + 264);
          *(_QWORD *)(v0 + 18760) = v426;
          *(_QWORD *)(v0 + 18768) = v425;
          *(_OWORD *)(v0 + 18776) = 0u;
          *(_OWORD *)(v0 + 18792) = 0u;
          *(_OWORD *)(v0 + 18808) = 0u;
          *(_OWORD *)(v0 + 18824) = 0u;
          *(_OWORD *)(v0 + 18835) = 0u;
          *(_BYTE *)(v0 + 18851) = 9;
          v427 = v418;
          sub_23B020598(v34, v0 + 18736);
          sub_23AB7C6B4(v418, 0, 0);
          sub_23AEAD8A8(v424, v426, v425, 0, 0, 0, 0, 0, 0, 0);
        }
        v417 = *(_QWORD *)(v0 + 448);
        goto LABEL_172;
      }
      *(_QWORD *)(v0 + 4952) = v334;
      if (!(v335 | !sub_23AA9F3D0(0x200000000000, v334)))
        sub_23AAB51D0(0x200000000000);
      if (sub_23AA9F3D0(16, v334) && (sub_23AFFA4F4() & 1) != 0)
      {
        v452 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if (sub_23AFA74BC(*(_BYTE *)(v169 + *(int *)(v452 + 48)))
          && ((*(uint64_t (**)(void))(**(_QWORD **)(v0 + 424) + 520))() & 1) != 0)
        {
          v453 = v418;
          v454 = sub_23ADA8168(v453);
          sub_23AE9EFA8((uint64_t)v453, v454, v455, 2, &qword_2569E62D8);
          (*(void (**)(void))(*(_QWORD *)v34 + 144))();
          swift_release();
        }
        if (v335)
        {
          sub_23AA724E8(v0 + 4960, v0 + 4456, (uint64_t *)&unk_2569E63E0);
          if (sub_23AAFC2A4(v0 + 4456) == 1
            || (sub_23AA724E8(v0 + 4960, v0 + 3952, (uint64_t *)&unk_2569E63E0),
                memcpy((void *)(v0 + 21176), (const void *)(v0 + 3952), 0x1F0uLL),
                !sub_23B002AF8()))
          {
            v34 = *(_QWORD *)(v3 - 72);
          }
          else
          {
            v456 = *(_QWORD *)(v0 + 320);
            v457 = *(void **)v456;
            *(_QWORD *)(v0 + 3456) = *(_QWORD *)v456;
            *(_WORD *)(v0 + 3464) = 0;
            v458 = *(_QWORD *)(v456 + 16);
            v459 = *(_QWORD *)(v456 + 24);
            v461 = *(_QWORD *)(v456 + 32);
            v460 = *(_QWORD *)(v456 + 40);
            *(_QWORD *)(v0 + 360) = v460;
            v462 = *(_QWORD *)(v456 + 48);
            v463 = *(_QWORD *)(v456 + 72);
            *(_QWORD *)(v0 + 432) = v463;
            *(_QWORD *)(v0 + 3472) = v458;
            *(_QWORD *)(v0 + 3480) = v459;
            *(_QWORD *)(v0 + 3488) = v461;
            *(_QWORD *)(v0 + 3496) = v460;
            v464 = *(_OWORD *)(v456 + 56);
            *(_OWORD *)(v0 + 384) = v464;
            *(_OWORD *)(v0 + 3512) = v464;
            *(_QWORD *)(v0 + 3504) = v462;
            *(_QWORD *)(v0 + 3528) = v463;
            *(_WORD *)(v0 + 3536) = 1;
            *(_BYTE *)(v0 + 3538) = 7;
            *(_BYTE *)(v0 + 3571) = 9;
            sub_23AA724E8(v0 + 3456, v0 + 21056, &qword_2569E64D8);
            v465 = v457;
            sub_23AAAE668(v458, v459);
            swift_bridgeObjectRetain();
            sub_23AAAE668(*(_QWORD *)(v0 + 360), v462);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v34 = *(_QWORD *)(v3 - 72);
            sub_23B020598(v34, v0 + 21056);
            sub_23AEB3270(v0 + 21056, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
          }
        }
        sub_23AAB51D0(8);
        v135 = *(_BYTE **)(v0 + 400);
        v169 = *(_QWORD *)(v0 + 320);
      }
      if (v335)
      {
        v614 = *(_QWORD *)(v169 + 32);
        if (v614)
        {
          if ((sub_23B1A67E0(*(_QWORD *)(*(_QWORD *)(v0 + 328) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 328) + 24), *(_QWORD *)(v169 + 32)) & 1) != 0)
          {
            *(_QWORD *)(v0 + 432) = v334;
            *(_DWORD *)(v0 + 384) = (_DWORD)v230;
            sub_23AA724E8(v0 + 4960, v0 + 3952, (uint64_t *)&unk_2569E63E0);
            sub_23AA724E8(v0 + 4960, v0 + 4456, (uint64_t *)&unk_2569E63E0);
            if (sub_23AAFC2A4(v0 + 4456) != 1)
            {
              v615 = *(_OWORD *)(v0 + 4112);
              v616 = *(_OWORD *)(v0 + 4128);
              v617 = v616;
              *(_OWORD *)(v0 + 3120) = v615;
              *(_OWORD *)(v0 + 3136) = v616;
              v618 = *(_OWORD *)(v0 + 4048);
              v619 = *(_OWORD *)(v0 + 4064);
              v620 = v619;
              *(_OWORD *)(v0 + 3056) = v618;
              *(_OWORD *)(v0 + 3072) = v619;
              v621 = *(_OWORD *)(v0 + 4096);
              v622 = *(_OWORD *)(v0 + 4080);
              v623 = v622;
              *(_OWORD *)(v0 + 3104) = v621;
              *(_OWORD *)(v0 + 3088) = v622;
              v624 = *(_OWORD *)(v0 + 3984);
              v625 = *(_OWORD *)(v0 + 4000);
              v626 = v625;
              *(_OWORD *)(v0 + 2992) = v624;
              *(_OWORD *)(v0 + 3008) = v625;
              v627 = *(_OWORD *)(v0 + 4032);
              v628 = *(_OWORD *)(v0 + 4016);
              v629 = v628;
              *(_OWORD *)(v0 + 3040) = v627;
              *(_OWORD *)(v0 + 3024) = v628;
              v630 = *(_OWORD *)(v0 + 3968);
              v631 = *(_OWORD *)(v0 + 3952);
              v632 = v631;
              *(_OWORD *)(v0 + 2976) = v630;
              *(_OWORD *)(v0 + 2960) = v631;
              v633 = *(_OWORD *)(v0 + 4360);
              *(_OWORD *)(v0 + 3848) = *(_OWORD *)(v0 + 4344);
              *(_OWORD *)(v0 + 3864) = v633;
              *(_OWORD *)(v0 + 3880) = *(_OWORD *)(v0 + 4376);
              v634 = *(_OWORD *)(v0 + 4296);
              *(_OWORD *)(v0 + 3784) = *(_OWORD *)(v0 + 4280);
              *(_OWORD *)(v0 + 3800) = v634;
              v635 = *(_OWORD *)(v0 + 4328);
              *(_OWORD *)(v0 + 3816) = *(_OWORD *)(v0 + 4312);
              *(_OWORD *)(v0 + 3832) = v635;
              v636 = *(_OWORD *)(v0 + 4232);
              *(_OWORD *)(v0 + 3720) = *(_OWORD *)(v0 + 4216);
              *(_OWORD *)(v0 + 3736) = v636;
              v637 = *(_OWORD *)(v0 + 4264);
              *(_OWORD *)(v0 + 3752) = *(_OWORD *)(v0 + 4248);
              *(_OWORD *)(v0 + 3768) = v637;
              *(_OWORD *)(v0 + 3704) = *(_OWORD *)(v0 + 4200);
              *(_OWORD *)(v0 + 3656) = *(_OWORD *)(v0 + 4152);
              *(_OWORD *)(v0 + 3672) = *(_OWORD *)(v0 + 4168);
              *(_OWORD *)(v0 + 3688) = *(_OWORD *)(v0 + 4184);
              *(_OWORD *)(v0 + 3616) = v615;
              *(_OWORD *)(v0 + 3632) = v617;
              *(_OWORD *)(v0 + 3552) = v618;
              *(_OWORD *)(v0 + 3568) = v620;
              *(_OWORD *)(v0 + 3600) = v621;
              *(_OWORD *)(v0 + 3584) = v623;
              *(_OWORD *)(v0 + 3488) = v624;
              *(_OWORD *)(v0 + 3504) = v626;
              *(_OWORD *)(v0 + 3536) = v627;
              *(_OWORD *)(v0 + 3520) = v629;
              v638 = *(_QWORD *)(v0 + 4144);
              *(_QWORD *)(v0 + 3152) = v638;
              v639 = *(_BYTE *)(v0 + 4392);
              v640 = *(_QWORD *)(v0 + 4400);
              v641 = *(_QWORD *)(v0 + 4408);
              v642 = *(_BYTE *)(v0 + 4432);
              v643 = *(_QWORD *)(v0 + 4440);
              *(_QWORD *)(v0 + 3648) = v638;
              *(_OWORD *)(v0 + 3472) = v630;
              *(_OWORD *)(v0 + 3456) = v632;
              *(_BYTE *)(v0 + 3896) = v639;
              *(_QWORD *)(v0 + 3904) = v640;
              *(_QWORD *)(v0 + 3912) = v641;
              *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v0 + 4416);
              *(_BYTE *)(v0 + 3936) = v642;
              *(_QWORD *)(v0 + 3944) = v643;
              sub_23ADF2D34(v0 + 4960, (voidsub_23AEB367C);
              sub_23AAFC2BC(v0 + 2960);
              sub_23AAFCF50(v0 + 3456);
              v644 = *(_QWORD *)(v0 + 2992);
              v645 = *(_QWORD *)(v0 + 3000);
              v646 = *(_QWORD *)(v0 + 3008);
              v647 = *(_QWORD *)(v0 + 3016);
              v648 = *(_QWORD *)(v0 + 3024);
              *(_QWORD *)(v0 + 360) = v645;
              sub_23AAAE5C0(v644, v645, v646, v647, v648);
              sub_23AAFC540(v0 + 2960);
              if (v646 != 1)
              {
                v649 = *(_QWORD *)(v0 + 360);
                sub_23AAAE668(v644, v649);
                sub_23AAAE53C(v644, v649);
                swift_bridgeObjectRelease();
                sub_23AAAE53C(v647, v648);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((sub_23B1A67E0(v644, v649, v614) & 1) != 0)
                {
                  v650 = *(_QWORD *)(v0 + 320);
                  v651 = *(void **)v650;
                  *(_QWORD *)(v0 + 2464) = *(_QWORD *)v650;
                  *(_WORD *)(v0 + 2472) = 0;
                  v652 = *(_QWORD *)(v650 + 16);
                  v653 = *(_QWORD *)(v650 + 24);
                  v655 = *(_QWORD *)(v650 + 40);
                  v654 = *(_QWORD *)(v650 + 48);
                  v656 = *(_QWORD *)(v650 + 72);
                  *(_QWORD *)(v0 + 2480) = v652;
                  *(_QWORD *)(v0 + 2488) = v653;
                  *(_QWORD *)(v0 + 2496) = v614;
                  *(_QWORD *)(v0 + 2504) = v655;
                  v657 = *(_OWORD *)(v650 + 56);
                  *(_OWORD *)(v0 + 336) = v657;
                  *(_OWORD *)(v0 + 2520) = v657;
                  *(_QWORD *)(v0 + 2512) = v654;
                  *(_QWORD *)(v0 + 2536) = v656;
                  *(_WORD *)(v0 + 2544) = 1;
                  *(_BYTE *)(v0 + 2546) = 7;
                  *(_BYTE *)(v0 + 2579) = 9;
                  sub_23AA724E8(v0 + 2464, v0 + 20936, &qword_2569E64D8);
                  v658 = v651;
                  sub_23AAAE668(v652, v653);
                  swift_bridgeObjectRetain();
                  sub_23AAAE668(v655, v654);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_23B020598(*(_QWORD *)(v3 - 72), v0 + 20936);
                  sub_23AEB3270(v0 + 20936, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
                }
                sub_23AAAE53C(v644, *(_QWORD *)(v0 + 360));
              }
            }
            sub_23AAB51D0(8);
            v34 = *(_QWORD *)(v3 - 72);
            v135 = *(_BYTE **)(v0 + 400);
            v169 = *(_QWORD *)(v0 + 320);
            LODWORD(v230) = *(_DWORD *)(v0 + 384);
            v334 = *(_QWORD *)(v0 + 432);
          }
        }
      }
      v659 = sub_23AA9F3D0(0x20000000000, v334);
      v417 = *(_QWORD *)(v0 + 448);
      if (v659)
      {
        v660 = *(_QWORD *)(v169 + 56);
        if (v660)
        {
          if ((sub_23B1A67E0(*(_QWORD *)(*(_QWORD *)(v0 + 328) + 40), *(_QWORD *)(*(_QWORD *)(v0 + 328) + 48), *(_QWORD *)(v169 + 56)) & 1) != 0)
          {
            *(_QWORD *)(v0 + 432) = v334;
            *(_DWORD *)(v0 + 384) = (_DWORD)v230;
            sub_23AA724E8(v0 + 4960, v0 + 3952, (uint64_t *)&unk_2569E63E0);
            sub_23AA724E8(v0 + 4960, v0 + 4456, (uint64_t *)&unk_2569E63E0);
            if (sub_23AAFC2A4(v0 + 4456) != 1)
            {
              v661 = *(_OWORD *)(v0 + 4112);
              v662 = *(_OWORD *)(v0 + 4128);
              v663 = v662;
              *(_OWORD *)(v0 + 3120) = v661;
              *(_OWORD *)(v0 + 3136) = v662;
              v664 = *(_OWORD *)(v0 + 4048);
              v665 = *(_OWORD *)(v0 + 4064);
              v666 = v665;
              *(_OWORD *)(v0 + 3056) = v664;
              *(_OWORD *)(v0 + 3072) = v665;
              v667 = *(_OWORD *)(v0 + 4096);
              v668 = *(_OWORD *)(v0 + 4080);
              v669 = v668;
              *(_OWORD *)(v0 + 3104) = v667;
              *(_OWORD *)(v0 + 3088) = v668;
              v670 = *(_OWORD *)(v0 + 3984);
              v671 = *(_OWORD *)(v0 + 4000);
              v672 = v671;
              *(_OWORD *)(v0 + 2992) = v670;
              *(_OWORD *)(v0 + 3008) = v671;
              v673 = *(_OWORD *)(v0 + 4032);
              v674 = *(_OWORD *)(v0 + 4016);
              v675 = v674;
              *(_OWORD *)(v0 + 3040) = v673;
              *(_OWORD *)(v0 + 3024) = v674;
              v676 = *(_OWORD *)(v0 + 3968);
              v677 = *(_OWORD *)(v0 + 3952);
              v678 = v677;
              *(_OWORD *)(v0 + 2976) = v676;
              *(_OWORD *)(v0 + 2960) = v677;
              v679 = *(_OWORD *)(v0 + 4360);
              *(_OWORD *)(v0 + 3848) = *(_OWORD *)(v0 + 4344);
              *(_OWORD *)(v0 + 3864) = v679;
              *(_OWORD *)(v0 + 3880) = *(_OWORD *)(v0 + 4376);
              v680 = *(_OWORD *)(v0 + 4296);
              *(_OWORD *)(v0 + 3784) = *(_OWORD *)(v0 + 4280);
              *(_OWORD *)(v0 + 3800) = v680;
              v681 = *(_OWORD *)(v0 + 4328);
              *(_OWORD *)(v0 + 3816) = *(_OWORD *)(v0 + 4312);
              *(_OWORD *)(v0 + 3832) = v681;
              v682 = *(_OWORD *)(v0 + 4232);
              *(_OWORD *)(v0 + 3720) = *(_OWORD *)(v0 + 4216);
              *(_OWORD *)(v0 + 3736) = v682;
              v683 = *(_OWORD *)(v0 + 4264);
              *(_OWORD *)(v0 + 3752) = *(_OWORD *)(v0 + 4248);
              *(_OWORD *)(v0 + 3768) = v683;
              *(_OWORD *)(v0 + 3704) = *(_OWORD *)(v0 + 4200);
              *(_OWORD *)(v0 + 3656) = *(_OWORD *)(v0 + 4152);
              *(_OWORD *)(v0 + 3672) = *(_OWORD *)(v0 + 4168);
              *(_OWORD *)(v0 + 3688) = *(_OWORD *)(v0 + 4184);
              *(_OWORD *)(v0 + 3616) = v661;
              *(_OWORD *)(v0 + 3632) = v663;
              *(_OWORD *)(v0 + 3552) = v664;
              *(_OWORD *)(v0 + 3568) = v666;
              *(_OWORD *)(v0 + 3600) = v667;
              *(_OWORD *)(v0 + 3584) = v669;
              *(_OWORD *)(v0 + 3488) = v670;
              *(_OWORD *)(v0 + 3504) = v672;
              *(_OWORD *)(v0 + 3536) = v673;
              *(_OWORD *)(v0 + 3520) = v675;
              v684 = *(_QWORD *)(v0 + 4144);
              *(_QWORD *)(v0 + 3152) = v684;
              v685 = *(_BYTE *)(v0 + 4392);
              v686 = *(_QWORD *)(v0 + 4400);
              v687 = *(_QWORD *)(v0 + 4408);
              v688 = *(_BYTE *)(v0 + 4432);
              v689 = *(_QWORD *)(v0 + 4440);
              *(_QWORD *)(v0 + 3648) = v684;
              *(_OWORD *)(v0 + 3472) = v676;
              *(_OWORD *)(v0 + 3456) = v678;
              *(_BYTE *)(v0 + 3896) = v685;
              *(_QWORD *)(v0 + 3904) = v686;
              *(_QWORD *)(v0 + 3912) = v687;
              *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v0 + 4416);
              *(_BYTE *)(v0 + 3936) = v688;
              *(_QWORD *)(v0 + 3944) = v689;
              sub_23ADF2D34(v0 + 4960, (voidsub_23AEB367C);
              sub_23AAFC2BC(v0 + 2960);
              sub_23AAFCF50(v0 + 3456);
              v690 = *(_QWORD *)(v0 + 2992);
              v691 = *(_QWORD *)(v0 + 3000);
              v692 = *(_QWORD *)(v0 + 3008);
              v693 = *(_QWORD *)(v0 + 3016);
              v694 = *(_QWORD *)(v0 + 3024);
              *(_QWORD *)(v0 + 360) = v694;
              sub_23AAAE5C0(v690, v691, v692, v693, v694);
              sub_23AAFC540(v0 + 2960);
              if (v692 != 1)
              {
                v695 = *(_QWORD *)(v0 + 360);
                sub_23AAAE668(v693, v695);
                sub_23AAAE53C(v690, v691);
                swift_bridgeObjectRelease();
                sub_23AAAE53C(v693, v695);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((sub_23B1A67E0(v693, v695, v660) & 1) != 0)
                {
                  v696 = *(_QWORD *)(v0 + 320);
                  v697 = *(void **)v696;
                  *(_QWORD *)(v0 + 2464) = *(_QWORD *)v696;
                  *(_WORD *)(v0 + 2472) = 0;
                  v698 = *(_QWORD *)(v696 + 16);
                  v699 = *(_QWORD *)(v696 + 24);
                  v701 = *(_QWORD *)(v696 + 32);
                  v700 = *(_QWORD *)(v696 + 40);
                  v702 = *(_QWORD *)(v696 + 48);
                  v703 = *(_QWORD *)(v696 + 64);
                  v704 = *(_QWORD *)(v696 + 72);
                  *(_QWORD *)(v0 + 336) = v704;
                  *(_QWORD *)(v0 + 2480) = v698;
                  *(_QWORD *)(v0 + 2488) = v699;
                  *(_QWORD *)(v0 + 2496) = v701;
                  *(_QWORD *)(v0 + 2504) = v700;
                  *(_QWORD *)(v0 + 2512) = v702;
                  *(_QWORD *)(v0 + 2520) = v660;
                  *(_QWORD *)(v0 + 2528) = v703;
                  *(_QWORD *)(v0 + 2536) = v704;
                  *(_WORD *)(v0 + 2544) = 256;
                  *(_BYTE *)(v0 + 2546) = 7;
                  *(_BYTE *)(v0 + 2579) = 9;
                  sub_23AA724E8(v0 + 2464, v0 + 20816, &qword_2569E64D8);
                  v705 = v697;
                  sub_23AAAE668(v698, v699);
                  swift_bridgeObjectRetain();
                  sub_23AAAE668(v700, v702);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_23B020598(*(_QWORD *)(v3 - 72), v0 + 20816);
                  sub_23AEB3270(v0 + 20816, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
                }
                sub_23AAAE53C(v693, *(_QWORD *)(v0 + 360));
              }
            }
            sub_23AAB51D0(0x20000000000);
            v417 = *(_QWORD *)(v0 + 448);
            v34 = *(_QWORD *)(v3 - 72);
            v135 = *(_BYTE **)(v0 + 400);
            v169 = *(_QWORD *)(v0 + 320);
            LODWORD(v230) = *(_DWORD *)(v0 + 384);
            v334 = *(_QWORD *)(v0 + 432);
          }
        }
      }
      v706 = sub_23AFA98F0(0x160000000010000, v334);
      if (sub_23AC37674(v706, 0x20000000000))
      {
        sub_23AA724E8(v0 + 4960, v0 + 4456, (uint64_t *)&unk_2569E63E0);
        if (sub_23AAFC2A4(v0 + 4456) != 1)
        {
          sub_23AA724E8(v0 + 4960, v0 + 3952, (uint64_t *)&unk_2569E63E0);
          memcpy((void *)(v0 + 20320), (const void *)(v0 + 3952), 0x1F0uLL);
          if (sub_23B002AF8())
          {
            if ((*(_QWORD *)(v0 + 3968) & 0xFE9FFFFFFFFEFFFFLL) != 0
              || sub_23B12B0D4(*(_QWORD *)(v0 + 4056), *(_QWORD *)(v0 + 4064), *(_BYTE *)(v0 + 4072))
              || sub_23B12B0D4(*(_QWORD *)(v0 + 4296), *(_QWORD *)(v0 + 4304), *(_BYTE *)(v0 + 4312)))
            {
              v417 = *(_QWORD *)(v0 + 448);
              v34 = *(_QWORD *)(v3 - 72);
              v135 = *(_BYTE **)(v0 + 400);
              v169 = *(_QWORD *)(v0 + 320);
            }
            else
            {
              v809 = *(_QWORD *)(v0 + 320);
              v810 = *(void **)v809;
              *(_QWORD *)(v0 + 3456) = *(_QWORD *)v809;
              *(_WORD *)(v0 + 3464) = 0;
              v811 = *(_QWORD *)(v809 + 16);
              v812 = *(_QWORD *)(v809 + 24);
              v814 = *(_QWORD *)(v809 + 32);
              v813 = *(_QWORD *)(v809 + 40);
              *(_QWORD *)(v0 + 360) = v813;
              v815 = *(_QWORD *)(v809 + 48);
              v816 = *(_QWORD *)(v809 + 72);
              *(_QWORD *)(v0 + 432) = v816;
              *(_QWORD *)(v0 + 3472) = v811;
              *(_QWORD *)(v0 + 3480) = v812;
              *(_QWORD *)(v0 + 3488) = v814;
              *(_QWORD *)(v0 + 3496) = v813;
              v817 = *(_OWORD *)(v809 + 56);
              *(_OWORD *)(v0 + 384) = v817;
              *(_OWORD *)(v0 + 3512) = v817;
              *(_QWORD *)(v0 + 3504) = v815;
              *(_QWORD *)(v0 + 3528) = v816;
              *(_WORD *)(v0 + 3536) = 256;
              *(_BYTE *)(v0 + 3538) = 7;
              *(_BYTE *)(v0 + 3571) = 9;
              sub_23AA724E8(v0 + 3456, v0 + 20200, &qword_2569E64D8);
              sub_23ADF2D34(v0 + 4960, (voidsub_23AEB367C);
              v818 = v810;
              v169 = v809;
              sub_23AAAE668(v811, v812);
              swift_bridgeObjectRetain();
              sub_23AAAE668(*(_QWORD *)(v0 + 360), v815);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v34 = *(_QWORD *)(v3 - 72);
              sub_23B020598(v34, v0 + 20200);
              sub_23AEB3270(v0 + 20200, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
              sub_23AAB51D0(0x20000000000);
              sub_23ADF2D34(v0 + 4960, (voidsub_23AEB1930);
              v417 = *(_QWORD *)(v0 + 448);
              v135 = *(_BYTE **)(v0 + 400);
            }
          }
        }
      }
      if (sub_23AE89CFC((uint64_t)v135, v169, v334, (uint64_t *)&unk_2542E4760))
      {
        sub_23AAB51D0(0x10000);
        sub_23AA724E8(v0 + 4960, v0 + 4456, (uint64_t *)&unk_2569E63E0);
        if (sub_23AAFC2A4(v0 + 4456) != 1)
        {
          *(_QWORD *)(v0 + 432) = v334;
          sub_23AA724E8(v0 + 4960, v0 + 3952, (uint64_t *)&unk_2569E63E0);
          memcpy((void *)(v0 + 19704), (const void *)(v0 + 3952), 0x1F0uLL);
          if (sub_23B002AF8())
          {
            v707 = *(id *)v169;
            *(_OWORD *)(v0 + 19592) = xmmword_23B1DAA00;
            *(_QWORD *)(v0 + 19584) = v707;
            v709 = *(void **)(v0 + 256);
            v708 = *(_QWORD *)(v0 + 264);
            *(_QWORD *)(v0 + 19608) = v709;
            *(_QWORD *)(v0 + 19616) = v708;
            *(_OWORD *)(v0 + 19624) = 0u;
            *(_OWORD *)(v0 + 19640) = 0u;
            *(_OWORD *)(v0 + 19656) = 0u;
            *(_OWORD *)(v0 + 19672) = 0u;
            *(_OWORD *)(v0 + 19683) = 0u;
            *(_BYTE *)(v0 + 19699) = 8;
            v710 = v707;
            sub_23B020598(v34, v0 + 19584);
            sub_23AB7C6B4(v707, 0, 0);
            sub_23AEAD994((void *)0x10000, v709, v708, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
          }
          v334 = *(_QWORD *)(v0 + 432);
        }
      }
      v711 = *(_QWORD *)(v0 + 4952);
      if (sub_23AA9F3D0(0x2000000, v711))
      {
        sub_23AAA0ECC((_QWORD *)(v0 + 4456), 0x100000D000000);
        v711 = *(_QWORD *)(v0 + 4952);
      }
      v712 = sub_23AFA7B90(v711);
      *(_QWORD *)(v0 + 4952) = v712;
      v713 = sub_23AFA98F0(0x100000000000, v712);
      if (!sub_23AA9F490(v713)
        || sub_23AA9F3D0(0x100000000000, v712)
        && *(_BYTE *)(v169 + *(int *)(*(_QWORD *)(v0 + 376) + 48) + *(int *)(*(_QWORD *)(v0 + 216) + 60)) != 1
        || sub_23AA9F3D0(0x800000, v334))
      {
        v714 = *(id *)v169;
        v715 = (void *)*(unsigned __int8 *)(v169
                                          + *(int *)(*(_QWORD *)(v0 + 376) + 48)
                                          + *(int *)(*(_QWORD *)(v0 + 216) + 64));
        *(_QWORD *)(v0 + 19464) = *(_QWORD *)v169;
        *(_QWORD *)(v0 + 19472) = 0;
        *(_OWORD *)(v0 + 19488) = 0u;
        *(_OWORD *)(v0 + 19504) = 0u;
        *(_OWORD *)(v0 + 19520) = 0u;
        *(_QWORD *)(v0 + 19480) = v715;
        *(_QWORD *)(v0 + 19536) = 0;
        *(_QWORD *)(v0 + 19544) = 327680;
        *(_QWORD *)(v0 + 19552) = 0;
        *(_QWORD *)(v0 + 19568) = 0;
        *(_QWORD *)(v0 + 19560) = 0;
        *(_DWORD *)(v0 + 19575) = 0;
        *(_BYTE *)(v0 + 19579) = 9;
        v716 = v714;
        sub_23B020598(v34, v0 + 19464);
        sub_23AB7C6B4(v714, 0, 0);
        sub_23AEAD8A8(v715, 0, 0, 0, 0, 0, 0, 0, 0, 5);
        sub_23AA724E8(v0 + 4960, v0 + 3952, (uint64_t *)&unk_2569E63E0);
        sub_23AA724E8(v0 + 4960, v0 + 4456, (uint64_t *)&unk_2569E63E0);
        v717 = 0;
        if (sub_23AAFC2A4(v0 + 4456) != 1)
        {
          v718 = *(_QWORD *)(v0 + 3952);
          v719 = *(_BYTE *)(v0 + 3976);
          v720 = *(_WORD *)(v0 + 4048);
          v721 = *(_BYTE *)(v0 + 4050);
          v722 = *(_BYTE *)(v0 + 4072);
          v723 = *(_QWORD *)(v0 + 4144);
          v724 = *(_OWORD *)(v0 + 4360);
          *(_OWORD *)(v0 + 3352) = *(_OWORD *)(v0 + 4344);
          *(_OWORD *)(v0 + 3368) = v724;
          *(_OWORD *)(v0 + 3384) = *(_OWORD *)(v0 + 4376);
          v725 = *(_OWORD *)(v0 + 4296);
          *(_OWORD *)(v0 + 3288) = *(_OWORD *)(v0 + 4280);
          *(_OWORD *)(v0 + 3304) = v725;
          v726 = *(_OWORD *)(v0 + 4328);
          *(_OWORD *)(v0 + 3320) = *(_OWORD *)(v0 + 4312);
          *(_OWORD *)(v0 + 3336) = v726;
          v727 = *(_OWORD *)(v0 + 4232);
          *(_OWORD *)(v0 + 3224) = *(_OWORD *)(v0 + 4216);
          *(_OWORD *)(v0 + 3240) = v727;
          v728 = *(_OWORD *)(v0 + 4264);
          *(_OWORD *)(v0 + 3256) = *(_OWORD *)(v0 + 4248);
          *(_OWORD *)(v0 + 3272) = v728;
          *(_OWORD *)(v0 + 3208) = *(_OWORD *)(v0 + 4200);
          *(_OWORD *)(v0 + 3160) = *(_OWORD *)(v0 + 4152);
          *(_OWORD *)(v0 + 3176) = *(_OWORD *)(v0 + 4168);
          *(_OWORD *)(v0 + 3192) = *(_OWORD *)(v0 + 4184);
          v729 = *(_BYTE *)(v0 + 4392);
          v730 = *(_QWORD *)(v0 + 4400);
          v731 = *(_QWORD *)(v0 + 4408);
          v732 = *(_BYTE *)(v0 + 4432);
          v733 = *(_QWORD *)(v0 + 4440);
          *(_QWORD *)(v0 + 2960) = v718;
          v734 = *(_OWORD *)(v0 + 3960);
          *(_OWORD *)(v0 + 432) = v734;
          *(_OWORD *)(v0 + 2968) = v734;
          *(_BYTE *)(v0 + 2984) = v719;
          v735 = *(_OWORD *)(v0 + 4000);
          *(_OWORD *)(v0 + 2992) = *(_OWORD *)(v0 + 3984);
          *(_OWORD *)(v0 + 3008) = v735;
          v736 = *(_OWORD *)(v0 + 4032);
          *(_OWORD *)(v0 + 3024) = *(_OWORD *)(v0 + 4016);
          *(_OWORD *)(v0 + 3040) = v736;
          *(_WORD *)(v0 + 3056) = v720;
          *(_BYTE *)(v0 + 3058) = v721;
          *(_OWORD *)(v0 + 3064) = *(_OWORD *)(v0 + 4056);
          *(_BYTE *)(v0 + 3080) = v722;
          v737 = *(_OWORD *)(v0 + 4096);
          *(_OWORD *)(v0 + 3088) = *(_OWORD *)(v0 + 4080);
          *(_OWORD *)(v0 + 3104) = v737;
          v738 = *(_OWORD *)(v0 + 4128);
          *(_OWORD *)(v0 + 3120) = *(_OWORD *)(v0 + 4112);
          *(_OWORD *)(v0 + 3136) = v738;
          *(_QWORD *)(v0 + 3152) = v723;
          *(_BYTE *)(v0 + 3400) = v729;
          *(_QWORD *)(v0 + 3408) = v730;
          *(_QWORD *)(v0 + 3416) = v731;
          *(_OWORD *)(v0 + 3424) = *(_OWORD *)(v0 + 4416);
          *(_BYTE *)(v0 + 3440) = v732;
          *(_QWORD *)(v0 + 3448) = v733;
          sub_23AA724E8(v0 + 4960, v0 + 3456, (uint64_t *)&unk_2569E63E0);
          sub_23AEB34A4(v0 + 3456);
          sub_23AAFCF50(v0 + 2960);
          v717 = sub_23AA9F3C4(16, *(_QWORD *)(v0 + 432));
        }
        v739 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if (sub_23AC37B08(*(_BYTE *)(v169 + *(int *)(v739 + 48)), 1) && v717 && (v715 & 1) == 0)
        {
          v802 = (id)*sub_23AFA98F4();
          v803 = sub_23AC37680();

          if ((v803 & 1) == 0)
          {
            v804 = (id)*sub_23AFA9934();
            v805 = sub_23AC37680();

            if ((v805 & 1) == 0)
              sub_23AAA0ECC((_QWORD *)(v0 + 3952), 0x100000000000);
          }
          v417 = *(_QWORD *)(v0 + 448);
          v34 = *(_QWORD *)(v3 - 72);
          v135 = *(_BYTE **)(v0 + 400);
          v169 = *(_QWORD *)(v0 + 320);
        }
        else
        {
          v417 = *(_QWORD *)(v0 + 448);
        }
      }
      if (sub_23AA9F3D0(0x10000000000000, v334)
        && (*(_BYTE *)(v169 + *(int *)(*(_QWORD *)(v0 + 376) + 48) + *(int *)(*(_QWORD *)(v0 + 216) + 72)) & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
        v740 = swift_allocObject();
        v741 = sub_23B1A1F64(v740, 3);
        *(_OWORD *)v742 = xmmword_23B1DAA10;
        *(_QWORD *)(v742 + 16) = 1;
        v743 = nullsub_1(v741);
        v744 = sub_23AFD7BC8(v743);
        swift_bridgeObjectRelease();
        sub_23AAA0ECC((_QWORD *)(v0 + 4456), v744);
      }
      v562 = *(_BYTE **)(*(_QWORD *)(v0 + 424) + 40);
      if ((v562[32] & 1) != 0)
        goto LABEL_329;
      v745 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
      if (!sub_23AFA74BC(*(_BYTE *)(v169 + *(int *)(v745 + 48))))
        goto LABEL_329;
      v746 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 424) + 160))();
      if (!sub_23AC42E98(v746 & 1, 0))
        goto LABEL_329;
      if (!sub_23AA9F3D0(0x4000000000000, v334))
        goto LABEL_327;
      sub_23AA724E8(v0 + 4960, v0 + 3952, (uint64_t *)&unk_2569E63E0);
      sub_23AA724E8(v0 + 4960, v0 + 4456, (uint64_t *)&unk_2569E63E0);
      if (sub_23AAFC2A4(v0 + 4456) == 1)
        goto LABEL_327;
      sub_23AA724E8(v0 + 4960, v0 + 2960, (uint64_t *)&unk_2569E63E0);
      v747 = *(unsigned __int8 *)(v0 + 4160);
      v748 = *(_OWORD *)(v0 + 4128);
      *(_OWORD *)(v0 + 3616) = *(_OWORD *)(v0 + 4112);
      *(_OWORD *)(v0 + 3632) = v748;
      v749 = *(_QWORD *)(v0 + 4152);
      v750 = *(_QWORD *)(v0 + 4144);
      v751 = *(_OWORD *)(v0 + 4064);
      *(_OWORD *)(v0 + 3552) = *(_OWORD *)(v0 + 4048);
      *(_OWORD *)(v0 + 3568) = v751;
      v752 = *(_OWORD *)(v0 + 4080);
      *(_OWORD *)(v0 + 3600) = *(_OWORD *)(v0 + 4096);
      *(_OWORD *)(v0 + 3584) = v752;
      v753 = *(_OWORD *)(v0 + 4000);
      *(_OWORD *)(v0 + 3488) = *(_OWORD *)(v0 + 3984);
      *(_OWORD *)(v0 + 3504) = v753;
      v754 = *(_OWORD *)(v0 + 4016);
      *(_OWORD *)(v0 + 3536) = *(_OWORD *)(v0 + 4032);
      *(_OWORD *)(v0 + 3520) = v754;
      v755 = *(_OWORD *)(v0 + 3952);
      *(_OWORD *)(v0 + 3472) = *(_OWORD *)(v0 + 3968);
      *(_OWORD *)(v0 + 3456) = v755;
      v756 = *(_BYTE *)(v0 + 4184);
      v757 = *(_WORD *)(v0 + 4288);
      v758 = *(char **)(v0 + 48);
      v759 = *v758;
      v760 = *(_QWORD *)(v0 + 4296);
      v761 = *(_QWORD *)(v0 + 4304);
      v762 = *(_BYTE *)(v0 + 4312);
      v763 = *(_QWORD *)(v0 + 4384);
      v764 = *(_BYTE *)(v0 + 4392);
      v765 = *(_QWORD *)(v0 + 4400);
      v766 = *(_QWORD *)(v0 + 4408);
      LOBYTE(v758) = v758[142];
      v767 = *(_QWORD *)(v0 + 4440);
      *(_QWORD *)(v0 + 3648) = v750;
      *(_QWORD *)(v0 + 3656) = v749;
      *(_BYTE *)(v0 + 3664) = v747;
      *(_OWORD *)(v0 + 3672) = *(_OWORD *)(v0 + 4168);
      *(_BYTE *)(v0 + 3688) = v756;
      v768 = *(_OWORD *)(v0 + 4208);
      *(_OWORD *)(v0 + 3696) = *(_OWORD *)(v0 + 4192);
      *(_OWORD *)(v0 + 3712) = v768;
      v769 = *(_OWORD *)(v0 + 4240);
      *(_OWORD *)(v0 + 3728) = *(_OWORD *)(v0 + 4224);
      *(_OWORD *)(v0 + 3744) = v769;
      v770 = *(_OWORD *)(v0 + 4272);
      *(_OWORD *)(v0 + 3760) = *(_OWORD *)(v0 + 4256);
      *(_OWORD *)(v0 + 3776) = v770;
      *(_WORD *)(v0 + 3792) = v757;
      *(_BYTE *)(v0 + 3794) = v759;
      *(_QWORD *)(v0 + 3800) = v760;
      *(_QWORD *)(v0 + 3808) = v761;
      *(_BYTE *)(v0 + 3816) = v762;
      v771 = *(_OWORD *)(v0 + 4336);
      *(_OWORD *)(v0 + 3824) = *(_OWORD *)(v0 + 4320);
      *(_OWORD *)(v0 + 3840) = v771;
      v772 = *(_OWORD *)(v0 + 4368);
      *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v0 + 4352);
      *(_OWORD *)(v0 + 3872) = v772;
      *(_QWORD *)(v0 + 3888) = v763;
      *(_BYTE *)(v0 + 3896) = v764;
      *(_QWORD *)(v0 + 3904) = v765;
      *(_QWORD *)(v0 + 3912) = v766;
      *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v0 + 4416);
      *(_BYTE *)(v0 + 3936) = (_BYTE)v758;
      *(_QWORD *)(v0 + 3944) = v767;
      sub_23AEB34A4(v0 + 2960);
      sub_23AAFCF50(v0 + 3456);
      if (v747 == 255)
      {
LABEL_327:
        v417 = *(_QWORD *)(v0 + 448);
        goto LABEL_328;
      }
      *(_QWORD *)(v0 + 960) = v749;
      *(_BYTE *)(v0 + 968) = v747;
      v773 = *(_QWORD *)(v0 + 448);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v562 + 240))(v0 + 960, 1);
      v566 = v773;
      if (!v773)
        goto LABEL_348;
      sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
      sub_23AA724E8(v0 + 8440, v0 + 1968, (uint64_t *)&unk_2569E63E0);
      sub_23ADF2D34(v0 + 1968, (voidsub_23AEB1930);
      sub_23AA724E8(v0 + 8936, v0 + 2464, (uint64_t *)&unk_2569E63E0);
      sub_23ADF2D34(v0 + 2464, (voidsub_23AEB1930);
      v31 = *(_QWORD *)(v0 + 320);
      goto LABEL_345;
    }
  }
  v415 = *(id *)v169;
  *(_QWORD *)(v0 + 16408) = *(_QWORD *)v169;
  *(_QWORD *)(v0 + 16416) = 0;
  *(_QWORD *)(v0 + 16424) = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v0 + 16432) = *(_QWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 16440) = 0u;
  *(_OWORD *)(v0 + 16456) = 0u;
  *(_OWORD *)(v0 + 16472) = 0u;
  *(_OWORD *)(v0 + 16488) = 0u;
  *(_OWORD *)(v0 + 16504) = 0u;
  *(_DWORD *)(v0 + 16519) = 0;
  *(_BYTE *)(v0 + 16523) = 11;
  v416 = v415;
  sub_23B020598(v34, v0 + 16408);

  v417 = *(_QWORD *)(v0 + 448);
  while (2)
  {
    v535 = *(id *)v169;
    v536 = sub_23AAA0D58();
    v537 = *(_QWORD *)(v0 + 328);
    if ((v536 & 1) != 0 && sub_23AA9F3D0(8, v334))
    {
      v538 = *(_DWORD *)(v0 + 420);
      if (v538 < 2)
      {
        sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
        sub_23AA724E8(v0 + 3952, v0 + 4456, (uint64_t *)&unk_2569E63E0);
        if (sub_23AAFC2A4(v0 + 4456) != 1)
        {
          sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
          memcpy((void *)(v0 + 15912), (const void *)(v0 + 3456), 0x1F0uLL);
          if (sub_23B002AF8())
          {
            *(_QWORD *)(v0 + 2960) = v535;
            *(_WORD *)(v0 + 2968) = 0;
            v539 = v417;
            v540 = *(_QWORD *)(v169 + 16);
            v541 = *(_QWORD *)(v169 + 24);
            v542 = *(_QWORD *)(v169 + 32);
            v543 = *(_QWORD *)(v169 + 40);
            v544 = *(_QWORD *)(v169 + 48);
            v545 = *(_QWORD *)(*(_QWORD *)(v0 + 320) + 72);
            *(_QWORD *)(v0 + 2976) = v540;
            *(_QWORD *)(v0 + 2984) = v541;
            *(_QWORD *)(v0 + 2992) = v542;
            *(_QWORD *)(v0 + 3000) = v543;
            v546 = *(_OWORD *)(*(_QWORD *)(v0 + 320) + 56);
            *(_OWORD *)(v0 + 448) = v546;
            *(_OWORD *)(v0 + 3016) = v546;
            *(_QWORD *)(v0 + 3008) = v544;
            *(_QWORD *)(v0 + 3032) = v545;
            *(_WORD *)(v0 + 3040) = 1;
            *(_BYTE *)(v0 + 3042) = 7;
            *(_BYTE *)(v0 + 3075) = 9;
            sub_23AA724E8(v0 + 2960, v0 + 15792, &qword_2569E64D8);
            v547 = v535;
            v548 = v541;
            v417 = v539;
            v34 = *(_QWORD *)(v3 - 72);
            sub_23AAAE668(v540, v548);
            swift_bridgeObjectRetain();
            v549 = v543;
            v135 = *(_BYTE **)(v0 + 400);
            v550 = v544;
            v537 = *(_QWORD *)(v0 + 328);
            sub_23AAAE668(v549, v550);
            v169 = *(_QWORD *)(v0 + 320);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_23B020598(v34, v0 + 15792);
            sub_23AEB3270(v0 + 15792, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
          }
        }
        if ((v135[32] & 1) == 0)
        {
          v551 = *(void **)(v0 + 9440);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
          swift_allocObject();
          v552 = v551;
          v554 = *(_QWORD *)(v0 + 256);
          v553 = *(_QWORD *)(v0 + 264);
          v555 = v417;
          v556 = sub_23AEA89CC(v552, v554, v553, 2048);

          (*(void (**)(uint64_t))(*(_QWORD *)v34 + 144))(v556);
          v417 = v555;
          swift_release();
          v557 = v552;
          v558 = v554;
          v537 = *(_QWORD *)(v0 + 328);
          v559 = v553;
          v135 = *(_BYTE **)(v0 + 400);
          sub_23AE9EFA8((uint64_t)v557, v558, v559, 2048, (uint64_t *)&unk_2569E63A0);
          (*(void (**)(void))(*(_QWORD *)v34 + 144))();
          swift_release();
        }
LABEL_241:
        sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
        sub_23AA724E8(v0 + 3952, v0 + 4456, (uint64_t *)&unk_2569E63E0);
        if (sub_23AAFC2A4(v0 + 4456) == 1)
        {
          v568 = *(_QWORD *)(v0 + 376);
          goto LABEL_256;
        }
        v569 = v417;
        sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
        memcpy((void *)(v0 + 14696), (const void *)(v0 + 3456), 0x1F0uLL);
        v570 = *(_QWORD *)(v0 + 3648);
        v571 = sub_23AA9F3D0(4, v570);
        v572 = v169 + *(int *)(*(_QWORD *)(v0 + 376) + 48);
        v573 = *(unsigned __int8 *)(v572 + *(int *)(*(_QWORD *)(v0 + 216) + 92));
        if (v571 != v573)
        {
          v574 = *(id *)v169;
          if ((v573 & 1) != 0)
          {
            *(_QWORD *)(v0 + 15552) = v574;
            *(_QWORD *)(v0 + 15560) = 0;
            *(_OWORD *)(v0 + 15568) = 0u;
            *(_OWORD *)(v0 + 15592) = 0u;
            *(_OWORD *)(v0 + 15608) = 0u;
            *(_QWORD *)(v0 + 15584) = 0xB000000000000000;
            *(_QWORD *)(v0 + 15624) = 0;
            *(_QWORD *)(v0 + 15632) = 851968;
            *(_QWORD *)(v0 + 15640) = 0;
            *(_OWORD *)(v0 + 15648) = 0u;
            *(_DWORD *)(v0 + 15663) = 0;
            *(_BYTE *)(v0 + 15667) = 9;
            sub_23ADF2D34(v0 + 3952, (voidsub_23AEB367C);
            v575 = v574;
            sub_23B020598(v34, v0 + 15552);
            sub_23AB7C6B4(v574, 0, 0);
            sub_23AEAD8A8(0, 0, 0xB000000000000000, 0, 0, 0, 0, 0, 0, 13);
            v576 = *(id *)v169;
            *(_QWORD *)(v0 + 15432) = *(_QWORD *)v169;
            *(_QWORD *)(v0 + 15440) = 0;
            *(_OWORD *)(v0 + 15448) = 0u;
            *(_OWORD *)(v0 + 15472) = 0u;
            *(_OWORD *)(v0 + 15488) = 0u;
            *(_OWORD *)(v0 + 15504) = 0u;
            *(_OWORD *)(v0 + 15520) = 0u;
            *(_QWORD *)(v0 + 15464) = 0xB000000000000000;
            *(_QWORD *)(v0 + 15536) = 0;
            *(_DWORD *)(v0 + 15544) = 135069696;
            v577 = v576;
            sub_23B020598(v34, v0 + 15432);
            sub_23AB7C6B4(v576, 0, 0);
            sub_23AEAD994(0, 0, 0xB000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13);
            v578 = *(id *)v169;
            *(_QWORD *)(v0 + 15312) = *(_QWORD *)v169;
            *(_OWORD *)(v0 + 15320) = xmmword_23B1DA9D0;
            *(_OWORD *)(v0 + 15336) = 0u;
            *(_OWORD *)(v0 + 15352) = 0u;
            *(_OWORD *)(v0 + 15368) = 0u;
            *(_OWORD *)(v0 + 15384) = 0u;
            *(_OWORD *)(v0 + 15400) = 0u;
            *(_OWORD *)(v0 + 15411) = 0u;
            *(_BYTE *)(v0 + 15427) = 10;
            v579 = v578;
            sub_23B020598(v34, v0 + 15312);

            sub_23AEA8AF0(v0 + 14696, *(_QWORD *)(v0 + 424));
            if (!v569)
            {
              v135 = *(_BYTE **)(v0 + 400);
              goto LABEL_249;
            }
LABEL_248:
            sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
            sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
            sub_23AA724E8(v0 + 8440, v0 + 2464, (uint64_t *)&unk_2569E63E0);
            sub_23ADF2D34(v0 + 2464, (voidsub_23AEB1930);
            sub_23AA724E8(v0 + 8936, v0 + 2960, (uint64_t *)&unk_2569E63E0);
            sub_23ADF2D34(v0 + 2960, (voidsub_23AEB1930);
            sub_23AA8A05C(v169, (uint64_t *)&unk_2542E4760);
            return v41 & 1;
          }
          *(_OWORD *)(v0 + 15680) = xmmword_23B1DA9D0;
          *(_QWORD *)(v0 + 15672) = v574;
          *(_QWORD *)(v0 + 15696) = 1;
          *(_OWORD *)(v0 + 15704) = 0u;
          *(_OWORD *)(v0 + 15720) = 0u;
          *(_OWORD *)(v0 + 15736) = 0u;
          *(_OWORD *)(v0 + 15752) = 0u;
          *(_OWORD *)(v0 + 15768) = 0u;
          *(_DWORD *)(v0 + 15783) = 0;
          *(_BYTE *)(v0 + 15787) = 10;
          sub_23ADF2D34(v0 + 3952, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB367C);
          v580 = v574;
          sub_23B020598(v34, v0 + 15672);

          sub_23AEA8AF0(v0 + 14696, *(_QWORD *)(v0 + 424));
          if (v569)
            goto LABEL_248;
LABEL_249:
          sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
        }
        v581 = sub_23AA9F3D0(8, v570);
        v582 = *(unsigned __int8 *)(v572 + *(int *)(*(_QWORD *)(v0 + 216) + 96));
        if (v581 == v582)
        {
          v417 = v569;
        }
        else
        {
          v583 = *(id *)v169;
          *(_OWORD *)(v0 + 15200) = xmmword_23B1D2300;
          *(_QWORD *)(v0 + 15192) = v583;
          *(_QWORD *)(v0 + 15216) = v582 ^ 1u;
          *(_OWORD *)(v0 + 15224) = 0u;
          *(_OWORD *)(v0 + 15240) = 0u;
          *(_OWORD *)(v0 + 15256) = 0u;
          *(_OWORD *)(v0 + 15272) = 0u;
          *(_OWORD *)(v0 + 15288) = 0u;
          *(_DWORD *)(v0 + 15303) = 0;
          *(_BYTE *)(v0 + 15307) = 10;
          sub_23ADF2D34(v0 + 3952, (voidsub_23AEB367C);
          v584 = v583;
          sub_23B020598(v34, v0 + 15192);

          sub_23AEA8AF0(v0 + 14696, *(_QWORD *)(v0 + 424));
          v417 = v569;
          if (v569)
          {
            sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
            sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
            sub_23AA724E8(v0 + 8440, v0 + 2464, (uint64_t *)&unk_2569E63E0);
            sub_23ADF2D34(v0 + 2464, (voidsub_23AEB1930);
            sub_23AA724E8(v0 + 8936, v0 + 2960, (uint64_t *)&unk_2569E63E0);
            sub_23ADF2D34(v0 + 2960, (voidsub_23AEB1930);
            v31 = v169;
            goto LABEL_345;
          }
          sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
        }
        v568 = *(_QWORD *)(v0 + 376);
        v537 = *(_QWORD *)(v0 + 328);
LABEL_256:
        if ((v135[32] & 1) == 0)
        {
          sub_23AA724E8(v0 + 3952, v0 + 2960, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
          v585 = v417;
          if (sub_23AAFC2A4(v0 + 3456) == 1)
          {
            v586 = 2;
          }
          else
          {
            v587 = *(_QWORD *)(v0 + 3448);
            v588 = *(_OWORD *)(v0 + 3136);
            *(_OWORD *)(v0 + 2128) = *(_OWORD *)(v0 + 3120);
            *(_OWORD *)(v0 + 2144) = v588;
            *(_QWORD *)(v0 + 2160) = *(_QWORD *)(v0 + 3152);
            v589 = *(_OWORD *)(v0 + 3072);
            *(_OWORD *)(v0 + 2064) = *(_OWORD *)(v0 + 3056);
            *(_OWORD *)(v0 + 2080) = v589;
            v590 = *(_OWORD *)(v0 + 3088);
            *(_OWORD *)(v0 + 2112) = *(_OWORD *)(v0 + 3104);
            *(_OWORD *)(v0 + 2096) = v590;
            v591 = *(_OWORD *)(v0 + 3008);
            *(_OWORD *)(v0 + 2000) = *(_OWORD *)(v0 + 2992);
            *(_OWORD *)(v0 + 2016) = v591;
            v592 = *(_OWORD *)(v0 + 3024);
            *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 3040);
            *(_OWORD *)(v0 + 2032) = v592;
            v593 = *(_OWORD *)(v0 + 2960);
            *(_OWORD *)(v0 + 1984) = *(_OWORD *)(v0 + 2976);
            *(_OWORD *)(v0 + 1968) = v593;
            v594 = *(_OWORD *)(v0 + 3368);
            *(_OWORD *)(v0 + 2360) = *(_OWORD *)(v0 + 3352);
            *(_OWORD *)(v0 + 2376) = v594;
            *(_OWORD *)(v0 + 2392) = *(_OWORD *)(v0 + 3384);
            v595 = *(_OWORD *)(v0 + 3304);
            *(_OWORD *)(v0 + 2296) = *(_OWORD *)(v0 + 3288);
            *(_OWORD *)(v0 + 2312) = v595;
            v596 = *(_OWORD *)(v0 + 3336);
            *(_OWORD *)(v0 + 2328) = *(_OWORD *)(v0 + 3320);
            *(_OWORD *)(v0 + 2344) = v596;
            v597 = *(_OWORD *)(v0 + 3240);
            *(_OWORD *)(v0 + 2232) = *(_OWORD *)(v0 + 3224);
            *(_OWORD *)(v0 + 2248) = v597;
            v598 = *(_OWORD *)(v0 + 3272);
            *(_OWORD *)(v0 + 2264) = *(_OWORD *)(v0 + 3256);
            *(_OWORD *)(v0 + 2280) = v598;
            *(_OWORD *)(v0 + 2216) = *(_OWORD *)(v0 + 3208);
            *(_OWORD *)(v0 + 2168) = *(_OWORD *)(v0 + 3160);
            *(_OWORD *)(v0 + 2184) = *(_OWORD *)(v0 + 3176);
            *(_OWORD *)(v0 + 2200) = *(_OWORD *)(v0 + 3192);
            v599 = *(_QWORD *)(v0 + 3408);
            v600 = *(_QWORD *)(v0 + 3416);
            v601 = *(_BYTE *)(v0 + 3440);
            *(_BYTE *)(v0 + 2408) = *(_BYTE *)(v0 + 3400);
            *(_QWORD *)(v0 + 2416) = v599;
            *(_QWORD *)(v0 + 2424) = v600;
            *(_OWORD *)(v0 + 2432) = *(_OWORD *)(v0 + 3424);
            *(_BYTE *)(v0 + 2448) = v601;
            *(_QWORD *)(v0 + 2456) = v587;
            sub_23AA724E8(v0 + 3952, v0 + 2464, (uint64_t *)&unk_2569E63E0);
            sub_23AEB34A4(v0 + 2464);
            sub_23AAFCF50(v0 + 1968);
            v586 = sub_23AA9F3D0(2, v587);
          }
          v602 = sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v0 + 320) + *(int *)(v568 + 48) + *(int *)(*(_QWORD *)(v0 + 216) + 88)), 2);
          v603 = v602;
          if (v586 == 2 || ((v602 ^ (v586 != 0)) & 1) != 0)
          {
            v604 = sub_23ADF6404(&qword_2569E6490);
            v605 = **(void ***)(v0 + 320);
            v606 = v605;
            v607 = sub_23ACD8490(0);
            v608 = sub_23AFD7BC8(v607);
            swift_bridgeObjectRelease();
            if (v603)
            {
              *(_QWORD *)(v0 + 14456) = v605;
              v609 = v0 + 14456;
              v610 = 2;
              v611 = *(_QWORD *)(v0 + 96);
            }
            else
            {
              *(_QWORD *)(v0 + 14576) = v605;
              v609 = v0 + 14576;
              v610 = v608;
              v608 = 2;
              v611 = *(_QWORD *)(v0 + 88);
            }
            *(_QWORD *)(v609 + 8) = 0;
            *(_QWORD *)(v609 + 16) = v610;
            *(_QWORD *)(v609 + 24) = v608;
            *(_DWORD *)(v611 + 79) = 0;
            *(_OWORD *)(v611 + 48) = 0u;
            *(_OWORD *)(v611 + 64) = 0u;
            *(_OWORD *)(v611 + 16) = 0u;
            *(_OWORD *)(v611 + 32) = 0u;
            *(_OWORD *)v611 = 0u;
            *(_BYTE *)(v609 + 115) = 13;
            sub_23B020598((uint64_t)v604, v609);

            v612 = sub_23AF3EA84();
            sub_23ADF691C(v604, v612, (void (*)(_QWORD, _QWORD))sub_23ADF71B0);
            v537 = *(_QWORD *)(v0 + 328);
            if (v585)
            {
              swift_release();
              sub_23AA8A05C(v537, (uint64_t *)&unk_2542E4760);
              sub_23AA724E8(v0 + 8440, v0 + 2464, (uint64_t *)&unk_2569E63E0);
              sub_23ADF2D34(v0 + 2464, (voidsub_23AEB1930);
              sub_23AA724E8(v0 + 8936, v0 + 2960, (uint64_t *)&unk_2569E63E0);
              v613 = v0 + 2960;
              goto LABEL_267;
            }
            swift_release();
          }
        }
        sub_23AA8A05C(v537, (uint64_t *)&unk_2542E4760);
        sub_23AA724E8(v0 + 8440, v0 + 2960, (uint64_t *)&unk_2569E63E0);
        sub_23ADF2D34(v0 + 2960, (voidsub_23AEB1930);
        sub_23AA724E8(v0 + 8936, v0 + 3456, (uint64_t *)&unk_2569E63E0);
        sub_23ADF2D34(v0 + 3456, (voidsub_23AEB1930);
        sub_23AA8A05C(*(_QWORD *)(v0 + 320), (uint64_t *)&unk_2542E4760);
        v41 = 0;
        return v41 & 1;
      }
      if (v538 != 2)
        goto LABEL_241;
    }
    else if (*(_DWORD *)(v0 + 420) != 2)
    {
      goto LABEL_241;
    }
    v560 = *(_QWORD *)(v0 + 136);
    sub_23AA8EFC8(v169, v560, (uint64_t *)&unk_2542E4760);
    if (!swift_weakLoadStrong())
    {
      __break(1u);
      JUMPOUT(0x23AE951CCLL);
    }
    sub_23AE88114(v560);
    if (v417)
    {
      swift_release();
      sub_23AA8A05C(v560, (uint64_t *)&unk_2542E4760);
      v534 = v537;
      goto LABEL_232;
    }
    v562 = v561;
    sub_23AA8A05C(v560, (uint64_t *)&unk_2542E4760);
    swift_release();
    if (!((uint64_t (*)(_BYTE *))sub_23B0261BC)(v562))
    {
      swift_bridgeObjectRelease();
      goto LABEL_241;
    }
    LODWORD(v230) = 0;
    v563 = 0;
    while (1)
    {
      v564 = sub_23ACDBB7C((uint64_t (*)())(v0 + 4456), v563, (uint64_t)v562);
      v566 = *v565;
      swift_retain();
      ((void (*)(uint64_t, _QWORD))v564)(v0 + 4456, 0);
      v567 = v563 + 1;
      if (__OFADD__(v563, 1))
        break;
      (*(void (**)(unint64_t))(*(_QWORD *)v34 + 144))(v566);
      swift_release();
      ++v563;
      if (v567 == ((uint64_t (*)(_BYTE *))sub_23B0261BC)(v562))
      {
        swift_bridgeObjectRelease();
        v417 = 0;
        v135 = *(_BYTE **)(v0 + 400);
        v537 = *(_QWORD *)(v0 + 328);
        goto LABEL_241;
      }
    }
    __break(1u);
LABEL_348:
    if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 48))(*(_QWORD *)(v0 + 64), 1, *(_QWORD *)(v0 + 112)) == 1)
    {
      v819 = (uint64_t *)&unk_2542E4750;
      v820 = *(_QWORD *)(v0 + 64);
LABEL_383:
      sub_23AA8A05C(v820, v819);
      v417 = v566;
LABEL_328:
      v34 = *(_QWORD *)(v3 - 72);
      v135 = *(_BYTE **)(v0 + 400);
      v169 = *(_QWORD *)(v0 + 320);
LABEL_329:
      if ((v135[32] & 1) == 0)
        goto LABEL_330;
    }
    else
    {
      sub_23AA724E8(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), (uint64_t *)&unk_2542E6B00);
      if ((sub_23AFFA4E8() & 1) != 0
        || (v892 = *(_BYTE *)(*(_QWORD *)(v0 + 40)
                            + *(int *)(*(_QWORD *)(v0 + 112) + 48)
                            + *(int *)(*(_QWORD *)(v0 + 216) + 84)),
            sub_23AA9F51C(v892, 3))
        || sub_23AA9F51C(v892, 2))
      {
        v819 = (uint64_t *)&unk_2542E6B00;
        v820 = *(_QWORD *)(v0 + 40);
        goto LABEL_383;
      }
      v169 = *(_QWORD *)(v0 + 320);
      v955 = *(id *)v169;
      v956 = sub_23ADA8168(v955);
      sub_23AE14334((uint64_t)v955, v956, v957, 0x8000000);
      v34 = *(_QWORD *)(v3 - 72);
      (*(void (**)(void))(*(_QWORD *)v34 + 144))();
      swift_release();
      sub_23AA8A05C(*(_QWORD *)(v0 + 40), (uint64_t *)&unk_2542E6B00);
      v417 = v566;
      v135 = *(_BYTE **)(v0 + 400);
      if ((v135[32] & 1) == 0)
      {
LABEL_330:
        v774 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if (sub_23AFA74BC(*(_BYTE *)(v169 + *(int *)(v774 + 48))))
        {
          if (sub_23AA9F3D0(16, *(_QWORD *)(v0 + 9432)))
          {
            v775 = v417;
            if ((sub_23AFFA4F4() & 1) != 0)
              goto LABEL_357;
            sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
            sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
            sub_23AA724E8(v0 + 3952, v0 + 4456, (uint64_t *)&unk_2569E63E0);
            if (sub_23AAFC2A4(v0 + 4456) == 1)
              goto LABEL_357;
            sub_23AA724E8(v0 + 3952, v0 + 2464, (uint64_t *)&unk_2569E63E0);
            v776 = *(unsigned __int8 *)(v0 + 3664);
            v777 = *(_OWORD *)(v0 + 3632);
            *(_OWORD *)(v0 + 3120) = *(_OWORD *)(v0 + 3616);
            *(_OWORD *)(v0 + 3136) = v777;
            v778 = *(_QWORD *)(v0 + 3656);
            v779 = *(_QWORD *)(v0 + 3648);
            v780 = *(_OWORD *)(v0 + 3568);
            *(_OWORD *)(v0 + 3056) = *(_OWORD *)(v0 + 3552);
            *(_OWORD *)(v0 + 3072) = v780;
            v781 = *(_OWORD *)(v0 + 3584);
            *(_OWORD *)(v0 + 3104) = *(_OWORD *)(v0 + 3600);
            *(_OWORD *)(v0 + 3088) = v781;
            v782 = *(_OWORD *)(v0 + 3504);
            *(_OWORD *)(v0 + 2992) = *(_OWORD *)(v0 + 3488);
            *(_OWORD *)(v0 + 3008) = v782;
            v783 = *(_OWORD *)(v0 + 3520);
            *(_OWORD *)(v0 + 3040) = *(_OWORD *)(v0 + 3536);
            *(_OWORD *)(v0 + 3024) = v783;
            v784 = *(_OWORD *)(v0 + 3456);
            *(_OWORD *)(v0 + 2976) = *(_OWORD *)(v0 + 3472);
            *(_OWORD *)(v0 + 2960) = v784;
            v785 = *(_BYTE *)(v0 + 3688);
            v786 = *(_WORD *)(v0 + 3792);
            v787 = *(char **)(v0 + 120);
            v788 = *v787;
            v789 = *(_QWORD *)(v0 + 3800);
            v790 = *(_QWORD *)(v0 + 3808);
            v791 = *(_BYTE *)(v0 + 3816);
            v792 = *(_QWORD *)(v0 + 3888);
            v793 = *(_BYTE *)(v0 + 3896);
            v794 = *(_QWORD *)(v0 + 3904);
            v795 = *(_QWORD *)(v0 + 3912);
            LOBYTE(v787) = v787[142];
            v796 = *(_QWORD *)(v0 + 3944);
            *(_QWORD *)(v0 + 3152) = v779;
            *(_QWORD *)(v0 + 3160) = v778;
            *(_BYTE *)(v0 + 3168) = v776;
            *(_OWORD *)(v0 + 3176) = *(_OWORD *)(v0 + 3672);
            *(_BYTE *)(v0 + 3192) = v785;
            v797 = *(_OWORD *)(v0 + 3712);
            *(_OWORD *)(v0 + 3200) = *(_OWORD *)(v0 + 3696);
            *(_OWORD *)(v0 + 3216) = v797;
            v798 = *(_OWORD *)(v0 + 3744);
            *(_OWORD *)(v0 + 3232) = *(_OWORD *)(v0 + 3728);
            *(_OWORD *)(v0 + 3248) = v798;
            v799 = *(_OWORD *)(v0 + 3776);
            *(_OWORD *)(v0 + 3264) = *(_OWORD *)(v0 + 3760);
            *(_OWORD *)(v0 + 3280) = v799;
            *(_WORD *)(v0 + 3296) = v786;
            *(_BYTE *)(v0 + 3298) = v788;
            *(_QWORD *)(v0 + 3304) = v789;
            *(_QWORD *)(v0 + 3312) = v790;
            *(_BYTE *)(v0 + 3320) = v791;
            v800 = *(_OWORD *)(v0 + 3840);
            *(_OWORD *)(v0 + 3328) = *(_OWORD *)(v0 + 3824);
            *(_OWORD *)(v0 + 3344) = v800;
            v801 = *(_OWORD *)(v0 + 3872);
            *(_OWORD *)(v0 + 3360) = *(_OWORD *)(v0 + 3856);
            *(_OWORD *)(v0 + 3376) = v801;
            *(_QWORD *)(v0 + 3392) = v792;
            *(_BYTE *)(v0 + 3400) = v793;
            *(_QWORD *)(v0 + 3408) = v794;
            *(_QWORD *)(v0 + 3416) = v795;
            *(_OWORD *)(v0 + 3424) = *(_OWORD *)(v0 + 3920);
            *(_BYTE *)(v0 + 3440) = (_BYTE)v787;
            *(_QWORD *)(v0 + 3448) = v796;
            sub_23AEB34A4(v0 + 2464);
            sub_23AAFCF50(v0 + 2960);
            if (v776 == 255)
              goto LABEL_357;
            *(_QWORD *)(v0 + 464) = v778;
            *(_BYTE *)(v0 + 472) = v776;
            (*(void (**)(uint64_t))(*(_QWORD *)v562 + 264))(v0 + 464);
            if (v775)
            {
              sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
              sub_23AA724E8(v0 + 8440, v0 + 960, (uint64_t *)&unk_2569E63E0);
              sub_23ADF2D34(v0 + 960, (voidsub_23AEB1930);
              sub_23AA724E8(v0 + 8936, v0 + 1968, (uint64_t *)&unk_2569E63E0);
              sub_23ADF2D34(v0 + 1968, (voidsub_23AEB1930);
              v31 = *(_QWORD *)(v0 + 320);
              goto LABEL_345;
            }
            sub_23AA724E8(v0 + 9696, v0 + 10440, &qword_2542E5050);
            if (sub_23AAFCF2C(v0 + 10440) == 1)
              goto LABEL_357;
            v821 = *(_OWORD *)(v0 + 10648);
            *(_OWORD *)(v0 + 10880) = *(_OWORD *)(v0 + 10632);
            *(_OWORD *)(v0 + 10896) = v821;
            *(_OWORD *)(v0 + 10912) = *(_OWORD *)(v0 + 10664);
            *(_QWORD *)(v0 + 10928) = *(_QWORD *)(v0 + 10680);
            v822 = *(_OWORD *)(v0 + 10584);
            *(_OWORD *)(v0 + 10816) = *(_OWORD *)(v0 + 10568);
            *(_OWORD *)(v0 + 10832) = v822;
            v823 = *(_OWORD *)(v0 + 10616);
            *(_OWORD *)(v0 + 10848) = *(_OWORD *)(v0 + 10600);
            *(_OWORD *)(v0 + 10864) = v823;
            v824 = *(_OWORD *)(v0 + 10520);
            *(_OWORD *)(v0 + 10752) = *(_OWORD *)(v0 + 10504);
            *(_OWORD *)(v0 + 10768) = v824;
            v825 = *(_OWORD *)(v0 + 10552);
            *(_OWORD *)(v0 + 10784) = *(_OWORD *)(v0 + 10536);
            *(_OWORD *)(v0 + 10800) = v825;
            v826 = *(_OWORD *)(v0 + 10456);
            *(_OWORD *)(v0 + 10688) = *(_OWORD *)(v0 + 10440);
            *(_OWORD *)(v0 + 10704) = v826;
            v827 = *(_OWORD *)(v0 + 10488);
            *(_OWORD *)(v0 + 10720) = *(_OWORD *)(v0 + 10472);
            *(_OWORD *)(v0 + 10736) = v827;
            sub_23AA724E8(v0 + 10912, v0 + 10936, &qword_2542E76C0);
            sub_23AAB7528(v0 + 10936);
            sub_23AAB7E4C((_QWORD *)(v0 + 9696), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
            sub_23AA724E8(v0 + 10936, v3 - 104, &qword_2542E76C0);
            v828 = *(_QWORD *)(v3 - 104);
            if (!v828
              || (v829 = sub_23AF967B4(v828), sub_23AAB7500(v0 + 10936), v829)
              || (v830 = *(_BYTE *)(*(_QWORD *)(v0 + 320)
                                  + *(int *)(*(_QWORD *)(v0 + 376) + 48)
                                  + *(int *)(*(_QWORD *)(v0 + 216) + 84)),
                  sub_23AA9F51C(v830, 3))
              || (v831 = sub_23AA9F51C(v830, 2)))
            {
LABEL_357:
              v417 = v775;
              v34 = *(_QWORD *)(v3 - 72);
            }
            else
            {
              v958 = sub_23ADA8168(v831);
              sub_23AE14238(v778, v776, v958, v959, 1);
              v34 = *(_QWORD *)(v3 - 72);
              (*(void (**)(void))(*(_QWORD *)v34 + 152))();
              swift_release();
              v417 = 0;
            }
            v135 = *(_BYTE **)(v0 + 400);
            v169 = *(_QWORD *)(v0 + 320);
          }
          else
          {
            v135 = *(_BYTE **)(v0 + 400);
          }
        }
      }
    }
    v832 = *(id *)v169;
    *(_QWORD *)(v0 + 4456) = *(_QWORD *)v169;
    *(_WORD *)(v0 + 4464) = 0;
    v833 = *(_QWORD *)(v0 + 4952);
    v834 = v832;
    *(_QWORD *)(v0 + 4472) = sub_23AFA7B90(v833);
    *(_QWORD *)(v0 + 4480) = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v0 + 4488) = *(_QWORD *)(v0 + 264);
    *(_BYTE *)(v0 + 4538) = 0;
    *(_BYTE *)(v0 + 4571) = 9;
    sub_23AA724E8(v0 + 4456, v0 + 19344, &qword_2569E64D8);
    sub_23B020598(v34, v0 + 19344);
    sub_23AEB3270(v0 + 19344, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB32DC);
    v835 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
    if (!sub_23AFA7480(*(_BYTE *)(v169 + *(int *)(v835 + 48))))
    {
LABEL_172:
      v428 = *(_QWORD *)(v0 + 9432);
      if (sub_23AA9F3D0(16, v428))
      {
        if ((sub_23AFFA4F4() & 1) != 0)
        {
          v429 = *(id *)v169;
          *(_OWORD *)(v0 + 18624) = 0u;
          *(_OWORD *)(v0 + 18640) = 0u;
          *(_OWORD *)(v0 + 18656) = 0u;
          *(_OWORD *)(v0 + 18672) = 0u;
          *(_OWORD *)(v0 + 18688) = 0u;
          *(_OWORD *)(v0 + 18704) = 0u;
          *(_QWORD *)(v0 + 18616) = v429;
          *(_QWORD *)(v0 + 18720) = 0;
          *(_DWORD *)(v0 + 18728) = 134807552;
          v430 = v429;
          sub_23B020598(v34, v0 + 18616);
          sub_23AB7C6B4(v429, 0, 0);
          sub_23AEAD994(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9);
          sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8(v0 + 3952, v0 + 4456, (uint64_t *)&unk_2569E63E0);
          if (sub_23AAFC2A4(v0 + 4456) != 1)
          {
            sub_23AA724E8(v0 + 3952, v0 + 2464, (uint64_t *)&unk_2569E63E0);
            v431 = *(unsigned __int8 *)(v0 + 3553);
            v432 = *(_QWORD *)(v0 + 3472);
            v433 = *(_BYTE *)(v0 + 3480);
            v434 = *(_BYTE *)(v0 + 3552);
            v435 = *(_BYTE *)(v0 + 3554);
            v436 = *(_BYTE *)(v0 + 3576);
            v437 = *(_QWORD *)(v0 + 3648);
            v438 = *(_OWORD *)(v0 + 3864);
            *(_OWORD *)(v0 + 3352) = *(_OWORD *)(v0 + 3848);
            *(_OWORD *)(v0 + 3368) = v438;
            *(_OWORD *)(v0 + 3384) = *(_OWORD *)(v0 + 3880);
            v439 = *(_OWORD *)(v0 + 3800);
            *(_OWORD *)(v0 + 3288) = *(_OWORD *)(v0 + 3784);
            *(_OWORD *)(v0 + 3304) = v439;
            v440 = *(_OWORD *)(v0 + 3832);
            *(_OWORD *)(v0 + 3320) = *(_OWORD *)(v0 + 3816);
            *(_OWORD *)(v0 + 3336) = v440;
            v441 = *(_OWORD *)(v0 + 3736);
            *(_OWORD *)(v0 + 3224) = *(_OWORD *)(v0 + 3720);
            *(_OWORD *)(v0 + 3240) = v441;
            v442 = *(_OWORD *)(v0 + 3768);
            *(_OWORD *)(v0 + 3256) = *(_OWORD *)(v0 + 3752);
            *(_OWORD *)(v0 + 3272) = v442;
            *(_OWORD *)(v0 + 3208) = *(_OWORD *)(v0 + 3704);
            *(_OWORD *)(v0 + 3160) = *(_OWORD *)(v0 + 3656);
            *(_OWORD *)(v0 + 3176) = *(_OWORD *)(v0 + 3672);
            *(_OWORD *)(v0 + 3192) = *(_OWORD *)(v0 + 3688);
            v443 = *(_BYTE *)(v0 + 3896);
            v444 = *(_QWORD *)(v0 + 3904);
            v445 = *(_QWORD *)(v0 + 3912);
            v446 = *(_BYTE *)(v0 + 3936);
            v447 = *(_QWORD *)(v0 + 3944);
            *(_OWORD *)(v0 + 2960) = *(_OWORD *)(v0 + 3456);
            *(_QWORD *)(v0 + 2976) = v432;
            *(_BYTE *)(v0 + 2984) = v433;
            v448 = *(_OWORD *)(v0 + 3504);
            *(_OWORD *)(v0 + 2992) = *(_OWORD *)(v0 + 3488);
            *(_OWORD *)(v0 + 3008) = v448;
            v449 = *(_OWORD *)(v0 + 3536);
            *(_OWORD *)(v0 + 3024) = *(_OWORD *)(v0 + 3520);
            *(_OWORD *)(v0 + 3040) = v449;
            *(_BYTE *)(v0 + 3056) = v434;
            *(_BYTE *)(v0 + 3057) = v431;
            *(_BYTE *)(v0 + 3058) = v435;
            *(_OWORD *)(v0 + 3064) = *(_OWORD *)(v0 + 3560);
            *(_BYTE *)(v0 + 3080) = v436;
            v450 = *(_OWORD *)(v0 + 3600);
            *(_OWORD *)(v0 + 3088) = *(_OWORD *)(v0 + 3584);
            *(_OWORD *)(v0 + 3104) = v450;
            v451 = *(_OWORD *)(v0 + 3632);
            *(_OWORD *)(v0 + 3120) = *(_OWORD *)(v0 + 3616);
            *(_OWORD *)(v0 + 3136) = v451;
            *(_QWORD *)(v0 + 3152) = v437;
            *(_BYTE *)(v0 + 3400) = v443;
            *(_QWORD *)(v0 + 3408) = v444;
            *(_QWORD *)(v0 + 3416) = v445;
            *(_OWORD *)(v0 + 3424) = *(_OWORD *)(v0 + 3920);
            *(_BYTE *)(v0 + 3440) = v446;
            *(_QWORD *)(v0 + 3448) = v447;
            sub_23AEB34A4(v0 + 2464);
            sub_23AAFCF50(v0 + 2960);
            if (v431 != 6 && sub_23AA9F51C(v431, 0))
            {
              if (*(_DWORD *)(v0 + 420) == 3)
              {
                v34 = *(_QWORD *)(v3 - 72);
                v135 = *(_BYTE **)(v0 + 400);
                v169 = *(_QWORD *)(v0 + 320);
              }
              else
              {
                v169 = *(_QWORD *)(v0 + 320);
                v806 = *(id *)v169;
                *(_OWORD *)(v0 + 18504) = xmmword_23B1D3BC0;
                *(_OWORD *)(v0 + 18520) = 0u;
                *(_OWORD *)(v0 + 18536) = 0u;
                *(_OWORD *)(v0 + 18552) = 0u;
                *(_QWORD *)(v0 + 18496) = v806;
                *(_QWORD *)(v0 + 18568) = 0;
                *(_QWORD *)(v0 + 18576) = 983040;
                *(_QWORD *)(v0 + 18584) = 0;
                *(_QWORD *)(v0 + 18600) = 0;
                *(_QWORD *)(v0 + 18592) = 0;
                *(_DWORD *)(v0 + 18607) = 0;
                *(_BYTE *)(v0 + 18611) = 9;
                v807 = v806;
                v34 = *(_QWORD *)(v3 - 72);
                sub_23B020598(v34, v0 + 18496);
                sub_23AB7C6B4(v806, 0, 0);
                sub_23AEAD8A8((void *)3, 0, 0, 0, 0, 0, 0, 0, 0, 15);
                v135 = *(_BYTE **)(v0 + 400);
              }
            }
          }
        }
        if ((sub_23AFFA4F4() & 1) == 0)
        {
          sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8(v0 + 3952, v0 + 4456, (uint64_t *)&unk_2569E63E0);
          if (sub_23AAFC2A4(v0 + 4456) != 1)
          {
            sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
            memcpy((void *)(v0 + 18000), (const void *)(v0 + 3456), 0x1F0uLL);
            if (sub_23B002AF8() && sub_23B0C9B4C(*(_BYTE *)(v0 + 3792)))
            {
              v466 = *(id *)v169;
              *(_OWORD *)(v0 + 17888) = xmmword_23B1DA9B0;
              *(_OWORD *)(v0 + 17904) = 0u;
              *(_OWORD *)(v0 + 17920) = 0u;
              *(_OWORD *)(v0 + 17936) = 0u;
              *(_OWORD *)(v0 + 17952) = 0u;
              *(_OWORD *)(v0 + 17968) = 0u;
              *(_QWORD *)(v0 + 17880) = v466;
              *(_QWORD *)(v0 + 17984) = 0;
              *(_DWORD *)(v0 + 17992) = 134807552;
              sub_23ADF2D34(v0 + 3952, (voidsub_23AEB367C);
              v467 = v466;
              sub_23B020598(v34, v0 + 17880);
              sub_23AB7C6B4(v466, 0, 0);
              sub_23AEAD994((void *)2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9);
              sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
            }
          }
        }
      }
      if (sub_23AA9F3D0(0x2000000000000, v428))
      {
        v468 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if (sub_23AC37B08(*(_BYTE *)(v169 + *(int *)(v468 + 48)), 0))
        {
          sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8(v0 + 3952, v0 + 4456, (uint64_t *)&unk_2569E63E0);
          if (sub_23AAFC2A4(v0 + 4456) != 1)
          {
            sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
            memcpy((void *)(v0 + 17384), (const void *)(v0 + 3456), 0x1F0uLL);
            if (sub_23B002AF8())
            {
              v469 = *(unsigned __int8 *)(v0 + 3664);
              if (v469 != 255)
              {
                *(_QWORD *)(v0 + 464) = *(_QWORD *)(v0 + 3656);
                *(_BYTE *)(v0 + 472) = v469;
                v470 = v169 + *(int *)(*(_QWORD *)(v0 + 376) + 52);
                sub_23AA724E8(v470, v0 + 960, &qword_2542E5050);
                sub_23AA724E8(v0 + 960, v0 + 1968, &qword_2542E5050);
                if (sub_23AAFCF2C(v0 + 1968) != 1
                  && sub_23AC37674(*(_QWORD *)(v470 + 208), 501)
                  && !sub_23AA9F3D0(1, *(_QWORD *)(v0 + 3944)))
                {
                  v808 = *(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 424) + 40) + 240);
                  sub_23ADF2D34(v0 + 3952, (voidsub_23AEB367C);
                  v808(v0 + 464, 1);
                  v233 = v417;
                  if (v417)
                  {
                    sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
                    sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
                    sub_23AA724E8(v0 + 8440, v0 + 2464, (uint64_t *)&unk_2569E63E0);
                    sub_23ADF2D34(v0 + 2464, (voidsub_23AEB1930);
                    sub_23AA724E8(v0 + 8936, v0 + 2960, (uint64_t *)&unk_2569E63E0);
                    sub_23ADF2D34(v0 + 2960, (voidsub_23AEB1930);
                    v31 = *(_QWORD *)(v0 + 320);
                    goto LABEL_345;
                  }
                  if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 48))(*(_QWORD *)(v0 + 56), 1, *(_QWORD *)(v0 + 112)) == 1)
                  {
                    sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
                    sub_23AA8A05C(*(_QWORD *)(v0 + 56), (uint64_t *)&unk_2542E4750);
                  }
                  else
                  {
                    sub_23AA724E8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32), (uint64_t *)&unk_2542E6B00);
                    if ((sub_23AFFA4E8() & 1) == 0)
                    {
LABEL_387:
                      v169 = *(_QWORD *)(v0 + 320);
                      v893 = *(id *)v169;
                      v894 = *(id *)v169;
                      v895 = sub_23ACD8490(0);
                      v896 = sub_23AFD7BC8(v895);
                      swift_bridgeObjectRelease();
                      *(_OWORD *)(v0 + 17272) = xmmword_23B1CFA60;
                      *(_QWORD *)(v0 + 17264) = v893;
                      *(_QWORD *)(v0 + 17288) = v896;
                      *(_OWORD *)(v0 + 17296) = 0u;
                      *(_OWORD *)(v0 + 17312) = 0u;
                      *(_OWORD *)(v0 + 17328) = 0u;
                      *(_OWORD *)(v0 + 17344) = 0u;
                      *(_OWORD *)(v0 + 17360) = 0u;
                      *(_DWORD *)(v0 + 17375) = 0;
                      *(_BYTE *)(v0 + 17379) = 13;
                      v34 = *(_QWORD *)(v3 - 72);
                      sub_23B020598(v34, v0 + 17264);

                      sub_23AA8A05C(*(_QWORD *)(v0 + 32), (uint64_t *)&unk_2542E6B00);
                      sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
                      v417 = v233;
                      v135 = *(_BYTE **)(v0 + 400);
                      goto LABEL_204;
                    }
                    sub_23AA8A05C(*(_QWORD *)(v0 + 32), (uint64_t *)&unk_2542E6B00);
                    sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
                  }
                }
                v34 = *(_QWORD *)(v3 - 72);
                v135 = *(_BYTE **)(v0 + 400);
                v169 = *(_QWORD *)(v0 + 320);
              }
            }
          }
        }
      }
LABEL_204:
      v334 = *(_QWORD *)(v0 + 9432);
      if (!sub_23AA9F3D0(0x100000000000, v334)
        || *(_BYTE *)(v169 + *(int *)(*(_QWORD *)(v0 + 376) + 48) + *(int *)(*(_QWORD *)(v0 + 216) + 64)) != 1)
      {
LABEL_210:
        if (sub_23AA9F3D0(2, v334))
        {
          sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8(v0 + 3952, v0 + 4456, (uint64_t *)&unk_2569E63E0);
          if (sub_23AAFC2A4(v0 + 4456) != 1)
          {
            sub_23AA724E8(v0 + 3952, v0 + 2464, (uint64_t *)&unk_2569E63E0);
            v500 = *(unsigned __int8 *)(v0 + 3688);
            v501 = *(_OWORD *)(v0 + 3632);
            *(_OWORD *)(v0 + 3120) = *(_OWORD *)(v0 + 3616);
            *(_OWORD *)(v0 + 3136) = v501;
            v502 = *(_OWORD *)(v0 + 3568);
            *(_OWORD *)(v0 + 3056) = *(_OWORD *)(v0 + 3552);
            *(_OWORD *)(v0 + 3072) = v502;
            v503 = *(_OWORD *)(v0 + 3584);
            *(_OWORD *)(v0 + 3104) = *(_OWORD *)(v0 + 3600);
            *(_OWORD *)(v0 + 3088) = v503;
            v504 = *(_OWORD *)(v0 + 3504);
            *(_OWORD *)(v0 + 2992) = *(_OWORD *)(v0 + 3488);
            *(_OWORD *)(v0 + 3008) = v504;
            v505 = *(_OWORD *)(v0 + 3520);
            *(_OWORD *)(v0 + 3040) = *(_OWORD *)(v0 + 3536);
            *(_OWORD *)(v0 + 3024) = v505;
            v506 = *(_OWORD *)(v0 + 3456);
            *(_OWORD *)(v0 + 2976) = *(_OWORD *)(v0 + 3472);
            *(_OWORD *)(v0 + 2960) = v506;
            v507 = *(_QWORD *)(v0 + 3656);
            v508 = *(_BYTE *)(v0 + 3664);
            v509 = *(_WORD *)(v0 + 3792);
            v510 = *(char **)(v0 + 120);
            v511 = *v510;
            v512 = *(_QWORD *)(v0 + 3800);
            v513 = *(_QWORD *)(v0 + 3808);
            v514 = *(_BYTE *)(v0 + 3816);
            v515 = *(_QWORD *)(v0 + 3888);
            v516 = *(_BYTE *)(v0 + 3896);
            v517 = *(_QWORD *)(v0 + 3904);
            v518 = *(_QWORD *)(v0 + 3912);
            LOBYTE(v510) = v510[142];
            v519 = *(_QWORD *)(v0 + 3944);
            *(_QWORD *)(v0 + 3152) = *(_QWORD *)(v0 + 3648);
            *(_QWORD *)(v0 + 3160) = v507;
            *(_BYTE *)(v0 + 3168) = v508;
            *(_OWORD *)(v0 + 3176) = *(_OWORD *)(v0 + 3672);
            *(_BYTE *)(v0 + 3192) = v500;
            v520 = *(_OWORD *)(v0 + 3712);
            *(_OWORD *)(v0 + 3200) = *(_OWORD *)(v0 + 3696);
            *(_OWORD *)(v0 + 3216) = v520;
            v521 = *(_OWORD *)(v0 + 3744);
            *(_OWORD *)(v0 + 3232) = *(_OWORD *)(v0 + 3728);
            *(_OWORD *)(v0 + 3248) = v521;
            v522 = *(_OWORD *)(v0 + 3776);
            *(_OWORD *)(v0 + 3264) = *(_OWORD *)(v0 + 3760);
            *(_OWORD *)(v0 + 3280) = v522;
            *(_WORD *)(v0 + 3296) = v509;
            *(_BYTE *)(v0 + 3298) = v511;
            *(_QWORD *)(v0 + 3304) = v512;
            *(_QWORD *)(v0 + 3312) = v513;
            *(_BYTE *)(v0 + 3320) = v514;
            v523 = *(_OWORD *)(v0 + 3840);
            *(_OWORD *)(v0 + 3328) = *(_OWORD *)(v0 + 3824);
            *(_OWORD *)(v0 + 3344) = v523;
            v524 = *(_OWORD *)(v0 + 3872);
            *(_OWORD *)(v0 + 3360) = *(_OWORD *)(v0 + 3856);
            *(_OWORD *)(v0 + 3376) = v524;
            *(_QWORD *)(v0 + 3392) = v515;
            *(_BYTE *)(v0 + 3400) = v516;
            *(_QWORD *)(v0 + 3408) = v517;
            *(_QWORD *)(v0 + 3416) = v518;
            *(_OWORD *)(v0 + 3424) = *(_OWORD *)(v0 + 3920);
            *(_BYTE *)(v0 + 3440) = (_BYTE)v510;
            *(_QWORD *)(v0 + 3448) = v519;
            sub_23AEB34A4(v0 + 2464);
            sub_23AAFCF50(v0 + 2960);
            if (v500 != 3 && sub_23AA9F51C(v500, 2) && (v230 & 1) == 0)
            {
              v525 = *(id *)v169;
              *(_OWORD *)(v0 + 16536) = xmmword_23B1DAA30;
              *(_QWORD *)(v0 + 16528) = v525;
              v527 = *(void **)(v0 + 256);
              v526 = *(_QWORD *)(v0 + 264);
              *(_QWORD *)(v0 + 16552) = v527;
              *(_OWORD *)(v0 + 16568) = 0u;
              *(_OWORD *)(v0 + 16584) = 0u;
              *(_OWORD *)(v0 + 16600) = 0u;
              *(_OWORD *)(v0 + 16616) = 0u;
              *(_QWORD *)(v0 + 16560) = v526;
              *(_QWORD *)(v0 + 16632) = 0;
              *(_DWORD *)(v0 + 16640) = 135004160;
              v528 = v525;
              sub_23B020598(v34, v0 + 16528);
              sub_23AB7C6B4(v525, 0, 0);
              sub_23AEAD994((void *)0x302, v527, v526, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12);
            }
          }
        }
        if (!*(_DWORD *)(v0 + 420))
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
          v529 = swift_allocObject();
          v530 = sub_23B1A1F64(v529, 2);
          *v531 = xmmword_23B1CA760;
          v532 = nullsub_1(v530);
          v533 = sub_23AFD7BC8(v532);
          swift_bridgeObjectRelease();
          if ((sub_23AA9F56C(v533, v334) & 1) == 0)
          {
            sub_23AE898B0(v169, *(_QWORD *)(v0 + 424), v34);
            if (v417)
            {
              v534 = *(_QWORD *)(v0 + 328);
LABEL_232:
              sub_23AA8A05C(v534, (uint64_t *)&unk_2542E4760);
              sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
              sub_23ADF2D34(v0 + 3952, (voidsub_23AEB1930);
              sub_23AA724E8(v0 + 8936, v0 + 4456, (uint64_t *)&unk_2569E63E0);
              sub_23ADF2D34(v0 + 4456, (voidsub_23AEB1930);
              v31 = v169;
              goto LABEL_345;
            }
          }
        }
        continue;
      }
      *(_QWORD *)(v0 + 432) = v334;
      v471 = v417;
      v472 = *(id *)v169;
      *(_OWORD *)(v0 + 17152) = xmmword_23B1CFA60;
      *(_OWORD *)(v0 + 17168) = 0u;
      *(_OWORD *)(v0 + 17184) = 0u;
      *(_OWORD *)(v0 + 17200) = 0u;
      *(_QWORD *)(v0 + 17144) = v472;
      *(_QWORD *)(v0 + 17216) = 0;
      *(_QWORD *)(v0 + 17224) = 327680;
      *(_QWORD *)(v0 + 17232) = 0;
      *(_QWORD *)(v0 + 17248) = 0;
      *(_QWORD *)(v0 + 17240) = 0;
      *(_DWORD *)(v0 + 17255) = 0;
      *(_BYTE *)(v0 + 17259) = 9;
      v473 = v472;
      sub_23B020598(v34, v0 + 17144);
      sub_23AB7C6B4(v472, 0, 0);
      sub_23AEAD8A8((void *)1, 0, 0, 0, 0, 0, 0, 0, 0, 5);
      v474 = *(id *)v169;
      v475 = sub_23ADA8168(v474);
      v477 = v476;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF0);
      swift_allocObject();
      v478 = sub_23B053454(v474, v475, v477, 0x2000000);

      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 144))(v478);
      swift_release();
      sub_23AA724E8(v0 + 8440, v0 + 16648, (uint64_t *)&unk_2569E63E0);
      sub_23AA724E8(v0 + 8440, v0 + 4456, (uint64_t *)&unk_2569E63E0);
      sub_23AA724E8(v0 + 16648, v0 + 3952, (uint64_t *)&unk_2569E63E0);
      sub_23AA724E8(v0 + 16648, v0 + 26024, (uint64_t *)&unk_2569E63E0);
      if (sub_23AAFC2A4(v0 + 26024) != 1)
      {
        sub_23AA724E8(v0 + 4456, v0 + 2960, (uint64_t *)&unk_2569E63E0);
        v479 = *(unsigned __int8 *)(v0 + 4049);
        v480 = *(_QWORD *)(v0 + 3968);
        v481 = *(_BYTE *)(v0 + 3976);
        v482 = *(_BYTE *)(v0 + 4048);
        v483 = *(_BYTE *)(v0 + 4050);
        v484 = *(_BYTE *)(v0 + 4072);
        v485 = *(_QWORD *)(v0 + 4144);
        v486 = *(_OWORD *)(v0 + 4360);
        *(_OWORD *)(v0 + 3848) = *(_OWORD *)(v0 + 4344);
        *(_OWORD *)(v0 + 3864) = v486;
        *(_OWORD *)(v0 + 3880) = *(_OWORD *)(v0 + 4376);
        v487 = *(_OWORD *)(v0 + 4296);
        *(_OWORD *)(v0 + 3784) = *(_OWORD *)(v0 + 4280);
        *(_OWORD *)(v0 + 3800) = v487;
        v488 = *(_OWORD *)(v0 + 4328);
        *(_OWORD *)(v0 + 3816) = *(_OWORD *)(v0 + 4312);
        *(_OWORD *)(v0 + 3832) = v488;
        v489 = *(_OWORD *)(v0 + 4232);
        *(_OWORD *)(v0 + 3720) = *(_OWORD *)(v0 + 4216);
        *(_OWORD *)(v0 + 3736) = v489;
        v490 = *(_OWORD *)(v0 + 4264);
        *(_OWORD *)(v0 + 3752) = *(_OWORD *)(v0 + 4248);
        *(_OWORD *)(v0 + 3768) = v490;
        *(_OWORD *)(v0 + 3704) = *(_OWORD *)(v0 + 4200);
        *(_OWORD *)(v0 + 3656) = *(_OWORD *)(v0 + 4152);
        *(_OWORD *)(v0 + 3672) = *(_OWORD *)(v0 + 4168);
        *(_OWORD *)(v0 + 3688) = *(_OWORD *)(v0 + 4184);
        v491 = *(_BYTE *)(v0 + 4392);
        v492 = *(_QWORD *)(v0 + 4400);
        v493 = *(_QWORD *)(v0 + 4408);
        v494 = *(_BYTE *)(v0 + 4432);
        v495 = *(_QWORD *)(v0 + 4440);
        *(_OWORD *)(v0 + 3456) = *(_OWORD *)(v0 + 3952);
        *(_QWORD *)(v0 + 3472) = v480;
        *(_BYTE *)(v0 + 3480) = v481;
        v496 = *(_OWORD *)(v0 + 4000);
        *(_OWORD *)(v0 + 3488) = *(_OWORD *)(v0 + 3984);
        *(_OWORD *)(v0 + 3504) = v496;
        v497 = *(_OWORD *)(v0 + 4032);
        *(_OWORD *)(v0 + 3520) = *(_OWORD *)(v0 + 4016);
        *(_OWORD *)(v0 + 3536) = v497;
        *(_BYTE *)(v0 + 3552) = v482;
        *(_BYTE *)(v0 + 3553) = v479;
        *(_BYTE *)(v0 + 3554) = v483;
        *(_OWORD *)(v0 + 3560) = *(_OWORD *)(v0 + 4056);
        *(_BYTE *)(v0 + 3576) = v484;
        v498 = *(_OWORD *)(v0 + 4096);
        *(_OWORD *)(v0 + 3584) = *(_OWORD *)(v0 + 4080);
        *(_OWORD *)(v0 + 3600) = v498;
        v499 = *(_OWORD *)(v0 + 4128);
        *(_OWORD *)(v0 + 3616) = *(_OWORD *)(v0 + 4112);
        *(_OWORD *)(v0 + 3632) = v499;
        *(_QWORD *)(v0 + 3648) = v485;
        *(_BYTE *)(v0 + 3896) = v491;
        *(_QWORD *)(v0 + 3904) = v492;
        *(_QWORD *)(v0 + 3912) = v493;
        *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v0 + 4416);
        *(_BYTE *)(v0 + 3936) = v494;
        *(_QWORD *)(v0 + 3944) = v495;
        sub_23AEB34A4(v0 + 2960);
        sub_23AAFCF50(v0 + 3456);
        v417 = v471;
        if (v479 == 6)
          goto LABEL_209;
        sub_23AE1CB2C(*(void **)v169, v0 + 16648, *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 424), v34);
        if (v471)
        {
          sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
          sub_23AA724E8(v0 + 8440, v0 + 1968, (uint64_t *)&unk_2569E63E0);
          sub_23ADF2D34(v0 + 1968, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB1930);
          sub_23AA724E8(v0 + 8936, v0 + 2464, (uint64_t *)&unk_2569E63E0);
          sub_23ADF2D34(v0 + 2464, (voidsub_23AEB1930);
          v31 = v169;
          goto LABEL_345;
        }
      }
      v417 = v471;
LABEL_209:
      v334 = *(_QWORD *)(v0 + 432);
      goto LABEL_210;
    }
    break;
  }
  v293 = v417;
  v836 = *(_QWORD *)(v0 + 9432);
  if (!sub_23AA9F3D0(8, v836))
    goto LABEL_367;
  v837 = **(void ***)(v0 + 320);
  *(_QWORD *)(v0 + 19224) = v837;
  *(_QWORD *)(v0 + 19232) = 0;
  *(_QWORD *)(v0 + 19248) = 0;
  *(_QWORD *)(v0 + 19240) = 0;
  *(_OWORD *)(v0 + 19264) = 0u;
  *(_OWORD *)(v0 + 19280) = 0u;
  *(_QWORD *)(v0 + 19256) = 0xB000000000000000;
  *(_QWORD *)(v0 + 19296) = 0;
  *(_QWORD *)(v0 + 19304) = 851968;
  *(_QWORD *)(v0 + 19312) = 0;
  *(_QWORD *)(v0 + 19328) = 0;
  *(_QWORD *)(v0 + 19320) = 0;
  *(_DWORD *)(v0 + 19335) = 0;
  *(_BYTE *)(v0 + 19339) = 9;
  v838 = v837;
  sub_23B020598(v34, v0 + 19224);
  sub_23AB7C6B4(v837, 0, 0);
  sub_23AEAD8A8(0, 0, 0xB000000000000000, 0, 0, 0, 0, 0, 0, 13);
  if (v135[32] != 1)
  {
LABEL_367:
    v417 = v293;
    v169 = *(_QWORD *)(v0 + 320);
    goto LABEL_172;
  }
  *(_DWORD *)(v0 + 384) = (_DWORD)v230;
  v839 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  if ((sub_23AFA7404(1, *(_BYTE *)(*(_QWORD *)(v0 + 320) + *(int *)(v839 + 48))) & 1) == 0)
    goto LABEL_366;
  sub_23AA724E8(v0 + 8440, v0 + 3952, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 3952, v0 + 4456, (uint64_t *)&unk_2569E63E0);
  if (sub_23AAFC2A4(v0 + 4456) != 1)
  {
    v840 = *(_QWORD *)(v0 + 3472);
    v841 = *(_BYTE *)(v0 + 3480);
    v842 = *(_BYTE *)(v0 + 3553);
    v843 = *(_BYTE *)(v0 + 3554);
    v844 = *(_BYTE *)(v0 + 3576);
    v845 = *(_QWORD *)(v0 + 3648);
    v846 = *(_OWORD *)(v0 + 3864);
    *(_OWORD *)(v0 + 2856) = *(_OWORD *)(v0 + 3848);
    *(_OWORD *)(v0 + 2872) = v846;
    *(_OWORD *)(v0 + 2888) = *(_OWORD *)(v0 + 3880);
    v847 = *(_OWORD *)(v0 + 3800);
    *(_OWORD *)(v0 + 2792) = *(_OWORD *)(v0 + 3784);
    *(_OWORD *)(v0 + 2808) = v847;
    v848 = *(_OWORD *)(v0 + 3832);
    *(_OWORD *)(v0 + 2824) = *(_OWORD *)(v0 + 3816);
    *(_OWORD *)(v0 + 2840) = v848;
    v849 = *(_OWORD *)(v0 + 3736);
    *(_OWORD *)(v0 + 2728) = *(_OWORD *)(v0 + 3720);
    *(_OWORD *)(v0 + 2744) = v849;
    v850 = *(_OWORD *)(v0 + 3768);
    *(_OWORD *)(v0 + 2760) = *(_OWORD *)(v0 + 3752);
    *(_OWORD *)(v0 + 2776) = v850;
    *(_OWORD *)(v0 + 2712) = *(_OWORD *)(v0 + 3704);
    *(_OWORD *)(v0 + 2664) = *(_OWORD *)(v0 + 3656);
    *(_OWORD *)(v0 + 2680) = *(_OWORD *)(v0 + 3672);
    *(_OWORD *)(v0 + 2696) = *(_OWORD *)(v0 + 3688);
    v851 = *(_BYTE *)(v0 + 3552);
    v852 = *(_BYTE *)(v0 + 3896);
    v853 = *(_QWORD *)(v0 + 3904);
    v854 = *(_QWORD *)(v0 + 3912);
    v855 = *(_BYTE *)(v0 + 3936);
    v856 = *(_QWORD *)(v0 + 3944);
    *(_OWORD *)(v0 + 2464) = *(_OWORD *)(v0 + 3456);
    *(_QWORD *)(v0 + 2480) = v840;
    *(_BYTE *)(v0 + 2488) = v841;
    v857 = *(_OWORD *)(v0 + 3504);
    *(_OWORD *)(v0 + 2496) = *(_OWORD *)(v0 + 3488);
    *(_OWORD *)(v0 + 2512) = v857;
    v858 = *(_OWORD *)(v0 + 3536);
    *(_OWORD *)(v0 + 2528) = *(_OWORD *)(v0 + 3520);
    *(_OWORD *)(v0 + 2544) = v858;
    *(_BYTE *)(v0 + 2560) = v851;
    *(_BYTE *)(v0 + 2561) = v842;
    *(_BYTE *)(v0 + 2562) = v843;
    *(_OWORD *)(v0 + 2568) = *(_OWORD *)(v0 + 3560);
    *(_BYTE *)(v0 + 2584) = v844;
    v859 = *(_OWORD *)(v0 + 3600);
    *(_OWORD *)(v0 + 2592) = *(_OWORD *)(v0 + 3584);
    *(_OWORD *)(v0 + 2608) = v859;
    v860 = *(_OWORD *)(v0 + 3632);
    *(_OWORD *)(v0 + 2624) = *(_OWORD *)(v0 + 3616);
    *(_OWORD *)(v0 + 2640) = v860;
    *(_QWORD *)(v0 + 2656) = v845;
    *(_BYTE *)(v0 + 2904) = v852;
    *(_QWORD *)(v0 + 2912) = v853;
    *(_QWORD *)(v0 + 2920) = v854;
    *(_OWORD *)(v0 + 2928) = *(_OWORD *)(v0 + 3920);
    *(_BYTE *)(v0 + 2944) = v855;
    *(_QWORD *)(v0 + 2952) = v856;
    sub_23AA724E8(v0 + 3952, v0 + 2960, (uint64_t *)&unk_2569E63E0);
    sub_23AEB34A4(v0 + 2960);
    sub_23AAFCF50(v0 + 2464);
    if (sub_23AA9F51C(v851, 0))
      goto LABEL_366;
  }
  if (sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v0 + 320)+ *(int *)(*(_QWORD *)(v0 + 376) + 48)+ *(int *)(*(_QWORD *)(v0 + 216) + 84)), 0))
  {
LABEL_366:
    v417 = v293;
    v34 = *(_QWORD *)(v3 - 72);
    v135 = *(_BYTE **)(v0 + 400);
    v169 = *(_QWORD *)(v0 + 320);
    LODWORD(v230) = *(_DWORD *)(v0 + 384);
    goto LABEL_172;
  }
  sub_23AA724E8(*(_QWORD *)(v0 + 328) + *(int *)(*(_QWORD *)(v0 + 376) + 52), v0 + 1472, &qword_2542E5050);
  sub_23AA724E8(v0 + 1472, v0 + 1720, &qword_2542E5050);
  v861 = sub_23AAFCF2C(v0 + 1720);
  v862 = v861 == 1;
  if (v861 == 1)
  {
    v289 = 0;
  }
  else
  {
    v863 = *(_OWORD *)(v0 + 1928);
    *(_OWORD *)(v0 + 19168) = *(_OWORD *)(v0 + 1912);
    *(_OWORD *)(v0 + 19184) = v863;
    *(_OWORD *)(v0 + 19200) = *(_OWORD *)(v0 + 1944);
    *(_QWORD *)(v0 + 19216) = *(_QWORD *)(v0 + 1960);
    v864 = *(_OWORD *)(v0 + 1864);
    *(_OWORD *)(v0 + 19104) = *(_OWORD *)(v0 + 1848);
    *(_OWORD *)(v0 + 19120) = v864;
    v865 = *(_OWORD *)(v0 + 1896);
    *(_OWORD *)(v0 + 19136) = *(_OWORD *)(v0 + 1880);
    *(_OWORD *)(v0 + 19152) = v865;
    v866 = *(_OWORD *)(v0 + 1800);
    *(_OWORD *)(v0 + 19040) = *(_OWORD *)(v0 + 1784);
    *(_OWORD *)(v0 + 19056) = v866;
    v867 = *(_OWORD *)(v0 + 1832);
    *(_OWORD *)(v0 + 19072) = *(_OWORD *)(v0 + 1816);
    *(_OWORD *)(v0 + 19088) = v867;
    v868 = *(_OWORD *)(v0 + 1736);
    *(_OWORD *)(v0 + 18976) = *(_OWORD *)(v0 + 1720);
    *(_OWORD *)(v0 + 18992) = v868;
    v869 = *(_OWORD *)(v0 + 1768);
    *(_OWORD *)(v0 + 19008) = *(_OWORD *)(v0 + 1752);
    *(_OWORD *)(v0 + 19024) = v869;
    v870 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 424) + 512);
    sub_23AA724E8(v0 + 1472, v0 + 960, &qword_2542E5050);
    v871 = sub_23AC42B28(v0 + 960);
    v872 = v870(v871);
    v873 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
    v874 = 1;
    v875 = sub_23AC37B08(*(_BYTE *)(*(_QWORD *)(v0 + 320) + *(int *)(v873 + 48)), 1);
    sub_23AA724E8(v0 + 3952, v0 + 2960, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
    v876 = sub_23AAFC2A4(v0 + 3456);
    if (v876 != 1)
    {
      v877 = *(_QWORD *)(v0 + 3448);
      v878 = *(_OWORD *)(v0 + 3136);
      *(_OWORD *)(v0 + 2128) = *(_OWORD *)(v0 + 3120);
      *(_OWORD *)(v0 + 2144) = v878;
      *(_QWORD *)(v0 + 2160) = *(_QWORD *)(v0 + 3152);
      v879 = *(_OWORD *)(v0 + 3072);
      *(_OWORD *)(v0 + 2064) = *(_OWORD *)(v0 + 3056);
      *(_OWORD *)(v0 + 2080) = v879;
      v880 = *(_OWORD *)(v0 + 3088);
      *(_OWORD *)(v0 + 2112) = *(_OWORD *)(v0 + 3104);
      *(_OWORD *)(v0 + 2096) = v880;
      v881 = *(_OWORD *)(v0 + 3008);
      *(_OWORD *)(v0 + 2000) = *(_OWORD *)(v0 + 2992);
      *(_OWORD *)(v0 + 2016) = v881;
      v882 = *(_OWORD *)(v0 + 3024);
      *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 3040);
      *(_OWORD *)(v0 + 2032) = v882;
      v883 = *(_OWORD *)(v0 + 2960);
      *(_OWORD *)(v0 + 1984) = *(_OWORD *)(v0 + 2976);
      *(_OWORD *)(v0 + 1968) = v883;
      v884 = *(_OWORD *)(v0 + 3368);
      *(_OWORD *)(v0 + 2360) = *(_OWORD *)(v0 + 3352);
      *(_OWORD *)(v0 + 2376) = v884;
      *(_OWORD *)(v0 + 2392) = *(_OWORD *)(v0 + 3384);
      v885 = *(_OWORD *)(v0 + 3304);
      *(_OWORD *)(v0 + 2296) = *(_OWORD *)(v0 + 3288);
      *(_OWORD *)(v0 + 2312) = v885;
      v886 = *(_OWORD *)(v0 + 3336);
      *(_OWORD *)(v0 + 2328) = *(_OWORD *)(v0 + 3320);
      *(_OWORD *)(v0 + 2344) = v886;
      v887 = *(_OWORD *)(v0 + 3240);
      *(_OWORD *)(v0 + 2232) = *(_OWORD *)(v0 + 3224);
      *(_OWORD *)(v0 + 2248) = v887;
      v888 = *(_OWORD *)(v0 + 3272);
      *(_OWORD *)(v0 + 2264) = *(_OWORD *)(v0 + 3256);
      *(_OWORD *)(v0 + 2280) = v888;
      *(_OWORD *)(v0 + 2216) = *(_OWORD *)(v0 + 3208);
      *(_OWORD *)(v0 + 2168) = *(_OWORD *)(v0 + 3160);
      *(_OWORD *)(v0 + 2184) = *(_OWORD *)(v0 + 3176);
      *(_OWORD *)(v0 + 2200) = *(_OWORD *)(v0 + 3192);
      v889 = *(_QWORD *)(v0 + 3408);
      v890 = *(_QWORD *)(v0 + 3416);
      v891 = *(_BYTE *)(v0 + 3440);
      *(_BYTE *)(v0 + 2408) = *(_BYTE *)(v0 + 3400);
      *(_QWORD *)(v0 + 2416) = v889;
      *(_QWORD *)(v0 + 2424) = v890;
      *(_OWORD *)(v0 + 2432) = *(_OWORD *)(v0 + 3424);
      *(_BYTE *)(v0 + 2448) = v891;
      *(_QWORD *)(v0 + 2456) = v877;
      sub_23AA724E8(v0 + 3952, v0 + 2464, (uint64_t *)&unk_2569E63E0);
      sub_23AEB34A4(v0 + 2464);
      sub_23AAFCF50(v0 + 1968);
      v874 = sub_23AA9F3D0(1, v877);
    }
    v289 = sub_23AF9679C(v872 & 1, v875, v874);
    sub_23AAB7E4C((_QWORD *)(v0 + 1472), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  }
  if (sub_23AA9F3D0(2, v836))
  {
    sub_23AA724E8(v0 + 1472, v0 + 960, &qword_2542E5050);
    if (sub_23AAFCF2C(v0 + 960) != 1 && sub_23AC37674(*(_QWORD *)(v0 + 1168), 0))
    {
      (*(void (**)(_QWORD))(**(_QWORD **)(v0 + 400) + 264))(*(_QWORD *)(v0 + 408));
      if (v293)
      {
        sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
        sub_23AA724E8(v0 + 8440, v0 + 2960, (uint64_t *)&unk_2569E63E0);
        sub_23ADF2D34(v0 + 2960, (voidsub_23AEB1930);
        sub_23AA724E8(v0 + 8936, v0 + 3456, (uint64_t *)&unk_2569E63E0);
        v613 = v0 + 3456;
        goto LABEL_267;
      }
      sub_23AA724E8(v0 + 9448, v0 + 9944, &qword_2542E5050);
      if (sub_23AAFCF2C(v0 + 9944) != 1)
      {
        v897 = *(_OWORD *)(v0 + 10152);
        *(_OWORD *)(v0 + 10384) = *(_OWORD *)(v0 + 10136);
        *(_OWORD *)(v0 + 10400) = v897;
        *(_OWORD *)(v0 + 10416) = *(_OWORD *)(v0 + 10168);
        *(_QWORD *)(v0 + 10432) = *(_QWORD *)(v0 + 10184);
        v898 = *(_OWORD *)(v0 + 10088);
        *(_OWORD *)(v0 + 10320) = *(_OWORD *)(v0 + 10072);
        *(_OWORD *)(v0 + 10336) = v898;
        v899 = *(_OWORD *)(v0 + 10120);
        *(_OWORD *)(v0 + 10352) = *(_OWORD *)(v0 + 10104);
        *(_OWORD *)(v0 + 10368) = v899;
        v900 = *(_OWORD *)(v0 + 10024);
        *(_OWORD *)(v0 + 10256) = *(_OWORD *)(v0 + 10008);
        *(_OWORD *)(v0 + 10272) = v900;
        v901 = *(_OWORD *)(v0 + 10056);
        *(_OWORD *)(v0 + 10288) = *(_OWORD *)(v0 + 10040);
        *(_OWORD *)(v0 + 10304) = v901;
        v902 = *(_OWORD *)(v0 + 9960);
        *(_OWORD *)(v0 + 10192) = *(_OWORD *)(v0 + 9944);
        *(_OWORD *)(v0 + 10208) = v902;
        v903 = *(_OWORD *)(v0 + 9992);
        *(_OWORD *)(v0 + 10224) = *(_OWORD *)(v0 + 9976);
        *(_OWORD *)(v0 + 10240) = v903;
        v904 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 424) + 512))();
        v905 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        v906 = 1;
        v907 = sub_23AC37B08(*(_BYTE *)(*(_QWORD *)(v0 + 320) + *(int *)(v905 + 48)), 1);
        sub_23AA724E8(v0 + 3952, v0 + 2960, (uint64_t *)&unk_2569E63E0);
        sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
        if (sub_23AAFC2A4(v0 + 3456) != 1)
        {
          v908 = *(_QWORD *)(v0 + 3448);
          v909 = *(_OWORD *)(v0 + 3136);
          *(_OWORD *)(v0 + 2128) = *(_OWORD *)(v0 + 3120);
          *(_OWORD *)(v0 + 2144) = v909;
          *(_QWORD *)(v0 + 2160) = *(_QWORD *)(v0 + 3152);
          v910 = *(_OWORD *)(v0 + 3072);
          *(_OWORD *)(v0 + 2064) = *(_OWORD *)(v0 + 3056);
          *(_OWORD *)(v0 + 2080) = v910;
          v911 = *(_OWORD *)(v0 + 3088);
          *(_OWORD *)(v0 + 2112) = *(_OWORD *)(v0 + 3104);
          *(_OWORD *)(v0 + 2096) = v911;
          v912 = *(_OWORD *)(v0 + 3008);
          *(_OWORD *)(v0 + 2000) = *(_OWORD *)(v0 + 2992);
          *(_OWORD *)(v0 + 2016) = v912;
          v913 = *(_OWORD *)(v0 + 3024);
          *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 3040);
          *(_OWORD *)(v0 + 2032) = v913;
          v914 = *(_OWORD *)(v0 + 2960);
          *(_OWORD *)(v0 + 1984) = *(_OWORD *)(v0 + 2976);
          *(_OWORD *)(v0 + 1968) = v914;
          v915 = *(_OWORD *)(v0 + 3368);
          *(_OWORD *)(v0 + 2360) = *(_OWORD *)(v0 + 3352);
          *(_OWORD *)(v0 + 2376) = v915;
          *(_OWORD *)(v0 + 2392) = *(_OWORD *)(v0 + 3384);
          v916 = *(_OWORD *)(v0 + 3304);
          *(_OWORD *)(v0 + 2296) = *(_OWORD *)(v0 + 3288);
          *(_OWORD *)(v0 + 2312) = v916;
          v917 = *(_OWORD *)(v0 + 3336);
          *(_OWORD *)(v0 + 2328) = *(_OWORD *)(v0 + 3320);
          *(_OWORD *)(v0 + 2344) = v917;
          v918 = *(_OWORD *)(v0 + 3240);
          *(_OWORD *)(v0 + 2232) = *(_OWORD *)(v0 + 3224);
          *(_OWORD *)(v0 + 2248) = v918;
          v919 = *(_OWORD *)(v0 + 3272);
          *(_OWORD *)(v0 + 2264) = *(_OWORD *)(v0 + 3256);
          *(_OWORD *)(v0 + 2280) = v919;
          *(_OWORD *)(v0 + 2216) = *(_OWORD *)(v0 + 3208);
          *(_OWORD *)(v0 + 2168) = *(_OWORD *)(v0 + 3160);
          *(_OWORD *)(v0 + 2184) = *(_OWORD *)(v0 + 3176);
          *(_OWORD *)(v0 + 2200) = *(_OWORD *)(v0 + 3192);
          v920 = *(_QWORD *)(v0 + 3408);
          v921 = *(_QWORD *)(v0 + 3416);
          v922 = *(_BYTE *)(v0 + 3440);
          *(_BYTE *)(v0 + 2408) = *(_BYTE *)(v0 + 3400);
          *(_QWORD *)(v0 + 2416) = v920;
          *(_QWORD *)(v0 + 2424) = v921;
          *(_OWORD *)(v0 + 2432) = *(_OWORD *)(v0 + 3424);
          *(_BYTE *)(v0 + 2448) = v922;
          *(_QWORD *)(v0 + 2456) = v908;
          sub_23AA724E8(v0 + 3952, v0 + 2464, (uint64_t *)&unk_2569E63E0);
          sub_23AEB34A4(v0 + 2464);
          sub_23AAFCF50(v0 + 1968);
          v906 = sub_23AA9F3D0(1, v908);
        }
        v289 = sub_23AF9679C(v904 & 1, v907, v906);
        sub_23AAB7E4C((_QWORD *)(v0 + 9448), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
        v862 = 0;
      }
    }
  }
  v923 = (*(uint64_t (**)(void))(v0 + 368))();
  if (!sub_23AA9F3D0(4096, v923))
  {
    if (v862)
      goto LABEL_366;
    goto LABEL_401;
  }
  if (v862)
    goto LABEL_366;
  if (!sub_23AC37674(v289, 1003) && !sub_23AC37674(v289, 502))
    goto LABEL_401;
  sub_23AA724E8(v0 + 3952, v0 + 2960, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8(v0 + 3952, v0 + 3456, (uint64_t *)&unk_2569E63E0);
  if (sub_23AAFC2A4(v0 + 3456) == 1)
    goto LABEL_401;
  sub_23AA724E8(v0 + 3952, v0 + 1968, (uint64_t *)&unk_2569E63E0);
  v924 = *(unsigned __int8 *)(v0 + 3168);
  v925 = *(_OWORD *)(v0 + 3136);
  *(_OWORD *)(v0 + 2624) = *(_OWORD *)(v0 + 3120);
  *(_OWORD *)(v0 + 2640) = v925;
  v926 = *(_QWORD *)(v0 + 3160);
  v927 = *(_QWORD *)(v0 + 3152);
  v928 = *(_OWORD *)(v0 + 3072);
  *(_OWORD *)(v0 + 2560) = *(_OWORD *)(v0 + 3056);
  *(_OWORD *)(v0 + 2576) = v928;
  v929 = *(_OWORD *)(v0 + 3088);
  *(_OWORD *)(v0 + 2608) = *(_OWORD *)(v0 + 3104);
  *(_OWORD *)(v0 + 2592) = v929;
  v930 = *(_OWORD *)(v0 + 3008);
  *(_OWORD *)(v0 + 2496) = *(_OWORD *)(v0 + 2992);
  *(_OWORD *)(v0 + 2512) = v930;
  v931 = *(_OWORD *)(v0 + 3024);
  *(_OWORD *)(v0 + 2544) = *(_OWORD *)(v0 + 3040);
  *(_OWORD *)(v0 + 2528) = v931;
  v932 = *(_OWORD *)(v0 + 2960);
  *(_OWORD *)(v0 + 2480) = *(_OWORD *)(v0 + 2976);
  *(_OWORD *)(v0 + 2464) = v932;
  v933 = *(_BYTE *)(v0 + 3192);
  v934 = *(_WORD *)(v0 + 3296);
  v935 = *(char **)(v0 + 16);
  v936 = *v935;
  v937 = *(_QWORD *)(v0 + 3304);
  v938 = *(_QWORD *)(v0 + 3312);
  v939 = *(_BYTE *)(v0 + 3320);
  v940 = *(_QWORD *)(v0 + 3392);
  v941 = *(_BYTE *)(v0 + 3400);
  v942 = *(_QWORD *)(v0 + 3408);
  v943 = *(_QWORD *)(v0 + 3416);
  LOBYTE(v935) = v935[142];
  v944 = *(_QWORD *)(v0 + 3448);
  *(_QWORD *)(v0 + 2656) = v927;
  *(_QWORD *)(v0 + 2664) = v926;
  *(_BYTE *)(v0 + 2672) = v924;
  *(_OWORD *)(v0 + 2680) = *(_OWORD *)(v0 + 3176);
  *(_BYTE *)(v0 + 2696) = v933;
  v945 = *(_OWORD *)(v0 + 3216);
  *(_OWORD *)(v0 + 2704) = *(_OWORD *)(v0 + 3200);
  *(_OWORD *)(v0 + 2720) = v945;
  v946 = *(_OWORD *)(v0 + 3248);
  *(_OWORD *)(v0 + 2736) = *(_OWORD *)(v0 + 3232);
  *(_OWORD *)(v0 + 2752) = v946;
  v947 = *(_OWORD *)(v0 + 3280);
  *(_OWORD *)(v0 + 2768) = *(_OWORD *)(v0 + 3264);
  *(_OWORD *)(v0 + 2784) = v947;
  *(_WORD *)(v0 + 2800) = v934;
  *(_BYTE *)(v0 + 2802) = v936;
  *(_QWORD *)(v0 + 2808) = v937;
  *(_QWORD *)(v0 + 2816) = v938;
  *(_BYTE *)(v0 + 2824) = v939;
  v948 = *(_OWORD *)(v0 + 3344);
  *(_OWORD *)(v0 + 2832) = *(_OWORD *)(v0 + 3328);
  *(_OWORD *)(v0 + 2848) = v948;
  v949 = *(_OWORD *)(v0 + 3376);
  *(_OWORD *)(v0 + 2864) = *(_OWORD *)(v0 + 3360);
  *(_OWORD *)(v0 + 2880) = v949;
  *(_QWORD *)(v0 + 2896) = v940;
  *(_BYTE *)(v0 + 2904) = v941;
  *(_QWORD *)(v0 + 2912) = v942;
  *(_QWORD *)(v0 + 2920) = v943;
  *(_OWORD *)(v0 + 2928) = *(_OWORD *)(v0 + 3424);
  *(_BYTE *)(v0 + 2944) = (_BYTE)v935;
  *(_QWORD *)(v0 + 2952) = v944;
  sub_23AEB34A4(v0 + 1968);
  sub_23AAFCF50(v0 + 2464);
  if (v924 == 255)
    goto LABEL_401;
  *(_QWORD *)(v0 + 1456) = v926;
  *(_BYTE *)(v0 + 1464) = v924;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v562 + 240))(v0 + 1456, 1);
  if (!v293)
  {
LABEL_404:
    if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 48))(*(_QWORD *)(v0 + 24), 1, *(_QWORD *)(v0 + 112)) == 1)
    {
      sub_23AA8A05C(*(_QWORD *)(v0 + 24), (uint64_t *)&unk_2542E4750);
    }
    else
    {
      v960 = *(_QWORD *)(v0 + 24);
      v961 = *(_QWORD *)(v0 + 8);
      sub_23AA907B0(v960 + *(int *)(*(_QWORD *)(v0 + 112) + 48), v961, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      sub_23AA8A05C(v960, (uint64_t *)&unk_2542E6B00);
      v962 = *(_BYTE *)(v961 + *(int *)(*(_QWORD *)(v0 + 216) + 84));
      sub_23AA937BC(v961, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      if (sub_23AA9F51C(v962, 3) || sub_23AA9F51C(v962, 2))
      {
LABEL_402:
        v950 = *(void ***)(v0 + 320);
        v951 = *v950;
        *(_OWORD *)(v0 + 18864) = xmmword_23B1DAA20;
        *(_QWORD *)(v0 + 18856) = v951;
        v953 = *(void **)(v0 + 256);
        v952 = *(_QWORD *)(v0 + 264);
        *(_QWORD *)(v0 + 18880) = v953;
        *(_OWORD *)(v0 + 18896) = 0u;
        *(_OWORD *)(v0 + 18912) = 0u;
        *(_OWORD *)(v0 + 18928) = 0u;
        *(_OWORD *)(v0 + 18944) = 0u;
        *(_QWORD *)(v0 + 18888) = v952;
        *(_QWORD *)(v0 + 18960) = 0;
        *(_DWORD *)(v0 + 18968) = 135004160;
        v954 = v951;
        v34 = *(_QWORD *)(v3 - 72);
        sub_23B020598(v34, v0 + 18856);
        sub_23AB7C6B4(v951, 0, 0);
        sub_23AEAD994((void *)0x103, v953, v952, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12);
        v417 = v293;
        v169 = (uint64_t)v950;
        v135 = *(_BYTE **)(v0 + 400);
        LODWORD(v230) = *(_DWORD *)(v0 + 384);
        goto LABEL_172;
      }
    }
LABEL_401:
    if (!sub_23AC37674(v289, 2))
      goto LABEL_366;
    goto LABEL_402;
  }
  sub_23AA8A05C(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_2542E4760);
  sub_23AA724E8(v0 + 8440, v0 + 464, (uint64_t *)&unk_2569E63E0);
  sub_23ADF2D34(v0 + 464, (voidsub_23AEB1930);
  sub_23AA724E8(v0 + 8936, v0 + 960, (uint64_t *)&unk_2569E63E0);
  v613 = v0 + 960;
LABEL_267:
  sub_23ADF2D34(v613, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB1930);
  sub_23AA8A05C(*(_QWORD *)(v0 + 320), (uint64_t *)&unk_2542E4760);
  return v41 & 1;
}

void sub_23AE95250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD v72[22];
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  int v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  _BYTE v102[6];
  _BYTE v103[9694];
  uint64_t v104;
  _QWORD v105[1500];

  v9 = MEMORY[0x24BDAC7A8](a1);
  v72[19] = v10;
  v81 = v11;
  v82 = v12;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v101 = v9;
  v100 = v19;
  v72[8] = v105;
  v72[9] = &v104;
  v72[14] = v103;
  v105[1499] = a9;
  v72[13] = v102;
  v73 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v73);
  v72[1] = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v72[12] = (char *)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v72[2] = (char *)v72 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v72[6] = (char *)v72 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v72[5] = (char *)v72 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v72[10] = *(_QWORD *)(v29 - 8);
  v72[11] = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v72[7] = (char *)v72 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v72[4] = (char *)v72 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v72[3] = (char *)v72 - v34;
  v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v75);
  v76 = (char *)v72 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_23B1C5E4C();
  v86 = *(_QWORD *)(v92 - 8);
  v36 = MEMORY[0x24BDAC7A8](v92);
  v80 = (char *)v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v85 = (char *)v72 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v84 = (char *)v72 - v40;
  v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  MEMORY[0x24BDAC7A8](v87);
  v88 = (char *)v72 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v43 = *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v72[17] = (char *)v72 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v78 = (char *)v72 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v77 = (char *)v72 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v79 = (char *)v72 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v93 = (char *)v72 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v72[16] = (char *)v72 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v72[20] = (char *)v72 - v56;
  MEMORY[0x24BDAC7A8](v55);
  v97 = (char *)v72 - v57;
  v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v83 = *(_QWORD *)(v95 - 8);
  v58 = MEMORY[0x24BDAC7A8](v95);
  v72[15] = (char *)v72 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = MEMORY[0x24BDAC7A8](v58);
  v72[21] = (char *)v72 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v74 = (char *)v72 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v89 = (char *)v72 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v90 = (char *)v72 - v67;
  MEMORY[0x24BDAC7A8](v66);
  v96 = (char *)v72 - v68;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
  MEMORY[0x24BDAC7A8](v69);
  v91 = v18;
  *(_QWORD *)&v103[4638] = v18;
  v94 = v16;
  v103[4646] = v16;
  v72[18] = *(_QWORD *)(v14 + 24);
  v98 = *(_QWORD *)(v14 + 32);
  v99 = v14;
  sub_23AA8EFC8(v101, (uint64_t)v72 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542E04F8);
  v71 = (char *)&loc_23AE957D4 + *((int *)qword_23AE9EF98 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23AE957E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  char v102;
  uint64_t v103;
  char v104;
  char v105;
  char *v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  char v122;
  char v123;
  __int16 v124;
  char v125;
  char v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  __int128 v140;
  BOOL v141;
  uint64_t v142;
  uint64_t v143;
  int *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int *v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  BOOL v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  char v198;
  __int16 v199;
  char v200;
  char v201;
  uint64_t v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  __int128 v215;
  BOOL v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t (*v228)();
  uint64_t *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  void *v233;
  void *v234;
  void (*v235)(uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t (*v242)(uint64_t, uint64_t);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t (*v249)();
  char **v250;
  unint64_t v251;
  void *v252;
  void *v253;
  void (*v254)(uint64_t);
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  unint64_t v263;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  int *v278;
  uint64_t v279;
  uint64_t v280;
  _BOOL4 v281;
  uint64_t v282;
  int v283;
  _BOOL4 v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  int *v296;
  uint64_t v297;
  uint64_t (*v298)(void);
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  uint64_t v303;
  unint64_t v304;
  uint64_t (*v305)();
  uint64_t *v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  void *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char v314;
  uint64_t v315;
  uint64_t v316;
  _OWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  BOOL v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  int v328;
  uint64_t v329;
  char v330;
  __int16 v331;
  char v332;
  char v333;
  __int128 v334;
  uint64_t v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  char v341;
  uint64_t v342;
  uint64_t v343;
  char v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  uint64_t v362;
  uint64_t v363;
  char v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  uint64_t (*v372)(uint64_t);
  uint64_t v373;
  char v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  int *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  _BOOL8 v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  void (*v406)(uint64_t, uint64_t, uint64_t);
  uint64_t v407;
  int v408;
  uint64_t v409;
  void (*v410)(uint64_t, uint64_t, uint64_t);
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  BOOL v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t (*v422)();
  uint64_t *v423;
  uint64_t v424;
  uint64_t v425;
  unsigned int v426;
  void *v427;
  void *v428;
  void (*v429)(uint64_t);
  uint64_t v430;
  BOOL v431;
  uint64_t v432;
  char v433;
  char v434;
  __int16 v435;
  char v436;
  char v437;
  __int128 v438;
  uint64_t v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  char v445;
  uint64_t v446;
  uint64_t v447;
  char v448;
  uint64_t v449;
  __int128 v450;
  BOOL v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  int v464;
  uint64_t v465;
  char v466;
  char v467;
  char v468;
  char v469;
  char v470;
  uint64_t v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  __int128 v476;
  __int128 v477;
  char v478;
  uint64_t v479;
  uint64_t v480;
  char v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  char v489;
  int v490;
  uint64_t v491;
  char v492;
  char v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  __int128 v497;
  __int128 v498;
  uint64_t v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  char v526;
  uint64_t v527;
  uint64_t v528;
  char v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  char v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  char v542;
  int v543;
  uint64_t v544;
  char v545;
  uint64_t v546;
  char v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  __int128 v551;
  uint64_t v552;
  uint64_t v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  char v580;
  uint64_t v581;
  uint64_t v582;
  char v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  unint64_t v588;
  uint64_t v589;
  char v590;
  int v591;
  uint64_t v592;
  char v593;
  char v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  __int128 v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  unint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  BOOL v607;
  uint64_t v608;
  char v609;
  char v610;
  __int16 v611;
  char v612;
  char v613;
  __int128 v614;
  uint64_t v615;
  __int128 v616;
  __int128 v617;
  __int128 v618;
  __int128 v619;
  __int128 v620;
  char v621;
  uint64_t v622;
  uint64_t v623;
  char v624;
  uint64_t v625;
  __int128 v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  char v634;
  char *v635;
  __int128 v636;
  __int128 v637;
  __int128 v638;
  __int128 v639;
  __int128 v640;
  __int128 v641;
  __int128 v642;
  __int128 v643;
  __int128 v644;
  __int128 v645;
  __int128 v646;
  __int128 v647;
  __int128 v648;
  __int128 v649;
  __int128 v650;
  __int128 v651;
  __int128 v652;
  __int128 v653;
  __int128 v654;
  __int128 v655;
  __int128 v656;
  __int128 v657;
  __int128 v658;
  __int128 v659;
  uint64_t v660;
  char v661;
  uint64_t v662;
  uint64_t v663;
  char v664;
  uint64_t v665;
  void *v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  int *v670;
  char v671;
  void *v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  int v683;
  uint64_t v684;
  char v685;
  char v686;
  char v687;
  char v688;
  char v689;
  __int128 v690;
  uint64_t v691;
  __int128 v692;
  __int128 v693;
  __int128 v694;
  __int128 v695;
  __int128 v696;
  char v697;
  uint64_t v698;
  uint64_t v699;
  char v700;
  uint64_t v701;
  uint64_t v702;
  int v703;
  __int128 v704;
  __int128 v705;
  __int128 v706;
  __int128 v707;
  __int128 v708;
  __int128 v709;
  __int128 v710;
  uint64_t v711;
  __int16 v712;
  char *v713;
  char v714;
  uint64_t v715;
  uint64_t v716;
  char v717;
  uint64_t v718;
  char v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  __int128 v723;
  __int128 v724;
  __int128 v725;
  __int128 v726;
  __int128 v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  _OWORD *v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  unsigned __int8 v736;
  unsigned int v737;
  int v738;
  uint64_t v739;
  char v740;
  char v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  __int128 v745;
  __int128 v746;
  uint64_t v747;
  unsigned __int8 v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t Strong;
  char *v756;
  _QWORD *v757;
  uint64_t v758;
  int *v759;
  uint64_t v760;
  uint64_t (*v761)();
  uint64_t *v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  BOOL v766;
  uint64_t v767;
  int v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  BOOL v772;
  int v773;
  uint64_t v774;
  int v775;
  uint64_t v776;
  __int128 v777;
  __int128 v778;
  __int128 v779;
  __int128 v780;
  __int128 v781;
  __int128 v782;
  __int128 v783;
  __int128 v784;
  __int128 v785;
  __int128 v786;
  __int128 v787;
  __int128 v788;
  __int128 v789;
  uint64_t v790;
  uint64_t v791;
  char v792;
  _BOOL4 v793;
  BOOL v794;
  uint64_t v795;
  uint64_t v796;
  _QWORD *v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  void (*v806)(uint64_t, uint64_t);
  id v807;
  char v808;
  int v809;
  uint64_t v810;
  char v811;
  char v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  __int128 v816;
  __int128 v817;
  int v818;
  int v819;
  uint64_t *v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  char v825;
  _BOOL8 v826;
  uint64_t v827;
  uint64_t v828;
  __int128 v829;
  __int128 v830;
  __int128 v831;
  __int128 v832;
  __int128 v833;
  __int128 v834;
  __int128 v835;
  __int128 v836;
  __int128 v837;
  __int128 v838;
  __int128 v839;
  __int128 v840;
  __int128 v841;
  __int128 v842;
  __int128 v843;
  __int128 v844;
  __int128 v845;
  __int128 v846;
  __int128 v847;
  __int128 v848;
  __int128 v849;
  __int128 v850;
  __int128 v851;
  __int128 v852;
  __int128 v853;
  uint64_t v854;
  char v855;
  uint64_t v856;
  uint64_t v857;
  char v858;
  uint64_t v859;
  void *v860;
  id v861;
  int v862;
  __int128 v863;
  __int128 v864;
  __int128 v865;
  __int128 v866;
  __int128 v867;
  __int128 v868;
  __int128 v869;
  uint64_t v870;
  BOOL v871;
  char v872;
  char v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  char v879;
  char v880;
  char v881;
  char v882;
  char v883;
  uint64_t v884;
  __int128 v885;
  __int128 v886;
  __int128 v887;
  __int128 v888;
  __int128 v889;
  __int128 v890;
  char v891;
  char v892;
  uint64_t v893;
  uint64_t v894;
  char v895;
  uint64_t v896;
  int v897;
  __int128 v898;
  __int128 v899;
  __int128 v900;
  __int128 v901;
  __int128 v902;
  __int128 v903;
  __int128 v904;
  uint64_t (*v905)(uint64_t);
  uint64_t v906;
  char v907;
  uint64_t v908;
  BOOL v909;
  BOOL v910;
  int v911;
  uint64_t v912;
  __int128 v913;
  __int128 v914;
  __int128 v915;
  __int128 v916;
  __int128 v917;
  __int128 v918;
  __int128 v919;
  __int128 v920;
  __int128 v921;
  __int128 v922;
  __int128 v923;
  __int128 v924;
  __int128 v925;
  uint64_t v926;
  uint64_t v927;
  char v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  __int128 v933;
  __int128 v934;
  __int128 v935;
  __int128 v936;
  __int128 v937;
  __int128 v938;
  __int128 v939;
  char v940;
  uint64_t v941;
  BOOL v942;
  BOOL v943;
  uint64_t v944;
  __int128 v945;
  __int128 v946;
  __int128 v947;
  __int128 v948;
  __int128 v949;
  __int128 v950;
  __int128 v951;
  __int128 v952;
  __int128 v953;
  __int128 v954;
  __int128 v955;
  __int128 v956;
  __int128 v957;
  uint64_t v958;
  uint64_t v959;
  char v960;
  uint64_t v961;
  __int128 v962;
  __int128 v963;
  __int128 v964;
  __int128 v965;
  __int128 v966;
  __int128 v967;
  __int128 v968;
  __int128 v969;
  __int128 v970;
  __int128 v971;
  __int128 v972;
  __int128 v973;
  __int128 v974;
  __int128 v975;
  __int128 v976;
  __int128 v977;
  __int128 v978;
  __int128 v979;
  __int128 v980;
  __int128 v981;
  __int128 v982;
  __int128 v983;
  __int128 v984;
  __int128 v985;
  uint64_t v986;
  char v987;
  uint64_t v988;
  uint64_t v989;
  char v990;
  uint64_t v991;
  void *v992;
  id v993;
  uint64_t v994;
  uint64_t v995;
  char v996;
  uint64_t v997;
  uint64_t v998;
  id v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  char v1004;
  BOOL v1005;

  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E08F0);
  v4 = v1 + v3[12];
  v5 = *(_QWORD *)(v1 + v3[16]);
  v6 = (uint64_t *)(v1 + v3[20]);
  v8 = *v6;
  v7 = v6[1];
  v9 = v1;
  v10 = *(uint64_t **)(v0 + 312);
  sub_23AA724E8(v9, (uint64_t)v10, (uint64_t *)&unk_2542E6B00);
  v11 = *(_QWORD *)(v0 + 304);
  sub_23AA724E8(v4, v11, (uint64_t *)&unk_2542E6B00);
  *(_QWORD *)(v0 + 9120) = v5;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  if ((sub_23AFA7428(*(_BYTE *)(v11 + *(int *)(v12 + 48)), *((_BYTE *)v10 + *(int *)(v12 + 48))) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (*(_DWORD *)(v0 + 416) != 4)
    {
      *(_QWORD *)(v0 + 8624) = 0;
      *(_QWORD *)(v0 + 8632) = 0xE000000000000000;
      sub_23B1C6EFC();
      v21 = *(_QWORD *)(v0 + 8632);
      *(_QWORD *)(v0 + 8624) = *(_QWORD *)(v0 + 8624);
      *(_QWORD *)(v0 + 8632) = v21;
      sub_23B1C734C();
      sub_23AF14E20((uint64_t)v10);
      sub_23B1C734C();
      sub_23AF14E20(v11);
      sub_23B1C734C();
      v22 = *(_QWORD *)(v2 - 72);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v22 + 168))(*(_QWORD *)(v0 + 8624), *(_QWORD *)(v0 + 8632));
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)v11;
      v24 = *(_BYTE *)(v11 + 8);
      v25 = sub_23ADA816C();
      v27 = v26;
      v28 = sub_23ACD8484(0);
      v29 = sub_23AFD7BC8(v28);
      swift_bridgeObjectRelease();
      v30 = v29;
      v10 = *(uint64_t **)(v0 + 312);
      sub_23ADF3A24(v23, v24, v25, v27, v30);
      (*(void (**)(void))(*(_QWORD *)v22 + 144))();
      swift_release();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    v32 = v31;
    sub_23AEB2D50(v0 + 8624);
    sub_23AA724E8(v0 + 8624, v32, (uint64_t *)&unk_2542E0950);
    swift_willThrow();
    sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6B00);
    v33 = v11;
LABEL_11:
    sub_23AA8A05C(v33, (uint64_t *)&unk_2542E6B00);
    return v20 & 1;
  }
  v13 = v8;
  v14 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + 16);
  v15 = v11;
  v17 = *(_QWORD *)(v11 + 16);
  v16 = v11 + 16;
  v18 = *(_QWORD *)(v0 + 448);
  sub_23AFFA330(v17, *(_BYTE *)(v16 + 8), (void *)(v0 + 8624));
  v19 = *(_DWORD *)(v0 + 416);
  if (v18)
  {
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6B00);
    sub_23AA8A05C(v15, (uint64_t *)&unk_2542E6B00);
    return v20 & 1;
  }
  *(_QWORD *)(v0 + 432) = v16;
  sub_23AFFA330(*(_QWORD *)v15, *(_BYTE *)(v15 + 8), (void *)(v0 + 8128));
  *(_QWORD *)(v0 + 448) = 0;
  v34 = v14;
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) != 0)
  {
    v35 = *(_QWORD *)(v0 + 136);
    sub_23AA8EFC8((uint64_t)v10, v35, (uint64_t *)&unk_2542E6B00);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 56))(v35, 0, 1, *(_QWORD *)(v0 + 376));
    v36 = *(_QWORD *)(v0 + 304);
    v37 = *(_QWORD *)(v0 + 448);
    sub_23AE19AE4(v35, v36, (uint64_t *)(v0 + 9120), *(_QWORD *)(v0 + 408), *(_QWORD *)(v2 - 72), 1);
    *(_QWORD *)(v0 + 448) = v37;
    if (v37)
    {
      swift_bridgeObjectRelease();
      sub_23AA8A05C(v35, (uint64_t *)&unk_2542E4750);
      sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6B00);
      sub_23AA724E8(v0 + 8128, v0 + 7136, qword_2542E6E20);
      sub_23ADF2D34(v0 + 7136, (voidsub_23AAAEC3C);
      sub_23AA724E8(v0 + 8624, v0 + 7632, qword_2542E6E20);
      sub_23ADF2D34(v0 + 7632, (voidsub_23AAAEC3C);
      v33 = v36;
      goto LABEL_11;
    }
    v38 = v19;
    sub_23AA8A05C(v35, (uint64_t *)&unk_2542E4750);
  }
  else
  {
    v38 = v19;
  }
  sub_23AA724E8(v0 + 8128, v0 + 7136, qword_2542E6E20);
  sub_23AA724E8(v0 + 7136, v0 + 7632, qword_2542E6E20);
  v40 = sub_23AAFC2A4(v0 + 7632);
  v41 = *(_QWORD *)(v2 - 72);
  if ((_DWORD)v40 == 1)
  {
    if ((v38 - 3) >= 2
      && (*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0
      && (sub_23AFFA4E8() & 1) != 0)
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      if (sub_23AFA7480(*(_BYTE *)(*(_QWORD *)(v0 + 304) + *(int *)(v42 + 48))))
      {
        v43 = swift_bridgeObjectRelease();
        v44 = *(_QWORD *)(v0 + 304);
        v45 = *(_QWORD *)v44;
        v46 = *(_BYTE *)(v44 + 8);
        v47 = sub_23ADA8168(v43);
        sub_23B0264E8(v45, v46, v47, v48, 0x10000000);
        (*(void (**)(void))(**(_QWORD **)(v2 - 72) + 144))();
        swift_release();
        sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6B00);
        sub_23AA724E8(v0 + 8128, v0 + 6144, qword_2542E6E20);
        sub_23ADF2D34(v0 + 6144, (voidsub_23AAAEC3C);
        sub_23AA724E8(v0 + 8624, v0 + 6640, qword_2542E6E20);
        sub_23ADF2D34(v0 + 6640, (voidsub_23AAAEC3C);
        sub_23AA8A05C(v44, (uint64_t *)&unk_2542E6B00);
        v20 = 0;
        return v20 & 1;
      }
    }
    v49 = *(uint64_t **)(v0 + 304);
    v50 = *v49;
    v51 = *((unsigned __int8 *)v49 + 8);
    v52 = v51 | ((unint64_t)*((unsigned __int8 *)v49
                                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00)
                                            + 48)) << 16);
    *(_QWORD *)(v0 + 25648) = v50;
    *(_QWORD *)(v0 + 25656) = v52;
    *(_OWORD *)(v0 + 25664) = 0u;
    *(_OWORD *)(v0 + 25680) = 0u;
    *(_OWORD *)(v0 + 25696) = 0u;
    *(_OWORD *)(v0 + 25712) = 0u;
    *(_OWORD *)(v0 + 25728) = 0u;
    *(_OWORD *)(v0 + 25744) = 0u;
    *(_DWORD *)(v0 + 25760) = 0;
    v53 = *(_QWORD *)(v2 - 72);
    sub_23B02058C(v53, v0 + 25648);
    *(_QWORD *)(v0 + 6640) = v50;
    *(_BYTE *)(v0 + 6648) = v51;
    v41 = v53;
    *(_BYTE *)(v0 + 6649) = 0;
    v54 = *sub_23AFA7BFC();
    v55 = sub_23ADA816C();
    *(_QWORD *)(v0 + 6656) = v54;
    *(_QWORD *)(v0 + 6664) = v55;
    *(_QWORD *)(v0 + 6672) = v56;
    *(_WORD *)(v0 + 6754) = 2304;
    sub_23AA724E8(v0 + 6640, v0 + 25528, qword_2542E1408);
    sub_23B02058C(v53, v0 + 25528);
    v57 = sub_23AEB3270(v0 + 25528, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
    if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0)
    {
      v58 = *(uint64_t **)(v0 + 304);
      v59 = *v58;
      LOBYTE(v58) = *((_BYTE *)v58 + 8);
      *(_QWORD *)(v0 + 6640) = v59;
      *(_WORD *)(v0 + 6648) = v58;
      *(_QWORD *)(v0 + 6656) = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 408) + 272))(v57);
      *(_WORD *)(v0 + 6754) = 2312;
      sub_23AA724E8(v0 + 6640, v0 + 25408, qword_2542E1408);
      sub_23B02058C(v53, v0 + 25408);
      sub_23AEB3270(v0 + 25408, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
      if (*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) != 1)
        goto LABEL_23;
    }
    v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    v40 = sub_23AFA7B8C(*(_BYTE *)(*(_QWORD *)(v0 + 304) + *(int *)(v60 + 48)));
    if ((v40 & 1) == 0)
    {
LABEL_23:
      v61 = *(uint64_t **)(v0 + 304);
      v62 = *v61;
      v63 = *((unsigned __int8 *)v61 + 8);
      *(_QWORD *)(v0 + 25288) = v62;
      *(_QWORD *)(v0 + 25296) = v63;
      *(_OWORD *)(v0 + 25312) = 0u;
      *(_OWORD *)(v0 + 25328) = 0u;
      *(_OWORD *)(v0 + 25344) = 0u;
      *(_OWORD *)(v0 + 25360) = 0u;
      *(_OWORD *)(v0 + 25376) = 0u;
      *(_QWORD *)(v0 + 25304) = 2;
      *(_QWORD *)(v0 + 25392) = 0;
      *(_DWORD *)(v0 + 25400) = 151584768;
      v40 = sub_23B02058C(v53, v0 + 25288);
    }
  }
  v64 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 408) + 152);
  v65 = v64(v40);
  if (sub_23AA9F3D0(0x4000, v65))
  {
    sub_23AA724E8(v0 + 7136, v0 + 6640, qword_2542E6E20);
    if (sub_23AAFC2A4(v0 + 6640) != 1)
    {
      sub_23AA724E8(v0 + 7136, v0 + 6144, qword_2542E6E20);
      memcpy((void *)(v0 + 24792), (const void *)(v0 + 6144), 0x1F0uLL);
      if (v38 != 4)
      {
        sub_23ACFC940(v0 + 6144);
        v72 = *(_QWORD *)(v0 + 448);
        v73 = sub_23AE2A5C0(v0 + 24792, *(_QWORD *)(v0 + 408));
        *(_QWORD *)(v0 + 448) = v72;
        if (v72)
        {
          swift_bridgeObjectRelease();
          sub_23ADF2D34(v0 + 7136, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
          sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6B00);
          sub_23AA724E8(v0 + 8128, v0 + 5152, qword_2542E6E20);
          sub_23ADF2D34(v0 + 5152, (voidsub_23AAAEC3C);
          sub_23AA724E8(v0 + 8624, v0 + 5648, qword_2542E6E20);
          sub_23ADF2D34(v0 + 5648, (voidsub_23AAAEC3C);
          v33 = *(_QWORD *)(v0 + 304);
          goto LABEL_11;
        }
        v223 = v73;
        sub_23ADF2D34(v0 + 7136, (voidsub_23AAAEC3C);
        if ((v223 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6B00);
          sub_23AA724E8(v0 + 8128, v0 + 5152, qword_2542E6E20);
          sub_23ADF2D34(v0 + 5152, (voidsub_23AAAEC3C);
          sub_23AA724E8(v0 + 8624, v0 + 5648, qword_2542E6E20);
          sub_23ADF2D34(v0 + 5648, (voidsub_23AAAEC3C);
          sub_23AA8A05C(*(_QWORD *)(v0 + 304), (uint64_t *)&unk_2542E6B00);
          v20 = 1;
          return v20 & 1;
        }
      }
    }
  }
  v66 = v13;
  *(_QWORD *)(v0 + 384) = v64;
  *(_QWORD *)(v0 + 392) = v34;
  v67 = *(uint64_t **)(v0 + 304);
  v68 = *v67;
  v69 = v67[2];
  v70 = *((unsigned __int8 *)v67 + 24);
  if (!*((_BYTE *)v67 + 8))
  {
    v71 = *(uint64_t **)(v0 + 304);
    if (!*((_BYTE *)v67 + 24) && (_DWORD)v68 == (_DWORD)v69)
      goto LABEL_55;
LABEL_43:
    if (!sub_23AA9F3D0(2, *(_QWORD *)(v0 + 9120)))
      goto LABEL_55;
    sub_23AA724E8(v0 + 8624, v0 + 6144, qword_2542E6E20);
    sub_23AA724E8(v0 + 6144, v0 + 6640, qword_2542E6E20);
    if (sub_23AAFC2A4(v0 + 6640) != 1)
    {
      sub_23AA724E8(v0 + 6144, v0 + 4656, qword_2542E6E20);
      v74 = *(_QWORD *)(v0 + 4656);
      v75 = *(_BYTE *)(v0 + 4664);
      v76 = *(_BYTE *)(v0 + 4688);
      v77 = *(_BYTE *)(v0 + 4793);
      v78 = *(_BYTE *)(v0 + 4794);
      v79 = *(_BYTE *)(v0 + 4816);
      v80 = *(_QWORD *)(v0 + 4888);
      v81 = *(_OWORD *)(v0 + 5072);
      *(_OWORD *)(v0 + 5552) = *(_OWORD *)(v0 + 5056);
      *(_OWORD *)(v0 + 5568) = v81;
      v82 = *(_OWORD *)(v0 + 5008);
      *(_OWORD *)(v0 + 5488) = *(_OWORD *)(v0 + 4992);
      *(_OWORD *)(v0 + 5504) = v82;
      v83 = *(_OWORD *)(v0 + 5024);
      *(_OWORD *)(v0 + 5536) = *(_OWORD *)(v0 + 5040);
      *(_OWORD *)(v0 + 5520) = v83;
      v84 = *(_OWORD *)(v0 + 4944);
      *(_OWORD *)(v0 + 5424) = *(_OWORD *)(v0 + 4928);
      *(_OWORD *)(v0 + 5440) = v84;
      v85 = *(_OWORD *)(v0 + 4960);
      *(_OWORD *)(v0 + 5472) = *(_OWORD *)(v0 + 4976);
      *(_OWORD *)(v0 + 5456) = v85;
      v86 = *(_OWORD *)(v0 + 4896);
      *(_OWORD *)(v0 + 5408) = *(_OWORD *)(v0 + 4912);
      *(_OWORD *)(v0 + 5392) = v86;
      v87 = *(_BYTE *)(v0 + 4792);
      v88 = *(_BYTE *)(v0 + 5096);
      v89 = *(_QWORD *)(v0 + 5088);
      v90 = *(_QWORD *)(v0 + 5104);
      v91 = *(_QWORD *)(v0 + 5112);
      v92 = *(_BYTE *)(v0 + 5136);
      *(_QWORD *)(v0 + 5152) = v74;
      v93 = *(_QWORD *)(v0 + 5144);
      *(_BYTE *)(v0 + 5160) = v75;
      *(_BYTE *)(v0 + 5184) = v76;
      *(_OWORD *)(v0 + 5192) = *(_OWORD *)(v0 + 4696);
      *(_OWORD *)(v0 + 5208) = *(_OWORD *)(v0 + 4712);
      *(_OWORD *)(v0 + 5224) = *(_OWORD *)(v0 + 4728);
      *(_OWORD *)(v0 + 5240) = *(_OWORD *)(v0 + 4744);
      *(_OWORD *)(v0 + 5256) = *(_OWORD *)(v0 + 4760);
      *(_OWORD *)(v0 + 5272) = *(_OWORD *)(v0 + 4776);
      *(_BYTE *)(v0 + 5288) = v87;
      *(_BYTE *)(v0 + 5289) = v77;
      *(_BYTE *)(v0 + 5290) = v78;
      v94 = *(_OWORD *)(v0 + 4800);
      *(_OWORD *)(v0 + 5168) = *(_OWORD *)(v0 + 4672);
      *(_OWORD *)(v0 + 5296) = v94;
      *(_BYTE *)(v0 + 5312) = v79;
      *(_OWORD *)(v0 + 5320) = *(_OWORD *)(v0 + 4824);
      *(_OWORD *)(v0 + 5336) = *(_OWORD *)(v0 + 4840);
      *(_OWORD *)(v0 + 5352) = *(_OWORD *)(v0 + 4856);
      *(_OWORD *)(v0 + 5368) = *(_OWORD *)(v0 + 4872);
      *(_QWORD *)(v0 + 5384) = v80;
      *(_BYTE *)(v0 + 5592) = v88;
      *(_QWORD *)(v0 + 5584) = v89;
      *(_QWORD *)(v0 + 5600) = v90;
      *(_QWORD *)(v0 + 5608) = v91;
      *(_OWORD *)(v0 + 5616) = *(_OWORD *)(v0 + 5120);
      *(_BYTE *)(v0 + 5632) = v92;
      *(_QWORD *)(v0 + 5640) = v93;
      sub_23AA724E8(v0 + 6144, v0 + 5648, qword_2542E6E20);
      sub_23ACFC940(v0 + 5648);
      sub_23AAFC3AC(v0 + 5152);
      if (!sub_23AA9F51C(v87, 2))
        goto LABEL_49;
      sub_23AA724E8(v0 + 6144, v0 + 4152, qword_2542E6E20);
      v95 = *(_OWORD *)(v0 + 4360);
      *(_OWORD *)(v0 + 4848) = *(_OWORD *)(v0 + 4344);
      *(_OWORD *)(v0 + 4864) = v95;
      v96 = *(_OWORD *)(v0 + 4296);
      *(_OWORD *)(v0 + 4784) = *(_OWORD *)(v0 + 4280);
      *(_OWORD *)(v0 + 4800) = v96;
      v97 = *(_OWORD *)(v0 + 4312);
      *(_OWORD *)(v0 + 4832) = *(_OWORD *)(v0 + 4328);
      *(_OWORD *)(v0 + 4816) = v97;
      v98 = *(_OWORD *)(v0 + 4232);
      *(_OWORD *)(v0 + 4720) = *(_OWORD *)(v0 + 4216);
      *(_OWORD *)(v0 + 4736) = v98;
      v99 = *(_OWORD *)(v0 + 4248);
      *(_OWORD *)(v0 + 4768) = *(_OWORD *)(v0 + 4264);
      *(_OWORD *)(v0 + 4752) = v99;
      v100 = *(_OWORD *)(v0 + 4168);
      *(_OWORD *)(v0 + 4656) = *(_OWORD *)(v0 + 4152);
      *(_OWORD *)(v0 + 4672) = v100;
      v101 = *(_OWORD *)(v0 + 4184);
      *(_OWORD *)(v0 + 4704) = *(_OWORD *)(v0 + 4200);
      *(_OWORD *)(v0 + 4688) = v101;
      v102 = *(_BYTE *)(v0 + 4488);
      v103 = *(_QWORD *)(v0 + 4408);
      v104 = *(_BYTE *)(v0 + 4416);
      v105 = *(_BYTE *)(v0 + 4489);
      v106 = *(char **)(v0 + 112);
      v107 = *v106;
      v108 = *(_QWORD *)(v0 + 4496);
      v109 = *(_QWORD *)(v0 + 4504);
      v110 = *(_BYTE *)(v0 + 4512);
      v111 = *(_BYTE *)(v0 + 4592);
      v112 = *(_QWORD *)(v0 + 4584);
      v113 = *(_QWORD *)(v0 + 4600);
      LOBYTE(v106) = v106[142];
      v114 = *(_QWORD *)(v0 + 4608);
      v115 = *(_QWORD *)(v0 + 4640);
      v116 = *(_OWORD *)(v0 + 4392);
      *(_OWORD *)(v0 + 4880) = *(_OWORD *)(v0 + 4376);
      *(_OWORD *)(v0 + 4896) = v116;
      *(_QWORD *)(v0 + 4912) = v103;
      *(_BYTE *)(v0 + 4920) = v104;
      v117 = *(_OWORD *)(v0 + 4440);
      *(_OWORD *)(v0 + 4928) = *(_OWORD *)(v0 + 4424);
      *(_OWORD *)(v0 + 4944) = v117;
      v118 = *(_OWORD *)(v0 + 4472);
      *(_OWORD *)(v0 + 4960) = *(_OWORD *)(v0 + 4456);
      *(_OWORD *)(v0 + 4976) = v118;
      *(_BYTE *)(v0 + 4992) = v102;
      *(_BYTE *)(v0 + 4993) = v105;
      *(_BYTE *)(v0 + 4994) = v107;
      *(_QWORD *)(v0 + 5000) = v108;
      *(_QWORD *)(v0 + 5008) = v109;
      *(_BYTE *)(v0 + 5016) = v110;
      v119 = *(_OWORD *)(v0 + 4536);
      *(_OWORD *)(v0 + 5024) = *(_OWORD *)(v0 + 4520);
      *(_OWORD *)(v0 + 5040) = v119;
      v120 = *(_OWORD *)(v0 + 4568);
      *(_OWORD *)(v0 + 5056) = *(_OWORD *)(v0 + 4552);
      *(_OWORD *)(v0 + 5072) = v120;
      *(_BYTE *)(v0 + 5096) = v111;
      *(_QWORD *)(v0 + 5088) = v112;
      *(_QWORD *)(v0 + 5104) = v113;
      *(_QWORD *)(v0 + 5112) = v114;
      *(_OWORD *)(v0 + 5120) = *(_OWORD *)(v0 + 4616);
      *(_BYTE *)(v0 + 5136) = (_BYTE)v106;
      *(_QWORD *)(v0 + 5144) = v115;
      sub_23ACFC940(v0 + 5648);
      sub_23AAFC3AC(v0 + 4656);
      if (sub_23AA9F51C(v102, 2))
      {
        sub_23AA724E8(v0 + 6144, v0 + 3152, qword_2542E6E20);
        v121 = *(_QWORD *)(v0 + 3152);
        v122 = *(_BYTE *)(v0 + 3160);
        v123 = *(_BYTE *)(v0 + 3184);
        v124 = *(_WORD *)(v0 + 3288);
        v125 = *(_BYTE *)(v0 + 3290);
        v126 = *(_BYTE *)(v0 + 3312);
        v127 = *(_QWORD *)(v0 + 3384);
        v128 = *(_OWORD *)(v0 + 3568);
        *(_OWORD *)(v0 + 4056) = *(_OWORD *)(v0 + 3552);
        *(_OWORD *)(v0 + 4072) = v128;
        v129 = *(_QWORD *)(v0 + 3584);
        v130 = *(_OWORD *)(v0 + 3504);
        *(_OWORD *)(v0 + 3992) = *(_OWORD *)(v0 + 3488);
        *(_OWORD *)(v0 + 4008) = v130;
        v131 = *(_OWORD *)(v0 + 3536);
        *(_OWORD *)(v0 + 4024) = *(_OWORD *)(v0 + 3520);
        *(_OWORD *)(v0 + 4040) = v131;
        v132 = *(_OWORD *)(v0 + 3440);
        *(_OWORD *)(v0 + 3928) = *(_OWORD *)(v0 + 3424);
        *(_OWORD *)(v0 + 3944) = v132;
        v133 = *(_OWORD *)(v0 + 3472);
        *(_OWORD *)(v0 + 3960) = *(_OWORD *)(v0 + 3456);
        *(_OWORD *)(v0 + 3976) = v133;
        v134 = *(_OWORD *)(v0 + 3408);
        *(_OWORD *)(v0 + 3896) = *(_OWORD *)(v0 + 3392);
        *(_OWORD *)(v0 + 3912) = v134;
        v135 = *(_BYTE *)(v0 + 3592);
        v136 = *(_QWORD *)(v0 + 3600);
        v137 = *(_QWORD *)(v0 + 3608);
        v138 = *(_BYTE *)(v0 + 3632);
        *(_QWORD *)(v0 + 3656) = v121;
        v139 = *(_QWORD *)(v0 + 3640);
        *(_BYTE *)(v0 + 3664) = v122;
        v140 = *(_OWORD *)(v0 + 3168);
        *(_OWORD *)(v0 + 352) = v140;
        *(_OWORD *)(v0 + 3672) = v140;
        *(_BYTE *)(v0 + 3688) = v123;
        *(_OWORD *)(v0 + 3696) = *(_OWORD *)(v0 + 3192);
        *(_OWORD *)(v0 + 3712) = *(_OWORD *)(v0 + 3208);
        *(_OWORD *)(v0 + 3728) = *(_OWORD *)(v0 + 3224);
        *(_OWORD *)(v0 + 3744) = *(_OWORD *)(v0 + 3240);
        *(_OWORD *)(v0 + 3760) = *(_OWORD *)(v0 + 3256);
        *(_OWORD *)(v0 + 3776) = *(_OWORD *)(v0 + 3272);
        *(_WORD *)(v0 + 3792) = v124;
        *(_BYTE *)(v0 + 3794) = v125;
        *(_OWORD *)(v0 + 3800) = *(_OWORD *)(v0 + 3296);
        *(_BYTE *)(v0 + 3816) = v126;
        *(_OWORD *)(v0 + 3824) = *(_OWORD *)(v0 + 3320);
        *(_OWORD *)(v0 + 3840) = *(_OWORD *)(v0 + 3336);
        *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v0 + 3352);
        *(_OWORD *)(v0 + 3872) = *(_OWORD *)(v0 + 3368);
        *(_QWORD *)(v0 + 4088) = v129;
        *(_QWORD *)(v0 + 3888) = v127;
        *(_BYTE *)(v0 + 4096) = v135;
        *(_QWORD *)(v0 + 4104) = v136;
        *(_QWORD *)(v0 + 4112) = v137;
        *(_OWORD *)(v0 + 4120) = *(_OWORD *)(v0 + 3616);
        *(_BYTE *)(v0 + 4136) = v138;
        *(_QWORD *)(v0 + 4144) = v139;
        sub_23AA724E8(v0 + 6144, v0 + 4152, qword_2542E6E20);
        sub_23ACFC940(v0 + 4152);
        sub_23ACFC940(v0 + 5648);
        sub_23AAFC3AC(v0 + 3656);
        v141 = sub_23AA9F3C4(16, *(_QWORD *)(v0 + 352));
        sub_23ADF2D34(v0 + 6144, (voidsub_23AAAEC3C);
        v71 = *(uint64_t **)(v0 + 304);
        if (!v141)
        {
LABEL_54:
          v41 = *(_QWORD *)(v2 - 72);
          goto LABEL_55;
        }
      }
      else
      {
LABEL_49:
        v71 = *(uint64_t **)(v0 + 304);
      }
    }
    if (*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) != 1
      || (sub_23AA724E8(v0 + 7136, v0 + 5648, qword_2542E6E20), sub_23AAFC2A4(v0 + 5648) != 1)
      && (sub_23AA724E8(v0 + 7136, v0 + 5152, qword_2542E6E20),
          memcpy((void *)(v0 + 24296), (const void *)(v0 + 5152), 0x1F0uLL),
          sub_23AA9F890()))
    {
      sub_23AE9F05C(v69, v70, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 152), (uint64_t *)&unk_2569E60B0);
      v142 = *(_QWORD *)(v2 - 72);
      (*(void (**)(void))(*(_QWORD *)v142 + 144))();
      v41 = v142;
      swift_release();
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  v71 = *(uint64_t **)(v0 + 304);
  if (*((_BYTE *)v67 + 8) != 1)
  {
    if (v68)
    {
      if (v70 == 2 && v69 == 1)
        goto LABEL_55;
    }
    else if (v70 == 2 && !v69)
    {
      goto LABEL_55;
    }
    goto LABEL_43;
  }
  if (v70 != 1 || v68 != v69)
    goto LABEL_43;
LABEL_55:
  v143 = *(_QWORD *)(v0 + 448);
  sub_23AE1BFB0(v10, v71, (uint64_t *)(v0 + 9120), *(_QWORD *)(v0 + 408), v41);
  *(_QWORD *)(v0 + 448) = v143;
  if (v143)
  {
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6B00);
    sub_23AA724E8(v0 + 8128, v0 + 6144, qword_2542E6E20);
    sub_23ADF2D34(v0 + 6144, (voidsub_23AAAEC3C);
    sub_23AA724E8(v0 + 8624, v0 + 6640, qword_2542E6E20);
    sub_23ADF2D34(v0 + 6640, (voidsub_23AAAEC3C);
    v33 = (uint64_t)v71;
    goto LABEL_11;
  }
  v144 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542E0900);
  v145 = *(_QWORD *)(v0 + 296);
  v146 = v145 + v144[12];
  *(_QWORD *)(v0 + 352) = v144[16];
  v147 = (_QWORD *)(v145 + v144[20]);
  sub_23AA8EFC8((uint64_t)v10, v145, (uint64_t *)&unk_2542E6B00);
  v148 = v146;
  v149 = *(_QWORD *)(v2 - 72);
  sub_23AA8EFC8((uint64_t)v71, v148, (uint64_t *)&unk_2542E6B00);
  *(_QWORD *)(v145 + *(_QWORD *)(v0 + 352)) = *(_QWORD *)(v0 + 9120);
  *v147 = v66;
  v147[1] = v7;
  swift_storeEnumTagMultiPayload();
  sub_23AEB7038(v149, v145);
  sub_23AA8A05C(v145, (uint64_t *)&unk_2542DDDA0);
  v150 = *(_QWORD *)(v0 + 376);
  v151 = *(int **)(v0 + 176);
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0)
  {
    sub_23AA724E8(v0 + 8128, v0 + 6144, qword_2542E6E20);
    sub_23AA724E8(v0 + 6144, v0 + 5648, qword_2542E6E20);
    sub_23AA724E8(v0 + 6144, v0 + 6640, qword_2542E6E20);
    if (sub_23AAFC2A4(v0 + 6640) != 1)
    {
      v152 = *(_OWORD *)(v0 + 5840);
      v153 = *(_OWORD *)(v0 + 5856);
      v154 = v153;
      *(_OWORD *)(v0 + 24240) = v152;
      *(_OWORD *)(v0 + 24256) = v153;
      v155 = *(_OWORD *)(v0 + 5872);
      *(_OWORD *)(v0 + 24272) = v155;
      v156 = *(_OWORD *)(v0 + 5776);
      v157 = *(_OWORD *)(v0 + 5792);
      v158 = v157;
      *(_OWORD *)(v0 + 24176) = v156;
      *(_OWORD *)(v0 + 24192) = v157;
      v159 = *(_OWORD *)(v0 + 5824);
      v160 = *(_OWORD *)(v0 + 5808);
      v161 = v160;
      *(_OWORD *)(v0 + 24224) = v159;
      *(_OWORD *)(v0 + 24208) = v160;
      v162 = *(_OWORD *)(v0 + 5712);
      v163 = *(_OWORD *)(v0 + 5728);
      v164 = v163;
      *(_OWORD *)(v0 + 24112) = v162;
      *(_OWORD *)(v0 + 24128) = v163;
      v165 = *(_OWORD *)(v0 + 5760);
      v166 = *(_OWORD *)(v0 + 5744);
      v167 = v166;
      *(_OWORD *)(v0 + 24160) = v165;
      *(_OWORD *)(v0 + 24144) = v166;
      v168 = *(_OWORD *)(v0 + 5648);
      v169 = *(_OWORD *)(v0 + 5664);
      v170 = v169;
      *(_OWORD *)(v0 + 24048) = v168;
      *(_OWORD *)(v0 + 24064) = v169;
      v171 = *(_OWORD *)(v0 + 5696);
      v172 = *(_OWORD *)(v0 + 5680);
      *(_OWORD *)(v0 + 24096) = v171;
      *(_OWORD *)(v0 + 24080) = v172;
      *(_OWORD *)(v0 + 5344) = v152;
      *(_OWORD *)(v0 + 5360) = v154;
      *(_OWORD *)(v0 + 5280) = v156;
      *(_OWORD *)(v0 + 5296) = v158;
      *(_OWORD *)(v0 + 5328) = v159;
      *(_OWORD *)(v0 + 5312) = v161;
      *(_OWORD *)(v0 + 5216) = v162;
      *(_OWORD *)(v0 + 5232) = v164;
      *(_OWORD *)(v0 + 5264) = v165;
      *(_OWORD *)(v0 + 5248) = v167;
      *(_OWORD *)(v0 + 5152) = v168;
      *(_OWORD *)(v0 + 5168) = v170;
      *(_OWORD *)(v0 + 5200) = v171;
      *(_OWORD *)(v0 + 5184) = v172;
      v173 = *(_OWORD *)(v0 + 6048);
      v174 = *(_OWORD *)(v0 + 6064);
      v175 = *(_OWORD *)(v0 + 6016);
      *(_OWORD *)(v0 + 5536) = *(_OWORD *)(v0 + 6032);
      *(_OWORD *)(v0 + 5552) = v173;
      *(_OWORD *)(v0 + 5568) = v174;
      v176 = *(_OWORD *)(v0 + 5984);
      v177 = *(_OWORD *)(v0 + 6000);
      v178 = *(_OWORD *)(v0 + 5952);
      *(_OWORD *)(v0 + 5472) = *(_OWORD *)(v0 + 5968);
      *(_OWORD *)(v0 + 5488) = v176;
      *(_OWORD *)(v0 + 5504) = v177;
      *(_OWORD *)(v0 + 5520) = v175;
      v179 = *(_OWORD *)(v0 + 5920);
      v180 = *(_OWORD *)(v0 + 5936);
      v181 = *(_OWORD *)(v0 + 5888);
      *(_OWORD *)(v0 + 5408) = *(_OWORD *)(v0 + 5904);
      *(_OWORD *)(v0 + 5424) = v179;
      *(_OWORD *)(v0 + 5440) = v180;
      *(_OWORD *)(v0 + 5456) = v178;
      *(_OWORD *)(v0 + 5376) = v155;
      *(_OWORD *)(v0 + 5392) = v181;
      v182 = *(_QWORD *)(v0 + 6080);
      v183 = *(_QWORD *)(v0 + 6096);
      v184 = *(_QWORD *)(v0 + 6104);
      v185 = *(_BYTE *)(v0 + 6128);
      *(_BYTE *)(v0 + 5592) = *(_BYTE *)(v0 + 6088);
      v186 = *(_QWORD *)(v0 + 6136);
      *(_QWORD *)(v0 + 5584) = v182;
      *(_QWORD *)(v0 + 5600) = v183;
      *(_QWORD *)(v0 + 5608) = v184;
      *(_OWORD *)(v0 + 5616) = *(_OWORD *)(v0 + 6112);
      *(_BYTE *)(v0 + 5632) = v185;
      *(_QWORD *)(v0 + 5640) = v186;
      sub_23ADF2D34(v0 + 6144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88348);
      sub_23ACF4048(v0 + 24048);
      v187 = sub_23AAFC3AC(v0 + 5152);
      v188 = ((uint64_t (*)(uint64_t))sub_23B00634C)(v187);
      v189 = sub_23B006430(v188, 0);
      v190 = sub_23ACF410C(v0 + 24048);
      if (!v189)
      {
        v191 = *(uint64_t **)(v0 + 304);
        v192 = *v191;
        LOBYTE(v191) = *((_BYTE *)v191 + 8);
        *(_QWORD *)(v0 + 4656) = v192;
        *(_WORD *)(v0 + 4664) = v191;
        *(_QWORD *)(v0 + 4672) = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 408) + 272))(v190);
        *(_WORD *)(v0 + 4770) = 2312;
        sub_23AA724E8(v0 + 4656, v0 + 23928, qword_2542E1408);
        sub_23B02058C(v149, v0 + 23928);
        sub_23AEB3270(v0 + 23928, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
      }
    }
  }
  sub_23AA724E8(v0 + 8624, v0 + 6144, qword_2542E6E20);
  sub_23AA724E8(v0 + 6144, v0 + 5648, qword_2542E6E20);
  sub_23AA724E8(v0 + 6144, v0 + 6640, qword_2542E6E20);
  v193 = sub_23AAFC2A4(v0 + 6640);
  v194 = *(_QWORD *)(v0 + 152);
  if (v193 == 1)
  {
    v195 = *(_QWORD *)(v0 + 304);
  }
  else
  {
    v196 = *(_QWORD *)(v0 + 5648);
    v197 = *(_BYTE *)(v0 + 5656);
    v198 = *(_BYTE *)(v0 + 5680);
    v199 = *(_WORD *)(v0 + 5784);
    v200 = *(_BYTE *)(v0 + 5786);
    v201 = *(_BYTE *)(v0 + 5808);
    v202 = *(_QWORD *)(v0 + 5880);
    v203 = *(_OWORD *)(v0 + 6064);
    *(_OWORD *)(v0 + 5056) = *(_OWORD *)(v0 + 6048);
    *(_OWORD *)(v0 + 5072) = v203;
    v204 = *(_OWORD *)(v0 + 6000);
    *(_OWORD *)(v0 + 4992) = *(_OWORD *)(v0 + 5984);
    *(_OWORD *)(v0 + 5008) = v204;
    v205 = *(_OWORD *)(v0 + 6016);
    *(_OWORD *)(v0 + 5040) = *(_OWORD *)(v0 + 6032);
    *(_OWORD *)(v0 + 5024) = v205;
    v206 = *(_OWORD *)(v0 + 5936);
    *(_OWORD *)(v0 + 4928) = *(_OWORD *)(v0 + 5920);
    *(_OWORD *)(v0 + 4944) = v206;
    v207 = *(_OWORD *)(v0 + 5952);
    *(_OWORD *)(v0 + 4976) = *(_OWORD *)(v0 + 5968);
    *(_OWORD *)(v0 + 4960) = v207;
    v208 = *(_OWORD *)(v0 + 5888);
    *(_OWORD *)(v0 + 4912) = *(_OWORD *)(v0 + 5904);
    *(_OWORD *)(v0 + 4896) = v208;
    v209 = *(_BYTE *)(v0 + 6088);
    v210 = *(_QWORD *)(v0 + 6080);
    v211 = *(_QWORD *)(v0 + 6096);
    v212 = *(_QWORD *)(v0 + 6104);
    v213 = *(_BYTE *)(v0 + 6128);
    *(_QWORD *)(v0 + 4656) = v196;
    v214 = *(_QWORD *)(v0 + 6136);
    *(_BYTE *)(v0 + 4664) = v197;
    v215 = *(_OWORD *)(v0 + 5664);
    *(_OWORD *)(v0 + 352) = v215;
    *(_OWORD *)(v0 + 4672) = v215;
    *(_BYTE *)(v0 + 4688) = v198;
    *(_OWORD *)(v0 + 4696) = *(_OWORD *)(v0 + 5688);
    *(_OWORD *)(v0 + 4712) = *(_OWORD *)(v0 + 5704);
    *(_OWORD *)(v0 + 4728) = *(_OWORD *)(v0 + 5720);
    *(_OWORD *)(v0 + 4744) = *(_OWORD *)(v0 + 5736);
    *(_OWORD *)(v0 + 4760) = *(_OWORD *)(v0 + 5752);
    *(_OWORD *)(v0 + 4776) = *(_OWORD *)(v0 + 5768);
    *(_WORD *)(v0 + 4792) = v199;
    *(_BYTE *)(v0 + 4794) = v200;
    *(_OWORD *)(v0 + 4800) = *(_OWORD *)(v0 + 5792);
    *(_BYTE *)(v0 + 4816) = v201;
    *(_OWORD *)(v0 + 4824) = *(_OWORD *)(v0 + 5816);
    *(_OWORD *)(v0 + 4840) = *(_OWORD *)(v0 + 5832);
    *(_OWORD *)(v0 + 4856) = *(_OWORD *)(v0 + 5848);
    *(_OWORD *)(v0 + 4872) = *(_OWORD *)(v0 + 5864);
    *(_QWORD *)(v0 + 4888) = v202;
    *(_BYTE *)(v0 + 5096) = v209;
    *(_QWORD *)(v0 + 5088) = v210;
    *(_QWORD *)(v0 + 5104) = v211;
    *(_QWORD *)(v0 + 5112) = v212;
    *(_OWORD *)(v0 + 5120) = *(_OWORD *)(v0 + 6112);
    *(_BYTE *)(v0 + 5136) = v213;
    *(_QWORD *)(v0 + 5144) = v214;
    sub_23AA724E8(v0 + 6144, v0 + 5152, qword_2542E6E20);
    sub_23ACFC940(v0 + 5152);
    sub_23AAFC3AC(v0 + 4656);
    v216 = sub_23AA9F3C4(4, *(_QWORD *)(v0 + 352));
    v195 = *(_QWORD *)(v0 + 304);
    if (v216)
    {
      sub_23AAB5630();
      v217 = swift_allocObject();
      v218 = sub_23B1A1F64(v217, 1);
      *v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE630);
      v220 = nullsub_1(v218);
      v221 = *(_QWORD *)(v0 + 448);
      v222 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v0 + 144) + 272))(v195, v220);
      *(_QWORD *)(v0 + 448) = v221;
      if (v221)
      {
        swift_bridgeObjectRelease();
LABEL_322:
        sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
        sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
        sub_23ADF2D34(v0 + 3656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
        sub_23AA724E8(v0 + 8624, v0 + 4152, qword_2542E6E20);
        v245 = v0 + 4152;
        goto LABEL_350;
      }
      v224 = v222;
      swift_bridgeObjectRelease();
      if (((uint64_t (*)(uint64_t))sub_23B0261BC)(v224))
      {
        v225 = 0;
        v226 = (char *)(v0 + 23824);
        v227 = *(_QWORD *)(v2 - 72);
        do
        {
          v228 = sub_23ACDBB7C((uint64_t (*)())(v0 + 4152), (unint64_t)v225, v224);
          v230 = *v229;
          swift_retain();
          ((void (*)(uint64_t, _QWORD))v228)(v0 + 4152, 0);
          v231 = v225 + 1;
          if (__OFADD__(v225, 1))
            goto LABEL_375;
          v232 = *(unsigned __int8 *)(v230 + 104);
          if ((_DWORD)v232 == 2)
            goto LABEL_453;
          v233 = *(void **)(v230 + 88);
          v234 = *(void **)(v230 + 96);
          *(_QWORD *)(v230 + 88) = 0;
          *(_QWORD *)(v230 + 96) = 0;
          *(_BYTE *)(v230 + 104) = 4;
          sub_23AAAEE10(v233, v234, v232);
          v235 = *(void (**)(uint64_t))(*(_QWORD *)v227 + 144);
          v236 = swift_retain();
          v235(v236);
          swift_release();
          v237 = *(unsigned __int8 *)(v230 + 144);
          *(_QWORD *)(v0 + 23808) = *(_QWORD *)(v230 + 136);
          *(_QWORD *)(v0 + 23816) = v237;
          *(_OWORD *)v226 = 0u;
          *(_OWORD *)(v0 + 23840) = 0u;
          *(_OWORD *)(v0 + 23856) = 0u;
          *(_OWORD *)(v0 + 23872) = 0u;
          *(_OWORD *)(v0 + 23888) = 0u;
          *(_OWORD *)(v0 + 23904) = 0u;
          *(_DWORD *)(v0 + 23920) = 151257088;
          sub_23B02058C(v227, v0 + 23808);
          swift_release();
          ++v225;
        }
        while (v231 != (char *)((uint64_t (*)(uint64_t))sub_23B0261BC)(v224));
        swift_bridgeObjectRelease();
        v150 = *(_QWORD *)(v0 + 376);
        v151 = *(int **)(v0 + 176);
        v195 = *(_QWORD *)(v0 + 304);
        v194 = *(_QWORD *)(v0 + 152);
      }
      else
      {
        swift_bridgeObjectRelease();
        v194 = *(_QWORD *)(v0 + 152);
      }
    }
  }
  sub_23AA724E8(v0 + 8128, v0 + 5152, qword_2542E6E20);
  sub_23AA724E8(v0 + 5152, v0 + 5648, qword_2542E6E20);
  if (sub_23AAFC2A4(v0 + 5648) != 1)
  {
    sub_23AA724E8(v0 + 5152, v0 + 4656, qword_2542E6E20);
    v224 = *(_QWORD *)(v0 + 4672);
    if (!sub_23AA9F490(v224))
    {
      if (sub_23AA9F3C4(4, v224))
      {
        sub_23AAB5630();
        v238 = swift_allocObject();
        v239 = sub_23B1A1F64(v238, 1);
        *v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE630);
        v241 = nullsub_1(v239);
        v242 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v0 + 144) + 272);
        sub_23ADF2D34(v0 + 5152, (voidsub_23AA88348);
        v243 = *(_QWORD *)(v0 + 448);
        v244 = v242(v195, v241);
        if (v243)
        {
          swift_bridgeObjectRelease();
          sub_23ADF2D34(v0 + 5152, (voidsub_23AAAEC3C);
          sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
          sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
          sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
          sub_23AA724E8(v0 + 8624, v0 + 4152, qword_2542E6E20);
          v245 = v0 + 4152;
LABEL_350:
          sub_23ADF2D34(v245, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
          v33 = v195;
          goto LABEL_11;
        }
        v246 = v244;
        *(_QWORD *)(v0 + 448) = 0;
        swift_bridgeObjectRelease();
        if (((uint64_t (*)(uint64_t))sub_23B0261BC)(v246))
        {
          v247 = 0;
          v248 = *(_QWORD *)(v2 - 72);
          while (1)
          {
            v249 = sub_23ACDBB7C((uint64_t (*)())(v0 + 4152), v247, v246);
            v226 = *v250;
            swift_retain();
            ((void (*)(uint64_t, _QWORD))v249)(v0 + 4152, 0);
            v251 = v247 + 1;
            if (__OFADD__(v247, 1))
            {
              __break(1u);
              goto LABEL_384;
            }
            v232 = v226[104];
            if ((_DWORD)v232 == 2)
              break;
            v252 = (void *)*((_QWORD *)v226 + 11);
            v253 = (void *)*((_QWORD *)v226 + 12);
            *((_QWORD *)v226 + 11) = 0;
            *((_QWORD *)v226 + 12) = 0;
            v226[104] = 4;
            sub_23AAAEE10(v252, v253, v232);
            v254 = *(void (**)(uint64_t))(*(_QWORD *)v248 + 144);
            v255 = swift_retain();
            v254(v255);
            swift_release();
            v256 = v226[144];
            *(_QWORD *)(v0 + 23688) = *((_QWORD *)v226 + 17);
            *(_QWORD *)(v0 + 23696) = v256;
            *(_OWORD *)(v0 + 23704) = 0u;
            *(_OWORD *)(v0 + 23720) = 0u;
            *(_OWORD *)(v0 + 23736) = 0u;
            *(_OWORD *)(v0 + 23752) = 0u;
            *(_OWORD *)(v0 + 23768) = 0u;
            *(_OWORD *)(v0 + 23784) = 0u;
            *(_DWORD *)(v0 + 23800) = 151257088;
            sub_23B02058C(v248, v0 + 23688);
            swift_release();
            ++v247;
            if (v251 == ((uint64_t (*)(uint64_t))sub_23B0261BC)(v246))
              goto LABEL_86;
          }
LABEL_453:
          sub_23AFF07BC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/Job.swift", 97, v232, 140);
        }
LABEL_86:
        swift_bridgeObjectRelease();
        v150 = *(_QWORD *)(v0 + 376);
        v151 = *(int **)(v0 + 176);
        v195 = *(_QWORD *)(v0 + 304);
        v194 = *(_QWORD *)(v0 + 152);
      }
      else
      {
        sub_23ADF2D34(v0 + 5152, (voidsub_23AA88348);
      }
      if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) != 0)
        goto LABEL_103;
      v257 = *(_QWORD *)v195;
      v258 = *(unsigned __int8 *)(v195 + 8);
      *(_QWORD *)(v0 + 23568) = *(_QWORD *)v195;
      *(_QWORD *)(v0 + 23576) = v258;
      *(_OWORD *)(v0 + 23584) = 0u;
      *(_OWORD *)(v0 + 23600) = 0u;
      *(_OWORD *)(v0 + 23616) = 0u;
      *(_OWORD *)(v0 + 23632) = 0u;
      *(_OWORD *)(v0 + 23648) = 0u;
      *(_OWORD *)(v0 + 23664) = 0u;
      *(_DWORD *)(v0 + 23680) = 151191552;
      v259 = sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 23568);
      v260 = (*(uint64_t (**)(uint64_t))(v0 + 384))(v259);
      if (sub_23AA9F3D0(0x4000, v260))
      {
        *(_QWORD *)(v0 + 23448) = v257;
        *(_QWORD *)(v0 + 23456) = v258;
        *(_OWORD *)(v0 + 23464) = 0u;
        *(_OWORD *)(v0 + 23480) = 0u;
        *(_OWORD *)(v0 + 23496) = 0u;
        *(_OWORD *)(v0 + 23512) = 0u;
        *(_OWORD *)(v0 + 23528) = 0u;
        *(_OWORD *)(v0 + 23544) = 0u;
        *(_DWORD *)(v0 + 23560) = 151912448;
        sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 23448);
      }
      if (sub_23AA9F3C4(8, v224))
      {
        *(_QWORD *)(v0 + 4152) = v257;
        *(_BYTE *)(v0 + 4160) = v258;
        *(_BYTE *)(v0 + 4161) = 0;
        v261 = *(unsigned __int8 *)(v195
                                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00)
                                           + 48));
        v262 = *(_QWORD *)(v2 - 72);
        if (qword_2542E7190 != -1)
          swift_once();
        v263 = qword_2542EDE38;
        if ((qword_2542EDE38 & 8) != 0 && v261 == 1)
          v263 = qword_2542EDE38 & 0xFFFFFFFFFFFFFFF7;
        *(_QWORD *)(v0 + 4168) = v263;
        *(_QWORD *)(v0 + 4176) = *(_QWORD *)(v0 + 240);
        *(_QWORD *)(v0 + 4184) = *(_QWORD *)(v0 + 248);
        *(_WORD *)(v0 + 4266) = 2304;
        sub_23AA724E8(v0 + 4152, v0 + 23208, qword_2542E1408);
        sub_23B02058C(v262, v0 + 23208);
        v265 = v0 + 23208;
      }
      else
      {
        *(_QWORD *)(v0 + 4152) = v257;
        *(_BYTE *)(v0 + 4160) = v258;
        *(_BYTE *)(v0 + 4161) = 0;
        v266 = sub_23ACD83C0(0);
        v267 = sub_23AFD7BC8(v266);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 4168) = v267;
        *(_QWORD *)(v0 + 4176) = *(_QWORD *)(v0 + 240);
        *(_QWORD *)(v0 + 4184) = *(_QWORD *)(v0 + 248);
        *(_WORD *)(v0 + 4266) = 2304;
        sub_23AA724E8(v0 + 4152, v0 + 23328, qword_2542E1408);
        sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 23328);
        v265 = v0 + 23328;
      }
      sub_23AEB3270(v265, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
      v194 = *(_QWORD *)(v0 + 152);
      v151 = *(int **)(v0 + 176);
      v268 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      if (!sub_23AC37B08(*(_BYTE *)(v195 + *(int *)(v268 + 48)), 1) || (sub_23AFFA4E8() & 1) != 0)
      {
LABEL_103:
        sub_23ADF2D34(v0 + 5152, (voidsub_23AAAEC3C);
      }
      else
      {
        if (*(_BYTE *)(v195 + *(int *)(v150 + 48) + v151[16]) != 1)
        {
          v287 = *(_QWORD *)v195;
          v288 = *(unsigned __int8 *)(v195 + 8);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
          v289 = swift_allocObject();
          v290 = sub_23B1A1F64(v289, 2);
          *v291 = v194;
          v291[1] = 0x80000000;
          v292 = nullsub_1(v290);
          v293 = sub_23AFD7BC8(v292);
          v194 = *(_QWORD *)(v0 + 152);
          swift_bridgeObjectRelease();
          sub_23B002A70(v287, v288, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), v293);
          (*(void (**)(void))(**(_QWORD **)(v2 - 72) + 144))();
          swift_release();
        }
        sub_23ADF2D34(v0 + 5152, (voidsub_23AAAEC3C);
        v151 = *(int **)(v0 + 176);
      }
    }
  }
  if (sub_23AA9F3D0(0x4000000, v194))
  {
    v269 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    if (sub_23AC37B08(*(_BYTE *)(v195 + *(int *)(v269 + 48)), 1))
    {
      v270 = *(_QWORD *)v195;
      v271 = *(unsigned __int8 *)(v195 + 8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
      v272 = swift_allocObject();
      v273 = sub_23B1A1F64(v272, 2);
      *v274 = v194;
      v274[1] = 0x1000000000;
      v275 = nullsub_1(v273);
      v276 = v195;
      v277 = v150;
      v278 = v151;
      v279 = sub_23AFD7BC8(v275);
      v194 = *(_QWORD *)(v0 + 152);
      swift_bridgeObjectRelease();
      v280 = v279;
      v151 = v278;
      v150 = v277;
      v195 = v276;
      sub_23B002A70(v270, v271, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), v280);
      (*(void (**)(void))(**(_QWORD **)(v2 - 72) + 144))();
      swift_release();
    }
  }
  v281 = sub_23AA9F3D0(0x1000000000, v194);
  v282 = v194;
  v283 = v281;
  v284 = sub_23AA9F3D0(0x2000000000, v282);
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0)
  {
    v285 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    if (sub_23AC37B08(*(_BYTE *)(v195 + *(int *)(v285 + 48)), 1)
      && sub_23AA9F3D0(0x100000000000, *(_QWORD *)(v0 + 9120)))
    {
      v286 = v195 + *(int *)(v150 + 48);
      if ((*(_BYTE *)(v286 + v151[16]) & 1) == 0)
      {
        if ((*(_BYTE *)(v286 + v151[15]) & 1) != 0
          && (sub_23AA724E8(v0 + 5152, v0 + 4656, qword_2542E6E20), sub_23AAFC2A4(v0 + 4656) != 1))
        {
          sub_23AA724E8(v0 + 5152, v0 + 4152, qword_2542E6E20);
          v283 |= !sub_23AA9F3C4(16, *(_QWORD *)(v0 + 4168));
        }
        else
        {
          v283 = 1;
        }
      }
    }
    if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0 && sub_23AA9F3D0(2, *(_QWORD *)(v0 + 9120)))
    {
      v294 = v195;
      v295 = v150;
      v296 = v151;
      v297 = *(_QWORD *)(v0 + 312);
      v298 = *(uint64_t (**)(void))(**(_QWORD **)(v0 + 400) + 528);
      *(_QWORD *)(v0 + 336) = v297 + 16;
      v299 = *(_QWORD *)(v0 + 448);
      v300 = v298();
      *(_QWORD *)(v0 + 448) = v299;
      if (v299)
      {
        sub_23AA8A05C(v297, (uint64_t *)&unk_2542E6B00);
        sub_23AA724E8(v0 + 8128, v0 + 4152, qword_2542E6E20);
        sub_23ADF2D34(v0 + 4152, (voidsub_23AAAEC3C);
        sub_23AA724E8(v0 + 8624, v0 + 4656, qword_2542E6E20);
        sub_23ADF2D34(v0 + 4656, (voidsub_23AAAEC3C);
        v33 = v294;
        goto LABEL_11;
      }
      v301 = v300;
      if (sub_23AF9C8A8(v300))
      {
        swift_bridgeObjectRelease();
        if ((v283 & v284 & 1) != 0)
        {
          v302 = 1;
          LOBYTE(v283) = 1;
          v151 = v296;
          v150 = v295;
          v195 = v294;
          goto LABEL_146;
        }
      }
      else
      {
        v303 = *(_QWORD *)(v0 + 448);
        if (sub_23AB6BC30(v301))
        {
          v304 = 0;
          *(_QWORD *)(v0 + 352) = *(_QWORD *)(**(_QWORD **)(v0 + 392) + 160);
          do
          {
            v305 = sub_23ACDBC44((uint64_t (*)())(v0 + 4656), v304, v301);
            v307 = *v306;
            v308 = *((unsigned __int8 *)v306 + 8);
            ((void (*)(uint64_t, _QWORD))v305)(v0 + 4656, 0);
            v309 = v304 + 1;
            if (__OFADD__(v304, 1))
            {
              __break(1u);
              goto LABEL_444;
            }
            *(_QWORD *)(v0 + 3656) = v307;
            *(_BYTE *)(v0 + 3664) = v308;
            (*(void (**)(uint64_t))(v0 + 352))(v0 + 3656);
            if (v303)
            {
              swift_bridgeObjectRelease();
              sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
              sub_23AA724E8(v0 + 8128, v0 + 4152, qword_2542E6E20);
              sub_23ADF2D34(v0 + 4152, (voidsub_23AAAEC3C);
              sub_23AA724E8(v0 + 8624, v0 + 4656, qword_2542E6E20);
              sub_23ADF2D34(v0 + 4656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
              sub_23AA8A05C(*(_QWORD *)(v0 + 304), (uint64_t *)&unk_2542E6B00);
              return v20 & 1;
            }
            v310 = *(void **)(v0 + 2656);
            if (v310)
            {
              *(_QWORD *)(v0 + 3152) = v310;
              v311 = *(_QWORD *)(v0 + 96);
              (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 408) + 40) + 240))(v0 + 3152, 1);

              v312 = *(_QWORD *)(v0 + 88);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 48))(v311, 1, v312) == 1)
              {
                sub_23AA8A05C(v311, &qword_2542E4770);
              }
              else
              {
                v313 = *(_QWORD *)(v0 + 56);
                sub_23AA724E8(v311, v313, (uint64_t *)&unk_2542E4760);
                v314 = *(_BYTE *)(v313 + *(int *)(v312 + 48) + *(int *)(*(_QWORD *)(v0 + 176) + 60));
                sub_23AA8A05C(v313, (uint64_t *)&unk_2542E4760);
                if ((v314 & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  v302 = 1;
                  LOBYTE(v283) = 1;
                  *(_QWORD *)(v0 + 448) = 0;
                  goto LABEL_141;
                }
              }
            }
            ++v304;
          }
          while (v309 != sub_23AB6BC30(v301));
        }
        *(_QWORD *)(v0 + 448) = v303;
        swift_bridgeObjectRelease();
        v302 = 1;
        v283 = 1;
        v150 = *(_QWORD *)(v0 + 376);
        v151 = *(int **)(v0 + 176);
        v195 = *(_QWORD *)(v0 + 304);
        if (v284)
          goto LABEL_146;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
      v315 = swift_allocObject();
      v316 = sub_23B1A1F64(v315, 2);
      *v317 = xmmword_23B1DA9E0;
      v318 = nullsub_1(v316);
      v319 = sub_23AFD7BC8(v318);
      swift_bridgeObjectRelease();
      v320 = *(_QWORD *)(v0 + 448);
      v321 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v0 + 400) + 448))(*(_QWORD *)(v0 + 336), v319);
      if (v320)
      {
        sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
        sub_23AA724E8(v0 + 8128, v0 + 4152, qword_2542E6E20);
        sub_23ADF2D34(v0 + 4152, (voidsub_23AAAEC3C);
        sub_23AA724E8(v0 + 8624, v0 + 4656, qword_2542E6E20);
        v322 = v0 + 4656;
        goto LABEL_138;
      }
      v323 = v321;
      v283 |= sub_23AA9F3D0(0x1000000000, v321);
      v324 = sub_23AA9F3D0(0x2000000000, v323);
      *(_QWORD *)(v0 + 448) = 0;
      if (v324)
      {
        v302 = 1;
LABEL_141:
        v150 = *(_QWORD *)(v0 + 376);
        v151 = *(int **)(v0 + 176);
        v195 = *(_QWORD *)(v0 + 304);
        goto LABEL_146;
      }
      v150 = *(_QWORD *)(v0 + 376);
      v151 = *(int **)(v0 + 176);
      v195 = *(_QWORD *)(v0 + 304);
    }
  }
  if (((v283 | v284) & 1) == 0)
  {
LABEL_147:
    v325 = v195;
    goto LABEL_148;
  }
  v302 = v283 ^ 1 | v284;
LABEL_146:
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) != 0)
    goto LABEL_147;
  v380 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  if (sub_23AC37B08(*(_BYTE *)(v195 + *(int *)(v380 + 48)), 1))
  {
    v381 = sub_23ACD8484(0);
    v382 = sub_23AFD7BC8(v381);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 4656) = v382;
    sub_23AF24980(0x1000000000, v283 & 1);
    v383 = sub_23AF24980(0x2000000000, v302 & 1);
    v384 = *(_QWORD *)v195;
    v325 = v195;
    v385 = *(unsigned __int8 *)(v195 + 8);
    v386 = sub_23ADA8168(v383);
    v387 = v150;
    v388 = v151;
    v389 = *(_QWORD *)(v0 + 4656);
    sub_23B002A70(v384, v385, v386, v390, v389);
    v391 = *(_QWORD *)(v2 - 72);
    (*(void (**)(void))(*(_QWORD *)v391 + 144))();
    v392 = swift_release();
    v393 = sub_23ADA8168(v392);
    v394 = v389;
    v151 = v388;
    v150 = v387;
    sub_23AE9F05C(v384, v385, v393, v395, v394, &qword_2569E6118);
    (*(void (**)(void))(*(_QWORD *)v391 + 144))();
    swift_release();
    goto LABEL_148;
  }
  sub_23AA724E8(v0 + 8128, v0 + 4152, qword_2542E6E20);
  sub_23AA724E8(v0 + 4152, v0 + 4656, qword_2542E6E20);
  v325 = v195;
  if (sub_23AAFC2A4(v0 + 4656) != 1)
  {
    sub_23AA724E8(v0 + 4152, v0 + 3656, qword_2542E6E20);
    memcpy((void *)(v0 + 22712), (const void *)(v0 + 3656), 0x1F0uLL);
    if (sub_23AA9F890() && sub_23AA9F490(*(_QWORD *)(v0 + 3672)))
    {
      if (!sub_23AA9F490(*(_QWORD *)(v0 + 3904)))
      {
LABEL_382:
        v150 = *(_QWORD *)(v0 + 376);
        v151 = *(int **)(v0 + 176);
        v325 = *(_QWORD *)(v0 + 304);
        goto LABEL_148;
      }
      if ((v283 & 1) != 0
        && (v396 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00),
            sub_23AAA0A58(*(_BYTE *)(*(_QWORD *)(v0 + 304) + *(int *)(v396 + 48))))
        && !sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v0 + 304)+ *(int *)(*(_QWORD *)(v0 + 376) + 48)+ *(int *)(*(_QWORD *)(v0 + 176) + 84)), 0))
      {
        v820 = *(uint64_t **)(v0 + 304);
        v821 = *v820;
        LOBYTE(v820) = *((_BYTE *)v820 + 8);
        *(_QWORD *)(v0 + 3152) = v821;
        *(_WORD *)(v0 + 3160) = v820;
        v822 = sub_23ADF2D34(v0 + 4152, (voidsub_23AA88348);
        v823 = sub_23ADA8168(v822);
        *(_QWORD *)(v0 + 3168) = 0x10000;
        *(_QWORD *)(v0 + 3176) = v823;
        *(_QWORD *)(v0 + 3184) = v824;
        *(_BYTE *)(v0 + 3234) = 0;
        *(_BYTE *)(v0 + 3267) = 8;
        sub_23AA724E8(v0 + 3152, v0 + 22592, qword_2542E1408);
        sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 22592);
        sub_23AEB3270(v0 + 22592, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
        if ((v302 & 1) != 0)
          goto LABEL_172;
      }
      else
      {
        sub_23ACFC940(v0 + 3656);
        if ((v302 & 1) != 0)
        {
LABEL_172:
          if ((*(_BYTE *)(*(_QWORD *)(v0 + 304)
                         + *(int *)(*(_QWORD *)(v0 + 376) + 48)
                         + *(int *)(*(_QWORD *)(v0 + 176) + 80)) & 1) == 0)
          {
            v397 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
            v398 = sub_23AFA7480(*(_BYTE *)(*(_QWORD *)(v0 + 304) + *(int *)(v397 + 48)));
            if (v398)
            {
              v399 = *(_QWORD *)(v0 + 304);
              v400 = *(_QWORD *)v399;
              v325 = v399;
              LOBYTE(v399) = *(_BYTE *)(v399 + 8);
              *(_QWORD *)(v0 + 3152) = v400;
              *(_WORD *)(v0 + 3160) = v399;
              v401 = sub_23ADA8168(v398);
              *(_QWORD *)(v0 + 3168) = 8;
              *(_QWORD *)(v0 + 3176) = v401;
              *(_QWORD *)(v0 + 3184) = v402;
              *(_WORD *)(v0 + 3266) = 2304;
              sub_23AA724E8(v0 + 3152, v0 + 22472, qword_2542E1408);
              sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 22472);
              sub_23AEB3270(v0 + 22472, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
              sub_23ADF2D34(v0 + 4152, (voidsub_23AAAEC3C);
              v150 = *(_QWORD *)(v0 + 376);
              v151 = *(int **)(v0 + 176);
              goto LABEL_148;
            }
          }
        }
      }
      sub_23ADF2D34(v0 + 4152, (voidsub_23AAAEC3C);
      goto LABEL_382;
    }
  }
LABEL_148:
  LODWORD(v226) = sub_23AA9F3D0(1, *(_QWORD *)(v0 + 152));
  if ((v226 & 1) != 0 && *(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) == 1)
  {
    sub_23AA724E8(v0 + 8128, v0 + 4152, qword_2542E6E20);
    sub_23AA724E8(v0 + 4152, v0 + 4656, qword_2542E6E20);
    if (sub_23AAFC2A4(v0 + 4656) != 1)
    {
      sub_23AA724E8(v0 + 4152, v0 + 3656, qword_2542E6E20);
      memcpy((void *)(v0 + 21976), (const void *)(v0 + 3656), 0x1F0uLL);
      if (!sub_23AA9F890())
      {
        v326 = *(unsigned __int8 *)(v325 + 8);
        *(_QWORD *)(v0 + 21856) = *(_QWORD *)v325;
        *(_QWORD *)(v0 + 21864) = v326;
        *(_QWORD *)(v0 + 21872) = 515;
        *(_QWORD *)(v0 + 21880) = *(_QWORD *)(v0 + 240);
        *(_OWORD *)(v0 + 21896) = 0u;
        *(_OWORD *)(v0 + 21912) = 0u;
        *(_QWORD *)(v0 + 21888) = *(_QWORD *)(v0 + 248);
        *(_QWORD *)(v0 + 21928) = 0;
        *(_QWORD *)(v0 + 21936) = 786432;
        *(_QWORD *)(v0 + 21944) = 0;
        *(_QWORD *)(v0 + 21960) = 0;
        *(_QWORD *)(v0 + 21952) = 0;
        *(_DWORD *)(v0 + 21967) = 0;
        *(_BYTE *)(v0 + 21971) = 8;
        sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 21856);
      }
    }
  }
  v327 = *(_QWORD *)(v0 + 9120);
  v224 = sub_23AA9F3D0(8, v327);
  v195 = v325;
  *(_QWORD *)(v0 + 392) = v327;
  if ((v224 & 1) != 0)
  {
    sub_23AA724E8(v0 + 8128, v0 + 4152, qword_2542E6E20);
    sub_23AA724E8(v0 + 4152, v0 + 3656, qword_2542E6E20);
    sub_23AA724E8(v0 + 4152, v0 + 4656, qword_2542E6E20);
    if (sub_23AAFC2A4(v0 + 4656) != 1)
    {
      sub_23AA724E8(v0 + 4152, v0 + 2656, qword_2542E6E20);
      v328 = *(unsigned __int8 *)(v0 + 3688);
      v329 = *(_QWORD *)(v0 + 3656);
      v330 = *(_BYTE *)(v0 + 3664);
      v331 = *(_WORD *)(v0 + 3792);
      v332 = *(_BYTE *)(v0 + 3794);
      v333 = *(_BYTE *)(v0 + 3816);
      v334 = *(_OWORD *)(v0 + 4072);
      *(_OWORD *)(v0 + 3552) = *(_OWORD *)(v0 + 4056);
      *(_OWORD *)(v0 + 3568) = v334;
      v335 = *(_QWORD *)(v0 + 3888);
      *(_QWORD *)(v0 + 3584) = *(_QWORD *)(v0 + 4088);
      v336 = *(_OWORD *)(v0 + 4008);
      *(_OWORD *)(v0 + 3488) = *(_OWORD *)(v0 + 3992);
      *(_OWORD *)(v0 + 3504) = v336;
      v337 = *(_OWORD *)(v0 + 4024);
      *(_OWORD *)(v0 + 3536) = *(_OWORD *)(v0 + 4040);
      *(_OWORD *)(v0 + 3520) = v337;
      v338 = *(_OWORD *)(v0 + 3944);
      *(_OWORD *)(v0 + 3424) = *(_OWORD *)(v0 + 3928);
      *(_OWORD *)(v0 + 3440) = v338;
      v339 = *(_OWORD *)(v0 + 3960);
      *(_OWORD *)(v0 + 3472) = *(_OWORD *)(v0 + 3976);
      *(_OWORD *)(v0 + 3456) = v339;
      v340 = *(_OWORD *)(v0 + 3896);
      *(_OWORD *)(v0 + 3408) = *(_OWORD *)(v0 + 3912);
      *(_OWORD *)(v0 + 3392) = v340;
      v341 = *(_BYTE *)(v0 + 4096);
      v342 = *(_QWORD *)(v0 + 4104);
      v343 = *(_QWORD *)(v0 + 4112);
      v344 = *(_BYTE *)(v0 + 4136);
      v345 = *(_QWORD *)(v0 + 4144);
      *(_QWORD *)(v0 + 3152) = v329;
      *(_BYTE *)(v0 + 3160) = v330;
      *(_OWORD *)(v0 + 3168) = *(_OWORD *)(v0 + 3672);
      *(_BYTE *)(v0 + 3184) = v328;
      *(_OWORD *)(v0 + 3192) = *(_OWORD *)(v0 + 3696);
      *(_OWORD *)(v0 + 3208) = *(_OWORD *)(v0 + 3712);
      *(_OWORD *)(v0 + 3224) = *(_OWORD *)(v0 + 3728);
      *(_OWORD *)(v0 + 3240) = *(_OWORD *)(v0 + 3744);
      *(_OWORD *)(v0 + 3256) = *(_OWORD *)(v0 + 3760);
      *(_OWORD *)(v0 + 3272) = *(_OWORD *)(v0 + 3776);
      *(_WORD *)(v0 + 3288) = v331;
      *(_BYTE *)(v0 + 3290) = v332;
      *(_OWORD *)(v0 + 3296) = *(_OWORD *)(v0 + 3800);
      *(_BYTE *)(v0 + 3312) = v333;
      *(_OWORD *)(v0 + 3320) = *(_OWORD *)(v0 + 3824);
      *(_OWORD *)(v0 + 3336) = *(_OWORD *)(v0 + 3840);
      *(_OWORD *)(v0 + 3352) = *(_OWORD *)(v0 + 3856);
      *(_OWORD *)(v0 + 3368) = *(_OWORD *)(v0 + 3872);
      *(_QWORD *)(v0 + 3384) = v335;
      *(_BYTE *)(v0 + 3592) = v341;
      *(_QWORD *)(v0 + 3600) = v342;
      *(_QWORD *)(v0 + 3608) = v343;
      *(_OWORD *)(v0 + 3616) = *(_OWORD *)(v0 + 4120);
      *(_BYTE *)(v0 + 3632) = v344;
      *(_QWORD *)(v0 + 3640) = v345;
      sub_23ACFC940(v0 + 2656);
      sub_23AAFC3AC(v0 + 3152);
      if (v328 != 3 && sub_23AA9F51C(v328, 1))
      {
        v346 = *(unsigned __int8 *)(v325 + 8);
        *(_QWORD *)(v0 + 21736) = *(_QWORD *)v325;
        *(_QWORD *)(v0 + 21744) = v346;
        *(_QWORD *)(v0 + 21752) = 769;
        *(_QWORD *)(v0 + 21760) = *(_QWORD *)(v0 + 240);
        *(_OWORD *)(v0 + 21776) = 0u;
        *(_OWORD *)(v0 + 21792) = 0u;
        *(_OWORD *)(v0 + 21808) = 0u;
        *(_OWORD *)(v0 + 21824) = 0u;
        *(_QWORD *)(v0 + 21768) = *(_QWORD *)(v0 + 248);
        *(_QWORD *)(v0 + 21840) = 0;
        *(_DWORD *)(v0 + 21848) = 151781376;
        sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 21736);
        v347 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
        if (sub_23AC37B08(*(_BYTE *)(v325 + *(int *)(v347 + 48)), 0))
        {
          sub_23AA724E8(v0 + 4152, v0 + 1664, qword_2542E6E20);
          v348 = *(_QWORD *)(v0 + 2152);
          v349 = *(_OWORD *)(v0 + 1872);
          *(_OWORD *)(v0 + 2352) = *(_OWORD *)(v0 + 1856);
          *(_OWORD *)(v0 + 2368) = v349;
          v350 = *(_OWORD *)(v0 + 1808);
          *(_OWORD *)(v0 + 2288) = *(_OWORD *)(v0 + 1792);
          *(_OWORD *)(v0 + 2304) = v350;
          v351 = *(_OWORD *)(v0 + 1824);
          *(_OWORD *)(v0 + 2336) = *(_OWORD *)(v0 + 1840);
          *(_OWORD *)(v0 + 2320) = v351;
          v352 = *(_OWORD *)(v0 + 1744);
          *(_OWORD *)(v0 + 2224) = *(_OWORD *)(v0 + 1728);
          *(_OWORD *)(v0 + 2240) = v352;
          v353 = *(_OWORD *)(v0 + 1760);
          *(_OWORD *)(v0 + 2272) = *(_OWORD *)(v0 + 1776);
          *(_OWORD *)(v0 + 2256) = v353;
          v354 = *(_OWORD *)(v0 + 1680);
          *(_OWORD *)(v0 + 2160) = *(_OWORD *)(v0 + 1664);
          *(_OWORD *)(v0 + 2176) = v354;
          v355 = *(_OWORD *)(v0 + 1696);
          *(_OWORD *)(v0 + 2208) = *(_OWORD *)(v0 + 1712);
          *(_OWORD *)(v0 + 2192) = v355;
          v356 = *(_OWORD *)(v0 + 2064);
          *(_OWORD *)(v0 + 2544) = *(_OWORD *)(v0 + 2048);
          *(_OWORD *)(v0 + 2560) = v356;
          *(_OWORD *)(v0 + 2576) = *(_OWORD *)(v0 + 2080);
          *(_QWORD *)(v0 + 2592) = *(_QWORD *)(v0 + 2096);
          v357 = *(_OWORD *)(v0 + 2000);
          *(_OWORD *)(v0 + 2480) = *(_OWORD *)(v0 + 1984);
          *(_OWORD *)(v0 + 2496) = v357;
          v358 = *(_OWORD *)(v0 + 2032);
          *(_OWORD *)(v0 + 2512) = *(_OWORD *)(v0 + 2016);
          *(_OWORD *)(v0 + 2528) = v358;
          v359 = *(_OWORD *)(v0 + 1936);
          *(_OWORD *)(v0 + 2416) = *(_OWORD *)(v0 + 1920);
          *(_OWORD *)(v0 + 2432) = v359;
          v360 = *(_OWORD *)(v0 + 1968);
          *(_OWORD *)(v0 + 2448) = *(_OWORD *)(v0 + 1952);
          *(_OWORD *)(v0 + 2464) = v360;
          v361 = *(_OWORD *)(v0 + 1904);
          *(_OWORD *)(v0 + 2384) = *(_OWORD *)(v0 + 1888);
          *(_OWORD *)(v0 + 2400) = v361;
          v362 = *(_QWORD *)(v0 + 2112);
          v363 = *(_QWORD *)(v0 + 2120);
          v364 = *(_BYTE *)(v0 + 2144);
          *(_BYTE *)(v0 + 2600) = *(_BYTE *)(v0 + 2104);
          *(_QWORD *)(v0 + 2608) = v362;
          *(_QWORD *)(v0 + 2616) = v363;
          *(_OWORD *)(v0 + 2624) = *(_OWORD *)(v0 + 2128);
          *(_BYTE *)(v0 + 2640) = v364;
          *(_QWORD *)(v0 + 2648) = v348;
          sub_23ACFC940(v0 + 2656);
          sub_23AAFC3AC(v0 + 2160);
          if (!sub_23AA9F3D0(1, v348))
          {
            *(_DWORD *)(v0 + 352) = (_DWORD)v226;
            sub_23AA724E8(*(_QWORD *)(v0 + 312) + *(int *)(v150 + 52), v0 + 464, &qword_2542E5050);
            sub_23AA724E8(v0 + 464, v0 + 1664, &qword_2542E5050);
            if (sub_23AAFCF2C(v0 + 1664) == 1)
              goto LABEL_175;
            v365 = *(_OWORD *)(v0 + 1872);
            *(_OWORD *)(v0 + 21680) = *(_OWORD *)(v0 + 1856);
            *(_OWORD *)(v0 + 21696) = v365;
            *(_OWORD *)(v0 + 21712) = *(_OWORD *)(v0 + 1888);
            *(_QWORD *)(v0 + 21728) = *(_QWORD *)(v0 + 1904);
            v366 = *(_OWORD *)(v0 + 1808);
            *(_OWORD *)(v0 + 21616) = *(_OWORD *)(v0 + 1792);
            *(_OWORD *)(v0 + 21632) = v366;
            v367 = *(_OWORD *)(v0 + 1840);
            *(_OWORD *)(v0 + 21648) = *(_OWORD *)(v0 + 1824);
            *(_OWORD *)(v0 + 21664) = v367;
            v368 = *(_OWORD *)(v0 + 1744);
            *(_OWORD *)(v0 + 21552) = *(_OWORD *)(v0 + 1728);
            *(_OWORD *)(v0 + 21568) = v368;
            v369 = *(_OWORD *)(v0 + 1776);
            *(_OWORD *)(v0 + 21584) = *(_OWORD *)(v0 + 1760);
            *(_OWORD *)(v0 + 21600) = v369;
            v370 = *(_OWORD *)(v0 + 1680);
            *(_OWORD *)(v0 + 21488) = *(_OWORD *)(v0 + 1664);
            *(_OWORD *)(v0 + 21504) = v370;
            v371 = *(_OWORD *)(v0 + 1712);
            *(_OWORD *)(v0 + 21520) = *(_OWORD *)(v0 + 1696);
            *(_OWORD *)(v0 + 21536) = v371;
            v372 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 408) + 512);
            sub_23AA724E8(v0 + 464, v0 + 1416, &qword_2542E5050);
            v373 = sub_23AC42B28(v0 + 1416);
            v374 = v372(v373);
            v375 = sub_23AF9679C(v374 & 1, 0, 0);
            sub_23AAB7E4C((_QWORD *)(v0 + 464), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
            if (!sub_23AC37674(v375, 501))
            {
LABEL_175:
              v150 = *(_QWORD *)(v0 + 376);
              v151 = *(int **)(v0 + 176);
              v195 = *(_QWORD *)(v0 + 304);
            }
            else
            {
              v195 = *(_QWORD *)(v0 + 304);
              v376 = *(_QWORD *)v195;
              v377 = *(unsigned __int8 *)(v195 + 8);
              v378 = sub_23ACD8490(0);
              v379 = sub_23AFD7BC8(v378);
              swift_bridgeObjectRelease();
              *(_QWORD *)(v0 + 21368) = v376;
              *(_QWORD *)(v0 + 21376) = v377;
              *(_QWORD *)(v0 + 21384) = 1;
              *(_QWORD *)(v0 + 21392) = v379;
              *(_OWORD *)(v0 + 21400) = 0u;
              *(_OWORD *)(v0 + 21416) = 0u;
              *(_OWORD *)(v0 + 21432) = 0u;
              *(_OWORD *)(v0 + 21448) = 0u;
              *(_OWORD *)(v0 + 21464) = 0u;
              *(_DWORD *)(v0 + 21479) = 0;
              *(_BYTE *)(v0 + 21483) = 13;
              sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 21368);
              v150 = *(_QWORD *)(v0 + 376);
              v151 = *(int **)(v0 + 176);
            }
            LODWORD(v226) = *(_DWORD *)(v0 + 352);
            v327 = *(_QWORD *)(v0 + 392);
          }
        }
      }
    }
  }
  if (!*(_DWORD *)(v0 + 416))
  {
    v403 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    if ((v224 & sub_23AC37B08(*(_BYTE *)(v195 + *(int *)(v403 + 48)), 0) & 1) != 0)
    {
      *(_DWORD *)(v0 + 352) = (_DWORD)v226;
      v404 = v195;
      v405 = *(_QWORD *)(v0 + 400);
      v406 = *(void (**)(uint64_t, uint64_t, uint64_t))(**(_QWORD **)(v405 + 16) + 504);
      v407 = sub_23AAB5A28((unint64_t *)&unk_2569E6460, (uint64_t *)&unk_2542E6B00, (uint64_t)&unk_23B1DD478);
      swift_retain();
      v406(v404, v150, v407);
      swift_release();
      v408 = *(unsigned __int8 *)(v0 + 4664);
      if (v408 == 255)
      {
        v151 = *(int **)(v0 + 176);
        v195 = *(_QWORD *)(v0 + 304);
        LODWORD(v226) = *(_DWORD *)(v0 + 352);
LABEL_206:
        v327 = *(_QWORD *)(v0 + 392);
        goto LABEL_207;
      }
      v409 = *(_QWORD *)(v0 + 4656);
      *(_QWORD *)(v0 + 3656) = v409;
      *(_BYTE *)(v0 + 3664) = v408;
      v410 = *(void (**)(uint64_t, uint64_t, uint64_t))(**(_QWORD **)(v405 + 16) + 504);
      swift_retain();
      v411 = *(_QWORD *)(v0 + 312);
      v410(v411, v150, v407);
      swift_release();
      v412 = *(_QWORD *)(v0 + 3152);
      if (*(unsigned __int8 *)(v0 + 3160) > 1u)
      {
        if (*(_BYTE *)(v0 + 3160) != 2)
        {
LABEL_196:
          sub_23AAB5630();
          v413 = swift_allocObject();
          v414 = sub_23B1A1F64(v413, 1);
          *v415 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FC0);
          v416 = nullsub_1(v414);
          v417 = *(_QWORD *)(v0 + 448);
          v418 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v0 + 144) + 272))(v0 + 3656, v416);
          v419 = v417;
          if (v417)
          {
            swift_bridgeObjectRelease();
            sub_23AA8A05C(v411, (uint64_t *)&unk_2542E6B00);
            sub_23AA724E8(v0 + 8128, v0 + 4152, qword_2542E6E20);
            sub_23ADF2D34(v0 + 4152, (voidsub_23AAAEC3C);
            sub_23AA724E8(v0 + 8624, v0 + 4656, qword_2542E6E20);
            sub_23ADF2D34(v0 + 4656, (voidsub_23AAAEC3C);
            sub_23AA8A05C(*(_QWORD *)(v0 + 304), (uint64_t *)&unk_2542E6B00);
            return v20 & 1;
          }
          v420 = v418;
          swift_bridgeObjectRelease();
          if (((uint64_t (*)(uint64_t))sub_23B0261BC)(v420))
          {
            v303 = 0;
            v308 = 4;
            v421 = *(_QWORD *)(v2 - 72);
            do
            {
              v422 = sub_23ACDBB7C((uint64_t (*)())(v0 + 4656), v303, v420);
              v424 = *v423;
              swift_retain();
              ((void (*)(uint64_t, _QWORD))v422)(v0 + 4656, 0);
              v425 = v303 + 1;
              if (__OFADD__(v303, 1))
              {
                __break(1u);
                goto LABEL_426;
              }
              v426 = *(unsigned __int8 *)(v424 + 104);
              if (v426 <= 1)
              {
                v427 = *(void **)(v424 + 88);
                v428 = *(void **)(v424 + 96);
                *(_QWORD *)(v424 + 88) = 0;
                *(_QWORD *)(v424 + 96) = 0;
                *(_BYTE *)(v424 + 104) = 4;
                sub_23AAAEE10(v427, v428, v426);
                v429 = *(void (**)(uint64_t))(*(_QWORD *)v421 + 144);
                v430 = swift_retain();
                v429(v430);
                swift_release();
              }
              swift_release();
              ++v303;
            }
            while (v425 != ((uint64_t (*)(uint64_t))sub_23B0261BC)(v420));
          }
          swift_bridgeObjectRelease();
          *(_QWORD *)(v0 + 448) = 0;
          v150 = *(_QWORD *)(v0 + 376);
          goto LABEL_205;
        }
        if (v412)
        {
          if (v408 != 2 || v409 != 1)
            goto LABEL_196;
        }
        else if (v408 != 2 || v409)
        {
          goto LABEL_196;
        }
      }
      else if (*(_BYTE *)(v0 + 3160))
      {
        if (v408 != 1 || v412 != v409)
          goto LABEL_196;
      }
      else if (v408 || (_DWORD)v412 != (_DWORD)v409)
      {
        goto LABEL_196;
      }
LABEL_205:
      LODWORD(v226) = *(_DWORD *)(v0 + 352);
      v151 = *(int **)(v0 + 176);
      v195 = *(_QWORD *)(v0 + 304);
      goto LABEL_206;
    }
  }
LABEL_207:
  v431 = sub_23AA9F490(v327);
  sub_23AA724E8(v0 + 8128, v0 + 4656, qword_2542E6E20);
  if (!v431)
    goto LABEL_211;
  sub_23AA724E8(v0 + 4656, v0 + 3656, qword_2542E6E20);
  sub_23AA724E8(v0 + 4656, v0 + 4152, qword_2542E6E20);
  if (sub_23AAFC2A4(v0 + 4152) != 1)
  {
    v432 = *(_QWORD *)(v0 + 3656);
    v433 = *(_BYTE *)(v0 + 3664);
    v434 = *(_BYTE *)(v0 + 3688);
    v435 = *(_WORD *)(v0 + 3792);
    v436 = *(_BYTE *)(v0 + 3794);
    v437 = *(_BYTE *)(v0 + 3816);
    v438 = *(_OWORD *)(v0 + 4072);
    *(_OWORD *)(v0 + 2560) = *(_OWORD *)(v0 + 4056);
    *(_OWORD *)(v0 + 2576) = v438;
    v439 = *(_QWORD *)(v0 + 3888);
    *(_QWORD *)(v0 + 2592) = *(_QWORD *)(v0 + 4088);
    v440 = *(_OWORD *)(v0 + 4008);
    *(_OWORD *)(v0 + 2496) = *(_OWORD *)(v0 + 3992);
    *(_OWORD *)(v0 + 2512) = v440;
    v441 = *(_OWORD *)(v0 + 4024);
    *(_OWORD *)(v0 + 2544) = *(_OWORD *)(v0 + 4040);
    *(_OWORD *)(v0 + 2528) = v441;
    v442 = *(_OWORD *)(v0 + 3944);
    *(_OWORD *)(v0 + 2432) = *(_OWORD *)(v0 + 3928);
    *(_OWORD *)(v0 + 2448) = v442;
    v443 = *(_OWORD *)(v0 + 3960);
    *(_OWORD *)(v0 + 2480) = *(_OWORD *)(v0 + 3976);
    *(_OWORD *)(v0 + 2464) = v443;
    v444 = *(_OWORD *)(v0 + 3896);
    *(_OWORD *)(v0 + 2416) = *(_OWORD *)(v0 + 3912);
    *(_OWORD *)(v0 + 2400) = v444;
    v445 = *(_BYTE *)(v0 + 4096);
    v446 = *(_QWORD *)(v0 + 4104);
    v447 = *(_QWORD *)(v0 + 4112);
    v448 = *(_BYTE *)(v0 + 4136);
    v449 = *(_QWORD *)(v0 + 4144);
    *(_QWORD *)(v0 + 2160) = v432;
    *(_BYTE *)(v0 + 2168) = v433;
    v450 = *(_OWORD *)(v0 + 3672);
    *(_OWORD *)(v0 + 352) = v450;
    *(_OWORD *)(v0 + 2176) = v450;
    *(_BYTE *)(v0 + 2192) = v434;
    *(_OWORD *)(v0 + 2200) = *(_OWORD *)(v0 + 3696);
    *(_OWORD *)(v0 + 2216) = *(_OWORD *)(v0 + 3712);
    *(_OWORD *)(v0 + 2232) = *(_OWORD *)(v0 + 3728);
    *(_OWORD *)(v0 + 2248) = *(_OWORD *)(v0 + 3744);
    *(_OWORD *)(v0 + 2264) = *(_OWORD *)(v0 + 3760);
    *(_OWORD *)(v0 + 2280) = *(_OWORD *)(v0 + 3776);
    *(_WORD *)(v0 + 2296) = v435;
    *(_BYTE *)(v0 + 2298) = v436;
    *(_OWORD *)(v0 + 2304) = *(_OWORD *)(v0 + 3800);
    *(_BYTE *)(v0 + 2320) = v437;
    *(_OWORD *)(v0 + 2328) = *(_OWORD *)(v0 + 3824);
    *(_OWORD *)(v0 + 2344) = *(_OWORD *)(v0 + 3840);
    *(_OWORD *)(v0 + 2360) = *(_OWORD *)(v0 + 3856);
    *(_OWORD *)(v0 + 2376) = *(_OWORD *)(v0 + 3872);
    *(_QWORD *)(v0 + 2392) = v439;
    *(_BYTE *)(v0 + 2600) = v445;
    *(_QWORD *)(v0 + 2608) = v446;
    *(_QWORD *)(v0 + 2616) = v447;
    *(_OWORD *)(v0 + 2624) = *(_OWORD *)(v0 + 4120);
    *(_BYTE *)(v0 + 2640) = v448;
    *(_QWORD *)(v0 + 2648) = v449;
    sub_23AA724E8(v0 + 4656, v0 + 2656, qword_2542E6E20);
    sub_23AA724E8(v0 + 4656, v0 + 3152, qword_2542E6E20);
    sub_23ACFC940(v0 + 3152);
    sub_23ACFC940(v0 + 2656);
    sub_23AAFC3AC(v0 + 2160);
    v451 = sub_23AA9F490(*(_QWORD *)(v0 + 352));
    sub_23ADF2D34(v0 + 4656, (voidsub_23AAAEC3C);
    if (!v451)
    {
LABEL_211:
      v453 = v150;
      v454 = *(_QWORD *)v195;
      v455 = *(unsigned __int8 *)(v195 + 8);
      if (sub_23AF20214(*(_QWORD *)v195, *(_BYTE *)(v195 + 8)) || sub_23AF202B8(v454, v455))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
        v456 = swift_allocObject();
        v457 = sub_23B1A1F64(v456, 3);
        *(_OWORD *)v458 = xmmword_23B1D7770;
        *(_QWORD *)(v458 + 16) = 256;
        v459 = nullsub_1(v457);
        v460 = sub_23AFD7BC8(v459);
        swift_bridgeObjectRelease();
        v461 = sub_23AFA7CC0(v460, *(_QWORD *)(v0 + 392));
        if (!sub_23AA9F490(v461))
        {
          *(_QWORD *)(v0 + 18432) = v454;
          *(_QWORD *)(v0 + 18440) = v455;
          *(_QWORD *)(v0 + 18448) = v461;
          *(_QWORD *)(v0 + 18456) = *(_QWORD *)(v0 + 240);
          *(_QWORD *)(v0 + 18464) = *(_QWORD *)(v0 + 248);
          *(_OWORD *)(v0 + 18472) = 0u;
          *(_OWORD *)(v0 + 18488) = 0u;
          *(_OWORD *)(v0 + 18504) = 0u;
          *(_OWORD *)(v0 + 18520) = 0u;
          *(_OWORD *)(v0 + 18531) = 0u;
          *(_BYTE *)(v0 + 18547) = 9;
          sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 18432);
        }
        v150 = v453;
        goto LABEL_216;
      }
      v483 = *(_QWORD *)(v0 + 392);
      *(_QWORD *)(v0 + 4648) = v483;
      if (!(v224 & 1 | !sub_23AA9F3D0(0x200000000000, v483)))
        sub_23AAB51D0(0x200000000000);
      if (sub_23AA9F3D0(16, *(_QWORD *)(v0 + 392)) && (sub_23AFFA4E8() & 1) != 0)
      {
        v484 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
        if (sub_23AFA74BC(*(_BYTE *)(v195 + *(int *)(v484 + 48))))
        {
          v485 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 408) + 520))();
          if ((v485 & 1) != 0)
          {
            v486 = sub_23ADA8168(v485);
            sub_23AE9F05C(v454, v455, v486, v487, 2, &qword_2569E6048);
            (*(void (**)(void))(**(_QWORD **)(v2 - 72) + 144))();
            swift_release();
          }
        }
        if ((v224 & 1) != 0)
        {
          sub_23AA724E8(v0 + 4656, v0 + 4152, qword_2542E6E20);
          if (sub_23AAFC2A4(v0 + 4152) != 1)
          {
            sub_23AA724E8(v0 + 4656, v0 + 3656, qword_2542E6E20);
            memcpy((void *)(v0 + 20872), (const void *)(v0 + 3656), 0x1F0uLL);
            if (sub_23AA9F890())
            {
              v488 = *(_QWORD *)(v0 + 304);
              v489 = *(_BYTE *)(v488 + 8);
              *(_QWORD *)(v0 + 3152) = *(_QWORD *)v488;
              *(_BYTE *)(v0 + 3160) = v489;
              *(_BYTE *)(v0 + 3161) = 0;
              v490 = *(_DWORD *)(v488 + 40);
              v491 = *(_QWORD *)(v488 + 48);
              v492 = *(_BYTE *)(v488 + 56);
              v493 = *(_BYTE *)(v488 + 80);
              v494 = *(_QWORD *)(v488 + 88);
              v495 = *(_QWORD *)(v488 + 96);
              v496 = *(_QWORD *)(v488 + 120);
              *(_QWORD *)(v0 + 3168) = *(_QWORD *)(v488 + 32);
              *(_DWORD *)(v0 + 3176) = v490;
              *(_QWORD *)(v0 + 3184) = v491;
              *(_BYTE *)(v0 + 3192) = v492;
              v497 = *(_OWORD *)(v488 + 64);
              *(_OWORD *)(v0 + 352) = v497;
              *(_OWORD *)(v0 + 3200) = v497;
              *(_BYTE *)(v0 + 3216) = v493;
              *(_QWORD *)(v0 + 3224) = v494;
              *(_QWORD *)(v0 + 3232) = v495;
              v498 = *(_OWORD *)(v488 + 104);
              *(_OWORD *)(v0 + 336) = v498;
              *(_OWORD *)(v0 + 3240) = v498;
              *(_QWORD *)(v0 + 3256) = v496;
              *(_DWORD *)(v0 + 3264) = 151453697;
              sub_23AA724E8(v0 + 3152, v0 + 20752, qword_2542E1408);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 20752);
              sub_23AEB3270(v0 + 20752, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
            }
          }
        }
        sub_23AAB51D0(8);
        v453 = *(_QWORD *)(v0 + 376);
        v151 = *(int **)(v0 + 176);
        v195 = *(_QWORD *)(v0 + 304);
      }
      if ((v224 & 1) != 0)
      {
        v499 = *(_QWORD *)(v195 + 64);
        if (v499)
        {
          if ((sub_23B1A7168(*(_QWORD *)(*(_QWORD *)(v0 + 312) + 32), *(_DWORD *)(*(_QWORD *)(v0 + 312) + 40), *(_QWORD *)(*(_QWORD *)(v0 + 312) + 48), *(_BYTE *)(*(_QWORD *)(v0 + 312) + 56), *(_QWORD *)(v195 + 64)) & 1) != 0)
          {
            *(_DWORD *)(v0 + 352) = (_DWORD)v226;
            sub_23AA724E8(v0 + 4656, v0 + 3656, qword_2542E6E20);
            sub_23AA724E8(v0 + 4656, v0 + 4152, qword_2542E6E20);
            if (sub_23AAFC2A4(v0 + 4152) != 1)
            {
              v500 = *(_OWORD *)(v0 + 3832);
              v502 = *(_OWORD *)(v0 + 3848);
              v501 = *(_OWORD *)(v0 + 3864);
              *(_OWORD *)(v0 + 2848) = v502;
              *(_OWORD *)(v0 + 2864) = v501;
              v503 = *(_OWORD *)(v0 + 3864);
              *(_OWORD *)(v0 + 2880) = *(_OWORD *)(v0 + 3880);
              v504 = *(_OWORD *)(v0 + 3768);
              v506 = *(_OWORD *)(v0 + 3784);
              v505 = *(_OWORD *)(v0 + 3800);
              *(_OWORD *)(v0 + 2784) = v506;
              *(_OWORD *)(v0 + 2800) = v505;
              v508 = *(_OWORD *)(v0 + 3800);
              v507 = *(_OWORD *)(v0 + 3816);
              v509 = v507;
              *(_OWORD *)(v0 + 2832) = *(_OWORD *)(v0 + 3832);
              *(_OWORD *)(v0 + 2816) = v507;
              v510 = *(_OWORD *)(v0 + 3704);
              v512 = *(_OWORD *)(v0 + 3720);
              v511 = *(_OWORD *)(v0 + 3736);
              *(_OWORD *)(v0 + 2720) = v512;
              *(_OWORD *)(v0 + 2736) = v511;
              v514 = *(_OWORD *)(v0 + 3736);
              v513 = *(_OWORD *)(v0 + 3752);
              v515 = v513;
              *(_OWORD *)(v0 + 2768) = *(_OWORD *)(v0 + 3768);
              *(_OWORD *)(v0 + 2752) = v513;
              v516 = *(_OWORD *)(v0 + 3672);
              *(_OWORD *)(v0 + 2656) = *(_OWORD *)(v0 + 3656);
              *(_OWORD *)(v0 + 2672) = v516;
              v517 = *(_OWORD *)(v0 + 3688);
              v519 = *(_OWORD *)(v0 + 3656);
              v518 = *(_OWORD *)(v0 + 3672);
              *(_OWORD *)(v0 + 2704) = *(_OWORD *)(v0 + 3704);
              *(_OWORD *)(v0 + 2688) = v517;
              v520 = *(_OWORD *)(v0 + 4056);
              *(_OWORD *)(v0 + 3536) = *(_OWORD *)(v0 + 4040);
              *(_OWORD *)(v0 + 3552) = v520;
              *(_OWORD *)(v0 + 3568) = *(_OWORD *)(v0 + 4072);
              v521 = *(_OWORD *)(v0 + 3992);
              *(_OWORD *)(v0 + 3472) = *(_OWORD *)(v0 + 3976);
              *(_OWORD *)(v0 + 3488) = v521;
              v522 = *(_OWORD *)(v0 + 4024);
              *(_OWORD *)(v0 + 3504) = *(_OWORD *)(v0 + 4008);
              *(_OWORD *)(v0 + 3520) = v522;
              v523 = *(_OWORD *)(v0 + 3928);
              *(_OWORD *)(v0 + 3408) = *(_OWORD *)(v0 + 3912);
              *(_OWORD *)(v0 + 3424) = v523;
              v524 = *(_OWORD *)(v0 + 3960);
              *(_OWORD *)(v0 + 3440) = *(_OWORD *)(v0 + 3944);
              *(_OWORD *)(v0 + 3456) = v524;
              *(_OWORD *)(v0 + 3344) = v502;
              *(_OWORD *)(v0 + 3360) = v503;
              v525 = *(_OWORD *)(v0 + 3880);
              *(_OWORD *)(v0 + 3392) = *(_OWORD *)(v0 + 3896);
              *(_OWORD *)(v0 + 3376) = v525;
              *(_OWORD *)(v0 + 3280) = v506;
              *(_OWORD *)(v0 + 3296) = v508;
              *(_OWORD *)(v0 + 3328) = v500;
              *(_OWORD *)(v0 + 3312) = v509;
              *(_OWORD *)(v0 + 3216) = v512;
              *(_OWORD *)(v0 + 3232) = v514;
              *(_OWORD *)(v0 + 3264) = v504;
              *(_OWORD *)(v0 + 3248) = v515;
              *(_OWORD *)(v0 + 3152) = v519;
              *(_OWORD *)(v0 + 3168) = v518;
              *(_QWORD *)(v0 + 3584) = *(_QWORD *)(v0 + 4088);
              v526 = *(_BYTE *)(v0 + 4096);
              v527 = *(_QWORD *)(v0 + 4104);
              v528 = *(_QWORD *)(v0 + 4112);
              v529 = *(_BYTE *)(v0 + 4136);
              v530 = *(_QWORD *)(v0 + 4144);
              *(_OWORD *)(v0 + 3200) = v510;
              *(_OWORD *)(v0 + 3184) = v517;
              *(_BYTE *)(v0 + 3592) = v526;
              *(_QWORD *)(v0 + 3600) = v527;
              *(_QWORD *)(v0 + 3608) = v528;
              *(_OWORD *)(v0 + 3616) = *(_OWORD *)(v0 + 4120);
              *(_BYTE *)(v0 + 3632) = v529;
              *(_QWORD *)(v0 + 3640) = v530;
              sub_23ADF2D34(v0 + 4656, (voidsub_23AA88348);
              sub_23ACF4048(v0 + 2656);
              sub_23AAFC3AC(v0 + 3152);
              v531 = *(_QWORD *)(v0 + 2696);
              v532 = *(_QWORD *)(v0 + 2704);
              v533 = *(_QWORD *)(v0 + 2712);
              v534 = *(_BYTE *)(v0 + 2720);
              v535 = *(_QWORD *)(v0 + 2720);
              v536 = *(_QWORD *)(v0 + 2728);
              v537 = *(_QWORD *)(v0 + 2736);
              v538 = *(_QWORD *)(v0 + 2744);
              v539 = *(_QWORD *)(v0 + 2752);
              v540 = *(_QWORD *)(v0 + 2760);
              *(_QWORD *)(v0 + 336) = v533;
              sub_23AAA7638(v531, v532, v533, v535, v536, v537, v538, v539, v540);
              sub_23ACF410C(v0 + 2656);
              if (v540)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((sub_23B1A7168(v531, v532, *(_QWORD *)(v0 + 336), v534 & 1, v499) & 1) != 0)
                {
                  v541 = *(_QWORD *)(v0 + 304);
                  v542 = *(_BYTE *)(v541 + 8);
                  *(_QWORD *)(v0 + 2160) = *(_QWORD *)v541;
                  *(_BYTE *)(v0 + 2168) = v542;
                  *(_BYTE *)(v0 + 2169) = 0;
                  v543 = *(_DWORD *)(v541 + 40);
                  v544 = *(_QWORD *)(v541 + 48);
                  v545 = *(_BYTE *)(v541 + 56);
                  v546 = *(_QWORD *)(v541 + 72);
                  v547 = *(_BYTE *)(v541 + 80);
                  v548 = *(_QWORD *)(v541 + 88);
                  v549 = *(_QWORD *)(v541 + 96);
                  v550 = *(_QWORD *)(v541 + 120);
                  *(_QWORD *)(v0 + 2176) = *(_QWORD *)(v541 + 32);
                  *(_DWORD *)(v0 + 2184) = v543;
                  *(_QWORD *)(v0 + 2192) = v544;
                  *(_BYTE *)(v0 + 2200) = v545;
                  *(_QWORD *)(v0 + 2208) = v499;
                  *(_QWORD *)(v0 + 2216) = v546;
                  *(_BYTE *)(v0 + 2224) = v547;
                  *(_QWORD *)(v0 + 2232) = v548;
                  *(_QWORD *)(v0 + 2240) = v549;
                  v551 = *(_OWORD *)(v541 + 104);
                  *(_OWORD *)(v0 + 336) = v551;
                  *(_OWORD *)(v0 + 2248) = v551;
                  *(_QWORD *)(v0 + 2264) = v550;
                  *(_DWORD *)(v0 + 2272) = 151453697;
                  sub_23AA724E8(v0 + 2160, v0 + 20632, qword_2542E1408);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 20632);
                  sub_23AEB3270(v0 + 20632, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
                }
              }
            }
            sub_23AAB51D0(8);
            v453 = *(_QWORD *)(v0 + 376);
            v151 = *(int **)(v0 + 176);
            v195 = *(_QWORD *)(v0 + 304);
            LODWORD(v226) = *(_DWORD *)(v0 + 352);
          }
        }
      }
      v552 = *(_QWORD *)(v0 + 392);
      v150 = v453;
      if (sub_23AA9F3D0(0x20000000000, v552))
      {
        v553 = *(_QWORD *)(v195 + 104);
        if (v553)
        {
          if ((sub_23B1A71C4(*(_QWORD *)(*(_QWORD *)(v0 + 312) + 72), *(_BYTE *)(*(_QWORD *)(v0 + 312) + 80), *(_QWORD *)(*(_QWORD *)(v0 + 312) + 88), *(_QWORD *)(*(_QWORD *)(v0 + 312) + 96), *(_QWORD *)(v195 + 104)) & 1) != 0)
          {
            *(_DWORD *)(v0 + 352) = (_DWORD)v226;
            sub_23AA724E8(v0 + 4656, v0 + 3656, qword_2542E6E20);
            sub_23AA724E8(v0 + 4656, v0 + 4152, qword_2542E6E20);
            if (sub_23AAFC2A4(v0 + 4152) != 1)
            {
              v554 = *(_OWORD *)(v0 + 3832);
              v556 = *(_OWORD *)(v0 + 3848);
              v555 = *(_OWORD *)(v0 + 3864);
              *(_OWORD *)(v0 + 2848) = v556;
              *(_OWORD *)(v0 + 2864) = v555;
              v557 = *(_OWORD *)(v0 + 3864);
              *(_OWORD *)(v0 + 2880) = *(_OWORD *)(v0 + 3880);
              v558 = *(_OWORD *)(v0 + 3768);
              v560 = *(_OWORD *)(v0 + 3784);
              v559 = *(_OWORD *)(v0 + 3800);
              *(_OWORD *)(v0 + 2784) = v560;
              *(_OWORD *)(v0 + 2800) = v559;
              v562 = *(_OWORD *)(v0 + 3800);
              v561 = *(_OWORD *)(v0 + 3816);
              v563 = v561;
              *(_OWORD *)(v0 + 2832) = *(_OWORD *)(v0 + 3832);
              *(_OWORD *)(v0 + 2816) = v561;
              v564 = *(_OWORD *)(v0 + 3704);
              v566 = *(_OWORD *)(v0 + 3720);
              v565 = *(_OWORD *)(v0 + 3736);
              *(_OWORD *)(v0 + 2720) = v566;
              *(_OWORD *)(v0 + 2736) = v565;
              v568 = *(_OWORD *)(v0 + 3736);
              v567 = *(_OWORD *)(v0 + 3752);
              v569 = v567;
              *(_OWORD *)(v0 + 2768) = *(_OWORD *)(v0 + 3768);
              *(_OWORD *)(v0 + 2752) = v567;
              v570 = *(_OWORD *)(v0 + 3672);
              *(_OWORD *)(v0 + 2656) = *(_OWORD *)(v0 + 3656);
              *(_OWORD *)(v0 + 2672) = v570;
              v571 = *(_OWORD *)(v0 + 3688);
              v573 = *(_OWORD *)(v0 + 3656);
              v572 = *(_OWORD *)(v0 + 3672);
              *(_OWORD *)(v0 + 2704) = *(_OWORD *)(v0 + 3704);
              *(_OWORD *)(v0 + 2688) = v571;
              v574 = *(_OWORD *)(v0 + 4056);
              *(_OWORD *)(v0 + 3536) = *(_OWORD *)(v0 + 4040);
              *(_OWORD *)(v0 + 3552) = v574;
              *(_OWORD *)(v0 + 3568) = *(_OWORD *)(v0 + 4072);
              v575 = *(_OWORD *)(v0 + 3992);
              *(_OWORD *)(v0 + 3472) = *(_OWORD *)(v0 + 3976);
              *(_OWORD *)(v0 + 3488) = v575;
              v576 = *(_OWORD *)(v0 + 4024);
              *(_OWORD *)(v0 + 3504) = *(_OWORD *)(v0 + 4008);
              *(_OWORD *)(v0 + 3520) = v576;
              v577 = *(_OWORD *)(v0 + 3928);
              *(_OWORD *)(v0 + 3408) = *(_OWORD *)(v0 + 3912);
              *(_OWORD *)(v0 + 3424) = v577;
              v578 = *(_OWORD *)(v0 + 3960);
              *(_OWORD *)(v0 + 3440) = *(_OWORD *)(v0 + 3944);
              *(_OWORD *)(v0 + 3456) = v578;
              *(_OWORD *)(v0 + 3344) = v556;
              *(_OWORD *)(v0 + 3360) = v557;
              v579 = *(_OWORD *)(v0 + 3880);
              *(_OWORD *)(v0 + 3392) = *(_OWORD *)(v0 + 3896);
              *(_OWORD *)(v0 + 3376) = v579;
              *(_OWORD *)(v0 + 3280) = v560;
              *(_OWORD *)(v0 + 3296) = v562;
              *(_OWORD *)(v0 + 3328) = v554;
              *(_OWORD *)(v0 + 3312) = v563;
              *(_OWORD *)(v0 + 3216) = v566;
              *(_OWORD *)(v0 + 3232) = v568;
              *(_OWORD *)(v0 + 3264) = v558;
              *(_OWORD *)(v0 + 3248) = v569;
              *(_OWORD *)(v0 + 3152) = v573;
              *(_OWORD *)(v0 + 3168) = v572;
              *(_QWORD *)(v0 + 3584) = *(_QWORD *)(v0 + 4088);
              v580 = *(_BYTE *)(v0 + 4096);
              v581 = *(_QWORD *)(v0 + 4104);
              v582 = *(_QWORD *)(v0 + 4112);
              v583 = *(_BYTE *)(v0 + 4136);
              v584 = *(_QWORD *)(v0 + 4144);
              *(_OWORD *)(v0 + 3200) = v564;
              *(_OWORD *)(v0 + 3184) = v571;
              *(_BYTE *)(v0 + 3592) = v580;
              *(_QWORD *)(v0 + 3600) = v581;
              *(_QWORD *)(v0 + 3608) = v582;
              *(_OWORD *)(v0 + 3616) = *(_OWORD *)(v0 + 4120);
              *(_BYTE *)(v0 + 3632) = v583;
              *(_QWORD *)(v0 + 3640) = v584;
              sub_23ADF2D34(v0 + 4656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88348);
              sub_23ACF4048(v0 + 2656);
              sub_23AAFC3AC(v0 + 3152);
              v585 = *(_QWORD *)(v0 + 2736);
              v586 = *(_QWORD *)(v0 + 2744);
              v587 = *(_QWORD *)(v0 + 2752);
              v588 = *(_QWORD *)(v0 + 2760);
              sub_23AAA7638(*(_QWORD *)(v0 + 2696), *(_QWORD *)(v0 + 2704), *(_QWORD *)(v0 + 2712), *(_QWORD *)(v0 + 2720), *(_QWORD *)(v0 + 2728), v585, v586, v587, v588);
              sub_23ACF410C(v0 + 2656);
              if (v588)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((sub_23B1A71C4(v585, v586, v587, v588, v553) & 1) != 0)
                {
                  v589 = *(_QWORD *)(v0 + 304);
                  v590 = *(_BYTE *)(v589 + 8);
                  *(_QWORD *)(v0 + 2160) = *(_QWORD *)v589;
                  *(_BYTE *)(v0 + 2168) = v590;
                  *(_BYTE *)(v0 + 2169) = 0;
                  v591 = *(_DWORD *)(v589 + 40);
                  v592 = *(_QWORD *)(v589 + 48);
                  v593 = *(_BYTE *)(v589 + 56);
                  v594 = *(_BYTE *)(v589 + 80);
                  v595 = *(_QWORD *)(v589 + 88);
                  v596 = *(_QWORD *)(v589 + 96);
                  v597 = *(_QWORD *)(v589 + 112);
                  v598 = *(_QWORD *)(v589 + 120);
                  *(_QWORD *)(v0 + 2176) = *(_QWORD *)(v589 + 32);
                  *(_DWORD *)(v0 + 2184) = v591;
                  *(_QWORD *)(v0 + 2192) = v592;
                  *(_BYTE *)(v0 + 2200) = v593;
                  v599 = *(_OWORD *)(v589 + 64);
                  *(_OWORD *)(v0 + 336) = v599;
                  *(_OWORD *)(v0 + 2208) = v599;
                  *(_BYTE *)(v0 + 2224) = v594;
                  *(_QWORD *)(v0 + 2232) = v595;
                  *(_QWORD *)(v0 + 2240) = v596;
                  *(_QWORD *)(v0 + 2248) = v553;
                  *(_QWORD *)(v0 + 2256) = v597;
                  *(_QWORD *)(v0 + 2264) = v598;
                  *(_DWORD *)(v0 + 2272) = 151453952;
                  sub_23AA724E8(v0 + 2160, v0 + 20512, qword_2542E1408);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 20512);
                  sub_23AEB3270(v0 + 20512, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
                }
                swift_bridgeObjectRelease();
              }
            }
            sub_23AAB51D0(0x20000000000);
            v150 = *(_QWORD *)(v0 + 376);
            v151 = *(int **)(v0 + 176);
            v195 = *(_QWORD *)(v0 + 304);
            LODWORD(v226) = *(_DWORD *)(v0 + 352);
            v552 = *(_QWORD *)(v0 + 392);
          }
        }
      }
      v600 = sub_23AFA98F0(0x160000000010000, v552);
      if (sub_23AC37674(v600, 0x20000000000))
      {
        sub_23AA724E8(v0 + 4656, v0 + 4152, qword_2542E6E20);
        if (sub_23AAFC2A4(v0 + 4152) != 1)
        {
          sub_23AA724E8(v0 + 4656, v0 + 3656, qword_2542E6E20);
          memcpy((void *)(v0 + 20016), (const void *)(v0 + 3656), 0x1F0uLL);
          if (sub_23AA9F890())
          {
            if ((*(_QWORD *)(v0 + 3680) & 0xFE9FFFFFFFFEFFFFLL) != 0
              || sub_23B12B0D4(*(_QWORD *)(v0 + 3800), *(_QWORD *)(v0 + 3808), *(_BYTE *)(v0 + 3816))
              || sub_23B12B0D4(*(_QWORD *)(v0 + 4000), *(_QWORD *)(v0 + 4008), *(_BYTE *)(v0 + 4016)))
            {
              v150 = *(_QWORD *)(v0 + 376);
              v151 = *(int **)(v0 + 176);
              v195 = *(_QWORD *)(v0 + 304);
            }
            else
            {
              v195 = *(_QWORD *)(v0 + 304);
              v808 = *(_BYTE *)(v195 + 8);
              *(_QWORD *)(v0 + 3152) = *(_QWORD *)v195;
              *(_BYTE *)(v0 + 3160) = v808;
              *(_BYTE *)(v0 + 3161) = 0;
              v809 = *(_DWORD *)(v195 + 40);
              v810 = *(_QWORD *)(v195 + 48);
              v811 = *(_BYTE *)(v195 + 56);
              v812 = *(_BYTE *)(v195 + 80);
              v813 = *(_QWORD *)(v195 + 88);
              v814 = *(_QWORD *)(v195 + 96);
              v815 = *(_QWORD *)(v195 + 120);
              *(_QWORD *)(v0 + 3168) = *(_QWORD *)(v195 + 32);
              *(_DWORD *)(v0 + 3176) = v809;
              *(_QWORD *)(v0 + 3184) = v810;
              *(_BYTE *)(v0 + 3192) = v811;
              v816 = *(_OWORD *)(v195 + 64);
              *(_OWORD *)(v0 + 352) = v816;
              *(_OWORD *)(v0 + 3200) = v816;
              *(_BYTE *)(v0 + 3216) = v812;
              *(_QWORD *)(v0 + 3224) = v813;
              *(_QWORD *)(v0 + 3232) = v814;
              v817 = *(_OWORD *)(v195 + 104);
              *(_OWORD *)(v0 + 336) = v817;
              *(_OWORD *)(v0 + 3240) = v817;
              *(_QWORD *)(v0 + 3256) = v815;
              *(_DWORD *)(v0 + 3264) = 151453952;
              sub_23AA724E8(v0 + 3152, v0 + 19896, qword_2542E1408);
              sub_23ADF2D34(v0 + 4656, (voidsub_23AA88348);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 19896);
              sub_23AEB3270(v0 + 19896, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
              sub_23AAB51D0(0x20000000000);
              sub_23ADF2D34(v0 + 4656, (voidsub_23AAAEC3C);
              v150 = *(_QWORD *)(v0 + 376);
              v151 = *(int **)(v0 + 176);
            }
            v552 = *(_QWORD *)(v0 + 392);
          }
        }
      }
      if (sub_23AE89CFC(*(_QWORD *)(v0 + 400), v195, v552, (uint64_t *)&unk_2542E6B00))
      {
        sub_23AAB51D0(0x10000);
        sub_23AA724E8(v0 + 4656, v0 + 4152, qword_2542E6E20);
        if (sub_23AAFC2A4(v0 + 4152) != 1)
        {
          sub_23AA724E8(v0 + 4656, v0 + 3656, qword_2542E6E20);
          memcpy((void *)(v0 + 19400), (const void *)(v0 + 3656), 0x1F0uLL);
          if (sub_23AA9F890())
          {
            v601 = *(unsigned __int8 *)(v195 + 8);
            *(_QWORD *)(v0 + 19280) = *(_QWORD *)v195;
            *(_QWORD *)(v0 + 19288) = v601;
            *(_QWORD *)(v0 + 19296) = 0x10000;
            *(_QWORD *)(v0 + 19304) = *(_QWORD *)(v0 + 240);
            *(_QWORD *)(v0 + 19312) = *(_QWORD *)(v0 + 248);
            *(_OWORD *)(v0 + 19320) = 0u;
            *(_OWORD *)(v0 + 19336) = 0u;
            *(_OWORD *)(v0 + 19352) = 0u;
            *(_OWORD *)(v0 + 19368) = 0u;
            *(_OWORD *)(v0 + 19379) = 0u;
            *(_BYTE *)(v0 + 19395) = 8;
            sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 19280);
          }
        }
      }
      v602 = *(_QWORD *)(v0 + 4648);
      if (sub_23AA9F3D0(0x2000000, v602))
      {
        sub_23AAA0ECC((_QWORD *)(v0 + 4152), 0x100000D000000);
        v602 = *(_QWORD *)(v0 + 4648);
      }
      v603 = sub_23AFA7B90(v602);
      *(_QWORD *)(v0 + 4648) = v603;
      v604 = sub_23AFA98F0(0x100000000000, v603);
      if (!sub_23AA9F490(v604)
        || sub_23AA9F3D0(0x100000000000, v603) && *(_BYTE *)(v195 + *(int *)(v150 + 48) + v151[15]) != 1
        || sub_23AA9F3D0(0x800000, v552))
      {
        v605 = *(unsigned __int8 *)(v195 + 8);
        v606 = *(unsigned __int8 *)(v195 + *(int *)(v150 + 48) + v151[16]);
        *(_QWORD *)(v0 + 19160) = *(_QWORD *)v195;
        *(_QWORD *)(v0 + 19168) = v605;
        *(_OWORD *)(v0 + 19184) = 0u;
        *(_OWORD *)(v0 + 19200) = 0u;
        *(_OWORD *)(v0 + 19216) = 0u;
        *(_OWORD *)(v0 + 19232) = 0u;
        *(_OWORD *)(v0 + 19248) = 0u;
        *(_QWORD *)(v0 + 19176) = v606;
        *(_QWORD *)(v0 + 19264) = 0;
        *(_DWORD *)(v0 + 19272) = 151322624;
        sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 19160);
        sub_23AA724E8(v0 + 4656, v0 + 3656, qword_2542E6E20);
        sub_23AA724E8(v0 + 4656, v0 + 4152, qword_2542E6E20);
        if (sub_23AAFC2A4(v0 + 4152) == 1)
        {
          v607 = 0;
        }
        else
        {
          v608 = *(_QWORD *)(v0 + 3656);
          v609 = *(_BYTE *)(v0 + 3664);
          v610 = *(_BYTE *)(v0 + 3688);
          v611 = *(_WORD *)(v0 + 3792);
          v612 = *(_BYTE *)(v0 + 3794);
          v613 = *(_BYTE *)(v0 + 3816);
          v614 = *(_OWORD *)(v0 + 4072);
          *(_OWORD *)(v0 + 3056) = *(_OWORD *)(v0 + 4056);
          *(_OWORD *)(v0 + 3072) = v614;
          v615 = *(_QWORD *)(v0 + 3888);
          *(_QWORD *)(v0 + 3088) = *(_QWORD *)(v0 + 4088);
          v616 = *(_OWORD *)(v0 + 4008);
          *(_OWORD *)(v0 + 2992) = *(_OWORD *)(v0 + 3992);
          *(_OWORD *)(v0 + 3008) = v616;
          v617 = *(_OWORD *)(v0 + 4024);
          *(_OWORD *)(v0 + 3040) = *(_OWORD *)(v0 + 4040);
          *(_OWORD *)(v0 + 3024) = v617;
          v618 = *(_OWORD *)(v0 + 3944);
          *(_OWORD *)(v0 + 2928) = *(_OWORD *)(v0 + 3928);
          *(_OWORD *)(v0 + 2944) = v618;
          v619 = *(_OWORD *)(v0 + 3960);
          *(_OWORD *)(v0 + 2976) = *(_OWORD *)(v0 + 3976);
          *(_OWORD *)(v0 + 2960) = v619;
          v620 = *(_OWORD *)(v0 + 3896);
          *(_OWORD *)(v0 + 2912) = *(_OWORD *)(v0 + 3912);
          *(_OWORD *)(v0 + 2896) = v620;
          v621 = *(_BYTE *)(v0 + 4096);
          v622 = *(_QWORD *)(v0 + 4104);
          v623 = *(_QWORD *)(v0 + 4112);
          v624 = *(_BYTE *)(v0 + 4136);
          v625 = *(_QWORD *)(v0 + 4144);
          *(_QWORD *)(v0 + 2656) = v608;
          *(_BYTE *)(v0 + 2664) = v609;
          v626 = *(_OWORD *)(v0 + 3672);
          *(_OWORD *)(v0 + 352) = v626;
          *(_OWORD *)(v0 + 2672) = v626;
          *(_BYTE *)(v0 + 2688) = v610;
          *(_OWORD *)(v0 + 2696) = *(_OWORD *)(v0 + 3696);
          *(_OWORD *)(v0 + 2712) = *(_OWORD *)(v0 + 3712);
          *(_OWORD *)(v0 + 2728) = *(_OWORD *)(v0 + 3728);
          *(_OWORD *)(v0 + 2744) = *(_OWORD *)(v0 + 3744);
          *(_OWORD *)(v0 + 2760) = *(_OWORD *)(v0 + 3760);
          *(_OWORD *)(v0 + 2776) = *(_OWORD *)(v0 + 3776);
          *(_WORD *)(v0 + 2792) = v611;
          *(_BYTE *)(v0 + 2794) = v612;
          *(_OWORD *)(v0 + 2800) = *(_OWORD *)(v0 + 3800);
          *(_BYTE *)(v0 + 2816) = v613;
          *(_OWORD *)(v0 + 2824) = *(_OWORD *)(v0 + 3824);
          *(_OWORD *)(v0 + 2840) = *(_OWORD *)(v0 + 3840);
          *(_OWORD *)(v0 + 2856) = *(_OWORD *)(v0 + 3856);
          *(_OWORD *)(v0 + 2872) = *(_OWORD *)(v0 + 3872);
          *(_QWORD *)(v0 + 2888) = v615;
          *(_BYTE *)(v0 + 3096) = v621;
          *(_QWORD *)(v0 + 3104) = v622;
          *(_QWORD *)(v0 + 3112) = v623;
          *(_OWORD *)(v0 + 3120) = *(_OWORD *)(v0 + 4120);
          *(_BYTE *)(v0 + 3136) = v624;
          *(_QWORD *)(v0 + 3144) = v625;
          sub_23AA724E8(v0 + 4656, v0 + 3152, qword_2542E6E20);
          sub_23ACFC940(v0 + 3152);
          sub_23AAFC3AC(v0 + 2656);
          v607 = sub_23AA9F3C4(16, *(_QWORD *)(v0 + 352));
        }
        v627 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
        if (sub_23AC37B08(*(_BYTE *)(v195 + *(int *)(v627 + 48)), 1) && v607 && (v606 & 1) == 0)
        {
          if (*(unsigned __int8 *)(v195 + 8) < 2u)
            sub_23AAA0ECC((_QWORD *)(v0 + 3656), 0x100000000000);
          v150 = *(_QWORD *)(v0 + 376);
          v151 = *(int **)(v0 + 176);
          v195 = *(_QWORD *)(v0 + 304);
          v552 = *(_QWORD *)(v0 + 392);
        }
      }
      if (sub_23AA9F3D0(0x10000000000000, v552) && (*(_BYTE *)(v195 + *(int *)(v150 + 48) + v151[18]) & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
        v628 = swift_allocObject();
        v629 = sub_23B1A1F64(v628, 3);
        *(_OWORD *)v630 = xmmword_23B1DAA10;
        *(_QWORD *)(v630 + 16) = 1;
        v631 = nullsub_1(v629);
        v632 = sub_23AFD7BC8(v631);
        swift_bridgeObjectRelease();
        sub_23AAA0ECC((_QWORD *)(v0 + 4152), v632);
      }
      v224 = *(_QWORD *)(*(_QWORD *)(v0 + 408) + 40);
      if ((*(_BYTE *)(v224 + 32) & 1) != 0)
        goto LABEL_389;
      v633 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      if (!sub_23AFA74BC(*(_BYTE *)(v195 + *(int *)(v633 + 48))))
        goto LABEL_389;
      v634 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 408) + 160))();
      if (!sub_23AC42E98(v634 & 1, 0))
        goto LABEL_389;
      v635 = *(char **)(v0 + 448);
      if (!sub_23AA9F3D0(0x4000000000000, v552))
        goto LABEL_388;
      sub_23AA724E8(v0 + 4656, v0 + 3656, qword_2542E6E20);
      sub_23AA724E8(v0 + 4656, v0 + 4152, qword_2542E6E20);
      if (sub_23AAFC2A4(v0 + 4152) == 1)
        goto LABEL_388;
      v636 = *(_OWORD *)(v0 + 4040);
      v638 = *(_OWORD *)(v0 + 4056);
      v637 = *(_OWORD *)(v0 + 4072);
      *(_OWORD *)(v0 + 1824) = v638;
      *(_OWORD *)(v0 + 1840) = v637;
      v639 = *(_OWORD *)(v0 + 3976);
      v641 = *(_OWORD *)(v0 + 3992);
      v640 = *(_OWORD *)(v0 + 4008);
      *(_OWORD *)(v0 + 1760) = v641;
      *(_OWORD *)(v0 + 1776) = v640;
      v643 = *(_OWORD *)(v0 + 4008);
      v642 = *(_OWORD *)(v0 + 4024);
      v644 = v642;
      *(_OWORD *)(v0 + 1808) = *(_OWORD *)(v0 + 4040);
      *(_OWORD *)(v0 + 1792) = v642;
      v645 = *(_OWORD *)(v0 + 3912);
      v647 = *(_OWORD *)(v0 + 3928);
      v646 = *(_OWORD *)(v0 + 3944);
      *(_OWORD *)(v0 + 1696) = v647;
      *(_OWORD *)(v0 + 1712) = v646;
      v649 = *(_OWORD *)(v0 + 3944);
      v648 = *(_OWORD *)(v0 + 3960);
      v650 = v648;
      *(_OWORD *)(v0 + 1744) = *(_OWORD *)(v0 + 3976);
      *(_OWORD *)(v0 + 1728) = v648;
      v652 = *(_OWORD *)(v0 + 3880);
      v651 = *(_OWORD *)(v0 + 3896);
      *(_OWORD *)(v0 + 1680) = *(_OWORD *)(v0 + 3912);
      *(_OWORD *)(v0 + 1664) = v651;
      v653 = *(_OWORD *)(v0 + 3864);
      *(_OWORD *)(v0 + 3344) = *(_OWORD *)(v0 + 3848);
      *(_OWORD *)(v0 + 3360) = v653;
      v654 = *(_OWORD *)(v0 + 3800);
      *(_OWORD *)(v0 + 3280) = *(_OWORD *)(v0 + 3784);
      *(_OWORD *)(v0 + 3296) = v654;
      v655 = *(_OWORD *)(v0 + 3816);
      *(_OWORD *)(v0 + 3328) = *(_OWORD *)(v0 + 3832);
      *(_OWORD *)(v0 + 3312) = v655;
      v656 = *(_OWORD *)(v0 + 3736);
      *(_OWORD *)(v0 + 3216) = *(_OWORD *)(v0 + 3720);
      *(_OWORD *)(v0 + 3232) = v656;
      v657 = *(_OWORD *)(v0 + 3752);
      *(_OWORD *)(v0 + 3264) = *(_OWORD *)(v0 + 3768);
      *(_OWORD *)(v0 + 3248) = v657;
      v658 = *(_OWORD *)(v0 + 3672);
      *(_OWORD *)(v0 + 3152) = *(_OWORD *)(v0 + 3656);
      *(_OWORD *)(v0 + 3168) = v658;
      v659 = *(_OWORD *)(v0 + 3688);
      *(_OWORD *)(v0 + 3200) = *(_OWORD *)(v0 + 3704);
      *(_OWORD *)(v0 + 3184) = v659;
      *(_OWORD *)(v0 + 3536) = v636;
      *(_OWORD *)(v0 + 3552) = v638;
      *(_OWORD *)(v0 + 3568) = *(_OWORD *)(v0 + 4072);
      *(_OWORD *)(v0 + 3472) = v639;
      *(_OWORD *)(v0 + 3488) = v641;
      *(_OWORD *)(v0 + 3504) = v643;
      *(_OWORD *)(v0 + 3520) = v644;
      *(_OWORD *)(v0 + 3408) = v645;
      *(_OWORD *)(v0 + 3424) = v647;
      *(_OWORD *)(v0 + 3440) = v649;
      *(_OWORD *)(v0 + 3456) = v650;
      v660 = *(_QWORD *)(v0 + 4088);
      *(_QWORD *)(v0 + 1856) = v660;
      v661 = *(_BYTE *)(v0 + 4096);
      v662 = *(_QWORD *)(v0 + 4104);
      v663 = *(_QWORD *)(v0 + 4112);
      v664 = *(_BYTE *)(v0 + 4136);
      v665 = *(_QWORD *)(v0 + 4144);
      *(_QWORD *)(v0 + 3584) = v660;
      *(_OWORD *)(v0 + 3376) = v652;
      *(_OWORD *)(v0 + 3392) = v651;
      *(_BYTE *)(v0 + 3592) = v661;
      *(_QWORD *)(v0 + 3600) = v662;
      *(_QWORD *)(v0 + 3608) = v663;
      *(_OWORD *)(v0 + 3616) = *(_OWORD *)(v0 + 4120);
      *(_BYTE *)(v0 + 3632) = v664;
      *(_QWORD *)(v0 + 3640) = v665;
      sub_23ADF2D34(v0 + 4656, (voidsub_23AA88348);
      sub_23AAFC2BC(v0 + 1664);
      sub_23AAFC3AC(v0 + 3152);
      v666 = *(void **)(v0 + 1664);
      v225 = v666;
      sub_23AAFC540(v0 + 1664);
      if (!v666)
        goto LABEL_388;
      *(_QWORD *)(v0 + 464) = v225;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v224 + 240))(v0 + 464, 1);
      v231 = v635;
      if (!v635)
        goto LABEL_376;

      sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
      sub_23AA724E8(v0 + 8128, v0 + 2160, qword_2542E6E20);
      sub_23ADF2D34(v0 + 2160, (voidsub_23AAAEC3C);
      sub_23AA724E8(v0 + 8624, v0 + 2656, qword_2542E6E20);
      v322 = v0 + 2656;
LABEL_138:
      sub_23ADF2D34(v322, (voidsub_23AAAEC3C);
      v33 = *(_QWORD *)(v0 + 304);
      goto LABEL_11;
    }
  }
  v452 = *(unsigned __int8 *)(v195 + 8);
  *(_QWORD *)(v0 + 16104) = *(_QWORD *)v195;
  *(_QWORD *)(v0 + 16112) = v452;
  *(_QWORD *)(v0 + 16120) = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 16128) = *(_QWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 16136) = 0u;
  *(_OWORD *)(v0 + 16152) = 0u;
  *(_OWORD *)(v0 + 16168) = 0u;
  *(_OWORD *)(v0 + 16184) = 0u;
  *(_OWORD *)(v0 + 16200) = 0u;
  *(_DWORD *)(v0 + 16215) = 0;
  *(_BYTE *)(v0 + 16219) = 11;
  sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 16104);
  while (1)
  {
    v735 = *(_QWORD *)v195;
    v736 = *(_BYTE *)(v195 + 8);
    if (!sub_23AF202B8(*(_QWORD *)v195, v736) || !sub_23AA9F3D0(8, *(_QWORD *)(v0 + 392)))
    {
      if (*(_DWORD *)(v0 + 416) != 2)
        goto LABEL_342;
      goto LABEL_333;
    }
    v737 = *(_DWORD *)(v0 + 416);
    if (v737 < 2)
      break;
    if (v737 != 2)
      goto LABEL_342;
LABEL_333:
    v754 = *(_QWORD *)(v0 + 120);
    sub_23AA8EFC8(v195, v754, (uint64_t *)&unk_2542E6B00);
    Strong = swift_weakLoadStrong();
    v756 = *(char **)(v0 + 448);
    if (!Strong)
    {
      __break(1u);
      JUMPOUT(0x23AE9EF30);
    }
    v757 = sub_23AE88CCC(v754);
    v231 = v756;
    if (v756)
    {
      swift_release();
      sub_23AA8A05C(v754, (uint64_t *)&unk_2542E6B00);
      sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
      sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
      sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
      sub_23AA724E8(v0 + 8624, v0 + 4152, qword_2542E6E20);
      sub_23ADF2D34(v0 + 4152, (voidsub_23AAAEC3C);
      v33 = v195;
      goto LABEL_11;
    }
    v224 = (uint64_t)v757;
    sub_23AA8A05C(v754, (uint64_t *)&unk_2542E6B00);
    swift_release();
    if (!((uint64_t (*)(uint64_t))sub_23B0261BC)(v224))
    {
      swift_bridgeObjectRelease();
      v764 = 0;
      goto LABEL_343;
    }
    v758 = v150;
    v759 = v151;
    v225 = 0;
    v760 = *(_QWORD *)(v2 - 72);
    while (1)
    {
      v761 = sub_23ACDBB7C((uint64_t (*)())(v0 + 4152), (unint64_t)v225, v224);
      v763 = *v762;
      swift_retain();
      ((void (*)(uint64_t, _QWORD))v761)(v0 + 4152, 0);
      v226 = v225 + 1;
      if (__OFADD__(v225, 1))
        break;
      (*(void (**)(uint64_t))(*(_QWORD *)v760 + 144))(v763);
      swift_release();
      ++v225;
      if (v226 == (char *)((uint64_t (*)(uint64_t))sub_23B0261BC)(v224))
      {
        swift_bridgeObjectRelease();
        v764 = 0;
        v151 = v759;
        v150 = v758;
        v195 = *(_QWORD *)(v0 + 304);
        goto LABEL_343;
      }
    }
    __break(1u);
LABEL_375:
    __break(1u);
LABEL_376:
    v818 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 48))(*(_QWORD *)(v0 + 48), 1, *(_QWORD *)(v0 + 88));
    *(_QWORD *)(v0 + 448) = v231;
    if (v818 == 1)
    {

      sub_23AA8A05C(*(_QWORD *)(v0 + 48), &qword_2542E4770);
    }
    else
    {
LABEL_384:
      sub_23AA724E8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32), (uint64_t *)&unk_2542E4760);
      if ((sub_23AFFA4F4() & 1) == 0)
      {
        v825 = *(_BYTE *)(*(_QWORD *)(v0 + 32)
                        + *(int *)(*(_QWORD *)(v0 + 88) + 48)
                        + *(int *)(*(_QWORD *)(v0 + 176) + 84));
        if (!sub_23AA9F51C(v825, 3))
        {
          v826 = sub_23AA9F51C(v825, 2);
          if (!v826)
          {
            v195 = *(_QWORD *)(v0 + 304);
            v995 = *(_QWORD *)v195;
            v996 = *(_BYTE *)(v195 + 8);
            v997 = sub_23ADA8168(v826);
            sub_23AE14238(v995, v996, v997, v998, 0x8000000);
            (*(void (**)(void))(**(_QWORD **)(v2 - 72) + 144))();
            swift_release();
            sub_23AA8A05C(*(_QWORD *)(v0 + 32), (uint64_t *)&unk_2542E4760);

            v150 = *(_QWORD *)(v0 + 376);
            v151 = *(int **)(v0 + 176);
            goto LABEL_389;
          }
        }
      }
      sub_23AA8A05C(*(_QWORD *)(v0 + 32), (uint64_t *)&unk_2542E4760);

    }
LABEL_388:
    v150 = *(_QWORD *)(v0 + 376);
    v151 = *(int **)(v0 + 176);
    v195 = *(_QWORD *)(v0 + 304);
LABEL_389:
    if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0)
    {
      v827 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      if (sub_23AFA74BC(*(_BYTE *)(v195 + *(int *)(v827 + 48))) && sub_23AA9F3D0(16, *(_QWORD *)(v0 + 9120)))
      {
        v828 = *(_QWORD *)(v0 + 448);
        if ((sub_23AFFA4E8() & 1) == 0)
        {
          sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
          sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
          sub_23AA724E8(v0 + 3656, v0 + 4152, qword_2542E6E20);
          if (sub_23AAFC2A4(v0 + 4152) != 1)
          {
            v829 = *(_OWORD *)(v0 + 3536);
            v830 = *(_OWORD *)(v0 + 3568);
            v831 = *(_OWORD *)(v0 + 3552);
            *(_OWORD *)(v0 + 624) = v831;
            *(_OWORD *)(v0 + 640) = v830;
            v832 = *(_OWORD *)(v0 + 3472);
            v833 = *(_OWORD *)(v0 + 3504);
            v834 = *(_OWORD *)(v0 + 3488);
            *(_OWORD *)(v0 + 560) = v834;
            *(_OWORD *)(v0 + 576) = v833;
            v835 = *(_OWORD *)(v0 + 3504);
            v836 = *(_OWORD *)(v0 + 3536);
            v837 = *(_OWORD *)(v0 + 3520);
            *(_OWORD *)(v0 + 592) = v837;
            *(_OWORD *)(v0 + 608) = v836;
            v838 = *(_OWORD *)(v0 + 3408);
            v839 = *(_OWORD *)(v0 + 3440);
            v840 = *(_OWORD *)(v0 + 3424);
            *(_OWORD *)(v0 + 496) = v840;
            *(_OWORD *)(v0 + 512) = v839;
            v841 = *(_OWORD *)(v0 + 3440);
            v842 = *(_OWORD *)(v0 + 3472);
            v843 = *(_OWORD *)(v0 + 3456);
            *(_OWORD *)(v0 + 528) = v843;
            *(_OWORD *)(v0 + 544) = v842;
            v844 = *(_OWORD *)(v0 + 3376);
            v845 = *(_OWORD *)(v0 + 3408);
            v846 = *(_OWORD *)(v0 + 3392);
            *(_OWORD *)(v0 + 464) = v846;
            *(_OWORD *)(v0 + 480) = v845;
            v847 = *(_OWORD *)(v0 + 3360);
            *(_OWORD *)(v0 + 2848) = *(_OWORD *)(v0 + 3344);
            *(_OWORD *)(v0 + 2864) = v847;
            v848 = *(_OWORD *)(v0 + 3296);
            *(_OWORD *)(v0 + 2784) = *(_OWORD *)(v0 + 3280);
            *(_OWORD *)(v0 + 2800) = v848;
            v849 = *(_OWORD *)(v0 + 3312);
            *(_OWORD *)(v0 + 2832) = *(_OWORD *)(v0 + 3328);
            *(_OWORD *)(v0 + 2816) = v849;
            v850 = *(_OWORD *)(v0 + 3232);
            *(_OWORD *)(v0 + 2720) = *(_OWORD *)(v0 + 3216);
            *(_OWORD *)(v0 + 2736) = v850;
            v851 = *(_OWORD *)(v0 + 3248);
            *(_OWORD *)(v0 + 2768) = *(_OWORD *)(v0 + 3264);
            *(_OWORD *)(v0 + 2752) = v851;
            v852 = *(_OWORD *)(v0 + 3168);
            *(_OWORD *)(v0 + 2656) = *(_OWORD *)(v0 + 3152);
            *(_OWORD *)(v0 + 2672) = v852;
            v853 = *(_OWORD *)(v0 + 3184);
            *(_OWORD *)(v0 + 2704) = *(_OWORD *)(v0 + 3200);
            *(_OWORD *)(v0 + 2688) = v853;
            *(_OWORD *)(v0 + 3040) = v829;
            *(_OWORD *)(v0 + 3056) = v831;
            *(_OWORD *)(v0 + 3072) = *(_OWORD *)(v0 + 3568);
            *(_OWORD *)(v0 + 2976) = v832;
            *(_OWORD *)(v0 + 2992) = v834;
            *(_OWORD *)(v0 + 3008) = v835;
            *(_OWORD *)(v0 + 3024) = v837;
            *(_OWORD *)(v0 + 2912) = v838;
            *(_OWORD *)(v0 + 2928) = v840;
            *(_OWORD *)(v0 + 2944) = v841;
            *(_OWORD *)(v0 + 2960) = v843;
            v854 = *(_QWORD *)(v0 + 3584);
            *(_QWORD *)(v0 + 656) = v854;
            v855 = *(_BYTE *)(v0 + 3592);
            v856 = *(_QWORD *)(v0 + 3600);
            v857 = *(_QWORD *)(v0 + 3608);
            v858 = *(_BYTE *)(v0 + 3632);
            v859 = *(_QWORD *)(v0 + 3640);
            *(_QWORD *)(v0 + 3088) = v854;
            *(_OWORD *)(v0 + 2880) = v844;
            *(_OWORD *)(v0 + 2896) = v846;
            *(_BYTE *)(v0 + 3096) = v855;
            *(_QWORD *)(v0 + 3104) = v856;
            *(_QWORD *)(v0 + 3112) = v857;
            *(_OWORD *)(v0 + 3120) = *(_OWORD *)(v0 + 3616);
            *(_BYTE *)(v0 + 3136) = v858;
            *(_QWORD *)(v0 + 3144) = v859;
            sub_23ADF2D34(v0 + 3656, (voidsub_23AA88348);
            sub_23AAFC2BC(v0 + 464);
            sub_23AAFC3AC(v0 + 2656);
            v860 = *(void **)(v0 + 464);
            v861 = v860;
            sub_23AAFC540(v0 + 464);
            if (v860)
            {
              *(_QWORD *)(v0 + 1416) = v861;
              (*(void (**)(uint64_t))(*(_QWORD *)v224 + 264))(v0 + 1416);
              if (v828)
              {

                sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
                sub_23AA724E8(v0 + 8128, v0 + 1664, qword_2542E6E20);
                sub_23ADF2D34(v0 + 1664, (voidsub_23AAAEC3C);
                sub_23AA724E8(v0 + 8624, v0 + 2160, qword_2542E6E20);
                v322 = v0 + 2160;
                goto LABEL_138;
              }
              sub_23AA724E8(v0 + 9392, v0 + 10136, &qword_2542E5050);
              v862 = sub_23AAFCF2C(v0 + 10136);
              *(_QWORD *)(v0 + 448) = 0;
              if (v862 == 1)
                goto LABEL_402;
              v863 = *(_OWORD *)(v0 + 10344);
              *(_OWORD *)(v0 + 10576) = *(_OWORD *)(v0 + 10328);
              *(_OWORD *)(v0 + 10592) = v863;
              *(_OWORD *)(v0 + 10608) = *(_OWORD *)(v0 + 10360);
              *(_QWORD *)(v0 + 10624) = *(_QWORD *)(v0 + 10376);
              v864 = *(_OWORD *)(v0 + 10280);
              *(_OWORD *)(v0 + 10512) = *(_OWORD *)(v0 + 10264);
              *(_OWORD *)(v0 + 10528) = v864;
              v865 = *(_OWORD *)(v0 + 10312);
              *(_OWORD *)(v0 + 10544) = *(_OWORD *)(v0 + 10296);
              *(_OWORD *)(v0 + 10560) = v865;
              v866 = *(_OWORD *)(v0 + 10216);
              *(_OWORD *)(v0 + 10448) = *(_OWORD *)(v0 + 10200);
              *(_OWORD *)(v0 + 10464) = v866;
              v867 = *(_OWORD *)(v0 + 10248);
              *(_OWORD *)(v0 + 10480) = *(_OWORD *)(v0 + 10232);
              *(_OWORD *)(v0 + 10496) = v867;
              v868 = *(_OWORD *)(v0 + 10152);
              *(_OWORD *)(v0 + 10384) = *(_OWORD *)(v0 + 10136);
              *(_OWORD *)(v0 + 10400) = v868;
              v869 = *(_OWORD *)(v0 + 10184);
              *(_OWORD *)(v0 + 10416) = *(_OWORD *)(v0 + 10168);
              *(_OWORD *)(v0 + 10432) = v869;
              sub_23AA724E8(v0 + 10608, v0 + 10632, &qword_2542E76C0);
              sub_23AAB7528(v0 + 10632);
              sub_23AAB7E4C((_QWORD *)(v0 + 9392), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
              sub_23AA724E8(v0 + 10632, v2 - 104, &qword_2542E76C0);
              v870 = *(_QWORD *)(v2 - 104);
              if (!v870
                || (v871 = sub_23AF967B4(v870), sub_23AAB7500(v0 + 10632), v871)
                || (v872 = *(_BYTE *)(*(_QWORD *)(v0 + 304)
                                    + *(int *)(*(_QWORD *)(v0 + 376) + 48)
                                    + *(int *)(*(_QWORD *)(v0 + 176) + 84)),
                    sub_23AA9F51C(v872, 3))
                || sub_23AA9F51C(v872, 2))
              {
LABEL_402:

              }
              else
              {
                v999 = v861;
                v1000 = sub_23ADA8168(v999);
                sub_23AE14334((uint64_t)v999, v1000, v1001, 1);
                (*(void (**)(void))(**(_QWORD **)(v2 - 72) + 152))();

                swift_release();
              }
            }
          }
        }
        v150 = *(_QWORD *)(v0 + 376);
        v151 = *(int **)(v0 + 176);
        v195 = *(_QWORD *)(v0 + 304);
      }
    }
    v873 = *(_BYTE *)(v195 + 8);
    *(_QWORD *)(v0 + 4152) = *(_QWORD *)v195;
    *(_BYTE *)(v0 + 4160) = v873;
    *(_BYTE *)(v0 + 4161) = 0;
    *(_QWORD *)(v0 + 4168) = sub_23AFA7B90(*(_QWORD *)(v0 + 4648));
    *(_QWORD *)(v0 + 4176) = *(_QWORD *)(v0 + 240);
    *(_QWORD *)(v0 + 4184) = *(_QWORD *)(v0 + 248);
    *(_WORD *)(v0 + 4266) = 2304;
    sub_23AA724E8(v0 + 4152, v0 + 19040, qword_2542E1408);
    sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 19040);
    sub_23AEB3270(v0 + 19040, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
    v874 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    if (sub_23AFA7480(*(_BYTE *)(v195 + *(int *)(v874 + 48))))
    {
      v875 = *(_QWORD *)(v0 + 9120);
      if (sub_23AA9F3D0(8, v875))
      {
        v876 = *(unsigned __int8 *)(v195 + 8);
        *(_QWORD *)(v0 + 18920) = *(_QWORD *)v195;
        *(_QWORD *)(v0 + 18928) = v876;
        *(_QWORD *)(v0 + 18944) = 0;
        *(_QWORD *)(v0 + 18936) = 0;
        *(_OWORD *)(v0 + 18960) = 0u;
        *(_OWORD *)(v0 + 18976) = 0u;
        *(_OWORD *)(v0 + 18992) = 0u;
        *(_OWORD *)(v0 + 19008) = 0u;
        *(_QWORD *)(v0 + 18952) = 0xB000000000000000;
        *(_QWORD *)(v0 + 19024) = 0;
        *(_DWORD *)(v0 + 19032) = 151846912;
        sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 18920);
        if (*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) == 1)
        {
          *(_DWORD *)(v0 + 352) = (_DWORD)v226;
          v308 = *(_QWORD *)(v0 + 448);
          v877 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
          if ((sub_23AFA7404(1, *(_BYTE *)(v195 + *(int *)(v877 + 48))) & 1) != 0)
          {
            sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
            sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
            sub_23AA724E8(v0 + 3656, v0 + 4152, qword_2542E6E20);
            if (sub_23AAFC2A4(v0 + 4152) == 1)
              goto LABEL_410;
            v878 = *(_QWORD *)(v0 + 3152);
            v879 = *(_BYTE *)(v0 + 3160);
            v880 = *(_BYTE *)(v0 + 3184);
            v881 = *(_BYTE *)(v0 + 3289);
            v882 = *(_BYTE *)(v0 + 3290);
            v883 = *(_BYTE *)(v0 + 3312);
            v884 = *(_QWORD *)(v0 + 3384);
            v885 = *(_OWORD *)(v0 + 3568);
            *(_OWORD *)(v0 + 2560) = *(_OWORD *)(v0 + 3552);
            *(_OWORD *)(v0 + 2576) = v885;
            *(_QWORD *)(v0 + 2592) = *(_QWORD *)(v0 + 3584);
            v886 = *(_OWORD *)(v0 + 3504);
            *(_OWORD *)(v0 + 2496) = *(_OWORD *)(v0 + 3488);
            *(_OWORD *)(v0 + 2512) = v886;
            v887 = *(_OWORD *)(v0 + 3520);
            *(_OWORD *)(v0 + 2544) = *(_OWORD *)(v0 + 3536);
            *(_OWORD *)(v0 + 2528) = v887;
            v888 = *(_OWORD *)(v0 + 3440);
            *(_OWORD *)(v0 + 2432) = *(_OWORD *)(v0 + 3424);
            *(_OWORD *)(v0 + 2448) = v888;
            v889 = *(_OWORD *)(v0 + 3456);
            *(_OWORD *)(v0 + 2480) = *(_OWORD *)(v0 + 3472);
            *(_OWORD *)(v0 + 2464) = v889;
            v890 = *(_OWORD *)(v0 + 3392);
            *(_OWORD *)(v0 + 2416) = *(_OWORD *)(v0 + 3408);
            *(_OWORD *)(v0 + 2400) = v890;
            v891 = *(_BYTE *)(v0 + 3288);
            v892 = *(_BYTE *)(v0 + 3592);
            v893 = *(_QWORD *)(v0 + 3600);
            v894 = *(_QWORD *)(v0 + 3608);
            v895 = *(_BYTE *)(v0 + 3632);
            v896 = *(_QWORD *)(v0 + 3640);
            *(_QWORD *)(v0 + 2160) = v878;
            *(_BYTE *)(v0 + 2168) = v879;
            *(_OWORD *)(v0 + 2176) = *(_OWORD *)(v0 + 3168);
            *(_BYTE *)(v0 + 2192) = v880;
            *(_OWORD *)(v0 + 2200) = *(_OWORD *)(v0 + 3192);
            *(_OWORD *)(v0 + 2216) = *(_OWORD *)(v0 + 3208);
            *(_OWORD *)(v0 + 2232) = *(_OWORD *)(v0 + 3224);
            *(_OWORD *)(v0 + 2248) = *(_OWORD *)(v0 + 3240);
            *(_OWORD *)(v0 + 2264) = *(_OWORD *)(v0 + 3256);
            *(_OWORD *)(v0 + 2280) = *(_OWORD *)(v0 + 3272);
            *(_BYTE *)(v0 + 2296) = v891;
            *(_BYTE *)(v0 + 2297) = v881;
            *(_BYTE *)(v0 + 2298) = v882;
            *(_OWORD *)(v0 + 2304) = *(_OWORD *)(v0 + 3296);
            *(_BYTE *)(v0 + 2320) = v883;
            *(_OWORD *)(v0 + 2328) = *(_OWORD *)(v0 + 3320);
            *(_OWORD *)(v0 + 2344) = *(_OWORD *)(v0 + 3336);
            *(_OWORD *)(v0 + 2360) = *(_OWORD *)(v0 + 3352);
            *(_OWORD *)(v0 + 2376) = *(_OWORD *)(v0 + 3368);
            *(_QWORD *)(v0 + 2392) = v884;
            *(_BYTE *)(v0 + 2600) = v892;
            *(_QWORD *)(v0 + 2608) = v893;
            *(_QWORD *)(v0 + 2616) = v894;
            *(_OWORD *)(v0 + 2624) = *(_OWORD *)(v0 + 3616);
            *(_BYTE *)(v0 + 2640) = v895;
            *(_QWORD *)(v0 + 2648) = v896;
            sub_23AA724E8(v0 + 3656, v0 + 2656, qword_2542E6E20);
            sub_23ACFC940(v0 + 2656);
            sub_23AAFC3AC(v0 + 2160);
            if (!sub_23AA9F51C(v891, 0))
            {
LABEL_410:
              if (!sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v0 + 304)+ *(int *)(*(_QWORD *)(v0 + 376) + 48)+ *(int *)(*(_QWORD *)(v0 + 176) + 84)), 0))
              {
                sub_23AA724E8(*(_QWORD *)(v0 + 312) + *(int *)(*(_QWORD *)(v0 + 376) + 52), v0 + 1168, &qword_2542E5050);
                sub_23AA724E8(v0 + 1168, v0 + 1416, &qword_2542E5050);
                v897 = sub_23AAFCF2C(v0 + 1416);
                v419 = v897 == 1;
                if (v897 == 1)
                {
                  v303 = 0;
                }
                else
                {
                  v898 = *(_OWORD *)(v0 + 1624);
                  *(_OWORD *)(v0 + 18864) = *(_OWORD *)(v0 + 1608);
                  *(_OWORD *)(v0 + 18880) = v898;
                  *(_OWORD *)(v0 + 18896) = *(_OWORD *)(v0 + 1640);
                  *(_QWORD *)(v0 + 18912) = *(_QWORD *)(v0 + 1656);
                  v899 = *(_OWORD *)(v0 + 1560);
                  *(_OWORD *)(v0 + 18800) = *(_OWORD *)(v0 + 1544);
                  *(_OWORD *)(v0 + 18816) = v899;
                  v900 = *(_OWORD *)(v0 + 1592);
                  *(_OWORD *)(v0 + 18832) = *(_OWORD *)(v0 + 1576);
                  *(_OWORD *)(v0 + 18848) = v900;
                  v901 = *(_OWORD *)(v0 + 1496);
                  *(_OWORD *)(v0 + 18736) = *(_OWORD *)(v0 + 1480);
                  *(_OWORD *)(v0 + 18752) = v901;
                  v902 = *(_OWORD *)(v0 + 1528);
                  *(_OWORD *)(v0 + 18768) = *(_OWORD *)(v0 + 1512);
                  *(_OWORD *)(v0 + 18784) = v902;
                  v903 = *(_OWORD *)(v0 + 1432);
                  *(_OWORD *)(v0 + 18672) = *(_OWORD *)(v0 + 1416);
                  *(_OWORD *)(v0 + 18688) = v903;
                  v904 = *(_OWORD *)(v0 + 1464);
                  *(_OWORD *)(v0 + 18704) = *(_OWORD *)(v0 + 1448);
                  *(_OWORD *)(v0 + 18720) = v904;
                  v905 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 408) + 512);
                  sub_23AA724E8(v0 + 1168, v0 + 464, &qword_2542E5050);
                  v906 = sub_23AC42B28(v0 + 464);
                  v907 = v905(v906);
                  v908 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
                  v909 = 1;
                  v910 = sub_23AC37B08(*(_BYTE *)(*(_QWORD *)(v0 + 304) + *(int *)(v908 + 48)), 1);
                  sub_23AA724E8(v0 + 3656, v0 + 2656, qword_2542E6E20);
                  sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
                  v911 = sub_23AAFC2A4(v0 + 3152);
                  if (v911 != 1)
                  {
                    v912 = *(_QWORD *)(v0 + 3144);
                    v913 = *(_OWORD *)(v0 + 2864);
                    *(_OWORD *)(v0 + 1856) = *(_OWORD *)(v0 + 2848);
                    *(_OWORD *)(v0 + 1872) = v913;
                    v914 = *(_OWORD *)(v0 + 2800);
                    *(_OWORD *)(v0 + 1792) = *(_OWORD *)(v0 + 2784);
                    *(_OWORD *)(v0 + 1808) = v914;
                    v915 = *(_OWORD *)(v0 + 2816);
                    *(_OWORD *)(v0 + 1840) = *(_OWORD *)(v0 + 2832);
                    *(_OWORD *)(v0 + 1824) = v915;
                    v916 = *(_OWORD *)(v0 + 2736);
                    *(_OWORD *)(v0 + 1728) = *(_OWORD *)(v0 + 2720);
                    *(_OWORD *)(v0 + 1744) = v916;
                    v917 = *(_OWORD *)(v0 + 2752);
                    *(_OWORD *)(v0 + 1776) = *(_OWORD *)(v0 + 2768);
                    *(_OWORD *)(v0 + 1760) = v917;
                    v918 = *(_OWORD *)(v0 + 2672);
                    *(_OWORD *)(v0 + 1664) = *(_OWORD *)(v0 + 2656);
                    *(_OWORD *)(v0 + 1680) = v918;
                    v919 = *(_OWORD *)(v0 + 2688);
                    *(_OWORD *)(v0 + 1712) = *(_OWORD *)(v0 + 2704);
                    *(_OWORD *)(v0 + 1696) = v919;
                    v920 = *(_OWORD *)(v0 + 3056);
                    *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 3040);
                    *(_OWORD *)(v0 + 2064) = v920;
                    *(_OWORD *)(v0 + 2080) = *(_OWORD *)(v0 + 3072);
                    *(_QWORD *)(v0 + 2096) = *(_QWORD *)(v0 + 3088);
                    v921 = *(_OWORD *)(v0 + 2992);
                    *(_OWORD *)(v0 + 1984) = *(_OWORD *)(v0 + 2976);
                    *(_OWORD *)(v0 + 2000) = v921;
                    v922 = *(_OWORD *)(v0 + 3024);
                    *(_OWORD *)(v0 + 2016) = *(_OWORD *)(v0 + 3008);
                    *(_OWORD *)(v0 + 2032) = v922;
                    v923 = *(_OWORD *)(v0 + 2928);
                    *(_OWORD *)(v0 + 1920) = *(_OWORD *)(v0 + 2912);
                    *(_OWORD *)(v0 + 1936) = v923;
                    v924 = *(_OWORD *)(v0 + 2960);
                    *(_OWORD *)(v0 + 1952) = *(_OWORD *)(v0 + 2944);
                    *(_OWORD *)(v0 + 1968) = v924;
                    v925 = *(_OWORD *)(v0 + 2896);
                    *(_OWORD *)(v0 + 1888) = *(_OWORD *)(v0 + 2880);
                    *(_OWORD *)(v0 + 1904) = v925;
                    v926 = *(_QWORD *)(v0 + 3104);
                    v927 = *(_QWORD *)(v0 + 3112);
                    v928 = *(_BYTE *)(v0 + 3136);
                    *(_BYTE *)(v0 + 2104) = *(_BYTE *)(v0 + 3096);
                    *(_QWORD *)(v0 + 2112) = v926;
                    *(_QWORD *)(v0 + 2120) = v927;
                    *(_OWORD *)(v0 + 2128) = *(_OWORD *)(v0 + 3120);
                    *(_BYTE *)(v0 + 2144) = v928;
                    *(_QWORD *)(v0 + 2152) = v912;
                    sub_23AA724E8(v0 + 3656, v0 + 2160, qword_2542E6E20);
                    sub_23ACFC940(v0 + 2160);
                    sub_23AAFC3AC(v0 + 1664);
                    v909 = sub_23AA9F3D0(1, v912);
                  }
                  v303 = sub_23AF9679C(v907 & 1, v910, v909);
                  sub_23AAB7E4C((_QWORD *)(v0 + 1168), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
                }
                if (sub_23AA9F3D0(2, v875))
                {
                  sub_23AA724E8(v0 + 1168, v0 + 464, &qword_2542E5050);
                  if (sub_23AAFCF2C(v0 + 464) != 1 && sub_23AC37674(*(_QWORD *)(v0 + 672), 0))
                  {
                    (*(void (**)(_QWORD))(**(_QWORD **)(v0 + 400) + 264))(*(_QWORD *)(v0 + 432));
                    if (v308)
                    {
                      sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
                      sub_23AA724E8(v0 + 8128, v0 + 2656, qword_2542E6E20);
                      sub_23ADF2D34(v0 + 2656, (voidsub_23AAAEC3C);
                      sub_23AA724E8(v0 + 8624, v0 + 3152, qword_2542E6E20);
                      v322 = v0 + 3152;
                      goto LABEL_138;
                    }
LABEL_426:
                    sub_23AA724E8(v0 + 9144, v0 + 9640, &qword_2542E5050);
                    if (sub_23AAFCF2C(v0 + 9640) != 1)
                    {
                      v933 = *(_OWORD *)(v0 + 9848);
                      *(_OWORD *)(v0 + 10080) = *(_OWORD *)(v0 + 9832);
                      *(_OWORD *)(v0 + 10096) = v933;
                      *(_OWORD *)(v0 + 10112) = *(_OWORD *)(v0 + 9864);
                      *(_QWORD *)(v0 + 10128) = *(_QWORD *)(v0 + 9880);
                      v934 = *(_OWORD *)(v0 + 9784);
                      *(_OWORD *)(v0 + 10016) = *(_OWORD *)(v0 + 9768);
                      *(_OWORD *)(v0 + 10032) = v934;
                      v935 = *(_OWORD *)(v0 + 9816);
                      *(_OWORD *)(v0 + 10048) = *(_OWORD *)(v0 + 9800);
                      *(_OWORD *)(v0 + 10064) = v935;
                      v936 = *(_OWORD *)(v0 + 9720);
                      *(_OWORD *)(v0 + 9952) = *(_OWORD *)(v0 + 9704);
                      *(_OWORD *)(v0 + 9968) = v936;
                      v937 = *(_OWORD *)(v0 + 9752);
                      *(_OWORD *)(v0 + 9984) = *(_OWORD *)(v0 + 9736);
                      *(_OWORD *)(v0 + 10000) = v937;
                      v938 = *(_OWORD *)(v0 + 9656);
                      *(_OWORD *)(v0 + 9888) = *(_OWORD *)(v0 + 9640);
                      *(_OWORD *)(v0 + 9904) = v938;
                      v939 = *(_OWORD *)(v0 + 9688);
                      *(_OWORD *)(v0 + 9920) = *(_OWORD *)(v0 + 9672);
                      *(_OWORD *)(v0 + 9936) = v939;
                      v940 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 408) + 512))();
                      v941 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
                      v942 = 1;
                      v943 = sub_23AC37B08(*(_BYTE *)(*(_QWORD *)(v0 + 304) + *(int *)(v941 + 48)), 1);
                      sub_23AA724E8(v0 + 3656, v0 + 2656, qword_2542E6E20);
                      sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
                      if (sub_23AAFC2A4(v0 + 3152) != 1)
                      {
                        v944 = *(_QWORD *)(v0 + 3144);
                        v945 = *(_OWORD *)(v0 + 2864);
                        *(_OWORD *)(v0 + 1856) = *(_OWORD *)(v0 + 2848);
                        *(_OWORD *)(v0 + 1872) = v945;
                        v946 = *(_OWORD *)(v0 + 2800);
                        *(_OWORD *)(v0 + 1792) = *(_OWORD *)(v0 + 2784);
                        *(_OWORD *)(v0 + 1808) = v946;
                        v947 = *(_OWORD *)(v0 + 2816);
                        *(_OWORD *)(v0 + 1840) = *(_OWORD *)(v0 + 2832);
                        *(_OWORD *)(v0 + 1824) = v947;
                        v948 = *(_OWORD *)(v0 + 2736);
                        *(_OWORD *)(v0 + 1728) = *(_OWORD *)(v0 + 2720);
                        *(_OWORD *)(v0 + 1744) = v948;
                        v949 = *(_OWORD *)(v0 + 2752);
                        *(_OWORD *)(v0 + 1776) = *(_OWORD *)(v0 + 2768);
                        *(_OWORD *)(v0 + 1760) = v949;
                        v950 = *(_OWORD *)(v0 + 2672);
                        *(_OWORD *)(v0 + 1664) = *(_OWORD *)(v0 + 2656);
                        *(_OWORD *)(v0 + 1680) = v950;
                        v951 = *(_OWORD *)(v0 + 2688);
                        *(_OWORD *)(v0 + 1712) = *(_OWORD *)(v0 + 2704);
                        *(_OWORD *)(v0 + 1696) = v951;
                        v952 = *(_OWORD *)(v0 + 3056);
                        *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 3040);
                        *(_OWORD *)(v0 + 2064) = v952;
                        *(_OWORD *)(v0 + 2080) = *(_OWORD *)(v0 + 3072);
                        *(_QWORD *)(v0 + 2096) = *(_QWORD *)(v0 + 3088);
                        v953 = *(_OWORD *)(v0 + 2992);
                        *(_OWORD *)(v0 + 1984) = *(_OWORD *)(v0 + 2976);
                        *(_OWORD *)(v0 + 2000) = v953;
                        v954 = *(_OWORD *)(v0 + 3024);
                        *(_OWORD *)(v0 + 2016) = *(_OWORD *)(v0 + 3008);
                        *(_OWORD *)(v0 + 2032) = v954;
                        v955 = *(_OWORD *)(v0 + 2928);
                        *(_OWORD *)(v0 + 1920) = *(_OWORD *)(v0 + 2912);
                        *(_OWORD *)(v0 + 1936) = v955;
                        v956 = *(_OWORD *)(v0 + 2960);
                        *(_OWORD *)(v0 + 1952) = *(_OWORD *)(v0 + 2944);
                        *(_OWORD *)(v0 + 1968) = v956;
                        v957 = *(_OWORD *)(v0 + 2896);
                        *(_OWORD *)(v0 + 1888) = *(_OWORD *)(v0 + 2880);
                        *(_OWORD *)(v0 + 1904) = v957;
                        v958 = *(_QWORD *)(v0 + 3104);
                        v959 = *(_QWORD *)(v0 + 3112);
                        v960 = *(_BYTE *)(v0 + 3136);
                        *(_BYTE *)(v0 + 2104) = *(_BYTE *)(v0 + 3096);
                        *(_QWORD *)(v0 + 2112) = v958;
                        *(_QWORD *)(v0 + 2120) = v959;
                        *(_OWORD *)(v0 + 2128) = *(_OWORD *)(v0 + 3120);
                        *(_BYTE *)(v0 + 2144) = v960;
                        *(_QWORD *)(v0 + 2152) = v944;
                        sub_23AA724E8(v0 + 3656, v0 + 2160, qword_2542E6E20);
                        sub_23ACFC940(v0 + 2160);
                        sub_23AAFC3AC(v0 + 1664);
                        v942 = sub_23AA9F3D0(1, v944);
                      }
                      v303 = sub_23AF9679C(v940 & 1, v943, v942);
                      sub_23AAB7E4C((_QWORD *)(v0 + 9144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
                      v419 = 0;
                    }
                  }
                }
                v961 = (*(uint64_t (**)(void))(v0 + 384))();
                if (sub_23AA9F3D0(4096, v961))
                {
                  if (!v419)
                  {
                    if (sub_23AC37674(v303, 1003) || sub_23AC37674(v303, 502))
                    {
                      sub_23AA724E8(v0 + 3656, v0 + 2656, qword_2542E6E20);
                      sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
                      if (sub_23AAFC2A4(v0 + 3152) != 1)
                      {
                        v962 = *(_OWORD *)(v0 + 3040);
                        v963 = *(_OWORD *)(v0 + 3072);
                        v964 = *(_OWORD *)(v0 + 3056);
                        *(_OWORD *)(v0 + 1120) = v964;
                        *(_OWORD *)(v0 + 1136) = v963;
                        v965 = *(_OWORD *)(v0 + 2976);
                        v966 = *(_OWORD *)(v0 + 3008);
                        v967 = *(_OWORD *)(v0 + 2992);
                        *(_OWORD *)(v0 + 1056) = v967;
                        *(_OWORD *)(v0 + 1072) = v966;
                        v968 = *(_OWORD *)(v0 + 3024);
                        v969 = *(_OWORD *)(v0 + 3008);
                        v970 = v968;
                        *(_OWORD *)(v0 + 1104) = *(_OWORD *)(v0 + 3040);
                        *(_OWORD *)(v0 + 1088) = v968;
                        v971 = *(_OWORD *)(v0 + 2912);
                        v972 = *(_OWORD *)(v0 + 2944);
                        v973 = *(_OWORD *)(v0 + 2928);
                        *(_OWORD *)(v0 + 992) = v973;
                        *(_OWORD *)(v0 + 1008) = v972;
                        v974 = *(_OWORD *)(v0 + 2960);
                        v975 = *(_OWORD *)(v0 + 2944);
                        *(_OWORD *)(v0 + 1040) = *(_OWORD *)(v0 + 2976);
                        *(_OWORD *)(v0 + 1024) = v974;
                        v976 = *(_OWORD *)(v0 + 2880);
                        v977 = *(_OWORD *)(v0 + 2912);
                        v978 = *(_OWORD *)(v0 + 2896);
                        *(_OWORD *)(v0 + 960) = v978;
                        *(_OWORD *)(v0 + 976) = v977;
                        v979 = *(_OWORD *)(v0 + 2864);
                        *(_OWORD *)(v0 + 2352) = *(_OWORD *)(v0 + 2848);
                        *(_OWORD *)(v0 + 2368) = v979;
                        v980 = *(_OWORD *)(v0 + 2800);
                        *(_OWORD *)(v0 + 2288) = *(_OWORD *)(v0 + 2784);
                        *(_OWORD *)(v0 + 2304) = v980;
                        v981 = *(_OWORD *)(v0 + 2816);
                        *(_OWORD *)(v0 + 2336) = *(_OWORD *)(v0 + 2832);
                        *(_OWORD *)(v0 + 2320) = v981;
                        v982 = *(_OWORD *)(v0 + 2736);
                        *(_OWORD *)(v0 + 2224) = *(_OWORD *)(v0 + 2720);
                        *(_OWORD *)(v0 + 2240) = v982;
                        v983 = *(_OWORD *)(v0 + 2752);
                        *(_OWORD *)(v0 + 2272) = *(_OWORD *)(v0 + 2768);
                        *(_OWORD *)(v0 + 2256) = v983;
                        v984 = *(_OWORD *)(v0 + 2672);
                        *(_OWORD *)(v0 + 2160) = *(_OWORD *)(v0 + 2656);
                        *(_OWORD *)(v0 + 2176) = v984;
                        v985 = *(_OWORD *)(v0 + 2688);
                        *(_OWORD *)(v0 + 2208) = *(_OWORD *)(v0 + 2704);
                        *(_OWORD *)(v0 + 2192) = v985;
                        *(_OWORD *)(v0 + 2544) = v962;
                        *(_OWORD *)(v0 + 2560) = v964;
                        *(_OWORD *)(v0 + 2576) = *(_OWORD *)(v0 + 3072);
                        *(_OWORD *)(v0 + 2480) = v965;
                        *(_OWORD *)(v0 + 2496) = v967;
                        *(_OWORD *)(v0 + 2512) = v969;
                        *(_OWORD *)(v0 + 2528) = v970;
                        *(_OWORD *)(v0 + 2416) = v971;
                        *(_OWORD *)(v0 + 2432) = v973;
                        *(_OWORD *)(v0 + 2448) = v975;
                        *(_OWORD *)(v0 + 2464) = v974;
                        v986 = *(_QWORD *)(v0 + 3088);
                        *(_QWORD *)(v0 + 1152) = v986;
                        v987 = *(_BYTE *)(v0 + 3096);
                        v988 = *(_QWORD *)(v0 + 3104);
                        v989 = *(_QWORD *)(v0 + 3112);
                        v990 = *(_BYTE *)(v0 + 3136);
                        v991 = *(_QWORD *)(v0 + 3144);
                        *(_QWORD *)(v0 + 2592) = v986;
                        *(_OWORD *)(v0 + 2384) = v976;
                        *(_OWORD *)(v0 + 2400) = v978;
                        *(_BYTE *)(v0 + 2600) = v987;
                        *(_QWORD *)(v0 + 2608) = v988;
                        *(_QWORD *)(v0 + 2616) = v989;
                        *(_OWORD *)(v0 + 2624) = *(_OWORD *)(v0 + 3120);
                        *(_BYTE *)(v0 + 2640) = v990;
                        *(_QWORD *)(v0 + 2648) = v991;
                        sub_23ADF2D34(v0 + 3656, (voidsub_23AA88348);
                        sub_23AAFC2BC(v0 + 960);
                        sub_23AAFC3AC(v0 + 2160);
                        v992 = *(void **)(v0 + 960);
                        v993 = v992;
                        sub_23AAFC540(v0 + 960);
                        if (v992)
                        {
                          *(_QWORD *)(v0 + 1160) = v993;
                          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v224 + 240))(v0 + 1160, 1);
                          if (v308)
                          {

                            sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
                            sub_23AA724E8(v0 + 8128, v0 + 464, qword_2542E6E20);
                            sub_23ADF2D34(v0 + 464, (voidsub_23AAAEC3C);
                            sub_23AA724E8(v0 + 8624, v0 + 1664, qword_2542E6E20);
                            v322 = v0 + 1664;
                            goto LABEL_138;
                          }
LABEL_444:
                          if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 48))(*(_QWORD *)(v0 + 16), 1, *(_QWORD *)(v0 + 88)) == 1)
                          {
                            sub_23AA8A05C(*(_QWORD *)(v0 + 16), &qword_2542E4770);

                          }
                          else
                          {
                            v1003 = *(_QWORD *)(v0 + 8);
                            v1002 = *(_QWORD *)(v0 + 16);
                            sub_23AA907B0(v1002 + *(int *)(*(_QWORD *)(v0 + 88) + 48), v1003, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
                            sub_23AA8A05C(v1002, (uint64_t *)&unk_2542E4760);
                            v1004 = *(_BYTE *)(v1003 + *(int *)(*(_QWORD *)(v0 + 176) + 84));
                            sub_23AA937BC(v1003, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
                            if (sub_23AA9F51C(v1004, 3))
                            {

LABEL_440:
                              *(_QWORD *)(v0 + 448) = v308;
                              v195 = *(_QWORD *)(v0 + 304);
                              v994 = *(unsigned __int8 *)(v195 + 8);
                              *(_QWORD *)(v0 + 18552) = *(_QWORD *)v195;
                              *(_QWORD *)(v0 + 18560) = v994;
                              *(_QWORD *)(v0 + 18568) = 259;
                              *(_QWORD *)(v0 + 18576) = *(_QWORD *)(v0 + 240);
                              *(_OWORD *)(v0 + 18592) = 0u;
                              *(_OWORD *)(v0 + 18608) = 0u;
                              *(_QWORD *)(v0 + 18584) = *(_QWORD *)(v0 + 248);
                              *(_QWORD *)(v0 + 18624) = 0;
                              *(_QWORD *)(v0 + 18632) = 786432;
                              *(_QWORD *)(v0 + 18640) = 0;
                              *(_QWORD *)(v0 + 18656) = 0;
                              *(_QWORD *)(v0 + 18648) = 0;
                              *(_DWORD *)(v0 + 18663) = 0;
                              *(_BYTE *)(v0 + 18667) = 8;
                              sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 18552);
                              v150 = *(_QWORD *)(v0 + 376);
                              v151 = *(int **)(v0 + 176);
                              LODWORD(v226) = *(_DWORD *)(v0 + 352);
                              goto LABEL_216;
                            }
                            v1005 = sub_23AA9F51C(v1004, 2);

                            if (v1005)
                              goto LABEL_440;
                          }
                        }
                      }
                    }
LABEL_439:
                    if (sub_23AC37674(v303, 2))
                      goto LABEL_440;
                  }
                }
                else if (!v419)
                {
                  goto LABEL_439;
                }
                *(_QWORD *)(v0 + 448) = v308;
              }
            }
          }
          v150 = *(_QWORD *)(v0 + 376);
          v151 = *(int **)(v0 + 176);
          v195 = *(_QWORD *)(v0 + 304);
          LODWORD(v226) = *(_DWORD *)(v0 + 352);
        }
      }
    }
LABEL_216:
    v462 = *(_QWORD *)(v0 + 9120);
    if (sub_23AA9F3D0(16, v462))
    {
      if ((sub_23AFFA4E8() & 1) != 0)
      {
        v463 = *(unsigned __int8 *)(v195 + 8);
        *(_QWORD *)(v0 + 18312) = *(_QWORD *)v195;
        *(_QWORD *)(v0 + 18320) = v463;
        *(_OWORD *)(v0 + 18328) = 0u;
        *(_OWORD *)(v0 + 18344) = 0u;
        *(_OWORD *)(v0 + 18360) = 0u;
        *(_OWORD *)(v0 + 18376) = 0u;
        *(_QWORD *)(v0 + 18392) = 589824;
        *(_QWORD *)(v0 + 18400) = 0;
        *(_QWORD *)(v0 + 18416) = 0;
        *(_QWORD *)(v0 + 18408) = 0;
        *(_DWORD *)(v0 + 18423) = 0;
        *(_BYTE *)(v0 + 18427) = 8;
        sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 18312);
        sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
        sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
        sub_23AA724E8(v0 + 3656, v0 + 4152, qword_2542E6E20);
        if (sub_23AAFC2A4(v0 + 4152) != 1)
        {
          sub_23AA724E8(v0 + 3656, v0 + 2160, qword_2542E6E20);
          v464 = *(unsigned __int8 *)(v0 + 3289);
          v465 = *(_QWORD *)(v0 + 3152);
          v466 = *(_BYTE *)(v0 + 3160);
          v467 = *(_BYTE *)(v0 + 3184);
          v468 = *(_BYTE *)(v0 + 3288);
          v469 = *(_BYTE *)(v0 + 3290);
          v470 = *(_BYTE *)(v0 + 3312);
          v471 = *(_QWORD *)(v0 + 3384);
          v472 = *(_OWORD *)(v0 + 3568);
          *(_OWORD *)(v0 + 3056) = *(_OWORD *)(v0 + 3552);
          *(_OWORD *)(v0 + 3072) = v472;
          *(_QWORD *)(v0 + 3088) = *(_QWORD *)(v0 + 3584);
          v473 = *(_OWORD *)(v0 + 3504);
          *(_OWORD *)(v0 + 2992) = *(_OWORD *)(v0 + 3488);
          *(_OWORD *)(v0 + 3008) = v473;
          v474 = *(_OWORD *)(v0 + 3520);
          *(_OWORD *)(v0 + 3040) = *(_OWORD *)(v0 + 3536);
          *(_OWORD *)(v0 + 3024) = v474;
          v475 = *(_OWORD *)(v0 + 3440);
          *(_OWORD *)(v0 + 2928) = *(_OWORD *)(v0 + 3424);
          *(_OWORD *)(v0 + 2944) = v475;
          v476 = *(_OWORD *)(v0 + 3456);
          *(_OWORD *)(v0 + 2976) = *(_OWORD *)(v0 + 3472);
          *(_OWORD *)(v0 + 2960) = v476;
          v477 = *(_OWORD *)(v0 + 3392);
          *(_OWORD *)(v0 + 2912) = *(_OWORD *)(v0 + 3408);
          *(_OWORD *)(v0 + 2896) = v477;
          v478 = *(_BYTE *)(v0 + 3592);
          v479 = *(_QWORD *)(v0 + 3600);
          v480 = *(_QWORD *)(v0 + 3608);
          v481 = *(_BYTE *)(v0 + 3632);
          v482 = *(_QWORD *)(v0 + 3640);
          *(_QWORD *)(v0 + 2656) = v465;
          *(_BYTE *)(v0 + 2664) = v466;
          *(_OWORD *)(v0 + 2672) = *(_OWORD *)(v0 + 3168);
          *(_BYTE *)(v0 + 2688) = v467;
          *(_OWORD *)(v0 + 2696) = *(_OWORD *)(v0 + 3192);
          *(_OWORD *)(v0 + 2712) = *(_OWORD *)(v0 + 3208);
          *(_OWORD *)(v0 + 2728) = *(_OWORD *)(v0 + 3224);
          *(_OWORD *)(v0 + 2744) = *(_OWORD *)(v0 + 3240);
          *(_OWORD *)(v0 + 2760) = *(_OWORD *)(v0 + 3256);
          *(_OWORD *)(v0 + 2776) = *(_OWORD *)(v0 + 3272);
          *(_BYTE *)(v0 + 2792) = v468;
          *(_BYTE *)(v0 + 2793) = v464;
          *(_BYTE *)(v0 + 2794) = v469;
          *(_OWORD *)(v0 + 2800) = *(_OWORD *)(v0 + 3296);
          *(_BYTE *)(v0 + 2816) = v470;
          *(_OWORD *)(v0 + 2824) = *(_OWORD *)(v0 + 3320);
          *(_OWORD *)(v0 + 2840) = *(_OWORD *)(v0 + 3336);
          *(_OWORD *)(v0 + 2856) = *(_OWORD *)(v0 + 3352);
          *(_OWORD *)(v0 + 2872) = *(_OWORD *)(v0 + 3368);
          *(_QWORD *)(v0 + 2888) = v471;
          *(_BYTE *)(v0 + 3096) = v478;
          *(_QWORD *)(v0 + 3104) = v479;
          *(_QWORD *)(v0 + 3112) = v480;
          *(_OWORD *)(v0 + 3120) = *(_OWORD *)(v0 + 3616);
          *(_BYTE *)(v0 + 3136) = v481;
          *(_QWORD *)(v0 + 3144) = v482;
          sub_23ACFC940(v0 + 2160);
          sub_23AAFC3AC(v0 + 2656);
          if (v464 != 6 && sub_23AA9F51C(v464, 0))
          {
            if (*(_DWORD *)(v0 + 416) == 3)
            {
              v150 = *(_QWORD *)(v0 + 376);
              v151 = *(int **)(v0 + 176);
              v195 = *(_QWORD *)(v0 + 304);
            }
            else
            {
              v195 = *(_QWORD *)(v0 + 304);
              v667 = *(unsigned __int8 *)(v195 + 8);
              *(_QWORD *)(v0 + 18192) = *(_QWORD *)v195;
              *(_QWORD *)(v0 + 18200) = v667;
              *(_OWORD *)(v0 + 18216) = 0u;
              *(_OWORD *)(v0 + 18232) = 0u;
              *(_OWORD *)(v0 + 18248) = 0u;
              *(_OWORD *)(v0 + 18264) = 0u;
              *(_OWORD *)(v0 + 18280) = 0u;
              *(_QWORD *)(v0 + 18208) = 3;
              *(_QWORD *)(v0 + 18296) = 0;
              *(_DWORD *)(v0 + 18304) = 151977984;
              sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 18192);
              v150 = *(_QWORD *)(v0 + 376);
              v151 = *(int **)(v0 + 176);
            }
          }
        }
      }
      if ((sub_23AFFA4E8() & 1) == 0)
      {
        sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
        sub_23AA724E8(v0 + 3656, v0 + 4152, qword_2542E6E20);
        if (sub_23AAFC2A4(v0 + 4152) != 1)
        {
          sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
          memcpy((void *)(v0 + 17696), (const void *)(v0 + 3152), 0x1F0uLL);
          if (sub_23AA9F890() && sub_23B0C9B4C(*(_BYTE *)(v0 + 3488)))
          {
            v668 = *(unsigned __int8 *)(v195 + 8);
            *(_QWORD *)(v0 + 17576) = *(_QWORD *)v195;
            *(_QWORD *)(v0 + 17584) = v668;
            *(_OWORD *)(v0 + 17600) = 0u;
            *(_OWORD *)(v0 + 17616) = 0u;
            *(_OWORD *)(v0 + 17632) = 0u;
            *(_QWORD *)(v0 + 17592) = 2;
            *(_QWORD *)(v0 + 17648) = 0;
            *(_QWORD *)(v0 + 17656) = 589824;
            *(_QWORD *)(v0 + 17664) = 0;
            *(_QWORD *)(v0 + 17680) = 0;
            *(_QWORD *)(v0 + 17672) = 0;
            *(_DWORD *)(v0 + 17687) = 0;
            *(_BYTE *)(v0 + 17691) = 8;
            sub_23ACFC940(v0 + 3152);
            sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 17576);
            sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
          }
        }
      }
    }
    if (sub_23AA9F3D0(0x2000000000000, v462))
    {
      v669 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      if (sub_23AC37B08(*(_BYTE *)(v195 + *(int *)(v669 + 48)), 0))
      {
        sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
        sub_23AA724E8(v0 + 3656, v0 + 4152, qword_2542E6E20);
        if (sub_23AAFC2A4(v0 + 4152) != 1)
        {
          sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
          memcpy((void *)(v0 + 17080), (const void *)(v0 + 3152), 0x1F0uLL);
          if (sub_23AA9F890())
          {
            v670 = v151;
            v671 = (char)v226;
            v672 = *(void **)(v0 + 3392);
            if (v672)
            {
              v673 = *(_QWORD *)(v0 + 448);
              *(_QWORD *)(v0 + 1416) = v672;
              v674 = v195 + *(int *)(v150 + 52);
              sub_23AA724E8(v674, v0 + 464, &qword_2542E5050);
              sub_23AA724E8(v0 + 464, v0 + 1664, &qword_2542E5050);
              if (sub_23AAFCF2C(v0 + 1664) == 1
                || !sub_23AC37674(*(_QWORD *)(v674 + 208), 501)
                || sub_23AA9F3D0(1, *(_QWORD *)(v0 + 3640)))
              {
LABEL_304:
                v150 = *(_QWORD *)(v0 + 376);
                v670 = *(int **)(v0 + 176);
                v195 = *(_QWORD *)(v0 + 304);
              }
              else
              {
                v806 = *(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 408) + 40) + 240);
                sub_23ADF2D34(v0 + 3656, (voidsub_23AA88348);
                v807 = v672;
                v806(v0 + 1416, 1);
                if (v673)
                {

                  sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
                  sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
                  sub_23AA724E8(v0 + 8128, v0 + 2160, qword_2542E6E20);
                  sub_23ADF2D34(v0 + 2160, (voidsub_23AAAEC3C);
                  sub_23AA724E8(v0 + 8624, v0 + 2656, qword_2542E6E20);
                  sub_23ADF2D34(v0 + 2656, (voidsub_23AAAEC3C);
                  v33 = *(_QWORD *)(v0 + 304);
                  goto LABEL_11;
                }
                v819 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 48))(*(_QWORD *)(v0 + 40), 1, *(_QWORD *)(v0 + 88));
                *(_QWORD *)(v0 + 448) = 0;
                if (v819 == 1)
                {

                  sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
                  sub_23AA8A05C(*(_QWORD *)(v0 + 40), &qword_2542E4770);
                  goto LABEL_304;
                }
                sub_23AA724E8(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24), (uint64_t *)&unk_2542E4760);
                if ((sub_23AFFA4F4() & 1) != 0)
                {
                  sub_23AA8A05C(*(_QWORD *)(v0 + 24), (uint64_t *)&unk_2542E4760);

                  sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
                  goto LABEL_304;
                }
                v195 = *(_QWORD *)(v0 + 304);
                v929 = *(_QWORD *)v195;
                v930 = *(unsigned __int8 *)(v195 + 8);
                v931 = sub_23ACD8490(0);
                v932 = sub_23AFD7BC8(v931);
                swift_bridgeObjectRelease();
                *(_QWORD *)(v0 + 16960) = v929;
                *(_QWORD *)(v0 + 16968) = v930;
                *(_QWORD *)(v0 + 16976) = 1;
                *(_QWORD *)(v0 + 16984) = v932;
                *(_OWORD *)(v0 + 16992) = 0u;
                *(_OWORD *)(v0 + 17008) = 0u;
                *(_OWORD *)(v0 + 17024) = 0u;
                *(_OWORD *)(v0 + 17040) = 0u;
                *(_OWORD *)(v0 + 17056) = 0u;
                *(_DWORD *)(v0 + 17071) = 0;
                *(_BYTE *)(v0 + 17075) = 13;
                sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 16960);
                sub_23AA8A05C(*(_QWORD *)(v0 + 24), (uint64_t *)&unk_2542E4760);

                sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
                v150 = *(_QWORD *)(v0 + 376);
                v670 = *(int **)(v0 + 176);
              }
            }
            LOBYTE(v226) = v671;
            v151 = v670;
          }
        }
      }
    }
    v675 = *(_QWORD *)(v0 + 9120);
    if (sub_23AA9F3D0(0x100000000000, v675) && *(_BYTE *)(v195 + *(int *)(v150 + 48) + v151[16]) == 1)
    {
      v676 = v675;
      v677 = *(_QWORD *)v195;
      v678 = *(unsigned __int8 *)(v195 + 8);
      *(_QWORD *)(v0 + 16840) = *(_QWORD *)v195;
      *(_QWORD *)(v0 + 16848) = v678;
      *(_OWORD *)(v0 + 16864) = 0u;
      *(_OWORD *)(v0 + 16880) = 0u;
      *(_OWORD *)(v0 + 16896) = 0u;
      *(_OWORD *)(v0 + 16912) = 0u;
      *(_OWORD *)(v0 + 16928) = 0u;
      *(_QWORD *)(v0 + 16856) = 1;
      *(_QWORD *)(v0 + 16944) = 0;
      *(_DWORD *)(v0 + 16952) = 151322624;
      v679 = *(_QWORD *)(v2 - 72);
      v680 = sub_23B02058C(v679, v0 + 16840);
      v681 = sub_23ADA8168(v680);
      sub_23B002A5C(v677, v678, v681, v682, 0x2000000);
      (*(void (**)(void))(*(_QWORD *)v679 + 144))();
      swift_release();
      sub_23AA724E8(v0 + 8128, v0 + 16344, qword_2542E6E20);
      sub_23AA724E8(v0 + 8128, v0 + 4152, qword_2542E6E20);
      sub_23AA724E8(v0 + 16344, v0 + 3656, qword_2542E6E20);
      sub_23AA724E8(v0 + 16344, v0 + 25768, qword_2542E6E20);
      if (sub_23AAFC2A4(v0 + 25768) != 1)
      {
        sub_23AA724E8(v0 + 4152, v0 + 2656, qword_2542E6E20);
        v683 = *(unsigned __int8 *)(v0 + 3793);
        v684 = *(_QWORD *)(v0 + 3656);
        v685 = *(_BYTE *)(v0 + 3664);
        v686 = *(_BYTE *)(v0 + 3688);
        v687 = *(_BYTE *)(v0 + 3792);
        v688 = *(_BYTE *)(v0 + 3794);
        v689 = *(_BYTE *)(v0 + 3816);
        v690 = *(_OWORD *)(v0 + 4072);
        *(_OWORD *)(v0 + 3552) = *(_OWORD *)(v0 + 4056);
        *(_OWORD *)(v0 + 3568) = v690;
        v691 = *(_QWORD *)(v0 + 3888);
        *(_QWORD *)(v0 + 3584) = *(_QWORD *)(v0 + 4088);
        v692 = *(_OWORD *)(v0 + 4008);
        *(_OWORD *)(v0 + 3488) = *(_OWORD *)(v0 + 3992);
        *(_OWORD *)(v0 + 3504) = v692;
        v693 = *(_OWORD *)(v0 + 4024);
        *(_OWORD *)(v0 + 3536) = *(_OWORD *)(v0 + 4040);
        *(_OWORD *)(v0 + 3520) = v693;
        v694 = *(_OWORD *)(v0 + 3944);
        *(_OWORD *)(v0 + 3424) = *(_OWORD *)(v0 + 3928);
        *(_OWORD *)(v0 + 3440) = v694;
        v695 = *(_OWORD *)(v0 + 3960);
        *(_OWORD *)(v0 + 3472) = *(_OWORD *)(v0 + 3976);
        *(_OWORD *)(v0 + 3456) = v695;
        v696 = *(_OWORD *)(v0 + 3896);
        *(_OWORD *)(v0 + 3408) = *(_OWORD *)(v0 + 3912);
        *(_OWORD *)(v0 + 3392) = v696;
        v697 = *(_BYTE *)(v0 + 4096);
        v698 = *(_QWORD *)(v0 + 4104);
        v699 = *(_QWORD *)(v0 + 4112);
        v700 = *(_BYTE *)(v0 + 4136);
        v701 = *(_QWORD *)(v0 + 4144);
        *(_QWORD *)(v0 + 3152) = v684;
        *(_BYTE *)(v0 + 3160) = v685;
        *(_OWORD *)(v0 + 3168) = *(_OWORD *)(v0 + 3672);
        *(_BYTE *)(v0 + 3184) = v686;
        *(_OWORD *)(v0 + 3192) = *(_OWORD *)(v0 + 3696);
        *(_OWORD *)(v0 + 3208) = *(_OWORD *)(v0 + 3712);
        *(_OWORD *)(v0 + 3224) = *(_OWORD *)(v0 + 3728);
        *(_OWORD *)(v0 + 3240) = *(_OWORD *)(v0 + 3744);
        *(_OWORD *)(v0 + 3256) = *(_OWORD *)(v0 + 3760);
        *(_OWORD *)(v0 + 3272) = *(_OWORD *)(v0 + 3776);
        *(_BYTE *)(v0 + 3288) = v687;
        *(_BYTE *)(v0 + 3289) = v683;
        *(_BYTE *)(v0 + 3290) = v688;
        *(_OWORD *)(v0 + 3296) = *(_OWORD *)(v0 + 3800);
        *(_BYTE *)(v0 + 3312) = v689;
        *(_OWORD *)(v0 + 3320) = *(_OWORD *)(v0 + 3824);
        *(_OWORD *)(v0 + 3336) = *(_OWORD *)(v0 + 3840);
        *(_OWORD *)(v0 + 3352) = *(_OWORD *)(v0 + 3856);
        *(_OWORD *)(v0 + 3368) = *(_OWORD *)(v0 + 3872);
        *(_QWORD *)(v0 + 3384) = v691;
        *(_BYTE *)(v0 + 3592) = v697;
        *(_QWORD *)(v0 + 3600) = v698;
        *(_QWORD *)(v0 + 3608) = v699;
        *(_OWORD *)(v0 + 3616) = *(_OWORD *)(v0 + 4120);
        *(_BYTE *)(v0 + 3632) = v700;
        *(_QWORD *)(v0 + 3640) = v701;
        sub_23ACFC940(v0 + 2656);
        sub_23AAFC3AC(v0 + 3152);
        if (v683 != 6)
        {
          v702 = *(_QWORD *)(v0 + 448);
          sub_23AE1D074(*(_QWORD *)v195, *(_BYTE *)(v195 + 8), v0 + 16344, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 408), *(_QWORD *)(v2 - 72));
          *(_QWORD *)(v0 + 448) = v702;
          if (v702)
          {
            sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
            sub_23AA724E8(v0 + 8128, v0 + 1664, qword_2542E6E20);
            sub_23ADF2D34(v0 + 1664, (voidsub_23AAAEC3C);
            sub_23AA724E8(v0 + 8624, v0 + 2160, qword_2542E6E20);
            v245 = v0 + 2160;
            goto LABEL_350;
          }
        }
      }
      v675 = v676;
    }
    if (sub_23AA9F3D0(2, v675))
    {
      sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
      sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
      sub_23AA724E8(v0 + 3656, v0 + 4152, qword_2542E6E20);
      if (sub_23AAFC2A4(v0 + 4152) != 1)
      {
        sub_23AA724E8(v0 + 3656, v0 + 2160, qword_2542E6E20);
        v703 = *(unsigned __int8 *)(v0 + 3416);
        v704 = *(_OWORD *)(v0 + 3360);
        *(_OWORD *)(v0 + 2848) = *(_OWORD *)(v0 + 3344);
        *(_OWORD *)(v0 + 2864) = v704;
        v705 = *(_OWORD *)(v0 + 3296);
        *(_OWORD *)(v0 + 2784) = *(_OWORD *)(v0 + 3280);
        *(_OWORD *)(v0 + 2800) = v705;
        v706 = *(_OWORD *)(v0 + 3312);
        *(_OWORD *)(v0 + 2832) = *(_OWORD *)(v0 + 3328);
        *(_OWORD *)(v0 + 2816) = v706;
        v707 = *(_OWORD *)(v0 + 3232);
        *(_OWORD *)(v0 + 2720) = *(_OWORD *)(v0 + 3216);
        *(_OWORD *)(v0 + 2736) = v707;
        v708 = *(_OWORD *)(v0 + 3248);
        *(_OWORD *)(v0 + 2768) = *(_OWORD *)(v0 + 3264);
        *(_OWORD *)(v0 + 2752) = v708;
        v709 = *(_OWORD *)(v0 + 3168);
        *(_OWORD *)(v0 + 2656) = *(_OWORD *)(v0 + 3152);
        *(_OWORD *)(v0 + 2672) = v709;
        v710 = *(_OWORD *)(v0 + 3184);
        *(_OWORD *)(v0 + 2704) = *(_OWORD *)(v0 + 3200);
        *(_OWORD *)(v0 + 2688) = v710;
        v711 = *(_QWORD *)(v0 + 3408);
        v712 = *(_WORD *)(v0 + 3488);
        v713 = *(char **)(v0 + 104);
        v714 = *v713;
        v715 = *(_QWORD *)(v0 + 3496);
        v716 = *(_QWORD *)(v0 + 3504);
        v717 = *(_BYTE *)(v0 + 3512);
        v718 = *(_QWORD *)(v0 + 3584);
        v719 = *(_BYTE *)(v0 + 3592);
        v720 = *(_QWORD *)(v0 + 3600);
        v721 = *(_QWORD *)(v0 + 3608);
        LOBYTE(v713) = v713[142];
        v722 = *(_QWORD *)(v0 + 3640);
        v723 = *(_OWORD *)(v0 + 3392);
        *(_OWORD *)(v0 + 2880) = *(_OWORD *)(v0 + 3376);
        *(_OWORD *)(v0 + 2896) = v723;
        *(_QWORD *)(v0 + 2912) = v711;
        *(_BYTE *)(v0 + 2920) = v703;
        v724 = *(_OWORD *)(v0 + 3440);
        *(_OWORD *)(v0 + 2928) = *(_OWORD *)(v0 + 3424);
        *(_OWORD *)(v0 + 2944) = v724;
        v725 = *(_OWORD *)(v0 + 3472);
        *(_OWORD *)(v0 + 2960) = *(_OWORD *)(v0 + 3456);
        *(_OWORD *)(v0 + 2976) = v725;
        *(_WORD *)(v0 + 2992) = v712;
        *(_BYTE *)(v0 + 2994) = v714;
        *(_QWORD *)(v0 + 3000) = v715;
        *(_QWORD *)(v0 + 3008) = v716;
        *(_BYTE *)(v0 + 3016) = v717;
        v726 = *(_OWORD *)(v0 + 3536);
        *(_OWORD *)(v0 + 3024) = *(_OWORD *)(v0 + 3520);
        *(_OWORD *)(v0 + 3040) = v726;
        v727 = *(_OWORD *)(v0 + 3568);
        *(_OWORD *)(v0 + 3056) = *(_OWORD *)(v0 + 3552);
        *(_OWORD *)(v0 + 3072) = v727;
        *(_QWORD *)(v0 + 3088) = v718;
        *(_BYTE *)(v0 + 3096) = v719;
        *(_QWORD *)(v0 + 3104) = v720;
        *(_QWORD *)(v0 + 3112) = v721;
        *(_OWORD *)(v0 + 3120) = *(_OWORD *)(v0 + 3616);
        *(_BYTE *)(v0 + 3136) = (_BYTE)v713;
        *(_QWORD *)(v0 + 3144) = v722;
        sub_23ACFC940(v0 + 2160);
        sub_23AAFC3AC(v0 + 2656);
        if (v703 != 3 && sub_23AA9F51C(v703, 2) && (v226 & 1) == 0)
        {
          v728 = *(unsigned __int8 *)(v195 + 8);
          *(_QWORD *)(v0 + 16224) = *(_QWORD *)v195;
          *(_QWORD *)(v0 + 16232) = v728;
          *(_QWORD *)(v0 + 16240) = 770;
          *(_QWORD *)(v0 + 16248) = *(_QWORD *)(v0 + 240);
          *(_OWORD *)(v0 + 16264) = 0u;
          *(_OWORD *)(v0 + 16280) = 0u;
          *(_QWORD *)(v0 + 16256) = *(_QWORD *)(v0 + 248);
          *(_QWORD *)(v0 + 16296) = 0;
          *(_QWORD *)(v0 + 16304) = 786432;
          *(_QWORD *)(v0 + 16312) = 0;
          *(_QWORD *)(v0 + 16328) = 0;
          *(_QWORD *)(v0 + 16320) = 0;
          *(_DWORD *)(v0 + 16335) = 0;
          *(_BYTE *)(v0 + 16339) = 8;
          sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 16224);
        }
      }
    }
    if (!*(_DWORD *)(v0 + 416))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
      v729 = swift_allocObject();
      v730 = sub_23B1A1F64(v729, 2);
      *v731 = xmmword_23B1CA760;
      v732 = nullsub_1(v730);
      v733 = sub_23AFD7BC8(v732);
      swift_bridgeObjectRelease();
      if ((sub_23AA9F56C(v733, v675) & 1) == 0)
      {
        v734 = *(_QWORD *)(v0 + 448);
        sub_23AE89AD4((uint64_t *)v195, *(_QWORD *)(v0 + 408), *(_QWORD *)(v2 - 72));
        *(_QWORD *)(v0 + 448) = v734;
        if (v734)
          goto LABEL_322;
      }
    }
    *(_QWORD *)(v0 + 392) = v675;
  }
  sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
  sub_23AA724E8(v0 + 3656, v0 + 4152, qword_2542E6E20);
  if (sub_23AAFC2A4(v0 + 4152) != 1)
  {
    sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
    memcpy((void *)(v0 + 15608), (const void *)(v0 + 3152), 0x1F0uLL);
    if (sub_23AA9F890())
    {
      *(_QWORD *)(v0 + 2656) = v735;
      *(_BYTE *)(v0 + 2664) = v736;
      *(_BYTE *)(v0 + 2665) = 0;
      v738 = *(_DWORD *)(v195 + 40);
      v739 = *(_QWORD *)(v195 + 48);
      v740 = *(_BYTE *)(v195 + 56);
      v741 = *(_BYTE *)(v195 + 80);
      v742 = *(_QWORD *)(v195 + 88);
      v743 = *(_QWORD *)(v195 + 96);
      v744 = *(_QWORD *)(v195 + 120);
      *(_QWORD *)(v0 + 2672) = *(_QWORD *)(v195 + 32);
      *(_DWORD *)(v0 + 2680) = v738;
      *(_QWORD *)(v0 + 2688) = v739;
      *(_BYTE *)(v0 + 2696) = v740;
      v745 = *(_OWORD *)(v195 + 64);
      *(_OWORD *)(v0 + 432) = v745;
      *(_OWORD *)(v0 + 2704) = v745;
      *(_BYTE *)(v0 + 2720) = v741;
      *(_QWORD *)(v0 + 2728) = v742;
      *(_QWORD *)(v0 + 2736) = v743;
      v746 = *(_OWORD *)(v195 + 104);
      *(_OWORD *)(v0 + 416) = v746;
      *(_OWORD *)(v0 + 2744) = v746;
      *(_QWORD *)(v0 + 2760) = v744;
      *(_DWORD *)(v0 + 2768) = 151453697;
      sub_23AA724E8(v0 + 2656, v0 + 15488, qword_2542E1408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 15488);
      sub_23AEB3270(v0 + 15488, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
    }
  }
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) == 0)
  {
    v747 = *(_QWORD *)(v0 + 9128);
    v748 = *(_BYTE *)(v0 + 9136);
    v750 = *(_QWORD *)(v0 + 240);
    v749 = *(_QWORD *)(v0 + 248);
    sub_23B002A70(v747, v748, v750, v749, 2048);
    v751 = *(_QWORD *)(v2 - 72);
    (*(void (**)(void))(*(_QWORD *)v751 + 144))();
    swift_release();
    v752 = v750;
    v195 = *(_QWORD *)(v0 + 304);
    v151 = *(int **)(v0 + 176);
    v753 = v749;
    v150 = *(_QWORD *)(v0 + 376);
    sub_23AE9F05C(v747, v748, v752, v753, 2048, &qword_2569E6118);
    (*(void (**)(void))(*(_QWORD *)v751 + 144))();
    swift_release();
  }
LABEL_342:
  v764 = *(_QWORD *)(v0 + 448);
LABEL_343:
  sub_23AA724E8(v0 + 8128, v0 + 3656, qword_2542E6E20);
  sub_23AA724E8(v0 + 3656, v0 + 4152, qword_2542E6E20);
  if (sub_23AAFC2A4(v0 + 4152) != 1)
  {
    sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
    memcpy((void *)(v0 + 14392), (const void *)(v0 + 3152), 0x1F0uLL);
    v765 = *(_QWORD *)(v0 + 3384);
    v766 = sub_23AA9F3D0(4, v765);
    v767 = v195 + *(int *)(v150 + 48);
    v768 = *(unsigned __int8 *)(v767 + v151[23]);
    if (v766 != v768)
    {
      v769 = *(_QWORD *)v195;
      v770 = *(unsigned __int8 *)(v195 + 8);
      if ((v768 & 1) != 0)
      {
        *(_QWORD *)(v0 + 15248) = v769;
        *(_QWORD *)(v0 + 15256) = v770;
        *(_QWORD *)(v0 + 15272) = 0;
        *(_QWORD *)(v0 + 15264) = 0;
        *(_OWORD *)(v0 + 15288) = 0u;
        *(_OWORD *)(v0 + 15304) = 0u;
        *(_OWORD *)(v0 + 15320) = 0u;
        *(_OWORD *)(v0 + 15336) = 0u;
        *(_QWORD *)(v0 + 15280) = 0xB000000000000000;
        *(_QWORD *)(v0 + 15352) = 0;
        *(_DWORD *)(v0 + 15360) = 151846912;
        sub_23ADF2D34(v0 + 3656, (voidsub_23AA88348);
        v771 = *(_QWORD *)(v2 - 72);
        sub_23B02058C(v771, v0 + 15248);
        *(_QWORD *)(v0 + 15128) = v769;
        *(_QWORD *)(v0 + 15136) = v770;
        *(_QWORD *)(v0 + 15152) = 0;
        *(_QWORD *)(v0 + 15144) = 0;
        *(_OWORD *)(v0 + 15168) = 0u;
        *(_OWORD *)(v0 + 15184) = 0u;
        *(_QWORD *)(v0 + 15160) = 0xB000000000000000;
        *(_QWORD *)(v0 + 15200) = 0;
        *(_QWORD *)(v0 + 15208) = 851968;
        *(_QWORD *)(v0 + 15216) = 0;
        *(_QWORD *)(v0 + 15232) = 0;
        *(_QWORD *)(v0 + 15224) = 0;
        *(_DWORD *)(v0 + 15239) = 0;
        *(_BYTE *)(v0 + 15243) = 8;
        sub_23B02058C(v771, v0 + 15128);
        *(_QWORD *)(v0 + 15008) = v769;
        *(_QWORD *)(v0 + 15016) = v770;
        *(_QWORD *)(v0 + 15024) = 4;
        *(_OWORD *)(v0 + 15032) = 0u;
        *(_OWORD *)(v0 + 15048) = 0u;
        *(_OWORD *)(v0 + 15064) = 0u;
        *(_OWORD *)(v0 + 15080) = 0u;
        *(_OWORD *)(v0 + 15096) = 0u;
        *(_OWORD *)(v0 + 15107) = 0u;
        *(_BYTE *)(v0 + 15123) = 10;
        sub_23B02058C(v771, v0 + 15008);
        sub_23AEA8B94((uint64_t *)(v0 + 14392), *(_QWORD *)(v0 + 408));
        if (!v764)
        {
          v150 = *(_QWORD *)(v0 + 376);
          goto LABEL_351;
        }
LABEL_349:
        sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
        sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
        sub_23AA724E8(v0 + 8128, v0 + 2160, qword_2542E6E20);
        sub_23ADF2D34(v0 + 2160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
        sub_23AA724E8(v0 + 8624, v0 + 2656, qword_2542E6E20);
        v245 = v0 + 2656;
        goto LABEL_350;
      }
      *(_QWORD *)(v0 + 15368) = v769;
      *(_QWORD *)(v0 + 15376) = v770;
      *(_OWORD *)(v0 + 15384) = xmmword_23B1DAA40;
      *(_OWORD *)(v0 + 15400) = 0u;
      *(_OWORD *)(v0 + 15416) = 0u;
      *(_OWORD *)(v0 + 15432) = 0u;
      *(_OWORD *)(v0 + 15448) = 0u;
      *(_OWORD *)(v0 + 15464) = 0u;
      *(_DWORD *)(v0 + 15479) = 0;
      *(_BYTE *)(v0 + 15483) = 10;
      sub_23ADF2D34(v0 + 3656, (voidsub_23AA88348);
      sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 15368);
      sub_23AEA8B94((uint64_t *)(v0 + 14392), *(_QWORD *)(v0 + 408));
      if (v764)
        goto LABEL_349;
LABEL_351:
      v151 = *(int **)(v0 + 176);
      sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
    }
    v772 = sub_23AA9F3D0(8, v765);
    v773 = *(unsigned __int8 *)(v767 + v151[24]);
    if (v772 != v773)
    {
      v774 = *(unsigned __int8 *)(v195 + 8);
      *(_QWORD *)(v0 + 14888) = *(_QWORD *)v195;
      *(_QWORD *)(v0 + 14896) = v774;
      *(_QWORD *)(v0 + 14904) = 8;
      *(_QWORD *)(v0 + 14912) = v773 ^ 1u;
      *(_OWORD *)(v0 + 14920) = 0u;
      *(_OWORD *)(v0 + 14936) = 0u;
      *(_OWORD *)(v0 + 14952) = 0u;
      *(_OWORD *)(v0 + 14968) = 0u;
      *(_OWORD *)(v0 + 14984) = 0u;
      *(_DWORD *)(v0 + 14999) = 0;
      *(_BYTE *)(v0 + 15003) = 10;
      sub_23ADF2D34(v0 + 3656, (voidsub_23AA88348);
      sub_23B02058C(*(_QWORD *)(v2 - 72), v0 + 14888);
      sub_23AEA8B94((uint64_t *)(v0 + 14392), *(_QWORD *)(v0 + 408));
      if (v764)
      {
        sub_23ADF2D34(v0 + 3656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
        sub_23AA8A05C(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_2542E6B00);
        sub_23AA724E8(v0 + 8128, v0 + 2160, qword_2542E6E20);
        sub_23ADF2D34(v0 + 2160, (voidsub_23AAAEC3C);
        sub_23AA724E8(v0 + 8624, v0 + 2656, qword_2542E6E20);
        sub_23ADF2D34(v0 + 2656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
        v33 = v195;
        goto LABEL_11;
      }
      sub_23ADF2D34(v0 + 3656, (voidsub_23AAAEC3C);
    }
  }
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 400) + 32) & 1) != 0)
    goto LABEL_363;
  sub_23AA724E8(v0 + 3656, v0 + 2656, qword_2542E6E20);
  sub_23AA724E8(v0 + 3656, v0 + 3152, qword_2542E6E20);
  if (sub_23AAFC2A4(v0 + 3152) == 1)
  {
    v775 = 2;
  }
  else
  {
    v776 = *(_QWORD *)(v0 + 3144);
    v777 = *(_OWORD *)(v0 + 2864);
    *(_OWORD *)(v0 + 1856) = *(_OWORD *)(v0 + 2848);
    *(_OWORD *)(v0 + 1872) = v777;
    v778 = *(_OWORD *)(v0 + 2800);
    *(_OWORD *)(v0 + 1792) = *(_OWORD *)(v0 + 2784);
    *(_OWORD *)(v0 + 1808) = v778;
    v779 = *(_OWORD *)(v0 + 2816);
    *(_OWORD *)(v0 + 1840) = *(_OWORD *)(v0 + 2832);
    *(_OWORD *)(v0 + 1824) = v779;
    v780 = *(_OWORD *)(v0 + 2736);
    *(_OWORD *)(v0 + 1728) = *(_OWORD *)(v0 + 2720);
    *(_OWORD *)(v0 + 1744) = v780;
    v781 = *(_OWORD *)(v0 + 2752);
    *(_OWORD *)(v0 + 1776) = *(_OWORD *)(v0 + 2768);
    *(_OWORD *)(v0 + 1760) = v781;
    v782 = *(_OWORD *)(v0 + 2672);
    *(_OWORD *)(v0 + 1664) = *(_OWORD *)(v0 + 2656);
    *(_OWORD *)(v0 + 1680) = v782;
    v783 = *(_OWORD *)(v0 + 2688);
    *(_OWORD *)(v0 + 1712) = *(_OWORD *)(v0 + 2704);
    *(_OWORD *)(v0 + 1696) = v783;
    v784 = *(_OWORD *)(v0 + 3056);
    *(_OWORD *)(v0 + 2048) = *(_OWORD *)(v0 + 3040);
    *(_OWORD *)(v0 + 2064) = v784;
    *(_OWORD *)(v0 + 2080) = *(_OWORD *)(v0 + 3072);
    *(_QWORD *)(v0 + 2096) = *(_QWORD *)(v0 + 3088);
    v785 = *(_OWORD *)(v0 + 2992);
    *(_OWORD *)(v0 + 1984) = *(_OWORD *)(v0 + 2976);
    *(_OWORD *)(v0 + 2000) = v785;
    v786 = *(_OWORD *)(v0 + 3024);
    *(_OWORD *)(v0 + 2016) = *(_OWORD *)(v0 + 3008);
    *(_OWORD *)(v0 + 2032) = v786;
    v787 = *(_OWORD *)(v0 + 2928);
    *(_OWORD *)(v0 + 1920) = *(_OWORD *)(v0 + 2912);
    *(_OWORD *)(v0 + 1936) = v787;
    v788 = *(_OWORD *)(v0 + 2960);
    *(_OWORD *)(v0 + 1952) = *(_OWORD *)(v0 + 2944);
    *(_OWORD *)(v0 + 1968) = v788;
    v789 = *(_OWORD *)(v0 + 2896);
    *(_OWORD *)(v0 + 1888) = *(_OWORD *)(v0 + 2880);
    *(_OWORD *)(v0 + 1904) = v789;
    v790 = *(_QWORD *)(v0 + 3104);
    v791 = *(_QWORD *)(v0 + 3112);
    v792 = *(_BYTE *)(v0 + 3136);
    *(_BYTE *)(v0 + 2104) = *(_BYTE *)(v0 + 3096);
    *(_QWORD *)(v0 + 2112) = v790;
    *(_QWORD *)(v0 + 2120) = v791;
    *(_OWORD *)(v0 + 2128) = *(_OWORD *)(v0 + 3120);
    *(_BYTE *)(v0 + 2144) = v792;
    *(_QWORD *)(v0 + 2152) = v776;
    sub_23AA724E8(v0 + 3656, v0 + 2160, qword_2542E6E20);
    sub_23ACFC940(v0 + 2160);
    sub_23AAFC3AC(v0 + 1664);
    v775 = sub_23AA9F3D0(2, v776);
  }
  v793 = sub_23AA9F51C(*(_BYTE *)(v195 + *(int *)(v150 + 48) + v151[22]), 2);
  v794 = v793;
  if (v775 == 2 || ((v793 ^ (v775 != 0)) & 1) != 0)
  {
    v796 = v764;
    v797 = sub_23ADF6404((uint64_t *)&unk_2542DDE60);
    v798 = *(_QWORD *)v195;
    v799 = *(unsigned __int8 *)(v195 + 8);
    v800 = sub_23ACD8490(0);
    v801 = sub_23AFD7BC8(v800);
    swift_bridgeObjectRelease();
    if (v794)
    {
      *(_QWORD *)(v0 + 14152) = v798;
      v802 = v0 + 14152;
      v803 = 2;
      v804 = *(_QWORD *)(v0 + 72);
    }
    else
    {
      *(_QWORD *)(v0 + 14272) = v798;
      v802 = v0 + 14272;
      v803 = v801;
      v801 = 2;
      v804 = *(_QWORD *)(v0 + 64);
    }
    *(_QWORD *)(v802 + 8) = v799;
    *(_QWORD *)(v802 + 16) = v803;
    *(_QWORD *)(v802 + 24) = v801;
    *(_DWORD *)(v804 + 79) = 0;
    *(_OWORD *)(v804 + 48) = 0u;
    *(_OWORD *)(v804 + 64) = 0u;
    *(_OWORD *)(v804 + 16) = 0u;
    *(_OWORD *)(v804 + 32) = 0u;
    *(_OWORD *)v804 = 0u;
    *(_BYTE *)(v802 + 115) = 13;
    sub_23B02058C((uint64_t)v797, v802);
    v805 = sub_23AF3EA84();
    sub_23ADF691C(v797, v805, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
    v795 = *(_QWORD *)(v0 + 312);
    if (v796)
    {
      swift_release();
      sub_23AA8A05C(v795, (uint64_t *)&unk_2542E6B00);
      sub_23AA724E8(v0 + 8128, v0 + 2160, qword_2542E6E20);
      sub_23ADF2D34(v0 + 2160, (voidsub_23AAAEC3C);
      sub_23AA724E8(v0 + 8624, v0 + 2656, qword_2542E6E20);
      sub_23ADF2D34(v0 + 2656, (voidsub_23AAAEC3C);
      v33 = v195;
      goto LABEL_11;
    }
    swift_release();
  }
  else
  {
LABEL_363:
    v795 = *(_QWORD *)(v0 + 312);
  }
  sub_23AA8A05C(v795, (uint64_t *)&unk_2542E6B00);
  sub_23AA724E8(v0 + 8128, v0 + 2656, qword_2542E6E20);
  sub_23ADF2D34(v0 + 2656, (voidsub_23AAAEC3C);
  sub_23AA724E8(v0 + 8624, v0 + 3152, qword_2542E6E20);
  sub_23ADF2D34(v0 + 3152, (voidsub_23AAAEC3C);
  sub_23AA8A05C(v195, (uint64_t *)&unk_2542E6B00);
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_23AE9EFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  v9 = swift_allocObject();
  v10 = v9;
  *(_BYTE *)(v9 + 40) = 1;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 80) = 0;
  *(_OWORD *)(v9 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v9 + 104) = 0;
  *(_QWORD *)(v9 + 112) = a2;
  *(_QWORD *)(v9 + 120) = a3;
  *(_QWORD *)(v9 + 128) = a4;
  *(_QWORD *)(v9 + 136) = a1;
  if ((a4 & 0x8000) != 0)
  {
    *(_QWORD *)(v9 + 88) = 2359552;
    *(_BYTE *)(v9 + 104) = 0;
    sub_23AAAEE10((void *)0x40100, 0, 0);
  }
  return v10;
}

uint64_t sub_23AE9F05C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v11 = swift_allocObject();
  v12 = v11;
  *(_BYTE *)(v11 + 144) = a2;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 16) = 0;
  *(_BYTE *)(v11 + 40) = 1;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(_QWORD *)(v11 + 80) = 0;
  *(_OWORD *)(v11 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v11 + 104) = 0;
  *(_QWORD *)(v11 + 112) = a3;
  *(_QWORD *)(v11 + 120) = a4;
  *(_QWORD *)(v11 + 128) = a5;
  *(_QWORD *)(v11 + 136) = a1;
  if ((a5 & 0x8000) != 0)
  {
    *(_QWORD *)(v11 + 88) = 2359552;
    *(_BYTE *)(v11 + 104) = 0;
    sub_23AAAEE10((void *)0x40100, 0, 0);
  }
  return v12;
}

uint64_t sub_23AE9F118(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x24BDAC7A8](v4);
  sub_23AA8EFC8(a1, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  return sub_23B1C6434();
}

uint64_t sub_23AE9F198(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  _BYTE v12[16];

  v4 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23AA8EFC8(a1, (uint64_t)v8, v4);
  v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    v10 = 4;
  }
  else
  {
    v10 = v8[*(int *)(v9 + 48)];
    v4 = a3;
  }
  sub_23AA8A05C((uint64_t)v8, v4);
  v12[15] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4690);
  return sub_23B1C6434();
}

uint64_t sub_23AE9F278(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  void (*v20)(_QWORD *__return_ptr, void **, uint64_t);
  id v21;
  char v22;
  _BYTE __dst[496];
  _BYTE v25[504];
  _BYTE v26[504];
  void *v27;
  __int16 v28;
  _QWORD __src[63];

  if ((*(_BYTE *)(*(_QWORD *)(a2 + 32) + 32) & 1) != 0)
    goto LABEL_21;
  if (qword_2542E1FE0 != -1)
    swift_once();
  v5 = sub_23B1C63E0();
  v7 = v6;
  if (v5 == sub_23B1C63E0() && v7 == v8)
    goto LABEL_20;
  v10 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_21:
    v22 = 1;
    return v22 & 1;
  }
  v11 = qword_2542E1FE8;
  v12 = a1;
  if (v11 != -1)
    swift_once();
  v13 = sub_23B1C63E0();
  v15 = v14;
  if (v13 == sub_23B1C63E0() && v15 == v16)
  {

LABEL_20:
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v18 = sub_23B1C7388();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    goto LABEL_21;
  v19 = *(_QWORD *)(a2 + 16);
  v27 = a1;
  v28 = 0;
  v20 = *(void (**)(_QWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v19 + 168);
  v21 = v12;
  v20(__src, &v27, 1);
  if (!v2)
  {

    sub_23AA724E8((uint64_t)__src, (uint64_t)v25, &qword_2569E6458);
    sub_23AA724E8((uint64_t)v25, (uint64_t)v26, &qword_2569E6458);
    if (sub_23AAFC2A4((uint64_t)v26) == 1)
    {
      v22 = 0;
      return v22 & 1;
    }
    memcpy(__dst, __src, sizeof(__dst));
    sub_23AAFCF50((uint64_t)__dst);
    goto LABEL_21;
  }

  return v22 & 1;
}

void sub_23AE9F4B8(void *a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_OWORD *__return_ptr, void **, uint64_t);
  id v15;
  int v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _BYTE v29[504];
  _BYTE v30[504];
  void *v31;
  __int16 v32;
  _OWORD v33[31];
  _QWORD v34[62];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[7];
  char v44;
  _OWORD v45[6];
  _OWORD v46[6];
  uint64_t v47;
  char v48;
  uint64_t v49;
  _OWORD v50[15];
  _BYTE v51[16];
  _BYTE v52[16];
  uint64_t v53;
  unsigned __int8 v54;
  _BYTE v55[17];
  uint64_t v56;

  v7 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 32);
  if ((*(_BYTE *)(v12 + 32) & 1) == 0)
  {
    LODWORD(v56) = a2;
    v25 = v9;
    v13 = *(_QWORD *)(a3 + 16);
    v31 = a1;
    v32 = 0;
    v14 = *(void (**)(_OWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v13 + 168);
    v15 = a1;
    v14(v33, &v31, 1);
    if (v3)
    {

      return;
    }

    sub_23AA724E8((uint64_t)v33, (uint64_t)v29, &qword_2569E6458);
    sub_23AA724E8((uint64_t)v29, (uint64_t)v30, &qword_2569E6458);
    if (sub_23AAFC2A4((uint64_t)v30) != 1)
    {
      memcpy(v34, v33, sizeof(v34));
      v46[4] = v33[10];
      v46[5] = v33[11];
      v47 = *(_QWORD *)&v33[12];
      v46[0] = v33[6];
      v46[1] = v33[7];
      v46[3] = v33[9];
      v46[2] = v33[8];
      v45[2] = v33[2];
      v45[3] = v33[3];
      v45[5] = v33[5];
      v45[4] = v33[4];
      v45[1] = v33[1];
      v45[0] = v33[0];
      if ((BYTE8(v33[0]) & 1) != 0)
        goto LABEL_26;
      if ((BYTE8(v33[0]) & 0x10) != 0)
      {
        sub_23AA724E8((uint64_t)v45, (uint64_t)&v49, &qword_2542E7550);
        sub_23AA724E8((uint64_t)&v49, (uint64_t)&v53, &qword_2542E7550);
        if (!v53)
          goto LABEL_26;
        v50[0] = *(_OWORD *)&v34[25];
        v50[1] = *(_OWORD *)&v34[27];
        v50[3] = *(_OWORD *)&v34[31];
        v50[2] = *(_OWORD *)&v34[29];
        v50[12] = *(_OWORD *)&v34[49];
        v50[13] = *(_OWORD *)&v34[51];
        v50[14] = *(_OWORD *)&v34[53];
        v50[8] = *(_OWORD *)&v34[41];
        v50[9] = *(_OWORD *)&v34[43];
        v50[11] = *(_OWORD *)&v34[47];
        v50[10] = *(_OWORD *)&v34[45];
        v50[4] = *(_OWORD *)&v34[33];
        v50[5] = *(_OWORD *)&v34[35];
        v50[7] = *(_OWORD *)&v34[39];
        v50[6] = *(_OWORD *)&v34[37];
        sub_23AA724E8((uint64_t)v50, (uint64_t)v51, (uint64_t *)&unk_2542E7420);
        sub_23AA724E8((uint64_t)v51, (uint64_t)v52, (uint64_t *)&unk_2542E7420);
        if (v52[8] == 255)
          goto LABEL_26;
      }
      if (LOBYTE(v46[0]))
      {
        v35 = *(_OWORD *)&v34[25];
        v36 = *(_OWORD *)&v34[27];
        v38 = *(_OWORD *)&v34[31];
        v37 = *(_OWORD *)&v34[29];
        v43[4] = *(_OWORD *)&v34[49];
        v43[5] = *(_OWORD *)&v34[51];
        v43[6] = *(_OWORD *)&v34[53];
        v43[0] = *(_OWORD *)&v34[41];
        v43[1] = *(_OWORD *)&v34[43];
        v43[3] = *(_OWORD *)&v34[47];
        v43[2] = *(_OWORD *)&v34[45];
        v39 = *(_OWORD *)&v34[33];
        v40 = *(_OWORD *)&v34[35];
        v42 = *(_OWORD *)&v34[39];
        v41 = *(_OWORD *)&v34[37];
        sub_23AA724E8((uint64_t)v43 + 9, (uint64_t)&v44, &qword_2542E6CC0);
        sub_23AA724E8((uint64_t)&v44, (uint64_t)v55, &qword_2542E6CC0);
        v16 = v55[0];
        if (v55[0] != 4 && v55[0] != 6)
        {
          v27 = 0;
          v28 = 0xE000000000000000;
          sub_23B1C6EFC();
          swift_bridgeObjectRelease();
          v27 = 0xD000000000000025;
          v28 = 0x800000023B206AA0;
          switch(v16)
          {
            case 0:
            case 1:
            case 2:
              sub_23B1C64F4();
              swift_bridgeObjectRelease();
              sub_23B1C64F4();
              sub_23AAFCF50((uint64_t)v34);
              break;
            default:
              goto LABEL_26;
          }
          return;
        }
LABEL_26:
        sub_23AAFCF50((uint64_t)v34);
        return;
      }
      if ((*(_BYTE *)(v12 + 32) & 1) == 0)
      {
        if (v56 == 4)
          goto LABEL_26;
        sub_23AA724E8((uint64_t)v46 + 1, (uint64_t)&v48, &qword_2542E6CC0);
        sub_23AA724E8((uint64_t)&v48, (uint64_t)&v54, &qword_2542E6CC0);
        if ((v54 | 2) == 6)
        {
          v17 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          sub_23AEB34A4((uint64_t)v34);
          v18 = sub_23B1C5E40();
          v19 = sub_23B1C6AAC();
          if (os_log_type_enabled(v18, v19))
          {
            v20 = (uint8_t *)swift_slowAlloc();
            v56 = swift_slowAlloc();
            v27 = v56;
            *(_DWORD *)v20 = 136315138;
            v24 = v20 + 4;
            v21 = sub_23B02FE34();
            v26 = sub_23AABEC68(v21, v22, &v27);
            sub_23B1C6CBC();
            swift_bridgeObjectRelease();
            sub_23AAFCF50((uint64_t)v34);
            _os_log_impl(&dword_23AA66000, v18, v19, "🤦🏼‍♂️  inconsistent children status for item %s", v20, 0xCu);
            v23 = v56;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v23, -1, -1);
            MEMORY[0x23B8614BC](v20, -1, -1);

          }
          else
          {

            sub_23AAFCF50((uint64_t)v34);
          }
          (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v25);
          goto LABEL_26;
        }
      }
      sub_23AAFCF50((uint64_t)v34);
    }
  }
}

_QWORD *sub_23AE9FB4C(uint64_t a1, char a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  int v15;
  int v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  _BYTE v30[504];
  _BYTE v31[504];
  uint64_t v32;
  char v33;
  char v34;
  _OWORD v35[31];
  _OWORD v36[37];
  _OWORD v37[6];
  uint64_t v38;
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[7];
  char v49;
  _BYTE v50[16];
  _OWORD v51[12];
  uint64_t v52;
  _BYTE v53[8];
  uint64_t v54;
  _BYTE v55[14];
  unsigned __int8 v56;
  _BYTE v57[17];
  uint64_t v58;

  LODWORD(v58) = a3;
  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a4 + 32);
  if ((*(_BYTE *)(v12 + 32) & 1) != 0)
    return 0;
  v14 = *(_QWORD *)(a4 + 16);
  v32 = a1;
  v33 = a2;
  v34 = 0;
  result = (*(_QWORD *(**)(_OWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v14 + 168))(v35, &v32, 1);
  if (!v4)
  {
    sub_23AA724E8((uint64_t)v35, (uint64_t)v30, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v30, (uint64_t)v31, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v31) == 1)
      return (_QWORD *)0xD000000000000025;
    memcpy(v36, v35, 0x1F0uLL);
    v48[4] = v35[12];
    v48[5] = v35[13];
    v48[6] = v35[14];
    v48[0] = v35[8];
    v48[1] = v35[9];
    v48[3] = v35[11];
    v48[2] = v35[10];
    v44 = v35[4];
    v45 = v35[5];
    v47 = v35[7];
    v46 = v35[6];
    v40 = v35[0];
    v41 = v35[1];
    v43 = v35[3];
    v42 = v35[2];
    if ((v35[1] & 1) != 0)
    {
      sub_23AAFC3AC((uint64_t)v36);
      return (_QWORD *)0xD000000000000022;
    }
    if ((v41 & 0x10) != 0)
    {
      sub_23AA724E8((uint64_t)&v40, (uint64_t)v50, (uint64_t *)&unk_2542E7420);
      sub_23AA724E8((uint64_t)v50, (uint64_t)v55, (uint64_t *)&unk_2542E7420);
      if (v55[8] == 255)
        goto LABEL_15;
      v51[10] = v36[25];
      v51[11] = v36[26];
      v52 = *(_QWORD *)&v36[27];
      v51[6] = v36[21];
      v51[7] = v36[22];
      v51[9] = v36[24];
      v51[8] = v36[23];
      v51[2] = v36[17];
      v51[3] = v36[18];
      v51[5] = v36[20];
      v51[4] = v36[19];
      v51[1] = v36[16];
      v51[0] = v36[15];
      sub_23AA724E8((uint64_t)v51, (uint64_t)v53, &qword_2542E7550);
      sub_23AA724E8((uint64_t)v53, (uint64_t)&v54, &qword_2542E7550);
      if (!v54)
      {
LABEL_15:
        sub_23AAFC3AC((uint64_t)v36);
        return (_QWORD *)0xD000000000000023;
      }
    }
    if (BYTE8(v48[0]))
    {
      v37[4] = v36[25];
      v37[5] = v36[26];
      v38 = *(_QWORD *)&v36[27];
      v37[0] = v36[21];
      v37[1] = v36[22];
      v37[3] = v36[24];
      v37[2] = v36[23];
      v36[33] = v36[17];
      v36[34] = v36[18];
      v36[36] = v36[20];
      v36[35] = v36[19];
      v36[32] = v36[16];
      v36[31] = v36[15];
      sub_23AA724E8((uint64_t)v37 + 1, (uint64_t)&v39, &qword_2542E6CC0);
      sub_23AA724E8((uint64_t)&v39, (uint64_t)v57, &qword_2542E6CC0);
      v15 = v57[0];
      if (v57[0] != 4 && v57[0] != 6)
      {
        v28 = 0;
        v29 = 0xE000000000000000;
        sub_23B1C6EFC();
        swift_bridgeObjectRelease();
        v28 = (_QWORD *)0xD000000000000025;
        v29 = 0x800000023B206AA0;
        switch(v15)
        {
          case 0:
          case 1:
          case 2:
            sub_23B1C64F4();
            swift_bridgeObjectRelease();
            sub_23B1C64F4();
            sub_23AAFC3AC((uint64_t)v36);
            result = v28;
            break;
          default:
            v16 = v58;
            sub_23AAFC3AC((uint64_t)v36);
            if (v16 == 4)
              result = 0;
            else
              result = (_QWORD *)0xD00000000000003FLL;
            break;
        }
        return result;
      }
LABEL_20:
      sub_23AAFC3AC((uint64_t)v36);
      return 0;
    }
    if ((*(_BYTE *)(v12 + 32) & 1) != 0)
    {
      sub_23AAFC3AC((uint64_t)v36);
      return (_QWORD *)0xD00000000000002BLL;
    }
    if (v58 == 4)
      goto LABEL_20;
    sub_23AA724E8((uint64_t)v48 + 9, (uint64_t)&v49, &qword_2542E6CC0);
    sub_23AA724E8((uint64_t)&v49, (uint64_t)&v56, &qword_2542E6CC0);
    if ((v56 | 2) == 6)
    {
      v17 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      sub_23ACFC940((uint64_t)v36);
      v18 = sub_23B1C5E40();
      v19 = sub_23B1C6AAC();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v58 = swift_slowAlloc();
        v28 = (_QWORD *)v58;
        v26 = v20;
        *(_DWORD *)v20 = 136315138;
        v25 = v20 + 4;
        v21 = sub_23B02F54C();
        v27 = sub_23AABEC68(v21, v22, (uint64_t *)&v28);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        sub_23AAFC3AC((uint64_t)v36);
        v23 = v26;
        _os_log_impl(&dword_23AA66000, v18, v19, "🤦🏼‍♂️  inconsistent children status for item %s", v26, 0xCu);
        v24 = v58;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v24, -1, -1);
        MEMORY[0x23B8614BC](v23, -1, -1);

      }
      else
      {

        sub_23AAFC3AC((uint64_t)v36);
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_23AAFC3AC((uint64_t)v36);
      return 0;
    }
    sub_23AAFC3AC((uint64_t)v36);
    return (_QWORD *)0xD000000000000054;
  }
  return result;
}

uint64_t sub_23AEA01F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t result;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  char v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 *v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BOOL4 v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  unsigned __int8 *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  int v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE v123[248];
  _BYTE v124[248];
  _BYTE v125[248];
  _BYTE v126[248];
  _QWORD v127[32];
  void *v128;

  v116 = a5;
  v117 = a7;
  v119 = a4;
  v114 = a3;
  v120 = (char *)a1;
  v110 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v110);
  v109 = (uint64_t)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v121 = *(_QWORD *)(v118 - 8);
  v10 = MEMORY[0x24BDAC7A8](v118);
  v113 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v115 = (uint64_t)&v101 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v108 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v107 = (uint64_t)&v101 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v106 = (uint64_t)&v101 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v112 = (char *)&v101 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v111 = (uint64_t)&v101 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v101 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v101 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v101 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)&v101 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v101 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v101 - v39;
  v128 = a2;
  v41 = a6;
  v42 = *(unsigned __int8 **)(a6 + 32);
  v43 = v122;
  result = (*(uint64_t (**)(void **, uint64_t))(*(_QWORD *)v42 + 240))(&v128, 1);
  if (!v43)
  {
    v103 = v29;
    v104 = v32;
    v105 = v42;
    v45 = v119;
    v101 = v41;
    v102 = v26;
    v122 = 0;
    sub_23AA8EFC8((uint64_t)v120, (uint64_t)v38, &qword_2542E4770);
    v46 = v121;
    v47 = v118;
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48);
    if (v48(v38, 1, v118) == 1)
    {
      sub_23AA8A05C((uint64_t)v38, &qword_2542E4770);
      sub_23AA8EFC8((uint64_t)v40, (uint64_t)v35, &qword_2542E4770);
      v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
      v50 = (uint64_t)v104;
      v49(v104, 1, 1, v47);
      v51 = v117;
      sub_23AE8778C((uint64_t)v35, v50, v128, 0, ((v116 & 0x400000) == 0) & ~v105[32], 0x6C6564206D657469, 0xEC00000064657465, v117);
      sub_23AA8A05C(v50, &qword_2542E4770);
      v52 = (uint64_t)v35;
      v53 = &qword_2542E4770;
LABEL_4:
      sub_23AA8A05C(v52, v53);
      v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v51, 0, 1, v54);
      goto LABEL_30;
    }
    v55 = (uint64_t)v38;
    v56 = v115;
    sub_23AA724E8(v55, v115, (uint64_t *)&unk_2542E4760);
    if ((v45 & 1) != 0)
    {
      v120 = v40;
      v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
      v58 = v47;
    }
    else
    {
      v66 = *(void **)(v56 + 8);
      v67 = v122;
      v68 = sub_23AE9F278(*(void **)v56, v101);
      if (v67)
      {
        sub_23AA8A05C(v56, (uint64_t *)&unk_2542E4760);
        return sub_23AA8A05C((uint64_t)v40, &qword_2542E4770);
      }
      v58 = v47;
      v120 = v40;
      if ((v68 & 1) != 0)
      {
        v122 = 0;
      }
      else
      {
        sub_23AE9F4B8(v66, v114, v101);
        v89 = v88;
        v122 = 0;
        if (v88)
        {
          v90 = v87;
          v91 = v105;
          if ((v105[32] & 1) == 0)
          {
            v92 = v106;
            sub_23AA8EFC8((uint64_t)v120, v106, &qword_2542E4770);
            v93 = v48((char *)v92, 1, v47);
            sub_23AA8A05C(v92, &qword_2542E4770);
            if (v93 != 1)
            {
              sub_23AA8A05C(v115, (uint64_t *)&unk_2542E4760);
              v99 = v117;
              *v117 = v90;
              v99[1] = v89;
              v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v99, 0, 1, v100);
              v40 = v120;
              goto LABEL_30;
            }
          }
          v94 = (uint64_t)v120;
          v95 = v107;
          sub_23AA8EFC8((uint64_t)v120, v107, &qword_2542E4770);
          v96 = (uint64_t)v108;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56))(v108, 1, 1, v58);
          v97 = (v91[32] & 1) == 0;
          v51 = v117;
          sub_23AE8778C(v95, v96, v128, 0, v97, v90, v89, v117);
          swift_bridgeObjectRelease();
          sub_23AA8A05C(v96, &qword_2542E4770);
          v40 = (char *)v94;
          sub_23AA8A05C(v95, &qword_2542E4770);
          v53 = (uint64_t *)&unk_2542E4760;
          v52 = v115;
          goto LABEL_4;
        }
      }
      v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
    }
    sub_23AA724E8(v56 + *(int *)(v58 + 52), (uint64_t)v125, &qword_2542E5050);
    sub_23AA724E8((uint64_t)v125, (uint64_t)v126, &qword_2542E5050);
    v59 = sub_23AAFCF2C((uint64_t)v126);
    v60 = v121;
    v61 = (uint64_t)v103;
    if (v59 == 1)
    {
      v62 = (uint64_t)v113;
      v63 = (uint64_t)v102;
      v64 = v105;
      v65 = (uint64_t)v120;
    }
    else
    {
      v65 = (uint64_t)v120;
      sub_23AA8EFC8((uint64_t)v120, (uint64_t)v103, &qword_2542E4770);
      v69 = v57(v61, 1, v58);
      sub_23AA8A05C(v61, &qword_2542E4770);
      if (v69 != 1
        && (v57(v65, 1, v58)
         || (sub_23AA724E8(v65 + *(int *)(v58 + 52), (uint64_t)v123, &qword_2542E5050),
             sub_23AA724E8((uint64_t)v123, (uint64_t)v124, &qword_2542E5050),
             sub_23AAFCF2C((uint64_t)v124) == 1)))
      {
        v70 = v57(v65, 1, v58);
        v62 = (uint64_t)v113;
        v64 = v105;
        if (v70)
        {
          v63 = (uint64_t)v102;
        }
        else
        {
          v98 = v122;
          (*(void (**)(_QWORD *__return_ptr, void **))(*(_QWORD *)v105 + 264))(v127, &v128);
          v122 = v98;
          v63 = (uint64_t)v102;
          if (v98)
          {
            sub_23AA8A05C(v56, (uint64_t *)&unk_2542E4760);
            v86 = v65;
            return sub_23AA8A05C(v86, &qword_2542E4770);
          }
          sub_23AA8A660((uint64_t)v127, v65 + *(int *)(v58 + 52), &qword_2542E5050);
        }
      }
      else
      {
        v62 = (uint64_t)v113;
        v63 = (uint64_t)v102;
        v64 = v105;
      }
    }
    sub_23AA8EFC8(v65, v63, &qword_2542E4770);
    v71 = v57(v63, 1, v58);
    v72 = v60;
    if (v71 == 1)
    {
      sub_23AA8A05C(v63, &qword_2542E4770);
    }
    else
    {
      sub_23AA724E8(v63, v62, (uint64_t *)&unk_2542E4760);
      v73 = v62 + *(int *)(v58 + 48);
      v74 = v62;
      v75 = v109;
      sub_23AA907B0(v73, v109, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      sub_23AA8A05C(v74, (uint64_t *)&unk_2542E4760);
      v76 = v110;
      v77 = *(_BYTE *)(v75 + *(int *)(v110 + 48));
      sub_23AA937BC(v75, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      *(_BYTE *)(v56 + *(int *)(v58 + 48) + *(int *)(v76 + 48)) = v77;
    }
    v78 = v58;
    v79 = v111;
    v80 = (uint64_t)v112;
    sub_23AA8EFC8(v65, v111, &qword_2542E4770);
    sub_23AA8EFC8(v56, v80, (uint64_t *)&unk_2542E4760);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56))(v80, 0, 1, v78);
    v81 = v64[32];
    if (v114 == 4)
      v82 = 0x6F7270206D657469;
    else
      v82 = 0x616863206D657469;
    if (v114 == 4)
      v83 = 0xEF64657461676170;
    else
      v83 = 0xEC0000006465676ELL;
    v84 = v117;
    sub_23AE8778C(v79, v80, v128, (v116 & 0x800400000) != 0, (v81 & 1) == 0, v82, v83, v117);
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v80, &qword_2542E4770);
    sub_23AA8A05C(v79, &qword_2542E4770);
    sub_23AA8A05C(v56, (uint64_t *)&unk_2542E4760);
    v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
    v40 = v120;
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 0, 1, v85);
LABEL_30:
    v86 = (uint64_t)v40;
    return sub_23AA8A05C(v86, &qword_2542E4770);
  }
  return result;
}

uint64_t sub_23AEA0B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t result;
  char v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  unsigned int v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  _BOOL4 v72;
  uint64_t *v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  _BYTE v115[248];
  _BYTE v116[248];
  _BYTE v117[248];
  _BYTE v118[248];
  uint64_t v119;
  unsigned __int8 v120;
  _QWORD v121[32];
  uint64_t v122;

  v108 = a6;
  v109 = a8;
  v111 = a5;
  v106 = a4;
  LODWORD(v114) = a3;
  v112 = a1;
  v103 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v103);
  v102 = (uint64_t)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v113 = *(_QWORD *)(v110 - 8);
  v11 = MEMORY[0x24BDAC7A8](v110);
  v101 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v107 = (uint64_t)&v93 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v100 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v99 = (uint64_t)&v93 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v98 = (uint64_t)&v93 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v105 = (uint64_t)&v93 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v104 = (uint64_t)&v93 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v93 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v93 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v93 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v93 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v93 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v93 - v40;
  v119 = a2;
  v120 = v114;
  v42 = a7;
  v43 = *(_BYTE **)(a7 + 32);
  v44 = v122;
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v43 + 240))(&v119, 1);
  if (!v44)
  {
    v97 = v36;
    v122 = 0;
    v94 = v42;
    v95 = v30;
    v114 = v43;
    v46 = v111;
    v96 = v27;
    sub_23AA8EFC8(v112, (uint64_t)v39, (uint64_t *)&unk_2542E4750);
    v47 = v113;
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
    v49 = v110;
    if (v48(v39, 1, v110) == 1)
    {
      v50 = v49;
      sub_23AA8A05C((uint64_t)v39, (uint64_t *)&unk_2542E4750);
      v51 = (uint64_t)v97;
      sub_23AA8EFC8((uint64_t)v41, (uint64_t)v97, (uint64_t *)&unk_2542E4750);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v33, 1, 1, v50);
      v52 = v109;
      sub_23AE87CE0(v51, (uint64_t)v33, v119, v120, 0, ((v108 & 0x400000) == 0) & ~v114[32], 0x6C6564206D657469, 0xEC00000064657465, v109);
      sub_23AA8A05C((uint64_t)v33, (uint64_t *)&unk_2542E4750);
      sub_23AA8A05C(v51, (uint64_t *)&unk_2542E4750);
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
      return sub_23AA8A05C((uint64_t)v41, (uint64_t *)&unk_2542E4750);
    }
    v54 = v107;
    sub_23AA724E8((uint64_t)v39, v107, (uint64_t *)&unk_2542E6B00);
    if ((v46 & 1) == 0)
    {
      v62 = v122;
      v63 = sub_23AE1C4A4(*(_QWORD *)v54, *(_BYTE *)(v54 + 8), *(_QWORD *)(v54 + 16), *(_BYTE *)(v54 + 24), v106, v94);
      v122 = v62;
      if (v62)
        goto LABEL_9;
      v65 = v64;
      if (v64)
      {
        v66 = (uint64_t)v63;
        v67 = v114;
        if ((v114[32] & 1) != 0
          || (v68 = v98,
              sub_23AA8EFC8((uint64_t)v41, v98, (uint64_t *)&unk_2542E4750),
              v69 = v48((char *)v68, 1, v49),
              sub_23AA8A05C(v68, (uint64_t *)&unk_2542E4750),
              v69 == 1))
        {
          v70 = v99;
          sub_23AA8EFC8((uint64_t)v41, v99, (uint64_t *)&unk_2542E4750);
          v71 = (uint64_t)v100;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v100, 1, 1, v49);
          v72 = (v67[32] & 1) == 0;
          v73 = v109;
          sub_23AE87CE0(v70, v71, v119, v120, 0, v72, v66, v65, v109);
          swift_bridgeObjectRelease();
          sub_23AA8A05C(v71, (uint64_t *)&unk_2542E4750);
          sub_23AA8A05C(v70, (uint64_t *)&unk_2542E4750);
          sub_23AA8A05C(v107, (uint64_t *)&unk_2542E6B00);
          v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 0, 1, v74);
        }
        else
        {
          sub_23AA8A05C(v107, (uint64_t *)&unk_2542E6B00);
          v91 = v109;
          *v109 = v66;
          v91[1] = v65;
          v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v91, 0, 1, v92);
        }
        return sub_23AA8A05C((uint64_t)v41, (uint64_t *)&unk_2542E4750);
      }
    }
    v55 = (uint64_t)v95;
    v56 = (uint64_t)v96;
    v57 = v114;
    sub_23AA724E8(v54 + *(int *)(v49 + 52), (uint64_t)v117, &qword_2542E5050);
    sub_23AA724E8((uint64_t)v117, (uint64_t)v118, &qword_2542E5050);
    if (sub_23AAFCF2C((uint64_t)v118) == 1)
    {
LABEL_17:
      sub_23AA8EFC8((uint64_t)v41, v56, (uint64_t *)&unk_2542E4750);
      if (v48((char *)v56, 1, v49) == 1)
      {
        sub_23AA8A05C(v56, (uint64_t *)&unk_2542E4750);
      }
      else
      {
        v76 = v56;
        v77 = v101;
        sub_23AA724E8(v76, v101, (uint64_t *)&unk_2542E6B00);
        v78 = v102;
        sub_23AA907B0(v77 + *(int *)(v49 + 48), v102, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        sub_23AA8A05C(v77, (uint64_t *)&unk_2542E6B00);
        v79 = v103;
        v80 = *(_BYTE *)(v78 + *(int *)(v103 + 48));
        sub_23AA937BC(v78, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        *(_BYTE *)(v54 + *(int *)(v49 + 48) + *(int *)(v79 + 48)) = v80;
      }
      v81 = v54;
      v82 = v109;
      v83 = v113;
      v84 = v104;
      sub_23AA8EFC8((uint64_t)v41, v104, (uint64_t *)&unk_2542E4750);
      v85 = v105;
      sub_23AA8EFC8(v81, v105, (uint64_t *)&unk_2542E6B00);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v49);
      v86 = v57[32];
      if (v106 == 4)
        v87 = 0x6F7270206D657469;
      else
        v87 = 0x616863206D657469;
      if (v106 == 4)
        v88 = 0xEF64657461676170;
      else
        v88 = 0xEC0000006465676ELL;
      sub_23AE87CE0(v84, v85, v119, v120, (v108 & 0x800400000) != 0, (v86 & 1) == 0, v87, v88, v82);
      swift_bridgeObjectRelease();
      sub_23AA8A05C(v85, (uint64_t *)&unk_2542E4750);
      sub_23AA8A05C(v84, (uint64_t *)&unk_2542E4750);
      sub_23AA8A05C(v81, (uint64_t *)&unk_2542E6B00);
      v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v82, 0, 1, v89);
      return sub_23AA8A05C((uint64_t)v41, (uint64_t *)&unk_2542E4750);
    }
    sub_23AA8EFC8((uint64_t)v41, v55, (uint64_t *)&unk_2542E4750);
    v58 = v55;
    v59 = v55;
    v60 = v48;
    v61 = v48((char *)v58, 1, v49);
    sub_23AA8A05C(v59, (uint64_t *)&unk_2542E4750);
    if (v61 == 1)
    {
      v48 = v60;
      v57 = v114;
      goto LABEL_17;
    }
    v48 = v60;
    v75 = v60(v41, 1, v49);
    v57 = v114;
    if (!v75)
    {
      sub_23AA724E8((uint64_t)&v41[*(int *)(v49 + 52)], (uint64_t)v115, &qword_2542E5050);
      sub_23AA724E8((uint64_t)v115, (uint64_t)v116, &qword_2542E5050);
      if (sub_23AAFCF2C((uint64_t)v116) != 1)
        goto LABEL_17;
    }
    if (v60(v41, 1, v49))
      goto LABEL_17;
    v90 = v122;
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))(*(_QWORD *)v57 + 264))(v121, &v119);
    if (!v90)
    {
      v122 = 0;
      sub_23AA8A660((uint64_t)v121, (uint64_t)&v41[*(int *)(v49 + 52)], &qword_2542E5050);
      goto LABEL_17;
    }
LABEL_9:
    sub_23AA8A05C(v54, (uint64_t *)&unk_2542E6B00);
    return sub_23AA8A05C((uint64_t)v41, (uint64_t *)&unk_2542E4750);
  }
  return result;
}

unint64_t sub_23AEA1438(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *i;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  _BYTE v29[16];
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;

  if (!a2)
    return 0xD000000000000016;
  if ((a3 & 1) != 0)
    return 0;
  v39 = v3;
  v40 = v4;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return 0;
  v8 = (uint64_t *)(a2 + 16);
  v32 = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  v34 = v8;
  v9 = swift_beginAccess();
  v31 = a1;
  v10 = (char *)(a1 + 56);
  v33 = v7;
  do
  {
    v12 = (void *)*((_QWORD *)v10 - 2);
    v13 = (void *)*((_QWORD *)v10 - 1);
    v14 = *v10;
    v35 = *((_QWORD *)v10 - 3);
    v11 = (void *)v35;
    v36 = (unint64_t)v12;
    v37 = v13;
    v38 = v14;
    v15 = *v34;
    MEMORY[0x24BDAC7A8](v9);
    v30 = &v35;
    sub_23AAFA44C(v11, v12, v13, v14);
    swift_bridgeObjectRetain();
    sub_23ADF8D0C((uint64_t (*)(_QWORD *))sub_23AEB45E8, (uint64_t)v29, v15);
    v17 = v16;
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v35 = 0x20656C7572;
      v36 = 0xE500000000000000;
      sub_23AE07320((uint64_t)v11, (uint64_t)v12, (uint64_t)v13, v14);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      swift_release();
      sub_23ABE4D94(v11, v12, v13, v14);
      return v35;
    }
    v10 += 32;
    sub_23ABE4D94(v11, v12, v13, v14);
    --v7;
  }
  while (v7);
  v18 = v31;
  swift_bridgeObjectRelease();
  v19 = (uint64_t *)(v32 + 24);
  swift_bridgeObjectRetain();
  v20 = swift_beginAccess();
  for (i = (char *)(v18 + 56); ; i += 32)
  {
    v23 = (void *)*((_QWORD *)i - 2);
    v24 = (void *)*((_QWORD *)i - 1);
    v25 = *i;
    v35 = *((_QWORD *)i - 3);
    v22 = (void *)v35;
    v36 = (unint64_t)v23;
    v37 = v24;
    v38 = v25;
    v26 = *v19;
    MEMORY[0x24BDAC7A8](v20);
    v30 = &v35;
    sub_23AAFA44C(v22, v23, v24, v25);
    swift_bridgeObjectRetain();
    sub_23ADF8D0C((uint64_t (*)(_QWORD *))sub_23AEB45E8, (uint64_t)v29, v26);
    v28 = v27;
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      break;
    sub_23ABE4D94(v22, v23, v24, v25);
    if (!--v33)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  v35 = 0x20656C7572;
  v36 = 0xE500000000000000;
  sub_23AE07320((uint64_t)v22, (uint64_t)v23, (uint64_t)v24, v25);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_release();
  sub_23ABE4D94(v22, v23, v24, v25);
  return v35;
}

unint64_t sub_23AEA17B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _BYTE v19[16];
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[13];
  _BYTE v24[48];
  _QWORD v25[19];

  if (!a2)
    return 0xD000000000000016;
  if ((a3 & 1) != 0)
    return 0;
  v25[17] = v3;
  v25[18] = v4;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return 0;
  v8 = (uint64_t *)(a2 + 16);
  v9 = a1 + 32;
  v22 = a2;
  swift_retain();
  v21 = a1;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v10 = a1 + 32;
  v11 = v7;
  do
  {
    sub_23AA724E8(v10, (uint64_t)v24, (uint64_t *)&unk_2542E05B0);
    v12 = sub_23AA724E8((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_2542E05B0);
    v13 = *v8;
    MEMORY[0x24BDAC7A8](v12);
    v20 = v25;
    swift_bridgeObjectRetain();
    v14 = sub_23ADF91CC((uint64_t (*)(_OWORD *))sub_23AEB54F8, (uint64_t)v19, v13);
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v25[0] = 0x20656C7572;
      v25[1] = 0xE500000000000000;
      sub_23AE077D8();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      swift_release();
      return v25[0];
    }
    v10 += 48;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v22 + 24);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  while (1)
  {
    sub_23AA724E8(v9, (uint64_t)v25, (uint64_t *)&unk_2542E05B0);
    v16 = sub_23AA724E8((uint64_t)v25, (uint64_t)v23, (uint64_t *)&unk_2542E05B0);
    v17 = *v15;
    MEMORY[0x24BDAC7A8](v16);
    v20 = v23;
    swift_bridgeObjectRetain();
    v18 = sub_23ADF91CC((uint64_t (*)(_OWORD *))sub_23AEB54F8, (uint64_t)v19, v17);
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      break;
    v9 += 48;
    if (!--v7)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  v23[0] = 0x20656C7572;
  v23[1] = 0xE500000000000000;
  sub_23AE077D8();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_release();
  return v23[0];
}

void sub_23AEA1AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void *a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t inited;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  os_log_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint8_t *v40;
  os_log_t v41;
  uint8_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t *v51;
  uint64_t v52[3];
  char v53;
  uint64_t v54;

  v45 = a8;
  v17 = sub_23B1C5E4C();
  v47 = *(_QWORD *)(v17 - 8);
  v48 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 216);
  v49 = a1;
  v22 = (void *)v21(v18);
  v52[0] = a2;
  v52[1] = a3;
  v24 = v45;
  v23 = v46;
  v52[2] = a4;
  v53 = a5;
  v50 = v22;
  v51 = v52;
  sub_23AC45210(v22, (void (*)(void))sub_23AEB458C);
  v25 = v23;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6490);
  inited = swift_initStackObject();
  v27 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 24) = v27;
  *(_QWORD *)(inited + 32) = v27;
  *(_QWORD *)(inited + 40) = v27;
  *(_QWORD *)(inited + 48) = 0;
  v28 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AEB43C4(a6, a7, v24, a9);
  sub_23AEB43C4(a6, a7, v24, a9);
  v46 = v20;
  v29 = sub_23B1C5E40();
  v30 = sub_23B1C6A88();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v52[0] = v43;
    v44 = v23;
    v42 = v31;
    *(_DWORD *)v31 = 136446210;
    v40 = v31 + 4;
    sub_23AEB43C4(a6, a7, v24, a9);
    sub_23AE2DB48((uint64_t)a6, (uint64_t)a7, v24, a9);
    v41 = v29;
    v33 = v32;
    v35 = v34;
    sub_23AEB4464(a6, a7, v24, a9);
    v54 = sub_23AABEC68(v33, v35, v52);
    v25 = v44;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AEB4464(a6, a7, v24, a9);
    sub_23AEB4464(a6, a7, v24, a9);
    v36 = v41;
    v37 = v30;
    v38 = v42;
    _os_log_impl(&dword_23AA66000, v41, v37, "%{public}s", v42, 0xCu);
    v39 = v43;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v39, -1, -1);
    MEMORY[0x23B8614BC](v38, -1, -1);

  }
  else
  {
    sub_23AEB4464(a6, a7, v24, a9);
    sub_23AEB4464(a6, a7, v24, a9);

  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  sub_23AE67290(a6, a7, v24, a9, 1, inited, v49);
  if (v25)
  {
    swift_release();
  }
  else
  {
    sub_23ADF691C((_QWORD *)inited, a10, (void (*)(_QWORD, _QWORD))sub_23ADF71B0);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

void sub_23AEA1EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t *v37;
  uint64_t v38[9];

  v32 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5E4C();
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 216))(v12);
  sub_23AA724E8(a2, (uint64_t)v38, (uint64_t *)&unk_2542E05B0);
  v36 = v15;
  v37 = v38;
  sub_23AC45210(v15, (void (*)(void))sub_23AEB4A5C);
  v16 = v4;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  inited = swift_initStackObject();
  v18 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 24) = v18;
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)(inited + 48) = 0;
  v19 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA8EFC8(a3, (uint64_t)v10, qword_2542DDA70);
  v33 = v14;
  v20 = sub_23B1C5E40();
  v21 = sub_23B1C6A88();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v29 = v4;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v38[0] = v24;
    v30 = a3;
    *(_DWORD *)v23 = 136446210;
    v31 = a1;
    sub_23AE2DEF0();
    v38[8] = sub_23AABEC68(v25, v26, v38);
    a1 = v31;
    a3 = v30;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v10, qword_2542DDA70);
    _os_log_impl(&dword_23AA66000, v20, v21, "%{public}s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v24, -1, -1);
    v27 = v23;
    v16 = v29;
    MEMORY[0x23B8614BC](v27, -1, -1);
  }
  else
  {
    sub_23AA8A05C((uint64_t)v10, qword_2542DDA70);
  }

  (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
  sub_23AE6898C(a3, 1, inited, a1);
  if (v16)
  {
    swift_release();
  }
  else
  {
    sub_23ADF691C((_QWORD *)inited, v32, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_23AEA220C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t result;

  *(_BYTE *)(v5 + 144) = a2;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_BYTE *)(v5 + 40) = 1;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_QWORD *)(v5 + 80) = 0;
  *(_OWORD *)(v5 + 88) = xmmword_23B1CA770;
  *(_QWORD *)(v5 + 112) = a3;
  *(_QWORD *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 128) = a5;
  *(_QWORD *)(v5 + 136) = a1;
  if ((a5 & 0x8000) != 0
    && (*(_QWORD *)(v5 + 88) = 2359552,
        *(_BYTE *)(v5 + 104) = 0,
        sub_23AAAEE10((void *)0x40100, 0, 0),
        *(_BYTE *)(v5 + 104)))
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v5 + 88);
    v6 = *(void **)(v5 + 96);
    *(_QWORD *)(v5 + 88) = v7 | 0x2000;
    *(_BYTE *)(v5 + 104) = 0;
    swift_retain();
    sub_23AAAEE10((void *)v7, v6, 0);
    return v5;
  }
  return result;
}

uint64_t sub_23AEA2314(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t result;

  *(_BYTE *)(v5 + 144) = a2;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_BYTE *)(v5 + 40) = 1;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_QWORD *)(v5 + 80) = 0;
  *(_OWORD *)(v5 + 88) = xmmword_23B1CA770;
  *(_QWORD *)(v5 + 112) = a3;
  *(_QWORD *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 128) = a5;
  *(_QWORD *)(v5 + 136) = a1;
  if ((a5 & 0x8000) != 0
    && (*(_QWORD *)(v5 + 88) = 2359552,
        *(_BYTE *)(v5 + 104) = 0,
        sub_23AAAEE10((void *)0x40100, 0, 0),
        *(_BYTE *)(v5 + 104)))
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v5 + 88);
    v6 = *(void **)(v5 + 96);
    *(_QWORD *)(v5 + 88) = v7 | 0x20;
    *(_BYTE *)(v5 + 104) = 0;
    swift_retain();
    sub_23AAAEE10((void *)v7, v6, 0);
    return v5;
  }
  return result;
}

void sub_23AEA241C(uint64_t a1, int a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  int v31;
  uint64_t v32;
  int v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  char isEscapingClosureAtFileLocation;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  unsigned __int8 v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  id aBlock;
  uint64_t v64;
  id (*v65)(uint64_t, void *);
  void *v66;
  uint64_t (*v67)();
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;

  v57 = a4;
  v7 = v6;
  v61 = a5;
  LODWORD(v10) = a2;
  v71 = *MEMORY[0x24BDAC8D0];
  v12 = sub_23B1C5E4C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v17 = sub_23B1C5E40();
  v18 = sub_23B1C6A88();
  LODWORD(v58) = v18;
  v19 = os_log_type_enabled(v17, v18);
  v62 = (int)v10;
  v59 = a3;
  v60 = v7;
  if (v19)
  {
    v20 = swift_slowAlloc();
    v56 = (id)a6;
    v21 = v20;
    v10 = (void *)swift_slowAlloc();
    aBlock = v10;
    *(_DWORD *)v21 = 136446466;
    v55 = v13;
    v22 = sub_23AA96F18(a1, v62);
    v54 = v12;
    v23 = a1;
    v69 = sub_23AABEC68(v22, v24, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v25 = sub_23AF1604C(a3);
    v69 = sub_23AABEC68(v25, v26, (uint64_t *)&aBlock);
    v7 = v60;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v17, (os_log_type_t)v58, "⏰  scheduling background download <i:%{public}s reason:%{public}s>", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    v27 = v10;
    LOBYTE(v10) = v62;
    MEMORY[0x23B8614BC](v27, -1, -1);
    v28 = v21;
    a6 = (uint64_t)v56;
    MEMORY[0x23B8614BC](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v54);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v23 = a1;
  }
  v29 = sub_23B1C5480();
  v30 = v61 < 0 || v29 == v61;
  v31 = v30;
  if (v30)
    v32 = 0;
  else
    v32 = a6 & ~(a6 >> 63);
  if (a6 < 0)
    v33 = 1;
  else
    v33 = v31;
  v34 = *(void **)(v7 + 16);
  if (v33)
    v35 = 0;
  else
    v35 = v61;
  v61 = v23;
  v69 = v23;
  v70 = (char)v10;
  v36 = swift_allocObject();
  sub_23AA9F454(&v69, v36 + 16);
  *(_QWORD *)(v36 + 32) = v7;
  *(_QWORD *)(v36 + 40) = v35;
  *(_BYTE *)(v36 + 48) = v33;
  *(_QWORD *)(v36 + 56) = v32;
  *(_BYTE *)(v36 + 64) = v33;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_23AEB1D28;
  *(_QWORD *)(v37 + 24) = v36;
  v67 = sub_23AA956C8;
  v68 = v37;
  aBlock = (id)MEMORY[0x24BDAC760];
  v64 = 1107296256;
  v65 = sub_23AA9432C;
  v66 = &block_descriptor_280;
  v38 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v58 = v34;
  v39 = objc_msgSend(v34, sel_fetchSwift_error_, v38, &aBlock);
  _Block_release(v38);
  v40 = (uint64_t)aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (!v39)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    return;
  }
  v56 = v39;
  if ((objc_msgSend(v39, sel_next) & 1) != 0)
  {
    v69 = v61;
    v70 = v62;
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v59;
    sub_23AA9F454(&v69, v42 + 24);
    *(_QWORD *)(v42 + 40) = v60;
    *(_QWORD *)(v42 + 48) = v35;
    *(_BYTE *)(v42 + 56) = v33;
    *(_QWORD *)(v42 + 64) = v32;
    *(_BYTE *)(v42 + 72) = v33;
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = sub_23AEB1DD4;
    *(_QWORD *)(v43 + 24) = v42;
    v67 = sub_23AA956C8;
    v68 = v43;
    aBlock = (id)MEMORY[0x24BDAC760];
    v64 = 1107296256;
    v65 = sub_23AA9432C;
    v66 = &block_descriptor_301_0;
    v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v40 = (uint64_t)objc_msgSend(v58, sel_executeSwift_error_, v44, &aBlock);
    _Block_release(v44);
    v45 = aBlock;
    v46 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v46 & 1) == 0)
    {
      if ((v40 & 1) != 0)
        goto LABEL_35;
      goto LABEL_31;
    }
    goto LABEL_37;
  }
  v69 = v61;
  v70 = v62;
  v47 = swift_allocObject();
  sub_23AA9F454(&v69, v47 + 16);
  *(_QWORD *)(v47 + 32) = v35;
  *(_BYTE *)(v47 + 40) = v33;
  *(_QWORD *)(v47 + 48) = v32;
  *(_BYTE *)(v47 + 56) = v33;
  v48 = v59;
  *(_QWORD *)(v47 + 64) = v57;
  *(_QWORD *)(v47 + 72) = v48;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = sub_23AEB1D64;
  *(_QWORD *)(v49 + 24) = v47;
  v67 = sub_23AA956C8;
  v68 = v49;
  aBlock = (id)MEMORY[0x24BDAC760];
  v64 = 1107296256;
  v65 = sub_23AA9432C;
  v66 = &block_descriptor_290;
  v50 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v51 = objc_msgSend(v58, sel_executeSwift_error_, v50, &aBlock);
  _Block_release(v50);
  v40 = (uint64_t)aBlock;
  v45 = aBlock;
  v52 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v52 & 1) != 0)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    swift_once();
    goto LABEL_30;
  }
  if ((v51 & 1) == 0)
  {
LABEL_31:
    sub_23B1C587C();

    swift_willThrow();
    goto LABEL_35;
  }
  v40 = v60;
  if (*(_BYTE *)(v60 + qword_2542EE070) != 1)
  {
    *(_BYTE *)(v60 + qword_2542EE070) = 1;
    if (qword_2542E4C20 != -1)
      swift_once();
    objc_msgSend((id)qword_2542EDD60, sel_addWatcher_, v40);
    goto LABEL_35;
  }
  if (qword_2542E4C20 != -1)
    goto LABEL_39;
LABEL_30:
  sub_23AFEA1B4((uint64_t)sub_23AEB1CE0, v40);
LABEL_35:
  swift_release();
  swift_release();

}

uint64_t sub_23AEA2B7C(void *a1, unint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v26[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_23B1C64F4();
  if (!a3)
  {
LABEL_5:
    a2 = -(uint64_t)a2;
    goto LABEL_7;
  }
  if (a3 == 1)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
    goto LABEL_5;
  }
  a2 = (unint64_t)(a2 != 0) << 63;
LABEL_7:
  v15 = objc_msgSend(a1, sel_bindLongParameter_, a2);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a5 & 1) != 0)
    v16 = 0;
  else
    v16 = sub_23B1C6938();
  v17 = objc_msgSend(a1, sel_bindObjectParameter_, v16);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a7 & 1) != 0)
    v18 = 0;
  else
    v18 = sub_23B1C6938();
  v19 = objc_msgSend(a1, sel_bindObjectParameter_, v18);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v20 = MEMORY[0x24BEE1768];
  v27 = MEMORY[0x24BEE1768];
  v26[0] = a8;
  sub_23AA94C90((uint64_t)v26);
  v22 = v21;
  sub_23AA8A05C((uint64_t)v26, qword_2542E5640);
  if (!v22)
    goto LABEL_16;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v26[0] = 0;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v27 = v20;
  v26[0] = a9;
  sub_23AA94C90((uint64_t)v26);
  v24 = v23;
  sub_23AA8A05C((uint64_t)v26, qword_2542E5640);
  if (v24)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v28;
  }
  else
  {
LABEL_16:
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

void sub_23AEA2F08(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  _BYTE v30[12];
  int v31;

  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDD10);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(uint64_t (**)(uint64_t))(v2 + 24);
  if (v13)
  {
    v31 = a2;
    v14 = swift_retain();
    v15 = v13(v14);
    sub_23AAB7948((uint64_t)v13);
    if (v15)
    {
      v16 = (uint64_t *)(v15 + qword_2542EDFF0);
      swift_beginAccess();
      v17 = *v16;
      if (*(_QWORD *)(v17 + 16))
      {
        v18 = sub_23AA97254((uint64_t)a1, v31);
        if ((v19 & 1) != 0)
        {
          v20 = v18;
          v21 = *(_QWORD *)(v17 + 56);
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
          v23 = *(_QWORD *)(v22 - 8);
          sub_23AA8EFC8(v21 + *(_QWORD *)(v23 + 72) * v20, (uint64_t)v12, &qword_2542E6C80);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
          sub_23AA8A05C((uint64_t)v12, qword_2542DDD10);
LABEL_12:
          swift_release();
          return;
        }
      }
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 1, 1, v24);
      sub_23AA8A05C((uint64_t)v12, qword_2542DDD10);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
      inited = swift_initStackObject();
      v26 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(inited + 24) = v26;
      *(_QWORD *)(inited + 32) = v26;
      *(_QWORD *)(inited + 40) = v26;
      *(_QWORD *)(inited + 48) = 0;
      sub_23AE72B50(a1, v31, v15, inited);
      if (v3)
      {
        swift_release();
        goto LABEL_12;
      }
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v28 = v27;
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
      v29 = v28 * 1000000000.0;
      if ((~COERCE__INT64(v28 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v29 > -9.22337204e18)
        {
          if (v29 < 9.22337204e18)
          {
            sub_23ADF691C((_QWORD *)inited, (uint64_t)v29, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
            swift_release();
            swift_setDeallocating();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            return;
          }
          goto LABEL_16;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_16:
      __break(1u);
    }
  }
}

_QWORD *sub_23AEA3208(void *a1, int a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(void *);
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD *v14;
  _QWORD *v15;
  char isEscapingClosureAtFileLocation;
  id v17;
  _QWORD *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *);
  uint64_t (*v35)(void *);
  uint64_t (*v36)(void *);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  _QWORD *v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  char v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t KeyPath;
  void (*v55)(_QWORD **, _QWORD);
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  id v68;
  uint64_t (*v69)(void *);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  int v75;
  void *v76;
  uint64_t v77;
  _QWORD *aBlock;
  uint64_t v79;
  id (*v80)(uint64_t, void *);
  void *v81;
  uint64_t (*v82)();
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;

  v74 = a3;
  v86 = *MEMORY[0x24BDAC8D0];
  v6 = (uint64_t (*)(void *))sub_23B1C5E4C();
  v72 = *((_QWORD *)v6 - 1);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v3;
  v9 = *(void **)(v3 + 16);
  v76 = a1;
  v84 = (uint64_t)a1;
  v75 = a2;
  v85 = a2;
  v10 = swift_allocObject();
  sub_23AA9F454(&v84, v10 + 16);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23AEB5938;
  *(_QWORD *)(v11 + 24) = v10;
  v82 = sub_23AA956C8;
  v83 = v11;
  aBlock = (_QWORD *)MEMORY[0x24BDAC760];
  v79 = 1107296256;
  v80 = sub_23AA9432C;
  v81 = &block_descriptor_311;
  v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v73 = v9;
  v13 = objc_msgSend(v9, sel_fetchSwift_error_, v12, &aBlock);
  _Block_release(v12);
  v14 = aBlock;
  v15 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v13)
  {
    v17 = v13;
    objc_msgSend(v17, sel_next);
    v18 = objc_msgSend(v17, sel_longAtIndex_, 0);

    if ((uint64_t)v18 <= 0)
    {
      swift_release();
      v14 = 0;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      goto LABEL_34;
    }
    v67 = v18;
    v19 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v20 = sub_23B1C5E40();
    v21 = sub_23B1C6A88();
    v22 = os_log_type_enabled(v20, v21);
    v70 = v10;
    if (v22)
    {
      v23 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      aBlock = v24;
      *(_DWORD *)v23 = 136446466;
      v69 = v6;
      v25 = sub_23AA96F18((uint64_t)v76, v75);
      v84 = sub_23AABEC68(v25, v26, (uint64_t *)&aBlock);
      v68 = v17;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      v27 = v74;
      v28 = sub_23AF1604C(v74);
      v84 = sub_23AABEC68(v28, v29, (uint64_t *)&aBlock);
      v17 = v68;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v20, v21, "⏰  unscheduling background download <i:%{public}s reason:%{public}s>", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v24, -1, -1);
      MEMORY[0x23B8614BC](v23, -1, -1);

      (*(void (**)(char *, uint64_t (*)(void *)))(v72 + 8))(v8, v69);
      v30 = v73;
      if (v27 != 64)
      {
LABEL_6:
        v69 = 0;
        v72 = 0;
        LOBYTE(v31) = v75;
        v32 = (uint64_t)v76;
        goto LABEL_19;
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t (*)(void *)))(v72 + 8))(v8, v6);
      v30 = v73;
      v27 = v74;
      if (v74 != 64)
        goto LABEL_6;
    }
    v84 = (uint64_t)v76;
    v31 = v75;
    v85 = v75;
    v37 = swift_allocObject();
    sub_23AA9F454(&v84, v37 + 16);
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_23AEB23F4;
    *(_QWORD *)(v38 + 24) = v37;
    v72 = v37;
    v82 = sub_23AA956C8;
    v83 = v38;
    aBlock = (_QWORD *)MEMORY[0x24BDAC760];
    v79 = 1107296256;
    v80 = sub_23AA9432C;
    v81 = &block_descriptor_342;
    v39 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    aBlock = 0;
    v40 = objc_msgSend(v30, sel_fetchSwift_error_, v39, &aBlock);
    _Block_release(v39);
    v14 = aBlock;
    v41 = aBlock;
    LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v39 & 1) != 0)
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v40)
    {

      v17 = v40;
      if ((objc_msgSend(v17, sel_next) & 1) == 0 || objc_msgSend(v17, sel_longAtIndex_, 0) != (id)64)
      {

        v69 = sub_23AEB23F4;
        v32 = (uint64_t)v76;
        goto LABEL_18;
      }
      v42 = objc_msgSend(v17, sel_next);

      v32 = (uint64_t)v76;
      if ((v42 & 1) != 0 || (v43 = v77, sub_23AEA2F08(v76, v31), (v77 = v43) == 0))
      {
        v69 = sub_23AEB23F4;
LABEL_18:
        v27 = v74;
LABEL_19:
        v84 = v32;
        v85 = v31;
        v44 = swift_allocObject();
        *(_QWORD *)(v44 + 16) = v27;
        sub_23AA9F454(&v84, v44 + 24);
        v45 = swift_allocObject();
        *(_QWORD *)(v45 + 16) = sub_23AEB2314;
        *(_QWORD *)(v45 + 24) = v44;
        v82 = sub_23AA956C8;
        v83 = v45;
        aBlock = (_QWORD *)MEMORY[0x24BDAC760];
        v79 = 1107296256;
        v80 = sub_23AA9432C;
        v81 = &block_descriptor_321;
        v46 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        aBlock = 0;
        v14 = objc_msgSend(v30, sel_executeSwift_error_, v46, &aBlock);
        _Block_release(v46);
        v47 = aBlock;
        v48 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v48 & 1) == 0)
        {
          if (!(_DWORD)v14)
          {
            v59 = sub_23B1C587C();

            v77 = v59;
            swift_willThrow();
LABEL_28:
            swift_release();

            sub_23AAB7948((uint64_t)v69);
            goto LABEL_29;
          }
          v49 = objc_msgSend(v30, sel_changes);
          if ((uint64_t)v49 > 0)
          {
            v68 = v17;
            MEMORY[0x24BDAC7A8](v49);
            v50 = type metadata accessor for VFSItem(0);
            *(&v67 - 4) = (_QWORD *)v50;
            v51 = sub_23AA9F52C(0, &qword_2542E7560);
            *(&v67 - 3) = (_QWORD *)v51;
            v52 = sub_23AA7E38C(&qword_2542DE270, type metadata accessor for VFSItem, (uint64_t)&unk_23B1D2C0C);
            *(&v67 - 2) = (_QWORD *)v52;
            v53 = sub_23AEB238C();
            *(&v67 - 1) = (_QWORD *)v53;
            KeyPath = swift_getKeyPath();
            v14 = &v67;
            MEMORY[0x24BDAC7A8](KeyPath);
            *(&v67 - 4) = (_QWORD *)v50;
            *(&v67 - 3) = (_QWORD *)v51;
            *(&v67 - 2) = (_QWORD *)v52;
            *(&v67 - 1) = (_QWORD *)v53;
            swift_getKeyPath();
            v55 = (void (*)(_QWORD **, _QWORD))sub_23B1C5F48();
            if (__OFADD__(*v56, 1))
              goto LABEL_43;
            ++*v56;
            v55(&aBlock, 0);
            swift_release();
            swift_release();
            v17 = v68;
            v30 = v73;
          }
          if (v74 == 16)
          {
            v58 = (uint64_t)v76;
            v57 = v77;
            sub_23AEA48B4((uint64_t)v76, v75);
            v77 = v57;
            if (v57)
              goto LABEL_28;
          }
          else
          {
            v58 = (uint64_t)v76;
          }
          v84 = v58;
          v85 = v75;
          v60 = swift_allocObject();
          sub_23AA9F454(&v84, v60 + 16);
          v61 = swift_allocObject();
          *(_QWORD *)(v61 + 16) = sub_23AEB2340;
          *(_QWORD *)(v61 + 24) = v60;
          v82 = sub_23AA956C8;
          v83 = v61;
          aBlock = (_QWORD *)MEMORY[0x24BDAC760];
          v79 = 1107296256;
          v80 = sub_23AA9432C;
          v81 = &block_descriptor_331_0;
          v62 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          aBlock = 0;
          v63 = objc_msgSend(v30, sel_fetchSwift_error_, v62, &aBlock);
          _Block_release(v62);
          v14 = aBlock;
          LOBYTE(v62) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v62 & 1) == 0)
          {
            if (!v63)
            {
              v66 = sub_23B1C587C();

              v77 = v66;
              swift_willThrow();
              swift_release();

              sub_23AAB7948((uint64_t)v69);
              swift_release();
              goto LABEL_29;
            }

            v17 = v63;
            objc_msgSend(v17, sel_next);
            objc_msgSend(v17, sel_longAtIndex_, 0);
            swift_release();

            v36 = sub_23AEB2340;
            v35 = sub_23AEB2314;
            v14 = v67;
            v34 = v69;
LABEL_34:

            sub_23AAB7948((uint64_t)v34);
            sub_23AAB7948((uint64_t)v35);
            sub_23AAB7948((uint64_t)v36);
            return v14;
          }
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
        }
        goto LABEL_40;
      }
    }
    else
    {
      v65 = sub_23B1C587C();

      v77 = v65;
      swift_willThrow();
    }
    swift_release();
    swift_release();

    return v14;
  }
  v33 = sub_23B1C587C();

  v77 = v33;
  swift_willThrow();
LABEL_29:
  swift_release();
  return v14;
}

uint64_t sub_23AEA3CC4(void *a1, unint64_t a2, char a3)
{
  id v6;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  if (!a3)
    goto LABEL_5;
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  v6 = objc_msgSend(a1, sel_bindLongParameter_, a2);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23AEA3E14(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t result;
  _QWORD v12[4];
  uint64_t v13;
  unint64_t v14;

  v12[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23B1C64F4();
  v12[3] = MEMORY[0x24BEE1768];
  v12[0] = a2;
  sub_23AA94C90((uint64_t)v12);
  v9 = v8;
  sub_23AA8A05C((uint64_t)v12, qword_2542E5640);
  if (v9)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    if (a4)
    {
      if (a4 != 1)
      {
        a3 = (unint64_t)(a3 != 0) << 63;
        goto LABEL_8;
      }
      if ((a3 & 0x8000000000000000) == 0)
      {
LABEL_8:
        v10 = objc_msgSend(a1, sel_bindLongParameter_, a3);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        return v13;
      }
      __break(1u);
    }
    a3 = -(uint64_t)a3;
    goto LABEL_8;
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AEA3FD8(void *a1, unint64_t a2, char a3)
{
  id v6;
  uint64_t v8;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  if (!a3)
    goto LABEL_5;
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  v6 = objc_msgSend(a1, sel_bindLongParameter_, a2, 0, 0xE000000000000000);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23AEA40C4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(_QWORD *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  unsigned __int8 v12;
  id v13;
  id aBlock[6];
  _BYTE __src[496];
  _BYTE v16[496];
  _BYTE v17[496];
  _QWORD v18[62];
  _BYTE __dst[496];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v3 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (v3)
  {
    v4 = v1;
    v5 = (void (*)(_QWORD *__return_ptr, uint64_t))result;
    v6 = swift_retain();
    v7 = v3(v6);
    result = sub_23AAB7948((uint64_t)v3);
    if (v7)
    {
      v5(v18, v7);
      if (v2)
        return swift_release();
      sub_23AA724E8((uint64_t)v18, (uint64_t)v16, qword_2542E6E20);
      sub_23AA724E8((uint64_t)v16, (uint64_t)v17, qword_2542E6E20);
      if (sub_23AAFC2A4((uint64_t)v17) == 1)
        return swift_release();
      sub_23AA724E8((uint64_t)v16, (uint64_t)__src, qword_2542E6E20);
      memcpy(__dst, __src, sizeof(__dst));
      if ((sub_23AEADCD0((uint64_t)__dst, v7) & 1) != 0)
      {
        sub_23ADF2D34((uint64_t)v16, (voidsub_23AAAEC3C);
        return swift_release();
      }
      v8 = *(void **)(v1 + 16);
      v9 = swift_allocObject();
      memcpy((void *)(v9 + 16), __dst, 0x1F0uLL);
      v10 = (_QWORD *)swift_allocObject();
      v10[2] = sub_23AEB1C90;
      v10[3] = v9;
      aBlock[4] = sub_23AA956C8;
      aBlock[5] = v10;
      aBlock[0] = (id)MEMORY[0x24BDAC760];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_23AA9432C;
      aBlock[3] = &block_descriptor_267_0;
      v11 = _Block_copy(aBlock);
      sub_23ADF2D34((uint64_t)v16, (voidsub_23AA88348);
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      v12 = objc_msgSend(v8, sel_executeSwift_error_, v11, aBlock);
      _Block_release(v11);
      v13 = aBlock[0];
      LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v9 & 1) != 0)
        __break(1u);
      if ((v12 & 1) != 0)
      {
        if (!objc_msgSend(v8, sel_changes))
        {
          sub_23ADF2D34((uint64_t)v16, (voidsub_23AAAEC3C);
          swift_release();
          return swift_release();
        }
        if (*(_BYTE *)(v4 + qword_2542EE070) == 1)
        {
          if (qword_2542E4C20 != -1)
            swift_once();
          sub_23AFEA1B4((uint64_t)sub_23AEB1CE0, v4);
        }
        else
        {
          *(_BYTE *)(v4 + qword_2542EE070) = 1;
          if (qword_2542E4C20 != -1)
            swift_once();
          objc_msgSend((id)qword_2542EDD60, sel_addWatcher_, v4);
        }
      }
      else
      {
        sub_23B1C587C();

        swift_willThrow();
      }
      swift_release();
      sub_23ADF2D34((uint64_t)v16, (voidsub_23AAAEC3C);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_23AEA4474(void *a1, uint64_t a2)
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23ADF9B8C(a1, *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23AEA45C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  unsigned int v11;
  BOOL v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  id v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v16 - v8;
  sub_23AA8EFC8(a1, (uint64_t)&v16 - v8, (uint64_t *)&unk_2542DDFB0);
  if (swift_getEnumCaseMultiPayload() == 13)
  {
    sub_23AA8EFC8((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_2542DDFB0);
    if (v7[9] == 1)
    {
      v10 = *(id *)v7;
      v11 = v7[10];
      v12 = v11 > 0x17;
      v13 = (1 << v11) & 0x800042;
      if (!v12 && v13 != 0)
      {
        v15 = sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542DDFB0);
        v17 = v10;
        MEMORY[0x24BDAC7A8](v15);
        *(&v16 - 2) = (uint64_t)&v17;
        sub_23AEA40C4((uint64_t)sub_23AEB1B78);

        if (v2)
          return;
        goto LABEL_11;
      }
      sub_23AA862DC(*(id *)v7, v7[8], 1);
    }
  }
  sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542DDFB0);
LABEL_11:
  if (*(_QWORD *)(v1 + qword_2542EE060))
  {
    swift_retain();
    sub_23AE826E8(a1);
    swift_release();
  }
}

void sub_23AEA4788(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  void (*v6)(_QWORD *__return_ptr, void **, uint64_t);
  id v7;
  _OWORD v8[31];
  _BYTE v9[504];
  _BYTE v10[504];
  void *v11;
  __int16 v12;
  _QWORD __src[63];
  _BYTE v14[496];
  _BYTE __dst[496];

  v5 = *(_QWORD *)(a1 + 16);
  v11 = a2;
  v12 = 256;
  v6 = *(void (**)(_QWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v5 + 168);
  v7 = a2;
  v6(__src, &v11, 1);
  if (v3)
  {

  }
  else
  {

    sub_23AA724E8((uint64_t)__src, (uint64_t)v9, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v10) == 1)
    {
      sub_23ACFC784(v8);
      sub_23AA724E8((uint64_t)v8, a3, qword_2542E6E20);
    }
    else
    {
      memcpy(__dst, __src, sizeof(__dst));
      sub_23AFFD9BC((uint64_t)v8);
      sub_23AAFC3AC((uint64_t)__dst);
      memcpy(v14, v8, sizeof(v14));
      sub_23AFFDC50(a3);
      sub_23AAFCF50((uint64_t)v14);
      nullsub_1(a3);
    }
  }
}

uint64_t sub_23AEA48B4(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void **__return_ptr, uint64_t *);
  void *v8;
  void *v9;
  uint64_t v10;
  char v11;
  void *v12;

  v10 = result;
  v11 = a2;
  v4 = *(uint64_t (**)(uint64_t))(v2 + 24);
  if (v4)
  {
    v5 = swift_retain();
    v6 = v4(v5);
    result = sub_23AAB7948((uint64_t)v4);
    if (v6)
    {
      v7 = *(void (**)(void **__return_ptr, uint64_t *))(**(_QWORD **)(v6 + 16) + 160);
      swift_retain();
      v7(&v12, &v10);
      result = swift_release();
      if (v3)
        return swift_release();
      v8 = v12;
      if (!v12)
      {
        return swift_release();
      }
      else if (*(_QWORD *)(v2 + qword_2542EE080))
      {
        MEMORY[0x24BDAC7A8](result);
        v9 = (void *)swift_retain();
        sub_23AC45210(v9, sub_23AEB25D8);

        swift_release();
        return swift_release();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_23AEA49E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6410);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_2542DE870;
  else
    v2 = (uint64_t *)&unk_2569E6418;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

_QWORD *sub_23AEA4A34(uint64_t a1)
{
  return sub_23AEA4D4C(a1, &qword_2542E2160, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_23AFD5A20);
}

size_t sub_23AEA4A48(uint64_t a1)
{
  return sub_23AEA5B5C(a1, &qword_2542DE830, type metadata accessor for DownloadProgressMonitor.URLProgressKey, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_23AFD5A24);
}

_QWORD *sub_23AEA4A64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2160);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_23AFD5CE0(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_23AEA4B48(uint64_t a1)
{
  return sub_23AEA5934(a1, (uint64_t *)&unk_2569E68B8, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_23AFD5ED8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23AEB5540);
}

_QWORD *sub_23AEA4B64(uint64_t a1)
{
  return sub_23AEA4D4C(a1, &qword_2569E68E8, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_23AFD60E4);
}

_QWORD *sub_23AEA4B78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6510);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_23AFD62E4(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_23AEA4C5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6518);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  v5 = sub_23AFD64FC(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_23AEA4D4C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 25;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 3);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v6;
}

_QWORD *sub_23AEA4E30(uint64_t a1)
{
  return sub_23AEA5480(a1, &qword_2569E6890, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_23AFD68B8);
}

_QWORD *sub_23AEA4E44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E67E8);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_23AFD6A5C(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_23AEA4F28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20E0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 48);
  v5 = sub_23AFD6C68(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_23AEA501C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = a2 + 40 * a3;
        if (v10 < (unint64_t)&v8[5 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 40 * v5)
          goto LABEL_17;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6430);
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6438);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AEA51B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v7)
    return MEMORY[0x24BEE4AF8];
  if (v7 <= 0)
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v6 != a3)
    {
LABEL_10:
      if (v7 < 0)
        goto LABEL_24;
      v17 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
      v18 = (char *)v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v19 = *(_QWORD *)(v17 + 72);
      v20 = a2 + v19 * a3;
      v21 = v19 * v7;
      v22 = &v18[v21];
      v23 = v20 + v21;
      if (v20 < (unint64_t)v22 && (unint64_t)v18 < v23)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v14;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (v12)
  {
    if (v15 - v13 == 0x8000000000000000 && v12 == -1)
      goto LABEL_23;
    v14[2] = v7;
    v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
    if (v6 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

_QWORD *sub_23AEA537C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E3680);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  v5 = sub_23AFD6E18((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_23AEA546C(uint64_t a1)
{
  return sub_23AEA5480(a1, &qword_2569E68B0, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_23AFD7024);
}

_QWORD *sub_23AEA5480(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 17;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v6;
}

_QWORD *sub_23AEA5564(uint64_t a1)
{
  return sub_23AEA5A38(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_23AFD66C0);
}

uint64_t sub_23AEA5570(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        type metadata accessor for NSFileProviderItemIdentifier(0);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2160);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 3);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

_QWORD *sub_23AEA56EC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_23AAB6B68((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

size_t sub_23AEA57E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5878);
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0) - 8) + 80);
      v10 = sub_23AFD7220(&v11, (uint64_t)v6 + ((v9 + 32) & ~v9), v1, a1);
      swift_bridgeObjectRetain();
      sub_23ACF19B8();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AEA5918(uint64_t a1)
{
  return sub_23AEA5934(a1, &qword_2569E5858, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_23AFD74E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23ACF19B8);
}

_QWORD *sub_23AEA5934(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD *, _QWORD *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[5];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = (_QWORD *)swift_allocObject();
  v9 = _swift_stdlib_malloc_size(v8);
  v8[2] = v4;
  v8[3] = 2 * ((uint64_t)(v9 - 32) / 24);
  v10 = a3(v17, v8 + 4, v4, a1);
  v11 = v17[0];
  v12 = v17[1];
  v13 = v17[2];
  v14 = v17[3];
  v15 = v17[4];
  swift_bridgeObjectRetain();
  a4(v11, v12, v13, v14, v15);
  if (v10 != v4)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v8;
}

_QWORD *sub_23AEA5A2C(uint64_t a1)
{
  return sub_23AEA5A38(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_23AFD76F8);
}

_QWORD *sub_23AEA5A38(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
  v5 = (_QWORD *)swift_allocObject();
  v6 = _swift_stdlib_malloc_size(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 25;
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_23ACF19B8();
  if (v8 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

size_t sub_23AEA5B24(uint64_t a1)
{
  return sub_23AEA5B5C(a1, &qword_2569E68E0, type metadata accessor for VFSItem, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_23AFD78F0);
}

size_t sub_23AEA5B40(uint64_t a1)
{
  return sub_23AEA5B5C(a1, &qword_2542DE848, (uint64_t (*)(_QWORD))type metadata accessor for SyncState, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_23AFD78FC);
}

size_t sub_23AEA5B5C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(a3(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (result - v10 != 0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)(result - v10) / v9);
      v14 = a4(&v15, (char *)v11 + v10, v4, a1);
      swift_bridgeObjectRetain();
      sub_23ACF19B8();
      if (v14 == v4)
        return (size_t)v11;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23AEA5C78(uint64_t *a1)
{
  uint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v2 < 0 || (v2 & 0x4000000000000000) != 0)
    sub_23B05222C(v2);
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_23AEA5CFC(v6);
  return sub_23B1C671C();
}

uint64_t sub_23AEA5CFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *__dst;
  uint64_t v103;
  uint64_t v104;

  v2 = v1;
  v4 = a1[1];
  result = sub_23B1C72F8();
  if (result < v4)
  {
    if (v4 >= 0)
      v6 = v4;
    else
      v6 = v4 + 1;
    if (v4 < -1)
    {
LABEL_158:
      result = sub_23B1C7040();
      __break(1u);
      return result;
    }
    v7 = result;
    v97 = a1;
    if (v4 < 2)
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v104 = MEMORY[0x24BEE4AF8];
      __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v4 != 1)
      {
        v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        if (v13 < 2)
          goto LABEL_127;
        goto LABEL_115;
      }
    }
    else
    {
      v8 = v6 >> 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E08C0);
      v9 = sub_23B1C6764();
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
      __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
      v104 = v9;
    }
    v99 = v7;
    v103 = v1;
    v11 = 0;
    v12 = *a1;
    v98 = *a1 - 8;
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v100 = v4;
    v101 = *a1;
    while (1)
    {
      v14 = v11++;
      if (v11 >= v4)
        goto LABEL_45;
      v15 = *(_QWORD *)(v12 + 8 * v11);
      v16 = *(_QWORD *)(v12 + 8 * v14);
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      v19 = *(_QWORD *)(v16 + 16);
      if (v19 >= v18)
        break;
      v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        v20 = 1;
        goto LABEL_24;
      }
LABEL_38:
      if (v14 < v11)
      {
        v25 = (uint64_t *)(v98 + 8 * v11);
        v26 = v11;
        v27 = v14;
        v28 = (uint64_t *)(v12 + 8 * v14);
        do
        {
          if (v27 != --v26)
          {
            if (!v12)
              goto LABEL_156;
            v29 = *v28;
            *v28 = *v25;
            *v25 = v29;
          }
          ++v27;
          --v25;
          ++v28;
        }
        while (v27 < v26);
      }
LABEL_45:
      if (v11 < v4)
      {
        if (__OFSUB__(v11, v14))
          goto LABEL_149;
        if (v11 - v14 < v99)
        {
          v30 = v14 + v99;
          if (__OFADD__(v14, v99))
            goto LABEL_152;
          if (v30 >= v4)
            v30 = v4;
          if (v30 < v14)
          {
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
            goto LABEL_158;
          }
          if (v11 != v30)
          {
            v31 = (_QWORD *)(v98 + 8 * v11);
            do
            {
              v32 = *(_QWORD *)(v12 + 8 * v11);
              v33 = v14;
              v34 = v31;
              do
              {
                v35 = *v34;
                v36 = *(_QWORD *)(v32 + 16);
                v37 = *(_QWORD *)(*v34 + 16);
                if (v37 >= v36 && (v36 != v37 || *(_QWORD *)(v32 + 24) >= *(_QWORD *)(v35 + 24)))
                  break;
                if (!v12)
                  goto LABEL_154;
                *v34 = v32;
                v34[1] = v35;
                --v34;
                ++v33;
              }
              while (v11 != v33);
              ++v11;
              ++v31;
            }
            while (v11 != v30);
            v11 = v30;
          }
        }
      }
      if (v11 < v14)
        goto LABEL_144;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23AEA671C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v40 = *((_QWORD *)v10 + 2);
      v39 = *((_QWORD *)v10 + 3);
      v13 = v40 + 1;
      v12 = v101;
      if (v40 >= v39 >> 1)
      {
        v12 = v101;
        v10 = sub_23AEA671C((char *)(v39 > 1), v40 + 1, 1, v10);
      }
      *((_QWORD *)v10 + 2) = v13;
      v41 = v10 + 32;
      v42 = &v10[16 * v40 + 32];
      *(_QWORD *)v42 = v14;
      *((_QWORD *)v42 + 1) = v11;
      if (v40)
      {
        while (1)
        {
          v43 = v13 - 1;
          if (v13 >= 4)
          {
            v48 = &v41[16 * v13];
            v49 = *((_QWORD *)v48 - 8);
            v50 = *((_QWORD *)v48 - 7);
            v54 = __OFSUB__(v50, v49);
            v51 = v50 - v49;
            if (v54)
              goto LABEL_133;
            v53 = *((_QWORD *)v48 - 6);
            v52 = *((_QWORD *)v48 - 5);
            v54 = __OFSUB__(v52, v53);
            v46 = v52 - v53;
            v47 = v54;
            if (v54)
              goto LABEL_134;
            v55 = v13 - 2;
            v56 = &v41[16 * v13 - 32];
            v58 = *(_QWORD *)v56;
            v57 = *((_QWORD *)v56 + 1);
            v54 = __OFSUB__(v57, v58);
            v59 = v57 - v58;
            if (v54)
              goto LABEL_136;
            v54 = __OFADD__(v46, v59);
            v60 = v46 + v59;
            if (v54)
              goto LABEL_139;
            if (v60 >= v51)
            {
              v78 = &v41[16 * v43];
              v80 = *(_QWORD *)v78;
              v79 = *((_QWORD *)v78 + 1);
              v54 = __OFSUB__(v79, v80);
              v81 = v79 - v80;
              if (v54)
                goto LABEL_143;
              v71 = v46 < v81;
              goto LABEL_103;
            }
          }
          else
          {
            if (v13 != 3)
            {
              v72 = *((_QWORD *)v10 + 4);
              v73 = *((_QWORD *)v10 + 5);
              v54 = __OFSUB__(v73, v72);
              v65 = v73 - v72;
              v66 = v54;
              goto LABEL_97;
            }
            v45 = *((_QWORD *)v10 + 4);
            v44 = *((_QWORD *)v10 + 5);
            v54 = __OFSUB__(v44, v45);
            v46 = v44 - v45;
            v47 = v54;
          }
          if ((v47 & 1) != 0)
            goto LABEL_135;
          v55 = v13 - 2;
          v61 = &v41[16 * v13 - 32];
          v63 = *(_QWORD *)v61;
          v62 = *((_QWORD *)v61 + 1);
          v64 = __OFSUB__(v62, v63);
          v65 = v62 - v63;
          v66 = v64;
          if (v64)
            goto LABEL_138;
          v67 = &v41[16 * v43];
          v69 = *(_QWORD *)v67;
          v68 = *((_QWORD *)v67 + 1);
          v54 = __OFSUB__(v68, v69);
          v70 = v68 - v69;
          if (v54)
            goto LABEL_141;
          if (__OFADD__(v65, v70))
            goto LABEL_142;
          if (v65 + v70 >= v46)
          {
            v71 = v46 < v70;
LABEL_103:
            if (v71)
              v43 = v55;
            goto LABEL_105;
          }
LABEL_97:
          if ((v66 & 1) != 0)
            goto LABEL_137;
          v74 = &v41[16 * v43];
          v76 = *(_QWORD *)v74;
          v75 = *((_QWORD *)v74 + 1);
          v54 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v54)
            goto LABEL_140;
          if (v77 < v65)
            goto LABEL_14;
LABEL_105:
          v82 = v43 - 1;
          if (v43 - 1 >= v13)
          {
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
            goto LABEL_153;
          }
          if (!v12)
            goto LABEL_155;
          v83 = &v41[16 * v82];
          v84 = *(_QWORD *)v83;
          v85 = v41;
          v86 = &v41[16 * v43];
          v87 = *((_QWORD *)v86 + 1);
          sub_23AEA6474((char *)(v12 + 8 * *(_QWORD *)v83), (char *)(v12 + 8 * *(_QWORD *)v86), v12 + 8 * v87, __dst);
          if (v103)
            goto LABEL_127;
          if (v87 < v84)
            goto LABEL_130;
          if (v43 > *((_QWORD *)v10 + 2))
            goto LABEL_131;
          *(_QWORD *)v83 = v84;
          *(_QWORD *)&v85[16 * v82 + 8] = v87;
          v88 = *((_QWORD *)v10 + 2);
          if (v43 >= v88)
            goto LABEL_132;
          v13 = v88 - 1;
          memmove(v86, v86 + 16, 16 * (v88 - 1 - v43));
          v41 = v85;
          *((_QWORD *)v10 + 2) = v88 - 1;
          v12 = v101;
          if (v88 <= 2)
            goto LABEL_14;
        }
      }
      v13 = 1;
LABEL_14:
      v4 = v100;
      if (v11 >= v100)
      {
        v2 = v103;
        if (v13 < 2)
        {
LABEL_127:
          swift_bridgeObjectRelease();
          *(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_23B1C671C();
          return swift_bridgeObjectRelease();
        }
LABEL_115:
        v89 = *v97;
        while (1)
        {
          v90 = v13 - 2;
          if (v13 < 2)
            goto LABEL_145;
          if (!v89)
            goto LABEL_157;
          v91 = v10;
          v92 = v10 + 32;
          v93 = *(_QWORD *)&v10[16 * v90 + 32];
          v94 = *(_QWORD *)&v92[16 * v13 - 8];
          sub_23AEA6474((char *)(v89 + 8 * v93), (char *)(v89 + 8 * *(_QWORD *)&v92[16 * v13 - 16]), v89 + 8 * v94, __dst);
          if (v2)
            goto LABEL_127;
          if (v94 < v93)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v91 = sub_23AEA6A88((uint64_t)v91);
          if (v90 >= *((_QWORD *)v91 + 2))
            goto LABEL_147;
          v95 = &v91[16 * v90 + 32];
          *(_QWORD *)v95 = v93;
          *((_QWORD *)v95 + 1) = v94;
          v96 = *((_QWORD *)v91 + 2);
          if (v13 > v96)
            goto LABEL_148;
          memmove(&v91[16 * v13 + 16], &v91[16 * v13 + 32], 16 * (v96 - v13));
          v10 = v91;
          *((_QWORD *)v91 + 2) = v96 - 1;
          v13 = v96 - 1;
          if (v96 <= 2)
            goto LABEL_127;
        }
      }
    }
    if (v18 == v19)
    {
      v20 = v17 < *(_QWORD *)(v16 + 24);
      v11 = v14 + 2;
      if (v14 + 2 >= v4)
      {
LABEL_36:
        if (!v20)
          goto LABEL_45;
LABEL_37:
        if (v11 < v14)
          goto LABEL_151;
        goto LABEL_38;
      }
    }
    else
    {
      v11 = v14 + 2;
      if (v14 + 2 >= v4)
        goto LABEL_45;
      v20 = 0;
    }
LABEL_24:
    if (v4 <= v11 + 1)
      v21 = v11 + 1;
    else
      v21 = v4;
    do
    {
      v22 = *(_QWORD *)(v12 + 8 * v11);
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v22 + 24);
      if (v18 < v23)
      {
        if (!v20)
          goto LABEL_45;
      }
      else if (v23 == v18)
      {
        if (((v20 ^ (v24 >= v17)) & 1) == 0)
          goto LABEL_36;
      }
      else if (v20)
      {
        goto LABEL_37;
      }
      ++v11;
      v17 = v24;
      v18 = v23;
    }
    while (v11 < v4);
    v11 = v21;
    goto LABEL_36;
  }
  if (v4 < 0)
    goto LABEL_150;
  if (v4)
    return sub_23AEA63F8(0, v4, 1, a1);
  return result;
}

uint64_t sub_23AEA63F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (_QWORD *)v5;
    while (1)
    {
      v9 = *v8;
      v10 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(*v8 + 16);
      if (v11 >= v10 && (v10 != v11 || *(_QWORD *)(v6 + 24) >= *(_QWORD *)(v9 + 24)))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23AEA6474(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t result;
  char *v32;
  char *v33;
  char *v34;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v34 = __src;
  v33 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v21 = &v4[8 * v13];
      v32 = v21;
      v34 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v22 = (char *)(a3 - 8);
        while (1)
        {
          v23 = v22 + 8;
          v24 = *((_QWORD *)v21 - 1);
          v25 = v6 - 8;
          v26 = *((_QWORD *)v6 - 1);
          v27 = *(_QWORD *)(v24 + 16);
          v28 = *(_QWORD *)(v26 + 16);
          if (v28 < v27
            || ((v29 = *(_QWORD *)(v24 + 24), v27 == v28) ? (v30 = v29 < *(_QWORD *)(v26 + 24)) : (v30 = 0), v30))
          {
            if (v23 != v6 || v22 >= v6)
              *(_QWORD *)v22 = v26;
            v34 = v6 - 8;
            v6 -= 8;
            if (v25 <= v7)
              goto LABEL_51;
          }
          else
          {
            v32 = v21 - 8;
            if (v23 < v21 || v22 >= v21 || v23 != v21)
              *(_QWORD *)v22 = *((_QWORD *)v21 - 1);
            v21 -= 8;
            if (v6 <= v7)
              goto LABEL_51;
          }
          v22 -= 8;
          if (v21 <= v4)
            goto LABEL_51;
        }
      }
      goto LABEL_51;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v32 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        v15 = *(_QWORD *)v6;
        v16 = *(_QWORD *)v4;
        v17 = *(_QWORD *)(*(_QWORD *)v6 + 16);
        v18 = *(_QWORD *)(*(_QWORD *)v4 + 16);
        if (v18 < v17 || (v17 == v18 ? (v19 = *(_QWORD *)(v15 + 24) < *(_QWORD *)(v16 + 24)) : (v19 = 0), v19))
        {
          v20 = v6 + 8;
          if (v7 < v6 || v7 >= v20 || v7 != v6)
            *(_QWORD *)v7 = v15;
        }
        else
        {
          if (v7 != v4)
            *(_QWORD *)v7 = v16;
          v4 += 8;
          v33 = v4;
          v20 = v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v20;
      }
      while ((unint64_t)v20 < a3);
      v34 = v7;
    }
LABEL_51:
    sub_23AEA6814((void **)&v34, (const void **)&v33, &v32);
    return 1;
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

char *sub_23AEA671C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6848);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_23AEA6814(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_23B1C70B8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_23AEA68BC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_23B1C70B8();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_23AEA69CC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_23B1C70B8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_23AEA6A88(uint64_t a1)
{
  return sub_23AEA671C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23AEA6A9C(_QWORD *a1)
{
  return sub_23ADADC6C(0, a1[2], 0, a1);
}

uint64_t sub_23AEA6AB0(_QWORD *a1)
{
  return sub_23ADAE004(0, a1[2], 0, a1);
}

uint64_t sub_23AEA6AC4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v2;
    *v2 = 0x8000000000000000;
    v8 = sub_23AEA6BA8(a1, isUniquelyReferenced_nonNull_native);
    *v2 = v11;
    swift_bridgeObjectRelease();
    return v8;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = sub_23B1C6E24();
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v6, 1))
  {
    v10 = sub_23B18E060(v5, v6 + 1);
    v8 = sub_23AEA6BA8(a1, 1);
    *v2 = v10;
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AEA6BA8(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v3 = v2;
  v6 = *v2;
  sub_23B1C74A8();
  sub_23B1C63E0();
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  v7 = sub_23B1C74E4();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  v10 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    v18 = 0;
    v17 = 1;
    goto LABEL_22;
  }
  v49 = v2;
  v11 = sub_23B1C63E0();
  v13 = v12;
  if (v11 == sub_23B1C63E0() && v13 == v14)
    goto LABEL_18;
  v16 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    v19 = ~v8;
    v9 = (v9 + 1) & v19;
    if (((*(_QWORD *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    {
      v18 = 0;
      v17 = 1;
      goto LABEL_21;
    }
    v17 = 1;
    while (1)
    {
      v20 = sub_23B1C63E0();
      v22 = v21;
      if (v20 == sub_23B1C63E0() && v22 == v23)
        break;
      v18 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
      {
        v17 = 0;
        goto LABEL_21;
      }
      v9 = (v9 + 1) & v19;
      if (((*(_QWORD *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_21;
    }
LABEL_18:
    v3 = v49;
    swift_bridgeObjectRelease_n();
    v17 = 0;
    v18 = 1;
    goto LABEL_22;
  }
  v17 = 0;
  v18 = 1;
LABEL_21:
  v3 = v49;
LABEL_22:
  v25 = *(_QWORD *)(v6 + 16);
  result = v25 + v17;
  if (__OFADD__(v25, v17))
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    return result;
  }
  v27 = *(_QWORD *)(v6 + 24);
  if (v27 >= result && (a2 & 1) != 0)
  {
    if ((v18 & 1) != 0)
      goto LABEL_52;
    goto LABEL_48;
  }
  if ((a2 & 1) != 0)
  {
    sub_23ADE3D08();
  }
  else
  {
    if (v27 >= result)
    {
      result = (uint64_t)sub_23ADE73F8();
      if ((v18 & 1) != 0)
        goto LABEL_52;
      goto LABEL_48;
    }
    sub_23ADE908C();
  }
  v28 = *v3;
  sub_23B1C74A8();
  sub_23B1C63E0();
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  result = sub_23B1C74E4();
  v29 = -1 << *(_BYTE *)(v28 + 32);
  v9 = result & ~v29;
  if (((*(_QWORD *)(v28 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    if ((v18 & 1) == 0)
      goto LABEL_48;
    goto LABEL_55;
  }
  v30 = v3;
  v31 = sub_23B1C63E0();
  v33 = v32;
  if (v31 == sub_23B1C63E0() && v33 == v34)
  {
LABEL_50:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v36 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
      v37 = ~v29;
      while (1)
      {
        v9 = (v9 + 1) & v37;
        if (((*(_QWORD *)(v28 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          break;
        v38 = sub_23B1C63E0();
        v40 = v39;
        if (v38 == sub_23B1C63E0() && v40 == v41)
          goto LABEL_50;
        v43 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v43 & 1) != 0)
          goto LABEL_51;
      }
      v3 = v30;
      if ((v18 & 1) != 0)
        goto LABEL_55;
LABEL_48:
      v44 = *v3;
      *(_QWORD *)(*v3 + 8 * (v9 >> 6) + 56) |= 1 << v9;
      *(_QWORD *)(*(_QWORD *)(v44 + 48) + 8 * v9) = a1;
      v45 = *(_QWORD *)(v44 + 16);
      v46 = __OFADD__(v45, 1);
      v47 = v45 + 1;
      if (!v46)
      {
        result = 0;
        *(_QWORD *)(v44 + 16) = v47;
        return result;
      }
      goto LABEL_57;
    }
  }
LABEL_51:
  v3 = v30;
  if ((v18 & 1) == 0)
  {
LABEL_55:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3130);
    result = sub_23B1C740C();
    __break(1u);
    goto LABEL_56;
  }
LABEL_52:
  v48 = *(_QWORD *)(*v3 + 48);
  result = *(_QWORD *)(v48 + 8 * v9);
  *(_QWORD *)(v48 + 8 * v9) = a1;
  return result;
}

uint64_t sub_23AEA6FE8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23AAB5A28(&qword_2569E6840, &qword_2569E6838, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6838);
          v12 = sub_23ACDBA90(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E08C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AEA71F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23AAB5A28((unint64_t *)&unk_2569E6880, &qword_2569E6878, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6878);
          v12 = sub_23ACDBA38(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23AA9F52C(0, (unint64_t *)&unk_2542E2010);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AEA7418(uint64_t result, int a2, char a3, uint64_t a4, int a5, char a6, uint64_t a7)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  if ((a6 & 1) != 0 || (a3 & 1) != 0)
    goto LABEL_34;
  v7 = result;
  if (a4 < result)
    goto LABEL_31;
  if (a5 != a2)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  if (result != a4)
  {
    if (*(_DWORD *)(a7 + 36) == a5)
    {
      v8 = a7 + 64;
      v9 = 1 << *(_BYTE *)(a7 + 32);
      v10 = (unint64_t)(v9 + 63) >> 6;
      result = 1;
      while (1)
      {
        if ((v7 & 0x8000000000000000) != 0 || (uint64_t)v7 >= v9)
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        v11 = v7 >> 6;
        v12 = *(_QWORD *)(v8 + 8 * (v7 >> 6));
        if (((v12 >> v7) & 1) == 0)
          goto LABEL_29;
        v13 = v12 & (-2 << (v7 & 0x3F));
        if (v13)
        {
          v7 = __clz(__rbit64(v13)) | v7 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = v11 + 1;
          v7 = 1 << *(_BYTE *)(a7 + 32);
          if (v11 + 1 < v10)
          {
            v15 = *(_QWORD *)(v8 + 8 * v14);
            if (!v15)
            {
              v14 = v11 + 2;
              v7 = 1 << *(_BYTE *)(a7 + 32);
              if (v11 + 2 >= v10)
                goto LABEL_18;
              v15 = *(_QWORD *)(v8 + 8 * v14);
              if (!v15)
              {
                while (v10 - 3 != v11)
                {
                  v15 = *(_QWORD *)(a7 + 88 + 8 * v11++);
                  if (v15)
                  {
                    v14 = v11 + 2;
                    goto LABEL_17;
                  }
                }
                v7 = 1 << *(_BYTE *)(a7 + 32);
                goto LABEL_18;
              }
            }
LABEL_17:
            v7 = __clz(__rbit64(v15)) + (v14 << 6);
          }
        }
LABEL_18:
        if (v7 == a4)
          return result;
        if (__OFADD__(result++, 1))
          goto LABEL_30;
      }
    }
    goto LABEL_33;
  }
  return 0;
}

uint64_t sub_23AEA754C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + 64 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return sub_23B1C6E00();
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23AEA75C8(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 16 * result);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23AEA764C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[4];
  char v7;
  _BYTE v8[40];

  sub_23AA724E8(a3 + 8, (uint64_t)v8, &qword_2569E5EC0);
  sub_23AA724E8((uint64_t)v8, (uint64_t)v6, &qword_2569E5EC0);
  sub_23AEADC58((uint64_t)v8, (uint64_t)sub_23AA88218, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEADB80);
  sub_23AE85CEC((uint64_t)v8);
  v4 = v3;
  sub_23AEADBEC(v6[0], v6[1], v6[2], v6[3], v7, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AA862DC);
  return v4;
}

uint64_t sub_23AEA7714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[4];
  char v7;
  _BYTE v8[40];
  _BYTE v9[40];

  sub_23AA724E8(a3 + 8, (uint64_t)v9, &qword_2569E5EB8);
  sub_23AEADC58((uint64_t)v9, (uint64_t)sub_23AB5692C, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEADB80);
  sub_23ADFF568();
  sub_23AEADC58((uint64_t)v9, (uint64_t)sub_23AB7C6B4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEADBEC);
  sub_23AA724E8((uint64_t)v9, (uint64_t)v6, &qword_2569E5EB8);
  sub_23AEADC58((uint64_t)v9, (uint64_t)sub_23AB5692C, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEADB80);
  sub_23AE85CEC((uint64_t)v8);
  v4 = v3;
  sub_23AEADC58((uint64_t)v8, (uint64_t)sub_23AA862DC, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEADBEC);
  sub_23AEADBEC(v6[0], v6[1], v6[2], v6[3], v7, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23AB7C6B4);
  return v4;
}

uint64_t sub_23AEA7844@<X0>(unsigned __int8 *a1@<X0>, const void *a2@<X1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t result;
  _BYTE __dst[496];

  v4 = *a1;
  memcpy(__dst, a2, sizeof(__dst));
  sub_23AD824BC(v4);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AE2A060(v4);
  sub_23B1C64F4();
  result = swift_bridgeObjectRelease();
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_23AEA7914@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t))(result + 24);
  if (v3 && (v4 = swift_retain(), v5 = v3(v4), result = sub_23AAB7948((uint64_t)v3), v5))
  {
    sub_23AE2C874();
    result = swift_release();
    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  *a2 = v6;
  return result;
}

void sub_23AEA7984(id *a1)
{
  id v1;

  sub_23ADE0CE4(&v1, *a1);

}

uint64_t sub_23AEA79CC@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t)@<X2>, uint64_t (*a3)(uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int16 v22;
  char v23;

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v11 = a1[4];
  v12 = a1[5];
  v13 = a1[6];
  v14 = a1[7];
  v15 = a1[8];
  v16 = a1[9];
  v17 = a1[10];
  v18 = a1[11];
  v19 = a1[12];
  v20 = a1[13];
  v21 = *((_BYTE *)a1 + 114);
  v22 = *((_WORD *)a1 + 56);
  v23 = *((_BYTE *)a1 + 115);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_QWORD *)(a4 + 16) = v9;
  *(_QWORD *)(a4 + 24) = v10;
  *(_QWORD *)(a4 + 32) = v11;
  *(_QWORD *)(a4 + 40) = v12;
  *(_QWORD *)(a4 + 48) = v13;
  *(_QWORD *)(a4 + 56) = v14;
  *(_QWORD *)(a4 + 64) = v15;
  *(_QWORD *)(a4 + 72) = v16;
  *(_QWORD *)(a4 + 80) = v17;
  *(_QWORD *)(a4 + 88) = v18;
  *(_QWORD *)(a4 + 96) = v19;
  *(_QWORD *)(a4 + 104) = v20;
  *(_BYTE *)(a4 + 114) = v21;
  *(_WORD *)(a4 + 112) = v22;
  *(_BYTE *)(a4 + 115) = v23;
  a2(v8);
  if (qword_2542DE248 != -1)
    swift_once();
  return a3(a4, qword_2542EDC50);
}

uint64_t sub_23AEA7AAC(uint64_t *a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD, uint64_t, uint64_t), uint64_t (*a5)(BOOL, unint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t (*v15)(BOOL, unint64_t, uint64_t, uint64_t);
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v26 = *(_BYTE *)a2;
  v8 = *(_QWORD *)(a2 + 16);
  v24 = *(_QWORD *)(a2 + 32);
  v25 = *(_QWORD *)(a2 + 24);
  v23 = *(_QWORD *)(a2 + 40);
  v22 = *(_BYTE *)(a2 + 48);
  v21 = *(_QWORD *)(a2 + 56);
  v19 = *(_QWORD *)(a2 + 8);
  v20 = *(_QWORD *)(a2 + 64);
  v9 = *a1;
  v10 = *((unsigned __int8 *)a1 + 8);
  v11 = *((unsigned __int8 *)a1 + 9);
  v12 = *((_BYTE *)a1 + 10);
  v13 = *a3;
  a4(*a1, v10, v11);
  sub_23AB7B810(a2);
  result = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v13;
  v15 = a5;
  if ((result & 1) == 0)
  {
    result = a5(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
    v13 = result;
    *a3 = result;
  }
  v17 = *(_QWORD *)(v13 + 16);
  v16 = *(_QWORD *)(v13 + 24);
  if (v17 >= v16 >> 1)
  {
    result = v15(v16 > 1, v17 + 1, 1, v13);
    v13 = result;
    *a3 = result;
  }
  *(_QWORD *)(v13 + 16) = v17 + 1;
  v18 = v13 + 88 * v17;
  *(_QWORD *)(v18 + 32) = v9;
  *(_BYTE *)(v18 + 40) = v10;
  *(_BYTE *)(v18 + 41) = v11;
  *(_BYTE *)(v18 + 42) = v12;
  *(_BYTE *)(v18 + 48) = v26;
  *(_QWORD *)(v18 + 56) = v19;
  *(_QWORD *)(v18 + 64) = v8;
  *(_QWORD *)(v18 + 72) = v25;
  *(_QWORD *)(v18 + 80) = v24;
  *(_QWORD *)(v18 + 88) = v23;
  *(_BYTE *)(v18 + 96) = v22;
  *(_QWORD *)(v18 + 104) = v21;
  *(_QWORD *)(v18 + 112) = v20;
  return result;
}

uint64_t sub_23AEA7C20@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  _QWORD v10[3];
  __int128 v11;
  uint64_t v12;
  char v13;

  v5 = *((_QWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 24);
  v11 = *a2;
  v12 = v5;
  v13 = v6;
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 16);
  v10[2] = &v11;
  swift_bridgeObjectRetain();
  v8 = sub_23ADF8F30((uint64_t (*)(_QWORD *))sub_23AEB4670, (uint64_t)v10, v7);
  result = swift_bridgeObjectRelease();
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_23AEA7CC8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  sub_23AE06408(*(_QWORD *)a1, (uint64_t)v3, (uint64_t)v4, v5, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
  if ((v7 & 1) == 0)
    return 0;
  sub_23AAFA44C(v2, v3, v4, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_23ABD7550(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23ABE4D94(v2, v3, v4, v5);
  return v8 & 1;
}

uint64_t sub_23AEA7D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  __int16 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  _QWORD v11[3];
  _OWORD v12[2];
  uint64_t v13;
  __int16 v14;

  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_WORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v7;
  v13 = v5;
  v14 = v6;
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  v11[2] = v12;
  swift_bridgeObjectRetain();
  v9 = sub_23ADF938C((uint64_t (*)(_OWORD *))sub_23AEB4B08, (uint64_t)v11, v8);
  result = swift_bridgeObjectRelease();
  *a3 = v9 & 1;
  return result;
}

uint64_t sub_23AEA7E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  _BYTE v7[48];
  _BYTE v8[48];

  sub_23AA724E8(a1, (uint64_t)v7, (uint64_t *)&unk_2542E05B0);
  v4 = *(_QWORD *)(a1 + 48);
  sub_23AA724E8(a2, (uint64_t)v8, (uint64_t *)&unk_2542E05B0);
  if ((sub_23AE06DC8((uint64_t)v7) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_23ABD7550(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_23AEA7EEC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[48];
  _BYTE v5[48];

  sub_23AA724E8(a1, (uint64_t)v4, (uint64_t *)&unk_2542E05B0);
  sub_23AA724E8(a2, (uint64_t)v5, (uint64_t *)&unk_2542E05B0);
  return sub_23AE06DC8((uint64_t)v4) & 1;
}

_QWORD *sub_23AEA7F54@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
  {
    result = (_QWORD *)sub_23AABA3E0();
    *a2 = v5;
  }
  return result;
}

uint64_t sub_23AEA7FA0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, __int128 *)@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(unsigned int *)(a1 + 36);
  result = sub_23AAB7888(a1);
  if ((v8 & 1) != 0)
    goto LABEL_37;
  v9 = v7;
  if ((_DWORD)v5 != (_DWORD)v7)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  v10 = result;
  v11 = 1 << v4;
  v23 = 1 << v4;
  if (result != 1 << v4)
  {
    if ((result & 0x8000000000000000) == 0 && result < v23)
    {
      v13 = a1 + 64;
      while (1)
      {
        if ((_DWORD)v5 != (_DWORD)v9)
          goto LABEL_32;
        v14 = v10 >> 6;
        if ((*(_QWORD *)(v13 + 8 * (v10 >> 6)) & (1 << v10)) == 0)
          goto LABEL_32;
        v24 = *(_OWORD *)(*(_QWORD *)(a1 + 56) + 16 * v10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a2(&v25, &v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = *(_QWORD *)(v25 + 16);
        result = swift_bridgeObjectRelease();
        if (v15)
        {
          v12 = 0;
          goto LABEL_30;
        }
        v11 = 1 << *(_BYTE *)(a1 + 32);
        if ((uint64_t)v10 >= v11)
          goto LABEL_33;
        v16 = *(_QWORD *)(v13 + 8 * v14);
        if ((v16 & (1 << v10)) == 0)
          goto LABEL_34;
        if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
          goto LABEL_35;
        v17 = v16 & (-2 << (v10 & 0x3F));
        if (v17)
        {
          v10 = __clz(__rbit64(v17)) | v10 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = v14 + 1;
          v19 = (unint64_t)(v11 + 63) >> 6;
          v10 = 1 << *(_BYTE *)(a1 + 32);
          if (v14 + 1 < v19)
          {
            v20 = *(_QWORD *)(v13 + 8 * v18);
            if (!v20)
            {
              v18 = v14 + 2;
              v10 = 1 << *(_BYTE *)(a1 + 32);
              if (v14 + 2 >= v19)
                goto LABEL_19;
              v20 = *(_QWORD *)(v13 + 8 * v18);
              if (!v20)
              {
                while (v19 - 3 != v14)
                {
                  v20 = *(_QWORD *)(a1 + 88 + 8 * v14++);
                  if (v20)
                  {
                    v18 = v14 + 2;
                    goto LABEL_18;
                  }
                }
                v10 = 1 << *(_BYTE *)(a1 + 32);
                goto LABEL_19;
              }
            }
LABEL_18:
            v10 = __clz(__rbit64(v20)) + (v18 << 6);
          }
        }
LABEL_19:
        if (v10 == v23)
          goto LABEL_4;
        if ((v10 & 0x8000000000000000) == 0)
        {
          v9 = v5;
          if ((uint64_t)v10 < v11)
            continue;
        }
        break;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_4:
  v12 = 1;
  v10 = v11;
  v9 = v5;
LABEL_30:
  *(_QWORD *)a3 = v10;
  *(_QWORD *)(a3 + 8) = v9;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = v12;
  return result;
}

uint64_t sub_23AEA81E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, __int128 *))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  int v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v58;
  __int128 v60;
  uint64_t v61;

  result = sub_23AEA8750(a2, a1);
  if ((result & 1) != 0)
  {
    v7 = result;
    v8 = 1 << *(_BYTE *)(a3 + 32);
    v9 = *(_DWORD *)(a3 + 36);
    v10 = sub_23AAB7888(a3);
    v12 = v11;
    v14 = v13 & 1;
    sub_23AEA7418(v8, v9, 0, v10, v11, v13 & 1, a3);
    sub_23AB3D0AC(v10, v12, v14);
    result = v7;
  }
  if ((*(_BYTE *)(a1 + 16) & 1) != 0 || (*(_BYTE *)(a2 + 16) & 1) != 0)
    goto LABEL_61;
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a2 + 8);
  if ((_DWORD)v15 != (_DWORD)v16)
    goto LABEL_57;
  v17 = *(_QWORD *)a2;
  v18 = *(_QWORD *)(a1 + 24);
  LODWORD(v19) = *(unsigned __int8 *)(a1 + 32);
  v20 = *(_QWORD *)(a2 + 24);
  LODWORD(v21) = *(unsigned __int8 *)(a2 + 32);
  v58 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 == *(_QWORD *)a2)
  {
    if (((v19 | v21) & 1) != 0)
      return 0;
LABEL_12:
    v26 = sub_23AEA75C8(v58, v15, 0, a3);
    v21 = v20;
    v20 = v27;
    *(_QWORD *)&v60 = v26;
    *((_QWORD *)&v60 + 1) = v27;
    a4(&v61, &v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = v21 - v18;
    if (!__OFSUB__(v21, v18))
      return v22;
    __break(1u);
    goto LABEL_15;
  }
  v54 = result;
  if ((result & 1) != 0)
  {
    v23 = sub_23AEA8750(a1, a2);
    v24 = v18;
    v25 = v19;
    v19 = v17;
    v18 = v16;
    if (!v23)
      goto LABEL_16;
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  v24 = v20;
  v25 = v21;
  v20 = v18;
  LOBYTE(v21) = v19;
  v19 = v58;
  v18 = v15;
  v58 = v17;
  LODWORD(v15) = v16;
LABEL_16:
  v53 = v25;
  v50 = v24;
  v51 = v18;
  v52 = v19;
  if ((v21 & 1) != 0)
  {
    result = sub_23AAB75B0(v19, v18, 0);
    v22 = 0;
    v28 = v18;
  }
  else
  {
    v29 = v19;
    *(_QWORD *)&v60 = sub_23AEA75C8(v19, v18, 0, a3);
    *((_QWORD *)&v60 + 1) = v30;
    sub_23AAB75B0(v19, v18, 0);
    swift_bridgeObjectRetain();
    swift_retain();
    a4(&v61, &v60);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v61 + 16);
    result = swift_bridgeObjectRelease();
    v22 = v31 - v20;
    if (__OFSUB__(v31, v20))
    {
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    v19 = sub_23AEA754C(v19, v18, 0, a3);
    v28 = v32;
    v34 = v33;
    sub_23AB3D0AC(v29, v18, 0);
    swift_release();
    result = swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
      goto LABEL_62;
  }
  if ((_DWORD)v28 != (_DWORD)v15)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v35 = a3 + 64;
  v55 = v28;
  v56 = v28;
  v36 = v28;
  while (v19 < v58)
  {
    if (v19 < 0 || v19 >= 1 << *(_BYTE *)(a3 + 32))
      goto LABEL_50;
    v40 = (unint64_t)v19 >> 6;
    if ((*(_QWORD *)(v35 + 8 * ((unint64_t)v19 >> 6)) & (1 << v19)) == 0)
      goto LABEL_51;
    if (*(_DWORD *)(a3 + 36) != (_DWORD)v36)
      goto LABEL_52;
    v60 = *(_OWORD *)(*(_QWORD *)(a3 + 56) + 16 * v19);
    swift_bridgeObjectRetain();
    swift_retain();
    v41 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(&v61, &v60);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(v61 + 16);
    result = swift_bridgeObjectRelease();
    v43 = __OFADD__(v41, v42);
    v22 = v41 + v42;
    if (v43)
      goto LABEL_53;
    v37 = 1 << *(_BYTE *)(a3 + 32);
    if (v19 >= v37)
      goto LABEL_54;
    v44 = *(_QWORD *)(v35 + 8 * v40);
    if ((v44 & (1 << v19)) == 0)
      goto LABEL_55;
    if (*(_DWORD *)(a3 + 36) != (_DWORD)v36)
      goto LABEL_56;
    v45 = v44 & (-2 << (v19 & 0x3F));
    if (v45)
    {
      v37 = __clz(__rbit64(v45)) | v19 & 0xFFFFFFFFFFFFFFC0;
      v38 = v55;
    }
    else
    {
      v46 = v40 + 1;
      v47 = (unint64_t)(v37 + 63) >> 6;
      v38 = v55;
      if (v40 + 1 < v47)
      {
        v48 = *(_QWORD *)(v35 + 8 * v46);
        if (!v48)
        {
          v46 = v40 + 2;
          if (v40 + 2 >= v47)
            goto LABEL_23;
          v48 = *(_QWORD *)(v35 + 8 * v46);
          if (!v48)
          {
            while (v47 - 3 != v40)
            {
              v48 = *(_QWORD *)(a3 + 88 + 8 * v40++);
              if (v48)
              {
                v46 = v40 + 2;
                goto LABEL_37;
              }
            }
            goto LABEL_23;
          }
        }
LABEL_37:
        v37 = __clz(__rbit64(v48)) + (v46 << 6);
      }
    }
LABEL_23:
    v19 = v37;
    v39 = (_DWORD)v36 == v38;
    v36 = v56;
    if (!v39)
      goto LABEL_49;
  }
  sub_23AB3D0AC(v52, v51, 0);
  if ((v53 & 1) == 0)
  {
    *(_QWORD *)&v60 = sub_23AEA75C8(v19, v36, 0, a3);
    *((_QWORD *)&v60 + 1) = v49;
    swift_bridgeObjectRetain();
    swift_retain();
    a4(&v61, &v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AB3D0AC(v19, v36, 0);
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v43 = __OFADD__(v22, v50);
    v22 += v50;
    if (!v43)
      goto LABEL_46;
    goto LABEL_59;
  }
  result = sub_23AB3D0AC(v19, v36, 0);
LABEL_46:
  if ((v54 & 1) == 0)
    return v22;
  v43 = __OFSUB__(0, v22);
  v22 = -v22;
  if (!v43)
    return v22;
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

BOOL sub_23AEA8750(_BOOL8 result, uint64_t a2)
{
  BOOL v2;

  if ((*(_BYTE *)(result + 16) & 1) != 0 || (*(_BYTE *)(a2 + 16) & 1) != 0)
    goto LABEL_15;
  if (*(_QWORD *)(result + 8) != *(_DWORD *)(a2 + 8))
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v2 = *(_QWORD *)result < *(_QWORD *)a2;
  if (*(_QWORD *)result == *(_QWORD *)a2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 32) & 1) != 0)
        return 0;
      goto LABEL_14;
    }
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
LABEL_16:
      __break(1u);
      return result;
    }
    return *(_QWORD *)(result + 24) < *(_QWORD *)(a2 + 24);
  }
  return v2;
}

uint64_t (*sub_23AEA87C0(uint64_t a1, uint64_t a2, int a3, char a4, uint64_t a5, void (*a6)(_QWORD *)))()
{
  uint64_t v7;
  _QWORD v9[2];

  v9[0] = sub_23AEA75C8(a2, a3, a4 & 1, a5);
  v9[1] = v7;
  a6(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return j__s9libfssync25JobLockPendingFlushStatusVwxx;
}

uint64_t (*sub_23AEA8848(uint64_t a1, uint64_t a2, int a3, char a4, uint64_t a5, void (*a6)(_QWORD *)))()
{
  uint64_t v7;
  _QWORD v9[2];

  v9[0] = sub_23AEA75C8(a2, a3, a4 & 1, a5);
  v9[1] = v7;
  a6(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return destroy for JobLockPendingFlushStatus;
}

_QWORD *sub_23AEA88D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  swift_weakInit();
  swift_weakAssign();
  v2 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6400);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  swift_weakInit();
  v4 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6408);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  v7 = a1[4];
  v6 = a1[5];
  v9 = a1[6];
  v8 = a1[7];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v10 = sub_23AD03314(v3, v5, v6, v7, v9, v8);
  swift_release();
  return v10;
}

uint64_t sub_23AEA89CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t result;

  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 40) = 1;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_OWORD *)(v4 + 88) = xmmword_23B1CA770;
  *(_QWORD *)(v4 + 112) = a2;
  *(_QWORD *)(v4 + 120) = a3;
  *(_QWORD *)(v4 + 128) = a4;
  *(_QWORD *)(v4 + 136) = a1;
  if ((a4 & 0x8000) == 0)
  {
    v5 = a1;
LABEL_4:
    v8 = *(_QWORD *)(v4 + 88);
    v7 = *(void **)(v4 + 96);
    *(_QWORD *)(v4 + 88) = v8 | 0x2000;
    *(_BYTE *)(v4 + 104) = 0;
    swift_retain();
    sub_23AAAEE10((void *)v8, v7, 0);
    return v4;
  }
  *(_QWORD *)(v4 + 88) = 2359552;
  *(_BYTE *)(v4 + 104) = 0;
  v6 = a1;
  sub_23AAAE478((id)0x40100, 0, 0);
  sub_23AAAEE10((void *)0x40100, 0, 0);
  if (!*(_BYTE *)(v4 + 104))
    goto LABEL_4;
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

void sub_23AEA8AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  void (*v6)(void **);
  id v7;
  int v8;
  uint64_t v9;
  char v10;
  void *v11;

  v3 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v11 = *(void **)a1;
    v5 = *(_QWORD *)(a2 + 24);
    v6 = *(void (**)(void **))(*(_QWORD *)v5 + 376);
    v7 = v3;
    v6(&v11);
    if (!v2)
    {
      v8 = *(unsigned __int8 *)(a1 + 208);
      if (v8 != 255)
      {
        v9 = *(_QWORD *)(a1 + 200);
        v10 = v8;
        (*(void (**)(uint64_t *))(*(_QWORD *)v5 + 384))(&v9);
      }
    }

  }
}

void sub_23AEA8B94(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v5;
  void *v6;
  void (*v7)(uint64_t *);
  id v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *((unsigned __int8 *)a1 + 8);
  if (v3 != 255)
  {
    v10 = *a1;
    v11 = v3;
    v5 = *(_QWORD *)(a2 + 24);
    (*(void (**)(uint64_t *))(*(_QWORD *)v5 + 376))(&v10);
    if (!v2)
    {
      v6 = (void *)a1[30];
      if (v6)
      {
        v9 = a1[30];
        v7 = *(void (**)(uint64_t *))(*(_QWORD *)v5 + 384);
        v8 = v6;
        v7(&v9);

      }
    }
  }
}

uint64_t sub_23AEA8C30(uint64_t a1)
{
  int64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23AAB5A68(0, v1, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23AEA8E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23AAB5A68(0, v3, 0);
    v4 = v13;
    v7 = a1 + 32;
    do
    {
      ++v7;
      swift_bridgeObjectRetain();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v13 + 16);
      v8 = *(_QWORD *)(v13 + 24);
      if (v9 >= v8 >> 1)
        sub_23AAB5A68(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v10 = v13 + 16 * v9;
      *(_QWORD *)(v10 + 32) = a2;
      *(_QWORD *)(v10 + 40) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_23AEA8FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  unsigned __int8 *v7;
  unsigned __int8 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23AAB5A68(0, v3, 0);
    v4 = v14;
    v7 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v8 = *v7++;
      sub_23AAABA5C(v8);
      swift_bridgeObjectRetain();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      if (v10 >= v9 >> 1)
        sub_23AAB5A68(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v11 = v14 + 16 * v10;
      *(_QWORD *)(v11 + 32) = a2;
      *(_QWORD *)(v11 + 40) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_23AEA90B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  unsigned __int8 *v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23AAB5A68(0, v3, 0);
    v4 = v16;
    v7 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v7++;
      v8 = v9;
      v10 = v9 >> 2;
      if (v9 >> 2 == 55 || v10 == 63)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_23B06D430(v8);
      }
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v16 + 16);
      v11 = *(_QWORD *)(v16 + 24);
      if (v12 >= v11 >> 1)
        sub_23AAB5A68(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v16 + 16) = v12 + 1;
      v13 = v16 + 16 * v12;
      *(_QWORD *)(v13 + 32) = a2;
      *(_QWORD *)(v13 + 40) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_23AEA91F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23AAB5A68(0, v3, 0);
    v7 = a1 + 32;
    v4 = v13;
    do
    {
      ++v7;
      swift_bridgeObjectRetain();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v13 + 16);
      v8 = *(_QWORD *)(v13 + 24);
      if (v9 >= v8 >> 1)
        sub_23AAB5A68(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v10 = v13 + 16 * v9;
      *(_QWORD *)(v10 + 32) = a2;
      *(_QWORD *)(v10 + 40) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_23AEA9348(uint64_t a1)
{
  int64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23AAB5A68(0, v1, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23AEA962C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  unsigned __int8 *v7;
  unsigned __int8 v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23AAB5A68(0, v3, 0);
    v4 = v15;
    v7 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v7++;
      v8 = v9;
      switch(v9)
      {
        case 28:
        case 29:
        case 30:
        case 31:
        case 32:
        case 33:
        case 34:
          swift_bridgeObjectRetain();
          break;
        default:
          sub_23AAB0660(v8);
          swift_bridgeObjectRetain();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          break;
      }
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v15 + 16);
      v10 = *(_QWORD *)(v15 + 24);
      if (v11 >= v10 >> 1)
        sub_23AAB5A68(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v15 + 16) = v11 + 1;
      v12 = v15 + 16 * v11;
      *(_QWORD *)(v12 + 32) = a2;
      *(_QWORD *)(v12 + 40) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_23AEA989C(unint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = (a2 >> 8) & 1;
  v19 = 0x203D20646E696BLL;
  v20 = 0xE700000000000000;
  sub_23AA88218((id)a1, a2, BYTE1(a2) & 1);
  sub_23AA862DC((id)a1, a2, v6);
  v7 = MEMORY[0x24BEE1768];
  v18 = MEMORY[0x24BEE1768];
  v16 = 0;
  sub_23AA94C90((uint64_t)&v16);
  v9 = v8;
  sub_23AA8A05C((uint64_t)&v16, qword_2542E5640);
  if (!v9)
    goto LABEL_13;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  if ((a2 & 0x100) != 0)
  {
    sub_23AA88218((id)a1, a2, 1);
    sub_23AA862DC((id)a1, a2, 1);
    goto LABEL_11;
  }
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_23AA88218((id)a1, a2, 0);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v16 = 0x65746920444E4120;
  v17 = 0xEF203D2064695F6DLL;
  if (!(_BYTE)a2)
    goto LABEL_8;
  if (a2 != 1)
  {
    v10 = (unint64_t)(a1 != 0) << 63;
    goto LABEL_10;
  }
  v10 = a1;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_8:
    v10 = -(uint64_t)a1;
  }
LABEL_10:
  v11 = objc_msgSend(a3, sel_bindLongParameter_, v10);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
LABEL_11:
  sub_23AA88218((id)a1, a2, v6);
  sub_23AA862DC((id)a1, a2, v6);
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v12 = qword_23B1DB328[SBYTE2(a2)];
  v18 = v7;
  v16 = v12;
  sub_23AA94C90((uint64_t)&v16);
  v14 = v13;
  sub_23AA8A05C((uint64_t)&v16, qword_2542E5640);
  if (v14)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v19;
  }
LABEL_13:
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AEA9B94(void *a1, uint64_t a2, void *a3)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[2];
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v6 = (a2 >> 8) & 1;
  v7 = sub_23B1C6428();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = 0x203D20646E696BLL;
  v28 = 0xE700000000000000;
  sub_23AB5692C(a1, a2, v6);
  sub_23AB7C6B4(a1, a2, v6);
  v26 = MEMORY[0x24BEE1768];
  v24 = 0;
  sub_23AA94C90((uint64_t)&v24);
  v12 = v11;
  sub_23AA8A05C((uint64_t)&v24, qword_2542E5640);
  if (!v12)
    goto LABEL_9;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  if ((a2 & 0x100) != 0)
  {
    sub_23AB5692C(a1, a2, 1);
  }
  else
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_23AB5692C(a1, a2, 0);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v24 = 0x65746920444E4120;
    v25 = 0xEF203D2064695F6DLL;
    sub_23B1C63E0();
    sub_23B1C641C();
    v13 = sub_23B1C63EC();
    v15 = v14;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v15 >> 60 == 15)
    {
      __break(1u);
      goto LABEL_9;
    }
    v16 = (void *)sub_23B1C5AA4();
    sub_23AAA3E18(v13, v15);
    v17 = objc_msgSend(a3, sel_bindObjectParameter_, v16);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AB7C6B4(a1, a2, 0);
  }
  v18 = MEMORY[0x24BEE1768];
  sub_23AB5692C(a1, a2, v6);
  sub_23AB7C6B4(a1, a2, v6);
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v23[0] = 0xD000000000000010;
  v23[1] = 0x800000023B1F8C40;
  v19 = qword_23B1DB328[SBYTE2(a2)];
  v26 = v18;
  v24 = v19;
  sub_23AA94C90((uint64_t)&v24);
  v21 = v20;
  sub_23AA8A05C((uint64_t)&v24, qword_2542E5640);
  if (v21)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v27;
  }
LABEL_9:
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AEA9F34(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, __int16 a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  uint64_t v8;
  uint64_t v11;
  char v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v35[8];
  _OWORD v36[9];

  v11 = v8;
  v16 = a4 & 1;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 112) = 0;
  *(_BYTE *)(v11 + 120) = 1;
  *(_QWORD *)(v11 + 128) = 0;
  *(_BYTE *)(v11 + 136) = 1;
  v17 = (_OWORD *)(v11 + 176);
  *(_QWORD *)(v11 + 144) = 0;
  *(_QWORD *)(v11 + 152) = 0;
  if (qword_2542E6ED8 != -1)
    swift_once();
  v18 = xmmword_2542EDDC0;
  v19 = unk_2542EDDD0;
  v36[4] = xmmword_2542EDDC0;
  v36[5] = unk_2542EDDD0;
  v20 = xmmword_2542EDDE0;
  v21 = unk_2542EDDF0;
  v36[6] = xmmword_2542EDDE0;
  v36[7] = unk_2542EDDF0;
  v22 = *(_OWORD *)algn_2542EDD90;
  v36[0] = xmmword_2542EDD80;
  v36[1] = *(_OWORD *)algn_2542EDD90;
  v23 = xmmword_2542EDDA0;
  v24 = unk_2542EDDB0;
  v36[2] = xmmword_2542EDDA0;
  v36[3] = unk_2542EDDB0;
  *v17 = xmmword_2542EDD80;
  *(_OWORD *)(v11 + 192) = v22;
  *(_OWORD *)(v11 + 208) = v23;
  *(_OWORD *)(v11 + 224) = v24;
  *(_OWORD *)(v11 + 240) = v18;
  *(_OWORD *)(v11 + 256) = v19;
  *(_OWORD *)(v11 + 272) = v20;
  *(_OWORD *)(v11 + 288) = v21;
  *(_QWORD *)(v11 + 24) = a1;
  *(_BYTE *)(v11 + 32) = v16;
  v25 = a1;
  sub_23AB7C0DC((uint64_t)v36);
  *(_QWORD *)(v11 + 56) = sub_23AA6F854(0, 0xE000000000000000, 0x746F726854626F4ALL, 0xEC0000002E656C74, (uint64_t (*)(uint64_t))sub_23AD7ECFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA8C30);
  *(_QWORD *)(v11 + 64) = v26;
  *(_QWORD *)(v11 + 72) = sub_23AA6F854(0, 0xE000000000000000, 0xD000000000000037, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA91F8);
  *(_QWORD *)(v11 + 80) = v27;
  *(_QWORD *)(v11 + 160) = a5;
  v28 = a5;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = 0xE000000000000000;
  *(_BYTE *)(v11 + 104) = (a6 & 2) == 0;
  *(_BYTE *)(v11 + 105) = (a6 & 0x10) != 0;
  *(_WORD *)(v11 + 168) = 1;
  *(_BYTE *)(v11 + 170) = 0;
  *(_QWORD *)&v35[0] = a2;
  *((_QWORD *)&v35[0] + 1) = a3;
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 88) = a2;
  *(_QWORD *)(v11 + 96) = a3;
  if ((a6 & 0x100) != 0)
  {
    v29 = *(_OWORD *)(v11 + 256);
    v35[4] = *(_OWORD *)(v11 + 240);
    v35[5] = v29;
    v30 = *(_OWORD *)(v11 + 288);
    v35[6] = *(_OWORD *)(v11 + 272);
    v35[7] = v30;
    v31 = *(_OWORD *)(v11 + 192);
    v35[0] = *v17;
    v35[1] = v31;
    v32 = *(_OWORD *)(v11 + 224);
    v35[2] = *(_OWORD *)(v11 + 208);
    v35[3] = v32;
    *v17 = 0u;
    *(_OWORD *)(v11 + 192) = 0u;
    *(_BYTE *)(v11 + 208) = 0;
    *(_QWORD *)(v11 + 216) = 0;
    *(_QWORD *)(v11 + 224) = 0;
    *(_QWORD *)(v11 + 232) = sub_23AAEC8DC;
    *(_QWORD *)(v11 + 240) = 0;
    *(_OWORD *)(v11 + 248) = xmmword_23B1DAA50;
    *(_OWORD *)(v11 + 280) = 0u;
    *(_OWORD *)(v11 + 264) = 0u;
    *(_QWORD *)(v11 + 296) = 1000;
    sub_23AB7C104((uint64_t)v35);
  }
  if (qword_2542E5068 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDE20, sel_ping);
  if (qword_2542E6F00 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDE08, sel_ping);
  return v11;
}

uint64_t sub_23AEAA224()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_23AEAA2B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8;
  void *v9;
  id v10;
  id v11;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain_n();
  v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE798);
  sub_23AAB5A28(&qword_2542DE790, &qword_2542DE798, MEMORY[0x24BEE2B40]);
  sub_23AAA420C();
  sub_23B1C6644();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_23B1C63BC();
    v10 = objc_msgSend(v8, sel_bindStringParameter_, v9);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (a5)
  {
    v11 = a5;
    sub_23ADFD3AC((uint64_t)v11, v8);

  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

unint64_t sub_23AEAA58C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  id v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v14;

  v14 = a5;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain_n();
  v9 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE798);
  sub_23AAB5A28(&qword_2542DE790, &qword_2542DE798, MEMORY[0x24BEE2B40]);
  sub_23AAA420C();
  sub_23B1C6644();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_23B1C63BC();
    v11 = objc_msgSend(v9, sel_bindStringParameter_, v10, v14);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (a6 != -1)
  {
    v12 = v9;
    sub_23ADFD538(v14, a6, v12);

  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

void sub_23AEAA874()
{
  type metadata accessor for SQLJobRegistry();
}

uint64_t sub_23AEAA8AC()
{
  return swift_dynamicCastClassUnconditional();
}

uint64_t sub_23AEAA8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  _QWORD **v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD **v23;
  char *v24;
  void *v25;
  void *v26;
  id v27;
  char v28;
  void *v29;
  BOOL v30;
  id v31;
  void *v32;
  void *v33;
  char v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  void *v42;
  id v43;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F10);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 104))
LABEL_33:
    sub_23AFF1E94((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLItemJobRegistry.swift", 137, 2, 881);
  sub_23AA8EFC8(a2, (uint64_t)v11, &qword_2542DDFC0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  v13 = *(uint64_t (**)(uint64_t))(a4 + 80);
  if (!v13)
  {
    __break(1u);
    goto LABEL_32;
  }
  v14 = swift_retain();
  v15 = (_QWORD **)v13(v14);
  sub_23AAB7948((uint64_t)v13);
  if (!v15)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (*(_BYTE *)(a1 + 104))
    sub_23AFF02CC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/JobRegistry.swift", 113, 2, 646);
  v41 = a4;
  v16 = *(_QWORD *)(a1 + 88);
  v17 = v16 & a3;
  v43 = *(id *)(a1 + 96);
  swift_retain();
  if ((v16 & a3) != 0)
  {
    v42 = (void *)v16;
    while (1)
    {
      v18 = __clz(__rbit64(v17));
      v19 = v17 & ~(1 << v18);
      if (((1 << v18) & v17) == 0)
        v19 = v17;
      if (v18 >= 0x40)
        v20 = 0;
      else
        v20 = 1 << v18;
      if (v18 < 0x40)
        v17 = v19;
      v21 = sub_23AE09508(v20, a1, (uint64_t)v11, v15);
      if (v4)
        break;
      if ((v21 & 1) != 0)
      {
        v22 = -1;
        if ((v20 & v16) != 0)
          v22 = ~v20;
        v16 &= v22;
        v23 = v15;
        v24 = v11;
        v25 = *(void **)(a1 + 88);
        v26 = *(void **)(a1 + 96);
        v27 = v43;
        *(_QWORD *)(a1 + 88) = v16;
        *(_QWORD *)(a1 + 96) = v27;
        v28 = *(_BYTE *)(a1 + 104);
        *(_BYTE *)(a1 + 104) = 0;
        sub_23AAAE478(v42, v27, 0);
        v29 = v26;
        v11 = v24;
        v15 = v23;
        sub_23AAAEE10(v25, v29, v28);
      }
      if (!v17)
        goto LABEL_20;
    }
    sub_23AAAEE10(v42, v43, 0);
    sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2569E5F10);
    goto LABEL_29;
  }
LABEL_20:
  v30 = v16 == 0;
  if (v16)
  {
    v31 = v43;
  }
  else
  {
    v16 = (unint64_t)v43;
    v31 = 0;
  }
  sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2569E5F10);
  swift_release();
  v32 = *(void **)(a1 + 88);
  v33 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v31;
  v34 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = v30;
  sub_23AAAEE10(v32, v33, v34);
  v35 = v41;
  sub_23AE129F4(a1);
  if (!v4 && *(_BYTE *)(a1 + 104) == 1)
  {
    v36 = *(uint64_t (**)(uint64_t))(v35 + 80);
    if (v36)
    {
      v37 = swift_retain();
      v38 = v36(v37);
      v39 = sub_23AAB7948((uint64_t)v36);
      if (v38)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v38 + 304))(v39);
LABEL_29:
        swift_release();
      }
    }
  }
  return 0;
}

uint64_t sub_23AEAABB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void *v26;
  id v27;
  char v28;
  void *v29;
  BOOL v30;
  id v31;
  void *v32;
  void *v33;
  char v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  void *v42;
  id v43;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DD0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 104))
LABEL_33:
    sub_23AFF1E94((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLItemJobRegistry.swift", 137, 2, 881);
  sub_23AA8EFC8(a2, (uint64_t)v11, (uint64_t *)&unk_2542DDFB0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  v13 = *(uint64_t (**)(uint64_t))(a4 + 80);
  if (!v13)
  {
    __break(1u);
    goto LABEL_32;
  }
  v14 = swift_retain();
  v15 = v13(v14);
  sub_23AAB7948((uint64_t)v13);
  if (!v15)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (*(_BYTE *)(a1 + 104))
    sub_23AFF02CC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/JobRegistry.swift", 113, 2, 646);
  v41 = a4;
  v16 = *(_QWORD *)(a1 + 88);
  v17 = v16 & a3;
  v43 = *(id *)(a1 + 96);
  swift_retain();
  if ((v16 & a3) != 0)
  {
    v42 = (void *)v16;
    while (1)
    {
      v18 = __clz(__rbit64(v17));
      v19 = v17 & ~(1 << v18);
      if (((1 << v18) & v17) == 0)
        v19 = v17;
      if (v18 >= 0x40)
        v20 = 0;
      else
        v20 = 1 << v18;
      if (v18 < 0x40)
        v17 = v19;
      v21 = sub_23AE0BD0C(v20, a1, (uint64_t)v11, v15);
      if (v4)
        break;
      if ((v21 & 1) != 0)
      {
        v22 = -1;
        if ((v20 & v16) != 0)
          v22 = ~v20;
        v16 &= v22;
        v23 = v15;
        v24 = v11;
        v25 = *(void **)(a1 + 88);
        v26 = *(void **)(a1 + 96);
        v27 = v43;
        *(_QWORD *)(a1 + 88) = v16;
        *(_QWORD *)(a1 + 96) = v27;
        v28 = *(_BYTE *)(a1 + 104);
        *(_BYTE *)(a1 + 104) = 0;
        sub_23AAAE478(v42, v27, 0);
        v29 = v26;
        v11 = v24;
        v15 = v23;
        sub_23AAAEE10(v25, v29, v28);
      }
      if (!v17)
        goto LABEL_20;
    }
    sub_23AAAEE10(v42, v43, 0);
    sub_23AA8A05C((uint64_t)v11, &qword_2569E5DD0);
    goto LABEL_29;
  }
LABEL_20:
  v30 = v16 == 0;
  if (v16)
  {
    v31 = v43;
  }
  else
  {
    v16 = (unint64_t)v43;
    v31 = 0;
  }
  sub_23AA8A05C((uint64_t)v11, &qword_2569E5DD0);
  swift_release();
  v32 = *(void **)(a1 + 88);
  v33 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v31;
  v34 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = v30;
  sub_23AAAEE10(v32, v33, v34);
  v35 = v41;
  sub_23AE12BB0(a1);
  if (!v4 && *(_BYTE *)(a1 + 104) == 1)
  {
    v36 = *(uint64_t (**)(uint64_t))(v35 + 80);
    if (v36)
    {
      v37 = swift_retain();
      v38 = v36(v37);
      v39 = sub_23AAB7948((uint64_t)v36);
      if (v38)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v38 + 304))(v39);
LABEL_29:
        swift_release();
      }
    }
  }
  return 0;
}

uint64_t sub_23AEAAE9C(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  _QWORD *v27;

  v5 = v4;
  v10 = type metadata accessor for PaginatedContinuation();
  swift_retain();
  sub_23B19427C(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6860);
  sub_23B19427C(v11);
  *(_QWORD *)(v5 + qword_2542EDF00) = a1;
  v12 = a3 & 1;
  *(_QWORD *)(v5 + qword_2542EDF10) = a2;
  v13 = a2;
  v14 = a1;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v15 = (_QWORD *)(v5 + qword_2542EDF18);
  *v15 = 0;
  v15[1] = 0xE000000000000000;
  v16 = *(_QWORD *)(sub_23AAAF608() + 16);
  result = swift_bridgeObjectRelease();
  if (v16 >> 31)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + qword_2542EDEF0) = v16;
    v18 = sub_23AA6F854(0, 0xE000000000000000, 0xD000000000000016, 0x800000023B2075E0, (uint64_t (*)(uint64_t))sub_23AAAF608, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA962C);
    v19 = (uint64_t *)(v5 + qword_2542EDEE8);
    *v19 = v18;
    v19[1] = v20;
    v21 = sub_23AA6F854(0x697461726F636564, 0xEB000000005F6E6FLL, 0xD00000000000001ALL, 0x800000023B2075C0, (uint64_t (*)(uint64_t))sub_23AAAF0A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA8FA0);
    v22 = (uint64_t *)(v5 + qword_2542EDEF8);
    *v22 = v21;
    v22[1] = v23;
    v24 = *((_QWORD *)sub_23AAAF0A8() + 2);
    result = swift_bridgeObjectRelease();
    if (!(v24 >> 31))
    {
      *(_DWORD *)(v5 + qword_2542EDF08) = v24;
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE40]), sel_init);
      *(_QWORD *)(v5 + qword_2542E69F8) = v25;
      v26 = v25;
      objc_msgSend(v26, sel_setCountLimit_, 100);

      swift_release();
      swift_weakInit();
      *(_BYTE *)(v5 + 33) = 1;
      v27 = (_QWORD *)(v5 + qword_2542EDE50);
      type metadata accessor for SnapshotCounters();
      v27[1] = 0;
      v27[2] = 0;
      *v27 = 0;
      sub_23B1C5BB8();
      *(_BYTE *)(v5 + 32) = v12;
      *(_QWORD *)(v5 + 16) = a4;
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23AEAB130(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  _QWORD *v27;

  v5 = v4;
  v10 = type metadata accessor for PaginatedContinuation();
  swift_retain();
  sub_23B19427C(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6858);
  sub_23B19427C(v11);
  *(_QWORD *)(v5 + qword_2542EDF00) = a1;
  v12 = a3 & 1;
  *(_QWORD *)(v5 + qword_2542EDF10) = a2;
  v13 = a2;
  v14 = a1;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v15 = (_QWORD *)(v5 + qword_2542EDF18);
  *v15 = 0;
  v15[1] = 0xE000000000000000;
  v16 = *(_QWORD *)(sub_23AD7F5BC() + 16);
  result = swift_bridgeObjectRelease();
  if (v16 >> 31)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + qword_2542EDEF0) = v16;
    v18 = sub_23ADF9D14(0, 0xE000000000000000);
    v19 = (uint64_t *)(v5 + qword_2542EDEE8);
    *v19 = v18;
    v19[1] = v20;
    v21 = sub_23AA6F854(0x697461726F636564, 0xEB000000005F6E6FLL, 0xD00000000000001ALL, 0x800000023B2075C0, (uint64_t (*)(uint64_t))sub_23AAAF0A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA8FA0);
    v22 = (uint64_t *)(v5 + qword_2542EDEF8);
    *v22 = v21;
    v22[1] = v23;
    v24 = *((_QWORD *)sub_23AAAF0A8() + 2);
    result = swift_bridgeObjectRelease();
    if (!(v24 >> 31))
    {
      *(_DWORD *)(v5 + qword_2542EDF08) = v24;
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE40]), sel_init);
      *(_QWORD *)(v5 + qword_2542E69F8) = v25;
      v26 = v25;
      objc_msgSend(v26, sel_setCountLimit_, 100);

      swift_release();
      swift_weakInit();
      *(_BYTE *)(v5 + 33) = 1;
      v27 = (_QWORD *)(v5 + qword_2542EDE50);
      type metadata accessor for SnapshotCounters();
      v27[1] = 0;
      v27[2] = 0;
      *v27 = 0;
      sub_23B1C5BB8();
      *(_BYTE *)(v5 + 32) = v12;
      *(_QWORD *)(v5 + 16) = a4;
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23AEAB398(void *a1, uint64_t a2, char a3, void *a4, uint64_t a5)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  *(_QWORD *)(a5 + 112) = 0;
  *(_QWORD *)(a5 + 120) = 0;
  *(_QWORD *)(a5 + 128) = &unk_250BDE9D8;
  *(_QWORD *)(a5 + 136) = &unk_250BDEA10;
  *(_QWORD *)(a5 + 24) = a1;
  *(_QWORD *)(a5 + 32) = a2;
  *(_BYTE *)(a5 + 40) = a3;
  *(_QWORD *)(a5 + 48) = a4;
  v7 = a4;
  swift_retain();
  v8 = a1;
  *(_QWORD *)(a5 + 56) = sub_23AA7E454(0, 0xE000000000000000, (uint64_t *)&unk_2542E6E10, (uint64_t (*)(uint64_t))sub_23AAAE8F4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA9348);
  *(_QWORD *)(a5 + 64) = v9;
  *(_QWORD *)(a5 + 72) = sub_23AA7E454(3044466, 0xE300000000000000, (uint64_t *)&unk_2542E6E10, (uint64_t (*)(uint64_t))sub_23AAAE8F4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA9348);
  *(_QWORD *)(a5 + 80) = v10;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE40]), sel_init);
  *(_QWORD *)(a5 + 88) = v11;
  objc_msgSend(v11, sel_setCountLimit_, 100);
  *(_QWORD *)(a5 + 96) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(a5 + 104) = 0;
  swift_weakInit();
  return a5;
}

_QWORD *sub_23AEAB494(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[8];

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E67E8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[3] = 0;
  v5[4] = 0;
  *(_QWORD *)((char *)v5 + qword_2542EE088) = 0;
  v14 = (char *)v5 + qword_2542E7020;
  *(_QWORD *)&v24[0] = 0;
  sub_23B1C5F30();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  *(_QWORD *)((char *)v5 + qword_2542E7028) = 0;
  *(_QWORD *)((char *)v5 + qword_2542EE098) = MEMORY[0x24BEE4AF8];
  *((_BYTE *)v5 + qword_2542EE070) = 0;
  *(_QWORD *)((char *)v5 + qword_2542EE080) = 0;
  *(_QWORD *)((char *)v5 + qword_2542EE060) = 0;
  v15 = (char *)v5 + qword_2542EE078;
  if (qword_2542E6ED8 != -1)
    swift_once();
  v24[4] = xmmword_2542EDDC0;
  v24[5] = unk_2542EDDD0;
  v24[6] = xmmword_2542EDDE0;
  v24[7] = unk_2542EDDF0;
  v24[0] = xmmword_2542EDD80;
  v24[1] = *(_OWORD *)algn_2542EDD90;
  v24[2] = xmmword_2542EDDA0;
  v24[3] = unk_2542EDDB0;
  memmove(v15, &xmmword_2542EDD80, 0x80uLL);
  *(_QWORD *)((char *)v5 + qword_2542EE090 + 8) = 0;
  swift_unknownObjectWeakInit();
  v5[2] = a1;
  swift_beginAccess();
  v21 = 0;
  sub_23AB7C0DC((uint64_t)v24);
  v16 = a1;
  sub_23B1C5F30();
  swift_endAccess();
  if ((a4 & 1) != 0)
  {
    *(_QWORD *)((char *)v5 + qword_2542EE058) = 0;
  }
  else
  {
    v17 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    *(_QWORD *)((char *)v5 + qword_2542EE058) = v17;
    if (v17)
    {
      v18 = objc_msgSend(v17, sel_isCacheDeleteCacheable);
      goto LABEL_8;
    }
  }
  v18 = 1;
LABEL_8:
  *((_BYTE *)v5 + qword_2542EE068) = v18;
  v22 = a2;
  v23 = a3;
  sub_23B1C64F4();
  v19 = v23;
  v5[5] = v22;
  v5[6] = v19;
  if (qword_2542E4C20 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDD60, sel_ping);
  return v5;
}

_QWORD *sub_23AEAB77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  void (*v7)(uint64_t);
  uint64_t v8;

  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = a4;
  a6[6] = a5;
  a6[7] = &off_250C0C0C0;
  swift_weakAssign();
  swift_weakAssign();
  v7 = *(void (**)(uint64_t))(*a6 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v8 = swift_retain();
  v7(v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_weakAssign();
  swift_release();
  return a6;
}

uint64_t sub_23AEAB860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  fp_task_tracker *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  NSObject *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  void *v69;
  id v70;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v77 = a6;
  v74 = a2;
  v75 = a5;
  v73 = a1;
  v12 = sub_23B1C60A4();
  v76 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(a8 + 72) = 1;
  *(_BYTE *)(a8 + 90) = 0;
  type metadata accessor for JobLimit();
  *(_QWORD *)(a8 + 96) = 0;
  *(_QWORD *)(a8 + 104) = 0;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23B1DAA60;
  *(_OWORD *)(v15 + 32) = xmmword_23B1DAA70;
  *(_QWORD *)(a8 + 120) = v15;
  *(_QWORD *)(a8 + 128) = 500;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5220);
  v16 = (_QWORD *)swift_allocObject();
  v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v16[2] = sub_23AAF0B08(MEMORY[0x24BEE4AF8]);
  v16[3] = sub_23AAF82B0(v17);
  swift_retain();
  v16[4] = sub_23AAEB3FC((uint64_t)v17);
  v16[5] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  *(_QWORD *)(a8 + 136) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5228);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = sub_23AAEB294((uint64_t)v17);
  v18[3] = sub_23AAEB650((uint64_t)v17);
  v18[4] = sub_23AAEB3F0((uint64_t)v17);
  v18[5] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  *(_QWORD *)(a8 + 144) = v18;
  *(_BYTE *)(a8 + 152) = 0;
  type metadata accessor for PersistenceCounters();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_DWORD *)(v19 + 47) = 0;
  *(_QWORD *)(a8 + 160) = v19;
  type metadata accessor for TaskTracker();
  v20 = swift_allocObject();
  v21 = fp_task_tracker_create("db");
  if (!v21)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(_QWORD *)(v20 + 16) = v21;
  *(_QWORD *)(a8 + 168) = v20;
  *(_QWORD *)(a8 + 176) = dispatch_group_create();
  *(_QWORD *)(a8 + 192) = sub_23AAEB538((uint64_t)v17);
  *(_QWORD *)(a8 + 200) = 0;
  *(_QWORD *)(a8 + 208) = 0;
  *(_QWORD *)(a8 + 216) = 0;
  v22 = qword_2542EDFF0;
  *(_QWORD *)(a8 + v22) = sub_23AAF7BD8((uint64_t)v17);
  v23 = qword_2542EE000;
  *(_QWORD *)(a8 + v23) = sub_23AAEAAEC((uint64_t)v17);
  v24 = qword_2542EE008;
  *(_QWORD *)(a8 + v24) = sub_23AAF7BF4((uint64_t)v17);
  *(_QWORD *)(a8 + qword_2542EDFD8) = v17;
  v25 = qword_2542EDFE8;
  *(_QWORD *)(a8 + v25) = sub_23AAF7C00((uint64_t)v17);
  v26 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a8 + qword_2542EDFB0) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a8 + qword_2542EDFA8) = v26;
  *(_QWORD *)(a8 + qword_2542EDF80) = v17;
  v27 = qword_2542EDFF8;
  *(_QWORD *)(a8 + v27) = sub_23AAEABF4((uint64_t)v17);
  v28 = a8 + qword_2542E6CB0;
  v29 = sub_23AAF0C70((uint64_t)v17);
  v30 = sub_23AAEAEC4((uint64_t)v17);
  v31 = sub_23AAF0C8C((uint64_t)v17);
  *(_QWORD *)v28 = v29;
  *(_QWORD *)(v28 + 8) = v30;
  v72 = xmmword_23B1DAA80;
  *(_OWORD *)(v28 + 16) = xmmword_23B1DAA80;
  *(_BYTE *)(v28 + 32) = 0;
  *(_QWORD *)(v28 + 40) = v31;
  *(_WORD *)(v28 + 48) = 0;
  *(_BYTE *)(v28 + 50) = 0;
  *(_QWORD *)(v28 + 56) = v17;
  v32 = a8 + qword_2542E6CA8;
  v33 = sub_23AAEAD8C((uint64_t)v17);
  v34 = sub_23AAEAEC4((uint64_t)v17);
  v35 = sub_23AAEB060((uint64_t)v17);
  *(_QWORD *)v32 = v33;
  *(_QWORD *)(v32 + 8) = v34;
  *(_OWORD *)(v32 + 16) = v72;
  *(_BYTE *)(v32 + 32) = 0;
  *(_QWORD *)(v32 + 40) = v35;
  *(_WORD *)(v32 + 48) = 0;
  *(_BYTE *)(v32 + 50) = 0;
  *(_QWORD *)(v32 + 56) = v17;
  *(_BYTE *)(a8 + qword_256A079D0) = 0;
  *(_QWORD *)(a8 + qword_2542EDFC0) = 0;
  *(_QWORD *)(a8 + qword_2542E6C70) = 0;
  *(_BYTE *)(a8 + qword_2542E6C58) = 1;
  *(_QWORD *)(a8 + qword_2542EDF98) = v17;
  v36 = qword_2542E6C50;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E7230);
  v37 = swift_allocObject();
  *(_QWORD *)(a8 + v36) = v37;
  v38 = qword_2542EE018;
  *(_QWORD *)(a8 + qword_2542EE018) = 0;
  *(_DWORD *)(v37 + 24) = 0;
  *(_BYTE *)(a8 + qword_2542EDF88) = 0;
  *(_QWORD *)(v37 + 16) = 0;
  *(_QWORD *)(a8 + qword_2542EE020) = 0;
  type metadata accessor for DBCounters();
  sub_23B1C5BB8();
  v39 = (_QWORD *)(a8 + qword_2542EDFD0);
  *v39 = 0;
  v39[1] = 0;
  v40 = (_QWORD *)(a8 + qword_2542EDFE0);
  *v40 = 0;
  v40[1] = 0;
  v41 = (_QWORD *)(a8 + qword_2542EDFA0);
  *v41 = 0;
  v41[1] = 0;
  v42 = (_QWORD *)(a8 + qword_2542EDFC8);
  *v42 = 0;
  v42[1] = 0;
  *(_QWORD *)(a8 + qword_2542EE128) = 0;
  *(_BYTE *)(a8 + qword_2542E6C88) = 0;
  v43 = qword_2542E6C60;
  if (qword_2542E4FC0 != -1)
    swift_once();
  v44 = (void *)qword_2542EDE10;
  *(_QWORD *)(a8 + v43) = qword_2542EDE10;
  *(_QWORD *)(a8 + qword_2542EDFB8) = 0;
  *(_QWORD *)(a8 + qword_256A079D8) = 0;
  *(_BYTE *)(a8 + qword_2542EE120) = 0;
  *(_QWORD *)(a8 + qword_2542E6C98) = 0;
  *(_BYTE *)(a8 + qword_256A079E0) = 0;
  *(_BYTE *)(a8 + qword_2542EE010) = 0;
  v45 = type metadata accessor for RequestContinuation();
  v46 = v44;
  sub_23B19427C(v45);
  v47 = type metadata accessor for MaintenanceContinuation();
  sub_23B19427C(v47);
  v48 = type metadata accessor for DiskImportContinuation();
  sub_23B19427C(v48);
  v49 = type metadata accessor for StagedContext();
  sub_23B19427C(v49);
  v50 = *(_QWORD *)(a4 + 16);
  sub_23B1C6458();
  v51 = (id)fpfs_create_log_for_provider();
  swift_release();
  v52 = *(void **)(a8 + v38);
  *(_QWORD *)(a8 + v38) = v51;

  v53 = *(_QWORD *)(v50 + 136);
  v54 = *(_QWORD *)(v53 + 24);
  v78 = *(_QWORD *)(v53 + 16);
  v79 = v54;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  v55 = sub_23B1C6458();
  swift_bridgeObjectRelease();
  v56 = FPCreateWorkloop((const char *)(v55 + 32));
  swift_release();
  *(_QWORD *)(a8 + 64) = v56;
  *(_BYTE *)(a8 + 88) = (a7 & 0x20) == 0;
  *(_BYTE *)(a8 + 89) = (a7 & 0x800) != 0;
  *(_QWORD *)(a8 + 80) = a7;
  sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
  v57 = v56;
  v58 = sub_23B1C6B90();

  *(_QWORD *)(a8 + 112) = v58;
  *(_QWORD *)(a8 + 184) = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 136);
  v59 = *(void **)(a8 + 64);
  swift_retain();
  v60 = v59;
  v61 = sub_23B1C6B90();

  *(_QWORD *)(a8 + qword_2542EDF90) = v61;
  v62 = v77;
  sub_23AA8EFC8(v77, a8 + qword_2542EDD58, &qword_2542E4E70);
  swift_release();
  v63 = v73;
  swift_retain();
  v64 = v74;
  swift_retain();
  swift_retain();
  swift_retain();
  v65 = v75;
  swift_retain();
  a7 = (uint64_t)sub_23AEAB77C(v63, v64, a3, a4, v65, (_QWORD *)a8);
  swift_release();
  swift_getObjectType();
  v66 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_23B1C6080();
  sub_23AA78928(0, (uint64_t)v14, (uint64_t)sub_23AEB435C, v66);
  swift_unknownObjectRelease();
  swift_release();
  v67 = *(void (**)(char *, uint64_t))(v76 + 8);
  v67(v14, v12);
  swift_release();
  swift_getObjectType();
  v68 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_23B1C6080();
  sub_23AA78928(0, (uint64_t)v14, (uint64_t)sub_23AEB4364, v68);
  swift_release();
  v67(v14, v12);
  swift_release();
  if (qword_2542E6C40 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDD50, sel_ping);
  v69 = (void *)swift_retain();
  if (objc_sync_enter(v69))
LABEL_16:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, a7);
  v70 = *(id *)(a7 + qword_2542E6C60);
  if (objc_sync_exit((id)a7))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, a7);
  swift_release();
  objc_msgSend(v70, sel_ping);

  if (qword_2542E6EE0 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDE00, sel_ping);
  if (qword_2542E7160 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDE30, sel_ping);
  if (qword_2542E6EC8 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDD70, sel_ping);
  swift_release();
  sub_23AA8A05C(v62, &qword_2542E4E70);
  return a7;
}

uint64_t sub_23AEAC248(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_23AEAC264 + 4 * byte_23B1DAEB7[a1]))();
}

uint64_t sub_23AEAC264()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 104);
}

uint64_t sub_23AEAC27C()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 88);
}

uint64_t sub_23AEAC294()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 96);
}

uint64_t sub_23AEAC2AC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 80);
}

uint64_t sub_23AEAC2C4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t sub_23AEAC2D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  unint64_t v24;
  uint64_t result;

  v16 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 576);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 584);
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_QWORD *)(v18 + 16) = 1;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_QWORD *)(v18 + 56) = 0;
  *(_QWORD *)(v9 + 136) = a1;
  *(_QWORD *)(v9 + 144) = a2;
  *(_QWORD *)(v9 + 152) = a3;
  *(_QWORD *)(v9 + 160) = a4;
  sub_23AA724E8(a5, v9 + 168, &qword_2569E61D8);
  *(_QWORD *)(v9 + 216) = a6;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  *(_BYTE *)(v9 + 40) = 1;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_QWORD *)(v9 + 80) = 0;
  *(_OWORD *)(v9 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v9 + 104) = 0;
  *(_QWORD *)(v9 + 112) = a7;
  *(_QWORD *)(v9 + 120) = a8;
  *(_QWORD *)(v9 + 128) = a9;
  if ((a9 & 0x8000) != 0)
  {
    *(_QWORD *)(v9 + 88) = 2359552;
    *(_BYTE *)(v9 + 104) = 0;
    v21 = a1;
    sub_23AEB1850(a5);
    v22 = a6;
    sub_23AAAE478((id)0x40100, 0, 0);
    sub_23AAAEE10((void *)0x40100, 0, 0);
  }
  else
  {
    v19 = a1;
    sub_23AEB1850(a5);
    v20 = a6;
  }
  if (*(_BYTE *)(v9 + 104))
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  else
  {
    v24 = *(_QWORD *)(v9 + 88);
    v23 = *(void **)(v9 + 96);
    *(_QWORD *)(v9 + 88) = v24 | 0x2000;
    *(_BYTE *)(v9 + 104) = 0;
    swift_retain();
    sub_23AAAEE10((void *)v24, v23, 0);
    return v9;
  }
  return result;
}

uint64_t sub_23AEAC4C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  id v22;
  id v23;
  void *v24;
  unint64_t v25;
  uint64_t result;

  v19 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 576);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = (_OWORD *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 584));
  *v21 = 0u;
  v21[1] = 0u;
  v21[2] = 0u;
  v21[3] = 0u;
  v21[4] = 0u;
  v21[5] = 0u;
  *(_BYTE *)(v13 + 144) = a2;
  *(_QWORD *)(v13 + 152) = a3;
  *(_QWORD *)(v13 + 160) = a4;
  *(_QWORD *)(v13 + 168) = a5;
  *(_QWORD *)(v13 + 176) = a6;
  *(_QWORD *)(v13 + 184) = a7;
  *(_QWORD *)(v13 + 192) = a8;
  *(_QWORD *)(v13 + 200) = a9;
  *(_QWORD *)(v13 + 208) = a10;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 40) = 1;
  *(_OWORD *)(v13 + 48) = 0u;
  *(_OWORD *)(v13 + 64) = 0u;
  *(_QWORD *)(v13 + 80) = 0;
  *(_OWORD *)(v13 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v13 + 104) = 0;
  *(_QWORD *)(v13 + 112) = a11;
  *(_QWORD *)(v13 + 120) = a12;
  *(_QWORD *)(v13 + 128) = a13;
  *(_QWORD *)(v13 + 136) = a1;
  if ((a13 & 0x8000) != 0)
  {
    *(_OWORD *)(v13 + 88) = xmmword_23B1DA960;
    *(_BYTE *)(v13 + 104) = 0;
    sub_23AEB1790(a6, a7, a8, a9);
    v23 = a10;
    sub_23AAAE478((id)0x40100, 0, 0);
    sub_23AAAEE10((void *)0x40100, 0, 0);
  }
  else
  {
    sub_23AEB1790(a6, a7, a8, a9);
    v22 = a10;
  }
  if (*(_BYTE *)(v13 + 104))
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  else
  {
    v25 = *(_QWORD *)(v13 + 88);
    v24 = *(void **)(v13 + 96);
    *(_QWORD *)(v13 + 88) = v25 | 0x2000;
    *(_BYTE *)(v13 + 104) = 0;
    swift_retain();
    sub_23AAAEE10((void *)v25, v24, 0);
    return v13;
  }
  return result;
}

uint64_t sub_23AEAC6D0(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  uint64_t result;
  double v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_23B1C5BDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48);
  v9 = type metadata accessor for ItemMetadata();
  v8[*(int *)(v9 + 48)] = 1;
  if (v8[*(int *)(v9 + 44)] != 1)
  {
LABEL_6:
    v17 = *a1;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v19 = v18;
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v20 = v19 * 1000000000.0;
    if ((~COERCE__INT64(v19 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v20 > -9.22337204e18)
      {
        if (v20 < 9.22337204e18)
        {
          v21 = (uint64_t)v20;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61E8);
          v22 = swift_allocObject();
          *(_QWORD *)(v22 + 24) = 0;
          *(_QWORD *)(v22 + 32) = 0;
          *(_QWORD *)(v22 + 16) = 0;
          *(_BYTE *)(v22 + 40) = 1;
          *(_OWORD *)(v22 + 48) = 0u;
          *(_OWORD *)(v22 + 64) = 0u;
          *(_QWORD *)(v22 + 80) = 0;
          *(_OWORD *)(v22 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v22 + 104) = 0;
          *(_QWORD *)(v22 + 112) = 0x2000000000000000;
          *(_QWORD *)(v22 + 120) = v21;
          *(_QWORD *)(v22 + 128) = 1;
          *(_QWORD *)(v22 + 136) = v17;
          (*(void (**)(void))(*(_QWORD *)a2 + 144))();
          return swift_release();
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = *a1;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v12 = v11;
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = v12 * 1000000000.0;
  if ((~COERCE__INT64(v12 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v14 < 9.22337204e18)
  {
    v15 = (uint64_t)v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6208);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 24) = 0;
    *(_QWORD *)(v16 + 32) = 0;
    *(_QWORD *)(v16 + 16) = 0;
    *(_BYTE *)(v16 + 40) = 1;
    *(_OWORD *)(v16 + 48) = 0u;
    *(_OWORD *)(v16 + 64) = 0u;
    *(_QWORD *)(v16 + 80) = 0;
    *(_OWORD *)(v16 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v16 + 104) = 0;
    *(_QWORD *)(v16 + 112) = 0x2000000000000000;
    *(_QWORD *)(v16 + 120) = v15;
    *(_QWORD *)(v16 + 128) = 0x10000000000;
    *(_QWORD *)(v16 + 136) = v10;
    (*(void (**)(void))(*(_QWORD *)a2 + 144))();
    swift_release();
    goto LABEL_6;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_23AEAC980(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  double v14;
  uint64_t result;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v5 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48);
  v10 = type metadata accessor for ItemMetadata();
  *(_BYTE *)(v9 + *(int *)(v10 + 48)) = 1;
  if (*(_BYTE *)(v9 + *(int *)(v10 + 44)) != 1)
  {
LABEL_6:
    v19 = *a1;
    v20 = *((_BYTE *)a1 + 8);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v22 = v21;
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v23 = v22 * 1000000000.0;
    if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v23 > -9.22337204e18)
      {
        if (v23 < 9.22337204e18)
        {
          v24 = (uint64_t)v23;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F58);
          v25 = swift_allocObject();
          *(_BYTE *)(v25 + 144) = v20;
          *(_QWORD *)(v25 + 24) = 0;
          *(_QWORD *)(v25 + 32) = 0;
          *(_QWORD *)(v25 + 16) = 0;
          *(_BYTE *)(v25 + 40) = 1;
          *(_OWORD *)(v25 + 48) = 0u;
          *(_OWORD *)(v25 + 64) = 0u;
          *(_QWORD *)(v25 + 80) = 0;
          *(_OWORD *)(v25 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v25 + 104) = 0;
          *(_QWORD *)(v25 + 112) = 0x2000000000000000;
          *(_QWORD *)(v25 + 120) = v24;
          *(_QWORD *)(v25 + 128) = 1;
          *(_QWORD *)(v25 + 136) = v19;
          (*(void (**)(void))(*(_QWORD *)a2 + 144))();
          return swift_release();
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v26[1] = v2;
  v11 = *a1;
  v12 = *((_BYTE *)a1 + 8);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v14 = v13;
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v14 * 1000000000.0;
  if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v16 < 9.22337204e18)
  {
    v17 = (uint64_t)v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F78);
    v18 = swift_allocObject();
    *(_BYTE *)(v18 + 144) = v12;
    *(_QWORD *)(v18 + 24) = 0;
    *(_QWORD *)(v18 + 32) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    *(_BYTE *)(v18 + 40) = 1;
    *(_OWORD *)(v18 + 48) = 0u;
    *(_OWORD *)(v18 + 64) = 0u;
    *(_QWORD *)(v18 + 80) = 0;
    *(_OWORD *)(v18 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v18 + 104) = 0;
    *(_QWORD *)(v18 + 112) = 0x2000000000000000;
    *(_QWORD *)(v18 + 120) = v17;
    *(_QWORD *)(v18 + 128) = 0x10000000000;
    *(_QWORD *)(v18 + 136) = v11;
    (*(void (**)(void))(*(_QWORD *)a2 + 144))();
    swift_release();
    goto LABEL_6;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_23AEACC34(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  unint64_t v3;
  uint64_t result;

  if (*(_BYTE *)(v1 + 104))
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 88);
    v2 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v3 | a1;
    *(_BYTE *)(v1 + 104) = 0;
    swift_retain();
    sub_23AAAEE10((void *)v3, v2, 0);
    return v1;
  }
  return result;
}

uint64_t sub_23AEACCDC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, _QWORD **a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __int128 v65;
  char *v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v72 = a5;
  v80 = a3;
  v75 = a2;
  v16 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v16 - 8);
  v76 = v16;
  v77 = v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v66 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v63 = (char *)&v61 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E0500);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E04F8);
  v74 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = 0;
  swift_beginAccess();
  if (v85 <= 1)
  {
    v73 = v23;
    v28 = v75;
    v70 = a10;
    v71 = v24;
    v78 = v26;
    v79 = a9;
    v29 = 1953460082;
    if (v75)
      v29 = 0x6873617274;
    v62 = v29;
    v30 = 0xE500000000000000;
    if (!v75)
      v30 = 0xE400000000000000;
    v61 = v30;
    v72 &= 1u;
    *(_QWORD *)&v27 = 136315394;
    v65 = v27;
    v64 = MEMORY[0x24BEE4AD8] + 8;
    v31 = v66;
    v68 = a1;
    v69 = a8;
    v67 = a4;
    while (1)
    {
      v32 = v73;
      v33 = v28;
      result = sub_23AEA0B14(a1, v28, v80, a4, v72, v79, (uint64_t)a6, v73);
      if (v10)
        return result;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v74 + 48))(v32, 1, v71) == 1)
      {
        v60 = qword_2542E0500;
        return sub_23AA8A05C((uint64_t)v32, v60);
      }
      v35 = (uint64_t)v32;
      v32 = v78;
      sub_23AA724E8(v35, (uint64_t)v78, &qword_2542E04F8);
      v36 = a4;
      v37 = a7;
      sub_23AE95250((uint64_t)v32, v33, v80, v36, (uint64_t)a6, a7, a8, v79, v70);
      v39 = v38;
      v40 = v31;
      result = ((uint64_t (*)(void))(*a6)[19])();
      if ((((result & 0x4000) != 0) & v39) == 0)
      {
        v60 = &qword_2542E04F8;
        return sub_23AA8A05C((uint64_t)v32, v60);
      }
      if (__OFADD__(v85, 1))
      {
        __break(1u);
        return result;
      }
      ++v85;
      v41 = (*(uint64_t (**)(void))(*a6[2] + 504))();
      v42 = (*(uint64_t (**)(uint64_t))(*a6[4] + 696))(v41);
      (*(void (**)(uint64_t))(*a6[5] + 696))(v42);
      v43 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v44 = sub_23B1C5E40();
      v45 = sub_23B1C6A88();
      if (os_log_type_enabled(v44, v45))
        break;

      (*(void (**)(char *, uint64_t))(v77 + 8))(v31, v76);
      sub_23AA8A05C((uint64_t)v32, &qword_2542E04F8);
      v28 = v33;
LABEL_8:
      a1 = v68;
      a8 = v69;
      a7 = v37;
      a4 = v67;
      if (v85 >= 2)
        goto LABEL_21;
    }
    v46 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v84 = v47;
    *(_DWORD *)v46 = v65;
    v66 = (char *)v47;
    if ((_BYTE)v80)
    {
      v48 = v62;
      v49 = v61;
      if (v80 != 1)
      {
LABEL_19:
        *(_QWORD *)(v46 + 4) = sub_23AABEC68(v48, v49, &v84);
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2048;
        *(_QWORD *)(v46 + 14) = v85;
        _os_log_impl(&dword_23AA66000, v44, v45, "Ingesting %s, retries %ld", (uint8_t *)v46, 0x16u);
        v50 = v66;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v50, -1, -1);
        MEMORY[0x23B8614BC](v46, -1, -1);

        v31 = v40;
        (*(void (**)(char *, uint64_t))(v77 + 8))(v40, v76);
        sub_23AA8A05C((uint64_t)v32, &qword_2542E04F8);
        v28 = v75;
        goto LABEL_8;
      }
      v82 = 0x284449656C6966;
      v83 = 0xE700000000000000;
      v81 = v75;
    }
    else
    {
      v82 = 0x284449636F64;
      v83 = 0xE600000000000000;
      LODWORD(v81) = v75;
    }
    sub_23B1C7304();
    sub_23B1C64F4();
    v32 = v78;
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v48 = v82;
    v49 = v83;
    goto LABEL_19;
  }
  v28 = v75;
LABEL_21:
  v51 = v28;
  v52 = (id)fpfs_current_or_default_log();
  v53 = v63;
  sub_23B1C5E58();
  v54 = sub_23B1C5E40();
  v55 = sub_23B1C6AA0();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    v82 = v57;
    *(_DWORD *)v56 = 136315138;
    v58 = sub_23AA96F18(v51, v80);
    v84 = sub_23AABEC68(v58, v59, &v82);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v54, v55, "Transform could not converge for item %s", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v57, -1, -1);
    MEMORY[0x23B8614BC](v56, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v53, v76);
}

void sub_23AEAD360()
{
  type metadata accessor for SQLSnapshot();
}

uint64_t sub_23AEAD398()
{
  return swift_dynamicCastClassUnconditional();
}

void sub_23AEAD3C0()
{
  type metadata accessor for SQLSnapshot();
}

uint64_t sub_23AEAD3FC()
{
  return swift_dynamicCastClassUnconditional();
}

uint64_t sub_23AEAD424()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23AEAD448()
{
  return sub_23AE36A1C();
}

uint64_t sub_23AEAD450(void *a1)
{
  return sub_23AE36A80(a1);
}

const char *sub_23AEAD468(void *a1, void *a2)
{
  uint64_t v2;

  return sub_23ADAF848(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_23AEAD470()
{
  sub_23AEB5464();
}

uint64_t sub_23AEAD484(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8(a2, a1);
  return a2;
}

uint64_t sub_23AEAD4C0(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for DatabaseError(a2, a1);
  return a2;
}

uint64_t sub_23AEAD4FC()
{
  uint64_t v0;

  return sub_23AE372E0(v0);
}

void sub_23AEAD508()
{
  sub_23AE37398();
}

void sub_23AEAD514()
{
  sub_23AE374C4();
}

uint64_t sub_23AEAD51C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23AEA79CC(a1, (void (*)(uint64_t))sub_23AEAD544, (uint64_t (*)(uint64_t, uint64_t))sub_23AE15FA0, a2);
}

id sub_23AEAD544(id result, unint64_t a2, void *a3, unint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v23;

  switch(a18)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
    case 11:
    case 12:
    case 13:
      v23 = (a2 >> 8) & 1;
      goto LABEL_3;
    case 1:
      result = a3;
      break;
    case 6:
    case 7:
      sub_23AA88218(result, a2, BYTE1(a2) & 1);
      result = a3;
      a2 = a4;
      v23 = (a4 >> 8) & 1;
LABEL_3:
      result = sub_23AA88218(result, a2, v23);
      break;
    case 8:
      sub_23AA88218(result, a2, BYTE1(a2) & 1);
      result = sub_23AEAD70C(a3, (void *)a4, a5, a6, a7, a8, a9, a10, a11, SBYTE2(a11));
      break;
    case 9:
      sub_23AA88218(result, a2, BYTE1(a2) & 1);
      result = sub_23AEAD7F8(a3, (void *)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
      break;
    default:
      return result;
  }
  return result;
}

id sub_23AEAD70C(id result, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9, char a10)
{
  switch(a10)
  {
    case 7:
      sub_23AAAE668((uint64_t)result, (unint64_t)a2);
      swift_bridgeObjectRetain();
      sub_23AAAE668(a4, a5);
      swift_bridgeObjectRetain();
      result = (id)swift_bridgeObjectRetain();
      break;
    case 8:
      result = result;
      break;
    case 11:
      result = sub_23AAAE478(result, a2, a3);
      break;
    case 13:
      result = (id)sub_23AAAE4B4((uint64_t)result, (uint64_t)a2, a3);
      break;
    default:
      return result;
  }
  return result;
}

id sub_23AEAD7F8(id result, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14)
{
  switch(a14)
  {
    case 7:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = (id)swift_bridgeObjectRetain();
      break;
    case 8:
      result = result;
      break;
    case 11:
      result = sub_23AAAE478(result, a2, a3);
      break;
    case 13:
      result = (id)sub_23AAAE4B4((uint64_t)result, (uint64_t)a2, a3);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23AEAD8A8(void *a1, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int16 a9, char a10)
{
  switch(a10)
  {
    case 7:
      sub_23AAAE53C((uint64_t)a1, (unint64_t)a2);
      swift_bridgeObjectRelease();
      sub_23AAAE53C(a4, a5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 8:

      break;
    case 11:
      sub_23AAAEE10(a1, a2, a3);
      break;
    case 13:
      sub_23AAAEE4C((uint64_t)a1, (uint64_t)a2, a3);
      break;
    default:
      return;
  }
}

void sub_23AEAD994(void *a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14)
{
  switch(a14)
  {
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 8:

      break;
    case 11:
      sub_23AAAEE10(a1, a2, a3);
      break;
    case 13:
      sub_23AAAEE4C((uint64_t)a1, (uint64_t)a2, a3);
      break;
    default:
      return;
  }
}

void sub_23AEADA44(uint64_t a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  uint64_t v4;
  _BYTE v5[496];

  v3 = *(const void **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  memcpy(v5, v3, sizeof(v5));
  sub_23AE49D70((uint64_t)v5, v4, a1);
}

uint64_t sub_23AEADA98@<X0>(uint64_t a1@<X8>)
{
  return sub_23AEADAC8(a1);
}

_QWORD *sub_23AEADAAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AE49CC4(*(_QWORD *)(v1 + 16), **(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_23AEADAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AE406BC(**(_QWORD **)(v1 + 24), *(_BYTE *)(*(_QWORD *)(v1 + 24) + 8), 0, a1);
}

_QWORD *sub_23AEADAF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AE4A1A8(*(_QWORD *)(v1 + 16), **(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_23AEADB14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AE49B28(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t sub_23AEADB30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEADB54(void *a1)
{
  uint64_t v1;

  return sub_23AE10258(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_23AEADB60()
{
  return swift_deallocObject();
}

uint64_t sub_23AEADB70(uint64_t a1)
{
  uint64_t v1;

  return sub_23AEA764C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEADB78(uint64_t a1)
{
  uint64_t v1;

  return sub_23AEA7714(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEADB80(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(uint64_t, unint64_t, uint64_t))
{
  switch(a5)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
      result = a6(result, a2, (a2 >> 8) & 1);
      break;
    case 1:
    case 2:
      a6(result, a2, (a2 >> 8) & 1);
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23AEADBEC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(uint64_t, unint64_t, uint64_t))
{
  switch(a5)
  {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
      result = a6(result, a2, (a2 >> 8) & 1);
      break;
    case 1:
    case 2:
      a6(result, a2, (a2 >> 8) & 1);
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23AEADC58(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  a3(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), a2);
  return a1;
}

uint64_t sub_23AEADC94(uint64_t a1)
{
  uint64_t v1;

  return sub_23AEB06E8(a1, **(_QWORD **)(v1 + 16));
}

uint64_t sub_23AEADCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t *, _QWORD, _QWORD);
  id v6;
  char v7;
  uint64_t v9;

  v3 = *(void **)(a1 + 240);
  if (v3)
  {
    v9 = *(_QWORD *)(a1 + 240);
    v4 = *(_QWORD *)(a2 + 24);
    v5 = *(uint64_t (**)(uint64_t, uint64_t *, _QWORD, _QWORD))(*(_QWORD *)v4 + 336);
    v6 = v3;
    v7 = v5(23, &v9, 0, 0);
    if (!v2)
    {
      if ((v7 & 1) != 0 || (v5(6, &v9, 0, 0) & 1) != 0)
        LOBYTE(v4) = 1;
      else
        LOBYTE(v4) = v5(1, &v9, 0, 0);
    }

  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

uint64_t sub_23AEADDAC(uint64_t result, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t i;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44[2];
  __int128 v45[2];
  uint64_t v46;
  uint64_t v47;
  __int128 v48[2];
  uint64_t v49;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = result + 32;
    v49 = result;
    swift_bridgeObjectRetain();
    sub_23AA8EFC8(v6, (uint64_t)&v46, (uint64_t *)&unk_2542DE6F8);
    v8 = v46;
    v7 = v47;
    sub_23ABD76F0(v48, (uint64_t)v45);
    v9 = (_QWORD *)*a3;
    v11 = sub_23AAAF4C4(v8, v7);
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v15 = v10;
    if (v9[3] < v14)
    {
      sub_23AD15C74(v14, a2 & 1);
      v16 = sub_23AAAF4C4(v8, v7);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_28:
        result = sub_23B1C7418();
        __break(1u);
        return result;
      }
      v11 = v16;
      if ((v15 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      v18 = (_QWORD *)*a3;
      sub_23ABD76F0(v45, (uint64_t)v44);
      swift_bridgeObjectRelease();
      v19 = v18[7] + 40 * v11;
      __swift_destroy_boxed_opaque_existential_1(v19);
      sub_23ABD76F0(v44, v19);
      v20 = v3 - 1;
      if (v3 == 1)
        return swift_bridgeObjectRelease();
LABEL_16:
      for (i = v49 + 88; ; i += 56)
      {
        sub_23AA8EFC8(i, (uint64_t)&v46, (uint64_t *)&unk_2542DE6F8);
        v30 = v46;
        v29 = v47;
        sub_23ABD76F0(v48, (uint64_t)v45);
        v31 = (_QWORD *)*a3;
        v33 = sub_23AAAF4C4(v30, v29);
        v34 = v31[2];
        v35 = (v32 & 1) == 0;
        v36 = v34 + v35;
        if (__OFADD__(v34, v35))
          break;
        v37 = v32;
        if (v31[3] < v36)
        {
          sub_23AD15C74(v36, 1);
          v38 = sub_23AAAF4C4(v30, v29);
          if ((v37 & 1) != (v39 & 1))
            goto LABEL_28;
          v33 = v38;
        }
        if ((v37 & 1) != 0)
        {
          v27 = (_QWORD *)*a3;
          sub_23ABD76F0(v45, (uint64_t)v44);
          swift_bridgeObjectRelease();
          v28 = v27[7] + 40 * v33;
          __swift_destroy_boxed_opaque_existential_1(v28);
          sub_23ABD76F0(v44, v28);
        }
        else
        {
          v40 = (_QWORD *)*a3;
          *(_QWORD *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
          v41 = (uint64_t *)(v40[6] + 16 * v33);
          *v41 = v30;
          v41[1] = v29;
          sub_23ABD76F0(v45, v40[7] + 40 * v33);
          v42 = v40[2];
          v24 = __OFADD__(v42, 1);
          v43 = v42 + 1;
          if (v24)
            goto LABEL_27;
          v40[2] = v43;
        }
        if (!--v20)
          return swift_bridgeObjectRelease();
      }
      goto LABEL_26;
    }
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_23B189754();
      if ((v15 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v22 = (uint64_t *)(v21[6] + 16 * v11);
    *v22 = v8;
    v22[1] = v7;
    sub_23ABD76F0(v45, v21[7] + 40 * v11);
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v21[2] = v25;
    v20 = v3 - 1;
    if (v3 == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

void sub_23AEAE0B0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_23AEAE0F4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_23AEAE110 + 4 * byte_23B1DAF27[a3]))();
}

BOOL sub_23AEAE110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BYTE v6[96];
  _BYTE v7[160];
  _QWORD v8[12];
  uint64_t v9;
  uint64_t v10;

  sub_23AA724E8(v0 + 168, (uint64_t)v7, qword_2542E48C0);
  sub_23AA724E8((uint64_t)v7, (uint64_t)v8, qword_2542E48C0);
  v2 = v8[0];
  v3 = v8[2] & 0xF000000000000000;
  sub_23AA724E8(v1 + 168, (uint64_t)v6, qword_2542E48C0);
  sub_23AA724E8((uint64_t)v6, (uint64_t)&v9, qword_2542E48C0);
  v4 = v3 == 0xB000000000000000 && (v10 & 0xF000000000000000) == 0xB000000000000000;
  if ((v10 & 0xF000000000000000) != 0xB000000000000000 && v3 != 0xB000000000000000)
    v4 = v9 == v2;
  return !v4;
}

void sub_23AEAF13C(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_23AEAF180(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)&loc_23AEAF18C + *((int *)qword_23AEB0498 + a3)))();
}

BOOL sub_23AEAF19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  _BYTE v8[64];
  _BYTE v9[128];
  _QWORD v10[40];

  sub_23AA724E8(v0 + 128, (uint64_t)v9, qword_2542E48C0);
  sub_23AA724E8((uint64_t)v9, (uint64_t)v10, qword_2542E48C0);
  v3 = v10[0];
  v4 = v10[2] & 0xF000000000000000;
  sub_23AA724E8(v1 + 128, (uint64_t)v8, qword_2542E48C0);
  sub_23AA724E8((uint64_t)v8, v2 - 240, qword_2542E48C0);
  v5 = *(_QWORD *)(v2 - 224) & 0xF000000000000000;
  v6 = v5 == 0xB000000000000000;
  if (v4 != 0xB000000000000000)
    v6 = 0;
  if (v5 != 0xB000000000000000 && v4 != 0xB000000000000000)
    v6 = *(_QWORD *)(v2 - 240) == v3;
  return !v6;
}

void sub_23AEB04AC(int a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23AEB04E0@<X0>(_OWORD *a1@<X1>, _OWORD *a2@<X2>, char a3@<W8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  _OWORD v19[15];
  _OWORD v20[17];

  v3 = a1[13];
  v20[12] = a1[12];
  v20[13] = v3;
  v20[14] = a1[14];
  v4 = a1[9];
  v20[8] = a1[8];
  v20[9] = v4;
  v5 = a1[11];
  v20[10] = a1[10];
  v20[11] = v5;
  v6 = a1[5];
  v20[4] = a1[4];
  v20[5] = v6;
  v7 = a1[7];
  v20[6] = a1[6];
  v20[7] = v7;
  v8 = a1[1];
  v20[0] = *a1;
  v20[1] = v8;
  v9 = a1[3];
  v20[2] = a1[2];
  v20[3] = v9;
  v10 = a2[13];
  v19[12] = a2[12];
  v19[13] = v10;
  v19[14] = a2[14];
  v11 = a2[9];
  v19[8] = a2[8];
  v19[9] = v11;
  v12 = a2[11];
  v19[10] = a2[10];
  v19[11] = v12;
  v13 = a2[5];
  v19[4] = a2[4];
  v19[5] = v13;
  v14 = a2[7];
  v19[6] = a2[6];
  v19[7] = v14;
  v15 = a2[1];
  v19[0] = *a2;
  v19[1] = v15;
  v16 = a2[3];
  v19[2] = a2[2];
  v19[3] = v16;
  sub_23AEAE0B0((uint64_t)v20, (uint64_t)v19, a3);
  return v17 & 1;
}

uint64_t sub_23AEB06E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[4];
  uint64_t v8;
  unint64_t v9;

  v7[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_23B1C64F4();
  v3 = MEMORY[0x24BEE1768];
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v7[3] = v3;
  v7[0] = a2;
  sub_23AA94C90((uint64_t)v7);
  v5 = v4;
  sub_23AA8A05C((uint64_t)v7, qword_2542E5640);
  if (v5)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

void sub_23AEB0840(void *a1, void *a2, unint64_t a3, void *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10, unsigned __int8 a11)
{
  if (a11 != 255)
    sub_23AC04E04(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_23AEB0860()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB0870(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  char v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;

  v45 = *(void **)(a1 + 160);
  v41 = *(id *)(a1 + 168);
  v50 = *(_QWORD *)(a1 + 184);
  v47 = *(_QWORD *)(a1 + 192);
  v44 = *(_QWORD *)(a1 + 200);
  v42 = *(void **)(a1 + 240);
  v48 = *(void **)(a1 + 256);
  v49 = *(_QWORD *)(a1 + 288);
  v46 = *(_QWORD *)(a1 + 296);
  v43 = *(_QWORD *)(a1 + 304);
  v40 = *(_QWORD *)(a1 + 312);
  v39 = *(_QWORD *)(a1 + 320);
  v51 = *(_OWORD *)(a1 + 616);
  v83 = *(_OWORD *)(a1 + 1120);
  v84 = *(_OWORD *)(a1 + 1104);
  v81 = *(_OWORD *)(a1 + 1152);
  v82 = *(_OWORD *)(a1 + 1136);
  v79 = *(_OWORD *)(a1 + 1184);
  v80 = *(_OWORD *)(a1 + 1168);
  v77 = *(_OWORD *)(a1 + 1216);
  v78 = *(_OWORD *)(a1 + 1200);
  v75 = *(_OWORD *)(a1 + 1248);
  v76 = *(_OWORD *)(a1 + 1232);
  v74 = *(_OWORD *)(a1 + 1264);
  v73 = *(_OWORD *)(a1 + 1280);
  v72 = *(_OWORD *)(a1 + 1296);
  v71 = *(_OWORD *)(a1 + 1312);
  v70 = *(_OWORD *)(a1 + 1328);
  v69 = *(_OWORD *)(a1 + 1344);
  v68 = *(_OWORD *)(a1 + 1360);
  v67 = *(_OWORD *)(a1 + 1376);
  v66 = *(_OWORD *)(a1 + 1392);
  v65 = *(_OWORD *)(a1 + 1408);
  v64 = *(_OWORD *)(a1 + 1424);
  v63 = *(_OWORD *)(a1 + 1440);
  v62 = *(_OWORD *)(a1 + 1456);
  v61 = *(_OWORD *)(a1 + 1472);
  v56 = *(_OWORD *)(a1 + 1488);
  v2 = *(void **)(a1 + 360);
  v3 = *(void **)(a1 + 368);
  v4 = *(_QWORD *)(a1 + 384);
  v5 = *(_QWORD *)(a1 + 392);
  v6 = *(_QWORD *)(a1 + 400);
  v11 = *(void **)(a1 + 440);
  v12 = *(_QWORD *)(a1 + 552);
  v13 = *(_QWORD *)(a1 + 560);
  v14 = *(_QWORD *)(a1 + 568);
  v15 = *(_QWORD *)(a1 + 576);
  v16 = *(_QWORD *)(a1 + 584);
  v17 = *(_QWORD *)(a1 + 592);
  v18 = *(_QWORD *)(a1 + 600);
  v19 = *(_QWORD *)(a1 + 608);
  v20 = *(void **)(a1 + 656);
  v21 = *(id *)(a1 + 664);
  v22 = *(_QWORD *)(a1 + 680);
  v23 = *(_QWORD *)(a1 + 688);
  v24 = *(_QWORD *)(a1 + 696);
  v25 = *(void **)(a1 + 736);
  v27 = *(void **)(a1 + 752);
  v28 = *(_QWORD *)(a1 + 784);
  v29 = *(_QWORD *)(a1 + 792);
  v30 = *(_QWORD *)(a1 + 800);
  v31 = *(_QWORD *)(a1 + 808);
  v32 = *(_QWORD *)(a1 + 816);
  v33 = *(void **)(a1 + 856);
  v34 = *(id *)(a1 + 864);
  v35 = *(_QWORD *)(a1 + 880);
  v36 = *(_QWORD *)(a1 + 888);
  v37 = *(_QWORD *)(a1 + 896);
  v38 = *(void **)(a1 + 936);
  v52 = *(_QWORD *)(a1 + 1040);
  v53 = *(_QWORD *)(a1 + 1048);
  v54 = *(_QWORD *)(a1 + 1056);
  v55 = *(_QWORD *)(a1 + 1064);
  v57 = *(_QWORD *)(a1 + 1072);
  v58 = *(_QWORD *)(a1 + 1080);
  v59 = *(_QWORD *)(a1 + 1088);
  v60 = *(_QWORD *)(a1 + 1096);
  v7 = *(_BYTE *)(a1 + 176);
  v8 = *(_BYTE *)(a1 + 376);
  v10 = *(_BYTE *)(a1 + 672);
  v26 = *(_BYTE *)(a1 + 872);
  sub_23AAAEE68(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  sub_23AAAEE10(v45, v41, v7);
  sub_23AAAEE4C(v50, v47, v44);

  sub_23AAAE4D0(v49, v46, v43, v40, v39);
  sub_23AAAEE10(v2, v3, v8);
  sub_23AAAEE4C(v4, v5, v6);
  swift_bridgeObjectRelease();

  sub_23AAAEE68(v12, v13, v14, v15, v16, v17, v18, v19, v51);
  sub_23AAAEE10(v20, v21, v10);
  sub_23AAAEE4C(v22, v23, v24);

  sub_23AAAE4D0(v28, v29, v30, v31, v32);
  sub_23AAAEE10(v33, v34, v26);
  sub_23AAAEE4C(v35, v36, v37);
  swift_bridgeObjectRelease();

  sub_23AAAEC3C(v52, v53, v54, v55, v57, v58, v59, v60, v84, *((uint64_t *)&v84 + 1), v83, *((uint64_t *)&v83 + 1), v82, *((uint64_t *)&v82 + 1), v81, *((uint64_t *)&v81 + 1), v80, *((uint64_t *)&v80 + 1), (void *)v79,
    *((void **)&v79 + 1),
    v78,
    *((uint64_t *)&v78 + 1),
    v77,
    *((unint64_t *)&v77 + 1),
    v76,
    *((uint64_t *)&v76 + 1),
    v75,
    *((uint64_t *)&v75 + 1),
    (void *)v74,
    *((uint64_t *)&v74 + 1),
    (void *)v73,
    *((uint64_t *)&v73 + 1),
    v72,
    *((uint64_t *)&v72 + 1),
    v71,
    *((unint64_t *)&v71 + 1),
    v70,
    *((uint64_t *)&v70 + 1),
    v69,
    *((uint64_t *)&v69 + 1),
    v68,
    *((uint64_t *)&v68 + 1),
    v67,
    *((void **)&v67 + 1),
    (void *)v66,
    SBYTE8(v66),
    v65,
    *((uint64_t *)&v65 + 1),
    v64,
    *((uint64_t *)&v64 + 1),
    v63,
    *((uint64_t *)&v63 + 1),
    v62,
    *((void **)&v62 + 1),
    v61,
    *((uint64_t *)&v61 + 1),
    v56);
  return a1;
}

uint64_t sub_23AEB0E5C(unsigned __int8 *a1)
{
  uint64_t v1;
  const void *v2;
  const void *v3;
  int v4;
  char v5;
  _BYTE v7[496];
  _BYTE __dst[496];

  v2 = *(const void **)(v1 + 24);
  v3 = *(const void **)(v1 + 32);
  v4 = *a1;
  memcpy(v7, v2, sizeof(v7));
  memcpy(__dst, v3, sizeof(__dst));
  sub_23AEB04AC(v4);
  return v5 & 1;
}

uint64_t sub_23AEB0EC4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAAEE10(*(void **)(v0 + 168), *(id *)(v0 + 176), *(_BYTE *)(v0 + 184));
  v1 = *(_QWORD *)(v0 + 208);
  if (v1 >> 60 != 15 && (v1 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 200), v1);

  if (*(_QWORD *)(v0 + 312) != 1)
  {
    sub_23AAAE53C(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 304));
    swift_bridgeObjectRelease();
    sub_23AAAE53C(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAAEE10(*(void **)(v0 + 368), *(id *)(v0 + 376), *(_BYTE *)(v0 + 384));
  v3 = *(_QWORD *)(v0 + 408);
  if (v3 >> 60 != 15 && (v3 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 400), v3);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AEB0FC8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  const void *v4;
  char v5;
  uint64_t v6;
  _BYTE v8[496];

  v3 = *(_QWORD *)(v1 + 16);
  v4 = (const void *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 520);
  v6 = *(_QWORD *)(v1 + 528);
  memcpy(v8, v4, sizeof(v8));
  return sub_23AE84BB8(a1, v3, v8, v5, v6);
}

uint64_t sub_23AEB1030()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1040(void *a1)
{
  uint64_t v1;

  return sub_23AE12690(a1, **(_QWORD **)(v1 + 16), *(_BYTE *)(*(_QWORD *)(v1 + 16) + 8), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB1050()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB1058(void *a1)
{
  uint64_t v1;

  return sub_23AE113AC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB1060()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1070()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB1078(void *a1)
{
  uint64_t v1;

  return sub_23AE119E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB1080()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1090()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB1098(void *a1)
{
  uint64_t v1;

  return sub_23AE11654(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB10A0()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB10B0()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB10B8(void *a1)
{
  uint64_t v1;

  return sub_23AE0FE84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB10C0()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB10D0()
{
  uint64_t v0;

  swift_release();
  sub_23AAAEE10(*(void **)(v0 + 24), *(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_23AEB1100()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1110()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB1118()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1128()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB114C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB115C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AEB1180@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_23AE1B8B4(*a1, *(_QWORD *)(v2 + 16));
  *a2 = result;
  a2[1] = v5;
  return result;
}

unint64_t sub_23AEB11AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2542E2048;
  if (!qword_2542E2048)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542DE7B0);
    v2 = sub_23AAB5A28(&qword_2542E1EC0, &qword_2542E54C8, MEMORY[0x24BEE12B0]);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE2B38], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2542E2048);
  }
  return result;
}

void sub_23AEB1228(void *a1, id a2, char a3)
{
  if (a3 != -1)
    sub_23AAAEE10(a1, a2, a3);
}

uint64_t sub_23AEB123C()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB1244(void *a1)
{
  uint64_t v1;

  return sub_23AE0EEF4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB124C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB125C()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB1264(void *a1)
{
  uint64_t v1;

  return sub_23AE0F30C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB126C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB127C()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB1284()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1294()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB129C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB12AC()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB12B4()
{
  return swift_deallocObject();
}

unint64_t sub_23AEB12C4()
{
  unint64_t result;

  result = qword_2542DDEA0[0];
  if (!qword_2542DDEA0[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E387C, &_s9SQLFieldsON_0);
    atomic_store(result, qword_2542DDEA0);
  }
  return result;
}

unint64_t sub_23AEB1308()
{
  unint64_t result;

  result = qword_2569E6138;
  if (!qword_2569E6138)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E3CD8, &_s16PlaceholderErrorVN);
    atomic_store(result, (unint64_t *)&qword_2569E6138);
  }
  return result;
}

uint64_t sub_23AEB134C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;

  if (*(_QWORD *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAAEE10(*(void **)(v0 + 160), *(id *)(v0 + 168), *(_BYTE *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 200);
  if (v1 >> 60 != 15 && (v1 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 192), v1);

  if (*(_QWORD *)(v0 + 304) != 1)
  {
    sub_23AAAE53C(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease();
    sub_23AAAE53C(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAAEE10(*(void **)(v0 + 360), *(id *)(v0 + 368), *(_BYTE *)(v0 + 376));
  v3 = *(_QWORD *)(v0 + 400);
  if (v3 >> 60 != 15 && (v3 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 392), v3);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AEB1450@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23AEA7844(a1, (const void *)(v2 + 16), a2);
}

unint64_t sub_23AEB145C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2569E6148;
  if (!qword_2569E6148)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E2060);
    v2 = sub_23AAB5A28((unint64_t *)&unk_2569E6150, &qword_2542E7498, MEMORY[0x24BEE12B0]);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE2B38], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2569E6148);
  }
  return result;
}

uint64_t sub_23AEB14D8(uint64_t a1)
{
  sub_23AAAE5C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return a1;
}

uint64_t sub_23AEB1510(uint64_t a1)
{
  sub_23AAAE478(*(id *)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_23AEB1540(uint64_t a1)
{
  sub_23AAAEE10(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_23AEB1570()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1580(uint64_t a1)
{
  uint64_t v1;

  return sub_23AEB06E8(a1, **(_QWORD **)(v1 + 16));
}

void sub_23AEB15BC(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, unsigned __int8 a16)
{
  if (a16 != 255)
    sub_23AC04FC4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_23AEB15F4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1604(uint64_t a1)
{
  uint64_t v1;

  return sub_23AF5AAA8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23AEB160C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB161C(void *a1)
{
  uint64_t v1;

  return sub_23AE5917C(a1, *(unsigned __int8 **)(v1 + 16), **(_QWORD **)(v1 + 24), *(_BYTE *)(*(_QWORD *)(v1 + 24) + 8), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23AEB1634(uint64_t a1)
{
  uint64_t v1;

  return sub_23AE59474(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t **)(v1 + 40)) & 1;
}

uint64_t sub_23AEB1654()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB1678(uint64_t a1)
{
  uint64_t v1;

  return sub_23AE56DE8(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_23AEB1684()
{
  return swift_deallocObject();
}

unint64_t sub_23AEB1694()
{
  unint64_t result;

  result = qword_2542E3220;
  if (!qword_2542E3220)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E3A44, &type metadata for JobSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E3220);
  }
  return result;
}

unint64_t sub_23AEB16D8()
{
  unint64_t result;

  result = qword_2542E3568;
  if (!qword_2542E3568)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DF758, &type metadata for SQLJobID);
    atomic_store(result, (unint64_t *)&qword_2542E3568);
  }
  return result;
}

uint64_t sub_23AEB171C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23AEB1750(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {

    swift_bridgeObjectRelease();
  }
}

id sub_23AEB1790(id result, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  if (result)
  {
    v4 = result;
    swift_bridgeObjectRetain();
    return a4;
  }
  return result;
}

uint64_t sub_23AEB17D0()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v0 + 24), v1);
  return swift_deallocObject();
}

uint64_t sub_23AEB1804()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AEB1828(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23AEB1850(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

id sub_23AEB1878(id result, uint64_t a2)
{
  if ((~(_DWORD)a2 & 0xFF00) != 0)
    return sub_23AA88218(result, a2, BYTE1(a2) & 1);
  return result;
}

void sub_23AEB1890(void *a1, uint64_t a2)
{
  if ((~(_DWORD)a2 & 0xFF00) != 0)
    sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
}

unint64_t sub_23AEB18AC(uint64_t a1)
{
  uint64_t v1;

  return sub_23AE576C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB18B4()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_229Tm()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB18F0(uint64_t a1)
{
  uint64_t v1;

  return sub_23AE5743C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB18F8()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1908()
{
  return swift_deallocObject();
}

unint64_t sub_23AEB1918(uint64_t a1)
{
  uint64_t v1;

  return sub_23AF53118(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23AEB1920()
{
  return swift_deallocObject();
}

void sub_23AEB1930(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, char a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if (a57)
  {

    sub_23AAAE4D0(a5, a6, a7, a8, a9);
    sub_23AAAEE10(a14, a15, a16);
    sub_23AAAEE4C(a17, a18, a19);

    sub_23AAAEE68(a31, a32, a33, a34, a35, a36, a37, a38, a39);
    sub_23AAAEE10(a44, a45, a46);
    sub_23AAAEE4C(a47, a48, a49);
    swift_bridgeObjectRelease();

  }
}

id sub_23AEB1B4C(id result, uint64_t a2)
{
  if ((~(_DWORD)a2 & 0xFF00) != 0)
    return sub_23AB5692C(result, a2, BYTE1(a2) & 1);
  return result;
}

uint64_t sub_23AEB1B64(void *a1)
{
  uint64_t v1;

  return sub_23AE58DFC(a1, *(unsigned __int8 **)(v1 + 16), **(_QWORD **)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_23AEB1B78(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_23AEA4788(a1, **(void ***)(v2 + 16), a2);
}

uint64_t sub_23AEB1B94()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;

  if (*(_QWORD *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAAEE10(*(void **)(v0 + 160), *(id *)(v0 + 168), *(_BYTE *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 200);
  if (v1 >> 60 != 15 && (v1 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 192), v1);

  if (*(_QWORD *)(v0 + 304) != 1)
  {
    sub_23AAAE53C(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease();
    sub_23AAAE53C(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAAEE10(*(void **)(v0 + 360), *(id *)(v0 + 368), *(_BYTE *)(v0 + 376));
  v3 = *(_QWORD *)(v0 + 400);
  if (v3 >> 60 != 15 && (v3 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 392), v3);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AEB1C90(void *a1)
{
  uint64_t v1;
  _BYTE __dst[504];

  memcpy(__dst, (const void *)(v1 + 16), 0x1F0uLL);
  return sub_23AEA4474(a1, (uint64_t)__dst);
}

uint64_t sub_23AEB1CD0()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1CE0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23AEA7914(v1, a1);
}

uint64_t sub_23AEB1CE8()
{
  return sub_23AE82058();
}

uint64_t sub_23AEB1CF0()
{
  return sub_23AE81744();
}

uint64_t sub_23AEB1D04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB1D28(void *a1)
{
  uint64_t v1;

  return sub_23AEB1F48(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
}

uint64_t sub_23AEB1D44()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1D54()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1D64(void *a1)
{
  uint64_t v1;

  return sub_23AEA2B7C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_23AEB1DA0()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB1DB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB1DD4(void *a1)
{
  uint64_t v1;

  return sub_23AEB20A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
}

uint64_t sub_23AEB1DF0()
{
  return swift_deallocObject();
}

unint64_t sub_23AEB1E00(void *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  id v8;
  id v9;

  if (((a3 | a5) & 1) != 0)
    return 0xD000000000000031;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(a1, sel_bindLongParameter_, a2);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v9 = objc_msgSend(a1, sel_bindLongParameter_, a4);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t sub_23AEB1F48(void *a1, unint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  id v14;
  uint64_t v16;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  if (!a3)
    goto LABEL_5;
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  v14 = objc_msgSend(a1, sel_bindLongParameter_, a2, 0, 0xE000000000000000);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AEB1E00(a1, a4, a5 & 1, a6, a7 & 1);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_23AEB20A8(void *a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t result;
  _QWORD v20[4];
  uint64_t v21;
  unint64_t v22;

  v20[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_23B1C64F4();
  v20[3] = MEMORY[0x24BEE1768];
  v20[0] = a2;
  sub_23AA94C90((uint64_t)v20);
  v17 = v16;
  sub_23AA8A05C((uint64_t)v20, qword_2542E5640);
  if (v17)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    if (a4)
    {
      if (a4 != 1)
      {
        a3 = (unint64_t)(a3 != 0) << 63;
        goto LABEL_8;
      }
      if ((a3 & 0x8000000000000000) == 0)
      {
LABEL_8:
        v18 = objc_msgSend(a1, sel_bindLongParameter_, a3);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        sub_23AEB1E00(a1, a5, a6 & 1, a7, a8 & 1);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        return v21;
      }
      __break(1u);
    }
    a3 = -(uint64_t)a3;
    goto LABEL_8;
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AEB22E4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB22F4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB2304()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB2314(void *a1)
{
  uint64_t v1;

  return sub_23AEA3E14(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_23AEB2320()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB2330()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB2340(void *a1)
{
  uint64_t v1;

  return sub_23AEA3FD8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_23AEB235C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB2374()
{
  return 32;
}

__n128 sub_23AEB2380(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

unint64_t sub_23AEB238C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569E81A0;
  if (!qword_2569E81A0)
  {
    v1 = sub_23AA9F52C(255, &qword_2542E7560);
    result = MEMORY[0x23B8613CC](&unk_23B1D8B2C, v1);
    atomic_store(result, (unint64_t *)&qword_2569E81A0);
  }
  return result;
}

uint64_t sub_23AEB23E4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB23F4(void *a1)
{
  uint64_t v1;

  return sub_23AEA3CC4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_23AEB2400()
{
  return swift_deallocObject();
}

void sub_23AEB2410(void *a1, unint64_t a2, void *a3, unint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v23;

  switch(a18)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
    case 11:
    case 12:
    case 13:
      v23 = (a2 >> 8) & 1;
      goto LABEL_3;
    case 1:

      break;
    case 6:
    case 7:
      sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
      a1 = a3;
      a2 = a4;
      v23 = (a4 >> 8) & 1;
LABEL_3:
      sub_23AA862DC(a1, a2, v23);
      break;
    case 8:
      sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
      sub_23AEAD8A8(a3, (void *)a4, a5, a6, a7, a8, a9, a10, a11, SBYTE2(a11));
      break;
    case 9:
      sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
      sub_23AEAD994(a3, (void *)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
      break;
    default:
      return;
  }
}

void sub_23AEB25D8()
{
  uint64_t v0;

  sub_23AE87544(*(_QWORD *)(v0 + 16), **(void ***)(v0 + 24));
}

void sub_23AEB25F4(id *a1)
{
  sub_23AEA7984(a1);
}

unint64_t sub_23AEB260C()
{
  unint64_t result;

  result = qword_2542E34D8[0];
  if (!qword_2542E34D8[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2C8C, &type metadata for SpeculativeSetPacerState);
    atomic_store(result, qword_2542E34D8);
  }
  return result;
}

uint64_t sub_23AEB2650(void *a1)
{
  uint64_t v1;

  return sub_23AE136D8(a1, **(_QWORD **)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8), *(void **)(*(_QWORD *)(v1 + 16) + 16));
}

uint64_t sub_23AEB2660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23AEB26F8(a1, a2, a3, a4, a5, sub_23AEAA8D4);
}

uint64_t sub_23AEB267C()
{
  return objectdestroy_344Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23AEB268C(uint64_t a1)
{
  return sub_23AC048C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ABEBD5C);
}

uint64_t sub_23AEB2698()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB26A8()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB26B0(void *a1)
{
  uint64_t v1;

  return sub_23AE12D6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB26B8()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB26C8(void *a1)
{
  uint64_t v1;

  return sub_23AE13CFC(a1, **(_QWORD **)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16), *(_BYTE *)(*(_QWORD *)(v1 + 16) + 24));
}

uint64_t sub_23AEB26DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23AEB26F8(a1, a2, a3, a4, a5, sub_23AEAABB8);
}

uint64_t sub_23AEB26F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v6;

  return a6(a1, *(_QWORD *)(v6 + 16), **(_QWORD **)(v6 + 24), *(_QWORD *)(v6 + 32)) & 1;
}

uint64_t sub_23AEB271C()
{
  return objectdestroy_344Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23AEB272C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB273C()
{
  return objectdestroy_82Tm();
}

uint64_t sub_23AEB2744(void *a1)
{
  uint64_t v1;

  return sub_23AE130A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AEB274C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB275C()
{
  uint64_t v0;

  return sub_23AE709E8(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_23AEB2774()
{
  uint64_t v0;

  return sub_23AE70970(*(_QWORD ***)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23AEB278C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB27B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v5 = v0 + v3 + *(int *)(v1 + 52);
  v6 = sub_23B1C60A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23AEB2870(void *a1, char a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AE71B34(a1, v4, *(_QWORD *)(v2 + 16), v2 + v6, *(void **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23AEB28EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AEB29C0(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  v5 = v0 + v3 + *(int *)(v1 + 52);
  v6 = sub_23B1C60A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_23AEB29C0(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_23AEB29CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AE71E2C(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23AEB2A38()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23AEB2A5C()
{
  return objectdestroy_82Tm();
}

void sub_23AEB2A64()
{
  uint64_t v0;

  sub_23ADF468C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_23AEB2A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C60A4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 56));

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23AEB2B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB2BA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  v3 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23AFC4B8C(a1, v1 + v4, *v5, v5[1]);
}

uint64_t sub_23AEB2BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB2CF8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB2D24()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

double sub_23AEB2D50(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 4;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_23AEB2D88()
{
  return sub_23AEB3BA8((uint64_t *)&unk_2542E4750);
}

uint64_t sub_23AEB2D94()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB2DA4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB2DB8()
{
  return sub_23AEB38E4((uint64_t *)&unk_2542E4750, (uint64_t *)&unk_2542E6B00);
}

uint64_t sub_23AEB2DCC()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB2DDC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_517Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v3 - 1) + 48))(v2, 1, v3))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v2 + v3[12];
    v5 = (int *)type metadata accessor for ItemMetadata();
    v6 = v4 + v5[7];
    v7 = sub_23B1C5BDC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v6, v7);
    v9(v4 + v5[8], v7);
    swift_bridgeObjectRelease();
    v10 = v4 + v5[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
      v9(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = (uint64_t *)(v4 + v5[33]);
    v12 = v11[1];
    if (v12 >> 60 != 15)
      sub_23AAAE53C(*v11, v12);
    swift_bridgeObjectRelease();
    v13 = v2 + v3[13];
    v14 = *(void **)(v13 + 16);
    if (v14 != (void *)1)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v13 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_23AAA12F0(*(_QWORD *)(v2 + v3[17]), *(_QWORD *)(v2 + v3[17] + 8));
  }
  return swift_deallocObject();
}

uint64_t sub_23AEB302C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB303C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB304C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23AEA79CC(a1, (void (*)(uint64_t))sub_23AEB3074, (uint64_t (*)(uint64_t, uint64_t))sub_23AE16300, a2);
}

id sub_23AEB3074(id result, unint64_t a2, void *a3, unint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v24;

  switch(a18)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
    case 11:
    case 12:
    case 13:
      v24 = (a2 >> 8) & 1;
      goto LABEL_3;
    case 1:
      result = result;
      break;
    case 6:
    case 7:
      sub_23AB5692C(result, a2, BYTE1(a2) & 1);
      result = a3;
      a2 = a4;
      v24 = (a4 >> 8) & 1;
LABEL_3:
      result = sub_23AB5692C(result, a2, v24);
      break;
    case 8:
      sub_23AB5692C(result, a2, BYTE1(a2) & 1);
      result = sub_23AEAD7F8(a3, (void *)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
      break;
    case 9:
      sub_23AB5692C(result, a2, BYTE1(a2) & 1);
      result = sub_23AEAD70C(a3, (void *)a4, a5, a6, a7, a8, a9, a10, a11, SBYTE2(a11));
      break;
    default:
      return result;
  }
  return result;
}

void *sub_23AEB323C(void *result, void *a2)
{
  if (result)
  {

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_23AEB3270(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v4;

  BYTE4(v4) = *(_BYTE *)(a1 + 115);
  LODWORD(v4) = *(unsigned __int16 *)(a1 + 112) | (*(unsigned __int8 *)(a1 + 114) << 16);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), v4);
  return a1;
}

void sub_23AEB32DC(void *a1, unint64_t a2, void *a3, unint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, char a16, char a17, char a18)
{
  uint64_t v24;

  switch(a18)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
    case 11:
    case 12:
    case 13:
      v24 = (a2 >> 8) & 1;
      goto LABEL_3;
    case 1:

      break;
    case 6:
    case 7:
      sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);
      a1 = a3;
      a2 = a4;
      v24 = (a4 >> 8) & 1;
LABEL_3:
      sub_23AB7C6B4(a1, a2, v24);
      break;
    case 8:
      sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);
      sub_23AEAD994(a3, (void *)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
      break;
    case 9:
      sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);
      sub_23AEAD8A8(a3, (void *)a4, a5, a6, a7, a8, a9, a10, a11, SBYTE2(a11));
      break;
    default:
      return;
  }
}

uint64_t sub_23AEB34A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  id v9;
  id v10;
  void *v12;
  void *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v12 = *(void **)(a1 + 112);
  v13 = *(void **)(a1 + 104);
  v16 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 144);
  v19 = *(void **)(a1 + 184);
  v28 = *(_QWORD *)(a1 + 248);
  v29 = *(_QWORD *)(a1 + 240);
  v26 = *(_QWORD *)(a1 + 264);
  v27 = *(_QWORD *)(a1 + 256);
  v24 = *(_QWORD *)(a1 + 280);
  v25 = *(_QWORD *)(a1 + 272);
  v22 = *(_QWORD *)(a1 + 296);
  v23 = *(_QWORD *)(a1 + 288);
  v18 = *(_OWORD *)(a1 + 304);
  v20 = *(void **)(a1 + 352);
  v21 = *(void **)(a1 + 344);
  v31 = *(_QWORD *)(a1 + 376);
  v32 = *(_QWORD *)(a1 + 368);
  v30 = *(_QWORD *)(a1 + 384);
  v33 = *(void **)(a1 + 424);
  v7 = *(_BYTE *)(a1 + 120);
  v14 = *(_BYTE *)(a1 + 360);
  v8 = *(id *)a1;
  sub_23AAAE5C0(v2, v3, v4, v5, v6);
  sub_23AAAE478(v13, v12, v7);
  sub_23AAAE4B4(v17, v16, v15);
  v9 = v19;
  sub_23AAA7638(v29, v28, v27, v26, v25, v24, v23, v22, v18);
  sub_23AAAE478(v21, v20, v14);
  sub_23AAAE4B4(v32, v31, v30);
  v10 = v33;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_23AEB367C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, char a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  id v61;
  id v62;
  id v63;

  if (a57)
  {
    v61 = result;
    sub_23AAAE5C0(a5, a6, a7, a8, a9);
    sub_23AAAE478(a14, a15, a16);
    sub_23AAAE4B4(a17, a18, a19);
    v62 = a24;
    sub_23AAA7638(a31, a32, a33, a34, a35, a36, a37, a38, a39);
    sub_23AAAE478(a44, a45, a46);
    sub_23AAAE4B4(a47, a48, a49);
    v63 = a54;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23AEB38A0()
{
  return sub_23AEB3BA8(&qword_2542E4770);
}

uint64_t sub_23AEB38AC()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB38BC()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB38D0()
{
  return sub_23AEB38E4(&qword_2542E4770, (uint64_t *)&unk_2542E4760);
}

uint64_t sub_23AEB38E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return sub_23AE9F198(v2 + ((v5 + 16) & ~v5), a1, a2);
}

uint64_t sub_23AEB3930()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3940()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_571Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v3 - 1) + 48))(v2, 1, v3))
  {

    sub_23AAAE53C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
    swift_bridgeObjectRelease();
    sub_23AAAE53C(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v2 + v3[12];
    v5 = (int *)type metadata accessor for ItemMetadata();
    v6 = v4 + v5[7];
    v7 = sub_23B1C5BDC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v6, v7);
    v9(v4 + v5[8], v7);
    swift_bridgeObjectRelease();
    v10 = v4 + v5[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
      v9(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = (uint64_t *)(v4 + v5[33]);
    v12 = v11[1];
    if (v12 >> 60 != 15)
      sub_23AAAE53C(*v11, v12);
    swift_bridgeObjectRelease();
    v13 = v2 + v3[13];
    v14 = *(void **)(v13 + 16);
    if (v14 != (void *)1)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v13 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_23AAA12F0(*(_QWORD *)(v2 + v3[17]), *(_QWORD *)(v2 + v3[17] + 8));
  }
  return swift_deallocObject();
}

uint64_t sub_23AEB3BA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return sub_23AE9F118(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_23AEB3BE4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3BF4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3C04(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 120);
  if (v1 > 0xA)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

_QWORD *sub_23AEB3C18@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_23AE25CEC(*(_QWORD *)(v1 + 16), **(_QWORD **)(v1 + 24), *(_BYTE *)(*(_QWORD *)(v1 + 24) + 8), a1);
}

_QWORD *sub_23AEB3C38@<X0>(void *a1@<X8>)
{
  return sub_23AEB3C4C(a1);
}

_QWORD *sub_23AEB3C4C@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_23AFFA330(**(_QWORD **)(v1 + 24), *(_BYTE *)(*(_QWORD *)(v1 + 24) + 8), a1);
}

void sub_23AEB3C78(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23AEA4788(*(_QWORD *)(v1 + 16), **(void ***)(v1 + 24), a1);
}

void sub_23AEB3C94(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23AE28874(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

_QWORD *sub_23AEB3CAC@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_23AFFA330(*(_QWORD *)(*(_QWORD *)(v1 + 24) + 16), *(_BYTE *)(*(_QWORD *)(v1 + 24) + 24), a1);
}

uint64_t sub_23AEB3CD8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_23AEB3D3C()
{
  return sub_23AE204A4();
}

uint64_t sub_23AEB3D44(uint64_t a1, void **a2, char a3)
{
  uint64_t v3;

  return sub_23AE21688(*(void **)a1, *(_BYTE *)(a1 + 8), *a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24)) & 1;
}

uint64_t sub_23AEB3D74()
{
  return sub_23AE38828();
}

uint64_t sub_23AEB3D8C()
{
  uint64_t v0;

  return sub_23AE388D0(*(_QWORD *)(v0 + 16), *(_QWORD ***)(v0 + 24));
}

void sub_23AEB3DA4()
{
  uint64_t v0;

  sub_23AE08720(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_23AEB3DC0()
{
  uint64_t v0;

  return sub_23AE08AF0(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_23AEB3DDC(_QWORD *a1)
{
  uint64_t v1;

  return sub_23AE08EBC(a1, v1, (uint64_t *)&unk_2542E05B0);
}

uint64_t sub_23AEB3DFC(_QWORD *a1)
{
  uint64_t v1;

  return sub_23AE08EBC(a1, v1, (uint64_t *)&unk_2569E6520);
}

uint64_t sub_23AEB3E1C()
{
  swift_release();
  return swift_deallocObject();
}

BOOL sub_23AEB3E40(uint64_t a1)
{
  uint64_t v1;

  return sub_23AE3F71C(a1, *(_BYTE **)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23AEB3E50()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3E60()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3E70()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3E80()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

void sub_23AEB3EA4(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  uint64_t v3;

  sub_23AE3C1A4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_23AEB3EAC(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  uint64_t v3;

  sub_23AE3C25C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_23AEB3EB4(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  sub_23AE3C854(a1, a2, a3);
}

void sub_23AEB3EBC(sqlite3_context *a1)
{
  sub_23AE3CD68(a1);
}

uint64_t sub_23AEB3EC4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3ED4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_23AEB3EF4(void *a1)
{
  uint64_t v1;

  return sub_23AE3D014(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40));
}

uint64_t sub_23AEB3F18()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3F28(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1360B4(a1, *(_BYTE **)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_23AEB3F38()
{
  return swift_deallocObject();
}

unint64_t sub_23AEB3F48(uint64_t a1, char a2)
{
  return sub_23ADFE734(a1, a2);
}

uint64_t sub_23AEB3F60()
{
  return sub_23AE4F6C4();
}

uint64_t sub_23AEB3F88()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3F98()
{
  return sub_23AE4F6C4();
}

uint64_t sub_23AEB3FC0()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3FD0()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3FE0()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB3FF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23AEA7AAC(a1, a2, *(uint64_t **)(v2 + 16), (void (*)(_QWORD, uint64_t, uint64_t))sub_23AB5692C, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_23AF99464);
}

uint64_t sub_23AEB4018()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB403C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB404C()
{
  return objectdestroy_750Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_23AB7C6B4);
}

uint64_t sub_23AEB4058(uint64_t a1)
{
  return sub_23AEB420C(a1, (uint64_t)&unk_250BFFC20, (uint64_t)sub_23AEB4100, (void (*)(_QWORD, _QWORD, _QWORD))sub_23AEA9B94);
}

uint64_t sub_23AEB4074()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB4084()
{
  return objectdestroy_750Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_23AB7C6B4);
}

uint64_t sub_23AEB4090(uint64_t a1)
{
  return sub_23AEB40A4(a1, (uint64_t)sub_23AEA9B94, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))sub_23ADFDBD8);
}

uint64_t sub_23AEB40A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;

  return a3(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(unsigned __int8 *)(v3 + 32) | (*(unsigned __int8 *)(v3 + 34) << 16) | (*(unsigned __int8 *)(v3 + 33) << 8), a2);
}

uint64_t sub_23AEB40E0()
{
  return swift_deallocObject();
}

unint64_t sub_23AEB40F0(void *a1)
{
  uint64_t v1;

  return sub_23AEAA2B8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), **(void ***)(v1 + 40));
}

void sub_23AEB4100(char *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_23AB7B698(a1, a2);
}

uint64_t sub_23AEB4108()
{
  return objectdestroy_750Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_23AB7C6B4);
}

uint64_t sub_23AEB4114(uint64_t a1)
{
  return sub_23AEB40A4(a1, (uint64_t)sub_23AEA9B94, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))sub_23ADFDAE8);
}

uint64_t sub_23AEB4128()
{
  return swift_deallocObject();
}

unint64_t sub_23AEB4138()
{
  unint64_t result;

  result = qword_2542E05C8;
  if (!qword_2542E05C8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1A94, &_s9SQLFieldsON_3);
    atomic_store(result, (unint64_t *)&qword_2542E05C8);
  }
  return result;
}

uint64_t sub_23AEB417C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB418C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23AEA7AAC(a1, a2, *(uint64_t **)(v2 + 16), (void (*)(_QWORD, uint64_t, uint64_t))sub_23AA88218, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_23AF99478);
}

uint64_t sub_23AEB41B4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AB733F4(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_23AEB41D4()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB41E4()
{
  return objectdestroy_750Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_23AA862DC);
}

uint64_t sub_23AEB41F0(uint64_t a1)
{
  return sub_23AEB420C(a1, (uint64_t)&unk_250BFFEC8, (uint64_t)sub_23AEB5950, (void (*)(_QWORD, _QWORD, _QWORD))sub_23AEA989C);
}

uint64_t sub_23AEB420C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;

  return sub_23ADFDCD4(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(unsigned __int8 *)(v4 + 32) | (*(unsigned __int8 *)(v4 + 34) << 16) | (*(unsigned __int8 *)(v4 + 33) << 8), a2, a3, a4);
}

uint64_t sub_23AEB424C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB425C()
{
  return objectdestroy_750Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_23AA862DC);
}

uint64_t sub_23AEB4268(uint64_t a1)
{
  return sub_23AEB40A4(a1, (uint64_t)sub_23AEA989C, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))sub_23ADFDBD8);
}

uint64_t sub_23AEB427C()
{
  return swift_deallocObject();
}

unint64_t sub_23AEB428C(void *a1)
{
  uint64_t v1;

  return sub_23AEAA58C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), **(_QWORD **)(v1 + 40), *(_BYTE *)(*(_QWORD *)(v1 + 40) + 8));
}

uint64_t sub_23AEB42A0()
{
  return objectdestroy_750Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_23AA862DC);
}

uint64_t objectdestroy_750Tm(void (*a1)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33));
  return swift_deallocObject();
}

uint64_t sub_23AEB42EC(uint64_t a1)
{
  return sub_23AEB40A4(a1, (uint64_t)sub_23AEA989C, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))sub_23ADFDAE8);
}

uint64_t sub_23AEB4300()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB4310(uint64_t a1)
{
  uint64_t v1;

  return sub_23AA94390(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_23AEB432C()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB4344()
{
  return 32;
}

__n128 sub_23AEB4350(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_23AEB435C()
{
  return sub_23AE6AEDC();
}

uint64_t sub_23AEB4364()
{
  return sub_23AE6B3C0();
}

void sub_23AEB436C()
{
  sub_23AE2B1C0();
}

uint64_t sub_23AEB4384()
{
  uint64_t v0;

  return sub_23AE756D4(v0 + 16, *(_QWORD *)(v0 + 80));
}

uint64_t sub_23AEB43A4()
{
  uint64_t v0;

  return sub_23AE75608(v0 + 16, *(_QWORD *)(v0 + 80));
}

id sub_23AEB43C4(id result, void *a2, uint64_t a3, char a4)
{
  void *v4;
  id v6;

  v4 = result;
  if (a4 != 3 && a4 != 1)
  {
    if (a4)
      return result;
    swift_retain();
    v6 = v4;
    result = a2;
  }
  return result;
}

uint64_t sub_23AEB4428(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      result = swift_bridgeObjectRetain();
      break;
    case 3:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

void sub_23AEB4464(void *a1, void *a2, uint64_t a3, char a4)
{
  if (a4 == 3 || a4 == 1)
  {

  }
  else if (!a4)
  {

    swift_release();
  }
}

uint64_t sub_23AEB44B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23AEB44EC()
{
  return sub_23AEB45A8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AE07CA4);
}

uint64_t sub_23AEB4508()
{
  uint64_t v0;

  swift_release();
  sub_23ABE4D94(*(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_BYTE *)(v0 + 48));
  sub_23AEB4464(*(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject();
}

void sub_23AEB454C()
{
  uint64_t v0;

  sub_23AEA1AFC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_23AEB458C()
{
  return sub_23AEB45A8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AE083F4);
}

uint64_t sub_23AEB45A8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), **(_QWORD **)(v1 + 24), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16), *(unsigned __int8 *)(*(_QWORD *)(v1 + 24) + 24));
}

uint64_t sub_23AEB45D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23AEA7C20(*(_QWORD *)(v1 + 16), *(__int128 **)(v1 + 24), a1);
}

uint64_t sub_23AEB45E8(uint64_t a1)
{
  return sub_23AEB4628(a1) & 1;
}

id *sub_23AEB4600(id *a1)
{

  return a1;
}

uint64_t sub_23AEB4628(uint64_t a1)
{
  uint64_t v1;
  char v2;

  sub_23AE06408(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), **(_QWORD **)(v1 + 16), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16), *(_BYTE *)(*(_QWORD *)(v1 + 16) + 24));
  return v2 & 1;
}

uint64_t sub_23AEB4670(uint64_t a1)
{
  uint64_t v1;

  return sub_23AEA7CC8(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t objectdestroy_872Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB46D4()
{
  uint64_t v0;

  return sub_23AE6669C(v0 + 16, *(_QWORD *)(v0 + 80));
}

uint64_t sub_23AEB46F0()
{
  return sub_23AEB4A78((uint64_t (*)(uint64_t, _BYTE *))sub_23AE080B4);
}

uint64_t sub_23AEB470C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 66) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  if (!swift_getEnumCaseMultiPayload())
  {
    v3 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10) + 48);
    v4 = type metadata accessor for VFSItem(0);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
    {
      swift_bridgeObjectRelease();
      v21 = v4;
      v22 = v3;
      v5 = v3 + *(int *)(v4 + 28);
      v6 = (int *)type metadata accessor for ItemMetadata();
      v7 = v5 + v6[7];
      v8 = sub_23B1C5BDC();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
      v10(v7, v8);
      v10(v5 + v6[8], v8);
      swift_bridgeObjectRelease();
      v11 = v5 + v6[29];
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
        v10(v11, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = (uint64_t *)(v5 + v6[33]);
      v13 = v12[1];
      if (v13 >> 60 != 15)
        sub_23AAAE53C(*v12, v13);
      swift_bridgeObjectRelease();
      v14 = v22 + *(int *)(v21 + 32);
      v15 = *(void **)(v14 + 16);
      if (v15 != (void *)1)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v14 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v16 = v22 + *(int *)(v21 + 48);
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
      {
        v18 = sub_23B1C5A08();
        v19 = *(_QWORD *)(v18 - 8);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
          (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v16, v18);
      }
    }
    swift_release();
  }
  return swift_deallocObject();
}

void sub_23AEB49CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[48];

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 66) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v0 + 24;
  v5 = v0 + v2;
  v6 = *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8));
  sub_23AA724E8(v4, (uint64_t)v7, (uint64_t *)&unk_2542E05B0);
  sub_23AEA1EBC(v3, (uint64_t)v7, v5, v6);
}

uint64_t sub_23AEB4A5C()
{
  return sub_23AEB4A78((uint64_t (*)(uint64_t, _BYTE *))sub_23AE085AC);
}

uint64_t sub_23AEB4A78(uint64_t (*a1)(uint64_t, _BYTE *))
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[48];

  v3 = *(_QWORD *)(v1 + 16);
  sub_23AA724E8(*(_QWORD *)(v1 + 24), (uint64_t)v5, (uint64_t *)&unk_2542E05B0);
  return a1(v3, v5);
}

uint64_t sub_23AEB4AD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23AEA7D94(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23AEB4AEC(uint64_t a1)
{
  uint64_t v1;

  return sub_23AEA7EEC(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23AEB4B08(uint64_t a1)
{
  uint64_t v1;

  return sub_23AEA7E3C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23AEB4B24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23AE73B74(2, 0x7FFFFFFFFFFFFFFFLL);
  if (!v1)
    *a1 = result & 1;
  return result;
}

_QWORD *sub_23AEB4B58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23AEA7F54(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_23AEB4B74(unsigned __int8 a1)
{
  sub_23AEAC248(a1);
  return swift_retain();
}

unint64_t sub_23AEB4B88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2569E6800;
  if (!qword_2569E6800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E67F8);
    v2 = sub_23AAB5A28(&qword_2569E6808, &qword_2569E6810, MEMORY[0x24BEE03C8]);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE2B50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2569E6800);
  }
  return result;
}

unint64_t sub_23AEB4C04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2569E6820;
  if (!qword_2569E6820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E6818);
    v2 = sub_23AAB5A28(&qword_2569E6828, &qword_2569E6830, MEMORY[0x24BEE03C8]);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE2B50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2569E6820);
  }
  return result;
}

uint64_t sub_23AEB4C80()
{
  return sub_23AE56AA4();
}

uint64_t sub_23AEB4C88()
{
  return sub_23AE56B0C();
}

uint64_t sub_23AEB4C90()
{
  uint64_t v0;

  return sub_23AE0E548(v0, (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_23AEB5528, (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_23ACFEA84);
}

uint64_t sub_23AEB4CB8()
{
  uint64_t v0;

  return sub_23AE0E548(v0, (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_23AAFA320, (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_23ACFEA84);
}

unint64_t sub_23AEB4CE0()
{
  unint64_t result;

  result = qword_2569E6868;
  if (!qword_2569E6868)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E4298, &type metadata for SpeculativeDownloadsDiskManagementState);
    atomic_store(result, (unint64_t *)&qword_2569E6868);
  }
  return result;
}

uint64_t sub_23AEB4D24()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23AEB4D48()
{
  sub_23AE4A530();
}

uint64_t sub_23AEB4D60@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_23AE4AB90(a1, v2, &qword_256A079D8, (void (*)(uint64_t))sub_23AF51320, a2);
}

void sub_23AEB4D88(_QWORD *a1)
{
  sub_23AF95B5C(a1);
}

uint64_t sub_23AEB4DB0@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_23AE4AB90(a1, v2, &qword_2542EDFB8, (void (*)(uint64_t))sub_23AD6F608, a2);
}

uint64_t sub_23AEB4DD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AE49E98(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23AEB4DF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AE40AD8(*(_QWORD *)(v1 + 24), 1, a1);
}

uint64_t sub_23AEB4E18@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23AE408BC(*(_QWORD *)(v2 + 24), 0, a1, a2);
}

uint64_t sub_23AEB4E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AE40AD8(*(_QWORD *)(v1 + 24), 0, a1);
}

uint64_t sub_23AEB4E68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AE49BDC(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_23AEB4E8C()
{
  return objectdestroy_344Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23AEB4E9C()
{
  uint64_t v0;

  return sub_23AE41D54(*(_QWORD **)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_23AEB4EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5BDC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23AEB4F44()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_23AE421B4(*(unsigned __int8 *)(v0 + 48), *(uint64_t (**)(_QWORD))(v0 + 56), *(_QWORD *)(v0 + 64), *(uint64_t **)(v0 + 72), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AEB4F90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23B1C5BDC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AEB5028(int a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AE42394(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(_QWORD))(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

unint64_t sub_23AEB5094()
{
  unint64_t result;

  result = qword_2542E2180;
  if (!qword_2542E2180)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE4040], MEMORY[0x24BEE4008]);
    atomic_store(result, (unint64_t *)&qword_2542E2180);
  }
  return result;
}

unint64_t sub_23AEB50D8()
{
  unint64_t result;

  result = qword_2542E1E28;
  if (!qword_2542E1E28)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_2542E1E28);
  }
  return result;
}

uint64_t sub_23AEB511C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEB5140()
{
  return swift_deallocObject();
}

uint64_t sub_23AEB5150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 48) & ~v2);
  v4 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AEB521C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AE3F214(v0 + v2, *(_QWORD *)(v0 + v3), *(void (**)(void))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(uint64_t))(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23AEB52B4()
{
  return sub_23AE3F38C();
}

uint64_t sub_23AEB52C4()
{
  return objectdestroy_344Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_344Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_23AEB5318(void *a1, uint64_t a2, __int16 a3)
{
  uint64_t *v3;

  return sub_23AE4179C(a1, a2, a3 & 0x1FF, v3[2], v3[3], v3[4]);
}

uint64_t sub_23AEB5330()
{
  uint64_t v0;

  swift_release();
  sub_23AEB536C(*(id *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41));
  swift_release();
  return swift_deallocObject();
}

void sub_23AEB536C(id a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)

}

uint64_t sub_23AEB5378()
{
  uint64_t v0;

  return sub_23AE41868(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40) | (*(unsigned __int8 *)(v0 + 41) << 8), *(uint64_t (**)(_QWORD))(v0 + 48), *(_QWORD *)(v0 + 56));
}

id sub_23AEB53AC(id result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_23AEB53B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_23AEB53DC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_23AEB5408()
{
  uint64_t v0;

  return sub_23AE41018(*(_BYTE *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

id sub_23AEB5428(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_23AC5F68C(a1, a2, v2);
}

uint64_t sub_23AEB5440()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23AEB5464()
{
  uint64_t v0;

  sub_23AE36ADC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE **)(v0 + 48));
}

id sub_23AEB5484()
{
  uint64_t v0;

  return sub_23AE3E0E8(v0);
}

ValueMetadata *type metadata accessor for SQLBugfixRevision()
{
  return &type metadata for SQLBugfixRevision;
}

unint64_t sub_23AEB54B0()
{
  unint64_t result;

  result = qword_2569E68F0;
  if (!qword_2569E68F0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DB254, &type metadata for SQLBugfixRevision);
    atomic_store(result, (unint64_t *)&qword_2569E68F0);
  }
  return result;
}

uint64_t sub_23AEB54F8(uint64_t a1)
{
  return sub_23AEB4AEC(a1) & 1;
}

_QWORD *sub_23AEB552C@<X0>(uint64_t a1@<X8>)
{
  return sub_23AEADAF8(a1);
}

uint64_t sub_23AEB5544()
{
  return sub_23AEB46D4();
}

uint64_t sub_23AEB564C@<X0>(uint64_t a1@<X8>)
{
  return sub_23AEB4E40(a1);
}

uint64_t sub_23AEB5660@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return sub_23AEB4E18(a1, a2);
}

_QWORD *sub_23AEB57A8@<X0>(void *a1@<X8>)
{
  return sub_23AEB3C18(a1);
}

uint64_t sub_23AEB57BC(uint64_t a1)
{
  return sub_23AEB1634(a1) & 1;
}

uint64_t sub_23AEB57D4(uint64_t a1)
{
  return sub_23ADB11C8(a1);
}

void sub_23AEB593C(uint64_t a1)
{
  sub_23ADB117C(a1);
}

uint64_t sub_23AEB5954@<X0>(int *a1@<X8>)
{
  return sub_23ADB1194(a1);
}

uint64_t sub_23AEB5974()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23AEB59F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)v1;
  v4 = (os_unfair_lock_s *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
  swift_beginAccess();
  os_unfair_lock_lock(v4);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 88));
  return sub_23AEB5A74(v1);
}

uint64_t sub_23AEB5A74(uint64_t a1)
{
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 96));
  swift_beginAccess();
  os_unfair_lock_unlock(v1);
  return swift_endAccess();
}

uint64_t sub_23AEB5AC4()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_23AEB5AF0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Locked(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Locked);
}

uint64_t sub_23AEB5B34@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  NSObject *v16;
  _QWORD *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  _QWORD *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  unsigned int *v41;
  uint64_t v42;

  v2 = v1;
  v32 = a1;
  v42 = *MEMORY[0x24BDAC8D0];
  v3 = sub_23B1C5E4C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v26 - v8;
  bzero(&v37, 0x878uLL);
  v40 = v2;
  v41 = &v37;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AEB60B4);
  v31 = v7;
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = v2;
  v12 = sub_23B1C5E40();
  v13 = sub_23B1C6A88();
  if (os_log_type_enabled(v12, v13))
  {
    v30 = v3;
    v14 = (uint8_t *)swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    v28 = v14;
    *(_DWORD *)v14 = 138412290;
    v26[1] = v14 + 4;
    *(_QWORD *)&v33 = v11;
    v15 = v11;
    v29 = v4;
    v16 = v15;
    v3 = v30;
    sub_23B1C6CBC();
    v17 = v27;
    *v27 = v11;

    v18 = v13;
    v19 = v28;
    v4 = v29;
    _os_log_impl(&dword_23AA66000, v12, v18, "Retrieved statfs() for volume %@", v28, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v17, -1, -1);
    MEMORY[0x23B8614BC](v19, -1, -1);
  }
  else
  {

    v12 = v11;
  }

  v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  MEMORY[0x24BDAC7A8](v20);
  v26[-2] = v11;
  v26[-1] = &v33;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AEB6160);
  if (!is_mul_ok(v38, v37))
  {
    __break(1u);
LABEL_8:
    __break(1u);
  }
  if (!is_mul_ok(v39, v37))
    goto LABEL_8;
  v23 = v33;
  v24 = v34;
  v25 = v39 * v37;
  v22 = v32;
  *v32 = v38 * v37;
  v22[1] = v25;
  *((_OWORD *)v22 + 1) = v23;
  v22[4] = v24;
  *((_BYTE *)v22 + 40) = 0;
  return result;
}

uint64_t sub_23AEB6020@<X0>(void *a1@<X0>, statfs *a2@<X1>, _DWORD *a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t result;

  v5 = objc_msgSend(a1, sel_root);
  sub_23B1C63E0();

  v6 = sub_23B1C6458();
  swift_bridgeObjectRelease();
  LODWORD(a2) = statfs((const char *)(v6 + 32), a2);
  result = swift_release();
  *a3 = (_DWORD)a2;
  return result;
}

uint64_t sub_23AEB60B4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23AEB6020(*(void **)(v1 + 16), *(statfs **)(v1 + 24), a1);
}

uint64_t sub_23AEB60CC@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  id v3;
  int purgeable_stats;
  uint64_t result;

  v3 = objc_msgSend(a1, sel_root);
  sub_23B1C63E0();

  sub_23B1C6458();
  swift_bridgeObjectRelease();
  purgeable_stats = fpfs_get_purgeable_stats();
  result = swift_release();
  *a2 = purgeable_stats;
  return result;
}

uint64_t sub_23AEB6160@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23AEB60CC(*(void **)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for FPDVolumeStats()
{
  return &type metadata for FPDVolumeStats;
}

uint64_t sub_23AEB6188()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23AEB61C8()
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C5C54();
  sub_23AEB6C8C((unint64_t *)&qword_2542DD440, MEMORY[0x24BDCEAB8]);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  type metadata accessor for ChangeEnumeratorAnchor();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 60;
}

uint64_t sub_23AEB6338(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E20D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AEB6BC8();
  sub_23B1C7538();
  v8[15] = 0;
  sub_23B1C5C54();
  sub_23AEB6C8C(&qword_2542E0260, MEMORY[0x24BDCEA70]);
  sub_23B1C72A4();
  if (!v1)
  {
    type metadata accessor for ChangeEnumeratorAnchor();
    v8[14] = 1;
    sub_23B1C728C();
    v8[13] = 2;
    sub_23B1C728C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23AEB64B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;

  v18 = a2;
  v3 = sub_23B1C5C54();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E20D0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ChangeEnumeratorAnchor();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AEB6BC8();
  v21 = v7;
  v11 = v23;
  sub_23B1C7520();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v8;
  v12 = v5;
  v13 = (uint64_t)v10;
  v14 = v19;
  v26 = 0;
  sub_23AEB6C8C(&qword_2542E0270, MEMORY[0x24BDCEAA8]);
  v15 = v20;
  sub_23B1C71C0();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, v22, v3);
  v25 = 1;
  *(_QWORD *)(v13 + *(int *)(v23 + 20)) = sub_23B1C71B4();
  v24 = 2;
  v16 = sub_23B1C71B4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v15);
  *(_QWORD *)(v13 + *(int *)(v23 + 24)) = v16;
  sub_23AEB6C0C(v13, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23AEB6C50(v13);
}

uint64_t sub_23AEB6748()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0x49646574656C6564;
  if (*v0)
    return v1;
  else
    return 0x444955556264;
}

uint64_t sub_23AEB67B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AEB6E70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AEB67D4()
{
  sub_23AEB6BC8();
  return sub_23B1C7544();
}

uint64_t sub_23AEB67FC()
{
  sub_23AEB6BC8();
  return sub_23B1C7550();
}

uint64_t sub_23AEB6824@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23AEB64B0(a1, a2);
}

uint64_t sub_23AEB6838(_QWORD *a1)
{
  return sub_23AEB6338(a1);
}

void type metadata accessor for ChangeEnumerator()
{
  JUMPOUT(0x23B861318);
}

uint64_t *sub_23AEB685C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23B1C5C54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_23AEB68EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23B1C5C54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23AEB6950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23B1C5C54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23AEB69B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23B1C5C54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23AEB6A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23B1C5C54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23AEB6A80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AEB6A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B1C5C54();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23AEB6AC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AEB6AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B1C5C54();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ChangeEnumeratorAnchor()
{
  uint64_t result;

  result = qword_2542E13D0;
  if (!qword_2542E13D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23AEB6B50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5C54();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23AEB6BC8()
{
  unint64_t result;

  result = qword_2542E1398;
  if (!qword_2542E1398)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DB7C4, &type metadata for ChangeEnumeratorAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E1398);
  }
  return result;
}

uint64_t sub_23AEB6C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChangeEnumeratorAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AEB6C50(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ChangeEnumeratorAnchor();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AEB6C8C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23B1C5C54();
    result = MEMORY[0x23B8613CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ChangeEnumeratorAnchor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23AEB6D18 + 4 * byte_23B1DB5E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23AEB6D4C + 4 * asc_23B1DB5E0[v4]))();
}

uint64_t sub_23AEB6D4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEB6D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AEB6D5CLL);
  return result;
}

uint64_t sub_23AEB6D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AEB6D70);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23AEB6D74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEB6D7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChangeEnumeratorAnchor.CodingKeys()
{
  return &type metadata for ChangeEnumeratorAnchor.CodingKeys;
}

unint64_t sub_23AEB6D9C()
{
  unint64_t result;

  result = qword_2569E6900[0];
  if (!qword_2569E6900[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DB79C, &type metadata for ChangeEnumeratorAnchor.CodingKeys);
    atomic_store(result, qword_2569E6900);
  }
  return result;
}

unint64_t sub_23AEB6DE4()
{
  unint64_t result;

  result = qword_2542E13A8;
  if (!qword_2542E13A8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DB70C, &type metadata for ChangeEnumeratorAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E13A8);
  }
  return result;
}

unint64_t sub_23AEB6E2C()
{
  unint64_t result;

  result = qword_2542E13A0;
  if (!qword_2542E13A0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DB734, &type metadata for ChangeEnumeratorAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E13A0);
  }
  return result;
}

uint64_t sub_23AEB6E70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444955556264 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023B207C80 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49646574656C6564 && a2 == 0xEE006B6E61527344)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_23AEB6FD8()
{
  swift_allocObject();
  sub_23AEB774C();
}

uint64_t sub_23AEB6FFC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23AEB700C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a2);
}

uint64_t sub_23AEB7038(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 120))(a2);
}

uint64_t sub_23AEB7064(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 128))(a2);
}

uint64_t sub_23AEB7090(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 160))(a2);
}

void sub_23AEB70BC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AEB711C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AEB717C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AEB71DC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AEB723C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AEB729C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AEB72FC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AEB735C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AEB73BC()
{
  type metadata accessor for FilteringJobResult();
}

uint64_t sub_23AEB73E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v0;
  swift_retain();
  return v1;
}

void type metadata accessor for JobResult()
{
  JUMPOUT(0x23B861318);
}

void sub_23AEB7424()
{
  type metadata accessor for FilteringJobResult();
}

uint64_t sub_23AEB7458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 184))();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_23AEB7494()
{
  return swift_retain();
}

void type metadata accessor for FilteringJobResult()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AEB74AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23AEB74F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 128))();
}

uint64_t sub_23AEB7518()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 120))();
}

void sub_23AEB7540()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23AEB7584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v3;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AEB75C8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_23AB54930(a1, a4, v4);
}

uint64_t sub_23AEB75D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 136))(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
}

uint64_t sub_23AEB7618()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 152))();
}

uint64_t sub_23AEB7640()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 144))();
}

uint64_t sub_23AEB7668()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 160))();
}

uint64_t sub_23AEB7690()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 168))();
}

uint64_t sub_23AEB76B8()
{
  return swift_retain();
}

uint64_t sub_23AEB76C0()
{
  return swift_release();
}

uint64_t sub_23AEB76C8()
{
  swift_release();
  return swift_deallocClassInstance();
}

void type metadata accessor for SwappedJobResult()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AEB76F8()
{
  return swift_initClassMetadata2();
}

void sub_23AEB774C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  swift_retain();
  type metadata accessor for Mutation();
}

void sub_23AEB779C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23B1C6758();
  type metadata accessor for ReconciliationMutation();
}

void sub_23AEB77C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = sub_23B1C6758();
  type metadata accessor for FSOrFPJob();
}

uint64_t sub_23AEB77E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = sub_23B1C6758();
  v2 = *(void **)(v0 + 48);
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = 0;
  swift_release();

  return v0;
}

void sub_23AEB7820()
{
  type metadata accessor for Mutation();
}

uint64_t sub_23AEB7858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  MEMORY[0x24BDAC7A8](a1);
  v4 = (char *)&v8 - v3;
  v6 = type metadata accessor for SnapshotMutation(0, *(_QWORD *)(v2 - 96), *(_QWORD *)(v2 - 80), v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v1, v6);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_23B1C67DC();
  sub_23B1C67AC();
  return swift_endAccess();
}

void sub_23AEB790C()
{
  type metadata accessor for Mutation();
}

uint64_t sub_23AEB7954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v9 - v4;
  v7 = type metadata accessor for SnapshotMutation(0, *(_QWORD *)(v3 - 96), v2, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v1, v7);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_23B1C67DC();
  sub_23B1C67AC();
  return swift_endAccess();
}

void sub_23AEB7A08()
{
  type metadata accessor for ReconciliationMutation();
}

uint64_t sub_23AEB7A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - v4, v1, a1);
  swift_beginAccess();
  sub_23B1C67DC();
  sub_23B1C67AC();
  return swift_endAccess();
}

void sub_23AEB7AC4()
{
  swift_beginAccess();
  swift_retain();
  type metadata accessor for FSOrFPJob();
}

uint64_t sub_23AEB7B18()
{
  sub_23B1C67DC();
  sub_23B1C67AC();
  return swift_endAccess();
}

void sub_23AEB7B4C()
{
  swift_beginAccess();
  swift_retain();
  type metadata accessor for FSOrFPJob();
}

uint64_t sub_23AEB7BA4()
{
  sub_23B1C67DC();
  sub_23B1C67AC();
  return swift_endAccess();
}

void sub_23AEB7BD8(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;

  v6 = *(id *)(v1 + 48);
  v3 = a1;
  if (!a1)
  {
    v4 = v6;
    v3 = v6;
  }
  *(_QWORD *)(v1 + 48) = v3;
  v5 = a1;

}

uint64_t sub_23AEB7C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v5 = (_QWORD *)(v2 + 16);
  swift_beginAccess();
  v6 = *(_QWORD **)(v2 + 16);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_23AF983F4(0, v6[2] + 1, 1, v6);
    *v5 = v6;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    v6 = sub_23AF983F4((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    *v5 = v6;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = a1;
  v10[5] = a2;
  return swift_endAccess();
}

void sub_23AEB7CFC()
{
  type metadata accessor for SwappedJobResult();
}

uint64_t sub_23AEB7D30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v0;
  swift_retain();
  return v1;
}

void sub_23AEB7D60()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_23AEB7D94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_23AEB7DD0()
{
  sub_23AEB7D94();
  return swift_deallocClassInstance();
}

void type metadata accessor for ConcreteJobResult()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AEB7E1C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23AEB7E80(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023B207F40 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023B207F60 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023B207F80 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023B207FA0 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xEE0074657366664FLL || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23AEB80F8(uint64_t result)
{
  return result;
}

uint64_t sub_23AEB8104(uint64_t result)
{
  return result;
}

uint64_t sub_23AEB810C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23AEB8144 + 4 * byte_23B1DB990[a1]))(0xD000000000000013, 0x800000023B207F40);
}

uint64_t sub_23AEB8144(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_23AEB8178()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_23AEB819C()
{
  return 0x74696D696CLL;
}

uint64_t sub_23AEB81B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B8613CC](&unk_23B1DBB58, a3);
  return sub_23B1C73B8();
}

uint64_t sub_23AEB8204(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1DBB58, a1);
  return sub_23B1C6698();
}

uint64_t sub_23AEB8250()
{
  MEMORY[0x23B8613CC](&unk_23B1DBB58);
  return sub_23B1C66B0();
}

uint64_t sub_23AEB82A0()
{
  MEMORY[0x23B8613CC](&unk_23B1DBB58);
  return sub_23B1C66A4();
}

unint64_t sub_23AEB82F0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23AD7CBAC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23AEB831C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_23AEB8104(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_23AEB8348()
{
  unsigned __int8 *v0;

  return sub_23AEB810C(*v0);
}

uint64_t sub_23AEB8354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AEB7E80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AEB837C()
{
  unsigned __int8 *v0;

  return sub_23AEB80F8(*v0);
}

unint64_t sub_23AEB839C@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23AD7CBAC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_23AEB83C4(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1DBBF8, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AEB83F8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1DBBF8, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AEB842C()
{
  swift_beginAccess();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 980576612;
}

uint64_t sub_23AEB8600(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t result;
  void *v19;
  int v20;
  void *v21;
  _QWORD v22[4];
  int v23;
  char v24;
  _QWORD v25[2];
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  *(_BYTE *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  if (a3)
  {
    swift_beginAccess();
    v10 = *(_QWORD *)(a3 + 24);
    v11 = *(_DWORD *)(a3 + 40);
    v12 = *(_BYTE *)(a3 + 44);
    v13 = *(_QWORD *)(a3 + 32);
    *(_DWORD *)(v4 + 16) = *(_DWORD *)(a3 + 16);
    *(_QWORD *)(v4 + 24) = v10;
    *(_QWORD *)(v4 + 32) = v13;
    *(_DWORD *)(v4 + 40) = v11;
    *(_BYTE *)(v4 + 44) = v12;
    swift_beginAccess();
    *(_BYTE *)(v4 + 44) = 1;
  }
  else
  {
    *(_DWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *(_QWORD *)(v4 + 32) = 0;
    *(_QWORD *)(v4 + 37) = 0;
  }
  v14 = *(unsigned int *)(a1 + 16);
  v15 = swift_beginAccess();
  *(_DWORD *)(v4 + 16) = v14;
  *(_DWORD *)(v4 + 56) = a2;
  v23 = -1;
  MEMORY[0x24BDAC7A8](v15);
  v22[2] = &v23;
  v24 = 1;
  v25[0] = v16;
  v25[1] = 0;
  v26 = 0;
  v27 = v17;
  v28 = 0;
  v29 = 0;
  swift_retain();
  result = sub_23B0E1B48((uint64_t)v25, v14, 0x200000, 0, (uint64_t)&v24, (uint64_t)sub_23AEBAB8C, (uint64_t)v22);
  if (v5)
  {
    swift_release();

    swift_release();
    v19 = *(void **)(v4 + 64);
    swift_release();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6A90);
    swift_deallocPartialClassInstance();
    return v4;
  }
  if ((v24 & 1) == 0)
  {
    swift_release();
    *(_DWORD *)(v4 + 52) = v23;
    v20 = *(_DWORD *)(a1 + 64);
    swift_release();
    *(_DWORD *)(v4 + 60) = v20;
    v21 = *(void **)(v4 + 64);
    *(_QWORD *)(v4 + 64) = a4;
    swift_release();

    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AEB882C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  sub_23AEB8AF8(a1, v3, v4, v5);
  return v2;
}

uint64_t sub_23AEB8878(_QWORD *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  int v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD *v29;
  char v30[40];
  uint64_t v31;

  v28 = a5;
  v8 = v5;
  v27 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 64) = 0;
  v13 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_23AEBAD28(a4, a3);
  swift_retain();
  v14 = v12;
  v15 = v31;
  sub_23B1C7520();
  if (v15)
  {
    swift_release();
    v24 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);

    __swift_instantiateConcreteTypeFromMangledName(v24);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v16 = v10;
    v30[0] = 0;
    v17 = v27;
    v18 = v14;
    v19 = sub_23B1C71FC();
    v30[0] = 1;
    v20 = sub_23B1C71F0();
    v30[0] = 2;
    v21 = sub_23B1C71CC();
    v30[0] = 3;
    v22 = sub_23B1C71CC();
    *(_DWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = v19;
    *(_DWORD *)(v8 + 32) = v20;
    *(_DWORD *)(v8 + 36) = v21;
    *(_DWORD *)(v8 + 40) = v22;
    *(_BYTE *)(v8 + 44) = 1;
    v30[0] = 5;
    v23 = sub_23B1C716C();
    if ((v23 & 0x100000000) != 0)
      v26 = 0x7FFFFFFF;
    else
      v26 = v23;
    *(_DWORD *)(v8 + 52) = -1;
    *(_DWORD *)(v8 + 56) = v26;
    *(_DWORD *)(v8 + 60) = 0;
    swift_release();
    sub_23B1C7124();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return v8;
}

uint64_t sub_23AEB8AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v26;
  uint64_t v27;
  char v28[40];
  uint64_t v29;

  v6 = v4;
  v27 = *(_QWORD *)(*(_QWORD *)v4 + 112);
  v8 = type metadata accessor for FSDirectoryLister.CodingKeys(255, v27, a3, a4);
  MEMORY[0x23B8613CC](&unk_23B1DBBF8, v8);
  v9 = sub_23B1C7208();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_BYTE *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  v11 = *(_QWORD *)(a1 + 24);
  v29 = a1;
  v12 = (_QWORD *)a1;
  v14 = &v28[-v13 - 8];
  __swift_project_boxed_opaque_existential_1(v12, v11);
  swift_retain();
  sub_23B1C7520();
  if (v5)
  {
    swift_release();
    v22 = v27;
    __swift_destroy_boxed_opaque_existential_1(v29);

    type metadata accessor for FSDirectoryLister(0, v22, v23, v24);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = v10;
    v28[0] = 0;
    v16 = v9;
    v17 = sub_23B1C71FC();
    v28[0] = 1;
    v18 = sub_23B1C71F0();
    v28[0] = 2;
    v19 = sub_23B1C71CC();
    v28[0] = 3;
    v20 = sub_23B1C71CC();
    *(_DWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = v17;
    *(_DWORD *)(v4 + 32) = v18;
    *(_DWORD *)(v4 + 36) = v19;
    *(_DWORD *)(v4 + 40) = v20;
    *(_BYTE *)(v4 + 44) = 1;
    v28[0] = 5;
    v21 = sub_23B1C716C();
    if ((v21 & 0x100000000) != 0)
      v26 = 0x7FFFFFFF;
    else
      v26 = v21;
    *(_DWORD *)(v4 + 52) = -1;
    *(_DWORD *)(v4 + 56) = v26;
    *(_DWORD *)(v4 + 60) = 0;
    swift_release();
    sub_23B1C7124();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v14, v16);
    __swift_destroy_boxed_opaque_existential_1(v29);
  }
  return v6;
}

void sub_23AEB8DA0()
{
  uint64_t v0;

}

uint64_t sub_23AEB8DA8()
{
  uint64_t v0;
  int v1;

  v1 = *(_DWORD *)(v0 + 52);
  if ((v1 & 0x80000000) == 0)
    close(v1);

  return v0;
}

uint64_t sub_23AEB8DD0()
{
  sub_23AEB8DA8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FSDirectoryLister(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FSDirectoryLister);
}

uint64_t sub_23AEB8DFC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;

  v2 = v1;
  v4 = *v2;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E24F0);
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FSDirectoryLister.CodingKeys(255, *(_QWORD *)(v4 + 112), v6, v7);
  MEMORY[0x23B8613CC](&unk_23B1DBBF8, v8);
  v9 = sub_23B1C72EC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  swift_beginAccess();
  LOBYTE(v22[0]) = 0;
  v13 = v23;
  sub_23B1C72E0();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v15 = v10;
  v16 = v20;
  v17 = v21;
  LOBYTE(v22[0]) = 1;
  sub_23B1C72D4();
  LOBYTE(v22[0]) = 2;
  sub_23B1C72B0();
  LOBYTE(v22[0]) = 3;
  sub_23B1C72B0();
  LOBYTE(v22[0]) = 5;
  sub_23B1C72B0();
  sub_23B1C7214();
  v23 = v22[4];
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  sub_23AB6E3F4();
  sub_23B1C7538();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v12, v9);
}

void sub_23AEB9090()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AEB90E8()
{
  return sub_23AEB842C();
}

uint64_t sub_23AEB9108(void (*a1)(_QWORD, _QWORD, _QWORD), int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  char *v11;
  char *v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  const void *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72[16];
  _QWORD *v73;
  int v74;
  char v75;
  void (*v76)(_QWORD, _QWORD, _QWORD);
  __int128 v77;
  __int128 v78;
  void (*v79)(_QWORD, _QWORD, _QWORD);
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v12 = v11;
  v68 = a8;
  v65 = a7;
  v62 = a6;
  v61 = a5;
  v69 = a4;
  v63 = a2;
  v66 = a11;
  v67 = a10;
  v82 = *MEMORY[0x24BDAC8D0];
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v64 = (uint64_t)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v53 - v18;
  v20 = sub_23B1C5A08();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v53 - v24;
  *((_QWORD *)v12 + 12) = 0;
  *((_QWORD *)v12 + 13) = 0;
  v79 = a1;
  v80 = 0u;
  v81 = 0u;
  v26 = a3;
  v27 = *(unsigned int *)(a3 + 16);
  v73 = &v79;
  v74 = v27;
  v75 = 1;
  v71 = v28;
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v29(v19, 1, 1, v20);
  v76 = a1;
  v77 = 0u;
  v78 = 0u;
  swift_retain();
  v30 = v70;
  sub_23B0E0928((uint64_t)&v76, v27, 0x200000, 0, (uint64_t)v19, (uint64_t)sub_23AAB7D90, (uint64_t)v72);
  if (v30)
  {
    sub_23AD2BAF8((uint64_t)v19);
    swift_release();
    swift_release();

    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for VFSDirectoryLister(0);
    swift_deallocPartialClassInstance();
    return (uint64_t)v12;
  }
  v57 = (void (*)(char *, char *, uint64_t))a1;
  v58 = v23;
  v59 = v26;
  v60 = v29;
  v70 = 0;
  v31 = v64;
  sub_23AA8EFC8((uint64_t)v19, v64, (uint64_t *)&unk_2542E6740);
  v32 = v20;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v31, 1, v20);
  if ((_DWORD)result != 1)
  {
    v56 = a9;
    v34 = v71;
    v35 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v25, v31, v32);
    sub_23AD2BAF8((uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5610);
    v36 = swift_allocObject();
    v53 = xmmword_23B1CA760;
    *(_OWORD *)(v36 + 16) = xmmword_23B1CA760;
    *(_QWORD *)(v36 + 32) = v57;
    v37 = v59;
    LODWORD(v64) = *(_DWORD *)(v59 + 16);
    v38 = *(const void **)(v59 + 56);
    v55 = *(unsigned int *)(v59 + 64);
    v54 = *(unsigned __int8 *)(v59 + 68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
    v39 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v53;
    v41 = v40 + v39;
    v42 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v57 = v42;
    v42((char *)v41, v35, v32);
    v43 = v58;
    v42(v58, (char *)(v37 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL), v32);
    type metadata accessor for VFSLookupScope();
    swift_allocObject();
    _Block_copy(v38);
    v44 = 0x100000000;
    if (!v54)
      v44 = 0;
    v45 = sub_23AFE1420(v36, v64, 0, 1, (uint64_t)sub_23AFE01B4, 0, (uint64_t)v38, v44 | v55, v40, v43);
    v46 = v69;
    *((_QWORD *)v12 + 9) = v37;
    *((_QWORD *)v12 + 10) = v46;
    v47 = v62;
    *((_QWORD *)v12 + 11) = v61;
    *((_QWORD *)v12 + 12) = v47;
    *((_QWORD *)v12 + 13) = v65;
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v48 = &v12[qword_2542EDD68];
    v57(&v12[qword_2542EDD68], v35, v32);
    v60(v48, 0, 1, v32);
    v49 = &v12[qword_2542EE028];
    v50 = v67;
    *(_QWORD *)v49 = v56;
    *((_QWORD *)v49 + 1) = v50;
    swift_release();
    v51 = v70;
    v52 = sub_23AEB8600(v45, v63, v68, v66);
    if (!v51)
      v12 = (char *)v52;
    swift_release();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v32);
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AEB9684(uint64_t a1)
{
  swift_allocObject();
  return sub_23AEB96CC(a1);
}

uint64_t sub_23AEB96CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD aBlock[6];

  v3 = sub_23B1C5A08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[12] = 0;
  v1[13] = 0;
  aBlock[4] = sub_23AFE01B4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B135DF8;
  aBlock[3] = &block_descriptor_12_0;
  v7 = _Block_copy(aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23B1CA760;
  swift_retain();
  _Block_copy(v7);
  sub_23B1C5918();
  sub_23B1C5918();
  type metadata accessor for VFSLookupScope();
  swift_allocObject();
  v9 = sub_23AFE1420((uint64_t)&unk_250BDEDA0, 0, 0, 1, (uint64_t)sub_23AFE01B4, 0, (uint64_t)v7, 0x100000000, v8, v6);
  v1[10] = 0;
  v1[11] = 0;
  v1[9] = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))((uint64_t)v1 + qword_2542EDD68, 1, 1, v3);
  v10 = (_QWORD *)((char *)v1 + qword_2542EE028);
  *v10 = 0;
  v10[1] = 0;
  swift_release();
  sub_23AA77B28(a1, (uint64_t)aBlock);
  v11 = sub_23AEB8878(aBlock, &qword_2569E6AB8, &qword_2569E6AC0, qword_2569E6AC8, &qword_2569E6A90);
  __swift_destroy_boxed_opaque_existential_1(a1);
  _Block_release(v7);
  return v11;
}

uint64_t sub_23AEB98EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  swift_allocBox();
  v4 = v3;
  v5 = type metadata accessor for VFSItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AEBABB8);
  if (!v1)
  {
    swift_beginAccess();
    sub_23AA8EFC8(v4, a1, &qword_2542E72C0);
  }
  return swift_release();
}

void *sub_23AEB99BC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *result;
  char isEscapingClosureAtFileLocation;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  _QWORD aBlock[6];
  char v25;

  v23 = a4;
  v7 = sub_23B1C5570();
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = 0;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = &v25;
  v10[3] = a1;
  v10[4] = a2;
  v10[5] = a3;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23AEBAC00;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_23AA698D4;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_17;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v13 = fpfs_openat();
  _Block_release(v12);
  if (v13 < 0 && (v25 & 1) == 0)
  {
    MEMORY[0x23B85E7A4]();
    v14 = sub_23B1C5E64();
    if ((v14 & 0x100000000) == 0)
    {
      LODWORD(aBlock[0]) = v14;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AC37520();
      v15 = v22;
      sub_23B1C5864();
      v16 = sub_23B1C5558();
      v17 = (void *)sub_23B1C5870();

      LOBYTE(v16) = sub_23AEBAC1C((uint64_t)v17, a2);
      if ((v16 & 1) != 0)
      {
        result = (void *)objc_opt_self();
        if ((a2[52] & 0x80000000) != 0)
        {
LABEL_12:
          __break(1u);
          return result;
        }
        objc_msgSend(result, sel_fp_errorForDataProtectionClass_);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v15);
        swift_release();
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        result = (void *)swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return result;
        __break(1u);
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v15);
    }
  }
  swift_release();
  *v23 = v13;
  v20 = swift_isEscapingClosureAtFileLocation();
  result = (void *)swift_release();
  if ((v20 & 1) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_23AEB9C94(int a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  const void *v9;
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t additional_attrs;
  _QWORD aBlock[7];
  int v16;
  char v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  *a2 = 1;
  v8 = *(_QWORD *)(a3 + 72);
  v9 = *(const void **)(v8 + 56);
  v10 = *(_DWORD *)(v8 + 64);
  LOBYTE(v8) = *(_BYTE *)(v8 + 68);
  aBlock[6] = v9;
  v16 = v10;
  v17 = v8;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_DWORD *)(v11 + 24) = a1;
  *(_QWORD *)(v11 + 32) = a5;
  aBlock[4] = sub_23AEBACD0;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AEBA7D4;
  aBlock[3] = &block_descriptor_9_0;
  v12 = _Block_copy(aBlock);
  _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  additional_attrs = fpfs_load_additional_attrs();
  _Block_release(v12);
  _Block_release(v9);
  return additional_attrs;
}

uint64_t sub_23AEB9DE0(uint64_t *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  void *v23;
  id v24;
  id v25;
  id v26;
  _BYTE v27[4];
  unsigned int v28;
  id v29[2];
  int v30;

  v28 = a3;
  v5 = sub_23B1C5570();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v27[-v10];
  v12 = swift_projectBox();
  v13 = a1[3];
  if (v13)
  {
    v14 = v12;
    v15 = strlen((const char *)a1[3]);
    if (v15 > 0)
    {
      v16 = v15;
      v17 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v18 = objc_msgSend(v17, sel_stringWithFileSystemRepresentation_length_, v13, v16);

      v19 = sub_23B1C63E0();
      v21 = v20;

      sub_23AEBA07C(v19, v21, a2, a1, v28, v14, v29);
      swift_bridgeObjectRelease();
      return LODWORD(v29[0]);
    }
  }
  v30 = 5;
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AC37520();
  sub_23B1C5864();
  v23 = (void *)sub_23B1C5558();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  swift_willThrow();
  swift_willThrow();
  v29[0] = v23;
  v24 = v23;
  v25 = v23;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  if (!swift_dynamicCast())
  {

    MEMORY[0x23B85E7B0](22);
    v26 = v23;
    goto LABEL_9;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v11, v9, v5);
  sub_23AC37520();
  result = sub_23B1C5858();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  MEMORY[0x23B85E7B0]();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  v26 = v29[0];
LABEL_9:

  return 0xFFFFFFFFLL;
}

uint64_t sub_23AEBA07C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, unsigned int a5@<W4>, uint64_t a6@<X5>, _DWORD *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  unsigned int v42;
  id v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t *);
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  NSObject *v53;
  int v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _DWORD *v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76[3];
  uint64_t v77;

  v72 = a4;
  v64 = a6;
  v70 = a5;
  v73 = a1;
  v69 = a7;
  v9 = sub_23B1C5570();
  v75 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v12);
  v67 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C5E4C();
  v68 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v66 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v65 = (char *)&v63 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23B1C5A08();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v74 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  if (!a2)
    goto LABEL_4;
  v26 = (char *)&v63 - v24;
  v63 = v14;
  v27 = v25;
  sub_23AA8EFC8(a3 + qword_2542EDD68, (uint64_t)v20, (uint64_t *)&unk_2542E6740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v20, 1, v21) == 1)
  {
    sub_23AD2BAF8((uint64_t)v20);
LABEL_4:
    LODWORD(v76[0]) = 5;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AC37520();
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v11, v9);
    return swift_willThrow();
  }
  v29 = a3;
  v75 = v27;
  v30 = (uint64_t *)v26;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v26, v20, v21);
  v31 = a2;
  swift_bridgeObjectRetain();
  v33 = v73;
  v32 = (uint64_t)v74;
  sub_23B1C5984();
  v34 = v72;
  if (fpfs_is_busy_date())
  {
    v35 = (void *)sub_23B1C5954();
    if (*(_QWORD *)(v29 + qword_2542EE028 + 8))
      v36 = (void *)sub_23B1C63BC();
    else
      v36 = 0;
    v41 = v63;
    v42 = objc_msgSend(v35, sel_fp_deleteStaleBusyFileWithFileDescriptor_coordinatorPurposeIdentifier_, v70, v36);

    v43 = (id)fpfs_current_or_default_log();
    if (v42)
    {
      v44 = v65;
      sub_23B1C5E58();
      swift_bridgeObjectRetain();
      v45 = sub_23B1C5E40();
      v46 = sub_23B1C6A94();
      if (os_log_type_enabled(v45, v46))
      {
        v72 = (uint64_t *)v21;
        v47 = (uint8_t *)swift_slowAlloc();
        v48 = swift_slowAlloc();
        v76[0] = v48;
        *(_DWORD *)v47 = 136315138;
        swift_bridgeObjectRetain();
        v77 = sub_23AABEC68(v33, v31, v76);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23AA66000, v45, v46, "🏗 Removed stale busy file %s", v47, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v48, -1, -1);
        MEMORY[0x23B8614BC](v47, -1, -1);

        (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v63);
        v49 = *(void (**)(char *, uint64_t *))(v75 + 8);
        v50 = v72;
        v49(v74, v72);
        v51 = v30;
        v52 = (uint64_t)v50;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v41);
        v49 = *(void (**)(char *, uint64_t *))(v75 + 8);
        v49(v74, (uint64_t *)v21);
        v51 = v30;
        v52 = v21;
      }
      result = ((uint64_t (*)(uint64_t *, uint64_t))v49)(v51, v52);
    }
    else
    {
      sub_23B1C5E58();
      swift_bridgeObjectRetain();
      v53 = sub_23B1C5E40();
      v54 = sub_23B1C6A94();
      if (os_log_type_enabled(v53, (os_log_type_t)v54))
      {
        v55 = (uint8_t *)swift_slowAlloc();
        v56 = swift_slowAlloc();
        v72 = v30;
        v57 = v56;
        v76[0] = v56;
        *(_DWORD *)v55 = 136315138;
        swift_bridgeObjectRetain();
        v77 = sub_23AABEC68(v73, v31, v76);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23AA66000, v53, (os_log_type_t)v54, "🏗 Ignoring the busy file %s from enumeration", v55, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v57, -1, -1);
        MEMORY[0x23B8614BC](v55, -1, -1);

        (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v63);
        v58 = *(void (**)(char *, uint64_t))(v75 + 8);
        v58(v74, v21);
        result = ((uint64_t (*)(uint64_t *, uint64_t))v58)(v72, v21);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v63);
        v62 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
        v62(v32, v21);
        result = ((uint64_t (*)(uint64_t *, uint64_t))v62)(v30, v21);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for VFSFileTree(0);
    v37 = *(_QWORD *)(v29 + 72);
    v38 = v67;
    v39 = v71;
    sub_23AA8F00C(v70, v34, 2u, v32, v37, v67);
    if (v39)
    {
      v40 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v40(v32, v21);
      return ((uint64_t (*)(uint64_t *, uint64_t))v40)(v30, v21);
    }
    v59 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v59(v32, v21);
    v59((uint64_t)v30, v21);
    v60 = type metadata accessor for VFSItem(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v38, 0, 1, v60);
    v61 = v64;
    swift_beginAccess();
    result = sub_23AEBACE0(v38, v61);
  }
  *v69 = 0;
  return result;
}

uint64_t sub_23AEBA7D4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v4 = v3(a2);
  swift_release();
  return v4;
}

uint64_t sub_23AEBA81C()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AD2BAF8(v0 + qword_2542EDD68);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AEBA864()
{
  uint64_t v0;
  int v1;

  v1 = *(_DWORD *)(v0 + 52);
  if ((v1 & 0x80000000) == 0)
    close(v1);

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AD2BAF8(v0 + qword_2542EDD68);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VFSDirectoryLister(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2542E6EA8);
}

void sub_23AEBA8E8()
{
  unint64_t v0;

  sub_23AB6BBDC();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_23AEBA970@<X0>(uint64_t a1@<X8>)
{
  const char *v2;
  const char *v3;
  int64_t v4;
  int64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v2 = (const char *)fpfs_fileattrs_fullpath();
  if (v2 && (v3 = v2, v4 = strlen(v2), v4 > 0))
  {
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v7 = objc_msgSend(v6, sel_stringWithFileSystemRepresentation_length_, v3, v5);

    sub_23B1C63E0();
    sub_23B1C5918();
    v8 = sub_23B1C5A08();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_23B1C5A08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t sub_23AEBAA80(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[5];

  swift_allocObject();
  sub_23AA77B28(a1, (uint64_t)v4);
  v2 = sub_23AEB8878(v4, &qword_2569E6A98, &qword_2569E6AA0, &qword_2569E6AA8, &qword_2569E6AB0);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t sub_23AEBAB14()
{
  uint64_t v0;
  int v1;

  v1 = *(_DWORD *)(v0 + 52);
  if ((v1 & 0x80000000) == 0)
    close(v1);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for URLDirectoryLister(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2569E6930);
}

uint64_t sub_23AEBAB58()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23AEBAB8C(int a1)
{
  uint64_t v1;
  _DWORD *v2;
  uint64_t result;

  v2 = *(_DWORD **)(v1 + 16);
  result = dup(a1);
  *v2 = result;
  return result;
}

void *sub_23AEBABB8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23AEB99BC(*(_QWORD *)(v1 + 16), *(_DWORD **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_23AEBABD4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEBAC00(int a1)
{
  uint64_t v1;

  return sub_23AEB9C94(a1, *(_BYTE **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23AEBAC0C()
{
  return swift_deallocObject();
}

BOOL sub_23AEBAC1C(uint64_t a1, _DWORD *a2)
{
  int v3;

  sub_23B1C54B0();
  sub_23AB6CD48();
  if ((sub_23B1C575C() & 1) == 0 || a2[10] != 1 || (a2[52] - 1) > 1)
    return 0;
  v3 = a2[53];
  return v3 == geteuid();
}

uint64_t sub_23AEBACA4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEBACD0(uint64_t *a1)
{
  uint64_t v1;

  return sub_23AEB9DE0(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24));
}

uint64_t sub_23AEBACE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AEBAD28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B8613CC](&unk_23B1DBBF8, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FSDirectoryLister.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FSDirectoryLister.CodingKeys);
}

uint64_t sub_23AEBAD74()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23AEBAD7C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23AEBADC8 + 4 * byte_23B1DB99B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23AEBADFC + 4 * byte_23B1DB996[v4]))();
}

uint64_t sub_23AEBADFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEBAE04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AEBAE0CLL);
  return result;
}

uint64_t sub_23AEBAE18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AEBAE20);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23AEBAE24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEBAE2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23AEBAE38()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AEBAE48()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AEBAE58()
{
  JUMPOUT(0x23B8613CCLL);
}

char *sub_23AEBAE70(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_23B1C5C54();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v10 = sub_23B1C5C54();
        v11 = *(_QWORD *)(v10 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v11 + 16))(a1, a2, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v13 = *a2;
        v14 = a2[1];
        *(_QWORD *)a1 = v13;
        *((_QWORD *)a1 + 1) = v14;
        v15 = v13;
        v16 = v14;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v17 = *a2;
        *(_QWORD *)a1 = *a2;
        v18 = v17;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_23AEBB018(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v2 = sub_23B1C5C54();
      v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
      v4 = a1;
      goto LABEL_9;
    case 2u:
      v5 = sub_23B1C5C54();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
      {
        v3 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v4 = a1;
        v2 = v5;
LABEL_9:
        v3(v4, v2);
      }
      return;
    case 4u:

      v7 = *(id *)(a1 + 8);
      goto LABEL_7;
    case 5u:
      v7 = *(id *)a1;
LABEL_7:

      break;
    default:
      return;
  }
}

void **sub_23AEBB0E8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23B1C5C54();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_9;
    case 2u:
      v7 = sub_23B1C5C54();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    case 4u:
      v10 = *a2;
      v11 = a2[1];
      *a1 = v10;
      a1[1] = v11;
      v12 = v10;
      v13 = v11;
      goto LABEL_9;
    case 5u:
      v14 = *a2;
      *a1 = *a2;
      v15 = v14;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_23AEBB25C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  if (a1 != a2)
  {
    sub_23AEBB3E8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23B1C5C54();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_10;
      case 2u:
        v7 = sub_23B1C5C54();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(void **, void **, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        goto LABEL_10;
      case 4u:
        v10 = *a2;
        *a1 = *a2;
        v11 = a2[1];
        a1[1] = v11;
        v12 = v10;
        v13 = v11;
        goto LABEL_10;
      case 5u:
        v14 = *a2;
        *a1 = *a2;
        v15 = v14;
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23AEBB3E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SyncState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SyncState()
{
  uint64_t result;

  result = qword_2542E73E8;
  if (!qword_2542E73E8)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_23AEBB460(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = sub_23B1C5C54();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_23B1C5C54();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *sub_23AEBB580(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_23AEBB3E8((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_23B1C5C54();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_23B1C5C54();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_23AEBB6B4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B1C5C54();
  if (v0 <= 0x3F)
  {
    sub_23AE4A484();
    if (v1 <= 0x3F)
      swift_initEnumMetadataMultiPayload();
  }
}

uint64_t storeEnumTagSinglePayload for SchedulingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AEBB7B8 + 4 * byte_23B1DBC65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AEBB7EC + 4 * byte_23B1DBC60[v4]))();
}

uint64_t sub_23AEBB7EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEBB7F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AEBB7FCLL);
  return result;
}

uint64_t sub_23AEBB808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AEBB810);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AEBB814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEBB81C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SchedulingState()
{
  return &type metadata for SchedulingState;
}

uint64_t sub_23AEBB838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v5 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(4, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      sub_23AEBB3E8((uint64_t)v7);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 151);
    }
    return *(_QWORD *)v7;
  }
  return result;
}

uint64_t sub_23AEBB910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t result;
  uint64_t v9;

  v5 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (unsigned __int8 *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(7, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 7)
    {
      sub_23AEBB3E8((uint64_t)v7);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 172);
    }
    return *v7;
  }
  return result;
}

uint64_t sub_23AEBB9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v5 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(8, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 8)
    {
      sub_23AEBB3E8((uint64_t)v7);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 179);
    }
    return *(_QWORD *)v7;
  }
  return result;
}

uint64_t sub_23AEBBAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v5 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(6, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 6)
    {
      sub_23AEBB3E8((uint64_t)v7);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 165);
    }
    return *(_QWORD *)v7;
  }
  return result;
}

uint64_t sub_23AEBBB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v7 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(a2 + 16))(0, a1, a2);
  if (!v3)
  {
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23AEBB3E8((uint64_t)v9);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 119);
    }
    v11 = sub_23B1C5C54();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a3, v9, v11);
  }
  return result;
}

uint64_t sub_23AEBBC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5C54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 8))(v8, a2, a3);
  return sub_23AEBB3E8((uint64_t)v8);
}

uint64_t sub_23AEBBD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v5 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(1, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_23AEBB3E8((uint64_t)v7);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 130);
    }
    return *(_QWORD *)v7;
  }
  return result;
}

unint64_t sub_23AEBBE34(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = 0xD000000000000015;
  v2 = 0x61705F7463697665;
  if (a1 != 1)
    v2 = 0;
  if (a1 != 2)
    v1 = v2;
  if (a1 == 4)
    return 0xD00000000000001ALL;
  else
    return v1;
}

unint64_t sub_23AEBBEB0()
{
  uint64_t *v0;

  return sub_23AEBBE34(*v0);
}

unint64_t sub_23AEBBEB8()
{
  unint64_t *v0;

  return sub_23AF157D0(*v0);
}

uint64_t sub_23AEBBEC0()
{
  uint64_t *v0;

  return sub_23AFD4D00(*v0);
}

uint64_t sub_23AEBBEC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AEBBEF8 + 4 * byte_23B1DBC6A[a1]))(0x444955556264, 0xE600000000000000);
}

unint64_t sub_23AEBBEF8()
{
  return 0xD000000000000010;
}

uint64_t sub_23AEBBF14()
{
  return 0x6D61657274537366;
}

unint64_t sub_23AEBBF48()
{
  return 0xD000000000000011;
}

uint64_t sub_23AEBBF68()
{
  return 0x65566E69616D6F64;
}

uint64_t sub_23AEBBF8C()
{
  return 0x4665727574616566;
}

uint64_t sub_23AEBBFAC()
{
  return 0x696C756465686373;
}

uint64_t sub_23AEBBFD0()
{
  return 0x6E6547726F727265;
}

uint64_t sub_23AEBBFF4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0x676E696E6E7572;
}

unint64_t sub_23AEBC038()
{
  unint64_t result;

  result = qword_2569E6B50;
  if (!qword_2569E6B50)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DBDC0, &type metadata for SchedulingState);
    atomic_store(result, (unint64_t *)&qword_2569E6B50);
  }
  return result;
}

void sub_23AEBC07C(char *a1)
{
  sub_23AC37B2C(*a1);
}

uint64_t sub_23AEBC088@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AEBD0E8();
  *a1 = result;
  return result;
}

uint64_t sub_23AEBC0B4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23AEBBEC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23AEBC0DC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23B1C74A8();
  sub_23AFDE1FC((uint64_t)v3, v1);
  return sub_23B1C74E4();
}

void sub_23AEBC120(uint64_t a1)
{
  char *v1;

  sub_23AFDE1FC(a1, *v1);
}

uint64_t sub_23AEBC128()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23B1C74A8();
  sub_23AFDE1FC((uint64_t)v3, v1);
  return sub_23B1C74E4();
}

void sub_23AEBC168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v1);
  sub_23AEBC894(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_23AEBC1EC + 4 * byte_23B1DBC73[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AEBC1EC()
{
  uint64_t v0;

  sub_23AEBB3E8(v0);
  return 0;
}

void sub_23AEBC25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23B1C5C54();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v4);
  sub_23AEBC894(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)&loc_23AEBC360 + dword_23AEBC86C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AEBC370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 80) = 0x28444955556264;
  *(_QWORD *)(v4 - 72) = 0xE700000000000000;
  sub_23AEBCC44();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v5 = *(_QWORD *)(v4 - 80);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v5;
}

uint64_t sub_23AEBC894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AEBC8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;

  v7 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(2, a1, a2);
  if (!v3)
  {
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_23AEBB3E8((uint64_t)v9);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 137);
    }
    return sub_23AEBCB74((uint64_t)v9, a3);
  }
  return result;
}

uint64_t sub_23AEBC9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v5 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(3, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 3)
    {
      sub_23AEBB3E8((uint64_t)v7);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 144);
    }
    return *(_QWORD *)v7;
  }
  return result;
}

uint64_t sub_23AEBCA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v5 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(5, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 5)
    {
      sub_23AEBB3E8((uint64_t)v7);
      sub_23AFF2104("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 158);
    }
    return *(_QWORD *)v7;
  }
  return result;
}

uint64_t sub_23AEBCB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AEBCBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AEBCC04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23AEBCC44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542DD440;
  if (!qword_2542DD440)
  {
    v1 = sub_23B1C5C54();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_2542DD440);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JobLimitCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncStateKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23AEBCD68 + 4 * byte_23B1DBC81[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23AEBCD9C + 4 * byte_23B1DBC7C[v4]))();
}

uint64_t sub_23AEBCD9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEBCDA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AEBCDACLL);
  return result;
}

uint64_t sub_23AEBCDB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AEBCDC0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23AEBCDC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEBCDCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncStateKey()
{
  return &type metadata for SyncStateKey;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

unint64_t sub_23AEBCDFC()
{
  unint64_t result;

  result = qword_2569E6B58;
  if (!qword_2569E6B58)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DBE5C, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2569E6B58);
  }
  return result;
}

unint64_t sub_23AEBCE44()
{
  unint64_t result;

  result = qword_2569E6B60;
  if (!qword_2569E6B60)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DBE2C, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2569E6B60);
  }
  return result;
}

unint64_t sub_23AEBCE8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569E6B68;
  if (!qword_2569E6B68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E6B70);
    result = MEMORY[0x23B8613CC](&unk_23B1DD070, v1);
    atomic_store(result, (unint64_t *)&qword_2569E6B68);
  }
  return result;
}

unint64_t sub_23AEBCEDC()
{
  unint64_t result;

  result = qword_2569E6B78;
  if (!qword_2569E6B78)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DBE84, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2569E6B78);
  }
  return result;
}

unint64_t sub_23AEBCF24()
{
  unint64_t result;

  result = qword_2569E6B80;
  if (!qword_2569E6B80)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DBEBC, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2569E6B80);
  }
  return result;
}

uint64_t sub_23AEBCF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23AEBCF7C, (uint64_t (*)(void))sub_23AEBCFC0);
}

unint64_t sub_23AEBCF7C()
{
  unint64_t result;

  result = qword_2569E6BA8;
  if (!qword_2569E6BA8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DBFEC, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2569E6BA8);
  }
  return result;
}

unint64_t sub_23AEBCFC0()
{
  unint64_t result;

  result = qword_2569E6BB0;
  if (!qword_2569E6BB0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DBF84, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2569E6BB0);
  }
  return result;
}

uint64_t sub_23AEBD004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23AEBD018, (uint64_t (*)(void))sub_23AEBD05C);
}

unint64_t sub_23AEBD018()
{
  unint64_t result;

  result = qword_2569E6BB8;
  if (!qword_2569E6BB8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC024, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2569E6BB8);
  }
  return result;
}

unint64_t sub_23AEBD05C()
{
  unint64_t result;

  result = qword_2569E6BC0;
  if (!qword_2569E6BC0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC04C, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_2569E6BC0);
  }
  return result;
}

unint64_t sub_23AEBD0A4()
{
  unint64_t result;

  result = qword_2542E0938;
  if (!qword_2542E0938)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC0FC, &type metadata for SyncStateKey);
    atomic_store(result, (unint64_t *)&qword_2542E0938);
  }
  return result;
}

uint64_t sub_23AEBD0E8()
{
  unint64_t v0;

  v0 = sub_23B1C7118();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_23AEBD130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  v9 = v6;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16))(v8, v9, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AEBD1D4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD v9[5];

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 24))(v9, a1, a2, a5, a7);
  a3(v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_23AEBD24C()
{
  swift_beginAccess();
  sub_23B1C64F4();
  sub_23B1C64F4();
  return swift_endAccess();
}

uint64_t sub_23AEBD2B8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v7 = *v3;
  v9 = v3[1];
  v10 = v3[2];
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  a3[1] = v9;
  a3[2] = v10;
  return swift_retain();
}

uint64_t sub_23AEBD338()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StringDumper()
{
  return objc_opt_self();
}

uint64_t sub_23AEBD384()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23AEBD3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;

  *a3 = *v3;
  a3[1] = a1;
  a3[3] = &type metadata for SubStringDumper;
  a3[4] = &off_250C01B90;
  a3[2] = a2;
  swift_retain();
  return swift_bridgeObjectRetain();
}

void sub_23AEBD3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  _QWORD v15[2];

  v3 = v2;
  v6 = sub_23B1C6428();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a1;
  v15[1] = a2;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  v10 = *(void **)(v3 + 16);
  sub_23B1C641C();
  v11 = sub_23B1C63EC();
  v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v13 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v14 = (void *)sub_23B1C5AA4();
    sub_23AAA3E18(v11, v13);
    objc_msgSend(v10, sel_writeData_, v14);

  }
}

uint64_t sub_23AEBD51C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileDumper()
{
  return objc_opt_self();
}

uint64_t sub_23AEBD568()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_23AEBD598(uint64_t a1, uint64_t a2)
{
  sub_23AEBD3FC(a1, a2);
}

id sub_23AEBD5B8@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *(void **)(*(_QWORD *)v2 + 16);
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)v2 + 32);
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  v5 = type metadata accessor for FileDumper();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v8;
  v6[3] = v9;
  v6[4] = v10;
  a2[3] = v5;
  a2[4] = a1;
  *a2 = v6;
  return v8;
}

uint64_t destroy for SubStringDumper()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9libfssync15SubStringDumperVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SubStringDumper(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SubStringDumper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SubStringDumper()
{
  return &type metadata for SubStringDumper;
}

id sub_23AEBD76C(__int128 *a1)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  id v15;
  __int128 v17;
  __int128 v18;

  v18 = *a1;
  v2 = v18;
  sub_23AA9F49C((uint64_t)&v18);
  sub_23B027E44(v2, *((uint64_t *)&v2 + 1));
  v4 = v3;
  v6 = v5;
  v7 = (void *)sub_23B1C5AA4();
  sub_23AAAE53C(v4, v6);
  v17 = *(__int128 *)((char *)a1 + 24);
  v8 = v17;
  sub_23AA9F49C((uint64_t)&v17);
  sub_23B027E44(v8, *((uint64_t *)&v8 + 1));
  v10 = v9;
  v12 = v11;
  v13 = (void *)sub_23B1C5AA4();
  sub_23AAAE53C(v10, v12);
  if (*((_QWORD *)a1 + 7))
  {
    swift_bridgeObjectRetain();
    v14 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v7, v13, v14);
  sub_23AAA5CC8((uint64_t *)a1);

  return v15;
}

uint64_t sub_23AEBD894()
{
  return sub_23B1C5B10();
}

uint64_t sub_23AEBD8A8(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[40];

  sub_23AA77B28(a1, (uint64_t)v4);
  v2 = sub_23B1C5AE0();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

void sub_23AEBD90C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23B1C55E8();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23B1C6428();
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X9 }
}

uint64_t sub_23AEBD9C4()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  void (*v15)(uint64_t, uint64_t);
  char v16;
  char v17;

  if (BYTE6(v2) > 0x40uLL || (sub_23B1C641C(), v7 = sub_23B1C63F8(), !v8))
LABEL_6:
    __asm { BR              X10 }
  v9 = v7;
  v10 = v8;
  *(_QWORD *)(v6 - 120) = v5;
  *(_QWORD *)(v6 - 96) = v7;
  *(_QWORD *)(v6 - 88) = v8;
  sub_23B1C55D0();
  *(_QWORD *)(v6 - 128) = sub_23AAA420C();
  v11 = sub_23B1C6CEC();
  *(_QWORD *)(v6 - 144) = v12;
  *(_QWORD *)(v6 - 136) = v11;
  v14 = v13;
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  v15(v4, v3);
  if ((v14 & 1) == 0
    || (*(_QWORD *)(v6 - 96) = v9,
        *(_QWORD *)(v6 - 88) = v10,
        sub_23B1C55DC(),
        sub_23B1C6CEC(),
        v17 = v16,
        v15(v4, v3),
        (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  return v9;
}

void sub_23AEBDC3C(uint64_t a1, uint64_t a2)
{
  char v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  sub_23AEBDE20(a1, a2);
  if ((v4 & 1) != 0)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_beforeFirstSyncComponent, 0x2F6F72657ALL, 0xE500000000000000);
    sub_23B1C5AD4();
    v7 = v6;

    __asm { BR              X10 }
  }
  sub_23AEBD90C(a1, a2);
}

void sub_23AEBDE20(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23AEBDE64()
{
  id v0;
  unint64_t v1;
  unint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_beforeFirstSyncComponent);
  sub_23B1C5AD4();
  v2 = v1;

  return ((uint64_t (*)(void))((char *)&loc_23AEBDED0 + dword_23AEBE0AC[v2 >> 62]))();
}

uint64_t sub_23AEBDEE0()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  uint64_t v8;

  sub_23AAAE53C(v2, v1);
  if (v4 >= BYTE6(v1))
  {
    v6 = objc_msgSend(v0, *(SEL *)(v3 + 3160));
    sub_23B1C5AD4();
    v8 = v7;

    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_23AEBE0CC(uint64_t a1, unint64_t a2)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = objc_msgSend((id)objc_opt_self(), sel_beforeFirstSyncComponent);
  v5 = sub_23B1C5AD4();
  v7 = v6;

  sub_23AAAE668(a1, a2);
  sub_23AAAE668(v5, v7);
  sub_23AEBE638(a1, a2);
  sub_23AAAE53C(a1, a2);
  sub_23AAAE53C(v5, v7);
  return v5;
}

double sub_23AEBE180@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  double v6;
  unint64_t v7;
  unint64_t v8;
  double result;
  __int128 v10;

  v3 = *a1;
  v4 = a1[1];
  v5 = objc_msgSend((id)objc_opt_self(), sel_beforeFirstSyncComponent);
  v6 = COERCE_DOUBLE(sub_23B1C5AD4());
  v8 = v7;

  *(double *)&v10 = v6;
  *((_QWORD *)&v10 + 1) = v8;
  sub_23AAAE668(v3, v4);
  sub_23AAAE668(*(uint64_t *)&v6, v8);
  sub_23AEBE638(v3, v4);
  sub_23AAAE53C(v3, v4);
  sub_23AAAE53C(*(uint64_t *)&v6, v8);
  result = v6;
  *a2 = v10;
  return result;
}

void sub_23AEBE238()
{
  uint64_t *v0;

  sub_23AEBDE20(*v0, v0[1]);
}

void sub_23AEBE240()
{
  uint64_t *v0;

  sub_23AEBDC3C(*v0, v0[1]);
}

void sub_23AEBE248(uint64_t *a1)
{
  sub_23AAAE6AC(*a1, a1[1]);
}

uint64_t sub_23AEBE25C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10[40];

  sub_23AA77B28(a1, (uint64_t)v10);
  v5 = sub_23B1C5AE0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v8 = v5;
  v9 = v6;
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v8;
  a2[1] = v9;
  return result;
}

uint64_t sub_23AEBE2D8()
{
  return sub_23B1C5B10();
}

const char *sub_23AEBE2F0()
{
  return "BLOB";
}

uint64_t sub_23AEBE2FC(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(a1, sel_dataAtIndex_, a2);
  v4 = sub_23B1C5AD4();

  return v4;
}

void sub_23AEBE368()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AEBE3C0(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;

  v2 = (void *)sub_23B1C5AA4();
  v3 = objc_msgSend(a1, sel_bindObjectParameter_, v2);

  v4 = sub_23B1C63E0();
  return v4;
}

uint64_t sub_23AEBE434(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;

  v2 = (void *)sub_23B1C5AA4();
  v3 = objc_msgSend(a1, sel_bindObjectParameter_, v2);

  v4 = sub_23B1C63E0();
  return v4;
}

uint64_t sub_23AEBE4A4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746E65746E6F63;
  if (*v0 != 1)
    v1 = 1852073324;
  if (*v0)
    return v1;
  else
    return 0x617461646174656DLL;
}

uint64_t sub_23AEBE4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AEBE880(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AEBE51C()
{
  sub_23AEBEDEC();
  return sub_23B1C7544();
}

uint64_t sub_23AEBE544()
{
  sub_23AEBEDEC();
  return sub_23B1C7550();
}

_QWORD *sub_23AEBE56C(_QWORD *a1)
{
  return sub_23AEBE9C4(a1);
}

_QWORD *sub_23AEBE580@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_23AEBE9C4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23AEBE5A8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23B1C560C();
  if (!result || (result = sub_23B1C5624(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23B1C5618();
      return sub_23B1C5A74();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23AEBE638(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x24BDAC8D0];
  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_23AEBE69C
     + *((int *)qword_23AEBE840 + (__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x24BDCDDE8])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_23AEBE6AC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_23AAAE668(v1, v0);
  sub_23B1C5A74();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
}

uint64_t sub_23AEBE880(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852073324 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_23AEBE9C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6D50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AEBEDEC();
  sub_23B1C7520();
  if (!v1)
  {
    v22 = 0;
    sub_23AB5EC6C();
    sub_23B1C71C0();
    v9 = v20;
    v8 = v21;
    v22 = 1;
    sub_23B1C71C0();
    v10 = v20;
    v19 = v21;
    LOBYTE(v20) = 2;
    v15 = (id)sub_23B1C719C();
    v16 = objc_allocWithZone(MEMORY[0x24BDC83D8]);
    v17 = v10;
    v18 = (id)sub_23B1C5AA4();
    v12 = (void *)sub_23B1C5AA4();
    v13 = (void *)sub_23B1C63BC();
    v15 = v13;
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v16, sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v18, v12, v13);
    sub_23AAAE53C(v9, v8);
    sub_23AAAE53C(v17, v19);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_23AEBEC50(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23AEBEC84();
  a1[2] = sub_23AEBECC8();
  result = sub_23AEBED0C();
  a1[3] = result;
  return result;
}

unint64_t sub_23AEBEC84()
{
  unint64_t result;

  result = qword_2542E6CF0;
  if (!qword_2542E6CF0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC24C, &type metadata for FPItemVersionData);
    atomic_store(result, (unint64_t *)&qword_2542E6CF0);
  }
  return result;
}

unint64_t sub_23AEBECC8()
{
  unint64_t result;

  result = qword_2542E6CE0;
  if (!qword_2542E6CE0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC274, &type metadata for FPItemVersionData);
    atomic_store(result, (unint64_t *)&qword_2542E6CE0);
  }
  return result;
}

unint64_t sub_23AEBED0C()
{
  unint64_t result;

  result = qword_2542E6CE8;
  if (!qword_2542E6CE8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC224, &type metadata for FPItemVersionData);
    atomic_store(result, (unint64_t *)&qword_2542E6CE8);
  }
  return result;
}

uint64_t *assignWithCopy for FPItemVersionData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_23AAAE668(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_23AAAE53C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for FPItemVersionData(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_23AAAE53C(v3, v4);
  return a1;
}

ValueMetadata *type metadata accessor for FPItemVersionData()
{
  return &type metadata for FPItemVersionData;
}

ValueMetadata *type metadata accessor for NSFileProviderItemVersionWrapper()
{
  return &type metadata for NSFileProviderItemVersionWrapper;
}

unint64_t sub_23AEBEDEC()
{
  unint64_t result;

  result = qword_2569E6D58;
  if (!qword_2569E6D58)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC42C, &type metadata for NSFileProviderItemVersionWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E6D58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NSFileProviderItemVersionWrapper.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23AEBEE7C + 4 * byte_23B1DC1C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23AEBEEB0 + 4 * byte_23B1DC1C0[v4]))();
}

uint64_t sub_23AEBEEB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEBEEB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AEBEEC0);
  return result;
}

uint64_t sub_23AEBEECC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AEBEED4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23AEBEED8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AEBEEE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NSFileProviderItemVersionWrapper.CodingKeys()
{
  return &type metadata for NSFileProviderItemVersionWrapper.CodingKeys;
}

unint64_t sub_23AEBEF00()
{
  unint64_t result;

  result = qword_2569E6D60;
  if (!qword_2569E6D60)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC404, &type metadata for NSFileProviderItemVersionWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E6D60);
  }
  return result;
}

unint64_t sub_23AEBEF48()
{
  unint64_t result;

  result = qword_2569E6D68;
  if (!qword_2569E6D68)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC33C, &type metadata for NSFileProviderItemVersionWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E6D68);
  }
  return result;
}

unint64_t sub_23AEBEF90()
{
  unint64_t result;

  result = qword_2569E6D70;
  if (!qword_2569E6D70)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC364, &type metadata for NSFileProviderItemVersionWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E6D70);
  }
  return result;
}

uint64_t sub_23AEBEFD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BOOL4 v7;
  uint64_t result;
  id v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_23B1C5E4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = !*(_BYTE *)(a1 + 104) || *(_BYTE *)(a1 + 104) == 4 && *(_OWORD *)(a1 + 88) == 0;
  result = sub_23ABD8C4C();
  if (!v1)
  {
    result = swift_release();
    if (v7)
    {
      v9 = (id)fpfs_current_or_default_log();
      v10 = sub_23B1C5E58();
      v11 = (*(unsigned __int8 (**)(uint64_t))(*(_QWORD *)a1 + 392))(v10);
      swift_retain();
      v12 = sub_23B1C5E40();
      v13 = v11;
      if (os_log_type_enabled(v12, v11))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        v23 = v21;
        v20 = v14;
        *(_DWORD *)v14 = 136446210;
        v19 = v14 + 4;
        sub_23AF1A18C();
        v22 = sub_23AABEC68(v15, v16, &v23);
        sub_23B1C6CBC();
        swift_release();
        swift_bridgeObjectRelease();
        v17 = v20;
        _os_log_impl(&dword_23AA66000, v12, v13, " ✍️  persist job: %{public}s", v20, 0xCu);
        v18 = v21;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v18, -1, -1);
        MEMORY[0x23B8614BC](v17, -1, -1);

      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return result;
}

void sub_23AEBF200(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  __int128 v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char *v31;
  uint64_t v32[3];
  uint64_t v33;

  v23[0] = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v23[0]);
  v23[1] = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C5E4C();
  v33 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  if (v9)
  {
    v25 = a2;
    v26 = v3;
    v27 = a1;
    v28 = v2;
    v24 = swift_bridgeObjectRetain();
    v10 = (unint64_t *)(v24 + 40);
    *(_QWORD *)&v11 = 136315138;
    v30 = v11;
    v29 = MEMORY[0x24BEE4AD8] + 8;
    v12 = v31;
    do
    {
      v14 = *(v10 - 1);
      v13 = *v10;
      swift_bridgeObjectRetain();
      v15 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      swift_bridgeObjectRetain();
      v16 = sub_23B1C5E40();
      v17 = sub_23B1C6A88();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = v7;
        v19 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v32[0] = v20;
        *(_DWORD *)v19 = v30;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v19 + 4) = sub_23AABEC68(v14, v13, v32);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23AA66000, v16, v17, "%s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        v21 = v20;
        v12 = v31;
        MEMORY[0x23B8614BC](v21, -1, -1);
        v22 = v19;
        v7 = v18;
        MEMORY[0x23B8614BC](v22, -1, -1);

        (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v18);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v7);
      }
      v10 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23AEC2FF0();
}

uint64_t sub_23AEBF48C()
{
  uint64_t v0;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (!v0)
  {
    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23ACFFD18();
  }
  return result;
}

uint64_t sub_23AEBF594(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  void (*v6)(uint64_t);
  uint64_t v7;

  if (a1 < 0)
  {
    v5 = (_QWORD *)(a1 & 0x7FFFFFFFFFFFFFFFLL);
    v6 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 176);
    v7 = swift_retain();
    v6(v7);
    v3 = sub_23AEC0C84(v5);
    swift_release();
  }
  else
  {
    v2 = (_QWORD *)swift_retain();
    v3 = sub_23AEC0C84(v2);
  }
  swift_release();
  return v3;
}

void sub_23AEBF638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = a2;
  v15 = a1;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 80);
  v7 = *(_QWORD *)(*v4 + 96);
  v12 = type metadata accessor for FileTreeError(0, v6, v7, a4);
  v11[2] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v13 = (char *)v11 - v8;
  v9 = *(_QWORD *)(v5 + 88);
  v10 = *(_QWORD *)(v5 + 104);
  v16 = v6;
  v17 = v9;
  v18 = v7;
  v19 = v10;
  type metadata accessor for PersistenceTrigger();
}

void sub_23AEBF6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;

  *(_QWORD *)(v13 - 248) = a1;
  *(_QWORD *)(v13 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 256) = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 184) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - v18;
  v20 = v19;
  v21 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 200) = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 240) = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 216) = (char *)&a9 - v24;
  *(_QWORD *)(v13 - 160) = v10;
  *(_QWORD *)(v13 - 152) = v9;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v13 - 176) = v12;
  *(_QWORD *)(v13 - 168) = v11;
  v26 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v13 - 192) = v21;
  *(_QWORD *)(v13 - 120) = v21;
  *(_QWORD *)(v13 - 112) = v20;
  *(_QWORD *)(v13 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v13 - 96) = v26;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AEBF868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, uint64_t, uint64_t);
  void (*v37)(uint64_t, _BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_BYTE *, uint64_t, uint64_t);
  void (*v44)(uint64_t, _BYTE *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[96];

  v5 = sub_23B1C6C98();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = &v55[-v11];
  *(_QWORD *)(v3 - 136) = a1;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = &v55[-v18];
  result = MEMORY[0x24BDAC7A8](v17);
  v24 = *(_QWORD **)(v3 - 128);
  v25 = v24[16];
  if ((v25 & 1) != 0)
  {
    v27 = v1;
    *(_QWORD *)(v3 - 232) = &v55[-v21];
    *(_QWORD *)(v3 - 144) = v22;
    v28 = *(_QWORD *)(v3 - 72);
    result = (*(uint64_t (**)(uint64_t))(*v24 + 472))(v2);
    if (!v28)
    {
      *(_QWORD *)(v3 - 240) = v2;
      v29 = *(_QWORD *)(v3 - 144);
      v30 = *(_QWORD *)(v3 - 136);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v29 + 48))(v12, 1, v30) != 1)
      {
        *(_QWORD *)(v3 - 72) = 0;
        v35 = *(_QWORD *)(v3 - 232);
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v29 + 32))(v35, v12, v30);
        v36 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 16);
        *(_QWORD *)(v3 - 296) = v36;
        v36(v19, v35, v30);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v37 = *(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v3 - 184) + 32);
          v38 = *(_QWORD *)(v3 - 208);
          *(_QWORD *)(v3 - 192) = v27;
          v37(v38, v19, v27);
          v39 = *(_QWORD *)(v3 - 168);
          v41 = *(_QWORD *)(v3 - 160);
          v40 = *(_QWORD *)(v3 - 152);
          *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 176);
          *(_QWORD *)(v3 - 112) = v41;
          *(_QWORD *)(v3 - 104) = v39;
          *(_QWORD *)(v3 - 96) = v40;
          type metadata accessor for ItemJob();
        }
        (*(void (**)(_QWORD, _BYTE *, _QWORD))(*(_QWORD *)(v3 - 200) + 32))(*(_QWORD *)(v3 - 216), v19, *(_QWORD *)(v3 - 192));
        v49 = *(_QWORD *)(v3 - 152);
        v51 = *(_QWORD *)(v3 - 176);
        v50 = *(_QWORD *)(v3 - 168);
        *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 160);
        *(_QWORD *)(v3 - 112) = v51;
        *(_QWORD *)(v3 - 104) = v49;
        *(_QWORD *)(v3 - 96) = v50;
        type metadata accessor for ItemJob();
      }
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v12, v5);
    }
  }
  else
  {
    v26 = *(_QWORD *)(v3 - 72);
    if ((v25 & 2) != 0)
    {
      v31 = v2;
      v32 = v1;
      *(_QWORD *)(v3 - 208) = v23;
      *(_QWORD *)(v3 - 144) = v22;
      result = (*(uint64_t (**)(uint64_t))(*v24 + 480))(v2);
      if (!v26)
      {
        v33 = *(_QWORD *)(v3 - 144);
        v34 = *(_QWORD *)(v3 - 136);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v33 + 48))(v9, 1, v34) != 1)
        {
          *(_QWORD *)(v3 - 72) = 0;
          v42 = *(_QWORD *)(v3 - 208);
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v33 + 32))(v42, v9, v34);
          v43 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v33 + 16);
          *(_QWORD *)(v3 - 272) = v43;
          v43(v15, v42, v34);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v44 = *(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v3 - 184) + 32);
            v45 = *(_QWORD *)(v3 - 232);
            *(_QWORD *)(v3 - 192) = v32;
            v44(v45, v15, v32);
            *(_QWORD *)(v3 - 216) = *(_QWORD *)(v31 + 24);
            v46 = *(_QWORD *)(v3 - 168);
            v48 = *(_QWORD *)(v3 - 160);
            v47 = *(_QWORD *)(v3 - 152);
            *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 176);
            *(_QWORD *)(v3 - 112) = v48;
            *(_QWORD *)(v3 - 104) = v46;
            *(_QWORD *)(v3 - 96) = v47;
            type metadata accessor for ItemJob();
          }
          (*(void (**)(_QWORD, _BYTE *, _QWORD))(*(_QWORD *)(v3 - 200) + 32))(*(_QWORD *)(v3 - 240), v15, *(_QWORD *)(v3 - 192));
          *(_QWORD *)(v3 - 216) = *(_QWORD *)(v31 + 24);
          v52 = *(_QWORD *)(v3 - 152);
          v54 = *(_QWORD *)(v3 - 176);
          v53 = *(_QWORD *)(v3 - 168);
          *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 160);
          *(_QWORD *)(v3 - 112) = v54;
          *(_QWORD *)(v3 - 104) = v52;
          *(_QWORD *)(v3 - 96) = v53;
          type metadata accessor for ItemJob();
        }
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
      }
    }
  }
  return result;
}

void sub_23AEC0328(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  id v12;

  if (!v1 && (a1 & 1) != 0)
  {
    v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v8 = v4;
    v9 = *(_QWORD *)(v6 - 256);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 - 296))(v9, *(_QWORD *)(v6 - 232), v2);
    *(_QWORD *)(v9 + v7) = v5;
    v10 = *(_QWORD *)(v6 - 248);
    swift_storeEnumTagMultiPayload();
    v11 = *(void (**)(uint64_t))(*(_QWORD *)v8 + 312);
    v12 = v5;
    v11(v9);

    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 264) + 8))(v9, v10);
    JUMPOUT(0x23AEBFE80);
  }
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 144) + 8))(*(_QWORD *)(v6 - 232), v2);

  JUMPOUT(0x23AEBFE84);
}

void sub_23AEC03EC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  id v10;

  if (!v1 && (a1 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
    v6 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v7 = *(_QWORD *)(v5 - 256);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 272))(v7, *(_QWORD *)(v5 - 208), v2);
    *(_QWORD *)(v7 + v6) = v4;
    v8 = *(_QWORD *)(v5 - 248);
    swift_storeEnumTagMultiPayload();
    v9 = *(void (**)(uint64_t))(*(_QWORD *)v3 + 312);
    v10 = v4;
    v9(v7);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 264) + 8))(v7, v8);
  }
  JUMPOUT(0x23AEBFE80);
}

uint64_t sub_23AEC05F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  int v7;
  int v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *v3;
  v7 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 176))();
  if (v7 == 9)
    return 0;
  v9 = v7;
  v10 = (_QWORD *)(*(uint64_t (**)(void))(*v3 + 448))();
  v11 = *(uint64_t (**)(uint64_t))(*v3 + 168);
  v12 = swift_bridgeObjectRetain();
  v13 = (void *)v11(v12);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v6 + 80);
  *(_OWORD *)(v15 + 24) = *(_OWORD *)(v6 + 88);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v6 + 104);
  *(_QWORD *)(v15 + 48) = v14;
  type metadata accessor for JobLimitSlot();
  swift_allocObject();
  return sub_23AEFE098(v10, v9, a2, a3, v13, (uint64_t)sub_23AEC31B4, v15);
}

void sub_23AEC0718(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  char v34;
  char v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  void *v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v52 = a3;
  v53 = a4;
  v51 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v48 - v9;
  v11 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v4 + 32) + 16) + 408);
  v12 = swift_retain();
  v13 = v11(v12);
  v14 = swift_release();
  if (v13)
  {
    v50 = (void *)v13;
    (*(void (**)(uint64_t))(*a2 + 288))(v14);
    v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, AssociatedTypeWitness) == 1)
    {
      v48 = 0xE000000000000000;
      v49 = 0;
      AssociatedTypeWitness = v7;
    }
    else
    {
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v17 = sub_23ABDD6F4(AssociatedTypeWitness, AssociatedConformanceWitness);
      v48 = v18;
      v49 = v17;
      v8 = v15;
    }
    v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
    v20 = (*(uint64_t (**)(uint64_t))(*a2 + 272))(v19);
    if ((v21 & 1) != 0)
      v22 = 0;
    else
      v22 = v20;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, v22);
    sub_23B0DC740(2);
    v25 = v24;

    v26 = v50;
    if (v25)
    {
      v27 = objc_msgSend(v25, sel_longLongValue);

    }
    else
    {
      v27 = 0;
    }
    v28 = (*(uint64_t (**)(void))(*a2 + 280))();
    if ((v28 & 0x100000000) != 0)
      v29 = 0;
    else
      v29 = v28;
    v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, v29);
    sub_23B0DC740(2);
    v32 = v31;

    if (v32)
    {
      v33 = objc_msgSend(v32, sel_longLongValue);

    }
    else
    {
      v33 = 0;
    }
    v34 = (*(uint64_t (**)(void))(*a2 + 256))();
    if (v34 != 4)
    {
      v35 = v34;
      (*(void (**)(void))(*a2 + 264))();
      __asm { BR              X10 }
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23B1D7740;
    strcpy((char *)(inited + 32), "operationType");
    *(_WORD *)(inited + 46) = -4864;
    v37 = (*(uint64_t (**)(void))(*a2 + 168))();
    v39 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v37;
    *(_QWORD *)(inited + 56) = v38;
    *(_QWORD *)(inited + 72) = v39;
    *(_QWORD *)(inited + 80) = 0x657079546D657469;
    *(_QWORD *)(inited + 88) = 0xE800000000000000;
    *(_QWORD *)(inited + 96) = 4271950;
    *(_QWORD *)(inited + 104) = 0xE300000000000000;
    v40 = MEMORY[0x24BEE4008];
    *(_QWORD *)(inited + 120) = v39;
    *(_QWORD *)(inited + 128) = 0x657A69536D657469;
    *(_QWORD *)(inited + 136) = 0xE800000000000000;
    *(_QWORD *)(inited + 144) = v27;
    *(_QWORD *)(inited + 168) = v40;
    strcpy((char *)(inited + 176), "childItemCount");
    *(_BYTE *)(inited + 191) = -18;
    *(_QWORD *)(inited + 192) = v33;
    *(_QWORD *)(inited + 216) = v40;
    strcpy((char *)(inited + 224), "commonFolder");
    *(_BYTE *)(inited + 237) = 0;
    *(_WORD *)(inited + 238) = -5120;
    v41 = v48;
    *(_QWORD *)(inited + 240) = v49;
    *(_QWORD *)(inited + 248) = v41;
    *(_QWORD *)(inited + 264) = v39;
    strcpy((char *)(inited + 272), "connectionType");
    *(_BYTE *)(inited + 287) = -18;
    if (qword_2542E0FD8 != -1)
      swift_once();
    sub_23B1C6B48();
    v42 = v55;
    *(_QWORD *)(inited + 288) = v54;
    *(_QWORD *)(inited + 296) = v42;
    *(_QWORD *)(inited + 312) = v39;
    *(_QWORD *)(inited + 320) = 0xD000000000000011;
    *(_QWORD *)(inited + 328) = 0x800000023B1FC7E0;
    if (__OFSUB__(v53, v52))
    {
      __break(1u);
      JUMPOUT(0x23AEC0C74);
    }
    v43 = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 336) = v53 - v52;
    *(_QWORD *)(inited + 360) = v43;
    *(_QWORD *)(inited + 368) = 0x6E6F73616572;
    *(_QWORD *)(inited + 376) = 0xE600000000000000;
    v44 = a2[16];
    *(_QWORD *)(inited + 408) = MEMORY[0x24BEE1E88];
    *(_QWORD *)(inited + 384) = v44;
    v45 = sub_23AAE9EB4(inited);
    sub_23B147D30(v45);
    swift_bridgeObjectRelease();
    v46 = (void *)sub_23B1C61F4();
    swift_bridgeObjectRelease();
    v47 = (void *)sub_23B1C5870();
    objc_msgSend(v26, sel_postReportWithCategory_type_payload_error_, 1, 1, v46, v47);

  }
}

uint64_t sub_23AEC0C84(_QWORD *a1)
{
  NSObject *v1;
  uint64_t v2;
  NSObject v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  id v44;
  id v45;
  _BYTE *v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  NSObject *v59;
  _QWORD *v60;
  id v61;
  unint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  os_log_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  char v76;
  os_log_t v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void (*v88)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  id v95;
  _BYTE *v96;
  void (*v97)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  id v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v107[12];
  int v108;
  id v109;
  NSObject *v110;
  id v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  unint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t *isa;
  os_log_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v4.isa = v1->isa;
  v5 = sub_23B1C5BDC();
  v126 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v107[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v125 = sub_23B1C5DC8();
  v130 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v129 = &v107[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v123 = &v107[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v128 = &v107[-v12];
  v124 = type metadata accessor for Signpost(0);
  v121 = *(_QWORD *)(v124 - 8);
  v13 = MEMORY[0x24BDAC7A8](v124);
  v15 = &v107[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v122 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v107[-v16];
  v18 = sub_23B1C5E4C();
  v131 = *(_QWORD *)(v18 - 8);
  v132 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v127 = &v107[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = &v107[-v22];
  isa = (uint64_t *)v4.isa;
  if (((*((uint64_t (**)(uint64_t))v4.isa + 30))(v21) & 1) != 0)
    return 2;
  v116 = v15;
  v134 = v1;
  v117 = v7;
  v119 = v17;
  v118 = v5;
  if (*((_BYTE *)a1 + 104) != 1)
  {
    sub_23B1C704C();
    __break(1u);
    JUMPOUT(0x23AEC1C0CLL);
  }
  v25 = (void *)a1[11];
  v26 = (void *)a1[12];
  swift_retain();
  sub_23AF1A18C();
  v28 = v27;
  v30 = v29;
  v31 = v134;
  v32 = (*((uint64_t (**)(void))v134->isa + 27))();
  v33 = v31;
  v24 = (uint64_t)a1;
  v34 = (*(uint64_t (**)(uint64_t, os_log_t))(*a1 + 456))(v32, v33);
  v120 = v2;
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_23AAAEE10(v25, v26, 1);
  }
  else
  {
    v37 = v34;
    v114 = v28;
    v115 = v30;
    v112 = v32;
    v113 = v25;
    v111 = v26;
    if ((v35 & 1) == 0)
    {
      a1[3] = v34;
      swift_release();
      v38 = a1[3];
      v39 = v115;
      if (v38)
      {
        v40 = swift_allocObject();
        swift_weakInit();
        v41 = swift_allocObject();
        v42 = isa;
        *(_QWORD *)(v41 + 16) = isa[10];
        *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 11);
        *(_QWORD *)(v41 + 40) = v42[13];
        *(_QWORD *)(v41 + 48) = v40;
        v43 = *(_QWORD *)(v38 + 80);
        *(_QWORD *)(v38 + 80) = sub_23AEC31B4;
        *(_QWORD *)(v38 + 88) = v41;
        sub_23AAB7948(v43);
      }
      v44 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
      v45 = (id)fpfs_current_or_default_log();
      v46 = v127;
      sub_23B1C5E58();
      swift_bridgeObjectRetain_n();
      v47 = v44;
      v48 = sub_23B1C5E40();
      v49 = sub_23B1C6A94();
      v50 = v49;
      v110 = v48;
      v51 = os_log_type_enabled(v48, v49);
      v52 = v114;
      v109 = v47;
      if (v51)
      {
        v53 = swift_slowAlloc();
        v54 = (_QWORD *)swift_slowAlloc();
        v55 = swift_slowAlloc();
        v108 = v50;
        v56 = v55;
        v136 = v55;
        *(_DWORD *)v53 = 138412546;
        v57 = v47;
        v58 = objc_msgSend(v47, sel_fork, v53 + 4);
        v135 = (uint64_t)v58;
        sub_23B1C6CBC();
        *v54 = v58;

        *(_WORD *)(v53 + 12) = 2082;
        swift_bridgeObjectRetain();
        v135 = sub_23AABEC68(v114, v39, &v136);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease_n();
        v59 = v110;
        _os_log_impl(&dword_23AA66000, v110, (os_log_type_t)v108, "%@ ▶️  executing %{public}s", (uint8_t *)v53, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        v60 = v54;
        v52 = v114;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v60, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v56, -1, -1);
        MEMORY[0x23B8614BC](v53, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(_BYTE *, unint64_t))(v131 + 8))(v46, v132);
      v73 = v130;
      v75 = (void *)a1[11];
      v74 = (void *)a1[12];
      a1[11] = v113;
      a1[12] = 0;
      v76 = *((_BYTE *)a1 + 104);
      *((_BYTE *)a1 + 104) = 2;
      swift_retain();
      sub_23AAAEE10(v75, v74, v76);
      v77 = v134;
      a1[2] = sub_23AEC05F0((uint64_t)a1, v52, v39);
      v78 = swift_release();
      v79 = (*((uint64_t (**)(uint64_t))v77->isa + 29))(v78);
      dispatch_group_enter(v79);

      v80 = (*((uint64_t (**)(_QWORD *))v77->isa + 44))(a1);
      if (((*(uint64_t (**)(uint64_t))(*a1 + 400))(v80) & 1) != 0)
      {
        v81 = (*((uint64_t (**)(void))v134->isa + 24))();
        v82 = *(_QWORD *)(v81 + 24);
        v83 = __OFADD__(v82, 1);
        v84 = v82 + 1;
        if (v83)
        {
          __break(1u);
          JUMPOUT(0x23AEC1BACLL);
        }
        *(_QWORD *)(v81 + 24) = v84;
        swift_release();
      }
      v85 = a1[2];
      if (v85)
      {
        v86 = *(unsigned __int8 *)(v85 + 24);
        if (sub_23AE4F6B4())
          __asm { BR              X9 }
        __asm { BR              X9 }
      }
      sub_23AE4F6B4();
      if (qword_2542E6818 != -1)
        swift_once();
      v87 = (void *)qword_2542EDD28;
      v88 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v73 + 56);
      v89 = v73;
      v90 = v128;
      v91 = v125;
      v88(v128, 1, 1, v125);
      v136 = 0x2065747563657865;
      v137 = 0xE800000000000000;
      v92 = v91;
      sub_23B1C64F4();
      v131 = v136;
      v132 = v137;
      v93 = v89;
      v94 = v123;
      sub_23AA8A098((uint64_t)v90, (uint64_t)v123);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v89 + 48))(v94, 1, v92) == 1)
      {
        v95 = v87;
        v96 = v129;
        sub_23B1C5DB0();
        sub_23AEC31B8((uint64_t)v94);
      }
      else
      {
        v97 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v89 + 32);
        v96 = v129;
        v97(v129, v94, v92);
      }
      v98 = v119;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v93 + 16))(v119, v96, v92);
      v99 = v124;
      *(_QWORD *)&v98[*(int *)(v124 + 20)] = v87;
      v100 = &v98[*(int *)(v99 + 24)];
      *(_QWORD *)v100 = "Scheduler: Async Job execution (no limit)";
      *((_QWORD *)v100 + 1) = 41;
      v100[16] = 2;
      v101 = v87;
      v102 = v132;
      swift_bridgeObjectRetain();
      sub_23B1C6BE4();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
      v103 = swift_allocObject();
      *(_OWORD *)(v103 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v103 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v103 + 64) = sub_23AAA0D14();
      *(_QWORD *)(v103 + 32) = v131;
      *(_QWORD *)(v103 + 40) = v102;
      sub_23B1C5D98();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v130 + 8))(v129, v92);
      swift_bridgeObjectRelease();
      sub_23AEC31B8((uint64_t)v128);
      v104 = isa[11];
      v106 = isa[12];
      v105 = isa[13];
      v136 = isa[10];
      v137 = v104;
      v138 = v106;
      v139 = v105;
      type metadata accessor for ConcreteJobResult();
    }
    v61 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v62 = v115;
    swift_bridgeObjectRetain();
    sub_23AEC33E8(v37, 1);
    v63 = sub_23B1C5E40();
    v64 = sub_23B1C6A94();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc();
      v134 = v63;
      v66 = v65;
      v130 = swift_slowAlloc();
      v136 = swift_slowAlloc();
      v67 = v136;
      *(_DWORD *)v66 = 136446466;
      swift_bridgeObjectRetain();
      v135 = sub_23AABEC68(v114, v62, &v136);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 12) = 2112;
      v135 = v37;
      v69 = type metadata accessor for JobLock.BlockedRuleError(0, isa[10], isa[12], v68);
      MEMORY[0x23B8613CC](&unk_23B1D1718, v69);
      v70 = sub_23B0D9CF0(v69);
      v135 = (uint64_t)v70;
      sub_23B1C6CBC();
      v71 = v130;
      *(_QWORD *)v130 = v70;
      sub_23AEC33F4(v37, 1);
      sub_23AEC33F4(v37, 1);
      v72 = v134;
      _os_log_impl(&dword_23AA66000, v134, v64, "🔏  job locked out of execution %{public}s by rules %@", (uint8_t *)v66, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v71, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v67, -1, -1);
      MEMORY[0x23B8614BC](v66, -1, -1);

      swift_release();
      sub_23AAAEE10(v113, v111, 1);
      (*(void (**)(_BYTE *, unint64_t))(v131 + 8))(v23, v132);
      return 2;
    }
    else
    {
      v24 = 2;
      swift_bridgeObjectRelease_n();
      sub_23AEC33F4(v37, 1);
      sub_23AEC33F4(v37, 1);
      swift_release();
      sub_23AAAEE10(v113, v111, 1);

      (*(void (**)(_BYTE *, unint64_t))(v131 + 8))(v23, v132);
    }
  }
  return v24;
}

uint64_t sub_23AEC1C5C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 304))(result);
    return swift_release();
  }
  return result;
}

void sub_23AEC1CB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, unint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  char v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  id v60;
  _QWORD *v61;
  char *v62;
  int v63;
  id v64;
  id v65;
  int v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char *v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  void *v76;
  void *v77;
  char v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  id v83;
  uint64_t v84;
  id v85;
  id v86;
  NSObject *v87;
  int v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  BOOL v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  id v102;
  int v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  char v109;
  void *v110;
  unint64_t v111;
  unint64_t v112;
  id v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  id v117;
  id v118;
  NSObject *v119;
  uint64_t v121;
  char *v122;
  id v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  char *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  char *v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154[4];
  id v155[2];

  v148 = a3;
  v149 = a8;
  v146 = a6;
  v141 = a2;
  v144 = a1;
  v139 = sub_23B1C5570();
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v138 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = (_QWORD *)sub_23B1C6F74();
  v140 = (_QWORD *)*(v143 - 1);
  MEMORY[0x24BDAC7A8](v143);
  v142 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5474();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23B1C5BDC();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23B1C5E4C();
  v151 = *(_QWORD *)(v25 - 8);
  v152 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v147 = (char *)&v132 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v132 - v30;
  v150 = a5;
  if (*(_BYTE *)(a5 + 104) != 2)
  {
    v45 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_bridgeObjectRetain();
    v46 = a4;
    swift_bridgeObjectRetain();
    v47 = a4;
    v48 = sub_23B1C5E40();
    v49 = sub_23B1C6AAC();
    v22 = a7;
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v153 = v51;
      *(_DWORD *)v50 = 136446466;
      swift_bridgeObjectRetain();
      v155[0] = (id)sub_23AABEC68((uint64_t)v146, v22, &v153);
      sub_23B1C6CBC();
      v150 = v22;
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v50 + 12) = 2080;
      if (a4)
      {
        swift_getErrorValue();
        v52 = sub_23B0D9CF0(v154[3]);
        v53 = objc_msgSend(v52, sel_description);

        v54 = sub_23B1C63E0();
        v56 = v55;

      }
      else
      {
        v56 = 0xE300000000000000;
        v54 = 7104878;
      }
      v155[0] = (id)sub_23AABEC68(v54, v56, &v153);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23AA66000, v48, v49, "%{public}s completion was called twice, second time with %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v51, -1, -1);
      MEMORY[0x23B8614BC](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v151 + 8))(v31, v152);
      v22 = v150;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v151 + 8))(v31, v152);
    }
    if (!a4)
    {
LABEL_63:
      swift_bridgeObjectRetain();
      sub_23AFF33FC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Database+JobExecution.swift", 111, 2, 241, (uint64_t)v146, v22);
    }
    v153 = (uint64_t)a4;
    v64 = a4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    type metadata accessor for PQLSqliteError(0);
    if (swift_dynamicCast())
    {

      return;
    }
LABEL_62:

    goto LABEL_63;
  }
  v135 = v29;
  v146 = a4;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v33 = v32;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v34 = v33 * 1000000000.0;
  if ((~COERCE__INT64(v33 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v34 >= 9.22337204e18)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v136 = a10;
  v35 = (uint64_t)v34;
  v36 = v150;
  (*(void (**)(uint64_t))(*(_QWORD *)a9 + 360))(v150);
  v37 = v146;
  v145 = v35;
  v133 = a11;
  if (!v146)
  {
    if (v144)
    {
      v57 = *(void (**)(uint64_t))(*(_QWORD *)v144 + 88);
      v58 = swift_retain();
      v57(v58);
      __asm { BR              X11 }
    }
    v67 = v149;
    v68 = v145;
    v69 = a12;
    v108 = *(void **)(v36 + 88);
    v107 = *(void **)(v36 + 96);
    *(_QWORD *)(v36 + 88) = 1;
    *(_QWORD *)(v36 + 96) = 0;
    v109 = *(_BYTE *)(v36 + 104);
    *(_BYTE *)(v36 + 104) = 4;
    sub_23AAAEE10(v108, v107, v109);
    *(_QWORD *)(v36 + 32) = 0;
    *(_BYTE *)(v36 + 40) = 1;
    sub_23AF1A18C();
    v146 = v110;
    v112 = v111;
    v113 = (id)fpfs_current_or_default_log();
    v114 = sub_23B1C5E58();
    v115 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v36 + 392))(v114);
    v116 = v148;
    swift_bridgeObjectRetain_n();
    v117 = v67;
    swift_bridgeObjectRetain();
    v118 = v117;
    v119 = sub_23B1C5E40();
    LODWORD(v144) = v115;
    if (os_log_type_enabled(v119, (os_log_type_t)v115))
    {
      v134 = a12;
      v121 = swift_slowAlloc();
      v122 = (char *)swift_slowAlloc();
      v143 = (_QWORD *)swift_slowAlloc();
      v155[0] = v143;
      *(_DWORD *)v121 = 138413058;
      v123 = objc_msgSend(v118, sel_adopt);
      v153 = (uint64_t)v123;
      sub_23B1C6CBC();
      v142 = v122;
      *(_QWORD *)v122 = v123;

      v22 = 2082;
      *(_WORD *)(v121 + 12) = 2082;
      swift_bridgeObjectRetain();
      v153 = sub_23AABEC68((uint64_t)v146, v112, (uint64_t *)v155);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v121 + 22) = 2082;
      if (v116)
      {
        v153 = 0x20209286E220;
        v154[0] = 0xA600000000000000;
        swift_bridgeObjectRetain();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v124 = v153;
        v125 = v154[0];
      }
      else
      {
        v124 = 0;
        v125 = 0xE000000000000000;
      }
      v126 = v133;
      v153 = sub_23AABEC68(v124, v125, (uint64_t *)v155);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v121 + 32) = 2082;
      v127 = v145 - v126;
      if (__OFSUB__(v145, v126))
        goto LABEL_59;
      v69 = v134;
      if (v127 < 0)
      {
        v98 = __OFSUB__(0, v127);
        v127 = v126 - v145;
        if (v98)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        v129 = 0xE100000000000000;
        v128 = 45;
      }
      else
      {
        v128 = 0;
        v129 = 0xE000000000000000;
      }
      sub_23AF3E770(v127);
      v153 = v128;
      v154[0] = v129;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v153 = sub_23AABEC68(v153, v154[0], (uint64_t *)v155);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v119, (os_log_type_t)v144, "%@ ✅  done executing %{public}s%{public}s [duration %{public}s]", (uint8_t *)v121, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      v130 = v142;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v130, -1, -1);
      v131 = v143;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v131, -1, -1);
      MEMORY[0x23B8614BC](v121, -1, -1);

      (*(void (**)(char *, uint64_t))(v151 + 8))(v147, v152);
      v68 = v145;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v151 + 8))(v147, v152);
    }
    sub_23AEBEFD4(v150);
    sub_23AEBF200(v69, v68);
  }
  v38 = v146;
  sub_23AEC0718((uint64_t)v37, (_QWORD *)v36, a11, v35);
  v153 = (uint64_t)v37;
  v39 = v37;
  v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  v41 = swift_dynamicCast();
  v42 = v37;
  v134 = a12;
  v147 = (char *)v40;
  if ((v41 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);

    v43 = v148;
    v44 = v149;
LABEL_27:
    v73 = v42;
    swift_willThrow();
    v74 = v42;
    v75 = a9;
    goto LABEL_28;
  }

  v153 = (uint64_t)v37;
  v60 = v37;
  v62 = v142;
  v61 = v143;
  v63 = swift_dynamicCast();
  v43 = v148;
  if (v63)
  {
    ((void (*)(char *, _QWORD *))v140[1])(v62, v61);

    v44 = v149;
    goto LABEL_27;
  }

  v153 = (uint64_t)v42;
  v65 = v42;
  type metadata accessor for NSFileProviderError(0);
  v66 = swift_dynamicCast();
  v44 = v149;
  if (v66)
  {

LABEL_26:
    goto LABEL_27;
  }

  v153 = (uint64_t)v42;
  v70 = v42;
  v71 = v138;
  v72 = v139;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v137 + 8))(v71, v72);
    goto LABEL_26;
  }

  v75 = a9;
  (*(void (**)(void *, _QWORD, const char *, uint64_t, uint64_t))(*(_QWORD *)a9 + 456))(v42, 0, "execute(_:)", 11, 2);
  v74 = 0;
LABEL_28:
  v76 = *(void **)(v36 + 88);
  v77 = *(void **)(v36 + 96);
  *(_QWORD *)(v36 + 88) = v74;
  *(_QWORD *)(v36 + 96) = 0;
  v78 = *(_BYTE *)(v36 + 104);
  *(_BYTE *)(v36 + 104) = 3;
  v79 = v74;
  sub_23AAAEE10(v76, v77, v78);
  *(_QWORD *)(v36 + 32) = 0;
  *(_BYTE *)(v36 + 40) = 1;
  sub_23AF1A18C();
  v148 = v80;
  v82 = v81;
  v83 = (id)fpfs_current_or_default_log();
  v84 = v135;
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v85 = v44;
  swift_bridgeObjectRetain();
  v86 = v85;
  v87 = sub_23B1C5E40();
  v88 = sub_23B1C6AA0();
  if (os_log_type_enabled(v87, (os_log_type_t)v88))
  {
    v144 = v75;
    LODWORD(v142) = v88;
    v89 = swift_slowAlloc();
    v90 = (_QWORD *)swift_slowAlloc();
    v143 = (_QWORD *)swift_slowAlloc();
    v155[0] = v143;
    *(_DWORD *)v89 = 138413058;
    v91 = v43;
    v92 = objc_msgSend(v86, sel_adopt);
    v153 = (uint64_t)v92;
    v22 = (unint64_t)v154;
    sub_23B1C6CBC();
    v140 = v90;
    *v90 = v92;

    *(_WORD *)(v89 + 12) = 2082;
    swift_bridgeObjectRetain();
    v153 = sub_23AABEC68(v148, v82, (uint64_t *)v155);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v89 + 22) = 2082;
    if (v91)
    {
      v153 = 0x20209286E220;
      v154[0] = 0xA600000000000000;
      swift_bridgeObjectRetain();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v93 = v153;
      v94 = v154[0];
    }
    else
    {
      v93 = 0;
      v94 = 0xE000000000000000;
    }
    v153 = sub_23AABEC68(v93, v94, (uint64_t *)v155);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 32) = 2082;
    v75 = v144;
    v95 = v145 - v133;
    if (!__OFSUB__(v145, v133))
    {
      if ((v95 & 0x8000000000000000) == 0)
      {
        v96 = 0;
        v97 = 0xE000000000000000;
LABEL_38:
        sub_23AF3E770(v95);
        v153 = v96;
        v154[0] = v97;
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v153 = sub_23AABEC68(v153, v154[0], (uint64_t *)v155);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v87, (os_log_type_t)v142, "%@ ‼️  done executing %{public}s%{public}s [duration %{public}s]", (uint8_t *)v89, 0x2Au);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        v99 = v140;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v99, -1, -1);
        v100 = v143;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v100, -1, -1);
        MEMORY[0x23B8614BC](v89, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v135, v152);
        v36 = v150;
        goto LABEL_39;
      }
      v98 = __OFSUB__(0, v95);
      v95 = v133 - v145;
      if (!v98)
      {
        v97 = 0xE100000000000000;
        v96 = 45;
        goto LABEL_38;
      }
      goto LABEL_60;
    }
    goto LABEL_58;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v84, v152);
LABEL_39:
  v101 = v136;
  v153 = (uint64_t)v74;
  v102 = v74;
  v103 = swift_dynamicCast();
  v104 = v146;
  if (!v103)
  {
    sub_23AEBEFD4(v36);
    sub_23AEBF638(v36, (uint64_t)v74, v105, v106);
  }

  sub_23AEC2D5C((_QWORD *)v36, v86, v75, v101);
}

uint64_t sub_23AEC2D5C(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  NSObject *v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  _QWORD *v22;
  uint8_t *v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (id)fpfs_current_or_default_log();
  v13 = sub_23B1C5E58();
  v14 = (*(unsigned __int8 (**)(uint64_t))(*a1 + 392))(v13);
  v15 = a2;
  v16 = sub_23B1C5E40();
  if (os_log_type_enabled(v16, v14))
  {
    v35 = a4;
    v17 = swift_slowAlloc();
    v33 = v8;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v32 = v9;
    v20 = (_QWORD *)v19;
    *(_DWORD *)v18 = 138412290;
    v34 = a3;
    v21 = -[NSObject leave](v15, sel_leave);
    v36 = v21;
    a3 = v34;
    sub_23B1C6CBC();
    *v20 = v21;

    _os_log_impl(&dword_23AA66000, v16, v14, "%@", v18, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    v22 = v20;
    v9 = v32;
    MEMORY[0x23B8614BC](v22, -1, -1);
    v23 = v18;
    v8 = v33;
    MEMORY[0x23B8614BC](v23, -1, -1);
  }
  else
  {

    v16 = v15;
  }

  v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 232))(v24);
  dispatch_group_leave(v25);

  a1[3] = 0;
  v26 = swift_release();
  if (((*(uint64_t (**)(uint64_t))(*a1 + 400))(v26) & 1) == 0)
    goto LABEL_7;
  result = (*(uint64_t (**)(void))(*(_QWORD *)a3 + 192))();
  v28 = *(_QWORD *)(result + 24);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (!v29)
  {
    *(_QWORD *)(result + 24) = v30;
    swift_release();
LABEL_7:
    a1[2] = 0;
    swift_release();
    sub_23B1C6BD8();
    type metadata accessor for Signpost(0);
    return sub_23B1C5DA4();
  }
  __break(1u);
  return result;
}

void sub_23AEC2FF0()
{
  type metadata accessor for FSOrFPJob();
}

uint64_t sub_23AEC3028()
{
  uint64_t v0;

  v0 = sub_23B1C67DC();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v0);
  return sub_23B1C6620();
}

void sub_23AEC307C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  v4 = (void *)MEMORY[0x23B8601A8]();
  sub_23AEC30E0(v3, a2);
  objc_autoreleasePoolPop(v4);
}

uint64_t sub_23AEC30E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  if (a1 < 0)
  {
    v3 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    v4 = *(void (**)(uint64_t))(*(_QWORD *)a2 + 176);
    v5 = swift_retain();
    v4(v5);
    sub_23AEBEFD4(v3);
    swift_release();
  }
  else
  {
    v2 = swift_retain();
    sub_23AEBEFD4(v2);
  }
  return swift_release();
}

void sub_23AEC3178(uint64_t *a1)
{
  uint64_t v1;

  sub_23AEC307C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23AEC3190()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23AEC31B8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AEC31F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Signpost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AEC323C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 88) & ~v2;
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  v4 = v0 + v3;
  v5 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEC3300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Signpost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23AEC3344(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v9 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AEC1CB8(a1, a2, a3, a4, *(_QWORD *)(v4 + 48), *(void **)(v4 + 56), *(_QWORD *)(v4 + 64), *(void **)(v4 + 72), *(_QWORD *)(v4 + 80), v4 + v10, *(_QWORD *)(v4 + v11), *(_QWORD *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AEC33E8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_23AEC33F4(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t sub_23AEC3400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[10];

  v10[5] = a2;
  v10[6] = *(_QWORD *)(*(_QWORD *)v2 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10[2] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10[3] = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10[4] = (char *)v10 - v5;
  v6 = sub_23B1C5BDC();
  v10[8] = *(_QWORD *)(v6 - 8);
  v10[9] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v10[7] = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_getAssociatedTypeWitness();
  result = MEMORY[0x24BDAC7A8](v8);
  if ((*(_BYTE *)(a1 + 130) & 3) != 0)
  {
    v10[1] = result;
    sub_23ABD8CCC(a1, 0);
  }
  return result;
}

unint64_t sub_23AEC3774()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E1FA0;
  if (!qword_2542E1FA0)
  {
    _s3__C4CodeOMa_1(255);
    result = MEMORY[0x23B8613CC](&unk_23B1CCA68, v1);
    atomic_store(result, (unint64_t *)&qword_2542E1FA0);
  }
  return result;
}

uint64_t sub_23AEC37BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AEC37E0()
{
  return sub_23AEC1C5C();
}

uint64_t sub_23AEC3804(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unsigned int v29;
  uint64_t v30;
  void (*v31)(uint64_t *, uint64_t);
  char v32;
  _QWORD *v33;
  void *v34;
  int *v35;
  int *v36;
  id v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  int *v42;
  int *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(uint64_t *, uint64_t);
  unsigned __int8 v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;

  v59 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v53 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v52 = (_QWORD **)((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v57 = (_QWORD **)((char *)&v52 - v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C60EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (_QWORD **)((char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = a2;
  v56 = *(_QWORD *)(a2 + 16);
  v20 = *(void **)(v56 + 64);
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v21 = v20;
  LOBYTE(v20) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    v55 = a4;
    v23 = *(_QWORD *)(a1 + 16);
    v24 = *(_BYTE *)(a1 + 24);
    v25 = *(_QWORD *)(a1 + 128);
    v26 = *(_QWORD *)(a1 + 136);
    v27 = v9;
    sub_23AA907B0(a1 + *(int *)(v9 + 48), (uint64_t)&v15[*(int *)(v13 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    *(_QWORD *)v15 = v23;
    v15[8] = v24;
    *((_QWORD *)v15 + 2) = v25;
    *((_QWORD *)v15 + 3) = v26;
    swift_bridgeObjectRetain_n();
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E1DF0);
    sub_23B1C63E0();
    v28 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v28, sel_fp_isiCloudDriveIdentifier);

    if (v29)
    {
      v30 = v62;
      if (v25 == 0x746E656D75636F44 && v26 == 0xE900000000000073)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v32 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0)
          return 0;
      }
      v33 = v57;
      sub_23AA8EFC8(a1, (uint64_t)v57, (uint64_t *)&unk_2542E6B00);
      v34 = v55;
      if (v55)
      {
        v35 = (int *)v55;
      }
      else
      {
        v36 = (int *)sub_23AAF7AC0(MEMORY[0x24BEE4AF8]);
        v35 = sub_23AA96724(v33, 1, 0, v36);
        swift_bridgeObjectRelease();
      }
      v37 = v34;
      sub_23AA8A05C((uint64_t)v33, (uint64_t *)&unk_2542E6B00);
      v38 = *(_QWORD *)(v56 + 32);
      v39 = *(_BYTE *)(a1 + 24);
      v60 = *(_QWORD *)(a1 + 16);
      v61 = v39;
      v31 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)v38 + 240);
      swift_retain();
      v40 = (uint64_t)v58;
      v31(&v60, 1);
      if (v30)
      {

        swift_release();
        return (uint64_t)v31;
      }
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v40, 1, v27) == 1)
      {

        sub_23AA8A05C(v40, (uint64_t *)&unk_2542E4750);
        return 0;
      }
      v41 = v52;
      sub_23AEC6300(v40, (uint64_t)v52);
      v42 = (int *)sub_23AAF7AC0(MEMORY[0x24BEE4AF8]);
      v43 = sub_23AA96724(v41, 1, 0, v42);
      swift_bridgeObjectRelease();
      v44 = sub_23ADAB49C();
      v45 = sub_23B1C63E0();
      v47 = v46;
      if (v45 == sub_23B1C63E0() && v47 == v48)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v49 = sub_23B1C7388();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v49 & 1) == 0)
        {
          sub_23AA8A05C((uint64_t)v41, (uint64_t *)&unk_2542E6B00);

          return 0;
        }
      }
      sub_23AA859B8(v43, 1);
      v50 = (void (*)(uint64_t *, uint64_t))objc_msgSend((id)objc_opt_self(), sel_appLibraryFromContainerItem_documentsItem_, v43, v35);
      v31 = v50;
      if (!v50)
      {
        sub_23AA8A05C((uint64_t)v41, (uint64_t *)&unk_2542E6B00);

        return (uint64_t)v31;
      }
      v51 = objc_msgSend(v50, sel_isValidAppLibrary);

      sub_23AA8A05C((uint64_t)v41, (uint64_t *)&unk_2542E6B00);
      if ((v51 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return (uint64_t)v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AEC3D90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unsigned int v29;
  uint64_t v30;
  void (*v31)(uint64_t *, uint64_t);
  char v32;
  void *v33;
  char *v34;
  int *v35;
  id v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  int *v41;
  int *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  void (*v49)(uint64_t *, uint64_t);
  unsigned __int8 v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;

  v56 = a4;
  v58 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (_QWORD **)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C60EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (_QWORD **)((char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(_QWORD *)(a2 + 16);
  v54 = a2;
  v55 = v20;
  v21 = *(void **)(v20 + 64);
  *v19 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5610], v16);
  v22 = v21;
  LOBYTE(v21) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v21 & 1) != 0)
  {
    v24 = *(_QWORD *)(a1 + 16);
    v25 = *(_BYTE *)(a1 + 24);
    v27 = *(_QWORD *)(a1 + 32);
    v26 = *(_QWORD *)(a1 + 40);
    sub_23AA907B0(a1 + *(int *)(v10 + 28), (uint64_t)&v15[*(int *)(v13 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    *(_QWORD *)v15 = v24;
    v15[8] = v25;
    *((_QWORD *)v15 + 2) = v27;
    *((_QWORD *)v15 + 3) = v26;
    swift_bridgeObjectRetain_n();
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E1DF0);
    sub_23B1C63E0();
    v28 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v28, sel_fp_isiCloudDriveIdentifier);

    if (v29)
    {
      v30 = v61;
      if (v27 == 0x746E656D75636F44 && v26 == 0xE900000000000073)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v32 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0)
          return 0;
      }
      sub_23AA907B0(a1, (uint64_t)v12, type metadata accessor for VFSItem);
      v33 = v56;
      if (v56)
      {
        v34 = (char *)v56;
      }
      else
      {
        v35 = (int *)sub_23AAF7AC0(MEMORY[0x24BEE4AF8]);
        v34 = sub_23AA801CC((uint64_t)v12, 1, 0, v35);
        swift_bridgeObjectRelease();
      }
      v36 = v33;
      sub_23AA937BC((uint64_t)v12, type metadata accessor for VFSItem);
      v37 = *(_QWORD *)(v55 + 32);
      v38 = *(_BYTE *)(a1 + 24);
      v59 = *(_QWORD *)(a1 + 16);
      v60 = v38;
      v31 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)v37 + 240);
      swift_retain();
      v39 = (uint64_t)v57;
      v31(&v59, 1);
      if (v30)
      {

        swift_release();
        return (uint64_t)v31;
      }
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v39, 1, v53) == 1)
      {

        sub_23AA8A05C(v39, (uint64_t *)&unk_2542E4750);
        return 0;
      }
      v40 = v51;
      sub_23AEC6300(v39, (uint64_t)v51);
      v41 = (int *)sub_23AAF7AC0(MEMORY[0x24BEE4AF8]);
      v42 = sub_23AA96724(v40, 1, 0, v41);
      swift_bridgeObjectRelease();
      v43 = sub_23ADAB49C();
      v44 = sub_23B1C63E0();
      v46 = v45;
      if (v44 == sub_23B1C63E0() && v46 == v47)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v48 = sub_23B1C7388();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0)
        {
          sub_23AA8A05C((uint64_t)v40, (uint64_t *)&unk_2542E6B00);

          return 0;
        }
      }
      sub_23AA859B8(v42, 1);
      v49 = (void (*)(uint64_t *, uint64_t))objc_msgSend((id)objc_opt_self(), sel_appLibraryFromContainerItem_documentsItem_, v42, v34);
      v31 = v49;
      if (!v49)
      {
        sub_23AA8A05C((uint64_t)v40, (uint64_t *)&unk_2542E6B00);

        return (uint64_t)v31;
      }
      v50 = objc_msgSend(v49, sel_isValidAppLibrary);

      sub_23AA8A05C((uint64_t)v40, (uint64_t *)&unk_2542E6B00);
      if ((v50 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return (uint64_t)v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AEC431C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
    sub_23B05222C(v3);
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_23B1C671C();
      return v10;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

void sub_23AEC43FC(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  int *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *Strong;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a3;
  v37 = a4;
  v39 = a2;
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  MEMORY[0x24BDAC7A8](v38);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2358);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(int *)(v11 + 48);
  v15 = (uint64_t)&v13[v14];
  v16 = a1 + v14;
  v17 = *(_QWORD *)a1;
  v18 = *(unsigned __int8 *)(a1 + 8);
  v35 = v17;
  *(_QWORD *)v13 = v17;
  v13[8] = v18;
  sub_23AA8EFC8(v16, v15, (uint64_t *)&unk_2542E6B00);
  sub_23AA8A05C(v15, (uint64_t *)&unk_2542E6B00);
  v19 = (uint64_t)&v13[*(int *)(v10 + 48)];
  sub_23AA8EFC8(v16, v19, (uint64_t *)&unk_2542E6B00);
  sub_23AEC6300(v19, (uint64_t)v9);
  v20 = *((_QWORD *)v9 + 2);
  LOBYTE(v16) = v9[24];
  v21 = *((_QWORD *)v9 + 16);
  v22 = *((_QWORD *)v9 + 17);
  sub_23AA907B0((uint64_t)&v9[*(int *)(v7 + 48)], (uint64_t)&v6[*(int *)(v38 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *(_QWORD *)v6 = v20;
  v6[8] = v16;
  *((_QWORD *)v6 + 2) = v21;
  *((_QWORD *)v6 + 3) = v22;
  swift_bridgeObjectRetain_n();
  sub_23AA8A05C((uint64_t)v6, (uint64_t *)&unk_2542E1DF0);
  if (v21 == 0x746E656D75636F44 && v22 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      v25 = (int *)sub_23AAF7AC0(MEMORY[0x24BEE4AF8]);
      v26 = v39;
      v27 = sub_23AA96724(v9, 1, 0, v25);
      swift_bridgeObjectRelease();
      v28 = v40;
      v29 = sub_23AEC5500(v27, v26, v35, v18, v36);
      goto LABEL_10;
    }
  }
  v30 = v39;
  type metadata accessor for FPFileTree();
  swift_dynamicCastClassUnconditional();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  swift_retain();
  v32 = objc_msgSend(Strong, sel_provider);

  if (!v32)
  {
    sub_23B1C704C();
    __break(1u);
    return;
  }
  swift_release();
  v27 = (int *)objc_msgSend(v32, sel_identifier);

  v28 = v40;
  v29 = sub_23AEC3804((uint64_t)v9, v30, (uint64_t)v27, 0);
LABEL_10:
  v33 = v29;
  sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E6B00);

  if (!v28)
    *v37 = v33;
}

uint64_t sub_23AEC479C(void *a1, char a2, void *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  os_log_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v52 - v15;
  if ((a2 & 1) != 0)
  {
    v26 = a1;
    v27 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AAB5380(a1);
    v28 = a3;
    sub_23AA93780(a4);
    sub_23AAB5380(a1);
    v29 = v28;
    sub_23AA93780(a4);
    v30 = sub_23B1C5E40();
    v31 = sub_23B1C6AA0();
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v56 = a5;
      v34 = v33;
      v35 = (_QWORD *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v58 = (uint64_t)v29;
      v59 = v54;
      *(_DWORD *)v34 = 138412802;
      v57 = v11;
      v53 = v32;
      v52 = v30;
      v36 = v29;
      v55 = v10;
      v37 = v36;
      sub_23B1C6CBC();
      *v35 = v29;

      *(_WORD *)(v34 + 12) = 2112;
      v38 = a1;
      v39 = _swift_stdlib_bridgeErrorToNSError();
      v58 = v39;
      sub_23B1C6CBC();
      v35[1] = v39;
      sub_23AAB538C(a1);
      sub_23AAB538C(a1);
      *(_WORD *)(v34 + 22) = 2082;
      sub_23AA93780(a4);
      sub_23AE5BC48(a4);
      v41 = v40;
      v43 = v42;
      sub_23AC03BE4(a4);
      v58 = sub_23AABEC68(v41, v43, &v59);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AC03BE4(a4);
      sub_23AC03BE4(a4);
      v44 = v52;
      _os_log_impl(&dword_23AA66000, v52, (os_log_type_t)v53, "[patchAppLibrary] Error while trying to find the container for: %@, error: %@ (request: %{public}s)", (uint8_t *)v34, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v35, -1, -1);
      v45 = v54;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v45, -1, -1);
      MEMORY[0x23B8614BC](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v16, v55);
    }
    else
    {

      sub_23AAB538C(a1);
      sub_23AAB538C(a1);
      sub_23AC03BE4(a4);
      sub_23AC03BE4(a4);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
    v59 = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE718);
    return sub_23B1C683C();
  }
  else
  {
    v57 = v11;
    v17 = a1;
    v18 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AAB5380(a1);
    sub_23AA93780(a4);
    sub_23AAB5380(a1);
    sub_23AA93780(a4);
    v19 = sub_23B1C5E40();
    v20 = sub_23B1C6A94();
    if (os_log_type_enabled(v19, v20))
    {
      v56 = a5;
      v21 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v59 = v54;
      *(_DWORD *)v21 = 136446466;
      v55 = v10;
      if (a1)
      {
        v22 = objc_msgSend(v17, sel_description);
        v23 = sub_23B1C63E0();
        v25 = v24;

      }
      else
      {
        v25 = 0xE500000000000000;
        v23 = 0x3E6C696E3CLL;
      }
      v58 = sub_23AABEC68(v23, v25, &v59);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AAB538C(a1);
      sub_23AAB538C(a1);
      *(_WORD *)(v21 + 12) = 2082;
      sub_23AA93780(a4);
      sub_23AE5BC48(a4);
      v48 = v47;
      v50 = v49;
      sub_23AC03BE4(a4);
      v58 = sub_23AABEC68(v48, v50, &v59);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AC03BE4(a4);
      sub_23AC03BE4(a4);
      _os_log_impl(&dword_23AA66000, v19, v20, "[pathAppLibrary] Found possible container %{public}s (request: %{public}s)", (uint8_t *)v21, 0x16u);
      v51 = v54;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v51, -1, -1);
      MEMORY[0x23B8614BC](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v55);
    }
    else
    {
      sub_23AAB538C(a1);
      sub_23AAB538C(a1);
      sub_23AC03BE4(a4);
      sub_23AC03BE4(a4);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v10);
    }
    v59 = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE718);
    return sub_23B1C6848();
  }
}

id sub_23AEC4DA4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  int v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id result;
  uint64_t v34;
  void *Strong;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v42 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v8 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v39 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unsigned __int8 *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C60EC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = a3;
  v17 = *(void **)(*(_QWORD *)(a3 + 16) + 64);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v18 = v17;
  LOBYTE(v17) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v19 = a1;
    sub_23AAA3120((uint64_t)v12);
    v20 = *v12;
    sub_23AA937BC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);

    if (v20 != 1)
      return v19;
    v21 = objc_msgSend(v19, sel_containerDisplayName);
    if (v21)
    {
      v22 = v21;
      sub_23B1C63E0();

    }
    v23 = sub_23B1C64AC();
    swift_bridgeObjectRelease();
    if (v23 < 1)
      return v19;
    v24 = objc_msgSend(v19, sel_filename);
    v25 = sub_23B1C63E0();
    v27 = v26;

    v47 = v25;
    v48 = v27;
    v45 = 58;
    v46 = 0xE100000000000000;
    v43 = 47;
    v44 = 0xE100000000000000;
    sub_23AAA420C();
    v28 = sub_23B1C6CF8();
    v30 = v29;
    swift_bridgeObjectRelease();
    if (v28 == 0x746E656D75636F44 && v30 == 0xE900000000000073)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
        return v19;
    }
    sub_23AA8EFC8(v42, (uint64_t)v7, (uint64_t *)&unk_2542E4750);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v41) == 1)
    {
      sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E4750);
      return v19;
    }
    v34 = v39;
    sub_23AEC6300((uint64_t)v7, v39);
    type metadata accessor for FPFileTree();
    swift_dynamicCastClassUnconditional();
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    swift_retain();
    v36 = objc_msgSend(Strong, sel_provider);

    if (v36)
    {
      swift_release();
      v37 = objc_msgSend(v36, sel_identifier);

      v38 = v49;
      v32 = sub_23AEC3804(v34, v40, (uint64_t)v37, v19);
      sub_23AA8A05C(v34, (uint64_t *)&unk_2542E6B00);

      if (v38 || v32)
        return (id)v32;
      return v19;
    }
  }
  else
  {
    __break(1u);
  }
  result = (id)sub_23B1C704C();
  __break(1u);
  return result;
}

