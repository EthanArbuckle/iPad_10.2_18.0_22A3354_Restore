id sub_23B0BC2DC()
{
  return sub_23B0BECD4((uint64_t (*)(_QWORD))type metadata accessor for DummyObserver);
}

uint64_t type metadata accessor for DummyObserver()
{
  return objc_opt_self();
}

id sub_23B0BC3D4()
{
  return sub_23B0BECD4((uint64_t (*)(_QWORD))type metadata accessor for LifetimeExtender);
}

uint64_t type metadata accessor for LifetimeExtender()
{
  return objc_opt_self();
}

uint64_t sub_23B0BC41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v6 = v5;
  v12 = sub_23B1C602C();
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C60A4();
  v23 = *(_QWORD *)(v15 - 8);
  v24 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend(v6, sel_queue);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v6;
  v19[3] = a4;
  v19[4] = a5;
  v19[5] = a1;
  v19[6] = a2;
  v19[7] = a3;
  aBlock[4] = sub_23B0BF05C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698FC;
  aBlock[3] = &block_descriptor_8_0;
  v20 = _Block_copy(aBlock);
  v21 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23B1C6068();
  v26 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AA81D34();
  sub_23B1C6DE8();
  MEMORY[0x23B85F470](0, v17, v14, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v24);
  return swift_release();
}

void sub_23B0BC63C(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v8;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[6];

  v8 = *(void **)(a1 + OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer);
  if (v8)
  {
    sub_23AA9F52C(0, &qword_2542E7560);
    v10 = v8;
    v11 = (void *)sub_23B1C66F8();
    sub_23AA9F52C(0, (unint64_t *)&unk_2542E2010);
    v12 = (void *)sub_23B1C66F8();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a3;
    v15[4] = sub_23AA698DC;
    v15[5] = v13;
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 1107296256;
    v15[2] = sub_23AC46D44;
    v15[3] = &block_descriptor_14_1;
    v14 = _Block_copy(v15);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_indexOutOfBandUpdatedItems_deletedItems_indexReason_completionHandler_, v11, v12, a6, v14);
    _Block_release(v14);

  }
  else
  {
    a2(0);
  }
}

uint64_t sub_23B0BC7A4(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  void *v6;
  _QWORD v8[6];

  v8[4] = nullsub_1;
  v8[5] = 0;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_23B1B35CC;
  v8[3] = &block_descriptor_117;
  v6 = _Block_copy(v8);
  objc_msgSend(a2, sel_signalChangesWithCompletionHandler_, v6);
  _Block_release(v6);
  return a3(a1);
}

void sub_23B0BC8B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  NSObject *v22;
  _BOOL4 v23;
  _DWORD *v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  os_log_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  void *v77;
  _DWORD *v78;
  os_log_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  id v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t aBlock[8];

  v91 = a8;
  v89 = a7;
  v93 = a5;
  v94 = type metadata accessor for ChangeEnumeratorAnchor();
  v13 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v87 = v14;
  v88 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0);
  MEMORY[0x24BDAC7A8](v15);
  v86 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5E4C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v22 = sub_23B1C5E40();
  v84 = sub_23B1C6A88();
  v23 = os_log_type_enabled(v22, (os_log_type_t)v84);
  v92 = a6;
  v85 = a3;
  if (v23)
  {
    v82 = v13;
    v79 = v22;
    v80 = v20;
    v83 = a4;
    v24 = (_DWORD *)swift_slowAlloc();
    v25 = (void *)swift_slowAlloc();
    aBlock[0] = (uint64_t)v25;
    v78 = v24;
    *v24 = 136315650;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_23B1C7088();
      v26 = a1;
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = a1;
      v27 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v28 = MEMORY[0x24BEE4AF8];
    v81 = a2;
    v77 = v25;
    if (v27)
    {
      v95 = MEMORY[0x24BEE4AF8];
      sub_23ADACE00(0, v27 & ~(v27 >> 63), 0);
      if (v27 < 0)
      {
        __break(1u);
        v75 = v25;
        sub_23AFF4740((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/fpfs/enumerators/ChangeEnumerator.swift", 102, 2, 39, v25);
      }
      v29 = 0;
      v28 = v95;
      v30 = v26;
      v31 = v26 & 0xC000000000000001;
      v32 = v17;
      v33 = v18;
      do
      {
        if (v31)
          v34 = (id)MEMORY[0x23B85F860](v29, v30);
        else
          v34 = *(id *)(v30 + 8 * v29 + 32);
        v35 = v34;
        v36 = objc_msgSend(v34, sel_itemID);
        v37 = objc_msgSend(v36, sel_identifier);

        v95 = v28;
        v39 = *(_QWORD *)(v28 + 16);
        v38 = *(_QWORD *)(v28 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_23ADACE00(v38 > 1, v39 + 1, 1);
          v28 = v95;
        }
        ++v29;
        *(_QWORD *)(v28 + 16) = v39 + 1;
        *(_QWORD *)(v28 + 8 * v39 + 32) = v37;
      }
      while (v27 != v29);
      v17 = v32;
      v18 = v33;
      v13 = v82;
    }
    else
    {
      v13 = v82;
    }
    v41 = v78;
    type metadata accessor for NSFileProviderItemIdentifier(0);
    v43 = MEMORY[0x23B85F02C](v28, v42);
    v45 = v44;
    swift_bridgeObjectRelease();
    v95 = sub_23AABEC68(v43, v45, aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v41 + 6) = 2080;
    v46 = sub_23AA9F52C(0, (unint64_t *)&unk_2542E2010);
    v47 = swift_bridgeObjectRetain();
    v48 = MEMORY[0x23B85F02C](v47, v46);
    v50 = v49;
    swift_bridgeObjectRelease();
    v95 = sub_23AABEC68(v48, v50, aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v41 + 11) = 1024;
    LODWORD(v95) = v93 & 1;
    sub_23B1C6CBC();
    v51 = v79;
    _os_log_impl(&dword_23AA66000, v79, (os_log_type_t)v84, "🧲  pushing batch: updating=%s, deleting=%s hasMore=%{BOOL}d", (uint8_t *)v41, 0x1Cu);
    v52 = v77;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v52, -1, -1);
    MEMORY[0x23B8614BC](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v80, v17);
    v40 = (uint64_t)v88;
    a4 = v83;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v40 = (uint64_t)v88;
  }
  v53 = v86;
  sub_23AA8EFC8(v85, v86, &qword_2542E13E0);
  v54 = v13;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v53, 1, v94) == 1)
  {
    sub_23AA8A05C(v53, &qword_2542E13E0);
    v55 = 0;
  }
  else
  {
    v56 = a4;
    sub_23B1C57B0();
    swift_allocObject();
    sub_23B1C57A4();
    sub_23B1C578C();
    sub_23AA7E38C((unint64_t *)&unk_2542E13B0, (uint64_t (*)(uint64_t))type metadata accessor for ChangeEnumeratorAnchor, (uint64_t)&unk_23B1DB6B0);
    v57 = sub_23B1C5798();
    v59 = v58;
    swift_release();
    sub_23AEB6C50(v53);
    v55 = (void *)sub_23B1C5AA4();
    sub_23AAAE53C(v57, v59);
    a4 = v56;
  }
  sub_23B1C57B0();
  swift_allocObject();
  sub_23B1C57A4();
  sub_23B1C578C();
  sub_23AA7E38C((unint64_t *)&unk_2542E13B0, (uint64_t (*)(uint64_t))type metadata accessor for ChangeEnumeratorAnchor, (uint64_t)&unk_23B1DB6B0);
  v60 = sub_23B1C5798();
  v61 = a4;
  v63 = v62;
  swift_release();
  v64 = (void *)sub_23B1C5AA4();
  sub_23AAAE53C(v60, v63);
  sub_23AA9F52C(0, &qword_2542E7560);
  v65 = (void *)sub_23B1C66F8();
  sub_23AA9F52C(0, (unint64_t *)&unk_2542E2010);
  v66 = (void *)sub_23B1C66F8();
  sub_23AEB6C0C(v61, v40);
  v67 = *(unsigned __int8 *)(v54 + 80);
  v68 = v40;
  v69 = (v67 + 41) & ~v67;
  v70 = swift_allocObject();
  v71 = v89;
  v72 = v90;
  *(_QWORD *)(v70 + 16) = v90;
  *(_QWORD *)(v70 + 24) = v71;
  *(_QWORD *)(v70 + 32) = v91;
  *(_BYTE *)(v70 + 40) = v93 & 1;
  sub_23B0BEF4C(v68, v70 + v69);
  aBlock[4] = (uint64_t)sub_23B0BEF90;
  aBlock[5] = v70;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23AC46D44;
  aBlock[3] = (uint64_t)&block_descriptor_38;
  v73 = _Block_copy(aBlock);
  v74 = v72;
  swift_retain();
  swift_release();
  objc_msgSend(v92, sel_indexOneBatchFromAnchor_toAnchor_updatedItems_deletedItems_completionHandler_, v55, v64, v65, v66, v73);
  _Block_release(v73);

}

void sub_23B0BD0B8(void *a1, void *a2, void (*a3)(uint64_t, void *, uint64_t), uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  _QWORD *v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  _BYTE v53[4];
  int v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void (*v61)(uint64_t, void *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[3];

  v60 = a6;
  v61 = a3;
  LODWORD(v6) = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ChangeEnumeratorAnchor();
  v57 = *(_QWORD *)(v13 - 8);
  v58 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = &v53[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v22 = &v53[-v21];
  v59 = a2;
  v23 = objc_msgSend(a2, sel_domain);
  v62 = v17;
  v63 = v16;
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v23, sel_log);

  }
  else
  {
    v25 = 0;
  }
  v26 = (id)fpfs_adopt_log();

  if (a1)
  {
    _s3__C4CodeOMa_0(0);
    v66[0] = -1006;
    v27 = a1;
    sub_23AA7E38C(qword_2569E8290, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_23B1CE148);
    if ((sub_23B1C575C() & 1) != 0)
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 1, 1, v28);
      v29 = (uint64_t)v59 + OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor;
      swift_beginAccess();
      sub_23B0BEFD8((uint64_t)v12, v29);
      swift_endAccess();
    }
    v30 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v31 = a1;
    v32 = sub_23B1C5E40();
    v33 = sub_23B1C6AA0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v56 = a4;
      v35 = (uint8_t *)v34;
      v36 = (_QWORD *)swift_slowAlloc();
      v55 = v26;
      *(_DWORD *)v35 = 138412290;
      swift_getErrorValue();
      v37 = sub_23B0D9CF0(v64);
      v66[0] = (uint64_t)v37;
      v26 = v55;
      sub_23B1C6CBC();
      *v36 = v37;

      _os_log_impl(&dword_23AA66000, v32, v33, "🧲  indexing failed: %@", v35, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v36, -1, -1);
      MEMORY[0x23B8614BC](v35, -1, -1);
    }
    else
    {

    }
    v48 = v63;

    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v20, v48);
    v49 = a1;
    v61(v6 & 1, a1, 10);

  }
  else
  {
    v38 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AEB6C0C(v60, (uint64_t)v15);
    v39 = sub_23B1C5E40();
    v40 = sub_23B1C6A88();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v55 = v26;
      v42 = (uint8_t *)v41;
      v43 = swift_slowAlloc();
      v54 = v6;
      v6 = v43;
      v66[0] = v43;
      *(_DWORD *)v42 = 136315138;
      v56 = a4;
      v44 = sub_23AEB61C8();
      v65 = sub_23AABEC68(v44, v45, v66);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AEB6C50((uint64_t)v15);
      _os_log_impl(&dword_23AA66000, v39, v40, "🧲  batch indexation succeeded for anchor %s", v42, 0xCu);
      swift_arrayDestroy();
      v46 = v6;
      LOBYTE(v6) = v54;
      MEMORY[0x23B8614BC](v46, -1, -1);
      v47 = v42;
      v26 = v55;
      MEMORY[0x23B8614BC](v47, -1, -1);
    }
    else
    {
      sub_23AEB6C50((uint64_t)v15);
    }

    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v22, v63);
    sub_23AEB6C0C(v60, (uint64_t)v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v12, 0, 1, v58);
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v12, 0, 1, v50);
    v51 = (uint64_t)v59 + OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor;
    swift_beginAccess();
    sub_23B0BEFD8((uint64_t)v12, v51);
    swift_endAccess();
    v61(v6 & 1, 0, 0);
  }
  v52 = (id)fpfs_adopt_log();

}

void sub_23B0BD68C(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14 = a1;
    a2(a1);

  }
  else
  {
    v15 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v16 = sub_23B1C5E40();
    v17 = sub_23B1C6AA0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23AA66000, v16, v17, "🧲  restarting indexing from scratch", v18, 2u);
      MEMORY[0x23B8614BC](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v19 = type metadata accessor for ChangeEnumeratorAnchor();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
    v21 = a4 + OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor;
    swift_beginAccess();
    sub_23B0BEFD8((uint64_t)v9, v21);
    swift_endAccess();
    a2(0);
  }
}

uint64_t sub_23B0BD8A4(uint64_t a1, unint64_t a2, void *a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v30;
  void (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21A8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v30 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v30 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (void **)((char *)&v30 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (uint64_t *)((char *)&v30 - v22);
  if (a3)
  {
    *v12 = a3;
    swift_storeEnumTagMultiPayload();
    v24 = a3;
    v23 = v12;
  }
  else
  {
    if (a2 >> 60 == 15)
    {
      v25 = type metadata accessor for ChangeEnumeratorAnchor();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v15, 1, 1, v25);
    }
    else
    {
      v31 = a4;
      sub_23B1C5780();
      swift_allocObject();
      sub_23AAAE668(a1, a2);
      sub_23B1C5774();
      v26 = type metadata accessor for ChangeEnumeratorAnchor();
      sub_23AA7E38C((unint64_t *)&unk_2542E13C0, (uint64_t (*)(uint64_t))type metadata accessor for ChangeEnumeratorAnchor, (uint64_t)&unk_23B1DB6D8);
      sub_23B1C5768();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 0, 1, v26);
      swift_release();
      sub_23AAA3E18(a1, a2);
      a4 = v31;
    }
    swift_storeEnumTagMultiPayload();
    sub_23AA724E8((uint64_t)v15, (uint64_t)v18, &qword_2542E21A8);
    sub_23AA724E8((uint64_t)v18, (uint64_t)v21, &qword_2542E21A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = *v21;
      type metadata accessor for NSFileProviderError(0);
      v33 = -1002;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
      sub_23B1C5864();
      v28 = v34;

      *v23 = v28;
    }
    else
    {
      sub_23AA724E8((uint64_t)v21, (uint64_t)v23, &qword_2542E13E0);
    }
    swift_storeEnumTagMultiPayload();
  }
  a4(v23);
  return sub_23AA8A05C((uint64_t)v23, &qword_2542E21A8);
}

uint64_t sub_23B0BDBEC(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_23B1C5AD4();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_23AAA3E18((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_23B0BDC80(char a1, void *a2, uint64_t a3, uint64_t (*a4)(_QWORD, void *), uint64_t a5, void *a6, void *a7)
{
  id v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  _QWORD v22[6];

  if (!a2)
    return a4(a1 & 1, a2);
  _s3__C4CodeOMa_1(0);
  v22[0] = -1002;
  v14 = a2;
  sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
  v15 = sub_23B1C575C();

  if ((v15 & 1) == 0)
    return a4(a1 & 1, a2);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a2;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_23B0C1350;
  v17[3] = v16;
  v17[4] = a6;
  v22[4] = sub_23B0C1354;
  v22[5] = v17;
  v22[0] = MEMORY[0x24BDAC760];
  v22[1] = 1107296256;
  v22[2] = sub_23AC46D44;
  v22[3] = &block_descriptor_105_1;
  v18 = _Block_copy(v22);
  v19 = a2;
  swift_retain();
  swift_retain();
  v20 = a6;
  swift_release();
  objc_msgSend(a7, sel_dropIndexWithDropReason_completionHandler_, a3, v18);
  _Block_release(v18);
  return swift_release();
}

void sub_23B0BDE2C(id a1, void (*a2)(uint64_t, id), int a3, id a4)
{
  id v6;
  id v8;
  id v9;

  v6 = a1;
  if (!a1)
  {
    v8 = a4;
    v6 = a4;
  }
  v9 = a1;
  a2(1, v6);

}

void sub_23B0BDE90(uint64_t a1, void *a2, void (*a3)(_QWORD, id, uint64_t), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  void *v54;
  void (*v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t Strong;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  _QWORD *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  void (*v96)(_QWORD, id, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v93 = a5;
  v94 = a6;
  v96 = a3;
  v97 = a4;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C8);
  MEMORY[0x24BDAC7A8](v86);
  v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5E4C();
  v88 = *(_QWORD *)(v10 - 8);
  v89 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0);
  v90 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v90 + 64);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v87 = (uint64_t)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v95 = (uint64_t)&v83 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v91 = (uint64_t)&v83 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v83 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v83 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v98 = (uint64_t)&v83 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21A8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (id *)((char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = a2;
  v30 = objc_msgSend(a2, sel_domain);
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, sel_log);

  }
  else
  {
    v32 = 0;
  }
  v33 = (id)fpfs_adopt_log();

  sub_23AA8EFC8(a1, (uint64_t)v29, &qword_2542E21A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v34 = *v29;
    v35 = *v29;
    v96(0, v34, 7);

LABEL_17:
    v82 = (id)fpfs_adopt_log();

    return;
  }
  v85 = v33;
  v36 = v98;
  sub_23AA724E8((uint64_t)v29, v98, &qword_2542E13E0);
  v37 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA8EFC8(v36, (uint64_t)v25, &qword_2542E13E0);
  v38 = sub_23B1C5E40();
  v39 = sub_23B1C6A88();
  v40 = os_log_type_enabled(v38, v39);
  v84 = v9;
  if (v40)
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v83 = swift_slowAlloc();
    v100 = v83;
    *(_DWORD *)v41 = 136315138;
    sub_23AA8EFC8((uint64_t)v25, (uint64_t)v22, &qword_2542E13E0);
    v42 = type metadata accessor for ChangeEnumeratorAnchor();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v22, 1, v42) == 1)
    {
      sub_23AA8A05C((uint64_t)v22, &qword_2542E13E0);
      v43 = 0xE500000000000000;
      v44 = 0x3E6C696E3CLL;
    }
    else
    {
      v44 = sub_23AEB61C8();
      v43 = v46;
      sub_23AEB6C50((uint64_t)v22);
    }
    v99 = sub_23AABEC68(v44, v43, &v100);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v25, &qword_2542E13E0);
    _os_log_impl(&dword_23AA66000, v38, v39, "🧲  indexing from %s", v41, 0xCu);
    v47 = v83;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v47, -1, -1);
    MEMORY[0x23B8614BC](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v88 + 8))(v12, v89);
    v45 = v95;
    v36 = v98;
  }
  else
  {
    sub_23AA8A05C((uint64_t)v25, &qword_2542E13E0);

    (*(void (**)(char *, uint64_t))(v88 + 8))(v12, v89);
    v45 = v95;
  }
  v48 = v91;
  sub_23AA8EFC8(v36, v91, &qword_2542E13E0);
  sub_23AA8EFC8(v48, v45, &qword_2542E13E0);
  v49 = *(unsigned __int8 *)(v90 + 80);
  v50 = (v49 + 40) & ~v49;
  v51 = v14 + 7;
  v52 = (v14 + 7 + v50) & 0xFFFFFFFFFFFFFFF8;
  v53 = (_QWORD *)swift_allocObject();
  v54 = v92;
  v55 = (void (*)(_QWORD, _QWORD, _QWORD))v96;
  v56 = v97;
  v53[2] = v92;
  v53[3] = v55;
  v53[4] = v56;
  sub_23AA724E8(v48, (uint64_t)v53 + v50, &qword_2542E13E0);
  v57 = v93;
  v58 = v94;
  *(_QWORD *)((char *)v53 + v52) = v94;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v96 = *(void (**)(_QWORD, id, uint64_t))(Strong + 16);
    v60 = Strong;
    v91 = Strong;
    v61 = v87;
    sub_23AA8EFC8(v98, v87, &qword_2542E13E0);
    v62 = (v49 + 24) & ~v49;
    v63 = (v51 + v62) & 0xFFFFFFFFFFFFFFF8;
    v64 = (v63 + 23) & 0xFFFFFFFFFFFFFFF8;
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = v60;
    sub_23AA724E8(v61, v65 + v62, &qword_2542E13E0);
    v66 = (_QWORD *)(v65 + v63);
    *v66 = sub_23B0C0FF0;
    v66[1] = v53;
    *(_QWORD *)(v65 + v64) = 200;
    *(_QWORD *)(v65 + ((v64 + 15) & 0xFFFFFFFFFFFFFFF8)) = v57;
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = sub_23B0C0FF0;
    *(_QWORD *)(v67 + 24) = v53;
    v68 = v54;
    swift_retain_n();
    v69 = v94;
    v70 = v94;
    swift_retain_n();
    v71 = v68;
    v72 = v70;
    swift_retain();
    swift_retain();
    sub_23ADF3D40((uint64_t)"enumerateChanges(fromAnchor:suggestedBatchSize:reply:)", 54, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23B0C13A8, v67, (uint64_t)sub_23B0C0FF8, v65);
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v73 = v95;
    v74 = v98;
    v75 = v69;
LABEL_16:
    sub_23AA8A05C(v73, &qword_2542E13E0);

    sub_23AA8A05C(v74, &qword_2542E13E0);
    v33 = v85;
    goto LABEL_17;
  }
  v76 = v54;
  swift_retain_n();
  v77 = v58;
  v78 = v76;
  v79 = v77;
  v80 = (id)FPDomainUnavailableError();
  if (v80)
  {
    v75 = v58;
    v81 = (uint64_t)v84;
    *v84 = v80;
    swift_storeEnumTagMultiPayload();
    v73 = v95;
    sub_23B0BE648(v81, v78, (void (*)(_QWORD, _QWORD, _QWORD))v96, v56, v95, v79);
    sub_23AA8A05C(v81, &qword_2542E21C8);
    swift_release();

    swift_release();
    v74 = v98;
    goto LABEL_16;
  }
  swift_release();

  sub_23AA8A05C(v95, &qword_2542E13E0);
  __break(1u);
}

void sub_23B0BE648(uint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD, _QWORD), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  int EnumCaseMultiPayload;
  unint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  id v38;
  void *v39;
  id v40;
  unsigned __int8 v41;
  id v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  void (*v49)(_QWORD, _QWORD, _QWORD);
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v50 = a5;
  v11 = type metadata accessor for ChangeEnumeratorAnchor();
  MEMORY[0x24BDAC7A8](v11);
  v54 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C5E4C();
  v52 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a2;
  v19 = objc_msgSend(a2, sel_domain);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, sel_log);

  }
  else
  {
    v21 = 0;
  }
  v22 = (id)fpfs_adopt_log();

  sub_23AA8EFC8(a1, (uint64_t)v18, &qword_2542E21C8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v24 = *(_QWORD *)v18;
  if (EnumCaseMultiPayload == 1)
  {
    v53 = v22;
    v25 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v26 = (id)v24;
    v27 = sub_23B1C5E40();
    v28 = sub_23B1C6AA0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v54 = v13;
      v31 = (_QWORD *)v30;
      v49 = a3;
      *(_DWORD *)v29 = 138412290;
      swift_getErrorValue();
      v32 = sub_23B0D9CF0(v55);
      v57 = (uint64_t)v32;
      a3 = v49;
      sub_23B1C6CBC();
      *v31 = v32;

      _os_log_impl(&dword_23AA66000, v27, v28, "🧲  enumeration error: %@", v29, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      v33 = v31;
      v13 = v54;
      MEMORY[0x23B8614BC](v33, -1, -1);
      MEMORY[0x23B8614BC](v29, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v13);
    v44 = (id)v24;
    a3(0, v24, 9);

    v22 = v53;
    goto LABEL_28;
  }
  v49 = a3;
  v34 = *((_QWORD *)v18 + 1);
  LODWORD(v52) = v18[16];
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1F08);
  sub_23B0BEF4C((uint64_t)&v18[*(int *)(v35 + 80)], v54);
  v57 = v34;
  v56 = MEMORY[0x24BEE4AF8];
  if (!(v24 >> 62))
  {
    v36 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v36)
      goto LABEL_9;
LABEL_26:
    swift_bridgeObjectRelease();
    v43 = MEMORY[0x24BEE4AF8];
LABEL_27:
    sub_23AD7E258(v43);
    v45 = v54;
    sub_23B0BC8B8(v24, v57, v50, v54, v52, a6, (uint64_t)v49, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AEB6C50(v45);
LABEL_28:
    v46 = (id)fpfs_adopt_log();

    return;
  }
  swift_bridgeObjectRetain();
  v36 = sub_23B1C7088();
  if (!v36)
    goto LABEL_26;
LABEL_9:
  if (v36 >= 1)
  {
    v47 = a6;
    v48 = a4;
    v53 = v22;
    for (i = 0; i != v36; ++i)
    {
      if ((v24 & 0xC000000000000001) != 0)
        v38 = (id)MEMORY[0x23B85F860](i, v24);
      else
        v38 = *(id *)(v24 + 8 * i + 32);
      v39 = v38;
      if (objc_msgSend(v38, sel_isKnownByTheProvider, v47, v48)
        && (v40 = objc_msgSend(v39, sel_itemID),
            v41 = objc_msgSend(v40, sel_isDiskIdentifier),
            v40,
            (v41 & 1) != 0))
      {
        v42 = objc_msgSend(v39, sel_itemID);

        if (v42)
        {
          MEMORY[0x23B85F008]();
          if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23B1C6740();
          sub_23B1C6788();
          sub_23B1C671C();
        }
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v43 = v56;
    a6 = v47;
    a4 = v48;
    v22 = v53;
    goto LABEL_27;
  }
  __break(1u);
}

id sub_23B0BECC8()
{
  return sub_23B0BECD4((uint64_t (*)(_QWORD))type metadata accessor for FPFSIndexer);
}

id sub_23B0BECD4(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_23B0BED5C()
{
  return type metadata accessor for FPFSIndexer();
}

uint64_t type metadata accessor for FPFSIndexer()
{
  uint64_t result;

  result = qword_2542E0590;
  if (!qword_2542E0590)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23B0BEDA0()
{
  unint64_t v0;

  sub_23B0BEE18();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23B0BEE18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542E13F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E13E0);
    v0 = sub_23B1C6C98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542E13F0);
  }
}

uint64_t sub_23B0BEECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ChangeEnumeratorAnchor() - 8) + 80);
  v2 = (v1 + 41) & ~v1;

  swift_release();
  v3 = sub_23B1C5C54();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23B0BEF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChangeEnumeratorAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23B0BEF90(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ChangeEnumeratorAnchor() - 8) + 80);
  sub_23B0BD0B8(a1, *(void **)(v1 + 16), *(void (**)(uint64_t, void *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), v1 + ((v3 + 41) & ~v3));
}

uint64_t sub_23B0BEFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B0BF020()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23B0BF05C()
{
  uint64_t v0;

  sub_23B0BC63C(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_23B0BF06C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23B0BF090(id a1, char *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  void (*v34)(_QWORD *);
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  v10 = OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer;
  v11 = *(_QWORD *)&a2[OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer];
  _Block_copy(a3);
  if (v11)
  {
    v12 = *(void **)&a2[v10];
    if (v12)
    {
LABEL_3:
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = a2;
      v13[3] = sub_23AC04714;
      v13[4] = v9;
      aBlock[4] = sub_23B0C133C;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AC46D44;
      aBlock[3] = &block_descriptor_114;
      v14 = _Block_copy(aBlock);
      v15 = a2;
      v16 = v12;
      swift_retain();
      swift_release();
      objc_msgSend(v16, sel_dropIndexWithDropReason_completionHandler_, a1, v14);
      _Block_release(v14);
      swift_release();

      return;
    }
    goto LABEL_9;
  }
  v17 = objc_msgSend(a2, sel_domain);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_provider);
    if (v19)
    {
      v39 = v19;
      v40 = a1;
      v20 = objc_msgSend(v19, sel_providerDomainForDomain_, v18);
      v37 = objc_msgSend(v18, sel_nsDomainOrNilForDefault);
      v38 = v20;
      v36 = objc_msgSend(v18, sel_log);
      v21 = objc_msgSend(v18, sel_supportURL);
      sub_23B1C59CC();

      v22 = sub_23B1C5A08();
      v23 = *(_QWORD *)(v22 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v22);
      LODWORD(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v8, 1, v22);
      v24 = a2;
      v25 = 0;
      if ((_DWORD)v20 != 1)
      {
        v25 = (void *)sub_23B1C5954();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
      }
      v26 = objc_allocWithZone(MEMORY[0x24BDC8338]);
      v27 = v37;
      v28 = v38;
      v29 = v36;
      v30 = objc_msgSend(v26, sel_initWithDomain_providerDomain_log_supportURL_dropIndexDelegate_, v37, v38, v36, v25, v24);

      v31 = *(void **)&a2[v10];
      *(_QWORD *)&a2[v10] = v30;

      a1 = v40;
      v12 = *(void **)&a2[v10];
      if (v12)
        goto LABEL_3;
LABEL_9:
      swift_release();
      return;
    }

  }
  v32 = (id)FPDomainUnavailableError();
  if (v32)
    v33 = (void *)sub_23B1C5870();
  else
    v33 = 0;
  v34 = (void (*)(_QWORD *))a3[2];
  v40 = v33;
  v34(a3);
  swift_release();

}

uint64_t sub_23B0BF41C(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void (**a7)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  int EnumCaseMultiPayload;
  unint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t i;
  id v43;
  void *v44;
  id v45;
  unsigned __int8 v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  char v52;
  _QWORD *v53;
  _QWORD *v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  void *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t aBlock[6];
  unint64_t v77;

  v68 = a3;
  v69 = a4;
  v12 = type metadata accessor for ChangeEnumeratorAnchor();
  MEMORY[0x24BDAC7A8](v12);
  v74 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C5E4C();
  v71 = *(_QWORD *)(v14 - 8);
  v72 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a7;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = sub_23B0C1348;
  v21[3] = v20;
  v21[4] = a5;
  v21[5] = a6;
  _Block_copy(a7);
  swift_retain();
  v66 = a5;
  v67 = a6;
  v70 = a2;
  v22 = objc_msgSend(a2, sel_domain);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, sel_log);

  }
  else
  {
    v24 = 0;
  }
  v25 = (id)fpfs_adopt_log();

  sub_23AA8EFC8(a1, (uint64_t)v19, &qword_2542E21C8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v27 = *(_QWORD *)v19;
  if (EnumCaseMultiPayload == 1)
  {
    v73 = v25;
    v28 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v29 = (id)v27;
    v30 = sub_23B1C5E40();
    v31 = sub_23B1C6AA0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v64 = v21;
      v33 = (uint8_t *)v32;
      v34 = swift_slowAlloc();
      v65 = v20;
      v35 = (_QWORD *)v34;
      *(_DWORD *)v33 = 138412290;
      swift_getErrorValue();
      v36 = sub_23B0D9CF0(v75);
      aBlock[0] = (uint64_t)v36;
      sub_23B1C6CBC();
      *v35 = v36;

      _os_log_impl(&dword_23AA66000, v30, v31, "🧲  enumeration error: %@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v35, -1, -1);
      MEMORY[0x23B8614BC](v33, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v16, v72);
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = a7;
    _s3__C4CodeOMa_1(0);
    aBlock[0] = -1002;
    _Block_copy(a7);
    v50 = (id)v27;
    _Block_copy(a7);
    v51 = (id)v27;
    sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
    v52 = sub_23B1C575C();

    if ((v52 & 1) != 0)
    {
      v53 = (_QWORD *)swift_allocObject();
      v53[2] = sub_23B0C1348;
      v53[3] = v49;
      v53[4] = v27;
      v54 = (_QWORD *)swift_allocObject();
      v54[2] = sub_23B0C1350;
      v54[3] = v53;
      v55 = v66;
      v54[4] = v66;
      aBlock[4] = (uint64_t)sub_23B0C1354;
      aBlock[5] = (uint64_t)v54;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23AC46D44;
      aBlock[3] = (uint64_t)&block_descriptor_82_0;
      v56 = _Block_copy(aBlock);
      v57 = v55;
      v58 = (id)v27;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v67, sel_dropIndexWithDropReason_completionHandler_, 9, v56);
      _Block_release(v56);
      swift_release();
      swift_release();
    }
    else
    {
      v59 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, _QWORD, void *))a7)[2](a7, 0, v59);
      swift_release();

    }
    _Block_release(a7);

    v25 = v73;
    v60 = (void *)fpfs_adopt_log();
    goto LABEL_31;
  }
  v37 = *((_QWORD *)v19 + 1);
  v38 = v19[16];
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1F08);
  sub_23B0BEF4C((uint64_t)&v19[*(int *)(v39 + 80)], v74);
  aBlock[0] = v37;
  v77 = MEMORY[0x24BEE4AF8];
  if (!(v27 >> 62))
  {
    v40 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v40)
      goto LABEL_9;
LABEL_29:
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x24BEE4AF8];
LABEL_30:
    sub_23AD7E258(v48);
    v61 = v74;
    sub_23B0BC8B8(v27, aBlock[0], v68, v74, v38, v69, (uint64_t)sub_23B0C134C, (uint64_t)v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AEB6C50(v61);
    v60 = (void *)fpfs_adopt_log();
LABEL_31:
    v62 = v60;
    swift_release();

    return swift_release();
  }
  swift_bridgeObjectRetain();
  result = sub_23B1C7088();
  v40 = result;
  if (!result)
    goto LABEL_29;
LABEL_9:
  if (v40 >= 1)
  {
    LODWORD(v72) = v38;
    v73 = v25;
    v64 = v21;
    v65 = v20;
    for (i = 0; i != v40; ++i)
    {
      if ((v27 & 0xC000000000000001) != 0)
        v43 = (id)MEMORY[0x23B85F860](i, v27);
      else
        v43 = *(id *)(v27 + 8 * i + 32);
      v44 = v43;
      if (objc_msgSend(v43, sel_isKnownByTheProvider)
        && (v45 = objc_msgSend(v44, sel_itemID),
            v46 = objc_msgSend(v45, sel_isDiskIdentifier),
            v45,
            (v46 & 1) != 0))
      {
        v47 = objc_msgSend(v44, sel_itemID);

        if (v47)
        {
          MEMORY[0x23B85F008]();
          if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23B1C6740();
          sub_23B1C6788();
          sub_23B1C671C();
        }
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v48 = v77;
    v21 = v64;
    v25 = v73;
    v38 = v72;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

void sub_23B0BFB78(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, const void *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  id v33;
  const void *v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  char v44;
  _QWORD *v45;
  _QWORD *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  BOOL v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  unint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t Strong;
  uint64_t v76;
  void *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  _QWORD *v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  const void *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  void *v115;
  char *v116;
  id v117;
  uint64_t v118;
  id v119;
  id v120;
  uint64_t v121;
  void *v122;
  id v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t aBlock[8];

  v114 = a3;
  v115 = a4;
  v123 = a1;
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C8);
  MEMORY[0x24BDAC7A8](v106);
  v107 = (uint64_t *)((char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = sub_23B1C5E4C();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v116 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0);
  v112 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v112 + 64);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v108 = (uint64_t)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v118 = (uint64_t)&v106 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v109 = (uint64_t)&v106 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v106 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v106 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v124 = (uint64_t)&v106 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21A8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (void **)((char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = a7;
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = sub_23B0C1348;
  v31[3] = v30;
  v31[4] = a5;
  v31[5] = a6;
  v125 = v31;
  _Block_copy(a7);
  swift_retain();
  v32 = a5;
  v33 = a6;
  v122 = (void *)a7;
  v34 = a7;
  v35 = a2;
  _Block_copy(v34);
  v121 = v30;
  swift_retain();
  v120 = v32;
  v119 = v33;
  v36 = objc_msgSend(a2, sel_domain, v106);
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(v36, sel_log);

  }
  else
  {
    v38 = 0;
  }
  v117 = (id)fpfs_adopt_log();

  sub_23AA8EFC8((uint64_t)v123, (uint64_t)v29, &qword_2542E21A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = *v29;
    v40 = swift_allocObject();
    v41 = v122;
    *(_QWORD *)(v40 + 16) = v122;
    _s3__C4CodeOMa_1(0);
    aBlock[0] = -1002;
    _Block_copy(v41);
    v42 = v39;
    _Block_copy(v41);
    v43 = v39;
    sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
    v44 = sub_23B1C575C();

    if ((v44 & 1) != 0)
    {
      v45 = (_QWORD *)swift_allocObject();
      v45[2] = sub_23B0C1348;
      v45[3] = v40;
      v45[4] = v39;
      v46 = (_QWORD *)swift_allocObject();
      v46[2] = sub_23B0C1018;
      v46[3] = v45;
      v47 = v120;
      v46[4] = v120;
      aBlock[4] = (uint64_t)sub_23B0C1028;
      aBlock[5] = (uint64_t)v46;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23AC46D44;
      aBlock[3] = (uint64_t)&block_descriptor_59_0;
      v48 = _Block_copy(aBlock);
      v49 = v47;
      v50 = v39;
      swift_retain();
      swift_retain();
      swift_release();
      v51 = v119;
      objc_msgSend(v119, sel_dropIndexWithDropReason_completionHandler_, 7, v48);
      _Block_release(v48);
      swift_release();
      swift_release();
    }
    else
    {
      v62 = (void *)sub_23B1C5870();
      (*((void (**)(void *, _QWORD, void *))v41 + 2))(v41, 0, v62);
      swift_release();

      v47 = v120;
      v51 = v119;
    }
    v63 = v117;
    _Block_release(v41);

    goto LABEL_20;
  }
  v52 = v124;
  sub_23AA724E8((uint64_t)v29, v124, &qword_2542E13E0);
  v53 = (id)fpfs_current_or_default_log();
  v54 = v116;
  sub_23B1C5E58();
  sub_23AA8EFC8(v52, (uint64_t)v25, &qword_2542E13E0);
  v55 = sub_23B1C5E40();
  v56 = sub_23B1C6A88();
  v57 = os_log_type_enabled(v55, v56);
  v113 = v35;
  if (v57)
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v123 = (id)swift_slowAlloc();
    aBlock[0] = (uint64_t)v123;
    *(_DWORD *)v58 = 136315138;
    sub_23AA8EFC8((uint64_t)v25, (uint64_t)v22, &qword_2542E13E0);
    v59 = type metadata accessor for ChangeEnumeratorAnchor();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v22, 1, v59) == 1)
    {
      sub_23AA8A05C((uint64_t)v22, &qword_2542E13E0);
      v60 = 0xE500000000000000;
      v61 = 0x3E6C696E3CLL;
    }
    else
    {
      v61 = sub_23AEB61C8();
      v60 = v64;
      sub_23AEB6C50((uint64_t)v22);
    }
    aBlock[6] = sub_23AABEC68(v61, v60, aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v25, &qword_2542E13E0);
    _os_log_impl(&dword_23AA66000, v55, v56, "🧲  indexing from %s", v58, 0xCu);
    v65 = v123;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v65, -1, -1);
    MEMORY[0x23B8614BC](v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v110 + 8))(v116, v111);
  }
  else
  {
    sub_23AA8A05C((uint64_t)v25, &qword_2542E13E0);

    (*(void (**)(char *, uint64_t))(v110 + 8))(v54, v111);
  }
  v66 = v115;
  v67 = v118;
  v68 = v124;
  v69 = v109;
  sub_23AA8EFC8(v124, v109, &qword_2542E13E0);
  sub_23AA8EFC8(v69, v67, &qword_2542E13E0);
  v70 = *(unsigned __int8 *)(v112 + 80);
  v71 = (v70 + 40) & ~v70;
  v72 = v14 + 7;
  v123 = (id)(v70 | 7);
  v73 = (_QWORD *)swift_allocObject();
  v73[2] = v113;
  v73[3] = sub_23B0C134C;
  v73[4] = v125;
  sub_23AA724E8(v69, (uint64_t)v73 + v71, &qword_2542E13E0);
  *(_QWORD *)((char *)v73 + ((v72 + v71) & 0xFFFFFFFFFFFFFFF8)) = v66;
  v74 = v114;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v76 = Strong;
    v77 = v66;
    v116 = *(char **)(Strong + 16);
    v78 = v73;
    v79 = v108;
    sub_23AA8EFC8(v68, v108, &qword_2542E13E0);
    v80 = (v70 + 24) & ~v70;
    v81 = (v72 + v80) & 0xFFFFFFFFFFFFFFF8;
    v82 = (v81 + 23) & 0xFFFFFFFFFFFFFFF8;
    v83 = swift_allocObject();
    *(_QWORD *)(v83 + 16) = v76;
    v84 = v79;
    v85 = v77;
    sub_23AA724E8(v84, v83 + v80, &qword_2542E13E0);
    v86 = (_QWORD *)(v83 + v81);
    *v86 = sub_23B0C0FF0;
    v86[1] = v78;
    *(_QWORD *)(v83 + v82) = 200;
    *(_QWORD *)(v83 + ((v82 + 15) & 0xFFFFFFFFFFFFFFF8)) = v74;
    v87 = swift_allocObject();
    *(_QWORD *)(v87 + 16) = sub_23B0C0FF0;
    *(_QWORD *)(v87 + 24) = v78;
    v88 = v113;
    swift_retain_n();
    v89 = v77;
    swift_retain_n();
    v90 = v88;
    v91 = v89;
    swift_retain();
    swift_retain();
    sub_23ADF3D40((uint64_t)"enumerateChanges(fromAnchor:suggestedBatchSize:reply:)", 54, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23B0C100C, v87, (uint64_t)sub_23B0C0FF8, v83);
    swift_release();

    swift_release();
    v92 = v124;
    swift_release();
    swift_release();
    swift_release();
    v41 = v122;
    v51 = v119;
    v47 = v120;
    v93 = v118;
LABEL_19:
    sub_23AA8A05C(v93, &qword_2542E13E0);

    sub_23AA8A05C(v92, &qword_2542E13E0);
    v63 = v117;
LABEL_20:
    v101 = (id)fpfs_adopt_log();
    swift_release();

    swift_release_n();
    _Block_release(v41);
    return;
  }
  v94 = v113;
  swift_retain_n();
  v95 = v66;
  v96 = v94;
  v123 = v95;
  v97 = (id)FPDomainUnavailableError();
  if (v97)
  {
    v98 = (uint64_t)v107;
    *v107 = v97;
    swift_storeEnumTagMultiPayload();
    v41 = v122;
    _Block_copy(v122);
    swift_retain();
    v47 = v120;
    v99 = v120;
    v51 = v119;
    v100 = v119;
    v93 = v118;
    sub_23B0BF41C(v98, v96, v118, v123, v99, v100, (void (**)(_QWORD, _QWORD, _QWORD))v41);
    _Block_release(v41);
    swift_release();

    sub_23AA8A05C(v98, &qword_2542E21C8);
    swift_release();

    swift_release();
    v85 = v115;
    v92 = v124;
    goto LABEL_19;
  }
  v102 = v96;
  v103 = v119;

  v104 = v120;
  swift_release_n();
  swift_release();

  v105 = v122;
  _Block_release(v122);
  _Block_release(v105);

  sub_23AA8A05C(v118, &qword_2542E13E0);
  __break(1u);
}

void sub_23B0C068C(char *a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  char *v39;
  id v40;
  void *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  id v46;
  char *v47;
  id v48;
  char *v49;
  id v50;
  char *v51;
  id v52;
  id v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint8_t *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char *v65;
  id v66;
  char *v67;
  id v68;
  char *v69;
  id v70;
  char *v71;
  id v72;
  uint64_t v73;
  char *v74;
  char *v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD aBlock[6];

  v4 = sub_23B1C5E4C();
  v86 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21A8);
  MEMORY[0x24BDAC7A8](v84);
  v85 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0);
  v88 = *(_QWORD *)(v10 - 8);
  v89 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v90 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C60EC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  _Block_copy(a2);
  _Block_copy(a2);
  *v18 = objc_msgSend(a1, sel_queue);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BEE5610], v15);
  v20 = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v20 & 1) != 0)
  {
    v21 = *(_QWORD *)&a1[OBJC_IVAR____TtC9libfssync11FPFSIndexer_enumerator];
    if (v21)
    {
      swift_retain();
      v22 = objc_msgSend(a1, sel_domain);
      if (v22)
      {
        v23 = v22;
        v24 = objc_msgSend(v22, sel_provider);
        if (v24)
        {
          v80 = v4;
          v81 = v24;
          v25 = objc_msgSend(v24, sel_providerDomainForDomain_, v23);
          v26 = *(void **)&a1[OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer];
          v82 = v25;
          v83 = v19;
          if (v26)
          {
            v27 = v26;
            v28 = objc_msgSend(v23, sel_nsDomainOrNilForDefault);
            objc_msgSend(v27, sel_setDomain_, v28);

            objc_msgSend(v27, sel_setProviderDomain_, v25);
          }
          else
          {
            v74 = v9;
            v79 = OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer;
            v78 = objc_msgSend(v23, sel_nsDomainOrNilForDefault);
            v77 = v25;
            v76 = objc_msgSend(v23, sel_log);
            v30 = objc_msgSend(v23, sel_supportURL);
            sub_23B1C59CC();

            v31 = sub_23B1C5A08();
            v32 = *(_QWORD *)(v31 - 8);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v14, 0, 1, v31);
            v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v31);
            v75 = a1;
            v34 = 0;
            if (v33 != 1)
            {
              v34 = (void *)sub_23B1C5954();
              (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
            }
            v35 = objc_allocWithZone(MEMORY[0x24BDC8338]);
            v36 = v78;
            v37 = v77;
            v38 = v76;
            v39 = v75;
            v40 = objc_msgSend(v35, sel_initWithDomain_providerDomain_log_supportURL_dropIndexDelegate_, v78, v77, v76, v34, v75);

            v41 = *(void **)&a1[v79];
            *(_QWORD *)&a1[v79] = v40;
            v27 = v40;

            v19 = v83;
            v9 = v74;
          }
          v42 = (_QWORD *)swift_allocObject();
          v42[2] = sub_23ACF02D8;
          v42[3] = v19;
          v42[4] = a1;
          v42[5] = v27;
          v43 = (_QWORD *)swift_allocObject();
          v43[2] = a1;
          v43[3] = sub_23B0C0F88;
          v43[4] = v42;
          v43[5] = v21;
          v43[6] = v27;
          v44 = (uint64_t)&a1[OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor];
          swift_beginAccess();
          sub_23AA8EFC8(v44, (uint64_t)v9, &qword_2542E13E8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v9, 1, v89) == 1)
          {
            v45 = a1;
            v46 = v27;
            v47 = v45;
            v48 = v46;
            swift_retain_n();
            v49 = v47;
            v50 = v48;
            swift_retain_n();
            swift_retain_n();
            v51 = v49;
            v52 = v50;
            sub_23AA8A05C((uint64_t)v9, &qword_2542E13E8);
            v53 = (id)fpfs_current_or_default_log();
            v54 = v87;
            sub_23B1C5E58();
            v55 = sub_23B1C5E40();
            v56 = sub_23B1C6A94();
            if (os_log_type_enabled(v55, v56))
            {
              v57 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v57 = 0;
              _os_log_impl(&dword_23AA66000, v55, v56, "🧲  current anchor is unknown, fetching from spotlight", v57, 2u);
              v58 = v57;
              v54 = v87;
              MEMORY[0x23B8614BC](v58, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v80);
            v59 = swift_allocObject();
            *(_QWORD *)(v59 + 16) = sub_23B0C0FD0;
            *(_QWORD *)(v59 + 24) = v43;
            aBlock[4] = sub_23B0C0FE0;
            aBlock[5] = v59;
            aBlock[0] = MEMORY[0x24BDAC760];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_23B0BDBEC;
            aBlock[3] = &block_descriptor_29_1;
            v60 = _Block_copy(aBlock);
            swift_retain();
            swift_release();
            objc_msgSend(v52, sel_fetchCurrentIndexingAnchorWithCompletionHandler_, v60);
            _Block_release(v60);

            swift_release_n();
          }
          else
          {
            v61 = (uint64_t)v9;
            v62 = v90;
            sub_23AA724E8(v61, v90, &qword_2542E13E0);
            v63 = v62;
            v64 = v85;
            sub_23AA8EFC8(v63, (uint64_t)v85, &qword_2542E13E0);
            swift_storeEnumTagMultiPayload();
            v65 = a1;
            v66 = v27;
            v67 = v65;
            v68 = v66;
            swift_retain();
            v69 = v67;
            v70 = v68;
            swift_retain();
            swift_retain();
            _Block_copy(a2);
            swift_retain();
            v71 = v69;
            v72 = v70;
            swift_retain();
            swift_retain();
            sub_23B0BFB78(v64, v71, v21, v72, v71, v72, a2);
            _Block_release(a2);
            sub_23AA8A05C((uint64_t)v64, &qword_2542E21A8);
            sub_23AA8A05C(v90, &qword_2542E13E0);

            swift_release_n();
          }
          swift_release();
          swift_release_n();
          swift_release_n();
          v29 = v82;
          goto LABEL_26;
        }

      }
      v29 = (id)FPDomainUnavailableError();
      if (v29)
        v23 = (void *)sub_23B1C5870();
      else
        v23 = 0;
      ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v23);
      swift_release();
    }
    else
    {
      v29 = (id)FPDomainUnavailableError();
      if (v29)
        v23 = (void *)sub_23B1C5870();
      else
        v23 = 0;
      ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v23);
    }
    swift_release();
LABEL_26:

    _Block_release(a2);
    return;
  }
  __break(1u);
}

uint64_t sub_23B0C0F88(char a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23B0BDC80(a1, a2, a3, *(uint64_t (**)(_QWORD, void *))(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_23B0C0F94()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23B0C0FD0(uint64_t a1)
{
  uint64_t v1;

  sub_23B0BDE90(a1, *(void **)(v1 + 16), *(void (**)(_QWORD, id, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_23B0C0FE0(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_23B0BD8A4(a1, a2, a3, *(void (**)(_QWORD))(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_23B0C0FF8()
{
  return sub_23B0C1240();
}

uint64_t sub_23B0C100C(void *a1)
{
  uint64_t v1;

  return sub_23B0BB6F8(a1, *(void (**)(_QWORD *))(v1 + 16));
}

void sub_23B0C1018(void *a1)
{
  uint64_t v1;

  sub_23B0BDE2C(a1, *(void (**)(uint64_t, id))(v1 + 16), *(_QWORD *)(v1 + 24), *(id *)(v1 + 32));
}

void sub_23B0C1028(void *a1)
{
  uint64_t v1;

  sub_23B0BD68C(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t objectdestroy_39Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);

  swift_release();
  v4 = type metadata accessor for ChangeEnumeratorAnchor();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    v5 = sub_23B1C5C54();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v2, v5);
  }

  return swift_deallocObject();
}

void sub_23B0C1108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_23B0BE648(a1, *(void **)(v1 + 16), *(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_42Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  v3 = type metadata accessor for ChangeEnumeratorAnchor();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    v4 = sub_23B1C5C54();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B0C1240()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E13E0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B0BB79C(*(_QWORD *)(v0 + 16), v0 + v2, *(void (**)(uint64_t))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_52Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23B0C12EC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23B0C1310()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B0C133C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0BC7A4(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_23B0C13AC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23B0C13B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  result = type metadata accessor for ItemReconciliationHalf(319, a1[2], a1[4], a4);
  if (v7 <= 0x3F)
  {
    result = type metadata accessor for ItemReconciliationHalf(319, a1[3], a1[5], v6);
    if (v8 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23B0C1484(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, unint64_t, uint64_t);
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  void *v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  void **v70;
  void *v71;
  _QWORD *v72;
  void *v73;
  const void *v74;
  unsigned int (*v75)(const void *, uint64_t, uint64_t);
  id v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  void *v82;
  const void *v83;
  uint64_t *v84;
  uint64_t v85;
  size_t v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  void (*v90)(unint64_t, unint64_t, uint64_t);
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  void *v99;
  void *v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t *v108;
  unint64_t v109;
  uint64_t v110;
  __int128 v111;
  _QWORD *v112;
  void **v113;
  void *v114;
  unint64_t v115;
  unint64_t v116;
  _OWORD *v117;
  _OWORD *v118;
  unint64_t v119;
  unint64_t v120;
  id v121;
  uint64_t v123;
  uint64_t v124;
  unsigned int v125;
  size_t __n;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t AssociatedTypeWitness;
  unsigned int v148;
  unsigned int v149;
  uint64_t v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  unsigned int v155;
  int v156;
  size_t v157;
  int v158;
  uint64_t v159;
  size_t v160;
  uint64_t v161;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v2 + 84))
    v3 = *(_QWORD *)(v2 + 64);
  else
    v3 = *(_QWORD *)(v2 + 64) + 1;
  v160 = v3;
  v143 = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(v143 - 8);
  v156 = *(_DWORD *)(v4 + 80);
  v141 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v141 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v154 = *(_DWORD *)(v5 + 80);
  v161 = v154;
  v158 = v156 & 0xF8 | v154;
  v138 = v6;
  v149 = *(_DWORD *)(v4 + 84);
  if (v149 > v6)
    v6 = *(_DWORD *)(v4 + 84);
  v139 = v6;
  if (v6 <= 0x7FFFFFFE)
    v6 = 2147483646;
  v148 = v6;
  v142 = v4;
  v150 = *(_QWORD *)(v4 + 64);
  v140 = *(_QWORD *)(v141 - 8);
  v152 = *(_QWORD *)(v5 + 64);
  v146 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v146 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v144 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v144 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v10 & 0xF8 | v13 | 7;
  v15 = v14 | v8 & 0xF8;
  v145 = v7;
  if (*(_DWORD *)(v7 + 84))
    v16 = *(_QWORD *)(v7 + 64);
  else
    v16 = *(_QWORD *)(v7 + 64) + 1;
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v12 + 84))
    v17 = *(_DWORD *)(v12 + 84);
  else
    v17 = *(_DWORD *)(v9 + 84);
  if (v17 <= 0x7FFFFFFE)
    v18 = 2147483646;
  else
    v18 = v17;
  v19 = v15 | *(_DWORD *)(v2 + 80) & 0xF8 | v158;
  if ((_DWORD)v19 != 7)
    goto LABEL_22;
  if (((v154 | v156 | v8 | v10 | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v2 + 80)) & 0x100000) != 0)
    goto LABEL_22;
  v20 = v158 | 7u;
  v21 = v150 + 7;
  v129 = v154 + 8;
  v22 = ((((v152 + 7 + ((v129 + ((v150 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v154)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v23 = *(_QWORD *)(v9 + 64) + 7;
  v130 = v13 + 8;
  v24 = *(_QWORD *)(v12 + 64) + 7;
  v25 = ((((v24 + ((v13 + 8 + (v23 & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (((((((((((((v14 + 9 + ((((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14) + v25 + 34) & 0xFFFFFFFFFFFFFFF8)
             + 63) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8
         + ((((((((((v20 + ((((v160 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v20) + v22 + 34) & 0xFFFFFFFFFFFFFFF8)
               + 63) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + v15
           + 8) & ~v15)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 39) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
LABEL_22:
    v27 = *a2;
    *a1 = *a2;
    v28 = (uint64_t *)(v27 + ((v19 + 16) & ~v19));
    swift_retain();
    return v28;
  }
  v123 = v152 + 7;
  v131 = ((((((((v20 + ((((v160 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v20) + v22 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + v15
       + 8;
  v132 = v14;
  v134 = v16 + 7;
  v135 = v14 + 9;
  __n = v16;
  v136 = *(_DWORD *)(v12 + 80);
  v137 = v18;
  v125 = v17;
  v151 = *(_DWORD *)(v9 + 84);
  v155 = *(_DWORD *)(v12 + 84);
  v124 = *(_QWORD *)(v12 + 64) + 7;
  v157 = ((((v24 + ((v13 + 8 + (v23 & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v159 = v9;
  v127 = *(_QWORD *)(v11 - 8);
  v128 = v11;
  v133 = ((((((((v14 + 9 + ((((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14) + v25 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  v26 = ~v20;
  v153 = v23;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v2 + 48))(a2, 1, AssociatedTypeWitness))
  {
    memcpy(a1, a2, v160);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v2 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  v29 = ~v161;
  v30 = (_QWORD *)(((unint64_t)a1 + v160 + 7) & 0xFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)a2 + v160 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  v34 = v33 + v20;
  v35 = (void *)((v32 + v20 + 9) & v26);
  v36 = (const void *)((v34 + 9) & v26);
  if (v149 == v148)
  {
    if (!(*(unsigned int (**)(uint64_t))(v142 + 48))((v34 + 9) & v26))
      goto LABEL_34;
  }
  else
  {
    v37 = (_QWORD *)(((unint64_t)v36 + v21) & 0xFFFFFFFFFFFFFFF8);
    if (v139 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v140 + 48))(((unint64_t)v37 + v129) & v29, v138, v141))
      {
LABEL_34:
        v37 = (_QWORD *)(((unint64_t)v36 + v21) & 0xFFFFFFFFFFFFFFF8);
LABEL_35:
        (*(void (**)(void *, const void *, uint64_t))(v142 + 16))(v35, v36, v143);
        v39 = (_QWORD *)(((unint64_t)v35 + v21) & 0xFFFFFFFFFFFFFFF8);
        *v39 = *v37;
        v40 = ((unint64_t)v39 + v129) & v29;
        v41 = ((unint64_t)v37 + v129) & v29;
        v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v140 + 16);
        swift_bridgeObjectRetain();
        v42(v40, v41, v141);
        v43 = (_QWORD *)((v123 + v40) & 0xFFFFFFFFFFFFF8);
        v44 = (_QWORD *)((v123 + v41) & 0xFFFFFFFFFFFFF8);
        *v43 = *v44;
        v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
        v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v45 = *v46;
        v45[1] = v46[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      }
    }
    else
    {
      v38 = *v37;
      if (*v37 >= 0xFFFFFFFFuLL)
        LODWORD(v38) = -1;
      if ((v38 + 1) < 2)
        goto LABEL_35;
    }
  }
  memcpy(v35, v36, v22);
LABEL_36:
  v47 = (uint64_t)v36 + v22 + 10;
  v48 = (uint64_t)v36 + v22 + 34;
  *((_BYTE *)v35 + v22) = *((_BYTE *)v36 + v22);
  v49 = (uint64_t)v35 + v22 + 34;
  *(_BYTE *)(((unint64_t)v35 + v22) | 1) = *(_BYTE *)(((unint64_t)v36 + v22) | 1);
  v50 = ~v15;
  *(_BYTE *)(((unint64_t)v35 + v22) | 2) = *(_BYTE *)(((unint64_t)v36 + v22) | 2);
  v51 = ((unint64_t)v35 + v22 + 10) & 0xFFFFFFFFFFFFFFF8;
  v52 = *(void **)(v47 & 0xFFFFFFFFFFFFFFF8);
  v53 = *(void **)((v47 & 0xFFFFFFFFFFFFFFF8) + 8);
  v54 = *(_BYTE *)((v47 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_23AAAE478(v52, v53, v54);
  *(_QWORD *)v51 = v52;
  *(_QWORD *)(v51 + 8) = v53;
  *(_BYTE *)(v51 + 16) = v54;
  v55 = v49 & 0xFFFFFFFFFFFFFFF8;
  v56 = v48 & 0xFFFFFFFFFFFFFFF8;
  v57 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  if (!(4 * (v57 & 3)) || ((v57 >> 2) & 0xFFFFFFF3 | (4 * (v57 & 3))) == 0xF)
  {
    v65 = (uint64_t *)(v56 + 8);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    v66 = *(_QWORD *)(v56 + 16);
    if (v66 >> 60 == 15)
    {
      *(_OWORD *)(v55 + 8) = *(_OWORD *)v65;
    }
    else
    {
      v67 = *v65;
      sub_23AAAE668(*v65, *(_QWORD *)(v56 + 16));
      *(_QWORD *)(v55 + 8) = v67;
      *(_QWORD *)(v55 + 16) = v66;
    }
    v62 = a2;
    v61 = a1;
    v64 = v145;
    v63 = v146;
    v68 = *(_OWORD *)(v56 + 24);
    *(_BYTE *)(v55 + 40) = *(_BYTE *)(v56 + 40);
    *(_OWORD *)(v55 + 24) = v68;
    *(_QWORD *)(v55 + 48) = *(_QWORD *)(v56 + 48);
  }
  else
  {
    v58 = *(_OWORD *)v56;
    v59 = *(_OWORD *)(v56 + 16);
    v60 = *(_OWORD *)(v56 + 32);
    *(_QWORD *)(v55 + 48) = *(_QWORD *)(v56 + 48);
    *(_OWORD *)(v55 + 16) = v59;
    *(_OWORD *)(v55 + 32) = v60;
    *(_OWORD *)v55 = v58;
    v62 = a2;
    v61 = a1;
    v64 = v145;
    v63 = v146;
  }
  v69 = ~v132;
  v70 = (void **)((v56 + 63) & 0xFFFFFFFFFFFFFFF8);
  v71 = *v70;
  v72 = (_QWORD *)((v55 + 63) & 0xFFFFFFFFFFFFF8);
  *v72 = *v70;
  *(_QWORD *)(((unint64_t)v72 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFF8);
  v73 = (void *)(((unint64_t)v61 + v131) & v50);
  v74 = (const void *)(((unint64_t)v62 + v131) & v50);
  v75 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
  v76 = v71;
  if (v75(v74, 1, v63))
  {
    memcpy(v73, v74, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v64 + 16))(v73, v74, v63);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v73, 0, 1, v63);
  }
  v77 = (_QWORD *)(((unint64_t)v73 + v134) & 0xFFFFFFFFFFFFF8);
  v78 = (_QWORD *)(((unint64_t)v74 + v134) & 0xFFFFFFFFFFFFFFF8);
  *v77 = *v78;
  v79 = ~v136;
  v80 = ((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8;
  v81 = ((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v80 = *(_QWORD *)v81;
  *(_BYTE *)(v80 + 8) = *(_BYTE *)(v81 + 8);
  v82 = (void *)((v135 + v80) & v69);
  v83 = (const void *)((v135 + v81) & v69);
  if (v151 == v137)
  {
    if (!(*(unsigned int (**)(const void *, _QWORD, uint64_t))(v159 + 48))(v83, v151, v144))
      goto LABEL_56;
LABEL_55:
    v86 = v157;
    memcpy(v82, v83, v157);
    goto LABEL_58;
  }
  v84 = (uint64_t *)(((unint64_t)v83 + v153) & 0xFFFFFFFFFFFFFFF8);
  if (v125 <= 0x7FFFFFFE)
  {
    v85 = *v84;
    if ((unint64_t)*v84 >= 0xFFFFFFFF)
      LODWORD(v85) = -1;
    if ((v85 + 1) < 2)
      goto LABEL_57;
    goto LABEL_55;
  }
  if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v127 + 48))(((unint64_t)v84 + v130) & v79, v155, v128))
  {
    goto LABEL_55;
  }
LABEL_56:
  v84 = (uint64_t *)(((unint64_t)v83 + v153) & 0xFFFFFFFFFFFFFFF8);
LABEL_57:
  (*(void (**)(void *, const void *, uint64_t))(v159 + 16))(v82, v83, v144);
  v87 = (_QWORD *)(((unint64_t)v82 + v153) & 0xFFFFFFFFFFFFFFF8);
  *v87 = *v84;
  v88 = ((unint64_t)v87 + v130) & v79;
  v89 = ((unint64_t)v84 + v130) & v79;
  v90 = *(void (**)(unint64_t, unint64_t, uint64_t))(v127 + 16);
  swift_bridgeObjectRetain();
  v90(v88, v89, v128);
  v91 = (_QWORD *)((v124 + v88) & 0xFFFFFFFFFFFFF8);
  v92 = (_QWORD *)((v124 + v89) & 0xFFFFFFFFFFFFF8);
  *v91 = *v92;
  v93 = (_QWORD *)(((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFFFF8);
  v94 = (_QWORD *)(((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v93 = *v94;
  v93[1] = v94[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v86 = v157;
LABEL_58:
  v95 = (uint64_t)v83 + v86 + 10;
  v96 = (uint64_t)v83 + v86 + 34;
  *((_BYTE *)v82 + v86) = *((_BYTE *)v83 + v86);
  v97 = (uint64_t)v82 + v86 + 34;
  *(_BYTE *)(((unint64_t)v82 + v86) | 1) = *(_BYTE *)(((unint64_t)v83 + v86) | 1);
  *(_BYTE *)(((unint64_t)v82 + v86) | 2) = *(_BYTE *)(((unint64_t)v83 + v86) | 2);
  v98 = ((unint64_t)v82 + v86 + 10) & 0xFFFFFFFFFFFFFFF8;
  v99 = *(void **)(v95 & 0xFFFFFFFFFFFFFFF8);
  v100 = *(void **)((v95 & 0xFFFFFFFFFFFFFFF8) + 8);
  v101 = *(_BYTE *)((v95 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_23AAAE478(v99, v100, v101);
  *(_QWORD *)v98 = v99;
  *(_QWORD *)(v98 + 8) = v100;
  *(_BYTE *)(v98 + 16) = v101;
  v102 = v97 & 0xFFFFFFFFFFFFFFF8;
  v103 = v96 & 0xFFFFFFFFFFFFFFF8;
  v104 = *(_QWORD *)(v103 + 16) >> 60;
  if (!(4 * (v104 & 3)) || ((v104 >> 2) & 0xFFFFFFF3 | (4 * (v104 & 3))) == 0xF)
  {
    v108 = (uint64_t *)(v103 + 8);
    *(_QWORD *)v102 = *(_QWORD *)v103;
    v109 = *(_QWORD *)(v103 + 16);
    if (v109 >> 60 == 15)
    {
      *(_OWORD *)(v102 + 8) = *(_OWORD *)v108;
    }
    else
    {
      v110 = *v108;
      sub_23AAAE668(*v108, *(_QWORD *)(v103 + 16));
      *(_QWORD *)(v102 + 8) = v110;
      *(_QWORD *)(v102 + 16) = v109;
    }
    v28 = a1;
    v111 = *(_OWORD *)(v103 + 24);
    *(_BYTE *)(v102 + 40) = *(_BYTE *)(v103 + 40);
    *(_OWORD *)(v102 + 24) = v111;
    *(_QWORD *)(v102 + 48) = *(_QWORD *)(v103 + 48);
  }
  else
  {
    v105 = *(_OWORD *)v103;
    v106 = *(_OWORD *)(v103 + 16);
    v107 = *(_OWORD *)(v103 + 32);
    *(_QWORD *)(v102 + 48) = *(_QWORD *)(v103 + 48);
    *(_OWORD *)(v102 + 16) = v106;
    *(_OWORD *)(v102 + 32) = v107;
    *(_OWORD *)v102 = v105;
    v28 = a1;
  }
  v112 = (_QWORD *)((v102 + 63) & 0xFFFFFFFFFFFFF8);
  v113 = (void **)((v103 + 63) & 0xFFFFFFFFFFFFFFF8);
  v114 = *v113;
  *v112 = *v113;
  *(_QWORD *)(((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFF8);
  *((_BYTE *)v73 + v133) = *((_BYTE *)v74 + v133);
  v115 = ((unint64_t)v73 + v133) & 0xFFFFFFFFFFFFFFF8;
  v116 = ((unint64_t)v74 + v133) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v115 + 8) = *(_QWORD *)(v116 + 8);
  v117 = (_OWORD *)((v115 + 23) & 0xFFFFFFFFFFFFFFF8);
  v118 = (_OWORD *)((v116 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v117 = *v118;
  v119 = ((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8;
  v120 = ((unint64_t)v118 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v119 = *(_QWORD *)v120;
  *(_BYTE *)(v119 + 8) = *(_BYTE *)(v120 + 8);
  *(_QWORD *)(((unint64_t)v117 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v118 + 39) & 0xFFFFFFFFFFFFF8);
  v121 = v114;
  swift_bridgeObjectRetain();
  return v28;
}

void *sub_23B0C1F2C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t (*v43)(unint64_t, uint64_t, uint64_t);
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void (*v53)(unint64_t, unint64_t, uint64_t);
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  id v66;
  void *v67;
  char v68;
  void *v69;
  void *v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  int v78;
  int v79;
  int v80;
  BOOL v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  __int128 v94;
  void **v95;
  void **v96;
  void *v97;
  void *v98;
  id v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t (*v113)(uint64_t, uint64_t, uint64_t);
  int v114;
  int v115;
  size_t v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  size_t v131;
  size_t v132;
  uint64_t (*v133)(char *, uint64_t, uint64_t);
  int v134;
  int v135;
  uint64_t *v136;
  uint64_t v137;
  unsigned int v138;
  uint64_t *v139;
  uint64_t v140;
  unsigned int v141;
  unint64_t v142;
  uint64_t (*v143)(unint64_t, uint64_t, uint64_t);
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  void (*v147)(unint64_t, unint64_t, uint64_t);
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  void *v152;
  unint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  size_t v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  unint64_t v160;
  _BYTE *v161;
  _BYTE *v162;
  uint64_t v163;
  char *v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  void *v168;
  void *v169;
  char v170;
  void *v171;
  void *v172;
  char v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t *v176;
  unint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  int v180;
  int v181;
  int v182;
  unint64_t v183;
  uint64_t v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  __int128 v191;
  void **v192;
  void **v193;
  void *v194;
  void *v195;
  id v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  unint64_t v204;
  unint64_t v205;
  int v207;
  int v208;
  uint64_t v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t __n;
  size_t __na;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  size_t v226;
  void *__src;
  char *__srca;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  v11 = v10 + 7;
  v225 = a1;
  __src = a2;
  v12 = (_QWORD *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  v219 = v11;
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80) & 0xF8;
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 | v21 | 7;
  v23 = (void *)((v22 + 9 + v14) & ~v22);
  v223 = v22;
  v24 = (void *)((v22 + 9 + v15) & ~v22);
  v25 = *(unsigned int *)(v17 + 84);
  v26 = *(unsigned int *)(v20 + 84);
  if (v25 <= v26)
    v27 = *(_DWORD *)(v20 + 84);
  else
    v27 = *(_DWORD *)(v17 + 84);
  if (v27 <= 0x7FFFFFFE)
    v28 = 2147483646;
  else
    v28 = v27;
  v29 = *(_QWORD *)(v17 + 64) + 7;
  v30 = v21 + 8;
  v31 = *(_QWORD *)(v20 + 64) + 7;
  __n = ((((v31 + ((v21 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v214 = ~v21;
  v216 = v19;
  if ((_DWORD)v25 == v28)
  {
    v212 = *(_QWORD *)(v20 + 64) + 7;
    v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
    v33 = v32(v23, v25, v16);
    v34 = v32(v24, v25, v16);
    if (v33)
      goto LABEL_21;
    goto LABEL_32;
  }
  v35 = (uint64_t *)(((unint64_t)v23 + v29) & 0xFFFFFFFFFFFFFFF8);
  if (v27 <= 0x7FFFFFFE)
  {
    v37 = *v35;
    if ((unint64_t)*v35 >= 0xFFFFFFFF)
      LODWORD(v37) = -1;
    v38 = v37 + 1;
    v36 = (uint64_t *)(((unint64_t)v24 + v29) & 0xFFFFFFFFFFFFFFF8);
    v39 = *v36;
    if ((unint64_t)*v36 >= 0xFFFFFFFF)
      LODWORD(v39) = -1;
    v40 = v39 + 1;
    if (v38 >= 2)
    {
      v212 = *(_QWORD *)(v20 + 64) + 7;
      if (v40 < 2)
        goto LABEL_37;
LABEL_34:
      v49 = __n;
      memcpy(v23, v24, __n);
      v50 = v223;
      goto LABEL_41;
    }
    if (v40 >= 2)
    {
LABEL_33:
      (*(void (**)(void *, uint64_t))(v17 + 8))(v23, v16);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(((unint64_t)v35 + v30) & v214, v216);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
LABEL_39:
    (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v23, v24, v16);
    *v35 = *v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 24))(((unint64_t)v35 + v30) & v214, ((unint64_t)v36 + v30) & v214, v216);
    v58 = (_QWORD *)((v31 + (((unint64_t)v35 + v30) & v214)) & 0xFFFFFFFFFFFFFFF8);
    v59 = (v31 + (((unint64_t)v36 + v30) & v214)) & 0xFFFFFFFFFFFFF8;
    v60 = *(_QWORD *)v59;
    v59 += 15;
    *v58 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v61 = (_QWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v61 = *(_QWORD *)(v59 & 0xFFFFFFFFFFFFFFF8);
    v61[1] = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v41 = v19;
  v210 = v23;
  v212 = *(_QWORD *)(v20 + 64) + 7;
  v42 = ((unint64_t)v35 + v30) & ~v21;
  v43 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v20 + 48);
  v44 = v24;
  v45 = v41;
  v46 = ~v21;
  v208 = v43(v42, v26, v41);
  v47 = (v30 + (((unint64_t)v44 + v29) & 0xFFFFFFFFFFFFFFF8)) & v46;
  v23 = v210;
  v48 = v45;
  v24 = v44;
  v34 = v43(v47, v26, v48);
  if (!v208)
  {
LABEL_32:
    v35 = (uint64_t *)(((unint64_t)v23 + v29) & 0xFFFFFFFFFFFFFFF8);
    if (v34)
      goto LABEL_33;
    v36 = (uint64_t *)(((unint64_t)v24 + v29) & 0xFFFFFFFFFFFFFFF8);
    v31 = v212;
    goto LABEL_39;
  }
LABEL_21:
  if (v34)
    goto LABEL_34;
  v35 = (uint64_t *)(((unint64_t)v23 + v29) & 0xFFFFFFFFFFFFFFF8);
  v36 = (uint64_t *)(((unint64_t)v24 + v29) & 0xFFFFFFFFFFFFFFF8);
LABEL_37:
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v23, v24, v16);
  *v35 = *v36;
  v51 = ((unint64_t)v35 + v30) & v214;
  v52 = ((unint64_t)v36 + v30) & v214;
  v53 = *(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 16);
  swift_bridgeObjectRetain();
  v53(v51, v52, v216);
  v54 = (_QWORD *)((v212 + v51) & 0xFFFFFFFFFFFFF8);
  v55 = (_QWORD *)((v212 + v52) & 0xFFFFFFFFFFFFF8);
  *v54 = *v55;
  v56 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
  v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_40:
  v49 = __n;
  v50 = v223;
LABEL_41:
  v62 = (uint64_t)v24 + v49 + 34;
  *((_BYTE *)v23 + v49) = *((_BYTE *)v24 + v49);
  v63 = (uint64_t)v23 + v49 + 34;
  *(_BYTE *)(((unint64_t)v23 + v49) | 1) = *(_BYTE *)(((unint64_t)v24 + v49) | 1);
  *(_BYTE *)(((unint64_t)v23 + v49) | 2) = *(_BYTE *)(((unint64_t)v24 + v49) | 2);
  v64 = ((unint64_t)v23 + v49 + 10) & 0xFFFFFFFFFFFFFFF8;
  v65 = ((unint64_t)v24 + v49 + 10) & 0xFFFFFFFFFFFFFFF8;
  v66 = *(id *)v65;
  v67 = *(void **)(v65 + 8);
  v68 = *(_BYTE *)(v65 + 16);
  sub_23AAAE478(*(id *)v65, v67, v68);
  v69 = *(void **)v64;
  v70 = *(void **)(v64 + 8);
  *(_QWORD *)v64 = v66;
  *(_QWORD *)(v64 + 8) = v67;
  v71 = *(_BYTE *)(v64 + 16);
  *(_BYTE *)(v64 + 16) = v68;
  sub_23AAAEE10(v69, v70, v71);
  v72 = v63 & 0xFFFFFFFFFFFFFFF8;
  v73 = v62 & 0xFFFFFFFFFFFFFFF8;
  v74 = (uint64_t *)(v72 + 8);
  v75 = *(_QWORD *)(v72 + 16);
  v76 = (uint64_t *)(v73 + 8);
  v77 = *(_QWORD *)(v73 + 16) >> 60;
  v81 = ((4 * (_DWORD)v77) & 0xC) == 0;
  v78 = (4 * v77) & 0xC | (v77 >> 2);
  v79 = v81;
  if (v78 == 15)
    v80 = 1;
  else
    v80 = v79;
  if (4 * ((v75 >> 60) & 3))
    v81 = (((v75 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v75 >> 60) & 3))) == 15;
  else
    v81 = 1;
  if (v81)
  {
    if (!v80)
    {
      if (v75 >> 60 != 15)
        sub_23AAAE53C(*v74, v75);
      goto LABEL_61;
    }
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v82 = *(_QWORD *)(v73 + 16);
    if (v75 >> 60 == 15)
    {
      if (v82 >> 60 != 15)
      {
        v83 = *v76;
        sub_23AAAE668(*v76, *(_QWORD *)(v73 + 16));
        *(_QWORD *)(v72 + 8) = v83;
        *(_QWORD *)(v72 + 16) = v82;
LABEL_68:
        v94 = *(_OWORD *)(v73 + 24);
        *(_BYTE *)(v72 + 40) = *(_BYTE *)(v73 + 40);
        *(_OWORD *)(v72 + 24) = v94;
        *(_QWORD *)(v72 + 48) = *(_QWORD *)(v73 + 48);
        v88 = v219;
        goto LABEL_69;
      }
    }
    else
    {
      if (v82 >> 60 != 15)
      {
        v91 = *v76;
        sub_23AAAE668(*v76, *(_QWORD *)(v73 + 16));
        v92 = *(_QWORD *)(v72 + 8);
        v93 = *(_QWORD *)(v72 + 16);
        *(_QWORD *)(v72 + 8) = v91;
        *(_QWORD *)(v72 + 16) = v82;
        sub_23AAAE53C(v92, v93);
        goto LABEL_68;
      }
      sub_23AB2D750(v72 + 8);
    }
    *(_OWORD *)v74 = *(_OWORD *)v76;
    goto LABEL_68;
  }
  if (!v80)
  {
LABEL_61:
    v85 = *(_OWORD *)v73;
    v86 = *(_OWORD *)(v73 + 16);
    v87 = *(_OWORD *)(v73 + 32);
    *(_QWORD *)(v72 + 48) = *(_QWORD *)(v73 + 48);
    *(_OWORD *)(v72 + 16) = v86;
    *(_OWORD *)(v72 + 32) = v87;
    *(_OWORD *)v72 = v85;
    v88 = v219;
    goto LABEL_69;
  }
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v84 = *(_QWORD *)(v73 + 16);
  if (v84 >> 60 == 15)
  {
    *(_OWORD *)v74 = *(_OWORD *)v76;
  }
  else
  {
    v89 = *v76;
    sub_23AAAE668(*v76, *(_QWORD *)(v73 + 16));
    *(_QWORD *)(v72 + 8) = v89;
    *(_QWORD *)(v72 + 16) = v84;
  }
  v88 = v219;
  v90 = *(_OWORD *)(v73 + 24);
  *(_BYTE *)(v72 + 40) = *(_BYTE *)(v73 + 40);
  *(_OWORD *)(v72 + 24) = v90;
  *(_QWORD *)(v72 + 48) = *(_QWORD *)(v73 + 48);
LABEL_69:
  v95 = (void **)((v72 + 63) & 0xFFFFFFFFFFFFFFF8);
  v96 = (void **)((v73 + 63) & 0xFFFFFFFFFFFFFFF8);
  v97 = *v96;
  v98 = *v95;
  *v95 = *v96;
  v99 = v97;

  *(_QWORD *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFF8);
  v100 = ((((((((((v88 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v50 + 9) & ~v50) + v49 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  v101 = swift_getAssociatedTypeWitness();
  v102 = *(_QWORD *)(v101 - 8);
  v103 = *(_DWORD *)(v102 + 80) & 0xF8;
  v224 = swift_getAssociatedTypeWitness();
  v104 = *(_QWORD *)(v224 - 8);
  v105 = *(_DWORD *)(v104 + 80) & 0xF8;
  v215 = swift_getAssociatedTypeWitness();
  v106 = *(_QWORD *)(v215 - 8);
  v107 = *(unsigned __int8 *)(v106 + 80);
  v108 = v105 | v107 | 7;
  v109 = v108 | v103;
  v110 = v100 + v109 + 8;
  v111 = ((unint64_t)v225 + v110) & ~v109;
  v112 = ((unint64_t)__src + v110) & ~v109;
  v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
  v114 = v113(v111, 1, v101);
  v115 = v113(v112, 1, v101);
  if (v114)
  {
    if (!v115)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16))(v111, v112, v101);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v102 + 56))(v111, 0, 1, v101);
      goto LABEL_78;
    }
  }
  else
  {
    if (!v115)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 24))(v111, v112, v101);
      goto LABEL_78;
    }
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v111, v101);
  }
  if (*(_DWORD *)(v102 + 84))
    v116 = *(_QWORD *)(v102 + 64);
  else
    v116 = *(_QWORD *)(v102 + 64) + 1;
  memcpy((void *)v111, (const void *)v112, v116);
LABEL_78:
  if (*(_DWORD *)(v102 + 84))
    v117 = *(_QWORD *)(v102 + 64);
  else
    v117 = *(_QWORD *)(v102 + 64) + 1;
  v217 = v112;
  v218 = v111;
  v118 = (_QWORD *)(((v112 | 7) + v117) & 0xFFFFFFFFFFFFFFF8);
  v119 = (_QWORD *)(((v111 | 7) + v117) & 0xFFFFFFFFFFFFFFF8);
  *v119 = *v118;
  v120 = ((unint64_t)v119 + 15) & 0xFFFFFFFFFFFFFFF8;
  v121 = ((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v120 = *(_QWORD *)v121;
  *(_BYTE *)(v120 + 8) = *(_BYTE *)(v121 + 8);
  v122 = (char *)((v108 + 9 + v120) & ~v108);
  __srca = (char *)((v108 + 9 + v121) & ~v108);
  v123 = *(unsigned int *)(v104 + 84);
  v124 = *(unsigned int *)(v106 + 84);
  if (v123 <= v124)
    v125 = *(_DWORD *)(v106 + 84);
  else
    v125 = *(_DWORD *)(v104 + 84);
  if (v125 <= 0x7FFFFFFE)
    v126 = 2147483646;
  else
    v126 = v125;
  v127 = *(_QWORD *)(v104 + 64) + 7;
  v128 = ~v107;
  v129 = v107 + 8;
  v130 = *(_QWORD *)(v106 + 64) + 7;
  v131 = ((((v130 + ((v107 + 8 + (v127 & 0xFFFFFFFFFFFFFFF8)) & ~v107)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v220 = v108 + 9;
  __na = v117;
  v211 = v128;
  if ((_DWORD)v123 == v126)
  {
    v209 = *(_QWORD *)(v106 + 64) + 7;
    v213 = v108;
    v132 = v131;
    v133 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
    v134 = v133(v122, v123, v224);
    v135 = v133(__srca, v123, v224);
    if (v134)
    {
LABEL_89:
      v131 = v132;
      v108 = v213;
      if (v135)
      {
LABEL_90:
        memcpy(v122, __srca, v131);
LABEL_107:
        v152 = v225;
        v153 = v217;
        v154 = v218;
        goto LABEL_111;
      }
      v136 = (uint64_t *)((unint64_t)&v122[v127] & 0xFFFFFFFFFFFFFFF8);
      v139 = (uint64_t *)((unint64_t)&__srca[v127] & 0xFFFFFFFFFFFFFFF8);
LABEL_106:
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v122, __srca, v224);
      *v136 = *v139;
      v145 = ((unint64_t)v136 + v129) & v211;
      v146 = ((unint64_t)v139 + v129) & v211;
      v147 = *(void (**)(unint64_t, unint64_t, uint64_t))(v106 + 16);
      swift_bridgeObjectRetain();
      v147(v145, v146, v215);
      v148 = (_QWORD *)((v209 + v145) & 0xFFFFFFFFFFFFF8);
      v149 = (_QWORD *)((v209 + v146) & 0xFFFFFFFFFFFFF8);
      *v148 = *v149;
      v150 = (_QWORD *)(((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8);
      v151 = (_QWORD *)(((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v150 = *v151;
      v150[1] = v151[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_107;
    }
  }
  else
  {
    v136 = (uint64_t *)((unint64_t)&v122[v127] & 0xFFFFFFFFFFFFFFF8);
    if (v125 <= 0x7FFFFFFE)
    {
      v137 = *v136;
      if ((unint64_t)*v136 >= 0xFFFFFFFF)
        LODWORD(v137) = -1;
      v138 = v137 + 1;
      v139 = (uint64_t *)((unint64_t)&__srca[v127] & 0xFFFFFFFFFFFFFFF8);
      v140 = *v139;
      if ((unint64_t)*v139 >= 0xFFFFFFFF)
        LODWORD(v140) = -1;
      v141 = v140 + 1;
      if (v138 >= 2)
      {
        v209 = *(_QWORD *)(v106 + 64) + 7;
        if (v141 >= 2)
          goto LABEL_90;
        goto LABEL_106;
      }
      v213 = v108;
      if (v141 >= 2)
        goto LABEL_102;
LABEL_109:
      (*(void (**)(char *, char *, uint64_t))(v104 + 24))(v122, __srca, v224);
      *v136 = *v139;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v106 + 24))(((unint64_t)v136 + v129) & v211, ((unint64_t)v139 + v129) & v211, v215);
      v155 = (_QWORD *)((v130 + (((unint64_t)v136 + v129) & v211)) & 0xFFFFFFFFFFFFFFF8);
      v156 = v131;
      v157 = (_QWORD *)((v130 + (((unint64_t)v139 + v129) & v211)) & 0xFFFFFFFFFFFFF8);
      *v155 = *v157;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v158 = (_QWORD *)(((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8);
      v159 = (_QWORD *)(((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFFFF8);
      v131 = v156;
      *v158 = *v159;
      v158[1] = v159[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_110;
    }
    v209 = *(_QWORD *)(v106 + 64) + 7;
    v213 = v108;
    v132 = v131;
    v142 = ((unint64_t)v136 + v129) & v128;
    v143 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v106 + 48);
    v144 = v128;
    v207 = v143(v142, v124, v215);
    v135 = v143((v129 + ((unint64_t)&__srca[v127] & 0xFFFFFFFFFFFFFFF8)) & v144, v124, v215);
    if (v207)
      goto LABEL_89;
  }
  v136 = (uint64_t *)((unint64_t)&v122[v127] & 0xFFFFFFFFFFFFFFF8);
  if (!v135)
  {
    v139 = (uint64_t *)((unint64_t)&__srca[v127] & 0xFFFFFFFFFFFFFFF8);
    v131 = v132;
    v130 = v209;
    goto LABEL_109;
  }
  v131 = v132;
LABEL_102:
  (*(void (**)(char *, uint64_t))(v104 + 8))(v122, v224);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v106 + 8))(((unint64_t)v136 + v129) & v211, v215);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v122, __srca, v131);
LABEL_110:
  v152 = v225;
  v153 = v217;
  v154 = v218;
  v108 = v213;
LABEL_111:
  v160 = (unint64_t)&v122[v131];
  v226 = v131;
  v161 = (_BYTE *)((unint64_t)&__srca[v131] | 1);
  v162 = (_BYTE *)((unint64_t)&__srca[v131] | 2);
  v163 = (uint64_t)&__srca[v131 + 10];
  v164 = &__srca[v131];
  *(_BYTE *)v160 = *v164;
  v165 = v160 + 34;
  *(_BYTE *)(v160 | 1) = *v161;
  v166 = ~v108;
  *(_BYTE *)(v160 | 2) = *v162;
  v167 = (v160 + 10) & 0xFFFFFFFFFFFFFFF8;
  v168 = *(void **)(v163 & 0xFFFFFFFFFFFFFFF8);
  v169 = *(void **)((v163 & 0xFFFFFFFFFFFFFFF8) + 8);
  v170 = *(_BYTE *)((v163 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_23AAAE478(v168, v169, v170);
  v171 = *(void **)v167;
  v172 = *(void **)(v167 + 8);
  *(_QWORD *)v167 = v168;
  *(_QWORD *)(v167 + 8) = v169;
  v173 = *(_BYTE *)(v167 + 16);
  *(_BYTE *)(v167 + 16) = v170;
  sub_23AAAEE10(v171, v172, v173);
  v174 = v165 & 0xFFFFFFFFFFFFFFF8;
  v175 = (unint64_t)(v164 + 34) & 0xFFFFFFFFFFFFFFF8;
  v176 = (uint64_t *)(v174 + 8);
  v177 = *(_QWORD *)(v174 + 16);
  v178 = (uint64_t *)(v175 + 8);
  v179 = *(_QWORD *)(v175 + 16) >> 60;
  v81 = ((4 * (_DWORD)v179) & 0xC) == 0;
  v180 = (4 * v179) & 0xC | (v179 >> 2);
  v181 = v81;
  if (v180 == 15)
    v182 = 1;
  else
    v182 = v181;
  if (!(4 * ((v177 >> 60) & 3)) || (((v177 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v177 >> 60) & 3))) == 0xF)
  {
    if (v182)
    {
      *(_QWORD *)v174 = *(_QWORD *)v175;
      v183 = *(_QWORD *)(v175 + 16);
      if (v177 >> 60 != 15)
      {
        if (v183 >> 60 != 15)
        {
          v188 = *v178;
          sub_23AAAE668(*v178, *(_QWORD *)(v175 + 16));
          v189 = *(_QWORD *)(v174 + 8);
          v190 = *(_QWORD *)(v174 + 16);
          *(_QWORD *)(v174 + 8) = v188;
          *(_QWORD *)(v174 + 16) = v183;
          sub_23AAAE53C(v189, v190);
          goto LABEL_132;
        }
        sub_23AB2D750(v174 + 8);
        goto LABEL_130;
      }
LABEL_123:
      if (v183 >> 60 != 15)
      {
        v184 = *v178;
        sub_23AAAE668(*v178, v183);
        *(_QWORD *)(v174 + 8) = v184;
        *(_QWORD *)(v174 + 16) = v183;
LABEL_132:
        v191 = *(_OWORD *)(v175 + 24);
        *(_BYTE *)(v174 + 40) = *(_BYTE *)(v175 + 40);
        *(_OWORD *)(v174 + 24) = v191;
        *(_QWORD *)(v174 + 48) = *(_QWORD *)(v175 + 48);
        goto LABEL_133;
      }
LABEL_130:
      *(_OWORD *)v176 = *(_OWORD *)v178;
      goto LABEL_132;
    }
    if (v177 >> 60 != 15)
      sub_23AAAE53C(*v176, v177);
  }
  else if (v182)
  {
    *(_QWORD *)v174 = *(_QWORD *)v175;
    v183 = *(_QWORD *)(v175 + 16);
    goto LABEL_123;
  }
  v185 = *(_OWORD *)v175;
  v186 = *(_OWORD *)(v175 + 16);
  v187 = *(_OWORD *)(v175 + 32);
  *(_QWORD *)(v174 + 48) = *(_QWORD *)(v175 + 48);
  *(_OWORD *)(v174 + 16) = v186;
  *(_OWORD *)(v174 + 32) = v187;
  *(_OWORD *)v174 = v185;
LABEL_133:
  v192 = (void **)((v174 + 63) & 0xFFFFFFFFFFFFFFF8);
  v193 = (void **)((v175 + 63) & 0xFFFFFFFFFFFFFFF8);
  v194 = *v193;
  v195 = *v192;
  *v192 = *v193;
  v196 = v194;

  *(_QWORD *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v193 + 15) & 0xFFFFFFFFFFFFF8);
  v197 = ((((((((v220 + ((((__na + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v166) + v226 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  v198 = v197 + v154;
  v199 = v197 + v153;
  *(_BYTE *)v198 = *(_BYTE *)v199;
  v200 = v198 & 0xFFFFFFFFFFFFFFF8;
  v201 = v199 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v199 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v202 = (_QWORD *)((v200 + 23) & 0xFFFFFFFFFFFFFFF8);
  v203 = (_QWORD *)((v201 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v202 = *v203;
  v202[1] = v203[1];
  v204 = ((unint64_t)v202 + 23) & 0xFFFFFFFFFFFFFFF8;
  v205 = ((unint64_t)v203 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v204 = *(_QWORD *)v205;
  *(_BYTE *)(v204 + 8) = *(_BYTE *)(v205 + 8);
  *(_QWORD *)(((unint64_t)v202 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v203 + 39) & 0xFFFFFFFFFFFFF8);
  return v152;
}

void *sub_23B0C2E68(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  size_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __int128 v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _QWORD *v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  size_t v60;
  size_t v61;
  size_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t v68;
  const void *v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  size_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  unint64_t v87;
  unint64_t v88;
  __int128 v89;
  unint64_t v90;
  unint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _QWORD *v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  _OWORD *v100;
  _OWORD *v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *__dst;
  unint64_t __dsta;
  size_t v111;
  size_t v112;
  uint64_t v113;
  const void *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  v10 = v9 + 7;
  v117 = a1;
  v11 = (_QWORD *)(((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  v112 = v10;
  v114 = a2;
  v12 = (_QWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 | v20 | 7;
  __dst = (char *)((v21 + 9 + v13) & ~v21);
  v22 = (const void *)((v21 + 9 + v14) & ~v21);
  v23 = *(unsigned int *)(v16 + 84);
  if (v23 <= *(_DWORD *)(v19 + 84))
    v24 = *(_DWORD *)(v19 + 84);
  else
    v24 = *(_DWORD *)(v16 + 84);
  if (v24 <= 0x7FFFFFFE)
    v25 = 2147483646;
  else
    v25 = v24;
  v26 = *(_QWORD *)(v16 + 64) + 7;
  v27 = v20 + 8;
  v28 = *(_QWORD *)(v19 + 64) + 7;
  v29 = ((((v28 + ((v20 + 8 + (v26 & 0xFFFFFFFFFFFFFFF8)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v105 = ~v20;
  v107 = v18;
  if ((_DWORD)v23 == v25)
  {
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v22, v23, v15))
      goto LABEL_26;
LABEL_25:
    v32 = __dst;
    memcpy(__dst, v22, v29);
    goto LABEL_28;
  }
  v30 = (uint64_t *)(((unint64_t)v22 + v26) & 0xFFFFFFFFFFFFFFF8);
  if (v24 <= 0x7FFFFFFE)
  {
    v31 = *v30;
    if ((unint64_t)*v30 >= 0xFFFFFFFF)
      LODWORD(v31) = -1;
    if ((v31 + 1) < 2)
      goto LABEL_27;
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(unint64_t))(v19 + 48))(((unint64_t)v30 + v27) & ~v20))
    goto LABEL_25;
LABEL_26:
  v30 = (uint64_t *)(((unint64_t)v22 + v26) & 0xFFFFFFFFFFFFFFF8);
LABEL_27:
  (*(void (**)(char *, const void *, uint64_t))(v16 + 32))(__dst, v22, v15);
  v33 = (unint64_t)&__dst[v26];
  v32 = __dst;
  v33 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v33 = *v30;
  v34 = (v27 + v33) & v105;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 32))(v34, ((unint64_t)v30 + v27) & v105, v107);
  v35 = (_QWORD *)((v28 + v34) & 0xFFFFFFFFFFFFF8);
  v36 = (_QWORD *)((v28 + (((unint64_t)v30 + v27) & v105)) & 0xFFFFFFFFFFFFF8);
  *v35 = *v36;
  *(_OWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFF8);
LABEL_28:
  v37 = (uint64_t)v22 + v29 + 34;
  v32[v29] = *((_BYTE *)v22 + v29);
  *(_BYTE *)((unint64_t)&v32[v29] | 1) = *(_BYTE *)(((unint64_t)v22 + v29) | 1);
  *(_BYTE *)((unint64_t)&v32[v29] | 2) = *(_BYTE *)(((unint64_t)v22 + v29) | 2);
  v38 = (unint64_t)&v32[v29 + 10] & 0xFFFFFFFFFFFFFFF8;
  v39 = ((unint64_t)v22 + v29 + 10) & 0xFFFFFFFFFFFFFFF8;
  v40 = *(_OWORD *)v39;
  *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
  *(_OWORD *)v38 = v40;
  v41 = (unint64_t)&v32[v29 + 34] & 0xFFFFFFFFFFFFFFF8;
  v42 = *(_OWORD *)(v37 & 0xFFFFFFFFFFFFFFF8);
  v43 = *(_OWORD *)((v37 & 0xFFFFFFFFFFFFFFF8) + 16);
  v44 = *(_OWORD *)((v37 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_QWORD *)(v41 + 48) = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFF8) + 48);
  *(_OWORD *)(v41 + 16) = v43;
  *(_OWORD *)(v41 + 32) = v44;
  *(_OWORD *)v41 = v42;
  v45 = (_QWORD *)((v41 + 63) & 0xFFFFFFFFFFFFF8);
  v46 = (_QWORD *)(((v37 & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFF8);
  *v45 = *v46;
  *(_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFF8);
  v47 = ((((((((((v112 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v21 + 9) & ~v21) + v29 + 34) & 0xFFFFFFFFFFFFFFF8)
         + 63) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(_DWORD *)(v49 + 80) & 0xF8;
  v108 = swift_getAssociatedTypeWitness();
  v51 = *(_QWORD *)(v108 - 8);
  v52 = *(_DWORD *)(v51 + 80) & 0xF8;
  v106 = swift_getAssociatedTypeWitness();
  v116 = *(_QWORD *)(v106 - 8);
  v53 = *(unsigned __int8 *)(v116 + 80);
  v54 = v52 | v53 | 7;
  v55 = v54 | v50;
  v56 = v47 + v55 + 8;
  v57 = ((unint64_t)v117 + v56) & ~v55;
  v58 = ((unint64_t)v114 + v56) & ~v55;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v58, 1, v48))
  {
    v59 = *(_DWORD *)(v49 + 84);
    v60 = *(_QWORD *)(v49 + 64);
    if (v59)
      v61 = v60;
    else
      v61 = v60 + 1;
    memcpy((void *)v57, (const void *)v58, v61);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v57, v58, v48);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v57, 0, 1, v48);
    v59 = *(_DWORD *)(v49 + 84);
    v60 = *(_QWORD *)(v49 + 64);
  }
  if (v59)
    v62 = v60;
  else
    v62 = v60 + 1;
  v113 = v58;
  v115 = v57;
  v63 = (_QWORD *)(((v57 | 7) + v62) & 0xFFFFFFFFFFFFFFF8);
  v111 = v62;
  v64 = (_QWORD *)(((v58 | 7) + v62) & 0xFFFFFFFFFFFFFFF8);
  *v63 = *v64;
  v65 = ((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  v66 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *(_BYTE *)(v65 + 8) = *(_BYTE *)(v66 + 8);
  __dsta = ~v54;
  v67 = (void *)((v54 + 9 + v65) & ~v54);
  v68 = v54 + 9;
  v69 = (const void *)((v54 + 9 + v66) & ~v54);
  v70 = *(_DWORD *)(v51 + 84);
  if (v70 <= *(_DWORD *)(v116 + 84))
    v71 = *(_DWORD *)(v116 + 84);
  else
    v71 = *(_DWORD *)(v51 + 84);
  if (v71 <= 0x7FFFFFFE)
    v72 = 2147483646;
  else
    v72 = v71;
  v73 = *(_QWORD *)(v51 + 64) + 7;
  v74 = ~v53;
  v75 = v53 + 8;
  v76 = *(_QWORD *)(v116 + 64) + 7;
  v77 = ((((v76 + ((v53 + 8 + (v73 & 0xFFFFFFFFFFFFFFF8)) & ~v53)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v70 == v72)
  {
    v78 = ~v53;
    if (!(*(unsigned int (**)(const void *, _QWORD, uint64_t))(v51 + 48))(v69, *(unsigned int *)(v51 + 84), v108))goto LABEL_53;
  }
  else
  {
    v79 = (_QWORD *)(((unint64_t)v69 + v73) & 0xFFFFFFFFFFFFFFF8);
    if (v71 > 0x7FFFFFFE)
    {
      v78 = ~v53;
      if (!(*(unsigned int (**)(unint64_t))(v116 + 48))(((unint64_t)v79 + v75) & v74))
      {
LABEL_53:
        v79 = (_QWORD *)(((unint64_t)v69 + v73) & 0xFFFFFFFFFFFFFFF8);
LABEL_54:
        (*(void (**)(void *, const void *, uint64_t))(v51 + 32))(v67, v69, v108);
        v81 = (_QWORD *)(((unint64_t)v67 + v73) & 0xFFFFFFFFFFFFFFF8);
        *v81 = *v79;
        v82 = v78;
        v83 = ((unint64_t)v81 + v75) & v78;
        v84 = ((unint64_t)v79 + v75) & v82;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v116 + 32))(v83, v84, v106);
        v85 = (_QWORD *)((v76 + v83) & 0xFFFFFFFFFFFFF8);
        v86 = (_QWORD *)((v76 + v84) & 0xFFFFFFFFFFFFF8);
        *v85 = *v86;
        *(_OWORD *)(((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFF8);
        goto LABEL_55;
      }
    }
    else
    {
      v78 = ~v53;
      v80 = *v79;
      if (*v79 >= 0xFFFFFFFFuLL)
        LODWORD(v80) = -1;
      if ((v80 + 1) < 2)
        goto LABEL_54;
    }
  }
  memcpy(v67, v69, v77);
LABEL_55:
  *((_BYTE *)v67 + v77) = *((_BYTE *)v69 + v77);
  *(_BYTE *)(((unint64_t)v67 + v77) | 1) = *(_BYTE *)(((unint64_t)v69 + v77) | 1);
  *(_BYTE *)(((unint64_t)v67 + v77) | 2) = *(_BYTE *)(((unint64_t)v69 + v77) | 2);
  v87 = ((unint64_t)v67 + v77 + 10) & 0xFFFFFFFFFFFFFFF8;
  v88 = ((unint64_t)v69 + v77 + 10) & 0xFFFFFFFFFFFFFFF8;
  v89 = *(_OWORD *)v88;
  *(_BYTE *)(v87 + 16) = *(_BYTE *)(v88 + 16);
  *(_OWORD *)v87 = v89;
  v90 = ((unint64_t)v67 + v77 + 34) & 0xFFFFFFFFFFFFFFF8;
  v91 = ((unint64_t)v69 + v77 + 34) & 0xFFFFFFFFFFFFFFF8;
  v92 = *(_OWORD *)v91;
  v93 = *(_OWORD *)(v91 + 16);
  v94 = *(_OWORD *)(v91 + 32);
  *(_QWORD *)(v90 + 48) = *(_QWORD *)(v91 + 48);
  *(_OWORD *)(v90 + 16) = v93;
  *(_OWORD *)(v90 + 32) = v94;
  *(_OWORD *)v90 = v92;
  v95 = (_QWORD *)((v90 + 63) & 0xFFFFFFFFFFFFF8);
  v96 = (_QWORD *)((v91 + 63) & 0xFFFFFFFFFFFFF8);
  *v95 = *v96;
  *(_QWORD *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFF8);
  v97 = ((((((((v68 + ((((v111 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & __dsta) + v77 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v98 = v97 + v115;
  v99 = v97 + v113;
  *(_BYTE *)v98 = *(_BYTE *)v99;
  v98 &= 0xFFFFFFFFFFFFFFF8;
  v99 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v98 + 8) = *(_QWORD *)(v99 + 8);
  v100 = (_OWORD *)((v98 + 23) & 0xFFFFFFFFFFFFFFF8);
  v101 = (_OWORD *)((v99 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v100 = *v101;
  v102 = ((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFFFF8;
  v103 = ((unint64_t)v101 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v102 = *(_QWORD *)v103;
  *(_BYTE *)(v102 + 8) = *(_BYTE *)(v103 + 8);
  *(_QWORD *)(((unint64_t)v100 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v101 + 39) & 0xFFFFFFFFFFFFF8);
  return v117;
}

void *sub_23B0C3688(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t (*v43)(unint64_t, uint64_t, uint64_t);
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  char v58;
  void *v59;
  void *v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  BOOL v65;
  uint64_t *v66;
  uint64_t v67;
  BOOL v68;
  _OWORD *v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  unint64_t v74;
  uint64_t v75;
  __int128 v76;
  void **v77;
  void **v78;
  void *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t);
  int v94;
  int v95;
  size_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  unint64_t v100;
  unint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  size_t v111;
  uint64_t (*v112)(void *, uint64_t, uint64_t);
  int v113;
  int v114;
  uint64_t *v115;
  uint64_t *v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t (*v121)(unint64_t, uint64_t, uint64_t);
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  char v132;
  void *v133;
  void *v134;
  char v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  size_t v142;
  uint64_t *v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  _QWORD *v148;
  unint64_t v149;
  uint64_t v150;
  __int128 v151;
  void **v152;
  void **v153;
  void *v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  unint64_t v162;
  unint64_t v163;
  int v165;
  size_t v166;
  int v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t __n;
  size_t __na;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  const void *v184;
  void *v185;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  v11 = v10 + 7;
  v183 = a1;
  v12 = (_QWORD *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  v184 = a2;
  v176 = v11;
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80) & 0xF8;
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 | v21 | 7;
  v23 = (void *)((v22 + 9 + v14) & ~v22);
  v180 = v22;
  v24 = (void *)((v22 + 9 + v15) & ~v22);
  v25 = *(unsigned int *)(v17 + 84);
  v26 = *(unsigned int *)(v20 + 84);
  if (v25 <= v26)
    v27 = *(_DWORD *)(v20 + 84);
  else
    v27 = *(_DWORD *)(v17 + 84);
  if (v27 <= 0x7FFFFFFE)
    v28 = 2147483646;
  else
    v28 = v27;
  v29 = *(_QWORD *)(v17 + 64) + 7;
  v30 = v21 + 8;
  v31 = *(_QWORD *)(v20 + 64) + 7;
  __n = ((((v31 + ((v21 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v172 = ~v21;
  v174 = v19;
  if ((_DWORD)v25 == v28)
  {
    v170 = *(_QWORD *)(v20 + 64) + 7;
    v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
    v33 = v32(v23, v25, v16);
    v34 = v32(v24, v25, v16);
    if (v33)
      goto LABEL_21;
    goto LABEL_32;
  }
  v35 = (uint64_t *)(((unint64_t)v23 + v29) & 0xFFFFFFFFFFFFFFF8);
  if (v27 <= 0x7FFFFFFE)
  {
    v37 = *v35;
    if ((unint64_t)*v35 >= 0xFFFFFFFF)
      LODWORD(v37) = -1;
    v38 = v37 + 1;
    v36 = (uint64_t *)(((unint64_t)v24 + v29) & 0xFFFFFFFFFFFFFFF8);
    v39 = *v36;
    if ((unint64_t)*v36 >= 0xFFFFFFFF)
      LODWORD(v39) = -1;
    v40 = v39 + 1;
    if (v38 >= 2)
    {
      v170 = *(_QWORD *)(v20 + 64) + 7;
      if (v40 < 2)
        goto LABEL_37;
LABEL_34:
      v48 = __n;
      memcpy(v23, v24, __n);
      v49 = v180;
      goto LABEL_41;
    }
    if (v40 >= 2)
    {
LABEL_33:
      (*(void (**)(void *, uint64_t))(v17 + 8))(v23, v16);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(((unint64_t)v35 + v30) & v172, v174);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
LABEL_39:
    (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v23, v24, v16);
    *v35 = *v36;
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 40))(((unint64_t)v35 + v30) & v172, ((unint64_t)v36 + v30) & v172, v174);
    v52 = (_QWORD *)((v31 + (((unint64_t)v35 + v30) & v172)) & 0xFFFFFFFFFFFFFFF8);
    v53 = (v31 + (((unint64_t)v36 + v30) & v172)) & 0xFFFFFFFFFFFFF8;
    v54 = *(_QWORD *)v53;
    v53 += 15;
    *v52 = v54;
    swift_bridgeObjectRelease();
    v55 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v55 = *(_QWORD *)(v53 & 0xFFFFFFFFFFFFFFF8);
    v55[1] = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v41 = v19;
  v169 = v23;
  v170 = *(_QWORD *)(v20 + 64) + 7;
  v42 = ((unint64_t)v35 + v30) & ~v21;
  v43 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v20 + 48);
  v44 = v41;
  v45 = v24;
  v46 = ~v21;
  v167 = v43(v42, v26, v41);
  v47 = (v30 + (((unint64_t)v45 + v29) & 0xFFFFFFFFFFFFFFF8)) & v46;
  v24 = v45;
  v23 = v169;
  v34 = v43(v47, v26, v44);
  if (!v167)
  {
LABEL_32:
    v35 = (uint64_t *)(((unint64_t)v23 + v29) & 0xFFFFFFFFFFFFFFF8);
    if (v34)
      goto LABEL_33;
    v36 = (uint64_t *)(((unint64_t)v24 + v29) & 0xFFFFFFFFFFFFFFF8);
    v31 = v170;
    goto LABEL_39;
  }
LABEL_21:
  if (v34)
    goto LABEL_34;
  v35 = (uint64_t *)(((unint64_t)v23 + v29) & 0xFFFFFFFFFFFFFFF8);
  v36 = (uint64_t *)(((unint64_t)v24 + v29) & 0xFFFFFFFFFFFFFFF8);
LABEL_37:
  (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v23, v24, v16);
  *v35 = *v36;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(((unint64_t)v35 + v30) & v172, ((unint64_t)v36 + v30) & v172, v174);
  v50 = (_QWORD *)((v170 + (((unint64_t)v35 + v30) & v172)) & 0xFFFFFFFFFFFFF8);
  v51 = (_QWORD *)((v170 + (((unint64_t)v36 + v30) & v172)) & 0xFFFFFFFFFFFFF8);
  *v50 = *v51;
  *(_OWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
LABEL_40:
  v49 = v180;
  v48 = __n;
LABEL_41:
  *((_BYTE *)v23 + v48) = *((_BYTE *)v24 + v48);
  *(_BYTE *)(((unint64_t)v23 + v48) | 1) = *(_BYTE *)(((unint64_t)v24 + v48) | 1);
  *(_BYTE *)(((unint64_t)v23 + v48) | 2) = *(_BYTE *)(((unint64_t)v24 + v48) | 2);
  v56 = ((unint64_t)v23 + v48 + 10) & 0xFFFFFFFFFFFFFFF8;
  v57 = ((unint64_t)v24 + v48 + 10) & 0xFFFFFFFFFFFFFFF8;
  v58 = *(_BYTE *)(v57 + 16);
  v59 = *(void **)v56;
  v60 = *(void **)(v56 + 8);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  v61 = *(_BYTE *)(v56 + 16);
  *(_BYTE *)(v56 + 16) = v58;
  sub_23AAAEE10(v59, v60, v61);
  v62 = ((unint64_t)v23 + v48 + 34) & 0xFFFFFFFFFFFFFFF8;
  v63 = ((unint64_t)v24 + v48 + 34) & 0xFFFFFFFFFFFFFFF8;
  v64 = *(_QWORD *)(v62 + 16);
  if (4 * ((v64 >> 60) & 3))
    v65 = (((v64 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v64 >> 60) & 3))) == 15;
  else
    v65 = 1;
  if (!v65)
  {
LABEL_55:
    v71 = *(_OWORD *)v63;
    v72 = *(_OWORD *)(v63 + 16);
    v73 = *(_OWORD *)(v63 + 32);
    *(_QWORD *)(v62 + 48) = *(_QWORD *)(v63 + 48);
    *(_OWORD *)(v62 + 16) = v72;
    *(_OWORD *)(v62 + 32) = v73;
    *(_OWORD *)v62 = v71;
    v70 = v176;
    goto LABEL_60;
  }
  v66 = (uint64_t *)(v62 + 8);
  v67 = *(_QWORD *)(v63 + 16) >> 60;
  if (4 * (v67 & 3))
    v68 = ((v67 >> 2) & 0xFFFFFFF3 | (4 * (v67 & 3))) == 15;
  else
    v68 = 1;
  if (!v68)
  {
    if (v64 >> 60 != 15)
      sub_23AAAE53C(*v66, v64);
    goto LABEL_55;
  }
  v69 = (_OWORD *)(v63 + 8);
  *(_QWORD *)v62 = *(_QWORD *)v63;
  if (v64 >> 60 == 15)
  {
    *(_OWORD *)v66 = *v69;
    v70 = v176;
  }
  else
  {
    v74 = *(_QWORD *)(v63 + 16);
    v70 = v176;
    if (v74 >> 60 == 15)
    {
      sub_23AB2D750(v62 + 8);
      *(_OWORD *)v66 = *v69;
    }
    else
    {
      v75 = *(_QWORD *)(v62 + 8);
      *(_QWORD *)(v62 + 8) = *(_QWORD *)v69;
      *(_QWORD *)(v62 + 16) = v74;
      sub_23AAAE53C(v75, v64);
    }
  }
  v76 = *(_OWORD *)(v63 + 24);
  *(_BYTE *)(v62 + 40) = *(_BYTE *)(v63 + 40);
  *(_OWORD *)(v62 + 24) = v76;
  *(_QWORD *)(v62 + 48) = *(_QWORD *)(v63 + 48);
LABEL_60:
  v77 = (void **)((v62 + 63) & 0xFFFFFFFFFFFFFFF8);
  v78 = (void **)((v63 + 63) & 0xFFFFFFFFFFFFFFF8);
  v79 = *v77;
  *v77 = *v78;

  *(_QWORD *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFF8);
  v80 = ((((((((((v70 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v49 + 9) & ~v49) + v48 + 34) & 0xFFFFFFFFFFFFFFF8)
         + 63) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  v81 = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(_DWORD *)(v82 + 80) & 0xF8;
  v182 = swift_getAssociatedTypeWitness();
  v84 = *(_QWORD *)(v182 - 8);
  v85 = *(_DWORD *)(v84 + 80) & 0xF8;
  v173 = swift_getAssociatedTypeWitness();
  v86 = *(_QWORD *)(v173 - 8);
  v87 = *(unsigned __int8 *)(v86 + 80);
  v88 = v85 | v87 | 7;
  v89 = v88 | v83;
  v90 = v80 + v89 + 8;
  v91 = ((unint64_t)v183 + v90) & ~v89;
  v92 = ((unint64_t)v184 + v90) & ~v89;
  v93 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
  v94 = v93(v91, 1, v81);
  v95 = v93(v92, 1, v81);
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v91, v92, v81);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v91, 0, 1, v81);
      goto LABEL_69;
    }
  }
  else
  {
    if (!v95)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 40))(v91, v92, v81);
      goto LABEL_69;
    }
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v91, v81);
  }
  if (*(_DWORD *)(v82 + 84))
    v96 = *(_QWORD *)(v82 + 64);
  else
    v96 = *(_QWORD *)(v82 + 64) + 1;
  memcpy((void *)v91, (const void *)v92, v96);
LABEL_69:
  if (*(_DWORD *)(v82 + 84))
    v97 = *(_QWORD *)(v82 + 64);
  else
    v97 = *(_QWORD *)(v82 + 64) + 1;
  v175 = v92;
  v177 = v91;
  v98 = (_QWORD *)(((v92 | 7) + v97) & 0xFFFFFFFFFFFFFFF8);
  v99 = (_QWORD *)(((v91 | 7) + v97) & 0xFFFFFFFFFFFFFFF8);
  *v99 = *v98;
  v100 = ((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8;
  v101 = ((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v100 = *(_QWORD *)v101;
  *(_BYTE *)(v100 + 8) = *(_BYTE *)(v101 + 8);
  v102 = (void *)((v88 + 9 + v100) & ~v88);
  v185 = (void *)((v88 + 9 + v101) & ~v88);
  v103 = *(unsigned int *)(v84 + 84);
  v104 = *(unsigned int *)(v86 + 84);
  if (v103 <= v104)
    v105 = *(_DWORD *)(v86 + 84);
  else
    v105 = *(_DWORD *)(v84 + 84);
  if (v105 <= 0x7FFFFFFE)
    v106 = 2147483646;
  else
    v106 = v105;
  v107 = *(_QWORD *)(v84 + 64) + 7;
  v108 = ~v87;
  v109 = v87 + 8;
  v110 = *(_QWORD *)(v86 + 64) + 7;
  v111 = ((((v110 + ((v87 + 8 + (v107 & 0xFFFFFFFFFFFFFFF8)) & ~v87)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  __na = v88 + 9;
  v181 = v97;
  v171 = v108;
  if ((_DWORD)v103 == v106)
  {
    v166 = v111;
    v168 = v88;
    v112 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v84 + 48);
    v113 = v112(v102, v103, v182);
    v114 = v112(v185, v103, v182);
    if (v113)
      goto LABEL_80;
    goto LABEL_91;
  }
  v115 = (uint64_t *)(((unint64_t)v102 + v107) & 0xFFFFFFFFFFFFFFF8);
  if (v105 <= 0x7FFFFFFE)
  {
    v117 = *v115;
    if ((unint64_t)*v115 >= 0xFFFFFFFF)
      LODWORD(v117) = -1;
    v118 = v117 + 1;
    v116 = (uint64_t *)(((unint64_t)v185 + v107) & 0xFFFFFFFFFFFFFFF8);
    v119 = *v116;
    if ((unint64_t)*v116 >= 0xFFFFFFFF)
      LODWORD(v119) = -1;
    v120 = v119 + 1;
    if (v118 >= 2)
    {
      if (v120 < 2)
        goto LABEL_97;
      goto LABEL_94;
    }
    if (v120 >= 2)
    {
LABEL_93:
      (*(void (**)(void *, uint64_t))(v84 + 8))(v102, v182);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v86 + 8))(((unint64_t)v115 + v109) & v171, v173);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_94;
    }
LABEL_99:
    (*(void (**)(void *, void *, uint64_t))(v84 + 40))(v102, v185, v182);
    *v115 = *v116;
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v86 + 40))(((unint64_t)v115 + v109) & v171, ((unint64_t)v116 + v109) & v171, v173);
    v125 = (_QWORD *)((v110 + (((unint64_t)v115 + v109) & v171)) & 0xFFFFFFFFFFFFFFF8);
    v126 = (v110 + (((unint64_t)v116 + v109) & v171)) & 0xFFFFFFFFFFFFF8;
    v127 = *(_QWORD *)v126;
    v126 += 15;
    *v125 = v127;
    swift_bridgeObjectRelease();
    v128 = (_QWORD *)(((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v128 = *(_QWORD *)(v126 & 0xFFFFFFFFFFFFFFF8);
    v128[1] = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRelease();
    goto LABEL_100;
  }
  v166 = v111;
  v168 = v88;
  v121 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v86 + 48);
  v122 = v108;
  v165 = v121(((unint64_t)v115 + v109) & v108, v104, v173);
  v114 = v121((v109 + (((unint64_t)v185 + v107) & 0xFFFFFFFFFFFFFFF8)) & v122, v104, v173);
  if (!v165)
  {
LABEL_91:
    v115 = (uint64_t *)(((unint64_t)v102 + v107) & 0xFFFFFFFFFFFFFFF8);
    if (v114)
    {
      v111 = v166;
      v88 = v168;
      goto LABEL_93;
    }
    v116 = (uint64_t *)(((unint64_t)v185 + v107) & 0xFFFFFFFFFFFFFFF8);
    v111 = v166;
    v88 = v168;
    goto LABEL_99;
  }
LABEL_80:
  v111 = v166;
  v88 = v168;
  if (!v114)
  {
    v115 = (uint64_t *)(((unint64_t)v102 + v107) & 0xFFFFFFFFFFFFFFF8);
    v116 = (uint64_t *)(((unint64_t)v185 + v107) & 0xFFFFFFFFFFFFFFF8);
LABEL_97:
    (*(void (**)(void *, void *, uint64_t))(v84 + 32))(v102, v185, v182);
    *v115 = *v116;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v86 + 32))(((unint64_t)v115 + v109) & v171, ((unint64_t)v116 + v109) & v171, v173);
    v123 = (_QWORD *)((v110 + (((unint64_t)v115 + v109) & v171)) & 0xFFFFFFFFFFFFF8);
    v124 = (_QWORD *)((v110 + (((unint64_t)v116 + v109) & v171)) & 0xFFFFFFFFFFFFF8);
    *v123 = *v124;
    *(_OWORD *)(((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFF8);
    goto LABEL_100;
  }
LABEL_94:
  memcpy(v102, v185, v111);
LABEL_100:
  *((_BYTE *)v102 + v111) = *((_BYTE *)v185 + v111);
  *(_BYTE *)(((unint64_t)v102 + v111) | 1) = *(_BYTE *)(((unint64_t)v185 + v111) | 1);
  v129 = ~v88;
  *(_BYTE *)(((unint64_t)v102 + v111) | 2) = *(_BYTE *)(((unint64_t)v185 + v111) | 2);
  v130 = ((unint64_t)v102 + v111 + 10) & 0xFFFFFFFFFFFFFFF8;
  v131 = ((unint64_t)v185 + v111 + 10) & 0xFFFFFFFFFFFFFFF8;
  v132 = *(_BYTE *)(v131 + 16);
  v133 = *(void **)v130;
  v134 = *(void **)(v130 + 8);
  *(_OWORD *)v130 = *(_OWORD *)v131;
  v135 = *(_BYTE *)(v130 + 16);
  *(_BYTE *)(v130 + 16) = v132;
  sub_23AAAEE10(v133, v134, v135);
  v136 = ((unint64_t)v102 + v111 + 34) & 0xFFFFFFFFFFFFFFF8;
  v137 = ((unint64_t)v185 + v111 + 34) & 0xFFFFFFFFFFFFFFF8;
  v138 = *(_QWORD *)(v136 + 16);
  if (4 * ((v138 >> 60) & 3) && (((v138 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v138 >> 60) & 3))) != 0xF)
  {
    v139 = *(_OWORD *)v137;
    v140 = *(_OWORD *)(v137 + 16);
    v141 = *(_OWORD *)(v137 + 32);
    *(_QWORD *)(v136 + 48) = *(_QWORD *)(v137 + 48);
    *(_OWORD *)(v136 + 16) = v140;
    *(_OWORD *)(v136 + 32) = v141;
    *(_OWORD *)v136 = v139;
    goto LABEL_114;
  }
  v142 = v111;
  v143 = (uint64_t *)(v136 + 8);
  v144 = *(_QWORD *)(v137 + 16) >> 60;
  if (!(4 * (v144 & 3)) || ((v144 >> 2) & 0xFFFFFFF3 | (4 * (v144 & 3))) == 0xF)
  {
    v148 = (_QWORD *)(v137 + 8);
    *(_QWORD *)v136 = *(_QWORD *)v137;
    if (v138 >> 60 != 15)
    {
      v149 = *(_QWORD *)(v137 + 16);
      if (v149 >> 60 != 15)
      {
        v150 = *(_QWORD *)(v136 + 8);
        *(_QWORD *)(v136 + 8) = *v148;
        *(_QWORD *)(v136 + 16) = v149;
        sub_23AAAE53C(v150, v138);
        goto LABEL_113;
      }
      sub_23AB2D750(v136 + 8);
    }
    *(_OWORD *)v143 = *(_OWORD *)v148;
LABEL_113:
    v111 = v142;
    v151 = *(_OWORD *)(v137 + 24);
    *(_BYTE *)(v136 + 40) = *(_BYTE *)(v137 + 40);
    *(_OWORD *)(v136 + 24) = v151;
    *(_QWORD *)(v136 + 48) = *(_QWORD *)(v137 + 48);
    goto LABEL_114;
  }
  if (v138 >> 60 != 15)
    sub_23AAAE53C(*v143, v138);
  v145 = *(_OWORD *)v137;
  v146 = *(_OWORD *)(v137 + 16);
  v147 = *(_OWORD *)(v137 + 32);
  *(_QWORD *)(v136 + 48) = *(_QWORD *)(v137 + 48);
  *(_OWORD *)(v136 + 16) = v146;
  *(_OWORD *)(v136 + 32) = v147;
  *(_OWORD *)v136 = v145;
  v111 = v142;
LABEL_114:
  v152 = (void **)((v136 + 63) & 0xFFFFFFFFFFFFFFF8);
  v153 = (void **)((v137 + 63) & 0xFFFFFFFFFFFFFFF8);
  v154 = *v152;
  *v152 = *v153;

  *(_QWORD *)(((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFF8);
  v155 = ((((((((__na + ((((v181 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v129) + v111 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  v156 = v155 + v177;
  v157 = v155 + v175;
  *(_BYTE *)v156 = *(_BYTE *)v157;
  v158 = v156 & 0xFFFFFFFFFFFFFFF8;
  v159 = v157 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v156 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  v160 = (_QWORD *)((v158 + 23) & 0xFFFFFFFFFFFFFFF8);
  v161 = (_QWORD *)((v159 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v160 = *v161;
  v160[1] = v161[1];
  v162 = ((unint64_t)v160 + 23) & 0xFFFFFFFFFFFFFFF8;
  v163 = ((unint64_t)v161 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v162 = *(_QWORD *)v163;
  *(_BYTE *)(v162 + 8) = *(_BYTE *)(v163 + 8);
  *(_QWORD *)(((unint64_t)v160 + 39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v161 + 39) & 0xFFFFFFFFFFFFF8);
  return v183;
}

uint64_t sub_23B0C444C()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_23B1C6C98();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
  }
  return result;
}

uint64_t *sub_23B0C4600(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  size_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  const void *v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(unint64_t, unint64_t, uint64_t);
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  void *v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t *v55;
  unint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  _QWORD *v62;
  void **v63;
  void *v64;
  id v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t __n;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v3 + 84))
    v4 = *(_QWORD *)(v3 + 64);
  else
    v4 = *(_QWORD *)(v3 + 64) + 1;
  v73 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v73 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  v10 = *(_DWORD *)(v8 + 80);
  v11 = v6 & 0xF8 | v10 | 7;
  v12 = *(unsigned int *)(v5 + 84);
  if (v12 <= v9)
    v13 = *(_DWORD *)(v8 + 84);
  else
    v13 = *(_DWORD *)(v5 + 84);
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  v74 = *(_QWORD *)(v5 + 64) + 7;
  __n = ((((*(_QWORD *)(v8 + 64) + 7 + ((v10 + 8 + (v74 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v15 = *(_DWORD *)(v3 + 80) & 0xF8 | v11;
  if ((_DWORD)v15 != 7
    || ((*(_DWORD *)(v8 + 80) | v6 | *(_DWORD *)(v3 + 80)) & 0x100000) != 0
    || ((((((((v11 + ((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v11) + __n + 34) & 0xFFFFFFFFFFFFFFF8)
         + 63) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    v19 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
    return v19;
  }
  v72 = v14;
  v67 = *(_QWORD *)(v8 + 64) + 7;
  v68 = v10 + 8;
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  v19 = a1;
  v71 = ~v11;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v3 + 48))(a2, 1, AssociatedTypeWitness))
  {
    memcpy(a1, a2, v4);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  v21 = ~v10;
  v22 = (_QWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)a2 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  v26 = (char *)((v24 + v11 + 9) & v71);
  v27 = (const void *)((v25 + v11 + 9) & v71);
  if ((_DWORD)v12 == v72)
  {
    v28 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))((v25 + v11 + 9) & v71, v12, v73);
    v29 = v74;
    if (!v28)
      goto LABEL_32;
  }
  else
  {
    v29 = v74;
    v30 = (_QWORD *)(((unint64_t)v27 + v74) & 0xFFFFFFFFFFFFFFF8);
    if (v13 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v69 + 48))(((unint64_t)v30 + v68) & v21, v9, v70))
      {
LABEL_32:
        v30 = (_QWORD *)(((unint64_t)v27 + v29) & 0xFFFFFFFFFFFFFFF8);
LABEL_33:
        (*(void (**)(char *, const void *, uint64_t))(v5 + 16))(v26, v27, v73);
        v33 = (_QWORD *)((unint64_t)&v26[v29] & 0xFFFFFFFFFFFFFFF8);
        *v33 = *v30;
        v34 = ((unint64_t)v33 + v68) & v21;
        v35 = ((unint64_t)v30 + v68) & v21;
        v36 = *(void (**)(unint64_t, unint64_t, uint64_t))(v69 + 16);
        swift_bridgeObjectRetain();
        v36(v34, v35, v70);
        v37 = (_QWORD *)((v67 + v34) & 0xFFFFFFFFFFFFF8);
        v38 = (_QWORD *)((v67 + v35) & 0xFFFFFFFFFFFFF8);
        *v37 = *v38;
        v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
        v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v39 = *v40;
        v39[1] = v40[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32 = __n;
        goto LABEL_34;
      }
    }
    else
    {
      v31 = *v30;
      if (*v30 >= 0xFFFFFFFFuLL)
        LODWORD(v31) = -1;
      if ((v31 + 1) < 2)
        goto LABEL_33;
    }
  }
  v32 = __n;
  memcpy(v26, v27, __n);
LABEL_34:
  v41 = (unint64_t)&v26[v32];
  v42 = (_BYTE *)(((unint64_t)v27 + v32) | 1);
  v43 = (_BYTE *)(((unint64_t)v27 + v32) | 2);
  v44 = (uint64_t)v27 + v32 + 10;
  v45 = (uint64_t)v27 + v32 + 34;
  *(_BYTE *)v41 = *((_BYTE *)v27 + v32);
  v46 = v41 + 34;
  *(_BYTE *)(v41 | 1) = *v42;
  *(_BYTE *)(v41 | 2) = *v43;
  v47 = (v41 + 10) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(void **)(v44 & 0xFFFFFFFFFFFFFFF8);
  v49 = *(void **)((v44 & 0xFFFFFFFFFFFFFFF8) + 8);
  v50 = *(_BYTE *)((v44 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_23AAAE478(v48, v49, v50);
  *(_QWORD *)v47 = v48;
  *(_QWORD *)(v47 + 8) = v49;
  *(_BYTE *)(v47 + 16) = v50;
  v51 = v46 & 0xFFFFFFFFFFFFFFF8;
  v52 = v45 & 0xFFFFFFFFFFFFFFF8;
  v53 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  if (4 * (v53 & 3))
    v54 = ((v53 >> 2) & 0xFFFFFFF3 | (4 * (v53 & 3))) == 15;
  else
    v54 = 1;
  if (v54)
  {
    v55 = (uint64_t *)(v52 + 8);
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v56 = *(_QWORD *)(v52 + 16);
    if (v56 >> 60 == 15)
    {
      *(_OWORD *)(v51 + 8) = *(_OWORD *)v55;
    }
    else
    {
      v60 = *v55;
      sub_23AAAE668(*v55, *(_QWORD *)(v52 + 16));
      *(_QWORD *)(v51 + 8) = v60;
      *(_QWORD *)(v51 + 16) = v56;
    }
    v61 = *(_OWORD *)(v52 + 24);
    *(_BYTE *)(v51 + 40) = *(_BYTE *)(v52 + 40);
    *(_OWORD *)(v51 + 24) = v61;
    *(_QWORD *)(v51 + 48) = *(_QWORD *)(v52 + 48);
  }
  else
  {
    v57 = *(_OWORD *)v52;
    v58 = *(_OWORD *)(v52 + 16);
    v59 = *(_OWORD *)(v52 + 32);
    *(_QWORD *)(v51 + 48) = *(_QWORD *)(v52 + 48);
    *(_OWORD *)(v51 + 16) = v58;
    *(_OWORD *)(v51 + 32) = v59;
    *(_OWORD *)v51 = v57;
  }
  v62 = (_QWORD *)((v51 + 63) & 0xFFFFFFFFFFFFF8);
  v63 = (void **)((v52 + 63) & 0xFFFFFFFFFFFFFFF8);
  v64 = *v63;
  *v62 = *v63;
  *(_QWORD *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFF8);
  v65 = v64;
  return v19;
}

void *sub_23B0C4AF4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  size_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void *v36;
  const void *v37;
  uint64_t *v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t *v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t (*v51)(unint64_t, uint64_t, uint64_t);
  unint64_t v52;
  unint64_t v53;
  void (*v54)(unint64_t, unint64_t, uint64_t);
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  void *v68;
  char v69;
  void *v70;
  void *v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  int v79;
  int v80;
  int v81;
  BOOL v82;
  unint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  __int128 v91;
  void **v92;
  void **v93;
  void *v94;
  void *v95;
  id v96;
  int v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  size_t __n;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  v11 = v10 + 7;
  v12 = (_QWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80) & 0xF8;
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 | v21 | 7;
  v23 = (v22 + 9 + v14) & ~v22;
  v24 = (v22 + 9 + v15) & ~v22;
  v25 = *(unsigned int *)(v17 + 84);
  v26 = *(unsigned int *)(v20 + 84);
  if (v25 <= v26)
    v27 = *(_DWORD *)(v20 + 84);
  else
    v27 = *(_DWORD *)(v17 + 84);
  if (v27 <= 0x7FFFFFFE)
    v28 = 2147483646;
  else
    v28 = v27;
  v29 = *(_QWORD *)(v17 + 64) + 7;
  v30 = ((((*(_QWORD *)(v20 + 64) + 7 + ((v21 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v103 = *(_QWORD *)(v20 + 64) + 7;
  v104 = v19;
  v101 = v21 + 8;
  v102 = ~v21;
  if ((_DWORD)v25 == v28)
  {
    __n = ((((*(_QWORD *)(v20 + 64) + 7 + ((v21 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    v100 = a1;
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    v32 = v31(v23, v25, v16);
    v33 = v16;
    v34 = v24;
    v99 = v33;
    v35 = ((uint64_t (*)(uint64_t, uint64_t))v31)(v24, v25);
    if (v32)
    {
LABEL_21:
      a1 = v100;
      v24 = v34;
      v30 = __n;
      if (v35)
      {
LABEL_22:
        v36 = (void *)v23;
        v37 = (const void *)v24;
LABEL_35:
        memcpy(v36, v37, v30);
        goto LABEL_42;
      }
      v38 = (uint64_t *)((v29 + v23) & 0xFFFFFFFFFFFFFFF8);
      v41 = (uint64_t *)((v29 + v34) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  v38 = (uint64_t *)((v29 + v23) & 0xFFFFFFFFFFFFFFF8);
  if (v27 > 0x7FFFFFFE)
  {
    v44 = v19;
    v99 = v16;
    v100 = a1;
    __n = ((((*(_QWORD *)(v20 + 64) + 7 + ((v21 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    v45 = ((unint64_t)v38 + v21 + 8) & ~v21;
    v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    v47 = v44;
    v48 = ~v21;
    v49 = v21 + 8;
    v50 = v46(v45, v26, v44);
    v51 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v46;
    v98 = v50;
    v34 = v24;
    v35 = v51((v49 + ((v29 + v24) & 0xFFFFFFFFFFFFFFF8)) & v48, v26, v47);
    if (v98)
      goto LABEL_21;
LABEL_32:
    v38 = (uint64_t *)((v29 + v23) & 0xFFFFFFFFFFFFFFF8);
    if (v35)
    {
      v24 = v34;
      v16 = v99;
      a1 = v100;
      goto LABEL_34;
    }
    v41 = (uint64_t *)((v29 + v34) & 0xFFFFFFFFFFFFFFF8);
    v24 = v34;
    v16 = v99;
    a1 = v100;
    goto LABEL_41;
  }
  v39 = *v38;
  if ((unint64_t)*v38 >= 0xFFFFFFFF)
    LODWORD(v39) = -1;
  v40 = v39 + 1;
  v41 = (uint64_t *)((v29 + v24) & 0xFFFFFFFFFFFFFFF8);
  v42 = *v41;
  if ((unint64_t)*v41 >= 0xFFFFFFFF)
    LODWORD(v42) = -1;
  v43 = v42 + 1;
  if (v40 >= 2)
  {
    v99 = v16;
    if (v43 >= 2)
      goto LABEL_22;
LABEL_39:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v23, v24, v99);
    *v38 = *v41;
    v52 = ((unint64_t)v38 + v101) & v102;
    v53 = ((unint64_t)v41 + v101) & v102;
    v54 = *(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 16);
    swift_bridgeObjectRetain();
    v54(v52, v53, v104);
    v55 = (_QWORD *)((v103 + v52) & 0xFFFFFFFFFFFFF8);
    v56 = (_QWORD *)((v103 + v53) & 0xFFFFFFFFFFFFF8);
    *v55 = *v56;
    v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
    v58 = (_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v57 = *v58;
    v57[1] = v58[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_42;
  }
  __n = v30;
  if (v43 >= 2)
  {
LABEL_34:
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v23, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v20 + 8))(((unint64_t)v38 + v101) & v102, v104);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = (void *)v23;
    v37 = (const void *)v24;
    v30 = __n;
    goto LABEL_35;
  }
LABEL_41:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(v23, v24, v16);
  *v38 = *v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 24))(((unint64_t)v38 + v101) & v102, ((unint64_t)v41 + v101) & v102, v104);
  v59 = (_QWORD *)((v103 + (((unint64_t)v38 + v101) & v102)) & 0xFFFFFFFFFFFFFFF8);
  v60 = (v103 + (((unint64_t)v41 + v101) & v102)) & 0xFFFFFFFFFFFFF8;
  v61 = *(_QWORD *)v60;
  v60 += 15;
  *v59 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62 = (_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v62 = *(_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF8);
  v62[1] = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = __n;
LABEL_42:
  v63 = v30 + v24 + 10;
  v64 = v30 + v24 + 34;
  *(_BYTE *)(v30 + v23) = *(_BYTE *)(v30 + v24);
  v65 = v30 + v23 + 34;
  *(_BYTE *)((v30 + v23) | 1) = *(_BYTE *)((v30 + v24) | 1);
  *(_BYTE *)((v30 + v23) | 2) = *(_BYTE *)((v30 + v24) | 2);
  v66 = (v30 + v23 + 10) & 0xFFFFFFFFFFFFFFF8;
  v67 = *(void **)(v63 & 0xFFFFFFFFFFFFFFF8);
  v68 = *(void **)((v63 & 0xFFFFFFFFFFFFFFF8) + 8);
  v69 = *(_BYTE *)((v63 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_23AAAE478(v67, v68, v69);
  v70 = *(void **)v66;
  v71 = *(void **)(v66 + 8);
  *(_QWORD *)v66 = v67;
  *(_QWORD *)(v66 + 8) = v68;
  v72 = *(_BYTE *)(v66 + 16);
  *(_BYTE *)(v66 + 16) = v69;
  sub_23AAAEE10(v70, v71, v72);
  v73 = v65 & 0xFFFFFFFFFFFFFFF8;
  v74 = v64 & 0xFFFFFFFFFFFFFFF8;
  v75 = (uint64_t *)(v73 + 8);
  v76 = *(_QWORD *)(v73 + 16);
  v77 = (uint64_t *)((v64 & 0xFFFFFFFFFFFFFFF8) + 8);
  v78 = *(_QWORD *)(v74 + 16) >> 60;
  v82 = ((4 * (_DWORD)v78) & 0xC) == 0;
  v79 = (4 * v78) & 0xC | (v78 >> 2);
  v80 = v82;
  if (v79 == 15)
    v81 = 1;
  else
    v81 = v80;
  if (4 * ((v76 >> 60) & 3))
    v82 = (((v76 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v76 >> 60) & 3))) == 15;
  else
    v82 = 1;
  if (v82)
  {
    if (v81)
    {
      *(_QWORD *)v73 = *(_QWORD *)v74;
      v83 = *(_QWORD *)(v74 + 16);
      if (v76 >> 60 != 15)
      {
        if (v83 >> 60 != 15)
        {
          v88 = *v77;
          sub_23AAAE668(*v77, *(_QWORD *)(v74 + 16));
          v89 = *(_QWORD *)(v73 + 8);
          v90 = *(_QWORD *)(v73 + 16);
          *(_QWORD *)(v73 + 8) = v88;
          *(_QWORD *)(v73 + 16) = v83;
          sub_23AAAE53C(v89, v90);
          goto LABEL_66;
        }
        sub_23AB2D750(v73 + 8);
        goto LABEL_60;
      }
LABEL_59:
      if (v83 >> 60 != 15)
      {
        v87 = *v77;
        sub_23AAAE668(*v77, v83);
        *(_QWORD *)(v73 + 8) = v87;
        *(_QWORD *)(v73 + 16) = v83;
        goto LABEL_66;
      }
LABEL_60:
      *(_OWORD *)v75 = *(_OWORD *)v77;
LABEL_66:
      v91 = *(_OWORD *)(v74 + 24);
      *(_BYTE *)(v73 + 40) = *(_BYTE *)(v74 + 40);
      *(_OWORD *)(v73 + 24) = v91;
      *(_QWORD *)(v73 + 48) = *(_QWORD *)(v74 + 48);
      goto LABEL_67;
    }
    if (v76 >> 60 != 15)
      sub_23AAAE53C(*v75, v76);
  }
  else if (v81)
  {
    *(_QWORD *)v73 = *(_QWORD *)v74;
    v83 = *(_QWORD *)(v74 + 16);
    goto LABEL_59;
  }
  v84 = *(_OWORD *)v74;
  v85 = *(_OWORD *)(v74 + 16);
  v86 = *(_OWORD *)(v74 + 32);
  *(_QWORD *)(v73 + 48) = *(_QWORD *)(v74 + 48);
  *(_OWORD *)(v73 + 16) = v85;
  *(_OWORD *)(v73 + 32) = v86;
  *(_OWORD *)v73 = v84;
LABEL_67:
  v92 = (void **)((v73 + 63) & 0xFFFFFFFFFFFFFFF8);
  v93 = (void **)((v74 + 63) & 0xFFFFFFFFFFFFFFF8);
  v94 = *v93;
  v95 = *v92;
  *v92 = *v93;
  v96 = v94;

  *(_QWORD *)(((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void *sub_23B0C51EC(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  size_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  unint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  void *v50;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  v10 = v9 + 7;
  v50 = a1;
  v11 = (_QWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 | v20 | 7;
  v22 = (void *)((v21 + 9 + v13) & ~v21);
  v23 = (const void *)((v21 + 9 + v14) & ~v21);
  v24 = *(unsigned int *)(v16 + 84);
  if (v24 <= *(_DWORD *)(v19 + 84))
    v25 = *(_DWORD *)(v19 + 84);
  else
    v25 = *(_DWORD *)(v16 + 84);
  if (v25 <= 0x7FFFFFFE)
    v26 = 2147483646;
  else
    v26 = v25;
  v27 = *(_QWORD *)(v16 + 64) + 7;
  v28 = v20 + 8;
  v29 = *(_QWORD *)(v19 + 64) + 7;
  v30 = ((((v29 + ((v20 + 8 + (v27 & 0xFFFFFFFFFFFFFFF8)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v48 = ~v20;
  v49 = v18;
  if ((_DWORD)v24 == v26)
  {
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v23, v24, v15))
      goto LABEL_26;
  }
  else
  {
    v31 = (_QWORD *)(((unint64_t)v23 + v27) & 0xFFFFFFFFFFFFFFF8);
    if (v25 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t))(v19 + 48))(((unint64_t)v31 + v28) & ~v20))
      {
LABEL_26:
        v31 = (_QWORD *)(((unint64_t)v23 + v27) & 0xFFFFFFFFFFFFFFF8);
LABEL_27:
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v22, v23, v15);
        v33 = (_QWORD *)(((unint64_t)v22 + v27) & 0xFFFFFFFFFFFFFFF8);
        *v33 = *v31;
        v34 = ((unint64_t)v33 + v28) & v48;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 32))(v34, ((unint64_t)v31 + v28) & v48, v49);
        v35 = (_QWORD *)((v29 + v34) & 0xFFFFFFFFFFFFF8);
        v36 = (_QWORD *)((v29 + (((unint64_t)v31 + v28) & v48)) & 0xFFFFFFFFFFFFF8);
        *v35 = *v36;
        *(_OWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFF8);
        goto LABEL_28;
      }
    }
    else
    {
      v32 = *v31;
      if (*v31 >= 0xFFFFFFFFuLL)
        LODWORD(v32) = -1;
      if ((v32 + 1) < 2)
        goto LABEL_27;
    }
  }
  memcpy(v22, v23, v30);
LABEL_28:
  v37 = (uint64_t)v23 + v30 + 10;
  *((_BYTE *)v22 + v30) = *((_BYTE *)v23 + v30);
  *(_BYTE *)(((unint64_t)v22 + v30) | 1) = *(_BYTE *)(((unint64_t)v23 + v30) | 1);
  *(_BYTE *)(((unint64_t)v22 + v30) | 2) = *(_BYTE *)(((unint64_t)v23 + v30) | 2);
  v38 = ((unint64_t)v22 + v30 + 10) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_OWORD *)(v37 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v38 + 16) = *(_BYTE *)((v37 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)v38 = v39;
  v40 = ((unint64_t)v22 + v30 + 34) & 0xFFFFFFFFFFFFFFF8;
  v41 = ((unint64_t)v23 + v30 + 34) & 0xFFFFFFFFFFFFFFF8;
  v42 = *(_OWORD *)v41;
  v43 = *(_OWORD *)(v41 + 16);
  v44 = *(_OWORD *)(v41 + 32);
  *(_QWORD *)(v40 + 48) = *(_QWORD *)(v41 + 48);
  *(_OWORD *)(v40 + 16) = v43;
  *(_OWORD *)(v40 + 32) = v44;
  *(_OWORD *)v40 = v42;
  v45 = (_QWORD *)((v40 + 63) & 0xFFFFFFFFFFFFF8);
  v46 = (_QWORD *)((v41 + 63) & 0xFFFFFFFFFFFFF8);
  *v45 = *v46;
  *(_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFF8);
  return v50;
}

void *sub_23B0C556C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  size_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void *v36;
  const void *v37;
  uint64_t *v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t *v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t (*v51)(unint64_t, uint64_t, uint64_t);
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  size_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  void *v62;
  void *v63;
  char v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  BOOL v68;
  uint64_t *v69;
  uint64_t v70;
  BOOL v71;
  _QWORD *v72;
  unint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  void **v79;
  void **v80;
  void *v81;
  int v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  size_t __n;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  v11 = v10 + 7;
  v12 = (_QWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80) & 0xF8;
  v19 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 | v21 | 7;
  v23 = (v22 + 9 + v14) & ~v22;
  v24 = (v22 + 9 + v15) & ~v22;
  v25 = *(unsigned int *)(v17 + 84);
  v26 = *(unsigned int *)(v20 + 84);
  if (v25 <= v26)
    v27 = *(_DWORD *)(v20 + 84);
  else
    v27 = *(_DWORD *)(v17 + 84);
  if (v27 <= 0x7FFFFFFE)
    v28 = 2147483646;
  else
    v28 = v27;
  v29 = *(_QWORD *)(v17 + 64) + 7;
  v30 = ((((*(_QWORD *)(v20 + 64) + 7 + ((v21 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v88 = *(_QWORD *)(v20 + 64) + 7;
  v89 = v19;
  v86 = v21 + 8;
  v87 = ~v21;
  if ((_DWORD)v25 == v28)
  {
    __n = ((((*(_QWORD *)(v20 + 64) + 7 + ((v21 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    v85 = a1;
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    v32 = v31(v23, v25, v16);
    v33 = v16;
    v34 = v24;
    v84 = v33;
    v35 = ((uint64_t (*)(uint64_t, uint64_t))v31)(v24, v25);
    if (v32)
    {
LABEL_21:
      a1 = v85;
      v24 = v34;
      v30 = __n;
      if (v35)
      {
LABEL_22:
        v36 = (void *)v23;
        v37 = (const void *)v24;
LABEL_35:
        memcpy(v36, v37, v30);
        goto LABEL_42;
      }
      v38 = (uint64_t *)((v29 + v23) & 0xFFFFFFFFFFFFFFF8);
      v41 = (uint64_t *)((v29 + v34) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  v38 = (uint64_t *)((v29 + v23) & 0xFFFFFFFFFFFFFFF8);
  if (v27 > 0x7FFFFFFE)
  {
    v44 = v19;
    v84 = v16;
    v85 = a1;
    __n = ((((*(_QWORD *)(v20 + 64) + 7 + ((v21 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    v45 = ((unint64_t)v38 + v21 + 8) & ~v21;
    v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    v47 = v44;
    v48 = ~v21;
    v49 = v21 + 8;
    v50 = v46(v45, v26, v44);
    v51 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v46;
    v83 = v50;
    v34 = v24;
    v35 = v51((v49 + ((v29 + v24) & 0xFFFFFFFFFFFFFFF8)) & v48, v26, v47);
    if (v83)
      goto LABEL_21;
LABEL_32:
    v38 = (uint64_t *)((v29 + v23) & 0xFFFFFFFFFFFFFFF8);
    if (v35)
    {
      v24 = v34;
      v16 = v84;
      a1 = v85;
      goto LABEL_34;
    }
    v41 = (uint64_t *)((v29 + v34) & 0xFFFFFFFFFFFFFFF8);
    v24 = v34;
    v16 = v84;
    a1 = v85;
    goto LABEL_41;
  }
  v39 = *v38;
  if ((unint64_t)*v38 >= 0xFFFFFFFF)
    LODWORD(v39) = -1;
  v40 = v39 + 1;
  v41 = (uint64_t *)((v29 + v24) & 0xFFFFFFFFFFFFFFF8);
  v42 = *v41;
  if ((unint64_t)*v41 >= 0xFFFFFFFF)
    LODWORD(v42) = -1;
  v43 = v42 + 1;
  if (v40 >= 2)
  {
    v84 = v16;
    if (v43 >= 2)
      goto LABEL_22;
LABEL_39:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v23, v24, v84);
    *v38 = *v41;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(((unint64_t)v38 + v86) & v87, ((unint64_t)v41 + v86) & v87, v89);
    v52 = (_QWORD *)((v88 + (((unint64_t)v38 + v86) & v87)) & 0xFFFFFFFFFFFFF8);
    v53 = (_QWORD *)((v88 + (((unint64_t)v41 + v86) & v87)) & 0xFFFFFFFFFFFFF8);
    *v52 = *v53;
    *(_OWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFF8);
    goto LABEL_42;
  }
  __n = v30;
  if (v43 >= 2)
  {
LABEL_34:
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v23, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v20 + 8))(((unint64_t)v38 + v86) & v87, v89);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = (void *)v23;
    v37 = (const void *)v24;
    v30 = __n;
    goto LABEL_35;
  }
LABEL_41:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(v23, v24, v16);
  *v38 = *v41;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 40))(((unint64_t)v38 + v86) & v87, ((unint64_t)v41 + v86) & v87, v89);
  v54 = (_QWORD *)((v88 + (((unint64_t)v38 + v86) & v87)) & 0xFFFFFFFFFFFFFFF8);
  v55 = (v88 + (((unint64_t)v41 + v86) & v87)) & 0xFFFFFFFFFFFFF8;
  v56 = *(_QWORD *)v55;
  v55 += 15;
  *v54 = v56;
  swift_bridgeObjectRelease();
  v57 = (_QWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v57 = *(_QWORD *)(v55 & 0xFFFFFFFFFFFFFFF8);
  v57[1] = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  v30 = __n;
LABEL_42:
  v58 = v30 + v23;
  *(_BYTE *)v58 = *(_BYTE *)(v30 + v24);
  *(_BYTE *)(v58 | 1) = *(_BYTE *)((v30 + v24) | 1);
  *(_BYTE *)(v58 | 2) = *(_BYTE *)((v30 + v24) | 2);
  v59 = (v30 + v23 + 10) & 0xFFFFFFFFFFFFFFF8;
  v60 = (v30 + v24 + 10) & 0xFFFFFFFFFFFFFFF8;
  v61 = *(_BYTE *)(v60 + 16);
  v62 = *(void **)v59;
  v63 = *(void **)(v59 + 8);
  *(_OWORD *)v59 = *(_OWORD *)v60;
  v64 = *(_BYTE *)(v59 + 16);
  *(_BYTE *)(v59 + 16) = v61;
  sub_23AAAEE10(v62, v63, v64);
  v65 = (v30 + v23 + 34) & 0xFFFFFFFFFFFFFFF8;
  v66 = (v30 + v24 + 34) & 0xFFFFFFFFFFFFFFF8;
  v67 = *(_QWORD *)(v65 + 16);
  if (4 * ((v67 >> 60) & 3))
    v68 = (((v67 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v67 >> 60) & 3))) == 15;
  else
    v68 = 1;
  if (!v68)
    goto LABEL_58;
  v69 = (uint64_t *)(v65 + 8);
  v70 = *(_QWORD *)(v66 + 16) >> 60;
  if (4 * (v70 & 3))
    v71 = ((v70 >> 2) & 0xFFFFFFF3 | (4 * (v70 & 3))) == 15;
  else
    v71 = 1;
  if (v71)
  {
    v72 = (_QWORD *)(v66 + 8);
    *(_QWORD *)v65 = *(_QWORD *)v66;
    if (v67 >> 60 != 15)
    {
      v73 = *(_QWORD *)(v66 + 16);
      if (v73 >> 60 != 15)
      {
        v77 = *(_QWORD *)(v65 + 8);
        *(_QWORD *)(v65 + 8) = *v72;
        *(_QWORD *)(v65 + 16) = v73;
        sub_23AAAE53C(v77, v67);
        goto LABEL_60;
      }
      sub_23AB2D750(v65 + 8);
    }
    *(_OWORD *)v69 = *(_OWORD *)v72;
LABEL_60:
    v78 = *(_OWORD *)(v66 + 24);
    *(_BYTE *)(v65 + 40) = *(_BYTE *)(v66 + 40);
    *(_OWORD *)(v65 + 24) = v78;
    *(_QWORD *)(v65 + 48) = *(_QWORD *)(v66 + 48);
    goto LABEL_61;
  }
  if (v67 >> 60 != 15)
    sub_23AAAE53C(*v69, v67);
LABEL_58:
  v74 = *(_OWORD *)v66;
  v75 = *(_OWORD *)(v66 + 16);
  v76 = *(_OWORD *)(v66 + 32);
  *(_QWORD *)(v65 + 48) = *(_QWORD *)(v66 + 48);
  *(_OWORD *)(v65 + 16) = v75;
  *(_OWORD *)(v65 + 32) = v76;
  *(_OWORD *)v65 = v74;
LABEL_61:
  v79 = (void **)((v65 + 63) & 0xFFFFFFFFFFFFFFF8);
  v80 = (void **)((v66 + 63) & 0xFFFFFFFFFFFFFFF8);
  v81 = *v79;
  *v79 = *v80;

  *(_QWORD *)(((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23B0C5BD8(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(unsigned int *)(v4 + 84);
  if ((_DWORD)v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  v31 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v31 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = v8;
  if (v12 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = v12;
  if (v6 <= v13 - 1)
    v14 = v13 - 1;
  else
    v14 = v6;
  if (v14 <= 0x7FFFFFFE)
    v15 = 2147483646;
  else
    v15 = v14;
  if ((_DWORD)v5)
    v16 = *(_QWORD *)(v4 + 64);
  else
    v16 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v17 = v9;
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = *(_DWORD *)(v7 + 80) & 0xF8 | v18 | 7;
  v20 = *(_QWORD *)(v7 + 64) + 7;
  v21 = ((((*(_QWORD *)(v10 + 64) + ((v18 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v15 < a2)
  {
    if (((((((((((v19 + ((((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v19) + v21 + 34) & 0xFFFFFFFFFFFFFFF8)
             + 63) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v22 = 2;
    else
      v22 = a2 - v15 + 1;
    if (v22 >= 0x10000)
      v23 = 4;
    else
      v23 = 2;
    if (v22 < 0x100)
      v23 = 1;
    if (v22 >= 2)
      v24 = v23;
    else
      v24 = 0;
    __asm { BR              X7 }
  }
  if (v6 == v15)
  {
    if (v5 < 2)
      return 0;
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 48))(a1, v5, AssociatedTypeWitness, v21);
    goto LABEL_40;
  }
  v26 = (((((a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v19 + 9) & ~v19;
  if (v13 - 1 == v15)
  {
    if ((_DWORD)v8 == v13)
    {
      v27 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, unint64_t))(v7 + 48))(v26, v8, v31, v21);
    }
    else
    {
      v29 = (uint64_t *)((v20 + v26) & 0xFFFFFFFFFFFFFFF8);
      if (v12 > 0x7FFFFFFE)
      {
        v27 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, unint64_t))(v10 + 48))(((unint64_t)v29 + v18 + 8) & ~v18, v11, v17, v21);
      }
      else
      {
        v30 = *v29;
        if ((unint64_t)*v29 >= 0xFFFFFFFF)
          LODWORD(v30) = -1;
        if ((v30 + 1) >= 2)
          v27 = v30;
        else
          v27 = 0;
      }
    }
LABEL_40:
    if (v27 >= 2)
      return v27 - 1;
    else
      return 0;
  }
  v28 = *(_QWORD *)((((v26 + v21 + 10) & 0xFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFF8);
  if (v28 >= 0xFFFFFFFF)
    LODWORD(v28) = -1;
  if ((v28 + 1) >= 2)
    return v28;
  else
    return 0;
}

void sub_23B0C5EF8(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  _DWORD *v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  unsigned int v21;

  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  v8 = *(_DWORD **)(swift_getAssociatedTypeWitness() - 8);
  v9 = v8[21];
  v10 = 0;
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (v9 <= *(_DWORD *)(v11 + 84))
    v12 = *(_DWORD *)(v11 + 84);
  else
    v12 = v9;
  if (v12 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = v12;
  if (v7 <= v13 - 1)
    v14 = v13 - 1;
  else
    v14 = v7;
  if (v14 <= 0x7FFFFFFE)
    v15 = 2147483646;
  else
    v15 = v14;
  if (v6)
    v16 = *(_QWORD *)(v5 + 64);
  else
    v16 = *(_QWORD *)(v5 + 64) + 1;
  v17 = *(unsigned __int8 *)(v11 + 80);
  v18 = v8[20] & 0xF8 | v17 | 7;
  if (v15 < a3)
  {
    if ((((((((((_DWORD)v18 + (((((_DWORD)v16 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9) & ~(_DWORD)v18)
             + ((((*(_DWORD *)(v11 + 64) + (((_DWORD)v17 + 8 + ((v8[16] + 7) & 0xFFFFFFF8)) & ~(_DWORD)v17) + 7) & 0xFFFFFFF8)
               + 15) & 0xFFFFFFF8)
             + 16
             + 34) & 0xFFFFFFF8)
           + 63) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v19 = a3 - v15 + 1;
    else
      v19 = 2;
    if (v19 >= 0x10000)
      v20 = 4;
    else
      v20 = 2;
    if (v19 < 0x100)
      v20 = 1;
    if (v19 >= 2)
      v10 = v20;
    else
      v10 = 0;
  }
  if (a2 > v15)
  {
    if ((((((((((_DWORD)v18 + (((((_DWORD)v16 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9) & ~(_DWORD)v18)
             + ((((*(_DWORD *)(v11 + 64) + (((_DWORD)v17 + 8 + ((v8[16] + 7) & 0xFFFFFFF8)) & ~(_DWORD)v17) + 7) & 0xFFFFFFF8)
               + 15) & 0xFFFFFFF8)
             + 16
             + 34) & 0xFFFFFFF8)
           + 63) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v21 = ~v15 + a2;
      bzero(a1, ((((((((v18 + ((((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v18)+ ((((*(_QWORD *)(v11 + 64) + ((v17 + 8 + ((*((_QWORD *)v8 + 8) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16+ 34) & 0xFFFFFFFFFFFFFFF8)+ 63) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v21;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X6 }
}

void sub_23B0C611C(uint64_t a1@<X0>, size_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  _DWORD *v18;
  uint64_t v19;
  unsigned int v20;
  _QWORD *v21;
  _QWORD *v22;

  *(_BYTE *)(a1 + v16) = 0;
  if (v10)
  {
    if (v11 == a3)
    {
      v17 = *(void (**)(void))(v14 + 56);
LABEL_4:
      v17();
      return;
    }
    v18 = (_DWORD *)((((((a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 9) & v15);
    if (v7 == a3)
    {
      v19 = v10 + 1;
      if (v19 <= v5)
      {
        if (v10 != -1)
        {
          if (v13 == v5)
          {
            v17 = *(void (**)(void))(v12 + 56);
            goto LABEL_4;
          }
          v22 = (_QWORD *)(((unint64_t)v18 + v6) & 0xFFFFFFFFFFFFFFF8);
          if (v4 > 0x7FFFFFFE)
          {
            v17 = *(void (**)(void))(v3 + 56);
            goto LABEL_4;
          }
          if (v19 > 0x7FFFFFFE)
          {
            *v22 = 0;
            *(_DWORD *)v22 = v10 - 2147483646;
          }
          else
          {
            *v22 = v19;
          }
        }
      }
      else if ((_DWORD)a2)
      {
        v20 = v10 - v5;
        bzero((void *)((((((a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 9) & v15), a2);
        *v18 = v20;
      }
    }
    else
    {
      v21 = (_QWORD *)(((((unint64_t)v18 + a2 + 10) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
      if (v10 > 0x7FFFFFFE)
      {
        *v21 = 0;
        *(_DWORD *)v21 = v10 - 0x7FFFFFFF;
      }
      else
      {
        *v21 = v10;
      }
    }
  }
}

void sub_23B0C62A4(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;
  _QWORD v25[2];
  int v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = v3;
  v29 = a3;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = type metadata accessor for ItemReconciliationHalf(0, v6, v7, a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v25 - v10;
  v27 = (char *)v25 - v10;
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 40);
  v15 = type metadata accessor for ItemReconciliationHalf(0, v12, v13, v14);
  MEMORY[0x24BDAC7A8](v15);
  v28 = (char *)v25 - v16;
  (*(void (**)(void))(v17 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v4, v8);
  v18 = *(int *)(a1 + 56);
  v19 = *(int *)(a1 + 60);
  v25[1] = v4;
  v20 = *(_QWORD *)(v4 + v19);
  v26 = *(unsigned __int8 *)(v4 + v18);
  v38 = v20;
  v30 = v6;
  v31 = v12;
  v32 = v7;
  v33 = v13;
  v25[0] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  v34 = AssociatedTypeWitness;
  v35 = v22;
  v36 = AssociatedConformanceWitness;
  v37 = v24;
  type metadata accessor for ReconciliationID();
}

void sub_23B0C6450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23B1C67DC();
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v0;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v3;
  type metadata accessor for ReconciliationID();
}

void sub_23B0C6474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v1);
  v9 = sub_23AD7E264((void (*)(char *, char *))sub_23B0CD908, v5 - 176, v1, a1, MEMORY[0x24BEE4078], v7, MEMORY[0x24BEE40A8], v8);
  swift_bridgeObjectRelease();
  sub_23B0C9E68(*(_QWORD *)(v5 - 192), v9, *(_QWORD *)(v5 - 184), *(_QWORD *)(*(_QWORD *)(v5 - 216) + *(int *)(v2 + 76)), v3, *(_QWORD *)(v5 - 224), v4);
}

void sub_23B0C6534(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v6);
  sub_23B0C6760(a1, a2, a3);
}

void sub_23B0C65B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v0;
  type metadata accessor for ItemReconciliation();
}

void sub_23B0C65C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23B0C6760(v3, v2, v1 + *(int *)(a1 + 52));
}

void sub_23B0C65E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;

  *(_BYTE *)(v0 + *(int *)(v1 + 56)) = 4;
  *(_QWORD *)(v2 - 152) = *(int *)(v1 + 60);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v2 - 128) = AssociatedTypeWitness;
  *(_QWORD *)(v2 - 120) = v4;
  *(_QWORD *)(v2 - 112) = AssociatedConformanceWitness;
  *(_QWORD *)(v2 - 104) = v6;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23B0C668C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t result;
  double v8;
  _QWORD *v9;

  *(_QWORD *)(v0 + *(_QWORD *)(v3 - 152)) = sub_23B1C6758();
  v4 = v2[16];
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v6 = v5;
  result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 144) + 8))(v1, *(_QWORD *)(v3 - 136));
  v8 = v6 * 1000000000.0;
  if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 < 9.22337204e18)
  {
    v9 = (_QWORD *)(v0 + v4);
    *v9 = 0x2000000000000000;
    v9[1] = (uint64_t)v8;
    *(_QWORD *)(v0 + v2[17]) = 0;
    *(_BYTE *)(v0 + v2[18]) = 0;
    *(_QWORD *)(v0 + v2[19]) = 0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_23B0C6760(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  int *v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, 1, 1, AssociatedTypeWitness);
  v8 = (int *)type metadata accessor for ItemReconciliationHalf(0, a1, a2, v7);
  *(_QWORD *)(a3 + v8[9]) = 0;
  *(_QWORD *)(a3 + v8[10]) = 0;
  *(_BYTE *)(a3 + v8[11]) = 3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

double sub_23B0C6890(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v3, 1, 1, a1);
  *(_BYTE *)(v1 + v2[13]) = 0;
  *(_BYTE *)(v1 + v2[14]) = 6;
  *(_BYTE *)(v1 + v2[15]) = 0;
  v4 = v1 + v2[16];
  *(_OWORD *)v4 = xmmword_23B1CFCA0;
  *(_BYTE *)(v4 + 16) = 4;
  v5 = v1 + v2[17];
  *(_QWORD *)v5 = 0;
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = 0xB000000000000000;
  result = 0.0;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_QWORD *)(v1 + v2[18]) = 0;
  *(_QWORD *)(v1 + v2[19]) = 0;
  return result;
}

uint64_t sub_23B0C6934@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

BOOL sub_23B0C6AC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BOOL8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_23B1C6C98();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - v7;
  v9 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_getAssociatedTypeWitness();
  v13 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - v15, v2, v13);
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v16, 1, v12);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2, a1);
  if ((_DWORD)v12 == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
    return 0;
  }
  else
  {
    v19 = v21;
    v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v8, &v11[*(int *)(a1 + 52)], v22);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
    v17 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v8, 1, AssociatedTypeWitness) != 1;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
  }
  return v17;
}

uint64_t sub_23B0C6CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  unint64_t v32;

  v2 = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_23B1C6C98();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - v6;
  v8 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_getAssociatedTypeWitness();
  v12 = sub_23B1C6C98();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v27 - v14, v2, v12);
  LODWORD(v11) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v15, 1, v11);
  v16 = v12;
  v17 = v2;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v2, a1);
  if ((_DWORD)v11 == 1)
  {
    v19 = v28;
    v18 = v29;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v7, &v10[*(int *)(a1 + 52)], v29);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a1);
    v20 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v7, 1);
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    if (v20 == 1)
    {
      sub_23AB23A94();
      swift_allocError();
      v23 = v22;
      v31 = 0;
      v32 = 0xE000000000000000;
      sub_23B1C6EFC();
      sub_23B1C64F4();
      MEMORY[0x23B8613CC](&unk_23B1E5280, a1);
      sub_23B1C7340();
      v24 = v32;
      *(_QWORD *)v23 = v31;
      v25 = 5;
      goto LABEL_7;
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a1);
  }
  if (*(_BYTE *)(v17 + *(int *)(a1 + 56)) != 4)
    return result;
  sub_23AB23A94();
  swift_allocError();
  v23 = v26;
  v31 = 0;
  v32 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  MEMORY[0x23B8613CC](&unk_23B1E5280, a1);
  sub_23B1C7340();
  v24 = v32;
  *(_QWORD *)v23 = v31;
  v25 = 6;
LABEL_7:
  *(_QWORD *)(v23 + 8) = v24;
  *(_BYTE *)(v23 + 48) = v25;
  return swift_willThrow();
}

void sub_23B0C7004()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B0C7064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t (*v19)(_BYTE *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[96];

  *(_QWORD *)(v6 - 136) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 128) = a1;
  v7 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 192) = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v6 - 200) = &v38[-v9];
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v38[-v15];
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
  *(_QWORD *)(v6 - 144) = v2;
  *(_QWORD *)(v6 - 176) = v17;
  v17(&v38[-v15], v2, v10);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48);
  *(_QWORD *)(v6 - 184) = v19;
  v20 = v19(v16, 1, v3);
  *(_QWORD *)(v6 - 208) = v5;
  if (v20 == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v16, v10);
    *(_QWORD *)(v6 - 240) = 0;
    *(_QWORD *)(v6 - 232) = 0;
    v21 = 70;
  }
  else
  {
    v33 = sub_23B0C744C(v4, v3);
    if (v1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v16, v3);
      return v26 & 1;
    }
    LOBYTE(v21) = v33;
    *(_QWORD *)(v6 - 240) = v35;
    *(_QWORD *)(v6 - 232) = v34;
    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v16, v3);
    v21 = v21;
    if (v21 == 70)
    {
      *(_QWORD *)(v6 - 240) = 0;
      *(_QWORD *)(v6 - 232) = 0;
    }
  }
  v22 = sub_23B0C744C(v4, v3);
  if (!v1)
  {
    *(_QWORD *)(v6 - 248) = v4;
    v27 = v21;
    v28 = v22;
    if (v22 == 70)
      v29 = 0;
    else
      v29 = v23;
    *(_QWORD *)(v6 - 256) = v29;
    if (v22 == 70)
      v30 = 0;
    else
      v30 = v24;
    *(_QWORD *)(v6 - 264) = v30;
    v31 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v6 - 160), *(_QWORD *)(v6 - 168), v25);
    *(_DWORD *)(v6 - 152) = sub_23B0CC0C0(v27, *(_QWORD *)(v6 - 232), *(_QWORD *)(v6 - 240), v28, *(_QWORD *)(v6 - 256), *(_QWORD *)(v6 - 264), *(_QWORD *)(v6 - 152), v31);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 - 176))(v14, *(_QWORD *)(v6 - 144), v10);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 - 184))(v14, 1, v3) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
      *(_QWORD *)(v6 - 144) = 0;
      *(_QWORD *)(v6 - 168) = 70;
      *(_QWORD *)(v6 - 160) = 0;
      sub_23B0C62A4(v3, v36, *(_QWORD *)(v6 - 192));
    }
    sub_23B0C62A4(v3, v32, *(_QWORD *)(v6 - 200));
  }
  return v26 & 1;
}

uint64_t sub_23B0C744C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t AssociatedTypeWitness;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t AssociatedConformanceWitness;
  uint64_t v66;
  _QWORD v67[6];
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v88 = *(_QWORD *)(a2 - 8);
  v89 = a1;
  v3 = MEMORY[0x24BDAC7A8](a1);
  v70 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v69 = (char *)v67 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v71 = (char *)v67 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)v67 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)v67 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v80 = (char *)v67 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v79 = (char *)v67 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v77 = (char *)v67 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v78 = (char *)v67 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v72 = (char *)v67 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v73 = (char *)v67 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v75 = (char *)v67 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v85 = (char *)v67 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v86 = (char *)v67 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v87 = (char *)v67 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v74 = (char *)v67 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v84 = (char *)v67 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v83 = (char *)v67 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v82 = (char *)v67 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)v67 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)v67 - v44;
  v47 = *(_QWORD *)(v46 + 32);
  v48 = *(_QWORD *)(v46 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v50 = sub_23B1C6C98();
  v51 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)v67 - v52;
  v90 = a2;
  v54 = v91;
  result = sub_23B0C6CC4(a2);
  if (!v54)
  {
    v68 = v50;
    v67[5] = v45;
    v67[4] = v43;
    v91 = 0;
    v57 = type metadata accessor for ItemReconciliationHalf(0, v48, v47, v56);
    v58 = v92;
    if (*(_BYTE *)(v92 + *(int *)(v57 + 64) + 16) == 2)
      return 70;
    v59 = v57;
    if (*(_BYTE *)(v92 + *(int *)(v57 + 52)) == 1)
      return 70;
    v67[3] = *(int *)(v57 + 52);
    v60 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v53, v92, v68);
    v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v53, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v60);
    if (v61 != 1)
    {
      v68 = v59;
      v97 = *(_QWORD *)(v58 + *(int *)(v90 + 60));
      v64 = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v66 = swift_getAssociatedConformanceWitness();
      v93 = AssociatedTypeWitness;
      v94 = v64;
      v95 = AssociatedConformanceWitness;
      v96 = v66;
      type metadata accessor for ReconciliationID();
    }
    v63 = v58 + *(int *)(v90 + 52);
    if ((*(_BYTE *)(v63
                   + *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v90 + 24), *(_QWORD *)(v90 + 40), v62)+ 36)) & 1) == 0)
    {
      return 70;
    }
    else
    {
      if (qword_2542E7190 != -1)
        swift_once();
      return 2;
    }
  }
  return result;
}

BOOL sub_23B0C8954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v15;

  v4 = v3;
  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v10 & 1) != 0)
  {
    v11 = v7 & 0xFFFFDFFFFFFEF6E7;
    if (qword_2542E7190 != -1)
      swift_once();
    v7 = v11 & (qword_2542EDE38 | 0x6409000000C000);
  }
  v12 = *(_QWORD *)(v4 + *(int *)(a3 + 40)) & v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v4, a3);
  if (v12)
    v13 = 1;
  else
    v13 = (v9[*(int *)(a3 + 36)] & 0x51) != 0;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
  return v13;
}

void sub_23B0C8A64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, a2);
  v9 = &v5[*(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 32), v7)+ 64)];
  if (!v9[16] && *(_QWORD *)v9 == 0x2000)
  {
    sub_23AAAEE10((void *)0x2000, *((id *)v9 + 1), 0);
    *(_QWORD *)v9 = 0;
    *((_QWORD *)v9 + 1) = 0;
    v9[16] = 1;
  }
  v10 = *(int *)(a2 + 52);
  v11 = &v5[v10
          + *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 40), v8)+ 64)];
  if (!v11[16] && *(_QWORD *)v11 == 0x2000)
  {
    sub_23AAAEE10((void *)0x2000, *((id *)v11 + 1), 0);
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    v11[16] = 1;
  }
  sub_23B0C8CA0();
}

uint64_t sub_23B0C8B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!v3)
    v4 = a1;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v1);
  return v4;
}

BOOL sub_23B0C8BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 32), v7);
  v9 = sub_23B0CC264(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
  if (v9)
  {
    v11 = 1;
  }
  else
  {
    v12 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 40), v10);
    v11 = sub_23B0CC264(v12);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a1);
  return v11;
}

void sub_23B0C8CA0()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23B0C8CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;

  *(_QWORD *)(v11 - 152) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v11 - 144) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 160) = (char *)&a9 - v12;
  v13 = *(int *)(v10 + 60);
  *(_QWORD *)(v11 - 128) = v9;
  *(_QWORD *)(v11 - 72) = *(_QWORD *)(v9 + v13);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v11 - 104) = v15;
  *(_QWORD *)(v11 - 96) = AssociatedConformanceWitness;
  *(_QWORD *)(v11 - 88) = v17;
  type metadata accessor for ReconciliationID();
}

unint64_t sub_23B0C8DC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_23B1C67DC();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v3);
  if ((sub_23B1C69B0() & 1) == 0)
    return 0x8000000000000001;
  v4 = *(_QWORD *)(v2 - 120);
  v5 = sub_23B0CD60C(*(_QWORD *)(v2 - 136), v0);
  if (!v4)
  {
    *(_QWORD *)(v2 - 120) = v5;
    sub_23B0C62A4((uint64_t)v0, v6, *(_QWORD *)(v2 - 160));
  }
  return v1;
}

BOOL sub_23B0C93B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  BOOL v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  _BOOL4 v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char *v16;
  _BOOL8 v17;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v19 - v8;
  v10 = sub_23B0C6AC4(v7);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v9, v1, a1);
  v13 = v10
     && *(_QWORD *)&v9[*(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), v12)+ 36)] == 0;
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v9, a1);
  v11(v6, v1, a1);
  if (v13)
  {
    v16 = &v6[*(int *)(a1 + 52)];
    v17 = *(_QWORD *)&v16[*(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 40), v15)+ 36)] == 0;
  }
  else
  {
    v17 = 0;
  }
  v14(v6, a1);
  return v17;
}

BOOL sub_23B0C94E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  BOOL v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  BOOL v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  int v21;
  unint64_t v22;
  char *v24;
  int v25;
  uint64_t v26;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v26 - v9;
  if (qword_2542E7190 != -1)
    swift_once();
  v11 = qword_2542EDE38 | 0x10;
  v12 = (int *)type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), v8);
  v13 = sub_23B0C8954(v11, 0, (uint64_t)v12);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v14(v10, v2, a1);
  if (!v13)
  {
    v17 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 40), v15);
    v18 = sub_23B0C8954(v11, 0, v17);
    v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v10, a1);
    v16 = 0;
    if (v18)
      return v16;
    if (*(_BYTE *)(v2 + v12[13]) == 1
      || *(_BYTE *)(v2 + *(int *)(a1 + 52) + *(int *)(v17 + 52)) == 1
      || *(_BYTE *)(v2 + v12[11]) != 3
      || *(_BYTE *)(v2 + v12[14]) != 6)
    {
      return 0;
    }
    v20 = v2 + v12[16];
    v21 = *(unsigned __int8 *)(v20 + 16);
    if (v21 == 3)
    {
      v14(v7, v2, a1);
    }
    else
    {
      if (v21 != 4)
      {
        v14(v7, v2, a1);
        goto LABEL_21;
      }
      v22 = *(_QWORD *)v20 & 0xFFFFFFFFFFFFFFFELL | *(_QWORD *)(v20 + 8);
      v14(v7, v2, a1);
      if (v22)
      {
LABEL_21:
        v16 = 0;
        goto LABEL_22;
      }
    }
    v24 = &v7[*(int *)(a1 + 52) + (uint64_t)*(int *)(v17 + 64)];
    v25 = v24[16];
    if (v25 == 3)
    {
      v16 = 1;
      goto LABEL_22;
    }
    if (v25 == 4)
    {
      v16 = (*(_QWORD *)v24 & 0xFFFFFFFFFFFFFFFELL | *((_QWORD *)v24 + 1)) == 0;
LABEL_22:
      v19(v7, a1);
      return v16;
    }
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, a1);
  return 0;
}

uint64_t sub_23B0C9750@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v60 = a1;
  v5 = a2[5];
  v65 = a2[3];
  v66 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v59 = sub_23B1C6C98();
  v70 = *(_QWORD *)(v59 - 8);
  v7 = MEMORY[0x24BDAC7A8](v59);
  v67 = (char *)&v55 - v8;
  v63 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v64 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](v7);
  v68 = (char *)&v55 - v9;
  v10 = a2[4];
  v11 = a2[2];
  v12 = swift_getAssociatedTypeWitness();
  v13 = sub_23B1C6C98();
  v61 = *(_QWORD *)(v13 - 8);
  v62 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v55 - v15;
  v17 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v55 - v18;
  v58 = *(a2 - 1);
  v20 = a2;
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(v58 + 16))(a3, v69, a2);
  v22 = type metadata accessor for ItemReconciliationHalf(0, v11, v10, v21);
  v24 = a3;
  v25 = *(_QWORD *)(a3 + *(int *)(v22 + 36));
  if ((v25 & 0x51) != 0)
    goto LABEL_4;
  v26 = v22;
  v56 = *(int *)(v22 + 36);
  v57 = v19;
  v28 = v61;
  v27 = v62;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  v69 = a3;
  v29(v16, a3, v62);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v27);
    v24 = v69;
LABEL_4:
    v30 = v67;
    v31 = v70;
    goto LABEL_5;
  }
  v62 = (uint64_t)v20;
  v44 = v57;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v57, v16, v12);
  v45 = v71;
  v46 = sub_23AD0168C();
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v44, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v69, v62);
  }
  v52 = v69;
  *(_QWORD *)(v69 + *(int *)(v26 + 40)) |= v46;
  if ((v47 & 1) != 0)
    *(_QWORD *)(v52 + v56) = v25 | 1;
  v71 = 0;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v44, v12);
  v24 = v69;
  v31 = v70;
  v30 = v67;
  v20 = (_QWORD *)v62;
LABEL_5:
  v32 = v24 + *((int *)v20 + 13);
  v33 = v24;
  result = type metadata accessor for ItemReconciliationHalf(0, v65, v66, v23);
  v35 = *(int *)(result + 36);
  v36 = *(_QWORD *)(v32 + v35);
  v37 = v68;
  if ((v36 & 0x51) != 0)
    return result;
  v38 = result;
  v62 = (uint64_t)v20;
  v69 = v33;
  v39 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, v32, v59);
  v40 = v63;
  v41 = v30;
  v42 = v30;
  v43 = v64;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v41, 1, v64) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v42, v39);
  v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v40 + 32))(v37, v42, v43);
  (*(void (**)(uint64_t))(*(_QWORD *)v60 + 176))(v48);
  v49 = v71;
  v50 = sub_23AD0168C();
  v71 = v49;
  if (v49)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v43);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v69, v62);
  }
  v53 = v50;
  v54 = v51;
  swift_release();
  *(_QWORD *)(v32 + *(int *)(v38 + 40)) |= v53;
  if ((v54 & 1) != 0)
    *(_QWORD *)(v32 + v35) = v36 | 1;
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v68, v64);
}

BOOL sub_23B0C9B4C(char a1)
{
  return (a1 & 0xFB) == 0;
}

uint64_t sub_23B0C9B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v33 = a1;
  v5 = *(_QWORD *)(a2 + 32);
  v34 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v30 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v35 = v3;
  v15(v11, v3, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v31 = a2;
  v32 = AssociatedTypeWitness;
  v17 = v33;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, AssociatedTypeWitness);
  v18 = v34;
  v20 = type metadata accessor for ItemReconciliationHalf(0, v34, v5, v19);
  v21 = v35;
  if (*(_BYTE *)(v35 + *(int *)(v20 + 64) + 16) == 2)
  {
    v30 = v12;
    v22 = v40;
    v23 = (*(uint64_t (**)(char *))(**(_QWORD **)(v17 + 24) + 256))(v14);
    if (v22)
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v14, v32);
    if (!v23)
    {
      v28 = *(_QWORD *)(v31 + 24);
      v29 = *(_QWORD *)(v31 + 40);
      v36 = v18;
      v37 = v28;
      v38 = v5;
      v39 = v29;
      type metadata accessor for Ingestion.DeleteRejectedItemInTree();
    }
    swift_release();
    v12 = v30;
    v24 = v31;
    v21 = v35;
  }
  else
  {
    v24 = v31;
  }
  if (*(_BYTE *)(v21 + *(int *)(v20 + 52)) == 1)
  {
    v25 = *(unsigned __int8 *)(v21 + *(int *)(v24 + 56));
    v26 = *(_QWORD *)(v24 + 24);
    v27 = *(_QWORD *)(v24 + 40);
    if (v25 == 1)
    {
      v36 = v18;
      v37 = v26;
      v38 = v5;
      v39 = v27;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
    }
    v36 = v18;
    v37 = v26;
    v38 = v5;
    v39 = v27;
    type metadata accessor for Ingestion.FetchContent();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v32);
}

void sub_23B0C9E68(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;

  v9 = type metadata accessor for ItemReconciliationHalf(0, a5, a7, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a3, a1, v9);
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B0C9EF8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v12 = v5 + a1[13];
  v13 = type metadata accessor for ItemReconciliationHalf(0, v4, v10, a4);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, v9, v13);
  *(_BYTE *)(v5 + a1[14]) = v8;
  *(_QWORD *)(v5 + a1[15]) = v7;
  v15 = (_QWORD *)(v5 + a1[16]);
  *v15 = v6;
  v15[1] = v17;
  *(_QWORD *)(v5 + a1[17]) = v18;
  *(_BYTE *)(v5 + a1[18]) = v19;
  *(_QWORD *)(v5 + a1[19]) = v16;
  return result;
}

BOOL sub_23B0C9F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  int *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t AssociatedTypeWitness;
  uint64_t v82;
  uint64_t v83;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 40);
  v82 = *(_QWORD *)(a1 + 24);
  v83 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_23B1C6C98();
  v79 = *(_QWORD *)(v5 - 8);
  v80 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v70 - v7;
  v9 = *(_QWORD *)(a1 - 8);
  v10 = MEMORY[0x24BDAC7A8](v6);
  v73 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v72 = (char *)&v70 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v71 = (char *)&v70 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v78 = (char *)&v70 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v77 = (char *)&v70 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v76 = (char *)&v70 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v70 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v70 - v25;
  v27 = *(_QWORD *)(a1 + 32);
  v74 = *(_QWORD *)(a1 + 16);
  v75 = v27;
  v28 = swift_getAssociatedTypeWitness();
  v29 = sub_23B1C6C98();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v70 - v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)&v70 - v31, v2, v29);
  LODWORD(v28) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v32, 1, v28);
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v34 = v2;
  v33(v32, v29);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v35(v26, v2, a1);
  if ((_DWORD)v28 == 1
    && (v37 = *(int *)(a1 + 52),
        v38 = &v26[v37 + *(int *)(type metadata accessor for ItemReconciliationHalf(0, v82, v83, v36) + 64)],
        !v38[16]))
  {
    v61 = *(_QWORD *)v38;
    v39 = *(void (**)(char *, uint64_t))(v9 + 8);
    v39(v26, a1);
    if ((v61 & 2) != 0)
      return 0;
  }
  else
  {
    v39 = *(void (**)(char *, uint64_t))(v9 + 8);
    v39(v26, a1);
  }
  v40 = v34 + *(int *)(a1 + 52);
  v42 = v79;
  v41 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v8, v40, v80);
  v43 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v8, 1);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v41);
  v35(v24, v34, a1);
  if (v43 != 1)
  {
    v39(v24, a1);
    v46 = (int *)type metadata accessor for ItemReconciliationHalf(0, v82, v83, v51);
    goto LABEL_9;
  }
  v45 = &v24[*(int *)(a1 + 52)];
  v46 = (int *)type metadata accessor for ItemReconciliationHalf(0, v82, v83, v44);
  v47 = *(_QWORD *)&v45[v46[9]];
  v48 = v76;
  v35(v76, (uint64_t)v24, a1);
  if ((v47 & 0x10) != 0)
  {
    v39(v48, a1);
    v39(v24, a1);
    return 0;
  }
  v50 = *(_QWORD *)&v48[*(int *)(type metadata accessor for ItemReconciliationHalf(0, v74, v75, v49) + 36)];
  v39(v48, a1);
  v39(v24, a1);
  if ((v50 & 0x10) != 0)
    return 0;
LABEL_9:
  v52 = v40 + v46[16];
  v53 = *(unsigned __int8 *)(v52 + 16);
  if (v53 == 3)
  {
    v55 = v77;
    v35(v77, v34, a1);
    v56 = v78;
    goto LABEL_15;
  }
  if (v53 != 4)
  {
    v55 = v77;
    v35(v77, v34, a1);
    v56 = v78;
    goto LABEL_19;
  }
  v54 = *(_QWORD *)v52 & 0xFFFFFFFFFFFFFFFELL | *(_QWORD *)(v52 + 8);
  v55 = v77;
  v35(v77, v34, a1);
  v56 = v78;
  if (v54)
  {
LABEL_19:
    v39(v55, a1);
    v35(v56, v34, a1);
    goto LABEL_20;
  }
LABEL_15:
  v57 = *(_QWORD *)&v55[*(int *)(a1 + 52) + v46[10]];
  v39(v55, a1);
  v35(v56, v34, a1);
  if (v57)
  {
LABEL_20:
    v39(v56, a1);
    return 1;
  }
  v58 = *(_QWORD *)&v56[*(int *)(a1 + 52) + v46[9]];
  v39(v56, a1);
  if (v58)
    return 1;
  v62 = (int *)type metadata accessor for ItemReconciliationHalf(0, v74, v75, v59);
  v63 = v34 + v62[16];
  v64 = *(unsigned __int8 *)(v63 + 16);
  if (v64 == 3)
  {
    v66 = v71;
    v35(v71, v34, a1);
    v55 = v72;
    v56 = v73;
    goto LABEL_28;
  }
  if (v64 != 4)
  {
    v66 = v71;
    v35(v71, v34, a1);
    v55 = v72;
    v56 = v73;
    goto LABEL_32;
  }
  v65 = *(_QWORD *)v63 & 0xFFFFFFFFFFFFFFFELL | *(_QWORD *)(v63 + 8);
  v66 = v71;
  v35(v71, v34, a1);
  v55 = v72;
  v56 = v73;
  if (v65)
  {
LABEL_32:
    v39(v66, a1);
    v35(v55, v34, a1);
    goto LABEL_19;
  }
LABEL_28:
  v67 = *(_QWORD *)&v66[v62[10]];
  v39(v66, a1);
  v35(v55, v34, a1);
  if (v67)
    goto LABEL_19;
  v68 = *(_QWORD *)&v55[v62[9]];
  v39(v55, a1);
  v35(v56, v34, a1);
  if (v68)
    goto LABEL_20;
  v69 = v56[v62[11]];
  v39(v56, a1);
  return v69 == 0;
}

uint64_t sub_23B0CA570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  int v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int *v38;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v37 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v37 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v37 - v14;
  v17 = (int *)type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 32), v16);
  v18 = *(_QWORD *)(v1 + v17[19]);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v19(v15, v1, a1);
  if ((v18 & 4) != 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v15, a1);
    return 2;
  }
  v21 = &v15[*(int *)(a1 + 52)];
  v38 = (int *)type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 40), v20);
  v22 = *(_QWORD *)&v21[v38[19]];
  v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v15, a1);
  if ((v22 & 4) != 0)
    return 2;
  v24 = *(int *)(a1 + 56);
  if (*(_BYTE *)(v1 + v24) != 1 && (*(_BYTE *)(v1 + v17[10]) & 8) != 0 && *(_BYTE *)(v1 + v17[14]))
  {
    v25 = (uint64_t *)(v1 + v17[16]);
    v26 = *((unsigned __int8 *)v25 + 16);
    v37 = v25;
    if (v26)
    {
      v19(v12, v1, a1);
    }
    else
    {
      v28 = *v25;
      v19(v12, v1, a1);
      if ((v28 & 0x40000) != 0)
      {
        v23(v12, a1);
        goto LABEL_17;
      }
    }
    v29 = *(_QWORD *)&v12[v17[9]];
    v23(v12, a1);
    if ((v29 & 0x10) == 0)
    {
      v30 = *((unsigned __int8 *)v37 + 16);
      v19(v9, v1, a1);
      if (v30 != 2)
      {
        v23(v9, a1);
        return 0;
      }
      v31 = *(_QWORD *)&v9[v17[10]];
      v23(v9, a1);
      if (!v31)
        return 0;
    }
  }
LABEL_17:
  if (*(unsigned __int8 *)(v1 + v24) - 1 < 4)
    return 2;
  v32 = v1 + *(int *)(a1 + 52);
  if ((*(_BYTE *)(v32 + v38[10]) & 8) == 0 || !*(_BYTE *)(v32 + v38[13]))
    return 2;
  v33 = sub_23B0C6AC4(a1);
  v19(v6, v1, a1);
  if (!v33)
  {
    v34 = &v6[*(int *)(a1 + 52) + (uint64_t)v38[16]];
    if (!v34[16])
    {
      v36 = *(_QWORD *)v34;
      v23(v6, a1);
      if (v36 != 2)
        goto LABEL_23;
      return 2;
    }
  }
  v23(v6, a1);
LABEL_23:
  v35 = v32 + v38[16];
  if (!*(_BYTE *)(v35 + 16) && (*(_BYTE *)(v35 + 2) & 4) != 0)
    return 2;
  return 1;
}

void sub_23B0CA854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_BYTE *, uint64_t, uint64_t);
  void (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t AssociatedConformanceWitness;
  uint64_t v47;
  _BYTE v48[24];
  const char *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  const char *v53;
  int v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v55 = &v48[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v48[-v8];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = &v48[-v11];
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = &v48[-v14];
  v16 = *(_QWORD *)(v13 + 16);
  v57 = *(_QWORD *)(v13 + 32);
  v58 = v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = sub_23B1C6C98();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v48[-v20];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16))(&v48[-v20], v2, v18);
  v22 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48);
  v56 = AssociatedTypeWitness;
  LODWORD(AssociatedTypeWitness) = v22(v21, 1, AssociatedTypeWitness);
  (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v21, v18);
  if ((_DWORD)AssociatedTypeWitness == 1)
  {
    v24 = v2 + *(int *)(a1 + 52);
    v25 = v24
        + *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 40), v23)+ 64);
    if (!*(_BYTE *)(v25 + 16) && *(_QWORD *)v25 == 2)
    {
      v50 = 0;
      v54 = 0;
      v51 = 2;
      v52 = 4;
      v53 = "🔍";
      v49 = "";
      v26 = v56;
      goto LABEL_23;
    }
  }
  v27 = type metadata accessor for ItemReconciliationHalf(0, v58, v57, v23);
  v28 = *(_QWORD *)(v2 + *(int *)(v27 + 36)) & 0x51;
  v29 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16);
  v29(v15, v2, a1);
  if (v28)
    LOBYTE(v28) = sub_23B0C6AC4(a1);
  v26 = v56;
  v30 = *(void (**)(void))(v4 + 8);
  ((void (*)(_BYTE *, uint64_t))v30)(v15, a1);
  v29(v12, v2, a1);
  if ((v28 & 1) != 0)
  {
    ((void (*)(_BYTE *, uint64_t))v30)(v12, a1);
    v54 = 0;
    v52 = 6;
    v53 = "⬆︎";
  }
  else
  {
    v32 = *(_QWORD *)&v12[*(int *)(v27 + 40)];
    ((void (*)(_BYTE *, uint64_t))v30)(v12, a1);
    v33 = "⬆︎";
    v34 = 6;
    if (v32)
      v35 = 0;
    else
      v35 = 2;
    v54 = v35;
    if (!v32)
    {
      v34 = 1;
      v33 = " ";
    }
    v52 = v34;
    v53 = v33;
  }
  v36 = v2 + *(int *)(a1 + 52);
  v37 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 40), v31);
  v38 = *(_QWORD *)(v36 + *(int *)(v37 + 36)) & 0x51;
  v29(v9, v2, a1);
  if (v38)
  {
    v39 = sub_23B0C6AC4(a1);
    ((void (*)(_BYTE *, uint64_t))v30)(v9, a1);
    v40 = v55;
    v29(v55, v2, a1);
    v41 = v40;
    if (v39)
    {
      ((void (*)(_BYTE *, uint64_t))v30)(v40, a1);
      goto LABEL_20;
    }
  }
  else
  {
    ((void (*)(_BYTE *, uint64_t))v30)(v9, a1);
    v42 = v55;
    v29(v55, v2, a1);
    v41 = v42;
  }
  v43 = *(_QWORD *)&v41[*(int *)(a1 + 52) + *(int *)(v37 + 40)];
  v30();
  if (!v43)
  {
    v49 = " ";
    v51 = 2;
    v44 = 1;
    goto LABEL_22;
  }
LABEL_20:
  v51 = 0;
  v49 = "⬇︎";
  v44 = 6;
LABEL_22:
  v50 = v44;
LABEL_23:
  v59 = *(_QWORD *)(v2 + *(int *)(a1 + 60));
  v45 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v47 = swift_getAssociatedConformanceWitness();
  v60 = v26;
  v61 = v45;
  v62 = AssociatedConformanceWitness;
  v63 = v47;
  type metadata accessor for ReconciliationID();
}

BOOL sub_23B0CB1F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v14;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - v10, v2 + *(int *)(a1 + 52), v8);
  LODWORD(AssociatedTypeWitness) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8)
                                                                                       + 48))(v11, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  v12 = (_DWORD)AssociatedTypeWitness != 1 && sub_23B0C9F90(a1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  return v12;
}

void sub_23B0CB340()
{
  qword_2542EDC10 = (uint64_t)&unk_250BDDAA0;
}

void sub_23B0CB354()
{
  qword_2542EDCD8 = (uint64_t)&unk_250BDDAF0;
}

unint64_t sub_23B0CB368(uint64_t a1)
{
  unint64_t result;

  result = 0;
  switch(a1)
  {
    case 1:
      result = 0x6C46646572616873;
      break;
    case 2:
      result = 0x766973756C637865;
      break;
    case 4:
      result = 0x73756150636E7973;
      break;
    case 8:
      result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23B0CB41C()
{
  uint64_t *v0;

  return sub_23B0CB368(*v0);
}

uint64_t sub_23B0CB424()
{
  unint64_t *v0;

  return sub_23AF15C60(*v0);
}

uint64_t sub_23B0CB42C()
{
  uint64_t *v0;

  return sub_23AFD4D24(*v0);
}

uint64_t sub_23B0CB434(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 1;
  result = 0;
  switch(v1)
  {
    case 0:
      result = 0x7964616572;
      break;
    case 1:
      result = 0x7669737275636572;
      break;
    case 2:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
      return result;
    case 3:
      result = 0x7974706D45746F6ELL;
      break;
    case 7:
      result = 0x676E696E6E7572;
      break;
    case 15:
      result = 0x6465726F6E6769;
      break;
    case 31:
      result = 0x6544746E65726170;
      break;
    case 63:
      result = 0x64657463656A6572;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_23B0CB544()
{
  uint64_t *v0;

  return sub_23B0CB434(*v0);
}

uint64_t sub_23B0CB54C()
{
  unint64_t *v0;

  return sub_23AF159C8(*v0);
}

uint64_t sub_23B0CB554()
{
  uint64_t *v0;

  return sub_23AFD4D0C(*v0);
}

unint64_t sub_23B0CB55C(uint64_t a1)
{
  unint64_t v1;

  v1 = 0xD000000000000014;
  if (a1 != 1)
    v1 = 0;
  if (a1 == 2)
    return 0xD000000000000010;
  else
    return v1;
}

unint64_t sub_23B0CB5A4()
{
  uint64_t *v0;

  return sub_23B0CB55C(*v0);
}

unint64_t sub_23B0CB5AC()
{
  unint64_t *v0;

  return sub_23AF15E80(*v0);
}

uint64_t sub_23B0CB5B4()
{
  uint64_t *v0;

  return sub_23AFD4D30(*v0);
}

uint64_t sub_23B0CB5BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B0CB5FC + 4 * byte_23B1E50E2[a1]))(0x7265746E49746F6ELL, 0xED00006465747365);
}

uint64_t sub_23B0CB5FC()
{
  return 0x746F687370616E73;
}

uint64_t sub_23B0CB61C()
{
  return 0x676E696863746177;
}

unint64_t sub_23B0CB634()
{
  return 0xD000000000000011;
}

unint64_t sub_23B0CB650()
{
  return 0xD000000000000015;
}

uint64_t sub_23B0CB670()
{
  unsigned __int8 *v0;

  return sub_23B0CB5BC(*v0);
}

uint64_t sub_23B0CB678()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7463697665;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0x6C6169726574616DLL;
}

void sub_23B0CB6DC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0CB79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;

  v13 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 224) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v11 - 216) = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v11 - 232) = (char *)&a9 - v15;
  *(_QWORD *)(v11 - 208) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&a9 - v16;
  swift_getAssociatedTypeWitness();
  v18 = sub_23B1C6C98();
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v11 - 120) = 0;
  *(_QWORD *)(v11 - 112) = 0xE000000000000000;
  *(_QWORD *)(v11 - 184) = v10;
  *(_QWORD *)(v11 - 176) = v9;
  v20 = v9 + *(int *)(v10 + 64);
  v21 = (uint64_t (*)(uint64_t))((char *)&loc_23B0CB880
                                        + *((int *)qword_23B0CBFC8 + *(unsigned __int8 *)(v20 + 16)));
  *(_QWORD *)(v11 - 200) = a1;
  *(_QWORD *)(v11 - 192) = v20;
  *(_QWORD *)(v11 - 248) = v17;
  *(_QWORD *)(v11 - 240) = v22;
  return v21(v19);
}

uint64_t sub_23B0CB898()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_retain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AAAEE10(v3, v4, v1);
  sub_23B1C64F4();
  v8 = *(_QWORD *)(v7 - 240);
  v9 = *(_QWORD *)(v7 - 176);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v9, v6);
  MEMORY[0x24BDAC7A8](v10);
  v19 = v5;
  v20 = v0;
  sub_23B0C6934((void (*)(char *, char *))sub_23B0CD8EC, (uint64_t)&v18, MEMORY[0x24BEE4078], MEMORY[0x24BEE0D00], v11, v7 - 136);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v7 - 112);
  *(_QWORD *)(v7 - 120) = *(_QWORD *)(v7 - 120);
  *(_QWORD *)(v7 - 112) = v12;
  v13 = *(int **)(v7 - 184);
  v14 = *(_QWORD *)(v9 + v13[9]);
  if (v14)
  {
    *(_QWORD *)(v7 - 136) = 0x3A6574656C656420;
    *(_QWORD *)(v7 - 128) = 0xE800000000000000;
    sub_23AF159C8(v14);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  v15 = *(_QWORD *)(v9 + v13[10]);
  if (v15)
  {
    *(_QWORD *)(v7 - 136) = 0x3A73646C65696620;
    *(_QWORD *)(v7 - 128) = 0xE800000000000000;
    sub_23AF16528(v15);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v15 = swift_bridgeObjectRelease();
  }
  v16 = *(unsigned __int8 *)(v9 + v13[11]);
  if (v16 != 3)
  {
    *(_QWORD *)(v7 - 136) = 32;
    *(_QWORD *)(v7 - 128) = 0xE100000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v15 = swift_bridgeObjectRelease();
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_23B0CBBA4 + dword_23B0CBFDC[*(unsigned __int8 *)(v9 + v13[13])]))(v15);
}

uint64_t sub_23B0CBBB4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23B1C64F4();
  v8 = *(unsigned __int8 *)(v1 + v2[14]);
  if ((_DWORD)v8 != 6)
  {
    *(_QWORD *)(v7 - 136) = 0x3A74726F706D6920;
    *(_QWORD *)(v7 - 128) = 0xE800000000000000;
    __asm { BR              X10 }
  }
  if (*(_BYTE *)(v1 + v2[15]) == 1)
    sub_23B1C64F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v1 + v2[12], v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v0) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
  }
  else
  {
    v9 = *(_QWORD *)(v7 - 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v6, v0);
    *(_QWORD *)(v7 - 136) = 0;
    *(_QWORD *)(v7 - 128) = 0xE000000000000000;
    sub_23B1C64F4();
    MEMORY[0x23B8613CC](&unk_23B1E4BB8, v0);
    sub_23B1C7340();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9, v0);
  }
  v10 = *(void **)(v1 + v2[18]);
  if (v10)
  {
    *(_QWORD *)(v7 - 136) = 0x3A7265766D6F6420;
    *(_QWORD *)(v7 - 128) = 0xE800000000000000;
    v11 = v10;
    v12 = objc_msgSend(v11, sel_description);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();

    swift_bridgeObjectRelease();
  }
  v13 = (uint64_t *)(v1 + v2[17]);
  v14 = v13[2];
  if (v14 >> 60 != 11)
  {
    v16 = *v13;
    v15 = v13[1];
    *(_QWORD *)(v7 - 136) = 0;
    *(_QWORD *)(v7 - 128) = 0xE000000000000000;
    sub_23AAA3E2C(v15, v14);
    sub_23B1C64F4();
    *(_QWORD *)(v7 - 160) = 677669222;
    *(_QWORD *)(v7 - 152) = 0xE400000000000000;
    *(_QWORD *)(v7 - 168) = v16;
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AAAEE4C(v16, v15, v14);
  }
  v17 = *(_QWORD *)(v7 - 112);
  *(_QWORD *)(v7 - 136) = *(_QWORD *)(v7 - 120);
  *(_QWORD *)(v7 - 128) = v17;
  sub_23B12B0E4(**(void ***)(v7 - 192), *(id *)(*(_QWORD *)(v7 - 192) + 8), *(_BYTE *)(*(_QWORD *)(v7 - 192) + 16));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v7 - 136);
}

uint64_t sub_23B0CC008@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  result = sub_23B1C7340();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_23B0CC0C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t result;

  if (a4 != 70)
    __asm { BR              X10 }
  v9 = v8 + *(int *)(a8 + 64);
  v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 > 1)
    return 0;
  sub_23AAAEE10(*(void **)v9, *(id *)(v9 + 8), v10);
  result = 0;
  *(_OWORD *)v9 = xmmword_23B1CFCA0;
  *(_BYTE *)(v9 + 16) = 4;
  return result;
}

BOOL sub_23B0CC264(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_23B1C6C98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - v6, v1, v4);
  LODWORD(AssociatedTypeWitness) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8)
                                                                                       + 48))(v7, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (_DWORD)AssociatedTypeWitness != 1 && *(_BYTE *)(v1 + *(int *)(a1 + 64) + 16) == 1;
}

void sub_23B0CC354()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B0CCB54(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;

  if (a1 || v3 != v4)
    goto LABEL_27;
  v6 = *(int *)(v2 + 68);
  v7 = *(_QWORD *)(v1 + v6);
  v8 = *(_QWORD *)(v1 + v6 + 8);
  v9 = *(_QWORD *)(v1 + v6 + 16);
  v10 = *(_QWORD *)(v1 + v6 + 24);
  v12 = *(_QWORD *)(v1 + v6 + 32);
  v11 = *(_QWORD *)(v1 + v6 + 40);
  v13 = *(_QWORD *)(v1 + v6 + 48);
  v14 = (uint64_t *)(*(_QWORD *)(v5 - 128) + v6);
  v15 = *v14;
  v16 = v14[1];
  v17 = v14[2];
  v18 = v14[3];
  v20 = v14[4];
  v19 = v14[5];
  v21 = v14[6];
  v22 = v17 & 0xF000000000000000;
  if (v9 >> 60 == 11)
  {
    if (v22 == 0xB000000000000000)
      goto LABEL_5;
LABEL_10:
    v29 = v7;
    *(_QWORD *)(v5 - 168) = v16;
    *(_QWORD *)(v5 - 160) = v7;
    v30 = v15;
    *(_QWORD *)(v5 - 184) = v15;
    *(_QWORD *)(v5 - 128) = v17;
    *(_QWORD *)(v5 - 152) = v13;
    *(_QWORD *)(v5 - 144) = v21;
    sub_23AAAE4B4(v29, v8, v9);
    v31 = v16;
    v32 = *(_QWORD *)(v5 - 128);
    sub_23AAAE4B4(v30, v31, v32);
    sub_23AAAEE4C(*(_QWORD *)(v5 - 160), v8, v9);
    sub_23AAAEE4C(*(_QWORD *)(v5 - 184), *(_QWORD *)(v5 - 168), v32);
    goto LABEL_28;
  }
  if (v22 == 0xB000000000000000)
    goto LABEL_10;
  if (v7 != v15)
    goto LABEL_28;
  *(_QWORD *)(v5 - 144) = v21;
  v33 = v7;
  v34 = v16;
  *(_QWORD *)(v5 - 192) = v12;
  *(_QWORD *)(v5 - 184) = v10;
  *(_QWORD *)(v5 - 208) = v20;
  *(_QWORD *)(v5 - 200) = v18;
  if (v9 >> 60 == 15)
  {
    v35 = v17;
    if (v17 >> 60 == 15)
    {
      sub_23AAA3E2C(v34, v17);
      goto LABEL_20;
    }
  }
  else
  {
    v35 = v17;
    if (v17 >> 60 != 15)
    {
      v37 = v33;
      *(_QWORD *)(v5 - 216) = v11;
      *(_QWORD *)(v5 - 152) = v13;
      sub_23AAAE4B4(v33, v8, v9);
      *(_QWORD *)(v5 - 232) = v19;
      sub_23AAAE4B4(v37, v34, v35);
      sub_23AAAE6AC(v8, v9);
      *(_DWORD *)(v5 - 224) = v38;
      sub_23AAAEE4C(v37, v34, v35);
      sub_23AAAEE4C(v37, v8, v9);
      if ((*(_DWORD *)(v5 - 224) & 1) == 0)
        goto LABEL_28;
LABEL_20:
      if ((v11 & 1) != 0)
      {
        v1 = *(_QWORD *)(v5 - 176);
        v2 = *(_QWORD *)(v5 - 136);
        if ((v19 & 1) == 0)
          goto LABEL_28;
        goto LABEL_5;
      }
      if ((v19 & 1) == 0 && *(_QWORD *)(v5 - 184) == *(_QWORD *)(v5 - 200))
      {
        v1 = *(_QWORD *)(v5 - 176);
        v2 = *(_QWORD *)(v5 - 136);
        if (*(_QWORD *)(v5 - 192) == *(_QWORD *)(v5 - 208))
        {
LABEL_5:
          v23 = *(int *)(v2 + 72);
          v24 = *(void **)(v1 + v23);
          v25 = *(void **)(*(_QWORD *)(v5 - 128) + v23);
          if (v24)
          {
            if (v25)
            {
              sub_23AD2AE58();
              v26 = v25;
              v27 = v24;
              v28 = sub_23B1C6C50();

              if ((v28 & 1) != 0)
                goto LABEL_27;
            }
          }
          else if (!v25)
          {
            goto LABEL_27;
          }
LABEL_28:
          JUMPOUT(0x23B0CCAFCLL);
        }
      }
LABEL_27:
      JUMPOUT(0x23B0CCB00);
    }
  }
  v36 = v33;
  sub_23AAAE4B4(v33, v8, v9);
  sub_23AAAE4B4(v36, v34, v35);
  sub_23AAA3E18(v8, v9);
  sub_23AAA3E18(v34, v35);
  goto LABEL_28;
}

void sub_23B0CCFE4()
{
  sub_23B0CC354();
}

void sub_23B0CCFF4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23B0CD0C4(int8x16_t *a1)
{
  uint64_t v1;

  sub_23AEFF3FC(a1, v1);
}

void sub_23B0CD0F0()
{
  sub_23B0CC354();
}

uint64_t sub_23B0CD130(char a1)
{
  if ((a1 & 1) != 0)
    type metadata accessor for ItemReconciliation();
  return 0;
}

void sub_23B0CD30C()
{
  sub_23B0CD0F0();
}

uint64_t sub_23B0CD320(unint64_t a1, uint64_t a2, unint64_t a3)
{
  id v6;
  id v7;
  unint64_t v8;

  if (!(a1 >> 62))
  {
    v6 = (id)a3;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23B1C7028();
    sub_23B1C64F4();
    sub_23AF16528(a2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    if (a3)
    {
LABEL_6:
      v7 = objc_msgSend(v6, sel_description);
      sub_23B1C63E0();

    }
LABEL_10:
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AB22788(a1, a2, (void *)a3);
    return 0;
  }
  if (a1 >> 62 == 1)
  {
    v6 = (id)a3;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23B1C7028();
    sub_23B1C64F4();
    sub_23AF16528(a2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    if (a3)
      goto LABEL_6;
    goto LABEL_10;
  }
  v8 = a3 | a2;
  if (a1 == 0x8000000000000000 && !v8)
    return 0x54676E6968746F6ELL;
  if (a1 == 0x8000000000000001 && v8 == 0)
    return 0x4279646165726C61;
  return 0xD000000000000014;
}

uint64_t sub_23B0CD5E4()
{
  uint64_t v0;

  return sub_23B0CD320(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

unint64_t sub_23B0CD5F0()
{
  uint64_t v0;

  return sub_23AFF5A04(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23B0CD60C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v4 = *(a2 - 1);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - v8;
  v11 = v2 + *(int *)(v10 + 52);
  v13 = *(_QWORD *)(v11
                  + *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v10 + 24), a2[5], v12)
                           + 76)) & 3;
  (*(void (**)(char *, uint64_t, uint64_t *))(v4 + 16))(v9, v2, a2);
  if (v13)
  {
    (*(void (**)(char *, uint64_t *))(v4 + 8))(v9, a2);
  }
  else
  {
    v18[1] = v7;
    v19 = v2;
    v15 = type metadata accessor for ItemReconciliationHalf(0, a2[2], a2[4], v14);
    v16 = *(_QWORD *)&v9[*(int *)(v15 + 76)];
    (*(void (**)(char *, uint64_t *))(v4 + 8))(v9, a2);
    if ((v16 & 2) == 0)
      __asm { BR              X11 }
  }
  return 0;
}

uint64_t sub_23B0CD8EC@<X0>(_QWORD *a1@<X8>)
{
  return sub_23B0CC008(a1);
}

void sub_23B0CD908()
{
  sub_23B0CCFF4();
}

void type metadata accessor for ItemReconciliation.PropagationStatus()
{
  JUMPOUT(0x23B861318);
}

void destroy for ReconciledPropagationStatus(uint64_t a1)
{
  sub_23AB22788(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
}

unint64_t *_s9libfssync27ReconciledPropagationStatusOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = (void *)a2[2];
  sub_23AB2277C(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (unint64_t)v5;
  return a1;
}

uint64_t *assignWithCopy for ReconciledPropagationStatus(uint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = (void *)a2[2];
  sub_23AB2277C(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = (void *)a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  sub_23AB22788(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for ReconciledPropagationStatus(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = (void *)a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_23AB22788(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReconciledPropagationStatus(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)a1 >> 7;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ReconciledPropagationStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (unint64_t)-a2 << 7;
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23B0CDABC(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_QWORD *)a1 & 0x7F | (*(_DWORD *)(a1 + 8) << 7)) + 2;
}

_QWORD *sub_23B0CDADC(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *result & 0x7FLL | (a2 << 62);
  }
  else
  {
    result[1] = (unint64_t)(a2 - 2) >> 7;
    result[2] = 0;
    *result = ((_BYTE)a2 - 2) & 0x7F | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReconciledPropagationStatus()
{
  return &type metadata for ReconciledPropagationStatus;
}

void sub_23B0CDB20(uint64_t a1)
{
  sub_23AFF60F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_23B0CDB34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23B0578B0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_23B0CDB90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23B0578B0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_23AFF60F0(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_23B0CDBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_23AFF60F0(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_23B0CDC48(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 24) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_23B0CDC9C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_23B0CDCF8(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 24);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23B0CDD18(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_23B0CDD28(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 24) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeletionStatus()
{
  return &type metadata for DeletionStatus;
}

ValueMetadata *type metadata accessor for PolicyContentStatus()
{
  return &type metadata for PolicyContentStatus;
}

ValueMetadata *type metadata accessor for MaterializationStatus()
{
  return &type metadata for MaterializationStatus;
}

ValueMetadata *type metadata accessor for ContentStatus()
{
  return &type metadata for ContentStatus;
}

ValueMetadata *type metadata accessor for SyncPausedStatus()
{
  return &type metadata for SyncPausedStatus;
}

unint64_t sub_23B0CDDAC()
{
  unint64_t result;

  result = qword_2569E8318;
  if (!qword_2569E8318)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E53C4, &type metadata for SyncPausedStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8318);
  }
  return result;
}

unint64_t sub_23B0CDDF4()
{
  unint64_t result;

  result = qword_2569E8320;
  if (!qword_2569E8320)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5394, &type metadata for SyncPausedStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8320);
  }
  return result;
}

uint64_t sub_23B0CDE38()
{
  return sub_23AFA98A0(&qword_2569E8328, &qword_2569E8330);
}

unint64_t sub_23B0CDE60()
{
  unint64_t result;

  result = qword_2569E8338;
  if (!qword_2569E8338)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E53EC, &type metadata for SyncPausedStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8338);
  }
  return result;
}

unint64_t sub_23B0CDEA8()
{
  unint64_t result;

  result = qword_2569E8340;
  if (!qword_2569E8340)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5424, &type metadata for SyncPausedStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8340);
  }
  return result;
}

uint64_t sub_23B0CDEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23B0CDF00, (uint64_t (*)(void))sub_23B0CDF44);
}

unint64_t sub_23B0CDF00()
{
  unint64_t result;

  result = qword_2569E8368;
  if (!qword_2569E8368)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5554, &type metadata for SyncPausedStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8368);
  }
  return result;
}

unint64_t sub_23B0CDF44()
{
  unint64_t result;

  result = qword_2569E8370;
  if (!qword_2569E8370)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E54EC, &type metadata for SyncPausedStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8370);
  }
  return result;
}

uint64_t sub_23B0CDF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23B0CDF9C, (uint64_t (*)(void))sub_23B0CDFE0);
}

unint64_t sub_23B0CDF9C()
{
  unint64_t result;

  result = qword_2569E8378;
  if (!qword_2569E8378)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E558C, &type metadata for SyncPausedStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8378);
  }
  return result;
}

unint64_t sub_23B0CDFE0()
{
  unint64_t result;

  result = qword_2569E8380;
  if (!qword_2569E8380)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E55B4, &type metadata for SyncPausedStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8380);
  }
  return result;
}

unint64_t sub_23B0CE028()
{
  unint64_t result;

  result = qword_2569E8388;
  if (!qword_2569E8388)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E568C, &type metadata for ContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8388);
  }
  return result;
}

unint64_t sub_23B0CE070()
{
  unint64_t result;

  result = qword_2569E8390;
  if (!qword_2569E8390)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5754, &type metadata for MaterializationStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8390);
  }
  return result;
}

unint64_t sub_23B0CE0B8()
{
  unint64_t result;

  result = qword_2569E8398;
  if (!qword_2569E8398)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E57AC, &type metadata for PolicyContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8398);
  }
  return result;
}

unint64_t sub_23B0CE100()
{
  unint64_t result;

  result = qword_2569E83A0;
  if (!qword_2569E83A0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E577C, &type metadata for PolicyContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E83A0);
  }
  return result;
}

uint64_t sub_23B0CE144()
{
  return sub_23AFA98A0(&qword_2569E83A8, &qword_2569E83B0);
}

unint64_t sub_23B0CE16C()
{
  unint64_t result;

  result = qword_2569E83B8;
  if (!qword_2569E83B8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E57D4, &type metadata for PolicyContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E83B8);
  }
  return result;
}

unint64_t sub_23B0CE1B4()
{
  unint64_t result;

  result = qword_2569E83C0;
  if (!qword_2569E83C0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E580C, &type metadata for PolicyContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E83C0);
  }
  return result;
}

uint64_t sub_23B0CE1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23B0CE20C, (uint64_t (*)(void))sub_23B0CE250);
}

unint64_t sub_23B0CE20C()
{
  unint64_t result;

  result = qword_2569E83E8;
  if (!qword_2569E83E8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E593C, &type metadata for PolicyContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E83E8);
  }
  return result;
}

unint64_t sub_23B0CE250()
{
  unint64_t result;

  result = qword_2569E83F0;
  if (!qword_2569E83F0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E58D4, &type metadata for PolicyContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E83F0);
  }
  return result;
}

uint64_t sub_23B0CE294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23B0CE2A8, (uint64_t (*)(void))sub_23B0CE2EC);
}

unint64_t sub_23B0CE2A8()
{
  unint64_t result;

  result = qword_2569E83F8;
  if (!qword_2569E83F8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5974, &type metadata for PolicyContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E83F8);
  }
  return result;
}

unint64_t sub_23B0CE2EC()
{
  unint64_t result;

  result = qword_2569E8400;
  if (!qword_2569E8400)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E599C, &type metadata for PolicyContentStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8400);
  }
  return result;
}

unint64_t sub_23B0CE334()
{
  unint64_t result;

  result = qword_2569E8408;
  if (!qword_2569E8408)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5A04, &type metadata for DeletionStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8408);
  }
  return result;
}

unint64_t sub_23B0CE37C()
{
  unint64_t result;

  result = qword_2569E8410;
  if (!qword_2569E8410)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E59D4, &type metadata for DeletionStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8410);
  }
  return result;
}

uint64_t sub_23B0CE3C0()
{
  return sub_23AFA98A0(&qword_2569E8418, &qword_2569E8420);
}

unint64_t sub_23B0CE3E8()
{
  unint64_t result;

  result = qword_2569E8428;
  if (!qword_2569E8428)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5A2C, &type metadata for DeletionStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8428);
  }
  return result;
}

unint64_t sub_23B0CE430()
{
  unint64_t result;

  result = qword_2569E8430;
  if (!qword_2569E8430)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5A64, &type metadata for DeletionStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8430);
  }
  return result;
}

uint64_t sub_23B0CE474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23B0CE488, (uint64_t (*)(void))sub_23B0CE4CC);
}

unint64_t sub_23B0CE488()
{
  unint64_t result;

  result = qword_2569E8458;
  if (!qword_2569E8458)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5B94, &type metadata for DeletionStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8458);
  }
  return result;
}

unint64_t sub_23B0CE4CC()
{
  unint64_t result;

  result = qword_2569E8460;
  if (!qword_2569E8460)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5B2C, &type metadata for DeletionStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8460);
  }
  return result;
}

uint64_t sub_23B0CE510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23B0CE524, (uint64_t (*)(void))sub_23B0CE568);
}

unint64_t sub_23B0CE524()
{
  unint64_t result;

  result = qword_2569E8468;
  if (!qword_2569E8468)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5BCC, &type metadata for DeletionStatus);
    atomic_store(result, (unint64_t *)&qword_2569E8468);
  }
  return result;
}

unint64_t sub_23B0CE568()
{
  unint64_t result;

  result = qword_2569E8470[0];
  if (!qword_2569E8470[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E5BF4, &type metadata for DeletionStatus);
    atomic_store(result, qword_2569E8470);
  }
  return result;
}

uint64_t sub_23B0CE5AC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a3;
  sub_23B0CE9B0((uint64_t)&v31);
  v4 = v31;
  v5 = v32;
  v6 = v33;
  v7 = v35;
  if (v34)
    v6 = 0;
  v28 = v6;
  v8 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_fp_maximumBounceLevel);
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_26:
    result = sub_23B1C7040();
    __break(1u);
  }
  else
  {
    v9 = v8;
    v10 = 0;
    do
    {
      v29 = v10;
      if ((v10 & 1) != 0)
      {
        v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
        objc_msgSend(v11, sel_setDateStyle_, 1);
        v27 = v11;
        objc_msgSend(v11, sel_setTimeStyle_, 2);
        v12 = (void *)sub_23B1C5B64();
        v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

        v14 = sub_23B1C63E0();
        v26 = v4;
        v16 = v15;

        v31 = v14;
        v32 = v16;
        sub_23AAA420C();
        v17 = sub_23B1C6CF8();
        v19 = v18;
        swift_bridgeObjectRelease();
        v31 = v17;
        v32 = v19;
        sub_23B1C6CF8();
        swift_bridgeObjectRelease();
        v31 = v26;
        v32 = v5;
        sub_23B1C64F4();
        sub_23B1C64F4();

        swift_bridgeObjectRelease();
        v4 = v31;
        v5 = v32;
      }
      v20 = v28;
      if (v28 < v9)
      {
        while (1)
        {
          if (v20 == 1)
            goto LABEL_16;
          if (v20)
            break;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = v4;
          v22 = v5;
          if (v7)
            goto LABEL_12;
LABEL_13:
          v23 = a2(v21, v22);
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v21;
          }
          if ((v23 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v21;
          }
          swift_bridgeObjectRelease();
LABEL_16:
          if (v9 == v20)
            goto LABEL_5;
          if (__CFADD__(v20++, 1))
          {
            __break(1u);
            goto LABEL_26;
          }
        }
        v31 = v4;
        v32 = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23B1C64F4();
        sub_23B1C7304();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v21 = v31;
        v22 = v32;
        if (!v7)
          goto LABEL_13;
LABEL_12:
        v31 = v21;
        v32 = v22;
        sub_23B1C64F4();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v21 = v31;
        v22 = v32;
        goto LABEL_13;
      }
LABEL_5:
      v10 = 1;
    }
    while ((v29 & 1) == 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void sub_23B0CE9B0(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_23B1C63BC();
  v15 = 0;
  v16[0] = 0;
  v3 = objc_msgSend(v2, sel_fp_stringByDeletingPathBounceNo_andPathExtension_isFolder_, v16, &v15, 0);

  v5 = v15;
  v4 = (void *)v16[0];
  v6 = sub_23B1C63E0();
  v8 = v7;
  v9 = v4;
  v10 = v5;

  if (!v9)
  {
    v11 = 0;
    if (v10)
      goto LABEL_3;
LABEL_5:

    v12 = 0;
    v14 = 0;
    goto LABEL_6;
  }
  v11 = objc_msgSend(v9, sel_unsignedIntegerValue);
  if (!v10)
    goto LABEL_5;
LABEL_3:
  v12 = sub_23B1C63E0();
  v14 = v13;

LABEL_6:
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v11;
  *(_BYTE *)(a1 + 24) = v9 == 0;
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v14;
}

uint64_t sub_23B0CEAD8(uint64_t a1)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23B0CE9B0((uint64_t)&v3);
  if (v4 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    a1 = v3;
    if (v5)
    {
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  return a1;
}

uint64_t sub_23B0CEB94(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t result;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  sub_23B0CE9B0((uint64_t)&v39);
  v4 = v40;
  v44 = v39;
  v5 = v41;
  v6 = v43;
  if (v42)
    v5 = 0;
  v36 = v5;
  v7 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_fp_maximumBounceLevel);
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_30:

    result = sub_23B1C7040();
    __break(1u);
    return result;
  }
  v8 = v7;
  v9 = 0;
  do
  {
    v37 = v9;
    if ((v9 & 1) != 0)
    {
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
      objc_msgSend(v10, sel_setDateStyle_, 1);
      objc_msgSend(v10, sel_setTimeStyle_, 2);
      v11 = (void *)sub_23B1C5B64();
      v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

      v13 = sub_23B1C63E0();
      v15 = v14;

      v39 = v13;
      v40 = v15;
      v16 = sub_23AAA420C();
      v17 = MEMORY[0x24BEE0D00];
      v18 = sub_23B1C6CF8();
      v20 = v19;
      swift_bridgeObjectRelease();
      v39 = v18;
      v40 = v20;
      v34 = v16;
      v35 = v16;
      v32 = v17;
      v33 = v16;
      sub_23B1C6CF8();
      swift_bridgeObjectRelease();
      v39 = v44;
      v40 = v4;
      sub_23B1C64F4();
      sub_23B1C64F4();

      swift_bridgeObjectRelease();
      v4 = v40;
      v44 = v39;
    }
    if (v36 < v8)
    {
      v21 = v36;
      while (v21 == 1)
      {
LABEL_22:
        if (v8 == v21)
          goto LABEL_5;
        if (__CFADD__(v21++, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
      }
      if (v21)
      {
        v39 = v44;
        v40 = v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23B1C64F4();
        sub_23B1C7304();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v22 = v39;
        v23 = v40;
        if (!v6)
          goto LABEL_14;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22 = v44;
        v23 = v4;
        if (!v6)
        {
LABEL_14:
          v24 = objc_msgSend(a4, sel_filename, v32, v33, v34, v35);
          v25 = sub_23B1C63E0();
          v27 = v26;

          if (v22 == v25 && v23 == v27)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v29 = sub_23B1C7388();
            swift_bridgeObjectRelease();
            if ((v29 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v22;
            }
          }
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
      }
      v39 = v22;
      v40 = v23;
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v22 = v39;
      v23 = v40;
      goto LABEL_14;
    }
LABEL_5:
    v9 = 1;
  }
  while ((v37 & 1) == 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23B0CEFC0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0CF018()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0CF070()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0CF0C8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0CF120()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0CF178()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0CF1D0()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23B0CF228(uint64_t a1, unint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a7;
  v13 = sub_23B1C5A08();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  v17 = sub_23B1AD8A4(a1, a2, (uint64_t)v16, a4, a5 & 0x1FFFFFFFFLL, a6, v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v13);
  return v17;
}

uint64_t sub_23B0CF31C()
{
  sub_23B1AAB2C();
  return swift_deallocClassInstance();
}

uint64_t sub_23B0CF33C()
{
  return type metadata accessor for ReadOnlyWharf();
}

uint64_t type metadata accessor for ReadOnlyWharf()
{
  uint64_t result;

  result = qword_2542DF210;
  if (!qword_2542DF210)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B0CF380()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_23B0CF3B4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
    type metadata accessor for Bouncing.BouncingContext();
  return result;
}

uint64_t sub_23B0CF5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

void sub_23B0CF66C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a2, a1, AssociatedTypeWitness);
  type metadata accessor for Bouncing.BouncingContext();
}

uint64_t sub_23B0CF700(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v6 = (_QWORD *)(v4 + *(int *)(a1 + 52));
  *v6 = v3;
  v6[1] = v2;
  return v1(v4 + *(int *)(a1 + 56), v8, v5);
}

unint64_t sub_23B0CF740(unint64_t result)
{
  if (result >= 3)
    return 3;
  return result;
}

uint64_t sub_23B0CF750(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x800000023B21DE10 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023B21DE30 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023B21DE50)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23B0CF890(char a1)
{
  unint64_t result;

  result = 0xD000000000000016;
  if (!a1)
    return 0xD000000000000014;
  return result;
}

uint64_t sub_23B0CF8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B8613CC](&unk_23B1E6128, a3);
  return sub_23B1C73B8();
}

uint64_t sub_23B0CF93C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1E6128, a1);
  return sub_23B1C6698();
}

uint64_t sub_23B0CF988()
{
  MEMORY[0x23B8613CC](&unk_23B1E6128);
  return sub_23B1C66B0();
}

uint64_t sub_23B0CF9D8()
{
  MEMORY[0x23B8613CC](&unk_23B1E6128);
  return sub_23B1C66A4();
}

unint64_t sub_23B0CFA28@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23B0CF740(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23B0CFA5C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_23AEB8104(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_23B0CFA8C()
{
  char *v0;

  return sub_23B0CF890(*v0);
}

uint64_t sub_23B0CFA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B0CF750(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B0CFACC()
{
  unsigned __int8 *v0;

  return sub_23AEB80F8(*v0);
}

unint64_t sub_23B0CFAF0@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23B0CF740(a1);
  *a2 = result;
  return result;
}

uint64_t sub_23B0CFB20(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1E6308, a1);
  return sub_23B1C7544();
}

uint64_t sub_23B0CFB54(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1E6308, a1);
  return sub_23B1C7550();
}

uint64_t sub_23B0CFB88()
{
  void *v0;
  id v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  sub_23B1C64F4();
  sub_23B1C7340();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  v0 = (void *)sub_23B1C63BC();
  v1 = objc_msgSend(v0, sel_fp_obfuscatedFilename);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

void sub_23B0CFCF4()
{
  type metadata accessor for Bouncing.BouncingContext.CodingKeys();
}

uint64_t sub_23B0CFD48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x23B8613CC](&unk_23B1E6308, a1);
  v3 = sub_23B1C72EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_23B1C7538();
  *(_BYTE *)(v2 - 112) = 0;
  swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v2 - 128);
  swift_getAssociatedConformanceWitness();
  v8 = *(_QWORD *)(v2 - 120);
  sub_23B1C72A4();
  if (!v8)
  {
    v9 = (uint64_t *)(v7 + *(int *)(*(_QWORD *)(v2 - 152) + 52));
    v11 = *v9;
    v10 = v9[1];
    *(_QWORD *)(v2 - 112) = v11;
    *(_QWORD *)(v2 - 104) = v10;
    *(_BYTE *)(v2 - 65) = 1;
    sub_23AB5EA4C();
    sub_23B1C72A4();
    *(_BYTE *)(v2 - 112) = 2;
    sub_23B1C72A4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_23B0CFEFC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[18];

  v14[2] = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14[8] = AssociatedTypeWitness;
  v14[9] = v10;
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14[3] = (char *)v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14[10] = (char *)v14 - v13;
  v14[14] = a1;
  v14[15] = a2;
  v14[16] = a3;
  v14[17] = a4;
  type metadata accessor for Bouncing.BouncingContext.CodingKeys();
}

void sub_23B0CFFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x23B8613CC](&unk_23B1E6308, a1);
  v6 = sub_23B1C7208();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 176) = v4;
  *(_QWORD *)(v5 - 168) = v1;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for Bouncing.BouncingContext();
}

uint64_t sub_23B0D002C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  *(_QWORD *)(v3 - 192) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v22 - v5;
  v7 = v1;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 136) = v2;
  v8 = *(_QWORD *)(v3 - 120);
  sub_23B1C7520();
  if (v8)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  *(_QWORD *)(v3 - 216) = v4;
  v9 = *(_QWORD *)(v3 - 192);
  v10 = *(_QWORD *)(v3 - 184);
  *(_QWORD *)(v3 - 120) = v6;
  v11 = (uint64_t)v7;
  *(_BYTE *)(v3 - 112) = 0;
  v12 = *(_QWORD *)(v3 - 160);
  v13 = *(_QWORD *)(v3 - 152);
  swift_getAssociatedConformanceWitness();
  sub_23B1C71C0();
  v14 = *(void (**)(_QWORD, _QWORD, uint64_t))(v13 + 32);
  v14(*(_QWORD *)(v3 - 120), *(_QWORD *)(v3 - 144), v12);
  *(_BYTE *)(v3 - 65) = 1;
  sub_23AA7E3CC();
  sub_23B1C71C0();
  *(_QWORD *)(v3 - 144) = v14;
  v15 = *(_QWORD *)(v3 - 104);
  v16 = v9;
  v17 = (_QWORD *)(*(_QWORD *)(v3 - 120) + *(int *)(v9 + 52));
  *v17 = *(_QWORD *)(v3 - 112);
  v17[1] = v15;
  *(_BYTE *)(v3 - 112) = 2;
  v18 = *(_QWORD *)(v3 - 200);
  sub_23B1C71C0();
  (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v3 - 136), *(_QWORD *)(v3 - 128));
  v19 = *(_QWORD *)(v3 - 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 144))(v19 + *(int *)(v16 + 56), v18, v12);
  v20 = *(_QWORD *)(v3 - 216);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v20 + 16))(*(_QWORD *)(v3 - 208), v19, v16);
  __swift_destroy_boxed_opaque_existential_1(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v16);
}

void sub_23B0D0288(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_23B0CFEFC(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_23B0D02A8()
{
  sub_23B0CFCF4();
}

uint64_t sub_23B0D02C0()
{
  return 0x692D65636E756F62;
}

uint64_t sub_23B0D02E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 576);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
    return 4;
  else
    return *(unsigned __int8 *)(v1 + *(int *)(v5 + 40));
}

uint64_t sub_23B0D03BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 576);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
    return 2;
  v7 = v1 + *(int *)(v5 + 40);
  return *(unsigned __int8 *)(v7 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_23B0D04A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 576);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5);
  result = 0;
  if (!v6)
  {
    v8 = v1 + *(int *)(v5 + 40);
    return *(_QWORD *)(v8 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_23B0D059C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 576);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
  {
    v7 = 0;
  }
  else
  {
    v8 = v1 + *(int *)(v5 + 40);
    v7 = *(unsigned int *)(v8 + 4);
    v6 = *(_BYTE *)(v8 + 8);
  }
  return v7 | ((unint64_t)v6 << 32);
}

uint64_t sub_23B0D0690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 576);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v8 = 1;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v3, 1, v7);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!v9)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v3, AssociatedTypeWitness);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v8, 1, AssociatedTypeWitness);
}

void sub_23B0D0798()
{
  type metadata accessor for Bouncing.BouncingContext();
}

uint64_t sub_23B0D07E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;

  v3 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v14 - v5, v1 + *(_QWORD *)(v0 + 560), v3);
  sub_23B1C6434();
  *(_QWORD *)(v2 - 112) = 0;
  *(_QWORD *)(v2 - 104) = 0xE000000000000000;
  sub_23B1C6EFC();
  v6 = *(_QWORD *)(v2 - 104);
  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 112);
  *(_QWORD *)(v2 - 104) = v6;
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  sub_23B1C64F4();
  *(_QWORD *)(v2 - 120) = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 544));
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v7 = *(void **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 568));
  if (v7)
  {
    v8 = objc_msgSend(v7, sel_description);
    sub_23B1C63E0();

  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v10 = *(_QWORD *)(v2 - 112);
  v9 = *(_QWORD *)(v2 - 104);
  *(_QWORD *)(v2 - 112) = 0;
  *(_QWORD *)(v2 - 104) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 112) = 3829620;
  *(_QWORD *)(v2 - 104) = 0xE300000000000000;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_23B1C63BC();
  v12 = objc_msgSend(v11, sel_fp_obfuscatedFilename);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(v2 - 112) = v10;
  *(_QWORD *)(v2 - 104) = v9;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v2 - 112);
}

void sub_23B0D0B00(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23B0D0BF0()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23B0D0C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[6];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a2;
  v28 = a1;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 504);
  v7 = *(_QWORD *)(*v4 + 520);
  v22 = type metadata accessor for JobLockRule(0, v6, v7, a4);
  v27 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v19 - v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v12 = sub_23B1C6C98();
  v24 = *(_QWORD *)(v12 - 8);
  v25 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v23 = (char *)v19 - v13;
  v20 = sub_23B1C6C98();
  v19[5] = *(_QWORD *)(v20 - 8);
  v14 = MEMORY[0x24BDAC7A8](v20);
  v21 = (char *)v19 - v15;
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v30 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](v14);
  v19[4] = (char *)v19 - v16;
  v17 = *(_QWORD *)(v5 + 512);
  v18 = *(_QWORD *)(v5 + 528);
  v32 = v6;
  v33 = v17;
  v34 = v7;
  v35 = v18;
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23B0D0DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;

  *(_QWORD *)(v10 - 296) = a1;
  v11 = sub_23B1C6C98();
  *(_QWORD *)(v10 - 312) = v11;
  *(_QWORD *)(v10 - 320) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v10 - 304) = (char *)&a9 - v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v10 - 344) = AssociatedTypeWitness;
  *(_QWORD *)(v10 - 328) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v10 - 360) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v10 - 352) = (char *)&a9 - v17;
  *(_QWORD *)(v10 - 224) = v9;
  *(_QWORD *)(v10 - 248) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v10 - 176) = (char *)&a9 - v18;
  v19 = swift_getAssociatedTypeWitness();
  v20 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v22 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 128) = v19;
  *(_QWORD *)(v10 - 120) = v20;
  *(_QWORD *)(v10 - 112) = AssociatedConformanceWitness;
  *(_QWORD *)(v10 - 104) = v22;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0D0F6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  void (*v24)(uint64_t, _BYTE *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t TupleTypeMetadata3;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[96];

  *(_QWORD *)(v4 - 288) = a1;
  v5 = sub_23B1C6C98();
  *(_QWORD *)(v4 - 272) = v5;
  *(_QWORD *)(v4 - 280) = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v79[-v6];
  v9 = type metadata accessor for SnapshotItem(255, v1, v2, v8);
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v79[-v13];
  v15 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = &v79[-v16];
  v18 = *(_QWORD *)(v4 - 168);
  v19 = *(_QWORD *)(*(_QWORD *)(v4 - 160) + 32);
  v20 = *(_QWORD *)(v4 - 72);
  v21 = *(_QWORD *)(v3 + 544);
  v22 = v20 + *(_QWORD *)(v3 + 536);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v19 + 248))(v22, *(_QWORD *)(v20 + v21));
  if (!v18)
  {
    *(_QWORD *)(v4 - 408) = v19;
    *(_QWORD *)(v4 - 400) = v22;
    *(_QWORD *)(v4 - 392) = v17;
    *(_QWORD *)(v4 - 168) = 0;
    v23 = *(_BYTE **)(v4 - 72);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v9) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
      return 0;
    }
    *(_QWORD *)(v4 - 416) = v15;
    v24 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v15 + 32);
    v25 = *(_QWORD *)(v4 - 392);
    v24(v25, v14, v9);
    v26 = *(_QWORD *)(v4 - 288);
    v27 = *(_QWORD *)(v26 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 16))(v7, v25 + *(int *)(v9 + 40), v26);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v26);
    v28 = v23;
    v29 = &v23[*(_QWORD *)(*(_QWORD *)v23 + 584)];
    swift_beginAccess();
    (*(void (**)(_BYTE *, _BYTE *, _QWORD))(*(_QWORD *)(v4 - 280) + 40))(v29, v7, *(_QWORD *)(v4 - 272));
    swift_endAccess();
    v30 = MEMORY[0x23B8613CC](&unk_23B1DD478, v9);
    v31 = *(_QWORD *)(v4 - 176);
    *(_QWORD *)(v4 - 272) = v9;
    sub_23AF21A28(v9, v30, v31);
    v33 = *(_QWORD *)(v4 - 224);
    v32 = *(_QWORD *)(v4 - 216);
    v34 = *(_QWORD *)(v4 - 232);
    if ((v23[132] & 1) == 0 && sub_23AE4F6B4())
    {
      v35 = *(_QWORD *)(v4 - 176) + *(int *)(v33 + 40);
      v36 = (int *)type metadata accessor for ItemMetadata();
      if ((*(_BYTE *)(v35 + v36[16]) & 1) == 0 && (*(_BYTE *)(v35 + v36[17]) & 1) == 0)
      {
        v37 = (uint64_t *)(v35 + v36[14]);
        v38 = v37[1];
        if (v38)
        {
          v39 = *v37;
        }
        else
        {
          v39 = *(_QWORD *)(*(_QWORD *)(v4 - 176) + *(int *)(v33 + 36));
          v38 = swift_bridgeObjectRetain();
        }
        *v37 = v39;
        v37[1] = v38;
      }
    }
    if (sub_23AE4F6B4())
    {
      v40 = *(int *)(v33 + 40);
      v41 = type metadata accessor for ItemMetadata();
      v42 = *(_QWORD *)(v4 - 176);
      v43 = v42 + v40 + *(int *)(v41 + 144);
      if ((*(_BYTE *)(v43 + 4) & 1) == 0 && *(_DWORD *)v43 >= 2u)
      {
        v44 = *(_QWORD *)(v4 - 320);
        v45 = *(_QWORD *)(v4 - 304);
        v46 = *(_QWORD *)(v4 - 312);
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v44 + 16))(v45, &v23[*(_QWORD *)(*(_QWORD *)v23 + 560)], v46);
        v47 = *(_QWORD *)(v4 - 296);
        v48 = *(_QWORD *)(v47 - 8);
        *(_QWORD *)(v4 - 280) = v48;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v45, 1, v47) != 1)
        {
          v68 = v45 + *(int *)(v47 + 56);
          v69 = *(_QWORD *)(v4 - 328);
          v70 = *(_QWORD *)(v4 - 360);
          v71 = *(_QWORD *)(v4 - 344);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v70, v68, v71);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 280) + 8))(v45, *(_QWORD *)(v4 - 296));
          v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
          v73 = *(_QWORD *)(v4 - 352);
          v72(v73, v70, v71);
          v74 = *(void **)(v4 - 168);
          v75 = *(_QWORD *)(v4 - 336);
          (*(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v4 - 160) + 16) + 152))(v73);
          if (v74)
          {

            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 328) + 8))(v73, v71);
            (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 - 192) + 56))(v75, 1, 1, *(_QWORD *)(v4 - 184));
            *(_QWORD *)(v4 - 168) = 0;
            v49 = v34;
          }
          else
          {
            *(_QWORD *)(v4 - 168) = 0;
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 328) + 8))(v73, v71);
            v77 = *(_QWORD *)(v4 - 192);
            v76 = *(_QWORD *)(v4 - 184);
            v49 = v34;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76) != 1)
            {
              v78 = *(_QWORD *)(v4 - 384);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32))(v78, v75, v76);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 40))(v42, v78, v76);
              goto LABEL_18;
            }
          }
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 376) + 8))(v75, *(_QWORD *)(v4 - 368));
LABEL_18:
          v50 = (_QWORD *)((char *)v28 + *(_QWORD *)(*v28 + 552));
          v52 = *v50;
          v51 = v50[1];
          v53 = v28;
          v54 = *(_QWORD *)(v4 - 176);
          v55 = (_QWORD *)(v54 + *(int *)(v33 + 36));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *v55 = v52;
          v55[1] = v51;
          v56 = *(_QWORD *)(v4 - 256);
          v57 = *(_QWORD *)(v4 - 248);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v56, v54, v33);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v56, 0, 1, v33);
          v58 = (char *)v53 + *(_QWORD *)(*v53 + 576);
          swift_beginAccess();
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 240) + 40))(v58, v56, v49);
          swift_endAccess();
          swift_beginAccess();
          sub_23AD4332C((uint64_t)(v53 + 6), v4 - 128);
          v59 = v53[14];
          v60 = *(_QWORD *)(v4 - 184);
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          v62 = v32 + *(int *)(TupleTypeMetadata3 + 48);
          v63 = v32 + *(int *)(TupleTypeMetadata3 + 64);
          v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 192) + 16);
          v64(v32, *(_QWORD *)(v4 - 400), v60);
          v64(v62, v54, v60);
          v64(v63, v54, v60);
          v65 = *(_QWORD *)(v4 - 264);
          swift_storeEnumTagMultiPayload();
          v10 = sub_23ABD2E40(v4 - 128, v59, v32, v66);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(v32, v65);
          sub_23AD43374(v4 - 128);
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 416) + 8))(*(_QWORD *)(v4 - 392), *(_QWORD *)(v4 - 272));
          (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v54, v33);
          return v10;
        }
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
      }
    }
    v49 = v34;
    goto LABEL_18;
  }
  return v10;
}

void sub_23B0D161C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B0D16F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v10 - 488) = a1;
  v11 = sub_23B1C6C98();
  *(_QWORD *)(v10 - 424) = v11;
  *(_QWORD *)(v10 - 432) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v10 - 376) = (char *)&a9 - v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v10 - 384) = AssociatedTypeWitness;
  *(_QWORD *)(v10 - 392) = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v10 - 400) = (char *)&a9 - v14;
  *(_QWORD *)(v10 - 216) = v9;
  v15 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 504) = AssociatedConformanceWitness;
  type metadata accessor for ItemState(255, v15, AssociatedConformanceWitness, v17);
  v18 = swift_getAssociatedTypeWitness();
  v19 = swift_getAssociatedTypeWitness();
  v20 = swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 120) = v18;
  *(_QWORD *)(v10 - 112) = v19;
  *(_QWORD *)(v10 - 104) = v20;
  *(_QWORD *)(v10 - 96) = v21;
  type metadata accessor for FileItemVersion();
}

void sub_23B0D188C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  *(_QWORD *)(v14 - 408) = TupleTypeMetadata2;
  v16 = sub_23B1C74F0();
  *(_QWORD *)(v14 - 240) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v14 - 232) = v16;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v14 - 248) = (char *)&a9 - v17;
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 520) = v18;
  *(_QWORD *)(v14 - 528) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v14 - 416) = (char *)&a9 - v20;
  *(_QWORD *)(v14 - 280) = v12;
  *(_QWORD *)(v14 - 272) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 512) = (char *)&a9 - v21;
  *(_QWORD *)(v14 - 120) = v10;
  *(_QWORD *)(v14 - 112) = v11;
  *(_QWORD *)(v14 - 264) = v11;
  *(_QWORD *)(v14 - 104) = v9;
  *(_QWORD *)(v14 - 96) = v13;
  *(_QWORD *)(v14 - 256) = v13;
  type metadata accessor for Bouncing.BouncingContext();
}

uint64_t sub_23B0D19B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, _BYTE *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD, _BYTE *, uint64_t);
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t *);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, _QWORD, _QWORD, void (*)(), char *);
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[96];

  v7 = sub_23B1C6C98();
  *(_QWORD *)(v5 - 352) = v7;
  *(_QWORD *)(v5 - 368) = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 360) = &v108[-v9];
  *(_QWORD *)(v5 - 336) = a1;
  *(_QWORD *)(v5 - 328) = *(_QWORD *)(a1 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v5 - 440) = &v108[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v5 - 448) = v11;
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v5 - 344) = &v108[-v12];
  v13 = sub_23B1C6C98();
  *(_QWORD *)(v5 - 312) = v13;
  *(_QWORD *)(v5 - 320) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v108[-v14];
  v16 = sub_23B1C6C98();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = &v108[-v19];
  v21 = *(_QWORD *)(v1 - 8);
  v22 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v5 - 456) = &v108[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v5 - 224) = &v108[-v25];
  *(_QWORD *)(v5 - 464) = v26;
  v27 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v5 - 304) = &v108[-v28];
  *(_QWORD *)(v5 - 288) = v4;
  v29 = *(_QWORD *)(v4 - 8);
  v30 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v5 - 472) = &v108[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v5 - 480) = v31;
  MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v5 - 296) = &v108[-v32];
  *(_QWORD *)(v5 - 496) = *(_QWORD *)(*(_QWORD *)(v5 - 192) + 40);
  v33 = *(_QWORD *)(v5 - 184) + *(_QWORD *)(*(_QWORD *)(v5 - 216) + 584);
  swift_beginAccess();
  v34 = v33;
  v35 = v1;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16))(v20, v34, v16);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v1) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v20, v16);
    v36 = *(_QWORD *)(v5 - 264);
    *(_QWORD *)(v5 - 120) = v3;
    *(_QWORD *)(v5 - 112) = v36;
    v37 = *(_QWORD *)(v5 - 256);
    *(_QWORD *)(v5 - 104) = v2;
    *(_QWORD *)(v5 - 96) = v37;
    type metadata accessor for Propagation.PropagationError();
  }
  *(_QWORD *)(v5 - 536) = v3;
  *(_QWORD *)(v5 - 216) = v2;
  v38 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v21 + 32);
  v38(*(_QWORD *)(v5 - 224), v20, v1);
  v39 = *(_QWORD *)(v5 - 184);
  v40 = v39 + *(_QWORD *)(*(_QWORD *)v39 + 576);
  swift_beginAccess();
  v41 = *(_QWORD *)(v5 - 320);
  v42 = v40;
  v43 = *(_QWORD *)(v5 - 312);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v41 + 16))(v15, v42, v43);
  v44 = *(_QWORD *)(v5 - 288);
  v45 = v21;
  v46 = v39;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v29 + 48))(v15, 1, v44) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v15, v43);
    v47 = *(_QWORD *)(v5 - 264);
    *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 536);
    *(_QWORD *)(v5 - 112) = v47;
    v48 = *(_QWORD *)(v5 - 256);
    *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 216);
    *(_QWORD *)(v5 - 96) = v48;
    type metadata accessor for Propagation.PropagationError();
  }
  *(_QWORD *)(v5 - 312) = v45;
  v49 = *(void (**)(_QWORD, _BYTE *, uint64_t))(v29 + 32);
  v49(*(_QWORD *)(v5 - 296), v15, v44);
  v50 = *(_QWORD *)(v5 - 304);
  v51 = *(_BYTE **)(v5 - 224);
  *(_QWORD *)(v5 - 224) = v38;
  v38(v50, v51, v35);
  v52 = *(_QWORD *)(v5 - 368);
  v53 = *(_QWORD *)(v5 - 360);
  v54 = *(_QWORD *)(v5 - 352);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v53, v46 + *(_QWORD *)(*(_QWORD *)v46 + 560), v54);
  v55 = *(_QWORD *)(v5 - 328);
  v56 = v44;
  v57 = *(_QWORD *)(v5 - 336);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v57) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v54);
    v58 = *(_QWORD *)(v5 - 248);
    v59 = v58 + *(int *)(*(_QWORD *)(v5 - 408) + 48);
    v60 = *(_QWORD *)(v5 - 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v58, v60, v56);
    v61 = *(_QWORD *)(v5 - 312);
    v62 = *(_QWORD *)(v5 - 304);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v59, v62, v35);
    v63 = *(_QWORD *)(v5 - 232);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t))(v5 - 200))(v58);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 240) + 8))(v58, v63);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v35);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v60, v56);
  }
  v65 = v56;
  *(_QWORD *)(v5 - 320) = v49;
  *(_QWORD *)(v5 - 544) = v29;
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32);
  v67 = *(_QWORD *)(v5 - 344);
  *(_QWORD *)(v5 - 352) = v66;
  v66(v67, v53, v57);
  v68 = *(_QWORD *)(v5 - 416);
  (*(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v5 - 192) + 16) + 152))(v67);
  v69 = *(void (**)(uint64_t *))(v5 - 200);
  v70 = v55;
  v71 = *(_QWORD *)(v5 - 272);
  v72 = v68;
  v73 = v68;
  v74 = *(_QWORD *)(v5 - 280);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v72, 1, v74) == 1)
  {
    v75 = v46;
    v76 = v35;
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 528) + 8))(v73, *(_QWORD *)(v5 - 520));
  }
  else
  {
    v77 = *(_QWORD *)(v5 - 512);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v77, v73, v74);
    v79 = v65;
    if ((sub_23B1C63A4() & 1) != 0)
    {
      v80 = type metadata accessor for FileTreeError(0, *(_QWORD *)(v5 - 536), *(_QWORD *)(v5 - 216), v78);
      v81 = v71;
      MEMORY[0x23B8613CC](&unk_23B1D40CC, v80);
      v82 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      v83 = *(uint64_t **)(v5 - 248);
      *v83 = v82;
      v84 = *(_QWORD *)(v5 - 232);
      swift_storeEnumTagMultiPayload();
      v69(v83);
      (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v5 - 240) + 8))(v83, v84);
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v77, v74);
      (*(void (**)(_QWORD, _QWORD))(v70 + 8))(*(_QWORD *)(v5 - 344), *(_QWORD *)(v5 - 336));
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 312) + 8))(*(_QWORD *)(v5 - 304), v35);
      return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 544) + 8))(*(_QWORD *)(v5 - 296), v79);
    }
    v75 = v46;
    v76 = v35;
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v77, v74);
  }
  v85 = *(_QWORD *)(v5 - 488);
  v86 = *(_QWORD *)(v5 - 304);
  *(_QWORD *)(v5 - 192) = *(_QWORD *)(*(_QWORD *)(v5 - 496) + 16);
  v87 = *(_QWORD *)(v5 - 344);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v5 - 392) + 16))(*(_QWORD *)(v5 - 400), v87, *(_QWORD *)(v5 - 384));
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(*(_QWORD *)(v5 - 376), 1, 1, v85);
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v75 + *(_QWORD *)(*(_QWORD *)v75 + 568));
  v88 = *(_QWORD *)(v5 - 328);
  v89 = *(_QWORD *)(v5 - 440);
  v90 = *(_QWORD *)(v5 - 336);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16))(v89, v87, v90);
  v91 = *(_QWORD *)(v5 - 544);
  v92 = *(_QWORD *)(v5 - 472);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v91 + 16))(v92, *(_QWORD *)(v5 - 296), v65);
  v93 = *(_QWORD *)(v5 - 312);
  v94 = *(_QWORD *)(v5 - 456);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v94, v86, v76);
  v95 = (*(unsigned __int8 *)(v88 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  v96 = (*(_QWORD *)(v5 - 448) + v95 + *(unsigned __int8 *)(v91 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  v97 = (*(_QWORD *)(v5 - 480) + *(unsigned __int8 *)(v93 + 80) + v96) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  v98 = (char *)swift_allocObject();
  v99 = *(_QWORD *)(v5 - 264);
  *((_QWORD *)v98 + 2) = *(_QWORD *)(v5 - 536);
  *((_QWORD *)v98 + 3) = v99;
  v100 = *(_QWORD *)(v5 - 256);
  *((_QWORD *)v98 + 4) = *(_QWORD *)(v5 - 216);
  *((_QWORD *)v98 + 5) = v100;
  v101 = &v98[v95];
  v102 = *(_QWORD *)(v5 - 208);
  *((_QWORD *)v98 + 6) = *(_QWORD *)(v5 - 200);
  *((_QWORD *)v98 + 7) = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 - 352))(v101, v89, v90);
  v103 = &v98[v96];
  v104 = *(_QWORD *)(v5 - 288);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 - 320))(v103, v92, v104);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 - 224))(&v98[v97], v94, v76);
  v105 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, void (*)(), char *))(**(_QWORD **)(v5 - 192)
                                                                                                + 136);
  swift_retain();
  v106 = *(_QWORD *)(v5 - 400);
  v107 = *(_QWORD *)(v5 - 376);
  v105(v106, v107, *(_QWORD *)(v5 - 184), 0, sub_23B0D8E04, v98);
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 432) + 8))(v107, *(_QWORD *)(v5 - 424));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 392) + 8))(v106, *(_QWORD *)(v5 - 384));
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 328) + 8))(*(_QWORD *)(v5 - 344), v90);
  (*(void (**)(_QWORD, uint64_t))(v93 + 8))(*(_QWORD *)(v5 - 304), v76);
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 544) + 8))(*(_QWORD *)(v5 - 296), v104);
}

void sub_23B0D25C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  _QWORD v13[11];
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v13[7] = a6;
  v13[6] = a5;
  v16 = a4;
  v17 = a3;
  v18 = a2;
  v19 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13[8] = (char *)v13 - v12;
  v20 = a7;
  v21 = a8;
  v22 = a9;
  v23 = a10;
  v15 = a10;
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23B0D2684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v11 - 208) = a1;
  *(_QWORD *)(v11 - 224) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 240) = (char *)&a9 - v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v15);
  v16 = swift_getAssociatedTypeWitness();
  v17 = swift_getAssociatedTypeWitness();
  v18 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 192) = v9;
  *(_QWORD *)(v11 - 184) = v10;
  v19 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 120) = v16;
  *(_QWORD *)(v11 - 112) = v17;
  *(_QWORD *)(v11 - 104) = v18;
  *(_QWORD *)(v11 - 96) = v19;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0D2798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[96];

  *(_QWORD *)(v3 - 280) = v2;
  *(_QWORD *)(v3 - 288) = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v5 = sub_23B1C74F0();
  *(_QWORD *)(v3 - 168) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 - 160) = v5;
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v3 - 176) = &v88[-v6];
  v7 = sub_23B1C6C98();
  v8 = sub_23B1C74F0();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v88[-v10];
  v12 = *(_QWORD *)(v7 - 8);
  v13 = MEMORY[0x24BDAC7A8](v9);
  v15 = &v88[-v14];
  v16 = *(_QWORD *)(v1 - 8);
  v17 = MEMORY[0x24BDAC7A8](v13);
  v19 = &v88[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v21 = &v88[-v20];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v22 + 16))(v11, *(_QWORD *)(v3 - 136), v8);
  sub_23B0CF5D8(v8, v3 - 120, (uint64_t)v15);
  *(_QWORD *)(v3 - 296) = v19;
  *(_QWORD *)(v3 - 136) = v21;
  v23 = *(_QWORD *)(v3 - 200);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v1) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v7);
    v25 = type metadata accessor for FileTreeError(0, *(_QWORD *)(v3 - 184), *(_QWORD *)(v3 - 192), v24);
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v25);
    v26 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v27 = *(uint64_t **)(v3 - 176);
    *v27 = v26;
    v28 = *(_QWORD *)(v3 - 160);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *))(v3 - 144))(v27);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v3 - 168) + 8))(v27, v28);
  }
  *(_QWORD *)(v3 - 304) = v16;
  v30 = *(_QWORD *)(v3 - 136);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v16 + 32))(v30, v15, v1);
  v31 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 - 216) + 80);
  *(_QWORD *)(v3 - 312) = v1;
  v32 = v31(v1);
  v34 = v33;
  v35 = (uint64_t *)(v23 + *(int *)(*(_QWORD *)(v3 - 208) + 52));
  v37 = *v35;
  v36 = v35[1];
  swift_bridgeObjectRetain();
  v38 = v32;
  v39 = sub_23AAAE580(v32, v34);
  v41 = v40;
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v3 - 296);
  *(_QWORD *)(v3 - 320) = TupleTypeMetadata2;
  if (v41)
  {
    if (v39 == 12565487 && v41 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRetain();
      v44 = sub_23B1C64B8();
      v45 = sub_23AA8A1BC(v44, v38, v34);
      v47 = v46;
      v49 = v48;
      v51 = v50;
      swift_bridgeObjectRelease();
      v38 = MEMORY[0x23B85ED8C](v45, v47, v49, v51);
      v53 = v52;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    v43 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v43 & 1) != 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v53 = v34;
LABEL_10:
  swift_bridgeObjectRetain();
  v54 = sub_23AAAE580(v37, v36);
  v56 = v55;
  swift_bridgeObjectRelease();
  if (!v56)
    goto LABEL_16;
  if (v54 != 12565487 || v56 != 0xA300000000000000)
  {
    v57 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
      goto LABEL_15;
LABEL_16:
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRetain();
  v58 = sub_23B1C64B8();
  v59 = sub_23AA8A1BC(v58, v37, v36);
  v61 = v60;
  v63 = v62;
  v65 = v64;
  swift_bridgeObjectRelease();
  v37 = MEMORY[0x23B85ED8C](v59, v61, v63, v65);
  v36 = v66;
  swift_bridgeObjectRelease();
LABEL_17:
  v67 = *(_QWORD *)(v3 - 240);
  v68 = *(_QWORD *)(v3 - 232);
  if (v38 == v37 && v53 == v36)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v69 = *(_QWORD *)(v3 - 304);
    v70 = *(_QWORD *)(v3 - 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v42, v30, v70);
    v71 = *(_QWORD *)(v3 - 208);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 224) + 16))(v67, *(_QWORD *)(v3 - 200), v71);
  }
  else
  {
    v72 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v69 = *(_QWORD *)(v3 - 304);
    v70 = *(_QWORD *)(v3 - 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v42, v30, v70);
    v73 = *(_QWORD *)(v3 - 224);
    v71 = *(_QWORD *)(v3 - 208);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v73 + 16))(v67, *(_QWORD *)(v3 - 200), v71);
    if ((v72 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v67, v71);
      v77 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v77(v42, v70);
      v83 = *(_QWORD *)(v3 - 168);
      goto LABEL_25;
    }
  }
  v74 = v67;
  v75 = *(_QWORD *)(v3 - 256);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 216) + 72))(v70, *(_QWORD *)(v3 - 216));
  swift_getAssociatedConformanceWitness();
  v76 = sub_23B1C63A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v75, v68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 224) + 8))(v74, v71);
  v77 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v77(v42, v70);
  if ((v76 & 1) == 0)
  {
    v83 = *(_QWORD *)(v3 - 168);
    v30 = *(_QWORD *)(v3 - 136);
LABEL_25:
    v84 = *(uint64_t **)(v3 - 176);
    v85 = type metadata accessor for FileTreeError(0, *(_QWORD *)(v3 - 184), *(_QWORD *)(v3 - 192), v78);
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v85);
    v86 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    *v84 = v86;
    v87 = *(_QWORD *)(v3 - 160);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *))(v3 - 144))(v84);
    (*(void (**)(uint64_t *, uint64_t))(v83 + 8))(v84, v87);
    v82 = v30;
    return ((uint64_t (*)(uint64_t, uint64_t))v77)(v82, v70);
  }
  v79 = *(_QWORD *)(v3 - 176);
  v80 = v79 + *(int *)(*(_QWORD *)(v3 - 320) + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 - 280) - 8) + 16))(v79, *(_QWORD *)(v3 - 272));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v3 - 288) - 8) + 16))(v80, *(_QWORD *)(v3 - 264));
  v81 = *(_QWORD *)(v3 - 160);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t))(v3 - 144))(v79);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 168) + 8))(v79, v81);
  v82 = *(_QWORD *)(v3 - 136);
  return ((uint64_t (*)(uint64_t, uint64_t))v77)(v82, v70);
}

void sub_23B0D2F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *(_QWORD *)(a1 + 32);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = v5;
  v11[4] = a4;
  v11[5] = a5;
  v11[6] = a3;
  v11[7] = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23B0D161C();
}

uint64_t sub_23B0D2FB8()
{
  return swift_release();
}

void sub_23B0D2FD4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[100];

  v14[16] = a7;
  v14[25] = a5;
  v14[26] = a6;
  v14[23] = a1;
  v14[24] = a4;
  v14[22] = a3;
  v14[29] = a2;
  v7 = *a2;
  v8 = *(_QWORD *)(*a2 + 96);
  v9 = *(_QWORD *)(*a2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14[6] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14[5] = (char *)v14 - v11;
  v12 = *(_QWORD *)(v7 + 88);
  v13 = *(_QWORD *)(v7 + 104);
  v14[68] = v9;
  v14[18] = v12;
  v14[19] = v13;
  v14[69] = v12;
  v14[70] = v8;
  v14[71] = v13;
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23B0D3098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;

  v9[10] = a1;
  v10 = sub_23B1C6C98();
  v9[8] = v10;
  v9[20] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v9[9] = (char *)&a9 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v9[68] = AssociatedTypeWitness;
  v9[69] = v13;
  v9[70] = AssociatedConformanceWitness;
  v9[71] = v15;
  type metadata accessor for FileItemVersion();
}

void sub_23B0D3174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  void (*v39)(_BYTE *, void **, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  char *v42;
  uint64_t v43;
  void (*v44)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v45;
  _BYTE *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  void (*v51)(_BYTE *, uint64_t);
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(_QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, void (*)(), char *);
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[64];

  *(_QWORD *)(v1 + 224) = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v1 + 112) = v7;
  *(_QWORD *)(v1 + 120) = &v86[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v1 + 216) = &v86[-v8];
  *(_QWORD *)(v1 + 136) = v2;
  *(_QWORD *)(v1 + 168) = v3;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 + 56) = v4;
  v11 = type metadata accessor for ItemState(0, v4, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v1 + 104) = &v86[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v86[-v16];
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = &v86[-v19];
  *(_QWORD *)(v1 + 96) = v21;
  MEMORY[0x24BDAC7A8](v18);
  v23 = &v86[-v22];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v25 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (void **)&v86[-v26];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v28 + 16))(&v86[-v26], *(_QWORD *)(v1 + 184), v25);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = *v27;
    v30 = swift_allocObject();
    v32 = *(_QWORD *)(v1 + 192);
    v31 = *(_QWORD *)(v1 + 200);
    *(_QWORD *)(v30 + 16) = v32;
    *(_QWORD *)(v30 + 24) = v31;
    v33 = (_QWORD *)swift_allocObject();
    v34 = *(_QWORD *)(v1 + 176);
    v33[2] = v34;
    v33[3] = v29;
    v35 = *(_QWORD *)(v1 + 208);
    v33[4] = *(_QWORD *)(v1 + 232);
    v33[5] = v35;
    v33[6] = v32;
    v33[7] = v31;
    swift_retain_n();
    swift_retain_n();
    v36 = v29;
    v37 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD9F098, v34, (uint64_t)sub_23AD3B9C0, v30, (uint64_t)sub_23B0D9474, (uint64_t)v33, v37, MEMORY[0x24BEE0D00]);
    swift_release();
    swift_release();
    swift_release();

    return;
  }
  v38 = (char *)v27 + *(int *)(TupleTypeMetadata2 + 48);
  v39 = *(void (**)(_BYTE *, void **, uint64_t))(v12 + 32);
  *(_QWORD *)(v1 + 24) = v39;
  v39(v23, v27, v11);
  v40 = *(_QWORD *)(v1 + 216);
  v41 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1 + 224) + 32);
  *(_QWORD *)(v1 + 184) = a1;
  *(_QWORD *)(v1 + 16) = v41;
  v41(v40, v38, a1);
  v42 = *(char **)(v1 + 176);
  v43 = *((_QWORD *)v42 + 16);
  *(_QWORD *)(v1 + 88) = v12;
  v44 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
  v44(v20, v23, v11);
  v45 = v11;
  if ((v43 & 0x100000000) != 0)
  {
    v47 = 1;
  }
  else
  {
    v46 = &v20[*(int *)(v11 + 40)];
    v47 = v46[*(int *)(type metadata accessor for ItemMetadata() + 64)];
  }
  v48 = *(_QWORD *)(v1 + 136);
  v49 = *(_QWORD *)(v1 + 160);
  v50 = v20;
  v51 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v1 + 88) + 8);
  v51(v50, v45);
  v44(v17, v23, v45);
  *(_QWORD *)(v1 + 32) = v51;
  if (v47)
  {
    v51(v17, v45);
    *(_QWORD *)(v1 + 136) = 0;
  }
  else
  {
    v52 = &v17[*(int *)(v45 + 40)];
    LOBYTE(v52) = v52[*(int *)(type metadata accessor for ItemMetadata() + 68)];
    v51(v17, v45);
    *(_QWORD *)(v1 + 136) = ~(8 * (_BYTE)v52) & 8;
  }
  v53 = *(int *)(v45 + 40);
  v54 = &v23[v53 + *(int *)(type metadata accessor for ItemMetadata() + 144)];
  if ((v54[4] & 1) == 0 && *(_DWORD *)v54 >= 2u && sub_23AE4F6B4())
  {
    v55 = *(_QWORD *)(v1 + 64);
    v56 = *(_QWORD *)(v1 + 72);
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v56, &v42[*(_QWORD *)(*(_QWORD *)v42 + 560)], v55);
    v57 = *(_QWORD *)(v1 + 80);
    v58 = *(_QWORD *)(v57 - 8);
    *(_QWORD *)(v1 + 8) = v58;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) != 1)
    {
      v81 = (_QWORD *)(v56 + *(int *)(v57 + 52));
      v82 = v81[1];
      *(_QWORD *)(v1 + 160) = *v81;
      *(_QWORD *)(v1 + 64) = v82;
      v83 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8) + 8);
      swift_bridgeObjectRetain();
      v83(v56, v57);
      *(_QWORD *)(v1 + 136) |= 0x10uLL;
      type metadata accessor for BouncingHardlinkStagedContext(0, *(_QWORD *)(v1 + 168), v48, v84);
      v85 = *(_QWORD *)(v1 + 40);
      (*(void (**)(uint64_t, _BYTE *, _QWORD))(*(_QWORD *)(v1 + 48) + 16))(v85, v23, *(_QWORD *)(v1 + 56));
      *(_QWORD *)(v1 + 160) = sub_23B0D3A5C(v85, *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 64));
      v59 = 3;
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 160) + 8))(v56, v55);
  }
  type metadata accessor for StagedContext();
  *(_QWORD *)(v1 + 160) = swift_allocObject();
  v59 = 1;
LABEL_15:
  *(_QWORD *)(v1 + 80) = v59;
  v60 = *(_QWORD *)(*(_QWORD *)(v1 + 128) + 16);
  v61 = *(_QWORD *)v42;
  *(_QWORD *)(v1 + 128) = &v42[*(_QWORD *)(*(_QWORD *)v42 + 536)];
  *(_QWORD *)(v1 + 488) = 0;
  *(_QWORD *)(v1 + 496) = 0;
  *(_QWORD *)(v1 + 504) = 0xB000000000000000;
  *(_OWORD *)(v1 + 512) = 0u;
  *(_OWORD *)(v1 + 528) = 0u;
  v62 = *(_QWORD *)&v42[*(_QWORD *)(v61 + 568)];
  *(_QWORD *)(v1 + 64) = v60;
  *(_QWORD *)(v1 + 72) = v62;
  sub_23AAF8E48(v1 + 240);
  sub_23AAB7EC8(v1 + 240, v1 + 544);
  v63 = *(_QWORD *)(v1 + 224);
  v64 = *(_QWORD *)(v1 + 120);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v63 + 16))(v64, *(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 184));
  v65 = *(_BYTE **)(v1 + 104);
  v44(v65, v23, v45);
  v66 = (*(unsigned __int8 *)(v63 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v67 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 88) + 80);
  v68 = v42;
  v69 = (*(_QWORD *)(v1 + 112) + v66 + v67) & ~v67;
  v70 = *(_QWORD *)(v1 + 96) + v69 + 7;
  *(_QWORD *)(v1 + 96) = v45;
  *(_QWORD *)(v1 + 112) = v23;
  v71 = v70 & 0xFFFFFFFFFFFFFFF8;
  v72 = (char *)swift_allocObject();
  v73 = *(_QWORD *)(v1 + 144);
  *((_QWORD *)v72 + 2) = *(_QWORD *)(v1 + 168);
  *((_QWORD *)v72 + 3) = v73;
  v74 = *(_QWORD *)(v1 + 152);
  *((_QWORD *)v72 + 4) = v48;
  *((_QWORD *)v72 + 5) = v74;
  *((_QWORD *)v72 + 6) = *(_QWORD *)(v1 + 232);
  *((_QWORD *)v72 + 7) = v68;
  v75 = *(_QWORD *)(v1 + 200);
  *((_QWORD *)v72 + 8) = *(_QWORD *)(v1 + 192);
  *((_QWORD *)v72 + 9) = v75;
  (*(void (**)(char *, uint64_t, _QWORD))(v1 + 16))(&v72[v66], v64, *(_QWORD *)(v1 + 184));
  v76 = &v72[v69];
  v77 = *(_QWORD *)(v1 + 96);
  (*(void (**)(char *, _BYTE *, uint64_t))(v1 + 24))(v76, v65, v77);
  *(_QWORD *)&v72[v71] = *(_QWORD *)(v1 + 208);
  v78 = *(void (**)(_QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, void (*)(), char *))(**(_QWORD **)(v1 + 64) + 616);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v79 = *(_QWORD *)(v1 + 112);
  v80 = *(_QWORD *)(v1 + 216);
  v78(*(_QWORD *)(v1 + 128), v79, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 160), v1 + 488, v80, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 136), v1 + 544, 0, sub_23B0D92B8, v72);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 224) + 8))(v80, *(_QWORD *)(v1 + 184));
  (*(void (**)(uint64_t, uint64_t))(v1 + 32))(v79, v77);
}

void sub_23B0D3860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v15[0] = a6;
  v15[1] = a5;
  v18 = a3;
  v19 = a4;
  v17 = a1;
  v6 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)a1 + 504), *(_QWORD *)(*(_QWORD *)a1 + 520), a4);
  v16 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v16);
  v8 = (char *)v15 - v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v13 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))((char *)v15 - v14, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v8, 1, 1, v6);
  sub_23B0D694C();
}

uint64_t sub_23B0D39D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, _QWORD))(v5 + 8))(v6, *(_QWORD *)(v7 - 112));
  if (v0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v7 - 120))(0, 0, 0, v4);
}

uint64_t *sub_23B0D3A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t *v7;

  v6 = (uint64_t *)swift_allocObject();
  v7 = sub_23B0D88CC(a1, a2, a3, v6);
  swift_release();
  return v7;
}

void sub_23B0D3AC0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[14];
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = a8;
  v24 = a4;
  v19[12] = a6;
  v19[13] = a7;
  v25 = a5;
  v21 = a3;
  v22 = a2;
  v19[11] = a1;
  v20 = *a2;
  v8 = *(_QWORD *)(v20 + 96);
  v9 = *(_QWORD *)(v20 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  v26 = *(_QWORD *)(v13 - 8);
  v19[5] = v13;
  v19[10] = *(_QWORD *)(v26 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v19[6] = (char *)v19 - v14;
  v15 = swift_getAssociatedTypeWitness();
  v16 = swift_getAssociatedTypeWitness();
  v17 = swift_getAssociatedConformanceWitness();
  v19[7] = v9;
  v19[8] = v8;
  v18 = swift_getAssociatedConformanceWitness();
  v27 = v15;
  v28 = v16;
  v29 = v17;
  v30 = v18;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0D3C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[64];

  v7 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 264) = a1;
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v10 = &v35[-v9];
  *(_QWORD *)(v5 - 256) = &v35[-v9];
  type metadata accessor for ItemPropagationResult(255, v2, v3, v11);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v12 = sub_23B1C74F0();
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v5 - 272) = v12;
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v35[-v15];
  v17 = swift_allocObject();
  *(_QWORD *)(v5 - 216) = v17;
  v18 = *(_QWORD *)(v5 - 136);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v5 - 144);
  *(_QWORD *)(v17 + 24) = v18;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v13 + 16))(v16, *(_QWORD *)(v5 - 200), v12);
  *(_QWORD *)(v5 - 280) = v7;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 16))(v10, *(_QWORD *)(v5 - 192), a1);
  v19 = *(_QWORD *)(v5 - 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 16))(v4, *(_QWORD *)(v5 - 184), v1);
  v20 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (*(unsigned __int8 *)(v7 + 80) + v21 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v23 = (v8 + *(unsigned __int8 *)(v19 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = (*(_QWORD *)(v5 - 208) + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = (char *)swift_allocObject();
  *((_QWORD *)v26 + 2) = *(_QWORD *)(v5 - 232);
  v27 = *(_QWORD *)(v5 - 176);
  v28 = *(_QWORD *)(v5 - 224);
  *((_QWORD *)v26 + 3) = *(_QWORD *)(v27 + 88);
  *((_QWORD *)v26 + 4) = v28;
  *((_QWORD *)v26 + 5) = *(_QWORD *)(v27 + 104);
  (*(void (**)(char *, _BYTE *, _QWORD))(v13 + 32))(&v26[v20], v16, *(_QWORD *)(v5 - 272));
  v29 = *(_QWORD *)(v5 - 168);
  *(_QWORD *)&v26[v21] = v29;
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v5 - 280) + 32))(&v26[v22], *(_QWORD *)(v5 - 256), *(_QWORD *)(v5 - 264));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v5 - 128) + 32))(&v26[v23], *(_QWORD *)(v5 - 240), *(_QWORD *)(v5 - 248));
  v30 = *(_QWORD *)(v5 - 152);
  *(_QWORD *)&v26[v24] = *(_QWORD *)(v5 - 160);
  *(_QWORD *)&v26[v25] = v30;
  v31 = &v26[(v25 + 15) & 0xFFFFFFFFFFFFFFF8];
  v32 = *(_QWORD *)(v5 - 136);
  *(_QWORD *)v31 = *(_QWORD *)(v5 - 144);
  *((_QWORD *)v31 + 1) = v32;
  v33 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD9F098, v29, (uint64_t)sub_23AD43544, *(_QWORD *)(v5 - 216), (uint64_t)sub_23B0D98EC, (uint64_t)v26, v33, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23B0D3F38(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t TupleTypeMetadata2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int EnumCaseMultiPayload;
  uint64_t v44;
  void *v45;
  int v46;
  id v47;
  void (*v48)(char *, uint64_t *, uint64_t);
  char *v49;
  void *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  id v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  void *v100;
  uint64_t AssociatedConformanceWitness;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[2];
  uint64_t v107;

  v83 = a8;
  v84 = a7;
  v97 = a5;
  v98 = a6;
  v89 = a4;
  v102 = a1;
  v99 = a2;
  v8 = *a2;
  v9 = *(_QWORD *)(*a2 + 504);
  v10 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v10);
  v93 = (char *)&v76 - v11;
  v12 = *(_QWORD *)(v8 + 520);
  type metadata accessor for SnapshotItem(255, v9, v12, v13);
  v14 = sub_23B1C6C98();
  v95 = *(_QWORD *)(v14 - 8);
  v96 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v94 = (char *)&v76 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v88 = type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
  v18 = sub_23B1C6C98();
  v91 = *(_QWORD *)(v18 - 8);
  v92 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v90 = (char *)&v76 - v20;
  v87 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v76 - v21;
  v107 = v9;
  v103 = v12;
  v24 = type metadata accessor for ItemPropagationResult(0, v9, v12, v23);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v82 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v85 = (char *)&v76 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v86 = (char *)&v76 - v30;
  v31 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v33 = sub_23B1C74F0();
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (uint64_t *)((char *)&v76 - v35);
  v104 = *(_QWORD *)(v31 - 8);
  v105 = v31;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v76 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v76 - v40;
  (*(void (**)(uint64_t *, char *, uint64_t))(v42 + 16))(v36, v102, v33);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v102 = v41;
  if (EnumCaseMultiPayload == 1)
  {
    AssociatedConformanceWitness = *v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v41, 1, 1, v24);
    v86 = 0;
    v100 = 0;
    v44 = v25;
    goto LABEL_11;
  }
  v45 = *(void **)((char *)v36 + *(int *)(TupleTypeMetadata2 + 48));
  v46 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48))(v36, 1, v24);
  v44 = v25;
  v100 = v45;
  if (v46 == 1)
  {
    v41 = v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v102, 1, 1, v24);
    AssociatedConformanceWitness = 0;
    if (v45)
    {
LABEL_5:
      strcpy((char *)v106, " domver:");
      BYTE1(v106[1]) = 0;
      WORD1(v106[1]) = 0;
      HIDWORD(v106[1]) = -402653184;
      v47 = objc_msgSend(v45, sel_description);
      sub_23B1C63E0();

      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v86 = (char *)v106[0];
      goto LABEL_11;
    }
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t *, uint64_t))(v25 + 32);
    v49 = v86;
    v48(v86, v36, v24);
    v50 = v45;
    v51 = v102;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v102, v49, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v51, 0, 1, v24);
    v81 = v44;
    v52 = v103;
    v53 = *(void (**)(uint64_t, uint64_t))(v103 + 64);
    v80 = v50;
    v54 = v107;
    v79 = v53;
    v53(v107, v52);
    v78 = (uint64_t)v99 + *(_QWORD *)(*v99 + 536);
    LOBYTE(v53) = sub_23B1C63A4();
    v55 = v87;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v22, AssociatedTypeWitness);
    if ((v53 & 1) != 0)
    {
      v44 = v81;
      (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v24);

      AssociatedConformanceWitness = 0;
    }
    else
    {
      v77 = type metadata accessor for FileTreeError(0, v54, v52, v56);
      MEMORY[0x23B8613CC](&unk_23B1D40CC, v77);
      AssociatedConformanceWitness = swift_allocError();
      v58 = v57;
      sub_23B1C6C98();
      swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v58, v78, AssociatedTypeWitness);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, AssociatedTypeWitness);
      v79(v54, v52);
      swift_storeEnumTagMultiPayload();

      v44 = v81;
      (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v24);
    }
    v41 = v102;
    v45 = v100;
    if (v100)
      goto LABEL_5;
  }
  v86 = 0;
  v100 = 0;
LABEL_11:
  v60 = v104;
  v59 = v105;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v39, v41, v105);
  v87 = *(_QWORD *)(v44 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v39, 1, v24) == 1)
  {
    v61 = v44;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v59);
    if (AssociatedConformanceWitness)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      strcpy((char *)v106, "<actual:nil");
      HIDWORD(v106[1]) = -352321536;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
    }
  }
  else
  {
    v62 = v85;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v85, v39, v24);
    v106[0] = 0;
    v106[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23B1C7340();
    sub_23B1C64F4();
    sub_23AF16528(*(_QWORD *)&v62[*(int *)(v24 + 36)]);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v63 = v106[0];
    v64 = v106[1];
    v106[0] = 0;
    v106[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    strcpy((char *)v106, "shouldFetch:");
    BYTE5(v106[1]) = 0;
    HIWORD(v106[1]) = -5120;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v106[0] = v63;
    v106[1] = v64;
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v61 = v44;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v62, v24);
  }
  v65 = (uint64_t)v94;
  v66 = v90;
  v67 = v88;
  v68 = *(_QWORD *)(v88 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v90, v89, v88);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v66, 0, 1, v67);
  v69 = v102;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v102, 1, v24))
  {
    v70 = v107;
    v71 = *(_QWORD *)(v107 - 8);
    v72 = 1;
    v73 = (uint64_t)v93;
  }
  else
  {
    v74 = v82;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v82, v69, v24);
    v70 = v107;
    v71 = *(_QWORD *)(v107 - 8);
    v73 = (uint64_t)v93;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v93, v74, v107);
    v72 = 0;
  }
  v75 = v103;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v73, v72, 1, v70);
  sub_23AF17160(v73, v70, v75, v65);
  sub_23B0D694C();
}

uint64_t sub_23B0D48D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (v1)
  {
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 200) + 8))(v3, *(_QWORD *)(v7 - 192));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 232) + 8))(v6, *(_QWORD *)(v7 - 224));
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 200) + 8))(v3, *(_QWORD *)(v7 - 192));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 232) + 8))(v6, *(_QWORD *)(v7 - 224));
    (*(void (**)(_QWORD, uint64_t, uint64_t, void *))(v7 - 288))(0, v2, v0, v4);

    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 120) + 8))(v5, *(_QWORD *)(v7 - 112));
}

void sub_23B0D49AC(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *TupleTypeMetadata;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 520);
  v5 = *(_QWORD *)(*v1 + 504);
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem(255, v5, v4, v6);
  sub_23B1C6C98();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v8 = a1 + TupleTypeMetadata[12];
  v9 = (_QWORD *)(a1 + TupleTypeMetadata[16]);
  v10 = TupleTypeMetadata[20];
  v11 = (uint64_t)v1 + *(_QWORD *)(v3 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v11, AssociatedTypeWitness);
  v14 = type metadata accessor for SnapshotItem(0, v5, v4, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  v15 = *v1;
  v16 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 552));
  v17 = v16[1];
  *v9 = *v16;
  v9[1] = v17;
  *(_QWORD *)(a1 + v10) = *(uint64_t *)((char *)v1 + *(_QWORD *)(v15 + 544));
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23B0D4B34()
{
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TestingOperation();
}

uint64_t sub_23B0D4B58(uint64_t a1)
{
  uint64_t v1;

  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
  return swift_bridgeObjectRetain();
}

void sub_23B0D4BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23B0D4C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);

  v4 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 576);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, v1, AssociatedConformanceWitness, v6);
  v7 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0D4D7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23B1C6C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void sub_23B0D4DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v0 = sub_23AF1A8FC();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23B0D4E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);

  v4 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 576);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, v1, AssociatedConformanceWitness, v6);
  v7 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0D4F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

void sub_23B0D4FD0()
{
  sub_23B0D4DB8();
}

uint64_t sub_23B0D4FDC()
{
  return swift_deallocClassInstance();
}

void type metadata accessor for Bouncing.BounceItem()
{
  JUMPOUT(0x23B861318);
}

void sub_23B0D4FFC(uint64_t a1@<X8>)
{
  sub_23B0D0B00(a1);
}

void sub_23B0D5028()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23B0D50D0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
}

void type metadata accessor for Bouncing.BouncingContext()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B0D5118()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_23B1C6C98();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23B0D51AC(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (a1)
    return v1;
  else
    return 0;
}

uint64_t sub_23B0D51C4(char a1)
{
  return a1 & 1;
}

uint64_t sub_23B0D51D0(char a1)
{
  return a1 & 1;
}

uint64_t sub_23B0D51D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B8613CC](&unk_23B1E6218, a3);
  return sub_23B1C73B8();
}

uint64_t sub_23B0D522C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1E6218, a1);
  return sub_23B1C6698();
}

uint64_t sub_23B0D5278()
{
  MEMORY[0x23B8613CC](&unk_23B1E6218);
  return sub_23B1C66B0();
}

uint64_t sub_23B0D52C8()
{
  MEMORY[0x23B8613CC](&unk_23B1E6218);
  return sub_23B1C66A4();
}

uint64_t sub_23B0D5318@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_23B0D51AC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23B0D5348@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_23B0D51D0(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_23B0D5378()
{
  char *v0;

  return sub_23B0D51C4(*v0);
}

uint64_t sub_23B0D539C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_23B0D51AC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_23B0D53C8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1E62B8, a1);
  return sub_23B1C7544();
}

uint64_t sub_23B0D53FC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1E62B8, a1);
  return sub_23B1C7550();
}

uint64_t sub_23B0D5430(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_23B0D547C(a1);
  return v2;
}

uint64_t *sub_23B0D547C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(void);
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[5];
  char v43;

  v2 = v1;
  v4 = *v1;
  v6 = *(_QWORD *)(*v1 + 112);
  v5 = *(_QWORD *)(*v1 + 120);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_23B1C6C98();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v29 - v9;
  v39 = v6;
  v40 = v5;
  v11 = type metadata accessor for BouncingHardlinkStagedContext.CodingKeys(255, v6, v5, v10);
  MEMORY[0x23B8613CC](&unk_23B1E62B8, v11);
  v33 = sub_23B1C7208();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v13 = (char *)&v29 - v12;
  v14 = (uint64_t)v2 + *(_QWORD *)(v4 + 128);
  v15 = *(void (**)(void))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v34 = v14;
  v15();
  v16 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 136));
  *v16 = 0;
  v16[1] = 0;
  v37 = a1;
  v38 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  v17 = v41;
  sub_23B1C7520();
  if (v17)
  {
    swift_release();
    v18 = v39;
    v19 = v40;
    v21 = v35;
    v20 = v36;
    v22 = v34;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
    swift_bridgeObjectRelease();
    type metadata accessor for BouncingHardlinkStagedContext(0, v18, v19, v23);
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v42[0]) = 0;
    swift_getAssociatedConformanceWitness();
    sub_23B1C71C0();
    v30 = v2;
    v25 = v32;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v15)(v32, 0, 1, AssociatedTypeWitness);
    v26 = v34;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 40))(v26, v25, v36);
    swift_endAccess();
    v43 = 1;
    sub_23AA7E3CC();
    v41 = v13;
    sub_23B1C71C0();
    v27 = v42[1];
    v28 = v38;
    *v38 = v42[0];
    v28[1] = v27;
    v2 = v30;
    swift_release();
    swift_bridgeObjectRelease();
    sub_23B1C7124();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  return v2;
}

uint64_t sub_23B0D5834(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t AssociatedTypeWitness;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v3 = *v1;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E24F0);
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v3 + 112);
  v30 = *(_QWORD *)(v3 + 120);
  v5 = v30;
  v31 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_23B1C6C98();
  v29 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - v8;
  v11 = type metadata accessor for BouncingHardlinkStagedContext.CodingKeys(255, v6, v5, v10);
  MEMORY[0x23B8613CC](&unk_23B1E62B8, v11);
  v12 = sub_23B1C72EC();
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = v29;
  sub_23B1C7538();
  v16 = v34;
  v17 = v34 + *(_QWORD *)(*(_QWORD *)v34 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, v17, v7);
  LOBYTE(v36) = 0;
  v18 = v14;
  v19 = v9;
  v39 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 24);
  MEMORY[0x23B8613CC](MEMORY[0x24BEE4AA8], v7, &v39);
  v20 = v35;
  sub_23B1C72A4();
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v18, v12);
  }
  else
  {
    v21 = v15;
    v22 = v33;
    v23 = v27;
    v24 = v28;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v7);
    v36 = *(_OWORD *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 136));
    v38 = 1;
    __swift_instantiateConcreteTypeFromMangledName(qword_2542E72C8);
    sub_23B0D68E8();
    sub_23B1C72A4();
    sub_23B1C7214();
    __swift_project_boxed_opaque_existential_1(&v36, v37);
    sub_23AB6E3F4();
    sub_23B1C7538();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v18, v12);
  }
}

uint64_t sub_23B0D5B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B0D5BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23B0D5C64()
{
  sub_23B0D5BEC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BouncingHardlinkStagedContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BouncingHardlinkStagedContext);
}

void type metadata accessor for Bouncing()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B0D5CA0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23B0D5D2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t *, uint64_t);
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + 16 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7) + v6 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v11 = AssociatedTypeWitness;
    v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v12(a1, a2, AssociatedTypeWitness);
    v13 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v13 = *v14;
    v13[1] = v14[1];
    v15 = ((unint64_t)v13 + v7 + 16) & ~v7;
    v16 = ((unint64_t)v14 + v7 + 16) & ~v7;
    swift_bridgeObjectRetain();
    v12((uint64_t *)v15, (uint64_t *)v16, v11);
  }
  return a1;
}

uint64_t sub_23B0D5E54(unint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  v6(a1, AssociatedTypeWitness);
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  return v6((v4 + *(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80), AssociatedTypeWitness);
}

uint64_t sub_23B0D5EF4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = ((unint64_t)v8 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v9 + v10 + 16) & ~v10;
  swift_bridgeObjectRetain();
  v6(v11, v12, AssociatedTypeWitness);
  return a1;
}

unint64_t sub_23B0D5FB8(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6(((unint64_t)v8 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_23B0D6088(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = (_OWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_OWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v6(((unint64_t)v8 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_23B0D6138(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  v6(((unint64_t)v8 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23B0D61F8(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (a2 <= v6)
    goto LABEL_24;
  v8 = ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + v7;
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v12 = ((a2 - v6 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_24;
      goto LABEL_15;
    }
    if (v12 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_24;
      goto LABEL_15;
    }
    if (v12 < 2)
    {
LABEL_24:
      if (v5 >= 0x7FFFFFFF)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
      v15 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_24;
LABEL_15:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v14 = v8;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  return v6 + v13 + 1;
}

void sub_23B0D6398(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

void sub_23B0D65CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 576);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B0D6724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v15, 1, 1, a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13 + *(_QWORD *)(*(_QWORD *)v13 + 536), a10, v14);
  *(_QWORD *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 544)) = a11;
  v16 = (_QWORD *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 552));
  *v16 = a12;
  v16[1] = a13;
  type metadata accessor for Bouncing.BouncingContext();
}

uint64_t sub_23B0D67B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v6, v2);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 568)) = v7;
  v3 = v7;
  v4 = sub_23AF1A8A8(v9, v10, v8);
  swift_retain();
  sub_23AEACC34(0x2000);
  swift_release();
  return v4;
}

void sub_23B0D6830()
{
  swift_allocObject();
  sub_23B0D65CC();
}

void type metadata accessor for Bouncing.BouncingContext.CodingKeys()
{
  JUMPOUT(0x23B861318);
}

uint64_t type metadata accessor for BouncingHardlinkStagedContext.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BouncingHardlinkStagedContext.CodingKeys);
}

unint64_t sub_23B0D68E8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2569E8578[0];
  if (!qword_2569E8578[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2542E72C8);
    v2 = sub_23AB5EA4C();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, qword_2569E8578);
  }
  return result;
}

void sub_23B0D694C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B0D6A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v12 - 656) = a1;
  v13 = sub_23B1C6C98();
  *(_QWORD *)(v12 - 680) = v13;
  *(_QWORD *)(v12 - 688) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v12 - 696) = (char *)&a9 - v14;
  v16 = type metadata accessor for ItemReconciliationHalf(0, v9, v11, v15);
  *(_QWORD *)(v12 - 672) = v16;
  *(_QWORD *)(v12 - 648) = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v12 - 704) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v12 - 664) = (char *)&a9 - v19;
  *(_QWORD *)(v12 - 264) = v10;
  v20 = *(_QWORD *)(v10 + 512);
  v21 = *(_QWORD *)(v10 + 528);
  v23 = type metadata accessor for ItemReconciliationHalf(0, v20, v21, v22);
  *(_QWORD *)(v12 - 736) = v23;
  *(_QWORD *)(v12 - 712) = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v12 - 720) = (char *)&a9 - v24;
  *(_QWORD *)(v12 - 128) = v9;
  *(_QWORD *)(v12 - 120) = v20;
  *(_QWORD *)(v12 - 112) = v11;
  *(_QWORD *)(v12 - 104) = v21;
  type metadata accessor for ItemReconciliation();
}

void sub_23B0D6B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  *(_QWORD *)(v13 - 616) = a1;
  v14 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 608) = v14;
  *(_QWORD *)(v13 - 624) = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 640) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 744) = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 728) = (char *)&a9 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 632) = (char *)&a9 - v22;
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 600) = (char *)&a9 - v23;
  v24 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 560) = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v13 - 224) = AssociatedConformanceWitness;
  *(_QWORD *)(v13 - 136) = AssociatedTypeWitness;
  v29 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v28);
  *(_QWORD *)(v13 - 416) = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v13 - 576) = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v13 - 536) = (char *)&a9 - v32;
  *(_QWORD *)(v13 - 392) = v33;
  v34 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 360) = v34;
  *(_QWORD *)(v13 - 400) = *(_QWORD *)(v34 - 8);
  v35 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v13 - 544) = (char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v13 - 424) = (char *)&a9 - v37;
  v39 = type metadata accessor for SnapshotItem(255, v10, v11, v38);
  v40 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 304) = v40;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(v40 - 8);
  v41 = MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v13 - 384) = (char *)&a9 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  *(_QWORD *)(v13 - 568) = (char *)&a9 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - v46;
  *(_QWORD *)(v13 - 336) = v39;
  *(_QWORD *)(v13 - 320) = *(_QWORD *)(v39 - 8);
  v47 = MEMORY[0x24BDAC7A8](v45);
  *(_QWORD *)(v13 - 376) = (char *)&a9 - v48;
  *(_QWORD *)(v13 - 184) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v49 = MEMORY[0x24BDAC7A8](v47);
  *(_QWORD *)(v13 - 584) = (char *)&a9 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v49);
  *(_QWORD *)(v13 - 552) = (char *)&a9 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  *(_QWORD *)(v13 - 432) = (char *)&a9 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  *(_QWORD *)(v13 - 592) = (char *)&a9 - v56;
  MEMORY[0x24BDAC7A8](v55);
  *(_QWORD *)(v13 - 440) = (char *)&a9 - v57;
  v59 = type metadata accessor for FileTreeError(0, v10, v11, v58);
  *(_QWORD *)(v13 - 296) = v59;
  *(_QWORD *)(v13 - 448) = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - v60;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v9;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B0D6FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 248) = a1;
  *(_QWORD *)(v13 - 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 256) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 200) = v10;
  *(_QWORD *)(v13 - 192) = v11;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v9;
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23B0D7030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;

  v12 = sub_23B1C6C98();
  v13 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v11 - 464) = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v11 - 520) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v11 - 280) = (char *)&a9 - v19;
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v11 - 328) = (char *)&a9 - v20;
  *(_QWORD *)(v11 - 216) = v10;
  *(_QWORD *)(v11 - 208) = v9;
  v22 = v21;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 128) = *(_QWORD *)(v11 - 136);
  *(_QWORD *)(v11 - 120) = v22;
  *(_QWORD *)(v11 - 112) = *(_QWORD *)(v11 - 224);
  *(_QWORD *)(v11 - 104) = AssociatedConformanceWitness;
  type metadata accessor for ReconciliationID();
}

void sub_23B0D7178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v16 - 144) = a1;
  *(_QWORD *)(v16 - 160) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&a9 - v17;
  v19 = *(_QWORD *)(*(_QWORD *)(v16 - 264) + 560);
  *(_QWORD *)(v16 - 176) = v10;
  v20 = v10 + v19;
  v21 = *(void (**)(uint64_t))(v14 + 16);
  *(_QWORD *)(v16 - 488) = v20;
  *(_QWORD *)(v16 - 480) = v21;
  v21(v12);
  v22 = *(_QWORD *)(v11 - 8);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  *(_QWORD *)(v16 - 496) = v23;
  v24 = v23(v12, 1, v11);
  *(_QWORD *)(v16 - 504) = v15;
  *(_QWORD *)(v16 - 456) = v11;
  *(_QWORD *)(v16 - 512) = v9;
  *(_QWORD *)(v16 - 472) = v13;
  *(_QWORD *)(v16 - 528) = v22;
  if (v24 == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v16 - 184) + 16))(v18, *(_QWORD *)(v16 - 176) + *(_QWORD *)(**(_QWORD **)(v16 - 176) + 536), *(_QWORD *)(v16 - 136));
  }
  else
  {
    v25 = *(_QWORD *)(v16 - 280);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v25, v12, v15);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v11);
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
    v27 = *(char **)(v16 - 328);
    v26(v27, v25, v15);
    v26(v18, (uint64_t)v27, v15);
  }
  swift_storeEnumTagMultiPayload();
  v28 = *(_QWORD *)(v16 - 216);
  *(_QWORD *)(v16 - 128) = *(_QWORD *)(v16 - 200);
  *(_QWORD *)(v16 - 120) = v28;
  v29 = *(_QWORD *)(v16 - 208);
  *(_QWORD *)(v16 - 112) = *(_QWORD *)(v16 - 192);
  *(_QWORD *)(v16 - 104) = v29;
  type metadata accessor for JobResult();
}

void sub_23B0D7304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t EnumCaseMultiPayload;
  uint64_t TupleTypeMetadata;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v6 - 152) = v2;
  *(_QWORD *)(v6 - 280) = TupleTypeMetadata2;
  v9 = *(_QWORD *)(v6 - 256);
  v10 = v9 + *(int *)(TupleTypeMetadata2 + 48);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 160) + 16);
  *(_QWORD *)(v6 - 264) = v11;
  v11(v9, v2, v5);
  v12 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 536);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v13(v10, v12, v1);
  swift_storeEnumTagMultiPayload();
  v14 = *(_QWORD *)(v6 - 248);
  swift_storeEnumTagMultiPayload();
  v15 = *(_QWORD *)(v6 - 168);
  sub_23AEB700C(v15, v9);
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 272) + 8);
  v16(v9, v14);
  v17 = v9 + *(int *)(*(_QWORD *)(v6 - 280) + 48);
  *(_QWORD *)(v6 - 328) = v12;
  v18 = v12;
  v19 = *(_QWORD *)(v6 - 136);
  *(_QWORD *)(v6 - 272) = v13;
  v13(v9, v18, v19);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 - 264))(v17, *(_QWORD *)(v6 - 152), v5);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v6 - 264) = a1;
  sub_23AEB700C(v15, v9);
  v16(v9, v14);
  v20 = *(void **)(v6 - 232);
  if (!v20)
  {
    *(_QWORD *)(v6 - 232) = v16;
    v37 = *(_QWORD *)(v6 - 312);
    v38 = *(_QWORD *)(v6 - 368);
    v39 = *(_QWORD *)(v6 - 304);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 16))(v38, *(_QWORD *)(v6 - 352), v39);
    v40 = *(_QWORD *)(v6 - 320);
    v41 = *(_QWORD *)(v6 - 336);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v41) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
    }
    else
    {
      v42 = *(_QWORD *)(v6 - 376);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v42, v38, v41);
      v43 = *(_QWORD *)(v6 - 400);
      v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      v45 = *(_QWORD *)(v6 - 424);
      v46 = *(_QWORD *)(v6 - 408);
      v47 = *(_QWORD *)(v6 - 360);
      *(_QWORD *)(v6 - 280) = v44;
      v44(v45, v46, v47);
      v48 = *(_QWORD *)(v6 - 416);
      v49 = v41;
      v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
      v51 = v40;
      v52 = *(_QWORD *)(v6 - 392);
      if (v50(v45, 1, v52) != 1)
      {
        v63 = v50;
        v64 = *(_QWORD *)(v6 - 552);
        v65 = *(_QWORD *)(v6 - 136);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 - 272))(v64, v45, v65);
        v66 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        v66(v45, v52);
        v67 = v52;
        v68 = *(_QWORD *)(v6 - 184);
        v69 = *(_QWORD *)(v6 - 432);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v69, v64, v65);
        v70 = *(_QWORD *)(v6 - 544);
        v71 = *(_QWORD *)(v6 - 360);
        (*(void (**)(void))(v6 - 280))();
        if (v63(v70, 1, v67) != 1)
        {
          v74 = (_QWORD *)(v70 + *(int *)(v67 + 36));
          v75 = v74[1];
          *(_QWORD *)(v6 - 280) = *v74;
          swift_bridgeObjectRetain();
          v66(v70, v67);
          v76 = v66;
          v77 = *(_QWORD *)(v6 - 584);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 - 272))(v77, v69, v65);
          v78 = *(_QWORD *)(v6 - 336);
          v79 = *(_QWORD *)(v6 - 376);
          v80 = *(_QWORD *)(v6 - 560);
          sub_23AA9BA80(v79 + *(int *)(v78 + 48), v80);
          sub_23AEF9C70(v77, *(_QWORD *)(v6 - 280), v75, v80, v65, *(_QWORD *)(v6 - 224), *(_QWORD *)(v6 - 536));
          v81 = MEMORY[0x23B8613CC](&unk_23B1DD478, v78);
          v82 = *(_QWORD *)(v6 - 576);
          sub_23AF21A28(v78, v81, v82);
          *(_QWORD *)(v6 - 280) = sub_23AEF9CF0(v82, 0, 1, v67);
          *(_QWORD *)(v6 - 224) = v76;
          v76(v82, v67);
          v83 = *(_QWORD *)(v6 - 320);
          v84 = *(_QWORD *)(v6 - 568);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v84, v79, v78);
          v85 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v78);
          v86 = *(_QWORD *)(v6 - 176);
          v87 = *(_QWORD *)(v86 + 112);
          v88 = *(_QWORD *)(v86 + 120);
          (*(void (**)(uint64_t))(**(_QWORD **)(v6 - 168) + 192))(v85);
          sub_23B0F7398(v84, *(_QWORD *)(v6 - 328), 0, 0, 0, *(_QWORD *)(v6 - 344), v87, v88);
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 400) + 8))(v70, v71);
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v65);
        v40 = *(_QWORD *)(v6 - 320);
        v41 = *(_QWORD *)(v6 - 336);
        (*(void (**)(_QWORD, uint64_t))(v40 + 8))(*(_QWORD *)(v6 - 376), v41);
        v53 = *(_QWORD *)(v6 - 168);
LABEL_17:
        v54 = *(_QWORD *)(v6 - 384);
        v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v54, 1, 1, v41);
        v56 = *(_QWORD *)(v6 - 176);
        v57 = *(_QWORD *)(v56 + 112);
        v58 = *(_QWORD *)(v56 + 120);
        (*(void (**)(uint64_t))(*(_QWORD *)v53 + 192))(v55);
        sub_23B0F7398(v54, *(_QWORD *)(v6 - 328), 0, 0, 0, *(_QWORD *)(v6 - 344), v57, v58);
      }
      (*(void (**)(uint64_t, _QWORD))(v43 + 8))(v45, *(_QWORD *)(v6 - 360));
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v42, v49);
      v41 = v49;
      v40 = v51;
    }
    v53 = *(_QWORD *)(v6 - 168);
    goto LABEL_17;
  }
  v21 = v19;
  *(_QWORD *)(v6 - 72) = v20;
  v22 = v20;
  v23 = v20;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  v24 = *(_QWORD *)(v6 - 288);
  v25 = *(_QWORD *)(v6 - 296);
  if (!swift_dynamicCast())
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(*(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 144));

LABEL_24:
    return;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload != 10)
  {
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      MEMORY[0x24BDAC7A8](EnumCaseMultiPayload);
      *(_QWORD *)(v6 - 128) = v19;
      *(_QWORD *)(v6 - 120) = &type metadata for Filename;
      *(_QWORD *)(v6 - 112) = v19;
      *(_QWORD *)(v6 - 104) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E22A0);
      *(_QWORD *)(v6 - 96) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E7700);
      TupleTypeMetadata = swift_getTupleTypeMetadata();
      swift_bridgeObjectRelease();
      v28 = (unint64_t *)(v24 + *(int *)(TupleTypeMetadata + 80));
      v29 = *v28;
      v30 = v28[1];

      v31 = v24;
      v32 = *(_QWORD *)(v6 - 440);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 184) + 32))(v32, v31, v21);
      if (v29 < 0xFFFFFFFF00000000 || (v30 & 0xF000000000000007) != 0)
      {
        v33 = v30;
        if (!(v30 >> 62))
          goto LABEL_10;
        if (v30 >> 62 == 1)
        {
          v33 = v30 & 0x3FFFFFFFFFFFFFFFLL;
LABEL_10:
          *(_QWORD *)(v6 - 248) = v33;
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 272))(*(_QWORD *)(v6 - 592), v32, v21);
          v34 = *(_QWORD *)(v6 - 176);
          *(_QWORD *)(v6 - 224) = v29;
          *(_QWORD *)(v6 - 256) = *(_QWORD *)(v34 + 112);
          v35 = *(_QWORD *)(v6 - 216);
          *(_QWORD *)(v6 - 128) = *(_QWORD *)(v6 - 200);
          *(_QWORD *)(v6 - 120) = v35;
          v36 = *(_QWORD *)(v6 - 208);
          *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 192);
          *(_QWORD *)(v6 - 104) = v36;
          type metadata accessor for Ingestion.TrackTemporaryItem();
        }
      }
      v72 = *(_QWORD *)(v6 - 216);
      *(_QWORD *)(v6 - 128) = *(_QWORD *)(v6 - 200);
      *(_QWORD *)(v6 - 120) = v72;
      v73 = *(_QWORD *)(v6 - 208);
      *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 192);
      *(_QWORD *)(v6 - 104) = v73;
      type metadata accessor for Ingestion.FetchItemMetadata();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(*(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 144));

    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 448) + 8))(v24, v25);
    goto LABEL_24;
  }
  v59 = *(_QWORD *)(v6 - 464);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v6 - 480))(v59, *(_QWORD *)(v6 - 488), *(_QWORD *)(v6 - 472));
  v60 = *(_QWORD *)(v6 - 456);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 - 496))(v59, 1, v60) != 1)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v6 - 512) + 16))(*(_QWORD *)(v6 - 520), v59, *(_QWORD *)(v6 - 504));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 528) + 8))(v59, v60);
    v61 = *(_QWORD *)(v6 - 200);
    *(_QWORD *)(v6 - 128) = *(_QWORD *)(v6 - 216);
    *(_QWORD *)(v6 - 120) = v61;
    v62 = *(_QWORD *)(v6 - 192);
    *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 208);
    *(_QWORD *)(v6 - 104) = v62;
    type metadata accessor for Ingestion.FetchItemMetadata();
  }
  __break(1u);
}

uint64_t *sub_23B0D88CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a2;
  v21 = a3;
  v6 = *a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = (uint64_t)a4 + *(_QWORD *)(v6 + 128);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v14(v12, 1, 1, AssociatedTypeWitness);
  v15 = (uint64_t *)((char *)a4 + *(_QWORD *)(*a4 + 136));
  *v15 = 0;
  v15[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v11, a1, AssociatedTypeWitness);
  v14((uint64_t)v11, 0, 1, AssociatedTypeWitness);
  swift_beginAccess();
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 40);
  swift_retain();
  v16(v12, v11, v8);
  swift_endAccess();
  v17 = v21;
  *v15 = v20;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_23B0D8A20()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B0D8A64(uint64_t a1)
{
  uint64_t v1;

  sub_23B0D2FD4(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_23B0D8A74()
{
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23B0D8AB4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0D8BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8);
  v8(v1 + v21, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  v8(v1 + v21 + *(int *)(v2 + 56), AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1 + v20, v3);
  swift_bridgeObjectRelease();
  v9 = v1 + v20 + *(int *)(v4 + 40);
  v10 = (int *)type metadata accessor for ItemMetadata();
  v11 = v9 + v10[7];
  v12 = sub_23B1C5BDC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v14(v9 + v10[8], v12);
  swift_bridgeObjectRelease();
  v15 = v9 + v10[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
    v14(v15, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(v9 + v10[33]);
  v17 = v16[1];
  if (v17 >> 60 != 15)
    sub_23AAAE53C(*v16, v17);
  swift_bridgeObjectRelease();
  v18 = v1 + ((v20 + v22 + v6) & ~v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v18);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v18 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23B0D8E04()
{
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23B0D8E48()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

#error "23B0D8F8C: call analysis failed (funcsize=14)"

void sub_23B0D8FB0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0D9070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(unint64_t, uint64_t);
  unint64_t v19;
  uint64_t *v20;
  unint64_t v21;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = (v7 + *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + v6, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2 + v6 + *(int *)(a1 + 56), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v2 + v12, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  v13 = v2 + v12 + *(int *)(v11 + 40);
  v14 = (int *)type metadata accessor for ItemMetadata();
  v15 = v13 + v14[7];
  v16 = sub_23B1C5BDC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(unint64_t, uint64_t))(v17 + 8);
  v18(v15, v16);
  v18(v13 + v14[8], v16);
  swift_bridgeObjectRelease();
  v19 = v13 + v14[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1, v16))
    v18(v19, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = (uint64_t *)(v13 + v14[33]);
  v21 = v20[1];
  if (v21 >> 60 != 15)
    sub_23AAAE53C(*v20, v21);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23B0D92B8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B0D9378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = *(_QWORD *)(type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8) - 8);
  v10 = (v5 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_23B0D3AC0(v1, *(_QWORD **)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), v2 + v4, v2 + v10, *(_QWORD *)(v2 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B0D9430()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B0D9474()
{
  uint64_t *v0;

  sub_23B0D3860(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_23B0D9494()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23B0D94B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 32), a4);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B0D9614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id *v15;
  unint64_t v16;
  int *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(unint64_t, uint64_t);
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v7 = *(_QWORD *)(a1 - 8);
  v8 = (v3 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  v14 = (v8 + v9 + *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80);
  v15 = (id *)(v2 + v28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    if (!(*(unsigned int (**)(id *, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v15, 1))
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v15, v1);

  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2 + v8, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2 + v8 + *(int *)(a1 + 56), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v2 + v14, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  v16 = v2 + v14 + *(int *)(v13 + 40);
  v17 = (int *)type metadata accessor for ItemMetadata();
  v18 = v16 + v17[7];
  v19 = sub_23B1C5BDC();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(unint64_t, uint64_t))(v20 + 8);
  v21(v18, v19);
  v21(v16 + v17[8], v19);
  swift_bridgeObjectRelease();
  v22 = v16 + v17[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v19))
    v21(v22, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = (uint64_t *)(v16 + v17[33]);
  v24 = v23[1];
  if (v24 >> 60 != 15)
    sub_23AAAE53C(*v23, v24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B0D98EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 32), a4);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B0D9A38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = (v1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = *(_QWORD *)(type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9)
                  - 8);
  v11 = (v5 + v6 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23B0D3F38((char *)(v2 + v3), *(uint64_t **)(v2 + v1), v2 + v5, v2 + v11, *(_QWORD *)(v2 + v12), *(_QWORD *)(v2 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23B0D9B14(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B0D9B60 + 4 * byte_23B1E5F07[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B0D9B94 + 4 * byte_23B1E5F02[v4]))();
}

uint64_t sub_23B0D9B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0D9B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B0D9BA4);
  return result;
}

uint64_t sub_23B0D9BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B0D9BB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B0D9BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0D9BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0D9BD0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B0D9C1C + 4 * byte_23B1E5F11[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B0D9C50 + 4 * byte_23B1E5F0C[v4]))();
}

uint64_t sub_23B0D9C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0D9C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B0D9C60);
  return result;
}

uint64_t sub_23B0D9C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B0D9C74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B0D9C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0D9C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23B0D9C8C()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0D9C9C()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0D9CAC()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0D9CBC()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0D9CCC()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0D9CDC()
{
  JUMPOUT(0x23B8613CCLL);
}

id sub_23B0D9CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  v6 = sub_23B1C731C();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  v9 = (void *)sub_23B1C5870();

  v10 = objc_msgSend(v9, sel_fp_prettyDescription);
  return v10;
}

uint64_t sub_23B0D9DF8(void *a1, unsigned __int8 *a2)
{
  char v3;

  v3 = sub_23B0EA818(a1, a2);

  return v3 & 1;
}

void sub_23B0D9E34(void *a1, void *a2, uint64_t a3)
{
  void *v6;
  unsigned __int8 v7;
  id v8;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  if (a2)
  {
    swift_beginAccess();
    v6 = *(void **)a3;
    *(_QWORD *)a3 = a2;
    v7 = *(_BYTE *)(a3 + 8);
    *(_BYTE *)(a3 + 8) = 1;
    v8 = a2;
    sub_23AAFA84C(v6, v7);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0D9F3C(void *a1, uint64_t a2, void *a3, char a4)
{
  char v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  unsigned __int8 v13;
  void *v14;

  v8 = a4 & 1;
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    sub_23AAFCD98(a3, v8);
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  v9 = *(void **)a2;
  v10 = *(unsigned __int8 *)(a2 + 8);
  v14 = a3;
  if (v10 == 255)
  {
    sub_23AAFCDA4(a3, a4 & 1);
    v11 = a3;
  }
  else
  {
    v8 = v10 & 1;
    v11 = *(void **)a2;
  }
  swift_beginAccess();
  v12 = *(void **)a2;
  *(_QWORD *)a2 = v11;
  v13 = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a2 + 8) = v8;
  sub_23AAFA870(v9, v10);
  sub_23AAFA84C(v12, v13);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    sub_23AAFCD98(v14, a4 & 1);
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  sub_23AAFCD98(v14, a4 & 1);
}

void sub_23B0DA0A0(void *a1, void *a2, void *a3, void *a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23AB61DFC((uint64_t)a2, (uint64_t)a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DA188(void *a1, void *a2, char a3, uint64_t *a4, void *a5, uint64_t *a6)
{
  char v11;

  v11 = a3 & 1;
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    sub_23AAB538C(a2);

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23AC00A30(a2, v11, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    sub_23AAB538C(a2);

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  sub_23AAB538C(a2);

}

uint64_t sub_23B0DA294(void *a1, uint64_t a2)
{
  return sub_23B0DA2EC(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B0E80E0, (uint64_t)&unk_250C15960, (uint64_t)sub_23B0EB1E0);
}

uint64_t sub_23B0DA2C0(void *a1, uint64_t a2)
{
  return sub_23B0DA2EC(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B0E824C, (uint64_t)&unk_250C15F00, (uint64_t)sub_23B0EB1E0);
}

uint64_t sub_23B0DA2EC(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23B0E8608(a2, a3, a4, a5);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_23B0DA3D8(void *a1, uint64_t a2)
{
  return sub_23B0DA3F4(a1, a2, (void (*)(uint64_t))sub_23AC284DC);
}

uint64_t sub_23B0DA3F4(void *a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a3(a2);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

void sub_23B0DA4C4(void *a1, void *a2, unint64_t *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23AC50868((uint64_t)a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

uint64_t sub_23B0DA58C(void *a1, uint64_t a2, uint64_t a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  *(_BYTE *)(a2 + 152) = 3;
  *(_QWORD *)(a2 + 160) = a3;
  swift_retain();
  swift_release();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_release();
  return swift_release();
}

void sub_23B0DA674(void *a1, _QWORD *a2, char *a3)
{
  sub_23B0DA6AC(a1, a2, a3);
}

void sub_23B0DA688(void *a1, void *a2, uint64_t a3)
{
  sub_23B0DAC18(a1, a2, a3, (void (*)(void *, uint64_t))sub_23AC60AF4, (void (*)(uint64_t))MEMORY[0x24BEE4EF8]);
}

void sub_23B0DA6AC(void *a1, _QWORD *a2, char *a3)
{
  unint64_t *v6;
  uint64_t v7;
  _QWORD *v8;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v6 = (unint64_t *)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_runningEnumerator];
  swift_beginAccess();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_23AEA546C(v7);
  swift_bridgeObjectRelease();
  *a2 = v8;
  swift_bridgeObjectRelease();
  *v6 = sub_23AAF0A08(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRelease();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DA7CC(void *a1, void *a2, void *a3)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23AC8AA98(a2, (uint64_t)a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DA8AC(void *a1, void *a2, uint64_t a3)
{
  __int128 v6;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v6 = xmmword_23B1CFA60;
  swift_beginAccess();
  sub_23AAB7370(&v6, a3);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DA9A4(void *a1, void *a2, void *a3)
{
  sub_23B0DA9DC(a1, a2, a3, (uint64_t)&off_250BE2918);
}

void sub_23B0DA9C0(void *a1, void *a2, void *a3)
{
  sub_23B0DA9DC(a1, a2, a3, (uint64_t)&off_250C074F8);
}

void sub_23B0DA9DC(void *a1, void *a2, void *a3, uint64_t a4)
{
  _QWORD v8[2];

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v8[1] = a4;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  sub_23AAB7370(v8, (uint64_t)a3);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DAAE4(void *a1, void **a2, void *a3)
{
  sub_23B0DBCD4(a1, a2, a3);
}

void sub_23B0DAAF8(void *a1, _QWORD *a2, void *a3)
{
  sub_23B0DAF70(a1, a2, a3);
}

void sub_23B0DAB0C(void *a1, uint64_t a2, void *a3)
{
  sub_23B0DAB28(a1, a2, a3, (void (*)(uint64_t, void *))sub_23ACA3F44);
}

void sub_23B0DAB28(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t, void *))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DABF4(void *a1, void *a2, uint64_t a3)
{
  sub_23B0DAC18(a1, a2, a3, (void (*)(void *, uint64_t))sub_23ACA4A38, (void (*)(uint64_t))MEMORY[0x24BEE4BC0]);
}

void sub_23B0DAC18(void *a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t), void (*a5)(uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    a5(a3);

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    a5(a3);

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  a5(a3);

}

void sub_23B0DAD08(void *a1, void *a2, void *a3, unint64_t a4, _QWORD *a5, uint64_t *a6, uint64_t *a7, void *a8)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AC03BE4(a4);
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23ACB1D44(a2, a3, a4, a5, a6, a7, a8);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AC03BE4(a4);
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

  sub_23AC03BE4(a4);
}

void sub_23B0DAE64(void *a1, void *a2, uint64_t *a3, void *a4, uint64_t *a5, void *a6)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23ACB2B58(a2, a3, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DAF70(void *a1, _QWORD *a2, void *a3)
{
  id v6;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  v6 = a3;
  MEMORY[0x23B85F008]();
  if (*(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23B1C6740();
  sub_23B1C6788();
  sub_23B1C671C();
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

uint64_t sub_23B0DB088(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v6 = (uint64_t *)(a3 + qword_2542E6CB0);
  swift_beginAccess();
  v7 = *v6;
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_23B0EA8CC(v7, a3);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
  else
  {
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_23AD7DF9C(v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_23AE4F234();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_23B0EACC4(v11, (uint64_t)v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v13 = swift_bridgeObjectRelease_n();
    MEMORY[0x24BDAC7A8](v13);
    type metadata accessor for VFSItem(0);
    sub_23AA9F52C(0, &qword_2542E7560);
    sub_23AA7E38C(&qword_2542DE270, type metadata accessor for VFSItem, (uint64_t)&unk_23B1D2C0C);
    sub_23AEB238C();
    swift_getKeyPath();
    swift_retain();
    v14 = sub_23B0EB07C(v12);
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_23AD7DF9C(v14);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_23B0DB3D8(void *a1, uint64_t a2)
{
  return sub_23B0DB420(a1, a2, sub_23AAF0B08, (uint64_t (*)(uint64_t))sub_23AAEB3FC);
}

uint64_t sub_23B0DB3FC(void *a1, uint64_t a2)
{
  return sub_23B0DB420(a1, a2, (uint64_t (*)(_QWORD))sub_23AAEB294, (uint64_t (*)(uint64_t))sub_23AAEB3F0);
}

uint64_t sub_23B0DB420(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v8 = MEMORY[0x24BEE4AF8];
  v9 = a3(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = v9;
  swift_bridgeObjectRelease();
  v10 = a4(v8);
  swift_beginAccess();
  *(_QWORD *)(a2 + 32) = v10;
  swift_bridgeObjectRelease();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_23B0DB544(void *a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t a5)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23AF013A8(a2, a3, a4, a5);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B0DB648(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_23B0DB690(a1, a2, a3, a4, a5, a6, (uint64_t)&qword_2542E6CB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23B0E65C0);
}

uint64_t sub_23B0DB66C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_23B0DB690(a1, a2, a3, a4, a5, a6, (uint64_t)&qword_2542E6CA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23B0E5C70);
}

uint64_t sub_23B0DB690(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_23AAB7948(a5);
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  a8(a3, a4, a5, a6);
  swift_endAccess();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_23AAB7948(a5);
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_23AAB7948(a5);
}

uint64_t sub_23B0DB800(void *a1, uint64_t a2, char a3)
{
  void (*v6)(_QWORD);

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  *(_BYTE *)(a2 + 90) = a3 & 1;
  v6 = *(void (**)(_QWORD))(a2 + 96);
  if (v6)
  {
    swift_retain();
    v6(a3 & 1);
    sub_23AAB7948((uint64_t)v6);
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_23B0DB8E8(void *a1, uint64_t a2)
{
  return sub_23B0DA3F4(a1, a2, (void (*)(uint64_t))sub_23B0E7A54);
}

uint64_t sub_23B0DB904(void *a1, uint64_t a2)
{
  return sub_23B0DA3F4(a1, a2, (void (*)(uint64_t))sub_23B0E7CD0);
}

uint64_t sub_23B0DB920(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23B0DBA00(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_23B0E80E0);
}

uint64_t sub_23B0DB93C(void *a1, uint64_t a2)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23B0E7F3C(a2);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_23B0DBA00(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a4(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_23B0DBAD8(void *a1, uint64_t a2)
{
  return sub_23B0DA3F4(a1, a2, (void (*)(uint64_t))sub_23B076EF0);
}

void sub_23B0DBAF4(void *a1, uint64_t *a2, unint64_t a3, void *a4)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23B093490(a2, a3);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DBBD0(void *a1, void **a2, void *a3, _BYTE *a4)
{
  void *v8;
  id v9;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  v8 = *a2;
  *a2 = a3;

  swift_beginAccess();
  *a4 = 0;
  v9 = a3;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DBCD4(void *a1, void **a2, void *a3)
{
  void *v6;
  id v7;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  swift_beginAccess();
  v6 = *a2;
  *a2 = a3;

  v7 = a3;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }

}

void sub_23B0DBDB4(void *a1, _BYTE *a2, uint64_t a3, void *a4, void **a5, NSObject *a6)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23B144F30(a2, a3, a4, a5, a6);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_release();

}

uint64_t sub_23B0DBECC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0DBF04(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_23B17AB04);
}

uint64_t sub_23B0DBEE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0DBF04(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_23B17AECC);
}

uint64_t sub_23B0DBF04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  a5(a2, a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

uint64_t sub_23B0DBFEC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v36;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v5 = (unint64_t *)(a2 + qword_2542E6CB0);
  swift_beginAccess();
  v22 = *v5;
  v36 = v5[1];
  v33 = v5[3];
  v34 = v5[2];
  v31 = *((_BYTE *)v5 + 48);
  v32 = *((_BYTE *)v5 + 32);
  v29 = *((_BYTE *)v5 + 50);
  v30 = *((_BYTE *)v5 + 49);
  v20 = v5[7];
  v21 = v5[5];
  v6 = (unint64_t *)(a2 + qword_2542E6CA8);
  swift_beginAccess();
  v18 = v6[1];
  v19 = *v6;
  v27 = v6[3];
  v28 = v6[2];
  v15 = v6[5];
  v25 = *((_BYTE *)v6 + 48);
  v26 = *((_BYTE *)v6 + 32);
  v23 = *((_BYTE *)v6 + 50);
  v24 = *((_BYTE *)v6 + 49);
  v17 = v6[7];
  v16 = sub_23AAF0C70(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x24BEE4AF8];
  v8 = sub_23AAEAEC4(MEMORY[0x24BEE4AF8]);
  v9 = v7;
  v10 = sub_23AAF0C8C(v7);
  *v5 = v16;
  v5[1] = v8;
  *((_OWORD *)v5 + 1) = xmmword_23B1DAA80;
  *((_BYTE *)v5 + 32) = 0;
  v5[5] = v10;
  *((_WORD *)v5 + 24) = 0;
  *((_BYTE *)v5 + 50) = 0;
  v5[7] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_23AAEAD8C(v7);
  v12 = sub_23AAEAEC4(v7);
  v13 = sub_23AAEB060(v9);
  *v6 = v11;
  v6[1] = v12;
  *((_OWORD *)v6 + 1) = xmmword_23B1DAA80;
  *((_BYTE *)v6 + 32) = 0;
  v6[5] = v13;
  *((_WORD *)v6 + 24) = 0;
  *((_BYTE *)v6 + 50) = 0;
  v6[7] = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v22;
  *(_QWORD *)(a3 + 8) = v36;
  *(_QWORD *)(a3 + 16) = v34;
  *(_QWORD *)(a3 + 24) = v33;
  *(_BYTE *)(a3 + 32) = v32;
  *(_QWORD *)(a3 + 40) = v21;
  *(_BYTE *)(a3 + 48) = v31;
  *(_BYTE *)(a3 + 49) = v30;
  *(_BYTE *)(a3 + 50) = v29;
  *(_QWORD *)(a3 + 56) = v20;
  *(_QWORD *)(a3 + 64) = v19;
  *(_QWORD *)(a3 + 72) = v18;
  *(_QWORD *)(a3 + 80) = v28;
  *(_QWORD *)(a3 + 88) = v27;
  *(_BYTE *)(a3 + 96) = v26;
  *(_QWORD *)(a3 + 104) = v15;
  *(_BYTE *)(a3 + 112) = v25;
  *(_BYTE *)(a3 + 113) = v24;
  *(_BYTE *)(a3 + 114) = v23;
  *(_QWORD *)(a3 + 120) = v17;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return swift_release();
}

void sub_23B0DC34C(void *a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23AC8A094((uint64_t)a2, a3, a4);
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  swift_release();

}

void sub_23B0DC42C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(id *)@<X8>)
{
  _QWORD v5[6];

  v5[2] = a3;
  v5[3] = a4;
  v5[4] = a1;
  v5[5] = a2;
  sub_23B0E4668((void (*)(id *))sub_23B0E92F4, (uint64_t)v5, a3, a4, a5);
}

uint64_t sub_23B0DC45C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _BYTE v19[8];
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v7 << 6);
LABEL_22:
    sub_23ACF17F0(*(_QWORD *)(a1 + 56) + 16 * v10, (uint64_t)v21);
    sub_23AABABF4((uint64_t)v21, (uint64_t)v19);
    v14 = MEMORY[0x23B8615C4](v19);
    v15 = v20;
    result = sub_23ACF1828((uint64_t)v19);
    if (v14)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_23AF99A68(0, v8[2] + 1, 1, v8);
        v8 = (_QWORD *)result;
      }
      v17 = v8[2];
      v16 = v8[3];
      if (v17 >= v16 >> 1)
      {
        result = (uint64_t)sub_23AF99A68((_QWORD *)(v16 > 1), v17 + 1, 1, v8);
        v8 = (_QWORD *)result;
      }
      v8[2] = v17 + 1;
      v18 = &v8[2 * v17];
      v18[4] = v14;
      v18[5] = v15;
    }
  }
  v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v5)
    goto LABEL_28;
  v12 = *(_QWORD *)(v22 + 8 * v11);
  ++v7;
  if (v12)
    goto LABEL_21;
  v7 = v11 + 1;
  if (v11 + 1 >= v5)
    goto LABEL_28;
  v12 = *(_QWORD *)(v22 + 8 * v7);
  if (v12)
    goto LABEL_21;
  v7 = v11 + 2;
  if (v11 + 2 >= v5)
    goto LABEL_28;
  v12 = *(_QWORD *)(v22 + 8 * v7);
  if (v12)
    goto LABEL_21;
  v7 = v11 + 3;
  if (v11 + 3 >= v5)
    goto LABEL_28;
  v12 = *(_QWORD *)(v22 + 8 * v7);
  if (v12)
  {
LABEL_21:
    v4 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_28:
    swift_release();
    return (uint64_t)v8;
  }
  v12 = *(_QWORD *)(v22 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v5)
      goto LABEL_28;
    v12 = *(_QWORD *)(v22 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23B0DC678(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v3 = objc_msgSend(v2, sel_dynamicErrorSampleRatePerProvider);

  v4 = sub_23B1C6704();
  v5 = sub_23B0E9428(a1, v4);
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = v5;
    v8 = sub_23AFEC440(0x64uLL);
    result = swift_bridgeObjectRelease();
    if (__OFADD__(v8, 1))
      __break(1u);
    else
      return v7 >= (uint64_t)(v8 + 1);
  }
  return result;
}

void sub_23B0DC740(uint64_t a1)
{
  void *v1;
  double v3;
  double v4;
  uint64_t v5;
  id v6;
  _BOOL4 v7;
  unsigned int v8;
  _BOOL4 v9;
  _BYTE *v10;
  id v11;
  unsigned int v12;
  BOOL v13;
  int v14;
  id v16;
  _BYTE *v17;
  id v18;
  _BOOL4 v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;

  if (a1 >= 1)
  {
    objc_msgSend(v1, sel_doubleValue);
    v4 = v3;
    v5 = (*(_QWORD *)&v3 >> 52) & 0x7FFLL;
    if (!v5 || v5 == 2047)
    {
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
      return;
    }
    v6 = objc_retainAutorelease(v1);
    v7 = 0;
    v8 = *(unsigned __int8 *)objc_msgSend(v6, sel_objCType) - 99;
    if (v8 > 0x10)
    {
      v9 = 0;
LABEL_16:
      v21 = log10(fabs(v4));
      v22 = __exp10((double)a1 - floor(v21) + -1.0);
      v23 = round(v4 * v22) / v22;
      if (v9)
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v23);
        return;
      }
      v24 = round(v23);
      if (!v7)
      {
        if ((*(_QWORD *)&v24 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v24 > -1.0)
          {
            if (v24 < 1.84467441e19)
            {
              objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedLongLong_, (unint64_t)v24);
              return;
            }
            goto LABEL_34;
          }
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          return;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if ((*(_QWORD *)&v24 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        __break(1u);
      }
      else if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, (uint64_t)v24);
          return;
        }
        goto LABEL_31;
      }
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (((1 << v8) & 0x14041) == 0)
    {
      v9 = 0;
      if (((1 << v8) & 0xA) == 0)
        goto LABEL_16;
      v10 = objc_msgSend(v6, sel_objCType);
      v11 = v6;
      v7 = v10[1] == 0;
      v12 = ((v8 >> 1) | ((_BYTE)v8 << 7));
      v13 = v12 > 8;
      v14 = (1 << v12) & 0x189;
      if (v13 || v14 == 0)
      {
        v19 = 0;
        goto LABEL_15;
      }
      v16 = v11;
    }
    v17 = objc_msgSend(v6, sel_objCType);
    v18 = v6;
    v19 = v17[1] == 0;
LABEL_15:
    v9 = v7;
    v20 = v6;
    v7 = v19;
    goto LABEL_16;
  }
}

unint64_t sub_23B0DC9B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  char *v32;
  void *v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  id v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _WORD v49[8];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v38 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)v38 - v13;
  sub_23AA8E24C((uint64_t)v38 - v13);
  v14 = *(_QWORD *)(a1 + 16);
  v38[1] = a1;
  if (v14)
  {
    v15 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v39 = *(_QWORD *)(v6 + 72);
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v40 = v4;
    v41 = v9;
    v43 = v6;
    while (1)
    {
      v44(v4, v15, v5);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v16(v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v4, v5);
      v17 = sub_23B1C59E4();
      v19 = v18;
      if ((sub_23B1C656C() & 1) != 0)
      {
        result = sub_23B1C64DC();
        v21 = HIBYTE(v19) & 0xF;
        if ((v19 & 0x2000000000000000) == 0)
          v21 = v17 & 0xFFFFFFFFFFFFLL;
        if (4 * v21 < result >> 14)
        {
          __break(1u);
          return result;
        }
        v22 = sub_23B1C65C0();
        v24 = v23;
        v26 = v25;
        v28 = v27;
        swift_bridgeObjectRelease();
        v48 = v28;
        strcpy((char *)v49, "/private/var");
        HIBYTE(v49[6]) = 0;
        v49[7] = -5120;
        v45 = v22;
        v46 = v24;
        v6 = v43;
        v47 = v26;
        sub_23B0EA258();
        sub_23B1C64E8();
        swift_bridgeObjectRelease();
        v29 = (void *)objc_opt_self();
        v30 = (void *)sub_23B1C63BC();
        swift_bridgeObjectRelease();
        v31 = objc_msgSend(v29, sel_fileURLWithPath_, v30);

        v32 = v41;
        sub_23B1C59CC();

      }
      else
      {
        v32 = v41;
        v44(v41, (uint64_t)v12, v5);
        swift_bridgeObjectRelease();
      }
      v33 = (void *)sub_23B1C5954();
      v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v32, v5);
      v35 = (void *)sub_23B1C5954();
      v36 = objc_msgSend(v33, sel_fp_relationshipToItemAtURL_, v35);

      v34(v12, v5);
      if (v36 != (id)2)
      {
        swift_bridgeObjectRelease();
        v37 = 1;
        v34(v42, v5);
        return v37;
      }
      v4 = v40;
      v15 += v39;
      --v14;
      v6 = v43;
      if (!v14)
        goto LABEL_14;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_14:
    v16(v4, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  v37 = 0;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v42, v5);
  return v37;
}

uint64_t sub_23B0DCD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = *(_QWORD *)(v0 + 16);
  v12 = 0x656372756F736572;
  v13 = 0xEA00000000002F73;
  sub_23B1C64F4();
  v4 = v3 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v5 = *(unsigned int *)(v4 + 12);
  v12 = 2;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  result = sub_23B0E2FB8(v5, 0x656372756F736572, 0xEA00000000002F73, 0x200000, 0, 0, (uint64_t)&v12, (uint64_t)sub_23B0EA390, 0);
  if (v12 == 2)
  {
    __break(1u);
  }
  else
  {
    v7 = v15;
    v8 = v13;
    v9 = v12 & 1;
    v10 = v14 & 1;
    v11 = v16 & 1;
    result = swift_beginAccess();
    *(_BYTE *)(v1 + 48) = v9;
    *(_QWORD *)(v1 + 56) = v8;
    *(_BYTE *)(v1 + 64) = v10;
    *(_QWORD *)(v1 + 72) = v7;
    *(_BYTE *)(v1 + 80) = v11;
    *(_BYTE *)(v1 + 40) = 0;
  }
  return result;
}

uint64_t sub_23B0DD170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[11];

  v1 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = *(_QWORD *)(v0 + 16);
  v7[8] = 0x656372756F736572;
  v7[9] = 0xEA00000000002F73;
  sub_23B1C64F4();
  v3 = v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v4 = *(unsigned int *)(v3 + 12);
  v7[0] = 0;
  swift_bridgeObjectRetain();
  result = sub_23B0E1878(v4, 0x656372756F736572, 0xEA00000000002F73, 0x200000, 0, 0, (uint64_t)v7, (uint64_t)sub_23B0EA3D4, 0, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DEA74, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
  v6 = v7[0];
  if (v7[0])
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)(v0 + 48) = v6;
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v0 + 40) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B0DD55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[3];

  v1 = v0;
  v2 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)&v14[0] = 0x656372756F736572;
  *((_QWORD *)&v14[0] + 1) = 0xEA00000000002F73;
  sub_23B1C64F4();
  v4 = v14[0];
  v5 = v3 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v6 = *(unsigned int *)(v5 + 12);
  memset(v14, 0, 41);
  swift_bridgeObjectRetain();
  result = sub_23B0E1878(v6, v4, *((uint64_t *)&v4 + 1), 0x200000, 0, 0, (uint64_t)v14, (uint64_t)sub_23B0EA3FC, 0, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DEBFC, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
  v8 = *(_QWORD *)&v14[0];
  if (*(_QWORD *)&v14[0])
  {
    v9 = BYTE8(v14[2]);
    v10 = *((_QWORD *)&v14[1] + 1);
    v11 = *(_QWORD *)&v14[2];
    v12 = *((_QWORD *)&v14[0] + 1);
    v13 = *(_QWORD *)&v14[1];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)(v1 + 48) = v8;
    *(_QWORD *)(v1 + 56) = v12;
    *(_QWORD *)(v1 + 64) = v13;
    *(_QWORD *)(v1 + 72) = v10;
    *(_QWORD *)(v1 + 80) = v11;
    *(_BYTE *)(v1 + 88) = v9 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_BYTE *)(v1 + 40) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B0DDA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  char v15;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = *(_QWORD *)(v0 + 16);
  v12 = 0x656372756F736572;
  *(_QWORD *)&v13 = 0xEA00000000002F73;
  sub_23B1C64F4();
  v4 = v3 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v5 = *(unsigned int *)(v4 + 12);
  v12 = 2;
  v13 = 0u;
  v14 = 0u;
  v15 = 0;
  result = sub_23B0E1878(v5, 0x656372756F736572, 0xEA00000000002F73, 0x200000, 0, 0, (uint64_t)&v12, (uint64_t)sub_23B0EA4F4, 0, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DF52C, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
  if (v12 == 2)
  {
    __break(1u);
  }
  else
  {
    v11 = v14;
    v7 = v13;
    v8 = v12 & 1;
    v9 = BYTE8(v13) & 1;
    v10 = v15 & 1;
    result = swift_beginAccess();
    *(_BYTE *)(v1 + 48) = v8;
    *(_QWORD *)(v1 + 56) = v7;
    *(_BYTE *)(v1 + 64) = v9;
    *(_OWORD *)(v1 + 72) = v11;
    *(_BYTE *)(v1 + 88) = v10;
    *(_BYTE *)(v1 + 40) = 0;
  }
  return result;
}

uint64_t sub_23B0DDE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EA20C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA698DC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_39;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DDFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23AABC510;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_214_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DE144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB5F8;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_189_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DE2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB624;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_200_1;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DE454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB570;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_156_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DE5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB208;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_83_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DE764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EA2EC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_47;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DE8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB5BC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_178_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DEA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB2FC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_105_2;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DEBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB2D0;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_94_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DED84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB760;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_259_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DEF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB7E0;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_292_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DF094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB7B4;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_281;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DF21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB624;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_270;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DF3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB6AC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_226;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DF52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;
  int v19;

  v19 = a7;
  v18 = a6;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a10;
  v12[5] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB34C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_123_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v15 = fpfs_openat();
  swift_release();
  _Block_release(v14);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
    return v15;
  __break(1u);
  return result;
}

uint64_t sub_23B0DF6B4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unsigned __int8 v9;
  uint64_t v10;
  unsigned __int8 v11;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v10, a1);
  result = 0;
  v9 = v11;
  *(_QWORD *)a2 = v10;
  *(_WORD *)(a2 + 8) = v9;
  return result;
}

uint64_t sub_23B0DF88C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int v9;
  uint64_t v10;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v10, a1);
  result = 0;
  v9 = v10;
  *(_BYTE *)(a2 + 4) = BYTE4(v10);
  *(_DWORD *)a2 = v9;
  *(_BYTE *)(a2 + 5) = 0;
  return result;
}

double sub_23B0DFA64(uint64_t a1, uint64_t a2, void (*a3)(_OWORD *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  __int128 v10;
  _OWORD v11[2];
  char v12;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(v11, a1);
  v8 = v12;
  result = *(double *)v11;
  v10 = v11[1];
  *(_OWORD *)a2 = v11[0];
  *(_OWORD *)(a2 + 16) = v10;
  *(_BYTE *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_23B0DFC38(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v9, a1);
  *a2 = v9;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B0DFE0C(uint64_t a1, uint64_t a2, void (*a3)(_OWORD *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  _OWORD v13[2];
  uint64_t v14;
  char v15;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(v13, a1);
  v8 = v14;
  v9 = v15;
  v10 = *(_QWORD *)a2;
  v11 = v13[1];
  *(_OWORD *)a2 = v13[0];
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v8;
  *(_BYTE *)(a2 + 40) = v9;
  sub_23B0EB268(v10);
  return 0;
}

uint64_t sub_23B0DFFFC(uint64_t a1, void **a2, void (*a3)(void **__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v10;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v10, a1);
  v8 = *a2;
  *a2 = v10;
  sub_23AC23ABC(v8);
  return 0;
}

uint64_t sub_23B0E01D0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v9, a1);
  result = 0;
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_23B0E03A0(uint64_t a1, void **a2, void (*a3)(__int128 *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v10;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v10, a1);
  v8 = *a2;
  *(_OWORD *)a2 = v10;

  return 0;
}

uint64_t sub_23B0E0574(uint64_t a1, uint64_t *a2, void (*a3)(__int128 *__return_ptr, uint64_t), uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;

  v10 = sub_23B1C5570();
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  a3(&v15, a1);
  v12 = *a2;
  v13 = a2[1];
  *(_OWORD *)a2 = v15;
  a6(v12, v13);
  return 0;
}

double sub_23B0E074C(uint64_t a1, uint64_t a2, void (*a3)(_OWORD *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double result;
  __int128 v11;
  _OWORD v12[2];
  uint64_t v13;
  char v14;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(v12, a1);
  v8 = v13;
  v9 = v14;
  result = *(double *)v12;
  v11 = v12[1];
  *(_OWORD *)a2 = v12[0];
  *(_OWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 32) = v8;
  *(_BYTE *)(a2 + 40) = v9;
  return result;
}

uint64_t sub_23B0E0928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23AAB9320;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_324;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E0C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB868;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_35_1;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E1010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DDE34, (uint64_t (*)(uint64_t))sub_23ADAB444);
}

uint64_t sub_23B0E1048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD v31[31];
  int v32;
  id v33;

  v29 = a7;
  v27 = a5;
  v28 = a6;
  v14 = sub_23B1C5570();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = 0;
  v18 = v30;
  v19 = sub_23B0DE144((uint64_t)&v33, a1, a2, a3, a4, v27, v28, v29, a8, a9);
  v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  v32 = v19;
  if (v33)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    v22 = MEMORY[0x23B85E7A4]();
    if (!(_DWORD)v22)
    {
      MEMORY[0x24BDAC7A8](v22);
      v25 = &v32;
      swift_bridgeObjectRelease();
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v26 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x23B85E7A4]() == 96)
    {
      sub_23AC42C18((uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      swift_allocError();
      sub_23AA724E8((uint64_t)v31, v23, (uint64_t *)&unk_2542E0950);
    }
    else
    {
      if (MEMORY[0x23B85E7A4]() == 9939394)
      {
        objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x23B85E7A4]();
      v24 = sub_23B1C5E64();
      if ((v24 & 0x100000000) != 0)
        v31[0] = 22;
      else
        v31[0] = v24;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_23B0E130C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DE2CC, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E1344(_QWORD *(*a1)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[15];
  int v13;

  v3 = sub_23B1C5570();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)a1(v12, v5);
  if (!v1)
  {
    result = LODWORD(v12[0]);
    v13 = v12[0];
    if ((v12[0] & 0x80000000) != 0)
    {
      v9 = MEMORY[0x23B85E7A4]();
      if (!(_DWORD)v9)
      {
        MEMORY[0x24BDAC7A8](v9);
        v12[-2] = &v13;
        sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)&v12[-4], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
      }
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)v12);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)v12, v10, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          return swift_willThrow();
        }
        MEMORY[0x23B85E7A4]();
        v11 = sub_23B1C5E64();
        if ((v11 & 0x100000000) != 0)
          LODWORD(v12[0]) = 22;
        else
          LODWORD(v12[0]) = v11;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_23B0E157C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD v31[31];
  int v32;
  id v33;

  v29 = a7;
  v27 = a5;
  v28 = a6;
  v14 = sub_23B1C5570();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = 0;
  v18 = v30;
  v19 = sub_23B0DE454((uint64_t)&v33, a1, a2, a3, a4, v27, v28, v29, a8, a9);
  v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  v32 = v19;
  if (v33)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    v22 = MEMORY[0x23B85E7A4]();
    if (!(_DWORD)v22)
    {
      MEMORY[0x24BDAC7A8](v22);
      v25 = &v32;
      swift_bridgeObjectRelease();
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v26 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x23B85E7A4]() == 96)
    {
      sub_23AC42C18((uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      swift_allocError();
      sub_23AA724E8((uint64_t)v31, v23, (uint64_t *)&unk_2542E0950);
    }
    else
    {
      if (MEMORY[0x23B85E7A4]() == 9939394)
      {
        objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x23B85E7A4]();
      v24 = sub_23B1C5E64();
      if ((v24 & 0x100000000) != 0)
        v31[0] = 22;
      else
        v31[0] = v24;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_23B0E1840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DDFBC, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E1878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t), uint64_t (*a11)(uint64_t))
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  _QWORD v28[2];
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD v33[31];
  int v34;
  id v35;

  v31 = a7;
  v29 = a5;
  v30 = a6;
  v28[1] = a10;
  v16 = sub_23B1C5570();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = 0;
  v20 = v32;
  v21 = a10(&v35, a1, a2, a3, a4, v29, v30, v31, a8, a9);
  v22 = v21;
  if (v20)
  {
LABEL_2:

    goto LABEL_3;
  }
  v34 = v21;
  if (v35)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v22;
  }
  if ((v21 & 0x80000000) != 0)
  {
    v24 = MEMORY[0x23B85E7A4]();
    if (!(_DWORD)v24)
    {
      MEMORY[0x24BDAC7A8](v24);
      v27 = &v34;
      swift_bridgeObjectRelease();
      sub_23AFF56B8(a11, (uint64_t)&v28[-4], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x23B85E7A4]() == 96)
    {
      sub_23AC42C18((uint64_t)v33);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      swift_allocError();
      sub_23AA724E8((uint64_t)v33, v25, (uint64_t *)&unk_2542E0950);
    }
    else
    {
      if (MEMORY[0x23B85E7A4]() == 9939394)
      {
        objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x23B85E7A4]();
      v26 = sub_23B1C5E64();
      if ((v26 & 0x100000000) != 0)
        v33[0] = 22;
      else
        v33[0] = v26;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_23B0E1B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB874;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_313_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E1EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB870;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_236_1;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E2230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB3BC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_133_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E25A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB524;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_144_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E2918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD v31[31];
  int v32;
  id v33;

  v29 = a7;
  v27 = a5;
  v28 = a6;
  v14 = sub_23B1C5570();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = 0;
  v18 = v30;
  v19 = sub_23B0DE764((uint64_t)&v33, a1, a2, a3, a4, v27, v28, v29, a8, a9);
  v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  v32 = v19;
  if (v33)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    v22 = MEMORY[0x23B85E7A4]();
    if (!(_DWORD)v22)
    {
      MEMORY[0x24BDAC7A8](v22);
      v25 = &v32;
      swift_bridgeObjectRelease();
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v26 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x23B85E7A4]() == 96)
    {
      sub_23AC42C18((uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      swift_allocError();
      sub_23AA724E8((uint64_t)v31, v23, (uint64_t *)&unk_2542E0950);
    }
    else
    {
      if (MEMORY[0x23B85E7A4]() == 9939394)
      {
        objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x23B85E7A4]();
      v24 = sub_23B1C5E64();
      if ((v24 & 0x100000000) != 0)
        v31[0] = 22;
      else
        v31[0] = v24;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_23B0E2BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD v31[31];
  int v32;
  id v33;

  v29 = a7;
  v27 = a5;
  v28 = a6;
  v14 = sub_23B1C5570();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = 0;
  v18 = v30;
  v19 = sub_23B0DE8EC((uint64_t)&v33, a1, a2, a3, a4, v27, v28, v29, a8, a9);
  v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  v32 = v19;
  if (v33)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    v22 = MEMORY[0x23B85E7A4]();
    if (!(_DWORD)v22)
    {
      MEMORY[0x24BDAC7A8](v22);
      v25 = &v32;
      swift_bridgeObjectRelease();
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v26 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x23B85E7A4]() == 96)
    {
      sub_23AC42C18((uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      swift_allocError();
      sub_23AA724E8((uint64_t)v31, v23, (uint64_t *)&unk_2542E0950);
    }
    else
    {
      if (MEMORY[0x23B85E7A4]() == 9939394)
      {
        objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x23B85E7A4]();
      v24 = sub_23B1C5E64();
      if ((v24 & 0x100000000) != 0)
        v31[0] = 22;
      else
        v31[0] = v24;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_23B0E2EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23AA7DB38, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E2ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DED84, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E2F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DEF0C, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E2F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DF094, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E2F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DF21C, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E2FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD v31[31];
  int v32;
  id v33;

  v29 = a7;
  v27 = a5;
  v28 = a6;
  v14 = sub_23B1C5570();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = 0;
  v18 = v30;
  v19 = sub_23B0DE5DC((uint64_t)&v33, a1, a2, a3, a4, v27, v28, v29, a8, a9);
  v20 = v19;
  if (v18)
  {
LABEL_2:

    goto LABEL_3;
  }
  v32 = v19;
  if (v33)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v20;
  }
  if ((v19 & 0x80000000) != 0)
  {
    v22 = MEMORY[0x23B85E7A4]();
    if (!(_DWORD)v22)
    {
      MEMORY[0x24BDAC7A8](v22);
      v25 = &v32;
      swift_bridgeObjectRelease();
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v26 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x23B85E7A4]() == 96)
    {
      sub_23AC42C18((uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      swift_allocError();
      sub_23AA724E8((uint64_t)v31, v23, (uint64_t *)&unk_2542E0950);
    }
    else
    {
      if (MEMORY[0x23B85E7A4]() == 9939394)
      {
        objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
        swift_willThrow();
        goto LABEL_3;
      }
      MEMORY[0x23B85E7A4]();
      v24 = sub_23B1C5E64();
      if ((v24 & 0x100000000) != 0)
        v31[0] = 22;
      else
        v31[0] = v24;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    swift_willThrow();
    goto LABEL_2;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_23B0E327C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23AAB931C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_24_3;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E35F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23AA77FE4, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E3628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EA328;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_57_2;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E399C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B0E1878(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))sub_23B0DF3A4, (uint64_t (*)(uint64_t))sub_23B0EB8E0);
}

uint64_t sub_23B0E39D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB718;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_247_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E3D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EA374;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_68_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

uint64_t sub_23B0E40BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[15];
  int v27;
  id v28;

  v10 = sub_23B1C5570();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = &v28;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B0EB86C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_166_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_openbyid_ext();
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v16 = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v27 = v15;
  if (!v28)
  {
    if ((v15 & 0x80000000) == 0)
      return v15;
    v16 = MEMORY[0x23B85E7A4](v16);
    if ((_DWORD)v16)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)aBlock);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)aBlock, v17, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          swift_willThrow();
          return v15;
        }
        MEMORY[0x23B85E7A4]();
        v18 = sub_23B1C5E64();
        if ((v18 & 0x100000000) != 0)
          LODWORD(aBlock[0]) = 22;
        else
          LODWORD(aBlock[0]) = v18;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v19 = v23;
        v20 = v25;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v20);
      }
      swift_willThrow();

      return v15;
    }
LABEL_17:
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)&v27;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB8E0, (uint64_t)(&v22 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  swift_willThrow();
  return v15;
}

_QWORD *sub_23B0E4430(_QWORD *(*a1)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[16];
  uint64_t v14;

  v3 = sub_23B1C5570();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = a1(v13, v5);
  if (!v1)
  {
    result = (_QWORD *)v13[0];
    v14 = v13[0];
    if ((v13[0] & 0x8000000000000000) != 0)
    {
      v9 = MEMORY[0x23B85E7A4]();
      if (!(_DWORD)v9)
      {
        MEMORY[0x24BDAC7A8](v9);
        *(&v12 - 2) = (uint64_t)&v14;
        sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB77C, (uint64_t)(&v12 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
      }
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)v13);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)v13, v10, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
          return (_QWORD *)swift_willThrow();
        }
        MEMORY[0x23B85E7A4]();
        v11 = sub_23B1C5E64();
        if ((v11 & 0x100000000) != 0)
          LODWORD(v13[0]) = 22;
        else
          LODWORD(v13[0]) = v11;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      return (_QWORD *)swift_willThrow();
    }
  }
  return result;
}

void sub_23B0E4668(void (*a1)(id *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(id *)@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(id *);
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  char v31;
  char *v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(id *);
  uint64_t v54;
  _QWORD v55[17];
  id v56;

  v53 = a1;
  v52 = a2;
  v8 = sub_23B1C5570();
  v9 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  v51 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a4;
  v49 = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)v44 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  v16 = MEMORY[0x24BDAC7A8](v12);
  v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v44 - v19;
  v56 = 0;
  v21 = v54;
  v53(&v56);
  if (v21)
  {

    return;
  }
  v44[2] = v14;
  v45 = v18;
  v46 = v20;
  v23 = v50;
  v22 = v51;
  v52 = v15;
  v53 = a5;
  v54 = a3;
  if (v56)
  {
    swift_willThrow();
    (*(void (**)(void (*)(id *), uint64_t))(v52 + 8))(v53, v54);
    return;
  }
  v44[1] = 0;
  v24 = v54;
  if ((sub_23B1C6D64() & 1) != 0)
  {
    v25 = v53;
    v26 = v22;
    if (sub_23B1C6D58() < 64)
    {
      v27 = sub_23B1C6D4C();
      if (v27 < 0)
        goto LABEL_23;
      goto LABEL_17;
    }
    v55[0] = 0;
    sub_23AB55910();
    v30 = v46;
    sub_23B1C6D28();
    goto LABEL_13;
  }
  v28 = sub_23B1C6D64();
  v29 = sub_23B1C6D58();
  v26 = v22;
  if ((v28 & 1) == 0)
  {
    if (v29 < 64)
    {
      v25 = v53;
      v24 = v54;
      v27 = sub_23B1C6D4C();
      if (v27 < 0)
        goto LABEL_23;
    }
LABEL_17:
    v27 = 0;
LABEL_18:

    return;
  }
  if (v29 > 64)
  {
    v55[0] = 0;
    sub_23AB55910();
    v30 = v46;
    v24 = v54;
    sub_23B1C6D28();
    v25 = v53;
LABEL_13:
    v31 = sub_23B1C6344();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v24);
    v27 = 0;
    if ((v31 & 1) == 0)
      goto LABEL_18;
    goto LABEL_23;
  }
  v24 = v54;
  swift_getAssociatedConformanceWitness();
  sub_23B1C73F4();
  v32 = v46;
  sub_23B1C7364();
  v33 = v52;
  v25 = v53;
  v34 = sub_23B1C6344();
  v35 = *(void (**)(char *, uint64_t))(v33 + 8);
  v35(v32, v24);
  v36 = v45;
  (*(void (**)(char *, void (*)(id *), uint64_t))(v33 + 16))(v45, v25, v24);
  if ((v34 & 1) != 0)
  {
    v27 = ((uint64_t (*)(char *, uint64_t))v35)(v36, v24);
    v26 = v51;
  }
  else
  {
    v37 = sub_23B1C6D4C();
    v27 = ((uint64_t (*)(char *, uint64_t))v35)(v36, v24);
    v26 = v51;
    if ((v37 & 0x8000000000000000) == 0)
    {
      v27 = (uint64_t)v56;
      goto LABEL_18;
    }
  }
LABEL_23:
  v38 = MEMORY[0x23B85E7A4](v27);
  if (!(_DWORD)v38)
  {
    MEMORY[0x24BDAC7A8](v38);
    v43 = v47;
    v44[-4] = v24;
    v44[-3] = v43;
    v44[-2] = v25;
    sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B0EB83C, (uint64_t)&v44[-6], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  v39 = MEMORY[0x23B85E7A4]();
  v40 = v48;
  if (v39 == 96)
  {
    sub_23AC42C18((uint64_t)v55);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    sub_23AA724E8((uint64_t)v55, v41, (uint64_t *)&unk_2542E0950);
  }
  else if (MEMORY[0x23B85E7A4]() == 9939394)
  {
    objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
  }
  else
  {
    MEMORY[0x23B85E7A4]();
    v42 = sub_23B1C5E64();
    if ((v42 & 0x100000000) != 0)
      LODWORD(v55[0]) = 22;
    else
      LODWORD(v55[0]) = v42;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v40, v23);
  }
  swift_willThrow();

  (*(void (**)(void (*)(id *), uint64_t))(v52 + 8))(v25, v24);
}

uint64_t sub_23B0E4C80(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v9, a1);
  result = 0;
  *(_DWORD *)a2 = v9;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_23B0E4E50(uint64_t a1, _BYTE *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v9, a1);
  result = 0;
  *a2 = 0;
  return result;
}

uint64_t sub_23B0E5018(uint64_t a1, id *a2, void (*a3)(void **__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  void *v10;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v10, a1);
  v8 = v10;
  sub_23AC42A28(*a2);
  result = 0;
  *a2 = v8;
  return result;
}

uint64_t sub_23B0E51EC(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v10, a1);
  v8 = v10;
  swift_bridgeObjectRelease();
  result = 0;
  *a2 = v8;
  return result;
}

uint64_t sub_23B0E53C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;

  v17 = a7;
  v18 = a2;
  v10 = sub_23B1C5570();
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a6);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(a1);
  v15 = v17(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  sub_23AA8A660((uint64_t)v14, v18, a6);
  return 0;
}

uint64_t sub_23B0E55F4(uint64_t a1, _WORD *a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v6 = sub_23B1C5570();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  a3(&v9, a1);
  result = 0;
  *a2 = v9;
  return result;
}

void sub_23B0E57C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1578]), sel_initWithFileDescriptor_closeOnDealloc_, a1, 0);
  v5 = sub_23B1C6A70();
  if (v2)
  {

  }
  else
  {
    if (v6 >> 60 == 15)
      v7 = 0;
    else
      v7 = v5;
    if (v6 >> 60 == 15)
      v8 = 0xC000000000000000;
    else
      v8 = v6;
    sub_23B1C5780();
    swift_allocObject();
    sub_23B1C5774();
    sub_23B0EB224();
    sub_23B1C5768();
    swift_release();
    sub_23AAAE53C(v7, v8);

    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 32) = v13;
  }
}

void sub_23B0E58E8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1578]), sel_initWithFileDescriptor_closeOnDealloc_, a1, 0);
  v3 = sub_23B1C6A70();
  if (v1)
  {

  }
  else
  {
    if (v4 >> 60 == 15)
      v5 = 0;
    else
      v5 = v3;
    if (v4 >> 60 == 15)
      v6 = 0xC000000000000000;
    else
      v6 = v4;
    sub_23B1C5780();
    swift_allocObject();
    sub_23B1C5774();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6898);
    sub_23AAB5A28(&qword_2569E8690, &qword_2569E6898, (uint64_t)&unk_23B1DF448);
    sub_23B1C5768();
    swift_release();
    sub_23AAAE53C(v5, v6);

  }
}

void sub_23B0E5A0C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1578]), sel_initWithFileDescriptor_closeOnDealloc_, a1, 0);
  v5 = sub_23B1C6A70();
  if (v2)
  {

  }
  else
  {
    if (v6 >> 60 == 15)
      v7 = 0;
    else
      v7 = v5;
    if (v6 >> 60 == 15)
      v8 = 0xC000000000000000;
    else
      v8 = v6;
    sub_23B1C5780();
    swift_allocObject();
    sub_23B1C5774();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E64F8);
    sub_23AAB5A28(&qword_2569E8688, &qword_2569E64F8, (uint64_t)&unk_23B1D7B48);
    sub_23B1C5768();
    swift_release();
    sub_23AAAE53C(v7, v8);

    *(_OWORD *)a2 = v9;
    *(_OWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 32) = v11;
    *(_BYTE *)(a2 + 40) = v12;
  }
}

void sub_23B0E5B4C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  char v13;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1578]), sel_initWithFileDescriptor_closeOnDealloc_, a1, 0);
  v5 = sub_23B1C6A70();
  if (v2)
  {

  }
  else
  {
    if (v6 >> 60 == 15)
      v7 = 0;
    else
      v7 = v5;
    if (v6 >> 60 == 15)
      v8 = 0xC000000000000000;
    else
      v8 = v6;
    sub_23B1C5780();
    swift_allocObject();
    sub_23B1C5774();
    sub_23B0EB368();
    sub_23B1C5768();
    swift_release();
    sub_23AAAE53C(v7, v8);

    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 40) = v13;
  }
}

uint64_t sub_23B0E5C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v5 = v4;
  v26 = a4;
  v27 = a3;
  v29 = type metadata accessor for SyncState();
  v8 = MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v30 = (uint64_t)v25 - v11;
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v25 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  v31 = (char *)v25 - v14;
  v28 = a2;
  if (v16)
  {
    v25[2] = v13;
    swift_bridgeObjectRetain();
    v25[1] = a1;
    __asm { BR              X9 }
  }
  if (*(_QWORD *)(a2 + 16))
  {
    v17 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    swift_bridgeObjectRetain();
    sub_23AEBC894(v17, (uint64_t)v15);
    sub_23AEBC894((uint64_t)v15, v30);
    v18 = (char *)&loc_23B0E6320 + dword_23B0E659C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  v19 = v27;
  if (v27)
  {
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = v26;
    v21 = *(_QWORD **)(v5 + 56);
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_23AF98DFC(0, v21[2] + 1, 1, v21);
      v21 = (_QWORD *)result;
    }
    v23 = v21[2];
    v22 = v21[3];
    if (v23 >= v22 >> 1)
    {
      result = (uint64_t)sub_23AF98DFC((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
      v21 = (_QWORD *)result;
    }
    v21[2] = v23 + 1;
    v24 = &v21[2 * v23];
    v24[4] = sub_23AAFC250;
    v24[5] = v20;
    *(_QWORD *)(v5 + 56) = v21;
  }
  return result;
}

uint64_t sub_23B0E65C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t result;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v5 = v4;
  v46 = a4;
  v48 = a3;
  v51 = a2;
  v61 = type metadata accessor for SyncState();
  v47 = *(_QWORD *)(v61 - 8);
  v7 = MEMORY[0x24BDAC7A8](v61);
  v63 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v62 = (uint64_t)v45 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v45 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1568);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v54 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v52 = (char *)v45 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v50 = (char *)v45 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E1570);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v53 = (char *)v45 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v49 = (char *)v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v60 = (char *)v45 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)v45 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v45[1] = v12;
    v33 = a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    v59 = v14;
    v34 = *(_QWORD *)(v30 + 72);
    v45[0] = a1;
    swift_bridgeObjectRetain();
    v58 = v13;
    v56 = v29;
    v57 = v23;
    v55 = v34;
    sub_23AA8EFC8(v33, (uint64_t)v32, qword_2542DDA70);
    v35 = (char *)&loc_23B0E68A4 + *((int *)qword_23B0E71D0 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  result = v51;
  if (*(_QWORD *)(v51 + 16))
  {
    v37 = v51 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    swift_bridgeObjectRetain();
    sub_23AEBC894(v37, (uint64_t)v12);
    sub_23AEBC894((uint64_t)v12, v62);
    v38 = (char *)&loc_23B0E6F54 + dword_23B0E71EC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  v39 = v48;
  if (v48)
  {
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = v39;
    *(_QWORD *)(v40 + 24) = v46;
    v41 = *(_QWORD **)(v5 + 56);
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_23AF98DFC(0, v41[2] + 1, 1, v41);
      v41 = (_QWORD *)result;
    }
    v43 = v41[2];
    v42 = v41[3];
    if (v43 >= v42 >> 1)
    {
      result = (uint64_t)sub_23AF98DFC((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
      v41 = (_QWORD *)result;
    }
    v41[2] = v43 + 1;
    v44 = &v41[2 * v43];
    v44[4] = sub_23AB0008C;
    v44[5] = v40;
    *(_QWORD *)(v5 + 56) = v41;
  }
  return result;
}

id sub_23B0E7210@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_t v42;
  uint64_t v43;
  int v44;
  _QWORD *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)sub_23AE60710((uint64_t)a1);
  if (!v4)
  {
    v17 = v14;
    v48 = v10;
    v49 = v9;
    if (v16 == 2)
    {
      v45 = a4;
      v18 = v15;
      v19 = (uint64_t)result;
      v20 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      swift_retain_n();
      v46 = a1;
      v21 = a1;
      v22 = a2;
      v23 = v21;
      v47 = v22;
      sub_23AEB4428(v19, v17, v18, 2);
      v24 = sub_23B1C5E40();
      v25 = sub_23B1C6A94();
      v44 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v40 = v19;
        v27 = v26;
        v43 = swift_slowAlloc();
        v51 = v43;
        *(_DWORD *)v27 = 136315394;
        v41 = v18;
        v39 = v27 + 4;
        v28 = sub_23ADD7024((uint64_t)v23, a2, a3);
        v42 = v24;
        v30 = v29;
        swift_release();
        v31 = v47;

        v50 = sub_23AABEC68(v28, v30, &v51);
        sub_23B1C6CBC();
        swift_release();

        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2080;
        swift_bridgeObjectRetain();
        v32 = v40;
        v50 = sub_23AABEC68(v40, v17, &v51);
        sub_23B1C6CBC();
        v33 = v41;
        sub_23AEB44B0(v32, v17, v41, 2);
        sub_23AEB44B0(v32, v17, v33, 2);
        swift_bridgeObjectRelease();
        v34 = v42;
        _os_log_impl(&dword_23AA66000, v42, (os_log_type_t)v44, "fetch metadata for pending event: %s, reason: %s", (uint8_t *)v27, 0x16u);
        v35 = v43;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v35, -1, -1);
        MEMORY[0x23B8614BC](v27, -1, -1);

      }
      else
      {
        swift_release_n();
        v37 = v47;

        sub_23AEB44B0(v19, v17, v18, 2);
        sub_23AEB44B0(v19, v17, v18, 2);

      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v49);
      a4 = v45;
      *v45 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0);
      swift_storeEnumTagMultiPayload();
      a1 = v46;
    }
    else
    {
      sub_23AEB44B0((uint64_t)result, v14, v15, v16);
      *a4 = a1;
      a4[1] = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0);
      swift_storeEnumTagMultiPayload();
      v36 = a2;
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a4, 0, 1, v38);
    return a1;
  }
  return result;
}

unint64_t sub_23B0E760C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t result;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _QWORD v48[2];
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v56 = a2;
  v55 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1568);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v48 - v8;
  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(int *)(v4 + 36);
  v15 = *(_QWORD *)a1;
  v16 = *(_BYTE *)(a1 + 8);
  v17 = v57;
  result = sub_23AE61C64(*(_QWORD *)a1);
  if (!v17)
  {
    v53 = v7;
    v54 = v11;
    v56 = v10;
    v57 = 0;
    if (v21 == 2)
    {
      v51 = result;
      v52 = v20;
      v22 = v19;
      v23 = (id)fpfs_current_or_default_log();
      v24 = v13;
      sub_23B1C5E58();
      v25 = a1;
      v26 = a1;
      v27 = (uint64_t)v9;
      sub_23AA8EFC8(v26, (uint64_t)v9, &qword_2542E1568);
      swift_bridgeObjectRetain();
      v28 = sub_23B1C5E40();
      v29 = sub_23B1C6A94();
      v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = swift_slowAlloc();
        v50 = swift_slowAlloc();
        v59 = v50;
        *(_DWORD *)v31 = 136315394;
        v48[1] = v31 + 4;
        v49 = v30;
        v32 = (uint64_t)v53;
        sub_23AA8EFC8(v27, (uint64_t)v53, &qword_2542E1568);
        sub_23AA8A05C(v27, &qword_2542E1568);
        v33 = sub_23ADD7250();
        v34 = v25;
        v36 = v35;
        sub_23AA8A05C(v32, &qword_2542E1568);
        v58 = sub_23AABEC68(v33, v36, &v59);
        v37 = v24;
        sub_23B1C6CBC();
        v25 = v34;
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        swift_bridgeObjectRetain();
        v38 = v51;
        v58 = sub_23AABEC68(v51, v22, &v59);
        sub_23B1C6CBC();
        v39 = v52;
        sub_23AEB44B0(v38, v22, v52, 2);
        sub_23AEB44B0(v38, v22, v39, 2);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v28, (os_log_type_t)v49, "fetch metadata for pending event: %s, reason: %s", (uint8_t *)v31, 0x16u);
        v40 = v50;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v40, -1, -1);
        MEMORY[0x23B8614BC](v31, -1, -1);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v56);
      }
      else
      {
        sub_23AA8A05C((uint64_t)v9, &qword_2542E1568);
        v45 = v51;
        v44 = v52;
        sub_23AEB44B0(v51, v22, v52, 2);
        sub_23AEB44B0(v45, v22, v44, 2);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v56);
      }
      v46 = *(_BYTE *)(v25 + 8);
      v42 = v55;
      *v55 = *(_QWORD *)v25;
      *((_BYTE *)v42 + 8) = v46;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
    }
    else
    {
      sub_23AEB44B0(result, v19, v20, v21);
      v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6420);
      v42 = v55;
      v43 = (uint64_t)v55 + *(int *)(v41 + 48);
      *v55 = v15;
      *((_BYTE *)v42 + 8) = v16;
      sub_23AA8EFC8(v14, v43, &qword_2542E72C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
    }
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
    swift_storeEnumTagMultiPayload();
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v42, 0, 1, v47);
  }
  return result;
}

uint64_t sub_23B0E7A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void **);
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void **);
  void *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  void *v23;
  void *v24;

  v1 = a1;
  v2 = a1 + qword_2542E6CB0;
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v22 = v1;
    sub_23AD2C7F8();
    swift_bridgeObjectRetain();
    v5 = v3 + 40;
    do
    {
      v6 = *(void (**)(void **))(v5 - 8);
      v7 = (void *)swift_allocError();
      v23 = v7;
      swift_retain();
      v6(&v23);

      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v1 = v22;
  }
  v8 = MEMORY[0x24BEE4AF8];
  v9 = sub_23AAF0C70(MEMORY[0x24BEE4AF8]);
  v10 = sub_23AAEAEC4(v8);
  v11 = sub_23AAF0C8C(v8);
  *(_QWORD *)v2 = v9;
  *(_QWORD *)(v2 + 8) = v10;
  *(_OWORD *)(v2 + 16) = xmmword_23B1DAA80;
  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = v11;
  *(_WORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 50) = 0;
  *(_QWORD *)(v2 + 56) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v1 + qword_2542E6CA8;
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 56);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    sub_23AD2C7F8();
    swift_bridgeObjectRetain();
    v15 = v13 + 40;
    do
    {
      v16 = *(void (**)(void **))(v15 - 8);
      v17 = (void *)swift_allocError();
      v24 = v17;
      swift_retain();
      v16(&v24);

      swift_release();
      v15 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
  v18 = sub_23AAEAD8C(v8);
  v19 = sub_23AAEAEC4(v8);
  v20 = sub_23AAEB060(v8);
  *(_QWORD *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v19;
  *(_OWORD *)(v12 + 16) = xmmword_23B1DAA80;
  *(_BYTE *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 40) = v20;
  *(_WORD *)(v12 + 48) = 0;
  *(_BYTE *)(v12 + 50) = 0;
  *(_QWORD *)(v12 + 56) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B0E7CD0(_QWORD *a1)
{
  uint64_t v1;
  char *v3;
  __int128 v4;
  __int128 v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *);
  char *v12;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *);
  _QWORD v21[3];
  _QWORD v22[3];
  _OWORD v23[4];
  _OWORD v24[4];

  v3 = (char *)a1 + qword_2542E6CB0;
  swift_beginAccess();
  v4 = *((_OWORD *)v3 + 1);
  v24[0] = *(_OWORD *)v3;
  v24[1] = v4;
  v5 = *((_OWORD *)v3 + 3);
  v24[2] = *((_OWORD *)v3 + 2);
  v24[3] = v5;
  sub_23ADF2564((uint64_t)v24);
  sub_23AE631AC(a1);
  result = sub_23ADF25B8((uint64_t)v24);
  if (!v1)
  {
    swift_beginAccess();
    *((_OWORD *)v3 + 1) = xmmword_23B1DAA80;
    v3[32] = 0;
    *((_WORD *)v3 + 24) = 0;
    v3[50] = 0;
    v7 = MEMORY[0x24BEE4AF8];
    *((_QWORD *)v3 + 1) = sub_23AAEAEC4(MEMORY[0x24BEE4AF8]);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v8 = *((_QWORD *)v3 + 7);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      v10 = v8 + 40;
      do
      {
        v11 = *(void (**)(_QWORD *))(v10 - 8);
        v22[0] = 0;
        swift_retain();
        v11(v22);
        swift_release();
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
    *((_QWORD *)v3 + 7) = v7;
    swift_bridgeObjectRelease();
    v12 = (char *)a1 + qword_2542E6CA8;
    swift_beginAccess();
    v13 = *((_OWORD *)v12 + 1);
    v23[0] = *(_OWORD *)v12;
    v23[1] = v13;
    v14 = *((_OWORD *)v12 + 3);
    v23[2] = *((_OWORD *)v12 + 2);
    v23[3] = v14;
    sub_23ADF2564((uint64_t)v23);
    v15 = sub_23AE4F234();
    sub_23AE64CC0(v15);
    swift_release();
    sub_23ADF25B8((uint64_t)v23);
    swift_beginAccess();
    *((_OWORD *)v12 + 1) = xmmword_23B1DAA80;
    v12[32] = 0;
    *((_WORD *)v12 + 24) = 0;
    v12[50] = 0;
    v16 = MEMORY[0x24BEE4AF8];
    *((_QWORD *)v12 + 1) = sub_23AAEAEC4(MEMORY[0x24BEE4AF8]);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v17 = *((_QWORD *)v12 + 7);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      v19 = v17 + 40;
      do
      {
        v20 = *(void (**)(_QWORD *))(v19 - 8);
        v21[0] = 0;
        swift_retain();
        v20(v21);
        swift_release();
        v19 += 16;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
    }
    *((_QWORD *)v12 + 7) = v16;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B0E7F3C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  double v10;

  v1 = qword_2542EE0E0;
  if (*(_BYTE *)(result + qword_2542EE0E0 + 8))
    v1 = qword_2542EE0D8;
  v2 = *(_QWORD *)(result + v1);
  v3 = qword_2542EE0D0;
  if (*(_BYTE *)(result + qword_2542EE0D0 + 8))
    v3 = qword_2542EE0C8;
  v4 = *(_QWORD *)(result + v3);
  v5 = (uint64_t *)(result + qword_2542EE170);
  if (*(_BYTE *)(result + qword_2542EE170 + 8) == 1)
  {
    if ((*(_BYTE *)(result + 120) & 1) != 0)
    {
LABEL_22:
      *(_QWORD *)(result + qword_2542EE188) = v2;
      *(_QWORD *)(result + qword_2542EE190) = v4;
      return result;
    }
    v5 = (uint64_t *)(result + 112);
  }
  v6 = qword_2542EE180;
  if (*(_BYTE *)(result + qword_2542EE180 + 8))
    v6 = qword_2542EE178;
  v7 = (double)*v5;
  v8 = *(double *)(result + v6) * v7;
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v2 <= (uint64_t)v8)
    v2 = (uint64_t)v8;
  v9 = qword_2542EE0F0;
  if (*(_BYTE *)(result + qword_2542EE0F0 + 8))
    v9 = qword_2542EE0E8;
  v10 = *(double *)(result + v9) * v7;
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
    goto LABEL_26;
  if (v10 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v10 < 9.22337204e18)
  {
    if (v4 <= (uint64_t)v10)
      v4 = (uint64_t)v10;
    goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23B0E80E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v3 = a1 + qword_2542E7170;
  swift_beginAccess();
  v4 = *(_QWORD *)v3 + 64;
  v5 = 1 << *(_BYTE *)(*(_QWORD *)v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(*(_QWORD *)v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * i);
    v17 = __OFADD__(*a2, v16);
    v18 = *a2 + v16;
    if (v17)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *a2 = v18;
    if (v7)
      goto LABEL_4;
LABEL_5:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_24;
    if (v13 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        return swift_release();
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          return swift_release();
        v14 = *(_QWORD *)(v4 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B0E824C(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v3 = (uint64_t *)(a1 + qword_2542E7170);
  result = swift_beginAccess();
  v5 = 0;
  v6 = *v3;
  v7 = *v3 + 64;
  v8 = 1 << *(_BYTE *)(*v3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(*v3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * i);
    v18 = __OFADD__(*a2, v17);
    v19 = *a2 + v17;
    if (v18)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *a2 = v19;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_24;
    if (v14 >= v11)
      return result;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v11)
        return result;
      v15 = *(_QWORD *)(v7 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v11)
          return result;
        v15 = *(_QWORD *)(v7 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    return result;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v11)
      return result;
    v15 = *(_QWORD *)(v7 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

ssize_t sub_23B0E83B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  void *v7;
  const char *v8;
  id v9;
  ssize_t result;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(v1 + qword_2542E77D0);
  swift_bridgeObjectRetain();
  v7 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v8 = (const char *)objc_msgSend(v7, sel_fileSystemRepresentation);
  v9 = v7;
  result = getxattr(v8, "com.apple.fileprovider.testing.failSpeculativeDownload", 0, 0, 0, 1);
  if (result >= 1)
  {
    *(_BYTE *)(v1 + qword_2542EE0C0) = 1;
    v11 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v12 = sub_23B1C5E40();
    v13 = sub_23B1C6A94();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20 = v2;
      v16 = v15;
      v22 = v15;
      v19 = v3;
      *(_DWORD *)v14 = 136315138;
      v18 = *v6;
      v17 = v6[1];
      swift_bridgeObjectRetain();
      v21 = sub_23AABEC68(v18, v17, &v22);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v12, v13, "💾 marking SpeculativeDownloadsDiskManagement as ailDownloadsWithInsufficiantStorage: for root %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v16, -1, -1);
      MEMORY[0x23B8614BC](v14, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v20);
    }
    else
    {

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

uint64_t sub_23B0E8608(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  unsigned int v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  int v22;
  uint8_t *v23;
  _QWORD *v24;
  id v25;
  void *v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  id v32[2];

  v29 = a2;
  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = (void (*)(uint64_t, uint64_t))sub_23B1C5E4C();
  v30 = *((_QWORD *)v7 - 1);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B0DCD88();
  v10 = *(void **)(a1 + 88);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  v12 = objc_msgSend(v10, sel_setupForPath_error_, v11, v32);

  if (v12)
  {
    v13 = v32[0];
    v14 = objc_msgSend(v10, sel_totalSize);
    v15 = v14;
    if (v14)
    {
      v16 = objc_msgSend(v14, sel_longLongValue);

    }
    else
    {
      v16 = 0;
    }
    *(_QWORD *)(a1 + 112) = v16;
    *(_BYTE *)(a1 + 120) = v15 == 0;
    if (os_variant_has_internal_content())
      sub_23B0E83B0();
    v27 = (void *)swift_retain();
    sub_23B0DB93C(v27, a1);
    sub_23B0E8E54(v29, a3, a4);
    return sub_23B0E894C(a3, a4);
  }
  else
  {
    v17 = v32[0];
    v18 = (void *)sub_23B1C587C();

    swift_willThrow();
    v19 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v20 = v18;
    v21 = sub_23B1C5E40();
    v22 = sub_23B1C6AAC();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      v29 = v7;
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      swift_getErrorValue();
      v25 = sub_23B0D9CF0(v31);
      v32[0] = v25;
      v7 = v29;
      sub_23B1C6CBC();
      *v24 = v25;

      _os_log_impl(&dword_23AA66000, v21, (os_log_type_t)v22, "💾 failed to register root path for speculative downloader: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v24, -1, -1);
      MEMORY[0x23B8614BC](v23, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, _QWORD))(v30 + 8))(v9, v7);
  }
}

uint64_t sub_23B0E894C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  dispatch_time_t v30;
  dispatch_time_t v31;
  _QWORD v32[4];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a1;
  v35 = a2;
  v3 = v2;
  v36 = sub_23B1C60A4();
  v4 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C6B78();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = qword_2542EE140;
  if (*(_BYTE *)(v3 + qword_2542EE140 + 8))
    v15 = qword_2542EE138;
  v16 = *(_QWORD *)(v3 + v15);
  result = swift_beginAccess();
  if (*(_BYTE *)(v3 + 48) != 1 || (*(_BYTE *)(v3 + 64) & 1) != 0)
    return result;
  v18 = *(_QWORD *)(v3 + 56);
  v19 = __OFADD__(v18, v16);
  v20 = v18 + v16;
  if (v19)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v22 = v21;
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v23 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v20 > (uint64_t)v23)
  {
    v33 = (uint64_t)v23;
    v24 = qword_2542EE1A0;
    if (*(_QWORD *)(v3 + qword_2542EE1A0))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_23B1C6BCC();
      swift_unknownObjectRelease();
      if (*(_QWORD *)(v3 + v24))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_23B1C6BA8();
        swift_unknownObjectRelease();
      }
    }
    *(_QWORD *)(v3 + v24) = 0;
    swift_unknownObjectRelease();
    v25 = sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
    v32[2] = *(_QWORD *)(v3 + qword_2542E77D8);
    v32[3] = v25;
    v37 = MEMORY[0x24BEE4AF8];
    v32[1] = sub_23AA7E38C((unint64_t *)&qword_2542E1F80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1EF0);
    sub_23AAB5A28((unint64_t *)&qword_2542E1F00, (uint64_t *)&unk_2542E1EF0, MEMORY[0x24BEE12C8]);
    sub_23B1C6DE8();
    v26 = sub_23B1C6B84();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_QWORD *)(v3 + v24) = v26;
    result = swift_unknownObjectRelease();
    v27 = v33;
    if (*(_QWORD *)(v3 + v24))
    {
      swift_getObjectType();
      v28 = swift_allocObject();
      swift_weakInit();
      swift_unknownObjectRetain();
      swift_retain();
      sub_23ADFA2F4();
      sub_23AA78928(0, (uint64_t)v6, v35, v28);
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v36);
      result = swift_release();
      v19 = __OFSUB__(v20, v27);
      v29 = v20 - v27;
      if (!v19)
      {
        v30 = dispatch_time(0x8000000000000000, 0);
        v31 = dispatch_time(v30, v29);
        sub_23AFAA444(v31);
        sub_23B1C6BB4();
        return swift_unknownObjectRelease();
      }
LABEL_21:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23B0E8D30()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = qword_2542EE1A0;
    if (*(_QWORD *)(result + qword_2542EE1A0))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_23B1C6BCC();
      swift_unknownObjectRelease();
      if (*(_QWORD *)(v1 + v2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_23B1C6BA8();
        swift_unknownObjectRelease();
      }
    }
    *(_QWORD *)(v1 + v2) = 0;
    swift_unknownObjectRelease();
    v3 = *(void (**)(uint64_t))(v1 + qword_2542EE198);
    if (v3)
    {
      swift_retain();
      v3(1);
      sub_23AAB7948((uint64_t)v3);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23B0E8E38()
{
  return sub_23B0E8E54((void (*)(uint64_t, uint64_t))sub_23B0E80E0, (uint64_t)&unk_250C15960, (uint64_t)sub_23B0EB1E0);
}

uint64_t sub_23B0E8E54(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t result;
  uint64_t v19;
  BOOL v20;
  void (*v21)(_QWORD);
  double v22;
  double v23;
  double v24;
  _QWORD v26[3];

  v7 = v3;
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B0E909C(0);
  if ((v13 & 1) != 0)
  {
    v17 = (unsigned __int8 *)(v3 + 48);
    swift_beginAccess();
    return *v17;
  }
  v14 = v12;
  v26[0] = 0;
  v15 = (void *)swift_retain();
  sub_23B0DBA00(v15, v7, (uint64_t)v26, a1);
  v16 = v26[0];
  v17 = (unsigned __int8 *)(v7 + 48);
  result = swift_beginAccess();
  v19 = v14 - v16;
  v20 = __OFSUB__(v14, v16);
  if ((*(_BYTE *)(v7 + 48) & 1) != 0)
  {
    if (!v20)
    {
      if (v19 < *(_QWORD *)(v7 + qword_2542EE188))
      {
        *(_BYTE *)(v7 + 48) = 0;
        *(_BYTE *)(v7 + 40) = 1;
        sub_23AE232E4();
        v21 = *(void (**)(_QWORD))(v7 + qword_2542EE198);
        if (v21)
        {
          swift_retain();
          v21(0);
          sub_23AAB7948((uint64_t)v21);
        }
      }
      return *v17;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v20)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (*(_QWORD *)(v7 + qword_2542EE190) >= v19)
    return *v17;
  *(_BYTE *)(v7 + 48) = 1;
  *(_BYTE *)(v7 + 40) = 1;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v23 = v22;
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v24 = v23 * 1000000000.0;
  if ((~COERCE__INT64(v23 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v24 < 9.22337204e18)
  {
    *(_QWORD *)(v7 + 56) = (uint64_t)v24;
    *(_BYTE *)(v7 + 64) = 0;
    *(_BYTE *)(v7 + 40) = 1;
    sub_23AE232E4();
    sub_23B0E894C(a2, a3);
    return *v17;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_23B0E909C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(_BYTE *, uint64_t);
  id v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  _BYTE v23[24];

  v2 = v1;
  v4 = sub_23B1C60E0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v23[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v23[-v12];
  v14 = v2 + qword_2542EE0F8;
  if (*(_BYTE *)(v2 + qword_2542EE0F8 + 8) == 1)
  {
    v15 = v2 + qword_2542E7180;
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v13, v15, v4);
    sub_23B1C60D4();
    sub_23B1C60C8();
    v16 = sub_23B1C60BC();
    v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v11, v4);
    if ((a1 & 1) == 0 || (v16 & 1) != 0)
    {
      v18 = objc_msgSend(*(id *)(v2 + 88), sel_freeSize);
      if (v18)
      {
        v19 = v18;
        v20 = (uint64_t *)(v2 + qword_2542EE170);
        if ((*(_BYTE *)(v2 + qword_2542EE170 + 8) & 1) != 0)
        {
          if ((*(_BYTE *)(v2 + 120) & 1) != 0)
          {
            v17(v13, v4);

LABEL_14:
            v14 = v2 + 96;
            return *(_QWORD *)v14;
          }
          v20 = (uint64_t *)(v2 + 112);
        }
        v21 = *v20;
        *(_QWORD *)(v2 + 96) = objc_msgSend(v18, sel_longLongValue);
        *(_BYTE *)(v2 + 104) = 0;
        if (v21 < (uint64_t)objc_msgSend(v19, sel_longLongValue))
        {
          *(_QWORD *)(v2 + 96) = v21;
          *(_BYTE *)(v2 + 104) = 0;
        }
        sub_23B1C60C8();

        v17(v13, v4);
        swift_beginAccess();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 40))(v15, v11, v4);
        swift_endAccess();
        goto LABEL_14;
      }
    }
    v17(v13, v4);
    goto LABEL_14;
  }
  return *(_QWORD *)v14;
}

uint64_t sub_23B0E92F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_23B0E9314()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7340();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B0E93C4()
{
  return sub_23B0E99EC();
}

void sub_23B0E93D8()
{
  void *v0;
  int v1;

  v0 = (void *)sub_23B1C63BC();
  v1 = MGGetSInt32Answer();

  dword_2542EE108 = v1;
}

uint64_t sub_23B0E9428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  unsigned __int8 v47;
  unsigned __int8 *v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  _QWORD v52[5];
  char *v53;
  char *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v57 = a1;
  v59 = *(_QWORD *)(a2 + 16);
  if (!v59)
    return 0;
  v58 = a2 + 32;
  v53 = (char *)&v61 + 2;
  v54 = (char *)&v61 + 3;
  v55 = a2;
  v2 = swift_bridgeObjectRetain();
  v3 = 0;
  v4 = 0;
  v56 = xmmword_23B1CA760;
  while (1)
  {
    v5 = (uint64_t *)(v58 + 16 * v3);
    v7 = *v5;
    v6 = v5[1];
    v61 = 58;
    v62 = 0xE100000000000000;
    MEMORY[0x24BDAC7A8](v2);
    v52[2] = &v61;
    swift_bridgeObjectRetain_n();
    v8 = sub_23B181824(0x7FFFFFFFFFFFFFFFLL, 1, sub_23ACFA1AC, (uint64_t)v52, v7, v6);
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v60 = v4;
      v10 = v3;
      v61 = MEMORY[0x24BEE4AF8];
      sub_23AAB5A68(0, v9, 0);
      v11 = (_QWORD *)v61;
      v12 = (uint64_t *)(v8 + 56);
      do
      {
        v13 = *(v12 - 3);
        v14 = *(v12 - 2);
        v15 = *(v12 - 1);
        v16 = *v12;
        swift_bridgeObjectRetain();
        v17 = MEMORY[0x23B85ED8C](v13, v14, v15, v16);
        v19 = v18;
        swift_bridgeObjectRelease();
        v61 = (uint64_t)v11;
        v21 = v11[2];
        v20 = v11[3];
        if (v21 >= v20 >> 1)
        {
          sub_23AAB5A68(v20 > 1, v21 + 1, 1);
          v11 = (_QWORD *)v61;
        }
        v11[2] = v21 + 1;
        v22 = &v11[2 * v21];
        v22[4] = v17;
        v22[5] = v19;
        v12 += 4;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      v3 = v10;
      v4 = v60;
    }
    else
    {
      swift_bridgeObjectRelease();
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    if (v11[2] == 2)
      break;
    v2 = swift_bridgeObjectRelease();
LABEL_4:
    if (++v3 == v59)
    {
      v43 = 0;
LABEL_71:
      swift_bridgeObjectRelease();
      return v43;
    }
  }
  v24 = v11[4];
  v23 = v11[5];
  v25 = v11[6];
  v26 = v11[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v28 = HIBYTE(v26) & 0xF;
  v29 = v25 & 0xFFFFFFFFFFFFLL;
  if ((v26 & 0x2000000000000000) != 0)
    v30 = HIBYTE(v26) & 0xF;
  else
    v30 = v25 & 0xFFFFFFFFFFFFLL;
  if (!v30)
  {
    swift_bridgeObjectRelease();
    v43 = 0;
    goto LABEL_59;
  }
  if ((v26 & 0x1000000000000000) != 0)
  {
    v32 = (uint64_t)sub_23B0E9DE4(v25, v26, 10);
    LOBYTE(v25) = v51;
LABEL_56:
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      v43 = 0;
    else
      v43 = v32;
LABEL_59:
    sub_23AA9F52C(0, qword_2569E86A0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = v56;
    *(_QWORD *)(v44 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v44 + 64) = sub_23AAA0D14();
    *(_QWORD *)(v44 + 32) = v24;
    *(_QWORD *)(v44 + 40) = v23;
    v45 = (void *)sub_23B1C6A4C();
    sub_23B1C63E0();
    v46 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v47 = objc_msgSend(v45, sel_evaluateWithObject_, v46);

    if ((v47 & 1) != 0)
      goto LABEL_71;
    goto LABEL_4;
  }
  if ((v26 & 0x2000000000000000) == 0)
  {
    if ((v25 & 0x1000000000000000) != 0)
      v31 = (unsigned __int8 *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v31 = (unsigned __int8 *)sub_23B1C6F80();
    v32 = (uint64_t)sub_23B0E9EC8(v31, v29, 10);
    LOBYTE(v25) = v33 & 1;
    goto LABEL_56;
  }
  v61 = v25;
  v62 = v26 & 0xFFFFFFFFFFFFFFLL;
  if (v25 == 43)
  {
    if (!v28)
      goto LABEL_75;
    if (v28 == 1 || (BYTE1(v25) - 48) > 9u)
      goto LABEL_43;
    v32 = (BYTE1(v25) - 48);
    if (v28 != 2)
    {
      if ((BYTE2(v25) - 48) > 9u)
        goto LABEL_43;
      v32 = 10 * (BYTE1(v25) - 48) + (BYTE2(v25) - 48);
      v34 = v28 - 3;
      if (v34)
      {
        v35 = (unsigned __int8 *)v54;
        while (1)
        {
          v36 = *v35 - 48;
          if (v36 > 9)
            goto LABEL_43;
          v37 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
            goto LABEL_43;
          v32 = v37 + v36;
          if (__OFADD__(v37, v36))
            goto LABEL_43;
          LOBYTE(v25) = 0;
          ++v35;
          if (!--v34)
            goto LABEL_56;
        }
      }
    }
LABEL_55:
    LOBYTE(v25) = 0;
    goto LABEL_56;
  }
  if (v25 != 45)
  {
    if (!v28 || (v25 - 48) > 9u)
      goto LABEL_43;
    v32 = (v25 - 48);
    if (v28 != 1)
    {
      if ((BYTE1(v25) - 48) > 9u)
        goto LABEL_43;
      v32 = 10 * (v25 - 48) + (BYTE1(v25) - 48);
      v38 = v28 - 2;
      if (v38)
      {
        v39 = (unsigned __int8 *)v53;
        while (1)
        {
          v40 = *v39 - 48;
          if (v40 > 9)
            goto LABEL_43;
          v41 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
            goto LABEL_43;
          v32 = v41 + v40;
          if (__OFADD__(v41, v40))
            goto LABEL_43;
          LOBYTE(v25) = 0;
          ++v39;
          if (!--v38)
            goto LABEL_56;
        }
      }
    }
    goto LABEL_55;
  }
  if (v28)
  {
    if (v28 != 1 && (BYTE1(v25) - 48) <= 9u)
    {
      if (v28 == 2)
      {
        LOBYTE(v25) = 0;
        v32 = -(uint64_t)(BYTE1(v25) - 48);
        goto LABEL_56;
      }
      if ((BYTE2(v25) - 48) <= 9u)
      {
        v32 = -10 * (BYTE1(v25) - 48) - (BYTE2(v25) - 48);
        v42 = v28 - 3;
        if (!v42)
          goto LABEL_55;
        v48 = (unsigned __int8 *)v54;
        while (1)
        {
          v49 = *v48 - 48;
          if (v49 > 9)
            break;
          v50 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
            break;
          v32 = v50 - v49;
          if (__OFSUB__(v50, v49))
            break;
          LOBYTE(v25) = 0;
          ++v48;
          if (!--v42)
            goto LABEL_56;
        }
      }
    }
LABEL_43:
    v32 = 0;
    LOBYTE(v25) = 1;
    goto LABEL_56;
  }
  __break(1u);
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_23B0E99D8()
{
  return sub_23B0E99EC();
}

uint64_t sub_23B0E99EC()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7028();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B0E9A88(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_23B0E9BD8((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_23B0E9BD8((uint64_t)v7, v4, v2);
    MEMORY[0x23B8614BC](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_23B0E9BD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t *v19;
  _BYTE v20[16];
  uint64_t v21;
  _BYTE v22[16];
  _BYTE v23[16];
  uint64_t v24;

  v19 = (unint64_t *)result;
  v24 = 0;
  v4 = 0;
  v5 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_5:
    v12 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    sub_23ACF17F0(*(_QWORD *)(a3 + 56) + 16 * v11, (uint64_t)v23);
    v21 = v12;
    sub_23ACF17F0((uint64_t)v23, (uint64_t)v22);
    sub_23ACF17F0((uint64_t)v22, (uint64_t)v20);
    v13 = MEMORY[0x23B8615C4](v20);
    sub_23AA8A05C((uint64_t)&v21, &qword_2569E8698);
    sub_23ACF1828((uint64_t)v20);
    if (v13)
    {
      swift_unknownObjectRelease();
      result = sub_23ACF1828((uint64_t)v23);
      *(unint64_t *)((char *)v19 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        return sub_23B190540(v19, a2, v24, a3);
      }
    }
    else
    {
      result = sub_23ACF1828((uint64_t)v23);
    }
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v14 >= v9)
    return sub_23B190540(v19, a2, v24, a3);
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_21;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return sub_23B190540(v19, a2, v24, a3);
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
    goto LABEL_21;
  v4 = v14 + 2;
  if (v14 + 2 >= v9)
    return sub_23B190540(v19, a2, v24, a3);
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_21:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_5;
  }
  v16 = v14 + 3;
  if (v16 >= v9)
    return sub_23B190540(v19, a2, v24, a3);
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return sub_23B190540(v19, a2, v24, a3);
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

unsigned __int8 *sub_23B0E9DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_23B1C65B4();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23B19168C();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_23B1C6F80();
  }
LABEL_7:
  v11 = sub_23B0E9EC8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_23B0E9EC8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_23B0EA144()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B0EA1FC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA20C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E4E50(a1, *(_BYTE **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EA228()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA238()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA248()
{
  return swift_deallocObject();
}

unint64_t sub_23B0EA258()
{
  unint64_t result;

  result = qword_2542DE6E0;
  if (!qword_2542DE6E0)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_2542DE6E0);
  }
  return result;
}

uint64_t sub_23B0EA29C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA2AC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA2BC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA2CC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA2DC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA2EC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E4C80(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EA308()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA318()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA328(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E53C0(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), &qword_2542E72C0, type metadata accessor for VFSItem);
}

uint64_t sub_23B0EA354()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA364()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EA374(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E4E50(a1, *(_BYTE **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EA380()
{
  return swift_deallocObject();
}

double sub_23B0EA390@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;

  sub_23B0E57C4(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_BYTE *)(a2 + 32) = v7;
  }
  return result;
}

void sub_23B0EA3D4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_23B0E58E8(a1);
  if (!v2)
    *a2 = v4;
}

double sub_23B0EA3FC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_23B0E5A0C(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_23B0EA43C()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

double sub_23B0EA4F4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_23B0E5B4C(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

void *sub_23B0EA534(void *a1, uint64_t a2)
{
  void *v4;
  id v5;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v4 = *(void **)(a2 + qword_2542E6C70);
  v5 = v4;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return v4;
}

uint64_t sub_23B0EA5EC(void *a1, uint64_t a2)
{
  uint64_t v4;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v4 = *(_QWORD *)(a2 + 160);
  swift_retain();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return v4;
}

uint64_t sub_23B0EA6A0(void *a1)
{
  return sub_23B0EA6B4(a1);
}

uint64_t sub_23B0EA6B4(void *a1)
{
  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();
    swift_release();
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return 0x202092949FF0;
}

uint64_t sub_23B0EA818(void *a1, unsigned __int8 *a2)
{
  uint64_t v4;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v4 = a2[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  a2[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated] = 1;
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return v4;
}

uint64_t sub_23B0EA8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0FB8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v8 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  v47 = v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v42 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v41 = (uint64_t)&v38 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1568);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - v17;
  v19 = *(_QWORD *)(a1 + 64);
  v44 = a1 + 64;
  v20 = 1 << *(_BYTE *)(a1 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v45 = (unint64_t)(v20 + 63) >> 6;
  v23 = a1;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v43 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v22)
    {
      v26 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v27 = v26 | (v25 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v25++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v25 >= v45)
      goto LABEL_32;
    v29 = *(_QWORD *)(v44 + 8 * v25);
    if (!v29)
      break;
LABEL_18:
    v22 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v25 << 6);
LABEL_19:
    sub_23AA8EFC8(*(_QWORD *)(v23 + 56) + *(_QWORD *)(v13 + 72) * v27, (uint64_t)v18, &qword_2542E1568);
    sub_23AA724E8((uint64_t)v18, (uint64_t)v16, &qword_2542E1568);
    sub_23B0E760C((uint64_t)v16, v48, v6);
    if (v2)
    {
      sub_23AA8A05C((uint64_t)v16, &qword_2542E1568);
      v37 = v43;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return v37;
    }
    sub_23AA8A05C((uint64_t)v16, &qword_2542E1568);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v47 + 48))(v6, 1, v46) == 1)
    {
      result = sub_23AA8A05C((uint64_t)v6, &qword_2542E0FB8);
    }
    else
    {
      sub_23AA724E8((uint64_t)v6, v41, &qword_2542DDDB0);
      sub_23AA724E8(v41, v42, &qword_2542DDDB0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v43 = sub_23AF99E00(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
      v32 = *(_QWORD *)(v43 + 16);
      v31 = *(_QWORD *)(v43 + 24);
      v33 = v32 + 1;
      if (v32 >= v31 >> 1)
      {
        v39 = *(_QWORD *)(v43 + 16);
        v40 = v32 + 1;
        v36 = sub_23AF99E00(v31 > 1, v32 + 1, 1, v43);
        v32 = v39;
        v33 = v40;
        v43 = v36;
      }
      v34 = v42;
      v35 = v43;
      *(_QWORD *)(v43 + 16) = v33;
      result = sub_23AA724E8(v34, v35+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v32, &qword_2542DDDB0);
    }
  }
  v30 = v25 + 1;
  if (v25 + 1 >= v45)
    goto LABEL_32;
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v25 + 2;
  if (v25 + 2 >= v45)
    goto LABEL_32;
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v25 + 3;
  if (v25 + 3 >= v45)
    goto LABEL_32;
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v25 + 4;
  if (v25 + 4 >= v45)
  {
LABEL_32:
    v37 = v43;
    goto LABEL_33;
  }
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v25 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v25 >= v45)
      goto LABEL_32;
    v29 = *(_QWORD *)(v44 + 8 * v25);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23B0EACC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v45 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0FD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0);
  v9 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  v44 = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v39 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v38 = (uint64_t)&v37 - v12;
  v13 = *(_QWORD *)(a1 + 64);
  v41 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v42 = (unint64_t)(v14 + 63) >> 6;
  v17 = a1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v40 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v19 >= v42)
      goto LABEL_32;
    v23 = *(_QWORD *)(v41 + 8 * v19);
    if (!v23)
      break;
LABEL_18:
    v16 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_19:
    v25 = *(_QWORD *)(v17 + 56) + 24 * v21;
    v26 = *(void **)v25;
    v27 = *(void **)(v25 + 8);
    v28 = *(void **)(v25 + 16);
    swift_retain();
    v29 = v26;
    v30 = v27;
    sub_23B0E7210(v29, v27, v28, v7);
    if (v3)
    {
      v36 = v40;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      return v36;
    }
    swift_release();

    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v44 + 48))(v7, 1, v43) == 1)
    {
      result = sub_23AA8A05C((uint64_t)v7, &qword_2542E0FD0);
    }
    else
    {
      v31 = v38;
      sub_23AA724E8((uint64_t)v7, v38, (uint64_t *)&unk_2542E0FC0);
      sub_23AA724E8(v31, v39, (uint64_t *)&unk_2542E0FC0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v40 = sub_23AF99DEC(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
      v33 = *(_QWORD *)(v40 + 16);
      v32 = *(_QWORD *)(v40 + 24);
      if (v33 >= v32 >> 1)
        v40 = sub_23AF99DEC(v32 > 1, v33 + 1, 1, v40);
      v34 = v39;
      v35 = v40;
      *(_QWORD *)(v40 + 16) = v33 + 1;
      result = sub_23AA724E8(v34, v35+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v33, (uint64_t *)&unk_2542E0FC0);
    }
  }
  v24 = v19 + 1;
  if (v19 + 1 >= v42)
    goto LABEL_32;
  v23 = *(_QWORD *)(v41 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 2;
  if (v19 + 2 >= v42)
    goto LABEL_32;
  v23 = *(_QWORD *)(v41 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 3;
  if (v19 + 3 >= v42)
    goto LABEL_32;
  v23 = *(_QWORD *)(v41 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 4;
  if (v19 + 4 >= v42)
  {
LABEL_32:
    v36 = v40;
    swift_release();
    return v36;
  }
  v23 = *(_QWORD *)(v41 + 8 * v24);
  if (v23)
  {
LABEL_17:
    v19 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v42)
      goto LABEL_32;
    v23 = *(_QWORD *)(v41 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23B0EB07C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v15[1] = v1;
    v16 = MEMORY[0x24BEE4AF8];
    sub_23ADACF68(0, v7, 0);
    v8 = v16;
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      swift_getAtKeyPath();
      v16 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_23ADACF68(v12 > 1, v13 + 1, 1);
        v8 = v16;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      sub_23AA724E8((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, &qword_2542DDDB0);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_23B0EB1E0()
{
  return sub_23B0E8D30();
}

uint64_t sub_23B0EB1F8()
{
  return swift_deallocObject();
}

double sub_23B0EB208(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0DFA64(a1, *(_QWORD *)(v1 + 16), *(void (**)(_OWORD *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB214()
{
  return swift_deallocObject();
}

unint64_t sub_23B0EB224()
{
  unint64_t result;

  result = qword_2569E8680;
  if (!qword_2569E8680)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E42C0, &type metadata for SpeculativeDownloadsDiskManagementState);
    atomic_store(result, (unint64_t *)&qword_2569E8680);
  }
  return result;
}

uint64_t sub_23B0EB268(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B0EB2C0()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB2D0(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0DFE0C(a1, *(_QWORD *)(v1 + 16), *(void (**)(_OWORD *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB2DC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB2EC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB2FC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0DFC38(a1, *(_QWORD **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB308()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB318()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B0EB33C()
{
  return swift_deallocObject();
}

double sub_23B0EB34C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E074C(a1, *(_QWORD *)(v1 + 16), *(void (**)(_OWORD *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB358()
{
  return swift_deallocObject();
}

unint64_t sub_23B0EB368()
{
  unint64_t result;

  result = qword_2542E22B8;
  if (!qword_2542E22B8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2CB4, &type metadata for SpeculativeSetPacerState);
    atomic_store(result, (unint64_t *)&qword_2542E22B8);
  }
  return result;
}

uint64_t sub_23B0EB3AC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB3BC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E5018(a1, *(id **)(v1 + 16), *(void (**)(void **__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB3C8()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB3D8(void *a1, char *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (objc_sync_enter(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  v4 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_runningEnumerator];
  swift_beginAccess();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_23B0DC45C(v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) != *(_QWORD *)(*(_QWORD *)v4 + 16))
  {
    v7 = swift_bridgeObjectRetain();
    v8 = sub_23B0E9A88(v7);
    swift_bridgeObjectRelease();
    *(_QWORD *)v4 = v8;
    swift_bridgeObjectRelease();
  }
  if (objc_sync_exit(a1))
  {
    swift_unknownObjectRetain();

    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  }
  return v6;
}

uint64_t sub_23B0EB514()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB524(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAB4860(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), &qword_2542E6760, (uint64_t *)&unk_2542E6740);
}

uint64_t sub_23B0EB550()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB560()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB570(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0DF88C(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB57C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB58C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB59C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB5AC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB5BC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E55F4(a1, *(_WORD **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB5D8()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB5E8()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB5F8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0DF6B4(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB604()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB614()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB624(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E0574(a1, *(uint64_t **)(v1 + 16), *(void (**)(__int128 *__return_ptr, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (void (*)(uint64_t, uint64_t))sub_23AB6CCE0);
}

uint64_t sub_23B0EB648()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB658()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B0EB67C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB68C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB69C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB6AC(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAB4860(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), &qword_2542DF1E8, &qword_2542DF1E0);
}

uint64_t sub_23B0EB6D8()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB6E8()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB6F8()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB708()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB718(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E51EC(a1, *(_QWORD **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB724()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB738()
{
  return 32;
}

__n128 sub_23B0EB744(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_23B0EB750()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB760(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0DFFFC(a1, *(void ***)(v1 + 16), *(void (**)(void **__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB76C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB77C()
{
  return sub_23B0EA43C();
}

uint64_t sub_23B0EB784()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB794()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB7A4()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB7B4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E03A0(a1, *(void ***)(v1 + 16), *(void (**)(__int128 *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB7C0()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB7D0()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB7E0(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0E01D0(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24));
}

uint64_t sub_23B0EB7EC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB7FC()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB80C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB81C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB82C()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB83C()
{
  return sub_23B0E9314();
}

uint64_t sub_23B0EB848()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB858()
{
  return swift_deallocObject();
}

uint64_t sub_23B0EB94C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SnapshotCounters();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23B0EB9DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 96))();
}

uint64_t sub_23B0EBA04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 104))();
}

uint64_t sub_23B0EBA2C@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  MEMORY[0x24BDAC7A8](a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23B1C74F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t sub_23B0EBB48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E3180);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23B1D1B90;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23B1D2330;
  v3 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 0x6F43657461657263;
  *(_QWORD *)(v2 + 40) = 0xEB00000000746E75;
  v4 = *v0;
  v5 = MEMORY[0x24BEE4568];
  *(_QWORD *)(v2 + 88) = MEMORY[0x24BEE4568];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E27E0);
  *(_QWORD *)(v1 + 56) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23B1D2330;
  *(_QWORD *)(v7 + 32) = 0x6F43657461647075;
  *(_QWORD *)(v7 + 40) = 0xEB00000000746E75;
  v8 = v0[1];
  *(_QWORD *)(v7 + 88) = v5;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v8;
  *(_QWORD *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 64) = v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23B1D2330;
  *(_QWORD *)(v9 + 32) = 0x6F436574656C6564;
  *(_QWORD *)(v9 + 40) = 0xEB00000000746E75;
  v10 = v0[2];
  *(_QWORD *)(v9 + 88) = v5;
  *(_QWORD *)(v9 + 56) = v3;
  *(_QWORD *)(v9 + 64) = v10;
  *(_QWORD *)(v1 + 120) = v6;
  *(_QWORD *)(v1 + 96) = v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23B1D2330;
  *(_QWORD *)(v11 + 56) = v3;
  *(_QWORD *)(v11 + 32) = 0x7461447465736572;
  *(_QWORD *)(v11 + 40) = 0xE900000000000065;
  v12 = (char *)v0 + *(int *)(type metadata accessor for SnapshotCounters() + 28);
  v13 = sub_23B1C5BDC();
  *(_QWORD *)(v11 + 88) = v13;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v11 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_0, v12, v13);
  *(_QWORD *)(v1 + 152) = v6;
  *(_QWORD *)(v1 + 128) = v11;
  return v1;
}

void sub_23B0EBD2C()
{
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23B0EBD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  os_log_type_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int EnumCaseMultiPayload;

  *(_QWORD *)(v13 - 264) = a1;
  *(_QWORD *)(v13 - 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 160) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v13 - 152) = AssociatedTypeWitness;
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v13 - 144) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 240) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - v21;
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - v22;
  v24 = type metadata accessor for SnapshotItem(0, v9, v10, v23);
  *(_QWORD *)(v13 - 224) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v13 - 216) = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 256) = (char *)&a9 - v27;
  *(_QWORD *)(v13 - 304) = v9;
  *(_QWORD *)(v13 - 312) = v10;
  v29 = type metadata accessor for SnapshotMutation(0, v9, v10, v28);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v13 - 168) = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v13 - 200) = (char *)&a9 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&a9 - v35;
  v37 = sub_23B1C5E4C();
  *(_QWORD *)(v13 - 192) = *(_QWORD *)(v37 - 8);
  *(_QWORD *)(v13 - 184) = v37;
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&a9 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v41 = sub_23AF4E090(v29);
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  *(_QWORD *)(v13 - 176) = v11;
  *(_QWORD *)(v13 - 136) = v42;
  v42(v36, v11, v29);
  swift_retain();
  v43 = sub_23B1C5E40();
  if (os_log_type_enabled(v43, v41))
  {
    v44 = swift_slowAlloc();
    *(_DWORD *)(v13 - 324) = v41;
    v45 = v44;
    v46 = swift_slowAlloc();
    *(_QWORD *)(v13 - 320) = v46;
    *(_QWORD *)(v13 - 120) = v46;
    *(_DWORD *)v45 = 136446466;
    v47 = *(unsigned __int8 *)(v12 + 32);
    *(_QWORD *)(v13 - 336) = v12;
    if (v47)
      v48 = 20550;
    else
      v48 = 21318;
    *(_QWORD *)(v13 - 72) = sub_23AABEC68(v48, 0xE200000000000000, (uint64_t *)(v13 - 120));
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    *(_QWORD *)(v13 - 344) = v45 + 14;
    v49 = *(char **)(v13 - 200);
    (*(void (**)(char *, char *, uint64_t))(v13 - 136))(v49, v36, v29);
    v50 = *(void (**)(char *, uint64_t))(v30 + 8);
    v50(v36, v29);
    sub_23AF4D8DC(v29);
    v52 = v51;
    v54 = v53;
    v50(v49, v29);
    *(_QWORD *)(v13 - 72) = sub_23AABEC68(v52, v54, (uint64_t *)(v13 - 120));
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v43, (os_log_type_t)*(_DWORD *)(v13 - 324), " ✍️  %{public}s snapshot mutation: %{public}s", (uint8_t *)v45, 0x16u);
    v55 = *(_QWORD *)(v13 - 320);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v55, -1, -1);
    MEMORY[0x23B8614BC](v45, -1, -1);

    (*(void (**)(char *, _QWORD))(*(_QWORD *)(v13 - 192) + 8))(v39, *(_QWORD *)(v13 - 184));
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v29);

    swift_release();
    (*(void (**)(char *, _QWORD))(*(_QWORD *)(v13 - 192) + 8))(v39, *(_QWORD *)(v13 - 184));
  }
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v13 - 136))(*(_QWORD *)(v13 - 168), *(_QWORD *)(v13 - 176), v29);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B0EC220 + *((int *)qword_23B0EC738 + EnumCaseMultiPayload)))();
}

uint64_t sub_23B0EC234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v2 - 216);
  swift_getTupleTypeMetadata2();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 - 224);
  v5 = *(_QWORD *)(v2 - 256);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v1, v3);
  v6 = (_QWORD *)(v0 + qword_2542EDE50);
  swift_beginAccess();
  if (*v6 == -1)
  {
    __break(1u);
    JUMPOUT(0x23B0EC72CLL);
  }
  ++*v6;
  v7 = *(_QWORD *)(v2 - 128);
  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 480))(v5);
  *(_QWORD *)(v2 - 128) = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
}

void sub_23B0EC750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t TupleTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t AssociatedTypeWitness;
  uint64_t v37;
  char v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v7 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v35 = *(_QWORD *)(*(_QWORD *)v3 + 96);
  v37 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - v9;
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1;
  v40 = a2;
  v15 = a3;
  v41 = a3;
  v42 = v3;
  sub_23B1C5BD0();
  v16 = v49;
  v17 = sub_23B0CE5AC((uint64_t)v14, sub_23B0F0830, (uint64_t)v38);
  v49 = v16;
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v19 = v17;
    v20 = v37;
    v33 = v15;
    v34 = v10;
    v21 = v18;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (v21)
    {
      v47 = v19;
      v48 = v21;
      v45 = 58;
      v46 = 0xE100000000000000;
      v43 = 47;
      v44 = 0xE100000000000000;
      sub_23AAA420C();
      sub_23B1C6CF8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = type metadata accessor for FileTreeError(0, v20, v35, v22);
      MEMORY[0x23B8613CC](&unk_23B1D40CC, v23);
      v24 = (void *)swift_allocError();
      v26 = v25;
      *(_QWORD *)v25 = a1;
      *((_QWORD *)v25 + 1) = a2;
      v47 = v33;
      v27 = AssociatedTypeWitness;
      v28 = sub_23B1C67DC();
      swift_bridgeObjectRetain();
      MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v28);
      v29 = v34;
      sub_23B1C69A4();
      v30 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v29, 1, v27) == 1)
      {

        __break(1u);
      }
      else
      {
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v26[*(int *)(TupleTypeMetadata2 + 48)], v29, v27);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
    }
  }
}

uint64_t sub_23B0ECA38()
{
  uint64_t v0;

  swift_release();
  swift_weakDestroy();
  sub_23B0F0778(v0 + qword_2542EDE50);
  return v0;
}

uint64_t sub_23B0ECA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 96), a4);
  v6 = 0;
  v13 = sub_23B1C6758();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 472);
  v8 = MEMORY[0x24BEE12C8];
  do
  {
    v7(a1, v6);
    v10 = v9;
    v11 = sub_23B1C67DC();
    MEMORY[0x23B8613CC](v8, v11);
    sub_23B1C67A0();
    swift_release();
    v6 = v10;
  }
  while (v10);
  return v13;
}

uint64_t sub_23B0ECB88()
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0x3A736C643CLL;
}

uint64_t sub_23B0ECCBC()
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0x3A6C6564213CLL;
}

uint64_t sub_23B0ECDB4(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE v12[24];
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v3 = v2;
  v15 = a2;
  v5 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 632))();
  v14 = 0;
  v7 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v17 = 0x687370616E73202BLL;
  v18 = 0xEB0000000020746FLL;
  sub_23B1C6440();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v16 = v5;
  sub_23AB55910();
  sub_23B1C6D70();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AEBD130(0x687370616E73202BLL, 0xEB0000000020746FLL, v7, v6);
  swift_bridgeObjectRelease();
  v8 = a1[3];
  v9 = a1[4];
  v10 = __swift_project_boxed_opaque_existential_1(a1, v8);
  MEMORY[0x24BDAC7A8](v10);
  v12[16] = v15 & 1;
  v13 = v3;
  return sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23B0F07F8, (uint64_t)v12, v8, MEMORY[0x24BEE4AE0] + 8, v9);
}

uint64_t sub_23B0ECFD0()
{
  return sub_23B0ECB88();
}

uint64_t sub_23B0ECFDC()
{
  return sub_23B0ECCBC();
}

uint64_t sub_23B0ECFE4()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  type metadata accessor for SnapshotCounters();
  sub_23B1C5B34();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B0ED18C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E86F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B0F0734();
  sub_23B1C7538();
  v8[15] = 0;
  sub_23B1C72E0();
  if (!v1)
  {
    v8[14] = 1;
    sub_23B1C72E0();
    v8[13] = 2;
    sub_23B1C72E0();
    type metadata accessor for SnapshotCounters();
    v8[12] = 3;
    sub_23B1C5BDC();
    sub_23AB6E438(&qword_2569E2418, MEMORY[0x24BDCE920]);
    sub_23B1C72A4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23B0ED328@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v24 = a2;
  v3 = sub_23B1C5BDC();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E86E0);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SnapshotCounters();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = 0;
  v12[1] = 0;
  v12[2] = 0;
  v13 = (char *)v12 + *(int *)(v10 + 28);
  sub_23B1C5BB8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B0F0734();
  v26 = v8;
  v14 = v27;
  sub_23B1C7520();
  if (!v14)
  {
    v27 = v13;
    v15 = v6;
    v16 = v5;
    v17 = v23;
    v18 = v24;
    v31 = 0;
    v19 = v25;
    *v12 = sub_23B1C71FC();
    v30 = 1;
    v12[1] = sub_23B1C71FC();
    v29 = 2;
    v12[2] = sub_23B1C71FC();
    v28 = 3;
    sub_23AB6E438(&qword_2569E2468, MEMORY[0x24BDCE960]);
    v21 = v26;
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v19);
    (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v27, v16, v17);
    sub_23B0F07B4((uint64_t)v12, v18);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23B0F0778((uint64_t)v12);
}

uint64_t sub_23B0ED5A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B0ED5E0 + 4 * byte_23B1E63D0[*v0]))(0x6F43657461657263, 0xEB00000000746E75);
}

uint64_t sub_23B0ED5E0()
{
  return 0x6F43657461647075;
}

uint64_t sub_23B0ED600()
{
  return 0x7461447465736572;
}

uint64_t sub_23B0ED61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B0F03F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B0ED640()
{
  sub_23B0F0734();
  return sub_23B1C7544();
}

uint64_t sub_23B0ED668()
{
  sub_23B0F0734();
  return sub_23B1C7550();
}

uint64_t sub_23B0ED690@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B0ED328(a1, a2);
}

uint64_t sub_23B0ED6A4(_QWORD *a1)
{
  return sub_23B0ED18C(a1);
}

void sub_23B0ED6BC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0ED71C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0ED77C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0ED7DC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0ED83C()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23B0ED89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a3;
  v5 = *v3;
  v6 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*v3 + 80), *(_QWORD *)(*v3 + 96), a2);
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - v9;
  v11 = v22;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 240))(a1, 1);
  if (!v11)
  {
    v13 = v7;
    v14 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v6) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v13);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8)
                                                                           + 56))(v21, 1, 1, AssociatedTypeWitness);
    }
    else
    {
      v16 = &v10[*(int *)(v6 + 36)];
      v17 = swift_getAssociatedTypeWitness();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = v21;
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v21, v16, v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v6);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v19, 0, 1, v17);
    }
  }
  return result;
}

uint64_t sub_23B0EDA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = *v4;
  v8 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 96), a4);
  v9 = sub_23B1C6C98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - v11;
  (*(void (**)(uint64_t, uint64_t))(v7 + 240))(a1, 1);
  if (!v5)
  {
    LOBYTE(v8) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v12, 1, v8) != 1;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v8 & 1;
}

void sub_23B0EDB30()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDB90()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDBF0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDC50()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDCB0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDD10()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDD70()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDDD0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDE30()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDE90()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDEF0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDF50()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EDFB0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE010()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE070()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE0D0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE130()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE190()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE1F0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE250()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE2B0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE310()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE370()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE3D0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE430()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE490()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE4F0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE550()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE5B0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE610()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE670()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE6D0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE730()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE790()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE7F0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE850()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE8B0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE910()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE970()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EE9D0()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23B0EEA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v20[1] = a3;
  v6 = *v3;
  v25 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*v3 + 80), *(_QWORD *)(*v3 + 96), a2);
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - v9;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 240))(a1, 1);
  if (!v4)
  {
    if ((*(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v10, 1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v13 = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v15 = swift_getAssociatedConformanceWitness();
      v21 = AssociatedTypeWitness;
      v22 = v13;
      v23 = AssociatedConformanceWitness;
      v24 = v15;
      type metadata accessor for FileItemVersion();
    }
    v20[0] = &v10[*(int *)(v25 + 40)];
    v16 = swift_getAssociatedTypeWitness();
    v17 = swift_getAssociatedTypeWitness();
    v18 = swift_getAssociatedConformanceWitness();
    v19 = swift_getAssociatedConformanceWitness();
    v21 = v16;
    v22 = v17;
    v23 = v18;
    v24 = v19;
    type metadata accessor for FileItemVersion();
  }
  return result;
}

uint64_t sub_23B0EECD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD v20[2];

  v6 = *v4;
  v7 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 96), a4);
  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v20 - v14;
  v16 = v20[1];
  (*(void (**)(uint64_t, uint64_t))(v6 + 240))(a1, 1);
  if (!v16)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v7);
      v17 = &v15[*(int *)(v7 + 48)];
      v6 = *(_QWORD *)&v17[*(int *)(type metadata accessor for ItemMetadata() + 100)];
      v18 = MEMORY[0x23B8613CC](&unk_23B1DD478, v7);
      sub_23AF219A4(v7, v18);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v7);
    }
  }
  return v6;
}

void sub_23B0EEE58()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EEEBC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EEF1C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23B0EEF7C()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23B0EEFDC()
{
  sub_23B0ECA38();
  return swift_deallocClassInstance();
}

void type metadata accessor for Snapshot()
{
  JUMPOUT(0x23B861318);
}

uint64_t type metadata accessor for SnapshotCounters()
{
  uint64_t result;

  result = qword_2542E4B70;
  if (!qword_2542E4B70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_23B0EF048(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v5 = *(int *)(a3 + 28);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23B1C5BDC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_23B0EF0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_23B1C5BDC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_23B0EF110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23B1C5BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23B0EF174(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23B1C5BDC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_23B0EF1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23B1C5BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_23B0EF244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23B1C5BDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_23B0EF2A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B0EF2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = sub_23B1C5BDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_23B0EF2F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B0EF300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = sub_23B1C5BDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23B0EF344()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5BDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotFPRecursiveProperties()
{
  return &type metadata for SnapshotFPRecursiveProperties;
}

ValueMetadata *type metadata accessor for SnapshotFSRecursiveProperties()
{
  return &type metadata for SnapshotFSRecursiveProperties;
}

void sub_23B0EF3E0()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23B0EF3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD v57[2];
  uint64_t v58;

  v50 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_23B1C6C98();
  v48 = *(_QWORD *)(v12 - 8);
  v49 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v47 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v41 - v19;
  v51 = a1;
  if (a1 == a3 && a2 == a4 || (v42 = v18, v46 = v17, (sub_23B1C7388() & 1) != 0))
  {
LABEL_4:
    v21 = 0;
    return v21 & 1;
  }
  v23 = swift_bridgeObjectRetain();
  if (!MEMORY[0x23B85F0E0](v23, AssociatedTypeWitness))
  {
LABEL_18:
    swift_bridgeObjectRelease();
    v21 = 1;
    return v21 & 1;
  }
  v24 = 0;
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v50 + 256);
  v45 = a5;
  v43 = v20;
  v25 = v47;
  while (1)
  {
    v26 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v26 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v20, a5+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v24, AssociatedTypeWitness);
      v27 = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_17;
      goto LABEL_10;
    }
    result = sub_23B1C6F38();
    if (v42 != 8)
      break;
    v57[0] = result;
    (*(void (**)(char *, _QWORD *, uint64_t))(v14 + 16))(v20, v57, AssociatedTypeWitness);
    swift_unknownObjectRelease();
    v27 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_10:
    v52 = v27;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v25, v20, AssociatedTypeWitness);
    v57[0] = v51;
    v57[1] = a2;
    v28 = a2;
    v55 = 58;
    v56 = 0xE100000000000000;
    v53 = 47;
    v54 = 0xE100000000000000;
    sub_23AAA420C();
    v29 = sub_23B1C6CF8();
    v31 = v30;
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v33 = v14;
    v34 = v46;
    v32(v46, 1, 1, AssociatedTypeWitness);
    v35 = v58;
    v36 = v44(v25, v29, v31, v34);
    if (v35)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v34, v49);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v25, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      return v21 & 1;
    }
    v37 = v36;
    v58 = 0;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v34, v49);
    swift_bridgeObjectRelease();
    v57[0] = v37;
    v38 = sub_23B1C67DC();
    MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v38);
    v39 = sub_23B1C69B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v25, AssociatedTypeWitness);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    v14 = v33;
    a5 = v45;
    v40 = MEMORY[0x23B85F0E0](v45, AssociatedTypeWitness);
    ++v24;
    a2 = v28;
    v20 = v43;
    if (v52 == v40)
      goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B0EF7E0()
{
  return sub_23B0EB9DC();
}

uint64_t sub_23B0EF800()
{
  return sub_23B0EBA04();
}

uint64_t sub_23B0EF820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_BYTE *), uint64_t a6)
{
  return sub_23B0F05EC(a1, a5, a6, a4);
}

uint64_t sub_23B0EF848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0ECA6C(a1, a2, a3, a4);
}

uint64_t sub_23B0EF868(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char *v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[248];
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[32];

  v9 = (int *)type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 96), (uint64_t)a4);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - v11;
  if (a3 < 61)
  {
    v15 = *a4;
    if (*a4 <= 0)
    {
      v21 = a2[3];
      v22 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v21);
      sub_23AEBD130(0xD00000000000001BLL, 0x800000023B205070, v21, v22);
      return 0;
    }
    v42 = a3;
    v43 = v15;
    v45 = v10;
    v46 = v4;
    (*(void (**)(char *, uint64_t, int *))(v10 + 16))(v12, a1, v9);
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
    v18 = swift_checkMetadataState();
    v19 = v17(v18, AssociatedConformanceWitness);
    v44 = a4;
    if ((v19 & 1) != 0
      || ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v18, AssociatedConformanceWitness) & 1) != 0)
    {
      v20 = (uint64_t *)v46;
      (*(void (**)(_QWORD *__return_ptr, char *))(*(_QWORD *)v46 + 264))(v50, v12);
      sub_23AAB7EC8((uint64_t)v50, (uint64_t)v47);
      sub_23AAB7EC8((uint64_t)v47, (uint64_t)&v48);
      v24 = (uint64_t)&v12[v9[13]];
      sub_23AAB7EC8(v24, (uint64_t)v47);
      sub_23AAA5B2C((uint64_t)v47);
      sub_23AAB7EC8((uint64_t)&v48, v24);
      v25 = *v20;
      if ((v20[4] & 1) != 0)
      {
        v26 = (*(uint64_t (**)(char *))(v25 + 320))(v12);
        v29 = &v12[v9[15]];
        *(_QWORD *)v29 = v26;
        *((_QWORD *)v29 + 1) = v30;
        v29[16] = v28 & 1;
      }
      else
      {
        v27 = (*(uint64_t (**)(char *))(v25 + 312))(v12);
        v32 = &v12[v9[14]];
        *(_QWORD *)v32 = v27;
        *((_QWORD *)v32 + 1) = v33;
        *((_QWORD *)v32 + 2) = v34;
        v32[24] = v31 & 1;
      }
    }
    v35 = a2[3];
    v36 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v35);
    v48 = 0;
    v49 = 0xE000000000000000;
    MEMORY[0x23B8613CC](&unk_23B1DD494, v9);
    sub_23B1C7340();
    sub_23AEBD130(v48, v49, v35, v36);
    swift_bridgeObjectRelease();
    v37 = v44;
    *v44 = v43 - 1;
    v38 = MEMORY[0x23B8613CC](&unk_23B1DD478, v9);
    if (sub_23AF219A4((uint64_t)v9, v38) == 1)
    {
      v39 = a2[3];
      v40 = a2[4];
      v41 = __swift_project_boxed_opaque_existential_1(a2, v39);
      MEMORY[0x24BDAC7A8](v41);
      *(&v42 - 4) = v46;
      *(&v42 - 3) = (uint64_t)v12;
      *(&v42 - 2) = v42;
      *(&v42 - 1) = (uint64_t)v37;
      sub_23AEBD1D4(32, 0xE100000000000000, (void (*)(_QWORD *))sub_23B0F0814, (uint64_t)(&v42 - 6), v39, MEMORY[0x24BEE4AE0] + 8, v40);
    }
    (*(void (**)(char *, int *))(v45 + 8))(v12, v9);
  }
  else
  {
    v13 = a2[3];
    v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    sub_23AEBD130(0xD000000000000018, 0x800000023B205050, v13, v14);
  }
  return 1;
}

void sub_23B0EFC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a1;
  v33 = a5;
  v31 = a4;
  v7 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 96), a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v34 = (char *)&v28 - v12;
  AssociatedTypeWitness = (_QWORD *)swift_getAssociatedTypeWitness();
  v14 = *(AssociatedTypeWitness - 1);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)&v28 - v15;
  (*(void (**)(char *, uint64_t, _QWORD *))(v14 + 16))((char *)&v28 - v15, a3, AssociatedTypeWitness);
  v17 = (*(uint64_t (**)(char *))(*(_QWORD *)a2 + 688))(v16);
  (*(void (**)(char *, _QWORD *))(v14 + 8))(v16, AssociatedTypeWitness);
  if (MEMORY[0x23B85F0E0](v17, v7))
  {
    v18 = 0;
    v30 = v31 + 1;
    v19 = __OFADD__(v31, 1);
    LODWORD(v31) = v19;
    while (1)
    {
      v20 = sub_23B1C6770();
      sub_23B1C6734();
      if ((v20 & 1) != 0)
      {
        v21 = v34;
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v34, v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v18, v7);
        v22 = v18 + 1;
        if (__OFADD__(v18, 1))
          goto LABEL_16;
      }
      else
      {
        v27 = sub_23B1C6F38();
        if (v29 != 8)
          goto LABEL_19;
        AssociatedTypeWitness = (_QWORD *)v27;
        v36 = v27;
        v21 = v34;
        (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v34, &v36, v7);
        swift_unknownObjectRelease();
        v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
      }
      v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v21, v7);
      v24 = MEMORY[0x23B8601A8](v23);
      if ((_DWORD)v31)
        break;
      AssociatedTypeWitness = (_QWORD *)v24;
      v25 = sub_23B0EF868(v11, v32, v30, v33);
      if (v35)
        goto LABEL_20;
      v26 = v25;
      objc_autoreleasePoolPop(AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      if ((v26 & 1) != 0)
      {
        ++v18;
        if (v22 != MEMORY[0x23B85F0E0](v17, v7))
          continue;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    objc_autoreleasePoolPop(AssociatedTypeWitness);
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23B0EFF40(_QWORD *a1, char a2, uint64_t *a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56[2];
  uint64_t v57;

  v54 = a1;
  v6 = *a3;
  v7 = type metadata accessor for SnapshotCounters();
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 96);
  v10 = *(_QWORD *)(v6 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v48 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v52 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v45 - v14;
  v17 = type metadata accessor for SnapshotItem(255, v10, v9, v16);
  v49 = sub_23B1C6C98();
  v55 = *(_QWORD *)(v49 - 8);
  v18 = MEMORY[0x24BDAC7A8](v49);
  v53 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v45 - v21;
  v23 = *(_QWORD *)(v17 - 8);
  v24 = MEMORY[0x24BDAC7A8](v20);
  v46 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v45 - v27;
  v29 = 3000;
  if ((a2 & 1) == 0)
    v29 = 0x7FFFFFFFFFFFFFFFLL;
  v57 = v29;
  (*(void (**)(uint64_t))(*(_QWORD *)a3[2] + 96))(v26);
  v51 = *(void (**)(char *, uint64_t))(*a3 + 240);
  v51(v15, 1);
  v47 = AssociatedTypeWitness;
  if (v3)
  {

    v48 = *(_QWORD *)(v48 + 8);
    ((void (*)(char *, uint64_t))v48)(v15, AssociatedTypeWitness);
    v30 = v23;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v22, 1, 1, v17);
    v31 = v49;
LABEL_7:
    v34 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v22, v31);
    v35 = v52;
    goto LABEL_9;
  }
  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v15, AssociatedTypeWitness);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v17);
  v33 = v49;
  if (v32 == 1)
  {
    v30 = v23;
    v31 = v49;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v28, v22, v17);
  sub_23B0EF868((uint64_t)v28, v54, 1, &v57);
  v30 = v23;
  v34 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v28, v17);
  v35 = v52;
  v31 = v33;
LABEL_9:
  (*(void (**)(uint64_t))(*(_QWORD *)a3[2] + 104))(v34);
  v36 = v53;
  v51(v35, 1);
  ((void (*)(char *, uint64_t))v48)(v35, v47);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v36, 1, v17);
  v38 = (uint64_t)v50;
  v39 = v54;
  if (v37 == 1)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v31);
  }
  else
  {
    v40 = (uint64_t)v46;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v46, v36, v17);
    sub_23B0EF868(v40, v39, 1, &v57);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v40, v17);
  }
  v41 = v39[3];
  v42 = v39[4];
  __swift_project_boxed_opaque_existential_1(v39, v41);
  strcpy((char *)v56, "+ counters: ");
  BYTE5(v56[1]) = 0;
  HIWORD(v56[1]) = -5120;
  v43 = (uint64_t)a3 + qword_2542EDE50;
  swift_beginAccess();
  sub_23B0F07B4(v43, v38);
  sub_23B0ECFE4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B0F0778(v38);
  sub_23AEBD130(v56[0], v56[1], v41, v42);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B0F03F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F43657461657263 && a2 == 0xEB00000000746E75;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43657461647075 && a2 == 0xEB00000000746E75 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F436574656C6564 && a2 == 0xEB00000000746E75 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447465736572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23B0F05EC(uint64_t a1, void (*a2)(_BYTE *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 96), a4);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v7 = sub_23B1C74F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v12[-v9];
  v13 = v4;
  v14 = a1;
  sub_23B0EBA2C((void (*)(_BYTE *))sub_23B0F06F4, (uint64_t)&v12[-v9]);
  a2(v10);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23B0F06F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v1 + 16) + 240))(*(_QWORD *)(v1 + 24), 1);
  if (v2)
    *a1 = v2;
  return result;
}

unint64_t sub_23B0F0734()
{
  unint64_t result;

  result = qword_2569E86E8;
  if (!qword_2569E86E8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E6678, &type metadata for SnapshotCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E86E8);
  }
  return result;
}

uint64_t sub_23B0F0778(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SnapshotCounters();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B0F07B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SnapshotCounters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B0F07F8(_QWORD *a1)
{
  uint64_t v1;

  return sub_23B0EFF40(a1, *(_BYTE *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

void sub_23B0F0814(uint64_t a1)
{
  uint64_t *v1;

  sub_23B0EFC8C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23B0F0830(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_23B0EF3F0(a1, a2, v2[2], v2[3], v2[4], v2[5]) & 1;
}

uint64_t storeEnumTagSinglePayload for SnapshotCounters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B0F089C + 4 * byte_23B1E63D9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B0F08D0 + 4 * byte_23B1E63D4[v4]))();
}

uint64_t sub_23B0F08D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0F08D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B0F08E0);
  return result;
}

uint64_t sub_23B0F08EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B0F08F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B0F08F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0F0900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SnapshotCounters.CodingKeys()
{
  return &type metadata for SnapshotCounters.CodingKeys;
}

unint64_t sub_23B0F0920()
{
  unint64_t result;

  result = qword_2569E86F8;
  if (!qword_2569E86F8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E6650, &type metadata for SnapshotCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E86F8);
  }
  return result;
}

unint64_t sub_23B0F0968()
{
  unint64_t result;

  result = qword_2569E8700;
  if (!qword_2569E8700)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E65C0, &type metadata for SnapshotCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E8700);
  }
  return result;
}

unint64_t sub_23B0F09B0()
{
  unint64_t result;

  result = qword_2569E8708;
  if (!qword_2569E8708)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E65E8, &type metadata for SnapshotCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E8708);
  }
  return result;
}

uint64_t sub_23B0F09F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23B0F0A3C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = a3;
  return v3;
}

void sub_23B0F0A4C()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23B0F0AAC()
{
  return swift_deallocClassInstance();
}

void type metadata accessor for Schedulable()
{
  JUMPOUT(0x23B861318);
}

BOOL sub_23B0F0AC8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  if (v3 < v2)
    return 1;
  return v2 == v3 && *(_QWORD *)(a1 + 24) < *(_QWORD *)(a2 + 24);
}

BOOL sub_23B0F0AF8(uint64_t *a1, uint64_t *a2)
{
  return sub_23B0F0AC8(*a1, *a2);
}

uint64_t sub_23B0F0B24()
{
  return sub_23AAED140();
}

void sub_23B0F0B2C()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0F0B3C(char a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_23B0F0BB4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = qword_23B1E6940[*v0];
  *(_QWORD *)(v1 - 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v1 - 80) = v2;
  v3 = sub_23AA94C90(v1 - 80);
  v5 = v4;
  sub_23AA8A05C(v1 - 80, qword_2542E5640);
  if (!v5)
  {
    sub_23B1C704C();
    __break(1u);
    JUMPOUT(0x23B0F0C94);
  }
  return v3;
}

void sub_23B0F1088()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 56));
  v2 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_23AD28E68(v2, v3);
  JUMPOUT(0x23B0F10B4);
}

void sub_23B0F10C8()
{
  void *v0;
  void *v1;

  type metadata accessor for ItemMetadata();
  v1 = (void *)sub_23B1C7514();
  objc_msgSend(v0, sel_bindObjectParameter_, v1);

  JUMPOUT(0x23B0F1054);
}

void sub_23B0F110C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 148) + 8))
    v2 = sub_23B1C63BC();
  else
    v2 = 0;
  objc_msgSend(v1, sel_bindObjectParameter_, v2);
  swift_unknownObjectRelease();
  JUMPOUT(0x23B0F1054);
}

uint64_t sub_23B0F1248(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_23AAB0660(*a1);
  v5 = v4;
  if (v3 == sub_23AAB0660(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23B0F12D0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23B1C74A8();
  sub_23AAB0660(v1);
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  return sub_23B1C74E4();
}

uint64_t sub_23B0F1330()
{
  unsigned __int8 *v0;

  sub_23AAB0660(*v0);
  sub_23B1C64A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B0F1370()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23B1C74A8();
  sub_23AAB0660(v1);
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  return sub_23B1C74E4();
}

uint64_t sub_23B0F13CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23B0F17C0();
  *a1 = result;
  return result;
}

uint64_t sub_23B0F13F8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23AAB0660(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23B0F1420()
{
  unsigned __int8 *v0;

  return sub_23AAB0660(*v0);
}

void sub_23B0F1428(char *a1)
{
  sub_23B0F0B3C(*a1);
}

void sub_23B0F1440(char *a1)
{
  sub_23AAB096C(*a1);
}

void sub_23B0F1458(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_23AA825CC(a1, a2, a3);
}

unint64_t sub_23B0F146C(uint64_t a1)
{
  unint64_t result;

  result = sub_23B0F1490();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23B0F1490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569E8710;
  if (!qword_2569E8710)
  {
    v1 = type metadata accessor for ItemMetadata();
    result = MEMORY[0x23B8613CC](&unk_23B1E67FC, v1);
    atomic_store(result, (unint64_t *)&qword_2569E8710);
  }
  return result;
}

uint64_t sub_23B0F14DC()
{
  return sub_23B0F1680(qword_2569E8718, MEMORY[0x24BEE12C8]);
}

uint64_t _s14descr250C16931O9SQLFieldsOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE5)
    goto LABEL_17;
  if (a2 + 27 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 27) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 27;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 27;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 27;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1C;
  v8 = v6 - 28;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14descr250C16931O9SQLFieldsOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 27 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 27) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE4)
    return ((uint64_t (*)(void))((char *)&loc_23B0F15DC + 4 * byte_23B1E67D9[v4]))();
  *a1 = a2 + 27;
  return ((uint64_t (*)(void))((char *)sub_23B0F1610 + 4 * byte_23B1E67D4[v4]))();
}

uint64_t sub_23B0F1610(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0F1618(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B0F1620);
  return result;
}

uint64_t sub_23B0F162C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B0F1634);
  *(_BYTE *)result = a2 + 27;
  return result;
}

uint64_t sub_23B0F1638(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B0F1640(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr250C16931O9SQLFieldsOMa()
{
  return &_s14descr250C16931O9SQLFieldsON;
}

uint64_t sub_23B0F165C()
{
  return sub_23B0F1680((unint64_t *)&qword_2569E7140, MEMORY[0x24BEE12E0]);
}

uint64_t sub_23B0F1680(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E54A8);
    result = MEMORY[0x23B8613CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B0F16C8()
{
  unint64_t result;

  result = qword_2542E08D0;
  if (!qword_2542E08D0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E68FC, &_s14descr250C16931O9SQLFieldsON);
    atomic_store(result, (unint64_t *)&qword_2542E08D0);
  }
  return result;
}

unint64_t sub_23B0F170C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23B0F1738();
  result = sub_23B0F177C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23B0F1738()
{
  unint64_t result;

  result = qword_2542E08D8;
  if (!qword_2542E08D8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E6824, &_s14descr250C16931O9SQLFieldsON);
    atomic_store(result, (unint64_t *)&qword_2542E08D8);
  }
  return result;
}

unint64_t sub_23B0F177C()
{
  unint64_t result;

  result = qword_2542E08C8;
  if (!qword_2542E08C8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E68BC, &_s14descr250C16931O9SQLFieldsON);
    atomic_store(result, (unint64_t *)&qword_2542E08C8);
  }
  return result;
}

uint64_t sub_23B0F17C0()
{
  unint64_t v0;

  v0 = sub_23B1C73C4();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1C)
    return 28;
  else
    return v0;
}

void sub_23B0F1810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t inited;
  void *v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  unsigned int v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  char *v65;
  char *v66;
  id v67;
  id v68[3];
  uint64_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x24BDAC8D0];
  v55 = sub_23B1C5E4C();
  v57 = *(id *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v60 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23B1C5A08();
  v3 = *(_QWORD *)(v61 - 8);
  v4 = MEMORY[0x24BDAC7A8](v61);
  v56 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)&v55 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_23B1C58A0();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v66 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  __swift_instantiateConcreteTypeFromMangledName(qword_2569E8788);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1D2330;
  v13 = (void *)*MEMORY[0x24BDD0CB0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD0CB0];
  *(_QWORD *)(inited + 40) = 0x656C69626F6DLL;
  v14 = (void *)*MEMORY[0x24BDD0C78];
  *(_QWORD *)(inited + 48) = 0xE600000000000000;
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 64) = 0x656C69626F6DLL;
  *(_QWORD *)(inited + 72) = 0xE600000000000000;
  v15 = v13;
  v16 = v14;
  v17 = sub_23AAEC78C(inited);
  sub_23B1487A4(v17);
  type metadata accessor for FileAttributeKey(0);
  v19 = v18;
  v62 = sub_23AA7E38C(&qword_2569E3260, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_23B1CE3BC);
  v63 = v19;
  v20 = (void *)sub_23B1C61F4();
  swift_bridgeObjectRelease();
  v21 = a1;
  sub_23B1C59E4();
  v22 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v68[0] = 0;
  LODWORD(v19) = objc_msgSend(v11, sel_setAttributes_ofItemAtPath_error_, v20, v22, v68);

  if (!(_DWORD)v19)
  {
    v38 = v68[0];
    swift_bridgeObjectRelease();
    sub_23B1C587C();

    swift_willThrow();
    return;
  }
  v64 = (uint8_t *)v17;
  v23 = v68[0];
  v24 = (void *)sub_23B1C6A7C();
  if (v24)
  {
    v25 = v66;
    v57 = v24;
    sub_23B1C6A58();
    sub_23B1C5894();
    v26 = v61;
    v27 = (uint64_t)v64;
    v28 = v65;
    if (!v69)
    {
LABEL_13:
      (*(void (**)(char *, uint64_t))(v58 + 8))(v25, v59);

      swift_bridgeObjectRelease();
      return;
    }
    v60 = (char *)(MEMORY[0x24BEE4AD8] + 8);
    while (1)
    {
      v29 = swift_dynamicCast();
      v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      if (!v29)
        break;
      v30(v9, 0, 1, v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v26) == 1)
        goto LABEL_6;
      v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v28, v9, v26);
      v65 = (char *)MEMORY[0x23B8601A8](v31);
      sub_23B1487A4(v27);
      v32 = (void *)sub_23B1C61F4();
      swift_bridgeObjectRelease();
      sub_23B1C59E4();
      v33 = v3;
      v34 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v67 = 0;
      v35 = v11;
      v36 = objc_msgSend(v11, sel_setAttributes_ofItemAtPath_error_, v32, v34, &v67);

      if (!v36)
      {
        v54 = v67;
        sub_23B1C587C();

        swift_willThrow();
        objc_autoreleasePoolPop(v65);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v66, v59);
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v26);
        return;
      }
      v37 = v67;
      objc_autoreleasePoolPop(v65);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v26);
      v11 = v35;
      v3 = v33;
      v25 = v66;
      v27 = (uint64_t)v64;
LABEL_7:
      sub_23B1C5894();
      if (!v69)
        goto LABEL_13;
    }
    v30(v9, 1, 1, v26);
LABEL_6:
    sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E6740);
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  v39 = (id)fpfs_current_or_default_log();
  v40 = v60;
  sub_23B1C5E58();
  v41 = v56;
  v42 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v56, v21, v61);
  v43 = sub_23B1C5E40();
  v44 = sub_23B1C6AA0();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v65 = (char *)swift_slowAlloc();
    v68[0] = v65;
    v66 = v11;
    *(_DWORD *)v45 = 136315138;
    v64 = v45 + 4;
    v46 = (void *)sub_23B1C5954();
    v47 = v41;
    v48 = objc_msgSend(v46, sel_fp_shortDescription);

    v49 = sub_23B1C63E0();
    v50 = v3;
    v52 = v51;

    v67 = (id)sub_23AABEC68(v49, v52, (uint64_t *)v68);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v61);
    _os_log_impl(&dword_23AA66000, v43, v44, "Failed to get enumerator for %s", v45, 0xCu);
    v53 = v65;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v53, -1, -1);
    MEMORY[0x23B8614BC](v45, -1, -1);

    (*((void (**)(char *, uint64_t))v57 + 1))(v60, v55);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v41, v42);
    (*((void (**)(char *, uint64_t))v57 + 1))(v40, v55);
  }
}

id sub_23B0F1FA8(char *a1, char *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(void);
  id v23;
  void *v24;
  unsigned int v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  objc_class *v28;
  id v29;
  void (*v30)(uint64_t, uint64_t);
  id v31;
  char *v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint8_t *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  objc_super v58;
  uint64_t v59;
  uint64_t v60;

  v5 = sub_23B1C5E4C();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v57 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5A08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v53 = (char *)&v46 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v46 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v46 - v20;
  v22 = *(void (**)(void))(v11 + 16);
  v50 = &v2[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_userURL];
  v54 = a1;
  v22();
  v49 = &v2[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_outputUserURL];
  v22();
  v55 = v2;
  v56 = a2;
  sub_23B1C5978();
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_23B1C59E4();
  v24 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v23, sel_fileExistsAtPath_, v24);

  if (v25)
  {
    sub_23B1C5978();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v26(v19, v9, v10);
      v27 = v55;
      ((void (*)(char *, char *, uint64_t))v22)(&v55[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_destinationDirectoryURL], v19, v10);
      sub_23B1C5984();
      v26(&v27[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL], v14, v10);

      v28 = (objc_class *)type metadata accessor for FPFSSQLBackupEngine();
      v58.receiver = v27;
      v58.super_class = v28;
      v29 = objc_msgSendSuper2(&v58, sel_init);
      v30 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v30((uint64_t)v56, v10);
      v30((uint64_t)v54, v10);
      v30((uint64_t)v19, v10);
      v30((uint64_t)v21, v10);
      return v29;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542E6740);
  v31 = (id)fpfs_current_or_default_log();
  v32 = v57;
  sub_23B1C5E58();
  v33 = v53;
  ((void (*)(char *, char *, uint64_t))v22)(v53, v21, v10);
  v34 = sub_23B1C5E40();
  v35 = sub_23B1C6AB8();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v48 = v21;
    v60 = v47;
    *(_DWORD *)v36 = 136446210;
    v46 = v36 + 4;
    v37 = (void *)sub_23B1C5954();
    v38 = objc_msgSend(v37, sel_fp_shortDescription);

    v39 = sub_23B1C63E0();
    v41 = v40;

    v59 = sub_23AABEC68(v39, v41, &v60);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v42 = *(void (**)(char *, uint64_t))(v11 + 8);
    v42(v33, v10);
    _os_log_impl(&dword_23AA66000, v34, v35, "%{public}s does not exist. No need to back up.", v36, 0xCu);
    v43 = v47;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v43, -1, -1);
    MEMORY[0x23B8614BC](v36, -1, -1);

    v42(v56, v10);
    v42(v54, v10);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v57, v52);
    v44 = v48;
  }
  else
  {

    v42 = *(void (**)(char *, uint64_t))(v11 + 8);
    v42(v33, v10);
    v42(v56, v10);
    v42(v54, v10);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v52);
    v44 = v21;
  }
  v42(v44, v10);
  v42(v50, v10);
  v42(v49, v10);

  type metadata accessor for FPFSSQLBackupEngine();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_23B0F2660()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t (**v3)(char *, uint64_t);
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t (**v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  id v34[2];

  v1 = v0;
  v34[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_23B1C5E4C();
  v3 = *(uint64_t (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v7 = (void *)sub_23B1C5954();
  v34[0] = 0;
  v8 = objc_msgSend(v6, sel_removeItemAtURL_error_, v7, v34);

  if (v8)
    return v34[0];
  v31 = (uint64_t (**)(char *, uint64_t))v34[0];
  v10 = v34[0];
  v11 = (void *)sub_23B1C587C();

  swift_willThrow();
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v13 = v1;
  v14 = v11;
  v15 = v13;
  v16 = v11;
  v17 = sub_23B1C5E40();
  v18 = sub_23B1C6AA0();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v30 = (void *)swift_slowAlloc();
    v34[0] = v30;
    *(_DWORD *)v19 = 136315394;
    v31 = v3;
    v20 = (void *)sub_23B1C5954();
    v21 = objc_msgSend(v20, sel_fp_shortDescription);

    v22 = sub_23B1C63E0();
    v29 = v2;
    v24 = v23;

    v33 = sub_23AABEC68(v22, v24, (uint64_t *)v34);
    sub_23B1C6CBC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2112;
    swift_getErrorValue();
    v25 = sub_23B0D9CF0(v32);
    v33 = (uint64_t)v25;
    sub_23B1C6CBC();
    v26 = v28;
    *v28 = v25;

    _os_log_impl(&dword_23AA66000, v17, v18, "Failed to remove directory %s: %@", (uint8_t *)v19, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v26, -1, -1);
    v27 = v30;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v27, -1, -1);
    MEMORY[0x23B8614BC](v19, -1, -1);

    return (id)v31[1](v5, v29);
  }
  else
  {

    return (id)v3[1](v5, v2);
  }
}

id sub_23B0F2A58()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSSQLBackupEngine();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23B0F2B30()
{
  return type metadata accessor for FPFSSQLBackupEngine();
}

uint64_t type metadata accessor for FPFSSQLBackupEngine()
{
  uint64_t result;

  result = qword_2569E8778;
  if (!qword_2569E8778)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B0F2B74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5A08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_23B0F2BE4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_23B1C64D0();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_23B1C65C0();
  }
  __break(1u);
  return result;
}

unint64_t sub_23B0F2C8C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint8_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint8_t *v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  _QWORD *v49;
  os_log_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unint64_t result;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint8_t *v72;
  char *v73;
  id v74;
  uint64_t v75;
  char v76;
  id v77;
  char *v78;
  uint64_t v79;
  char *v80;
  NSObject *v81;
  os_log_type_t v82;
  int v83;
  uint8_t *v84;
  void *v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  uint8_t *v92;
  char *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  id v107;
  char *v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  void *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  os_log_t v122;
  char *v123;
  uint64_t (*v124)(char *, uint64_t);
  _QWORD *v125;
  os_log_t v126;
  char *v127;
  char v128;
  uint64_t v129;
  id v130;
  unsigned int v131;
  id v132;
  char *v133;
  uint64_t v134;
  char *v135;
  NSObject *v136;
  os_log_type_t v137;
  uint8_t *v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  os_log_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  id v156;
  uint64_t v157;
  uint8_t *v158;
  char *v159;
  char *v160;
  os_log_t v161;
  _QWORD *v162;
  uint8_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  id v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  _OWORD v175[2];
  uint64_t v176;

  v157 = a3;
  v156 = a2;
  v158 = a4;
  v162 = (_QWORD *)sub_23B1C5570();
  v161 = (os_log_t)*(v162 - 1);
  MEMORY[0x24BDAC7A8](v162);
  v160 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5A08();
  v167 = *(_QWORD *)(v6 - 8);
  v168 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v163 = (uint8_t *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v155 = (char *)&v151 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v159 = (char *)&v151 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v154 = (char *)&v151 - v13;
  v165 = sub_23B1C5E4C();
  v164 = *(_QWORD *)(v165 - 8);
  v14 = MEMORY[0x24BDAC7A8](v165);
  v169 = (char *)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v151 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v151 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v151 - v22;
  v24 = sub_23B1C5750();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v151 - v29;
  v31 = (void *)v166;
  sub_23B1C5900();
  if (v31)
  {
    v32 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v33 = v167;
    v34 = v168;
    v35 = v163;
    (*(void (**)(uint8_t *, uint64_t, uint64_t))(v167 + 16))(v163, a1, v168);
    v36 = v31;
    v37 = v31;
    v38 = sub_23B1C5E40();
    v39 = sub_23B1C6AA0();
    v40 = v33;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = swift_slowAlloc();
      v162 = (_QWORD *)swift_slowAlloc();
      v166 = swift_slowAlloc();
      *(_QWORD *)&v175[0] = v166;
      *(_DWORD *)v41 = 136315394;
      v160 = (char *)(v41 + 4);
      v42 = (void *)sub_23B1C5954();
      v43 = objc_msgSend(v42, sel_fp_shortDescription);

      v44 = sub_23B1C63E0();
      v161 = v38;
      v45 = v35;
      v47 = v46;

      *(_QWORD *)&v173 = sub_23AABEC68(v44, v47, (uint64_t *)v175);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint8_t *, uint64_t))(v40 + 8))(v45, v34);
      *(_WORD *)(v41 + 12) = 2112;
      swift_getErrorValue();
      v48 = sub_23B0D9CF0(v176);
      *(_QWORD *)&v173 = v48;
      sub_23B1C6CBC();
      v49 = v162;
      *v162 = v48;

      v50 = v161;
      _os_log_impl(&dword_23AA66000, v161, v39, "Failed to fetch resource values for %s: %@", (uint8_t *)v41, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v49, -1, -1);
      v51 = v166;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v51, -1, -1);
      MEMORY[0x23B8614BC](v41, -1, -1);

    }
    else
    {
      (*(void (**)(uint8_t *, uint64_t))(v33 + 8))(v35, v34);

    }
    (*(void (**)(char *, uint64_t))(v164 + 8))(v169, v165);
    return swift_willThrow();
  }
  v152 = v21;
  v151 = v23;
  v166 = a1;
  v163 = 0;
  v52 = v168;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v28, v24);
  v53 = sub_23B1C56F0();
  v153 = v25;
  if (!v54)
  {
    v77 = (id)fpfs_current_or_default_log();
    v78 = v18;
    sub_23B1C5E58();
    v79 = v167;
    v80 = v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v155, v166, v52);
    v81 = sub_23B1C5E40();
    v82 = sub_23B1C6AA0();
    v83 = v82;
    if (os_log_type_enabled(v81, v82))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      v169 = (char *)swift_slowAlloc();
      *(_QWORD *)&v175[0] = v169;
      LODWORD(v159) = v83;
      v163 = v84;
      *(_DWORD *)v84 = 136315138;
      v158 = v84 + 4;
      v85 = (void *)sub_23B1C5954();
      v86 = v24;
      v87 = objc_msgSend(v85, sel_fp_shortDescription);

      v88 = sub_23B1C63E0();
      v166 = (uint64_t)v78;
      v89 = v30;
      v91 = v90;

      v24 = v86;
      *(_QWORD *)&v173 = sub_23AABEC68(v88, v91, (uint64_t *)v175);
      sub_23B1C6CBC();
      v30 = v89;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v168);
      v92 = v163;
      _os_log_impl(&dword_23AA66000, v81, (os_log_type_t)v159, "Failed to get canonical path for %s", v163, 0xCu);
      v93 = v169;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v93, -1, -1);
      MEMORY[0x23B8614BC](v92, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v166, v165);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v52);

      (*(void (**)(char *, uint64_t))(v164 + 8))(v18, v165);
    }
    v125 = v162;
    v126 = v161;
    v127 = v160;
    LODWORD(v175[0]) = 2;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    sub_23B1C5558();
    ((void (*)(char *, _QWORD *))v126[1].isa)(v127, v125);
    swift_willThrow();
    v124 = *(uint64_t (**)(char *, uint64_t))(v153 + 8);
    return v124(v30, v24);
  }
  v55 = v53;
  v56 = v54;
  v169 = v30;
  v57 = sub_23B1C64AC();
  v58 = sub_23B1C64AC();
  v59 = __OFSUB__(v57, v58);
  result = v57 - v58;
  if (v59)
  {
    __break(1u);
    goto LABEL_45;
  }
  v61 = v52;
  v62 = sub_23B0F2BE4(result, v55, v56);
  v64 = v63;
  v66 = v65;
  v68 = v67;
  swift_bridgeObjectRelease();
  v157 = MEMORY[0x23B85ED8C](v62, v64, v66, v68);
  v70 = v69;
  swift_bridgeObjectRelease();
  result = sub_23B1C56CC();
  if (!*MEMORY[0x24BDBD210])
  {
LABEL_45:
    __break(1u);
    return result;
  }
  v71 = result;
  v72 = v158;
  v73 = v159;
  if (*(_QWORD *)(result + 16))
  {
    v74 = (id)*MEMORY[0x24BDBD210];
    v75 = sub_23AA88CF8(v74);
    if ((v76 & 1) != 0)
    {
      sub_23AAA15AC(*(_QWORD *)(v71 + 56) + 32 * v75, (uint64_t)&v173);
    }
    else
    {
      v173 = 0u;
      v174 = 0u;
    }

  }
  else
  {
    v173 = 0u;
    v174 = 0u;
  }
  swift_bridgeObjectRelease();
  v94 = v153;
  if (!*((_QWORD *)&v174 + 1))
  {
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)&v173, qword_2542E5640);
LABEL_24:
    v106 = v166;
    v107 = (id)fpfs_current_or_default_log();
    v108 = v152;
    sub_23B1C5E58();
    v109 = v167;
    (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v73, v106, v61);
    v110 = sub_23B1C5E40();
    v111 = sub_23B1C6AA0();
    if (os_log_type_enabled(v110, v111))
    {
      v112 = (uint8_t *)swift_slowAlloc();
      v166 = swift_slowAlloc();
      *(_QWORD *)&v175[0] = v166;
      *(_DWORD *)v112 = 136315138;
      v163 = v112 + 4;
      v113 = (void *)sub_23B1C5954();
      v114 = objc_msgSend(v113, sel_fp_shortDescription);

      v115 = sub_23B1C63E0();
      v116 = v94;
      v117 = v24;
      v119 = v118;

      *(_QWORD *)&v173 = sub_23AABEC68(v115, v119, (uint64_t *)v175);
      sub_23B1C6CBC();
      v24 = v117;
      v94 = v116;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v159, v168);
      _os_log_impl(&dword_23AA66000, v110, v111, "Failed to get the inode for %s", v112, 0xCu);
      v120 = v166;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v120, -1, -1);
      MEMORY[0x23B8614BC](v112, -1, -1);

      (*(void (**)(char *, uint64_t))(v164 + 8))(v152, v165);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v109 + 8))(v73, v61);

      (*(void (**)(char *, uint64_t))(v164 + 8))(v108, v165);
    }
    v121 = v162;
    v122 = v161;
    v123 = v160;
    v30 = v169;
    LODWORD(v175[0]) = 2;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    sub_23B1C5558();
    ((void (*)(char *, _QWORD *))v122[1].isa)(v123, v121);
    swift_willThrow();
    v124 = *(uint64_t (**)(char *, uint64_t))(v94 + 8);
    return v124(v30, v24);
  }
  sub_23AAA159C(&v173, v175);
  sub_23AAA15AC((uint64_t)v175, (uint64_t)&v173);
  sub_23B0F63A4();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v175);
    v94 = v153;
    goto LABEL_24;
  }
  v95 = (void *)v171;
  v156 = objc_msgSend((id)v171, sel_integerValue);

  v96 = sub_23B1C5708();
  v98 = v97;
  v99 = (char *)sub_23B1C63BC();
  v100 = sub_23B1C56CC();
  v101 = *(_QWORD *)(v100 + 16);
  v159 = v99;
  if (v101)
  {
    v102 = v24;
    v103 = v99;
    v104 = sub_23AA88CF8(v103);
    if ((v105 & 1) != 0)
    {
      sub_23AAA15AC(*(_QWORD *)(v100 + 56) + 32 * v104, (uint64_t)&v171);
    }
    else
    {
      v171 = 0u;
      v172 = 0u;
    }

    v24 = v102;
    v72 = v158;
  }
  else
  {
    v171 = 0u;
    v172 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v172 + 1))
  {
    sub_23AAA159C(&v171, &v173);
    sub_23AAA15AC((uint64_t)&v173, (uint64_t)&v171);
    v128 = swift_dynamicCast();
    v129 = v166;
    if ((v128 & 1) != 0)
    {
      v130 = v170;
      v131 = objc_msgSend(v170, sel_unsignedIntValue);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v173);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v175);
      result = (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v169, v24);
      *(_QWORD *)v72 = v157;
      *((_QWORD *)v72 + 1) = v70;
      *((_QWORD *)v72 + 2) = v156;
      *((_QWORD *)v72 + 3) = v96;
      v72[32] = v98 & 1;
      *((_DWORD *)v72 + 9) = v131;
      return result;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v173);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)&v171, qword_2542E5640);
    v129 = v166;
  }
  v132 = (id)fpfs_current_or_default_log();
  v133 = v151;
  sub_23B1C5E58();
  v134 = v167;
  v135 = v154;
  (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v154, v129, v61);
  v136 = sub_23B1C5E40();
  v137 = sub_23B1C6AA0();
  if (os_log_type_enabled(v136, v137))
  {
    v138 = (uint8_t *)swift_slowAlloc();
    v139 = swift_slowAlloc();
    *(_QWORD *)&v173 = v139;
    *(_DWORD *)v138 = 136315138;
    v166 = (uint64_t)(v138 + 4);
    v140 = (void *)sub_23B1C5954();
    v141 = v24;
    v142 = objc_msgSend(v140, sel_fp_shortDescription);

    v143 = sub_23B1C63E0();
    v145 = v144;

    v24 = v141;
    *(_QWORD *)&v171 = sub_23AABEC68(v143, v145, (uint64_t *)&v173);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v167 + 8))(v154, v168);
    _os_log_impl(&dword_23AA66000, v136, v137, "Failed to get gen count for %s", v138, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v139, -1, -1);
    MEMORY[0x23B8614BC](v138, -1, -1);

    (*(void (**)(char *, uint64_t))(v164 + 8))(v151, v165);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v61);

    (*(void (**)(char *, uint64_t))(v164 + 8))(v133, v165);
  }
  v146 = v162;
  v147 = v161;
  v148 = v160;
  v149 = v153;
  v150 = v159;
  LODWORD(v173) = 2;
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
  sub_23B1C5864();
  sub_23B1C5558();
  ((void (*)(char *, _QWORD *))v147[1].isa)(v148, v146);
  swift_willThrow();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v175);
  return (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v169, v24);
}

void sub_23B0F3CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t inited;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  char *v43;
  id v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint8_t *v52;
  void *v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  void *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105[3];
  uint64_t v106;
  uint8_t v107[8];
  uint8_t v108[8];
  uint64_t v109;

  v104 = a3;
  v96 = a1;
  v92 = sub_23B1C5570();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v90 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v5);
  v98 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_23B1C58A0();
  v86 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v100 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_23B1C5A08();
  v101 = *(_QWORD *)(v102 - 8);
  v8 = MEMORY[0x24BDAC7A8](v102);
  v87 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v88 = (char *)&v83 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v93 = (char *)&v83 - v12;
  v95 = sub_23B1C5E4C();
  v94 = *(_QWORD *)(v95 - 8);
  v13 = MEMORY[0x24BDAC7A8](v95);
  v89 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v83 - v15;
  v17 = sub_23B1C5750();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE860);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  v22 = (void *)*MEMORY[0x24BDBCBD0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCBD0];
  v97 = v22;
  sub_23AA7A178(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  v23 = v103;
  sub_23B1C5900();
  if (v23)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v83 = a2;
  v24 = v101;
  v85 = v18;
  v103 = v17;
  swift_bridgeObjectRelease();
  v25 = sub_23B1C56F0();
  v84 = v20;
  if (v26)
  {
    v27 = v26;
    v28 = (void *)v25;
    v93 = 0;
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_23B1D1B90;
    v30 = v97;
    *(_QWORD *)(v29 + 32) = v97;
    v31 = (void *)*MEMORY[0x24BDBD210];
    v32 = v102;
    if (*MEMORY[0x24BDBD210])
    {
      v33 = v29;
      v34 = v24;
      v35 = (void *)*MEMORY[0x24BDBCBF8];
      *(_QWORD *)(v29 + 40) = v31;
      *(_QWORD *)(v29 + 48) = v35;
      v36 = v30;
      v37 = v35;
      v38 = v31;
      *(_QWORD *)(v33 + 56) = sub_23B1C63BC();
      v39 = swift_bridgeObjectRetain();
      sub_23ABE4D58(v39);
      swift_bridgeObjectRelease();
      v40 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v41 = v96;
      v42 = (void *)sub_23B1C6A7C();

      swift_bridgeObjectRelease();
      if (v42)
      {
        v43 = v93;
        sub_23B0F2C8C(v41, v28, (uint64_t)v27, v107);
        if (v43)
        {
          (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v103);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return;
        }
        v97 = v27;
        sub_23ABDF780((uint64_t)v107);
        sub_23ABE5088((uint64_t)v107);
        sub_23B1C6A58();
        sub_23B1C5894();
        if (v106)
        {
          while (1)
          {
            v77 = (uint64_t)v98;
            v78 = swift_dynamicCast();
            v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
            if ((v78 & 1) != 0)
            {
              v79(v77, 0, 1, v32);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v77, 1, v32) != 1)
              {
                v80 = (uint64_t)v87;
                v81 = (*(uint64_t (**)(void))(v34 + 32))();
                v82 = (void *)MEMORY[0x23B8601A8](v81);
                sub_23B0F2C8C(v80, v28, (uint64_t)v97, v108);
                sub_23ABDF780((uint64_t)v108);
                sub_23ABE5088((uint64_t)v108);
                objc_autoreleasePoolPop(v82);
                v32 = v102;
                (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v80, v102);
                goto LABEL_21;
              }
            }
            else
            {
              v79(v77, 1, 1, v32);
            }
            sub_23AA8A05C(v77, (uint64_t *)&unk_2542E6740);
LABEL_21:
            sub_23B1C5894();
            v76 = v99;
            if (!v106)
              goto LABEL_26;
          }
        }
        v76 = v99;
LABEL_26:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v100, v76);
        (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v103);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v59 = (id)fpfs_current_or_default_log();
        v60 = v89;
        sub_23B1C5E58();
        v61 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v88, v41, v32);
        v62 = sub_23B1C5E40();
        v63 = sub_23B1C6AA0();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          v100 = (char *)swift_slowAlloc();
          v105[0] = (uint64_t)v100;
          *(_DWORD *)v64 = 136315138;
          v99 = (uint64_t)(v64 + 4);
          v65 = (void *)sub_23B1C5954();
          v66 = objc_msgSend(v65, sel_fp_shortDescription);

          v67 = sub_23B1C63E0();
          v69 = v68;

          v109 = sub_23AABEC68(v67, v69, v105);
          sub_23B1C6CBC();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v61, v102);
          _os_log_impl(&dword_23AA66000, v62, v63, "Failed to get enumerator for %s", v64, 0xCu);
          v70 = v100;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v70, -1, -1);
          MEMORY[0x23B8614BC](v64, -1, -1);

          (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v95);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v34 + 8))(v61, v32);
          (*(void (**)(char *, uint64_t))(v94 + 8))(v60, v95);
        }
        (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v103);
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v44 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v45 = v24;
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v47 = v93;
    v48 = v102;
    v46(v93, v83, v102);
    v49 = sub_23B1C5E40();
    v50 = sub_23B1C6AA0();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v100 = v16;
      v52 = (uint8_t *)v51;
      v99 = swift_slowAlloc();
      v105[0] = v99;
      *(_DWORD *)v52 = 136315138;
      v98 = (char *)(v52 + 4);
      v53 = (void *)sub_23B1C5954();
      v54 = objc_msgSend(v53, sel_fp_shortDescription);

      v55 = sub_23B1C63E0();
      v57 = v56;

      v109 = sub_23AABEC68(v55, v57, v105);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v93, v48);
      _os_log_impl(&dword_23AA66000, v49, v50, "Could not get canonical path for %s", v52, 0xCu);
      v58 = v99;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v58, -1, -1);
      MEMORY[0x23B8614BC](v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v100, v95);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v48);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v16, v95);
    }
    v71 = v103;
    v72 = v85;
    v73 = v92;
    v74 = v91;
    v75 = v90;
    LODWORD(v105[0]) = 2;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v73);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v84, v71);
    swift_release();
  }
}

uint64_t sub_23B0F48F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C5A08();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v33 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v38 = *(_QWORD *)(v8 + 72);
  v14 = v13 + v38;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23B1CA760;
  v35 = a2;
  swift_retain();
  sub_23B1C5978();
  v16 = FPIsCloudDocsWithFPFSEnabled();
  v34 = a1;
  if (v16)
  {
    sub_23B1C5978();
    v15 = sub_23AF98BB8(1, 2, 1, v15);
    *(_QWORD *)(v15 + 16) = 2;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v12, v7);
  }
  v17 = *(_QWORD *)(v15 + 16);
  if (v17)
  {
    v18 = v15 + v13;
    v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v32 = v15;
    swift_bridgeObjectRetain();
    v19 = v33;
    v36 = v6;
    v37 = v8;
    while (1)
    {
      v39(v6, v18, v7);
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v20(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        break;
      v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v19, v6, v7);
      v22 = (void *)MEMORY[0x23B8601A8](v21);
      v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      sub_23B1C59E4();
      v24 = (uint64_t)v19;
      v25 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend(v23, sel_fileExistsAtPath_, v25);

      if (v26)
      {
        v27 = v35;
        swift_retain();
        v28 = v27;
        v29 = v40;
        sub_23B0F3CC0(v24, v34, v28);
        v19 = (char *)v24;
        if (v29)
        {
          objc_autoreleasePoolPop(v22);
          (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v24, v7);
          swift_release();
          return swift_bridgeObjectRelease_n();
        }
        v40 = 0;
      }
      else
      {
        v19 = (char *)v24;
      }
      objc_autoreleasePoolPop(v22);
      v8 = v37;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v7);
      v18 += v38;
      --v17;
      v6 = v36;
      if (!v17)
      {
        v20(v36, 1, 1, v7);
        break;
      }
    }
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
    v30(v6, 1, 1, v7);
  }
  swift_bridgeObjectRelease_n();
  return swift_release();
}

uint64_t sub_23B0F4CB8(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  void (*v51)(char *, uint64_t);
  void *v52;
  id v53;
  uint64_t v54;
  void *v55;
  unsigned int v56;
  id v57;
  void *v58;
  unsigned int v59;
  id v60;
  id v61;
  void *v62;
  unsigned int v63;
  id v64;
  void *v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  id v76;
  char *v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  id v87;
  char *v88;
  char *v89;
  id v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  id v96;
  id v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  _QWORD *v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint8_t *v105;
  uint64_t v106;
  int v107;
  id v108;
  void *v109;
  void *v110;
  void *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  id v118;
  void *v119;
  void *v120;
  id v121;
  char *v122;
  id v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  void *v127;
  id v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  os_log_type_t v132;
  uint8_t *v133;
  char *v134;
  char *v135;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint8_t *v153;
  char *v154;
  char *v155;
  void (*v156)(char *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164[2];

  v158 = a2;
  v164[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v150 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v151 = (char *)&v140 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v153 = (uint8_t *)&v140 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v154 = (char *)&v140 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v148 = (char *)&v140 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v149 = (char *)&v140 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v145 = (char *)&v140 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v146 = (char *)&v140 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v142 = (char *)&v140 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v143 = (char *)&v140 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v140 = (uint64_t)&v140 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v140 - v26;
  v159 = sub_23B1C5A08();
  v160 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  v29 = (char *)&v140 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23B1C5E4C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v144 = (char *)&v140 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v141 = (char *)&v140 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v155 = (char *)&v140 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v147 = (char *)&v140 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v152 = (char *)&v140 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v140 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v140 - v45;
  v47 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v48 = sub_23B1C5E40();
  v49 = sub_23B1C6AB8();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v50 = 0;
    _os_log_impl(&dword_23AA66000, v48, v49, "Starting backup...", v50, 2u);
    MEMORY[0x23B8614BC](v50, -1, -1);
  }

  v51 = *(void (**)(char *, uint64_t))(v31 + 8);
  v157 = v30;
  v156 = v51;
  v51(v46, v30);
  v52 = (void *)objc_opt_self();
  v53 = objc_msgSend(v52, sel_defaultManager);
  v54 = (uint64_t)&a1[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_destinationDirectoryURL];
  sub_23B1C59E4();
  v55 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v56 = objc_msgSend(v53, sel_fileExistsAtPath_, v55);

  if (v56)
  {
    v57 = objc_msgSend(v52, sel_defaultManager);
    v58 = (void *)sub_23B1C5954();
    v164[0] = 0;
    v59 = objc_msgSend(v57, sel_removeItemAtURL_error_, v58, v164);

    if (!v59)
    {
      v90 = v164[0];
      v91 = (void *)sub_23B1C587C();

      swift_willThrow();
      v92 = sub_23B1C59E4();
      v94 = v93;
      v95 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v96 = v91;
      v97 = v91;
      swift_bridgeObjectRetain();
      v98 = sub_23B1C5E40();
      v99 = sub_23B1C6AA0();
      if (os_log_type_enabled(v98, v99))
      {
        v100 = swift_slowAlloc();
        v101 = (_QWORD *)swift_slowAlloc();
        v102 = (void *)swift_slowAlloc();
        v164[0] = v102;
        *(_DWORD *)v100 = 136315394;
        swift_bridgeObjectRetain();
        v163 = sub_23AABEC68(v92, v94, (uint64_t *)v164);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v100 + 12) = 2112;
        swift_getErrorValue();
        v103 = sub_23B0D9CF0(v161);
        v163 = (uint64_t)v103;
        sub_23B1C6CBC();
        *v101 = v103;

        _os_log_impl(&dword_23AA66000, v98, v99, "Unable to delete existing destination directory at %s: %@", (uint8_t *)v100, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v101, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v102, -1, -1);
        MEMORY[0x23B8614BC](v100, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      v156(v44, v157);
      v114 = v159;
      v115 = (uint64_t)v150;
      v116 = v160;
      v27 = v151;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v151, 1, 1, v159);
      sub_23AB6C0EC((uint64_t)v27, v115);
      v117 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v115, 1, v114);
      v118 = v91;
      if (v117 == 1)
      {
        v119 = 0;
      }
      else
      {
        v119 = (void *)sub_23B1C5954();
        (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v115, v114);
      }
      v120 = (void *)sub_23B1C5870();
      (*(void (**)(uint64_t, void *, void *))(v158 + 16))(v158, v119, v120);

      v111 = v91;
      goto LABEL_24;
    }
    v60 = v164[0];
  }
  v61 = objc_msgSend(v52, sel_defaultManager);
  v62 = (void *)sub_23B1C5954();
  v164[0] = 0;
  v63 = objc_msgSend(v61, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v62, 0, 0, v164);

  v64 = v164[0];
  if (!v63)
  {
    v69 = v164[0];
    v70 = (void *)sub_23B1C587C();

    swift_willThrow();
    v71 = (id)fpfs_current_or_default_log();
    v72 = v152;
    sub_23B1C5E58();
    v73 = a1;
    v74 = v72;
    v75 = v73;
    v76 = v70;
    v77 = v75;
    v78 = v70;
    v79 = sub_23B1C5E40();
    v80 = sub_23B1C6AA0();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc();
      v151 = (char *)swift_slowAlloc();
      v155 = (char *)swift_slowAlloc();
      v164[0] = v155;
      *(_DWORD *)v81 = 136315394;
      v82 = (void *)sub_23B1C5954();
      v83 = objc_msgSend(v82, sel_fp_shortDescription);

      v84 = sub_23B1C63E0();
      v86 = v85;

      v163 = sub_23AABEC68(v84, v86, (uint64_t *)v164);
      sub_23B1C6CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v81 + 12) = 2112;
      swift_getErrorValue();
      v87 = sub_23B0D9CF0(v162);
      v163 = (uint64_t)v87;
      sub_23B1C6CBC();
      v88 = v151;
      *(_QWORD *)v151 = v87;

      _os_log_impl(&dword_23AA66000, v79, v80, "Unable to create destination directory %s: %@", (uint8_t *)v81, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v88, -1, -1);
      v89 = v155;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v89, -1, -1);
      MEMORY[0x23B8614BC](v81, -1, -1);
    }
    else
    {

    }
    v156(v74, v157);
    v104 = v160;
    v27 = v154;
    v105 = v153;
    v106 = v159;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v154, 1, 1, v159);
    sub_23AB6C0EC((uint64_t)v27, (uint64_t)v105);
    v107 = (*(uint64_t (**)(uint8_t *, uint64_t, uint64_t))(v104 + 48))(v105, 1, v106);
    v108 = v70;
    if (v107 == 1)
    {
      v109 = 0;
    }
    else
    {
      v109 = (void *)sub_23B1C5954();
      (*(void (**)(uint8_t *, uint64_t))(v104 + 8))(v105, v106);
    }
    v110 = (void *)sub_23B1C5870();
    (*(void (**)(uint64_t, void *, void *))(v158 + 16))(v158, v109, v110);

    v111 = v70;
LABEL_24:

    return sub_23AA8A05C((uint64_t)v27, (uint64_t *)&unk_2542E6740);
  }
  v65 = a1;
  v66 = *(void (**)(char *, char *, uint64_t))(v160 + 16);
  v67 = v159;
  v66(v29, &a1[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL], v159);
  type metadata accessor for SQLBackupManifest();
  swift_allocObject();
  v68 = v64;
  v112 = (char *)sub_23ABDDE6C((uint64_t)v29);
  v113 = (uint64_t)v65 + OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_userURL;
  swift_retain();
  sub_23B0F48F0(v113, (uint64_t)v112);
  swift_release();
  sub_23ABE0164();
  sub_23B0F1810(v54);
  v121 = (id)fpfs_current_or_default_log();
  v122 = v141;
  sub_23B1C5E58();
  v123 = v65;
  v124 = sub_23B1C5E40();
  v125 = sub_23B1C6AB8();
  if (os_log_type_enabled(v124, v125))
  {
    v126 = (uint8_t *)swift_slowAlloc();
    v155 = (char *)swift_slowAlloc();
    v164[0] = v155;
    v153 = v126;
    *(_DWORD *)v126 = 136315138;
    v152 = (char *)(v126 + 4);
    v127 = (void *)sub_23B1C5954();
    v128 = objc_msgSend(v127, sel_fp_shortDescription);

    v129 = sub_23B1C63E0();
    v154 = v112;
    v131 = v130;

    v67 = v159;
    v163 = sub_23AABEC68(v129, v131, (uint64_t *)v164);
    sub_23B1C6CBC();

    swift_bridgeObjectRelease();
    v132 = v125;
    v133 = v153;
    _os_log_impl(&dword_23AA66000, v124, v132, "Calling completion handler with %s", v153, 0xCu);
    v134 = v155;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v134, -1, -1);
    MEMORY[0x23B8614BC](v133, -1, -1);

    v135 = v141;
  }
  else
  {

    v135 = v122;
  }
  v156(v135, v157);
  v137 = v160;
  v66(v27, (char *)v54, v67);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v27, 0, 1, v67);
  v138 = v140;
  sub_23AB6C0EC((uint64_t)v27, v140);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v138, 1, v67) == 1)
  {
    v139 = 0;
  }
  else
  {
    v139 = (void *)sub_23B1C5954();
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v138, v67);
  }
  (*(void (**)(uint64_t, void *, _QWORD))(v158 + 16))(v158, v139, 0);
  swift_release();

  return sub_23AA8A05C((uint64_t)v27, (uint64_t *)&unk_2542E6740);
}

unint64_t sub_23B0F63A4()
{
  unint64_t result;

  result = qword_2542E7568;
  if (!qword_2542E7568)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542E7568);
  }
  return result;
}

uint64_t sub_23B0F63E0(char *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v16;
  unsigned __int8 v17;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x23B85EBD0](&v16, a2, *v3, v6, MEMORY[0x24BEE1768], *(_QWORD *)(v10 + 24));
  v11 = v17;
  if ((v17 & 1) != 0)
  {
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v12(v9, a2, v6);
    v16 = MEMORY[0x23B85F0B0](v3[1], v6);
    v17 = 0;
    sub_23B1C629C();
    sub_23B1C62C0();
    sub_23AFD4CB4(v6, v6);
    swift_allocObject();
    v13 = sub_23B1C6728();
    v12(v14, a2, v6);
    sub_23AD7D55C(v13);
    sub_23B1C677C();
    swift_bridgeObjectRelease();
    v12(a1, a2, v6);
  }
  else
  {
    sub_23B1C6818();
  }
  return v11;
}

uint64_t sub_23B0F6578@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;

  v4 = v3;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v27 - v16;
  MEMORY[0x23B85EBD0](&v31, v15, *v4, v7, MEMORY[0x24BEE1768], *(_QWORD *)(v18 + 24));
  if ((v32 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3, 1, 1, v7);
  v29 = a3;
  v30 = a1;
  v20 = v31;
  v28 = v17;
  sub_23B1C6818();
  sub_23B1C67DC();
  sub_23B1C67B8();
  v21 = v8;
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v14, v7);
  sub_23B1C629C();
  v30 = v4;
  sub_23B1C6224();
  result = MEMORY[0x23B85F0B0](v4[1], v7);
  if (result < v20)
  {
    __break(1u);
  }
  else
  {
    v23 = result;
    v24 = v22;
    v25 = v21;
    if (v20 == result)
    {
LABEL_8:
      v26 = v29;
      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v29, v28, v7);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v7);
    }
    if (v20 < result)
    {
      v25 = v21;
      do
      {
        sub_23B1C6818();
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v11, v14, v7);
        v31 = v20;
        v32 = 0;
        sub_23B1C62C0();
        v24(v14, v7);
        ++v20;
      }
      while (v23 != v20);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23B0F67B8()
{
  return sub_23B1C67E8();
}

uint64_t sub_23B0F67C8()
{
  return sub_23B1C67F4();
}

uint64_t sub_23B0F67E0()
{
  uint64_t v0;

  v0 = sub_23B1C61C4();
  sub_23B1C61D0();
  return v0;
}

uint64_t sub_23B0F6820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OrderedSet(0, v8, v9, v9);
  sub_23B0F63E0(v7, a1, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a3);
}

void sub_23B0F68BC()
{
  JUMPOUT(0x23B85F0E0);
}

uint64_t sub_23B0F68C8()
{
  return sub_23B1C6818();
}

uint64_t sub_23B0F68D4()
{
  sub_23B1C74A8();
  sub_23B1C67E8();
  return sub_23B1C74E4();
}

_QWORD *sub_23B0F6930@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFSUB__(*result, 1))
    __break(1u);
  else
    *a2 = *result - 1;
  return result;
}

_QWORD *sub_23B0F6948(_QWORD *result)
{
  if (__OFSUB__(*result, 1))
    __break(1u);
  else
    --*result;
  return result;
}

uint64_t sub_23B0F696C()
{
  return sub_23B0F68D4();
}

uint64_t sub_23B0F6978()
{
  return sub_23B0F67B8();
}

uint64_t sub_23B0F6984()
{
  sub_23B1C74A8();
  sub_23B0F67B8();
  return sub_23B1C74E4();
}

uint64_t sub_23B0F69C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = sub_23B0F6F24();
  v4 = v3;
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

void sub_23B0F6A10()
{
  sub_23B0F68BC();
}

uint64_t sub_23B0F6A2C(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void (*sub_23B0F6A3C(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v3;
  _QWORD *v7;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_23B0F6A9C(v7, *a2, *v3, v3[1], *(_QWORD *)(a3 + 16));
  return sub_23ACDBAE4;
}

void (*sub_23B0F6A9C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(_QWORD *a1)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a5 - 8);
  *a1 = a5;
  a1[1] = v5;
  a1[2] = malloc(*(_QWORD *)(v5 + 64));
  sub_23B1C6818();
  return sub_23B0F6B0C;
}

void sub_23B0F6B0C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

void sub_23B0F6B4C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_23B0F6B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B8613CC](&unk_23B1E6C18, a3);
  return sub_23B1C6314();
}

uint64_t sub_23B0F6BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x23B8613CC](&unk_23B1E6C18, a4);
  return sub_23B1C6308();
}

uint64_t sub_23B0F6C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B8613CC](&unk_23B1E6C18, a3);
  return sub_23B1C6320();
}

uint64_t sub_23B0F6C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0F70F4(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE1B68], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07E0]);
}

uint64_t sub_23B0F6C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0F70F4(a1, a2, a3, a4, MEMORY[0x24BEE08B8], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07F0]);
}

_QWORD *sub_23B0F6CB4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

_QWORD *sub_23B0F6CCC(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

uint64_t sub_23B0F6CE4()
{
  return sub_23B0F67C8();
}

__n128 sub_23B0F6CFC@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_23B0F6D0C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1E6A90, a1);
  return sub_23B1C698C();
}

uint64_t sub_23B0F6D40(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x23B8613CC](&unk_23B1E6A90, a1);
  v1 = sub_23B0F6D98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23B0F6D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_23B1C6A10();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  v11 = sub_23B1C6350();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v8, a2, v4);
  if ((v11 & 1) == 0)
  {
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
    goto LABEL_5;
  }
  v13 = sub_23B1C6350();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_23B0F6F24()
{
  uint64_t v0;
  uint64_t v2;

  v2 = sub_23B1C61C4();
  sub_23B1C61D0();
  v0 = sub_23B1C67DC();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v0);
  sub_23B1C6620();
  return v2;
}

uint64_t sub_23B0F6FCC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B0F6820(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for OrderedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OrderedSet);
}

void sub_23B0F6FF4()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0F7004()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0F7014()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0F7024()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0F7034()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0F7044()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23B0F7054()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23B0F7064(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x23B8613CC](&unk_23B1E6C18);
  return MEMORY[0x23B8613CC](MEMORY[0x24BEE0658], a1, &v3);
}

uint64_t sub_23B0F70AC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x23B8613CC](&unk_23B1E6C18);
  return MEMORY[0x23B8613CC](MEMORY[0x24BEE4218], a1, &v3);
}

uint64_t sub_23B0F70F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t, uint64_t);

  v23 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v22 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v22 - v17;
  v19 = sub_23B1C6350();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

void sub_23B0F72A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23B0F72BC(a1, a2, a3, a4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
}

void sub_23B0F72B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23B0F72BC(a1, a2, a3, a4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

void sub_23B0F72BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _OWORD *))
{
  sub_23B126EF4(a1, a2, a3, a4, a5);
}

uint64_t sub_23B0F72D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23B0F7320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  __int128 v9;

  v8 = swift_allocObject();
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 152) = v9;
  *(_OWORD *)(v8 + 168) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(a1 + 48);
  return sub_23AF1A8A8(a2, a3, a4);
}

void sub_23B0F7398(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[14];
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v18 = a8;
  v17 = a7;
  v20 = a5;
  v16 = a4;
  v25 = a3;
  v23 = a2;
  v19 = a1;
  v24 = a6;
  v8 = *(_QWORD *)(*(_QWORD *)a6 + 96);
  v9 = *(_QWORD *)(*(_QWORD *)a6 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15[3] = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_23B1C5E4C();
  v21 = *(_QWORD *)(v12 - 8);
  v22 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15[4] = (char *)v15 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v27 = v9;
  v28 = v9;
  v15[8] = v9;
  v29 = v8;
  v30 = v8;
  v15[9] = v8;
  type metadata accessor for ItemChange();
}

uint64_t sub_23B0F74E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  __int128 v14;
  uint64_t v15;
  int v16;
  int v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _BYTE v47[96];

  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v47[-v9];
  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = &v47[-v12];
  *(_QWORD *)(v4 - 72) = 0;
  swift_beginAccess();
  if (*(uint64_t *)(v4 - 72) > 1)
  {
    v34 = *(_QWORD *)(v4 - 216);
    v35 = (id)fpfs_current_or_default_log();
    v36 = *(_QWORD *)(v4 - 352);
    sub_23B1C5E58();
    v37 = *(_QWORD *)(v4 - 360);
    v38 = *(_QWORD *)(v4 - 152);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v37, v34, v38);
    v39 = v2;
    v40 = sub_23B1C5E40();
    v41 = sub_23B1C6AA0();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = v37;
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      *(_QWORD *)(v4 - 128) = v44;
      *(_DWORD *)v43 = 136315138;
      *(_QWORD *)(v4 - 144) = v43 + 4;
      swift_getAssociatedConformanceWitness();
      v45 = sub_23B1C7304();
      *(_QWORD *)(v4 - 136) = sub_23AABEC68(v45, v46, (uint64_t *)(v4 - 128));
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v38);
      _os_log_impl(&dword_23AA66000, v40, v41, "Transform could not converge for item %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v44, -1, -1);
      MEMORY[0x23B8614BC](v43, -1, -1);

      return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 232) + 8))(*(_QWORD *)(v4 - 352), *(_QWORD *)(v4 - 224));
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);

      return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 232) + 8))(v36, *(_QWORD *)(v4 - 224));
    }
  }
  else
  {
    *(_QWORD *)(v4 - 192) = v13;
    *(_QWORD *)(v4 - 144) = v11;
    *(_QWORD *)(v4 - 368) = v6;
    *(_QWORD *)(v4 - 200) = a1;
    *(_QWORD *)(v4 - 280) = v1;
    *(_QWORD *)(v4 - 296) = v3;
    *(_QWORD *)(v4 - 288) = *(_QWORD *)(v4 + 24);
    *(_QWORD *)(v4 - 184) = *(_QWORD *)(v4 + 16);
    *(_DWORD *)(v4 - 268) &= 1u;
    *(_QWORD *)&v14 = 136315394;
    *(_OWORD *)(v4 - 336) = v14;
    *(_QWORD *)(v4 - 344) = MEMORY[0x24BEE4AD8] + 8;
    v15 = *(_QWORD *)(v4 - 216);
    v16 = *(_DWORD *)(v4 - 236);
    v17 = *(_DWORD *)(v4 - 164);
    v18 = *(void (**)(char *, char *, uint64_t))(v4 - 248);
    *(_QWORD *)(v4 - 208) = v2;
    *(_QWORD *)(v4 - 376) = v7;
    *(_QWORD *)(v4 - 304) = v10;
    v19 = *(_QWORD *)(v4 - 160);
    result = sub_23B10C4AC(v18, v15, v17, *(_DWORD *)(v4 - 268), *(_QWORD *)(v4 - 184), *(_QWORD **)(v4 - 176), v10);
    if (!v19)
    {
      v21 = *(_QWORD *)(v4 - 144);
      v22 = *(_QWORD *)(v4 - 200);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v22) != 1)
      {
        v23 = *(_QWORD *)(v4 - 192);
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v21 + 32))(v23, v10, v22);
        v24 = *(_QWORD **)(v4 - 176);
        if ((v16 & 1) == 0)
        {
          v25 = v24[4];
          v26 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v25 + 16) + 304);
          v27 = swift_retain();
          v28 = v26(v27);
          v29 = swift_release();
          if ((v28 & 1) != 0 && ((*(uint64_t (**)(uint64_t))(*v24 + 152))(v29) & 0x40) != 0)
          {
            v31 = *(void (**)(void))(*(_QWORD *)(v25 + 16) + 16);
            if (v31)
            {
              type metadata accessor for FileTreeWriter.FileTreeChange(255, *(_QWORD *)(v4 - 320), *(_QWORD *)(v4 - 312), v30);
              sub_23B1C7310();
              swift_allocObject();
              swift_retain();
              v32 = sub_23B1C6728();
              (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v4 - 208) + 16))(v33, *(_QWORD *)(v4 - 216), *(_QWORD *)(v4 - 152));
              swift_storeEnumTagMultiPayload();
              sub_23AD7D55C(v32);
              v31();
              sub_23AAB7948((uint64_t)v31);
              swift_bridgeObjectRelease();
            }
          }
        }
        sub_23B0FF724(v23);
      }
      return (*(uint64_t (**)(_QWORD *, _QWORD))(*(_QWORD *)(v4 - 376) + 8))(v10, *(_QWORD *)(v4 - 368));
    }
  }
  return result;
}

void sub_23B0F7C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v23 = a2;
  v15 = a6;
  v21 = a5;
  v22 = a3;
  v24 = a1;
  v25 = a4;
  v6 = *a4;
  v7 = *(_QWORD *)(*a4 + 104);
  v8 = *(_QWORD *)(*a4 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = sub_23B1C6C98();
  v16 = *(_QWORD *)(v18 - 8);
  v10 = MEMORY[0x24BDAC7A8](v18);
  v17 = (char *)v14 - v11;
  v20 = AssociatedTypeWitness;
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14[4] = (char *)v14 - v12;
  v13 = *(_QWORD *)(v6 + 96);
  v26 = *(_QWORD *)(v6 + 80);
  v27 = v8;
  v28 = v13;
  v29 = v7;
  type metadata accessor for ItemReconciliation();
}

void sub_23B0F7D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = sub_23B1C6C98();
  v9[6] = *(_QWORD *)(v15 - 8);
  v9[7] = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v9[33] = (char *)&a9 - v17;
  v9[24] = a1;
  v9[22] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v9[16] = (char *)&a9 - v18;
  v9[132] = v12;
  v9[25] = v11;
  v9[26] = v10;
  v9[133] = v11;
  v9[134] = v13;
  v9[135] = v10;
  type metadata accessor for ReconciliationMutation();
}

uint64_t sub_23B0F7DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  void (*v20)(_BYTE *, _QWORD, uint64_t);
  uint64_t v21;
  unsigned int (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unsigned __int8 v54;
  char v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  int v64;
  _QWORD *v65;
  _BYTE v66[96];

  *(_QWORD *)(v1 + 96) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v1 + 104) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v1 + 136) = &v66[-v4];
  v5 = sub_23B1C5BDC();
  *(_QWORD *)(v1 + 160) = v5;
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v1 + 152) = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v1 + 272) = AssociatedTypeWitness;
  *(_QWORD *)(v1 + 256) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v1 + 184) = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v1 + 216) = &v66[-v10];
  *(_QWORD *)(v1 + 240) = v3;
  *(_QWORD *)(v1 + 248) = v2;
  v12 = type metadata accessor for SnapshotItem(255, v2, v3, v11);
  v13 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v66[-v18];
  v20 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 16);
  v20(&v66[-v18], *(_QWORD *)(v1 + 296), v13);
  v21 = *(_QWORD *)(v12 - 8);
  v22 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48);
  if (v22(v19, 1, v12) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
    *(_QWORD *)(v1 + 224) = 0;
  }
  else
  {
    sub_23AA724E8((uint64_t)&v19[*(int *)(v12 + 52)], v1 + 808, &qword_2542E5050);
    sub_23AAB7E4C((_QWORD *)(v1 + 808), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v19, v12);
    sub_23AA724E8(v1 + 808, v1 + 1056, &qword_2542E5050);
    if (sub_23AAFCF2C(v1 + 1056) == 1)
    {
      *(_QWORD *)(v1 + 224) = 0;
    }
    else
    {
      sub_23AAB7E4C((_QWORD *)(v1 + 808), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      *(_QWORD *)(v1 + 224) = *(_QWORD *)(v1 + 1264);
    }
  }
  v20(v17, *(_QWORD *)(v1 + 296), v13);
  if (v22(v17, 1, v12) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
    v23 = *(_QWORD *)(v1 + 288);
    v24 = *(_QWORD *)(v1 + 304);
  }
  else
  {
    sub_23AA724E8((uint64_t)&v17[*(int *)(v12 + 52)], v1 + 808, &qword_2542E5050);
    sub_23AAB7E4C((_QWORD *)(v1 + 808), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v17, v12);
    sub_23AA724E8(v1 + 808, v1 + 1056, &qword_2542E5050);
    v25 = sub_23AAFCF2C(v1 + 1056);
    v23 = *(_QWORD *)(v1 + 288);
    v24 = *(_QWORD *)(v1 + 304);
    if (v25 != 1)
    {
      sub_23AAB7E4C((_QWORD *)(v1 + 808), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      v29 = *(_QWORD *)(v1 + 1272);
      v26 = *(_QWORD *)(v1 + 280);
      goto LABEL_12;
    }
  }
  v26 = *(_QWORD *)(v1 + 280);
  v27 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v24 + 32) + 328))(v26);
  if (v23)
    return v28 & 1;
  v29 = v27;
LABEL_12:
  v30 = v26 + *(int *)(v12 + 52);
  sub_23AA724E8(v30, v1 + 808, &qword_2542E5050);
  sub_23AA724E8(v1 + 808, v1 + 1056, &qword_2542E5050);
  if (sub_23AAFCF2C(v1 + 1056) == 1)
    v31 = 0;
  else
    v31 = *(_QWORD *)(v30 + 208);
  v32 = **(_BYTE **)(v1 + 232);
  *(_QWORD *)(v1 + 16) = v31;
  *(_QWORD *)(v1 + 24) = v29;
  *(_QWORD *)(v1 + 112) = v12;
  if ((v32 & 2) == 0)
  {
    v33 = v29;
    goto LABEL_20;
  }
  *(_QWORD *)(v1 + 288) = v23;
  v34 = v26 + *(int *)(v12 + 36);
  v35 = *(_QWORD *)(v1 + 256);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v37 = *(_QWORD *)(v1 + 216);
  v38 = v26;
  v39 = *(_QWORD *)(v1 + 272);
  v36(v37, v34, v39);
  v40 = *(_QWORD *)(v1 + 184);
  v36(v40, v38, v39);
  swift_getAssociatedConformanceWitness();
  LOBYTE(v36) = sub_23B1C63A4();
  v41 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v41(v40, v39);
  v41(v37, v39);
  if ((v36 & 1) != 0)
  {
    v29 = *(_QWORD *)(v1 + 24);
    v33 = v29;
    v12 = *(_QWORD *)(v1 + 112);
    v23 = *(_QWORD *)(v1 + 288);
    goto LABEL_19;
  }
  v45 = *(_QWORD *)(v1 + 288);
  v46 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v1 + 304) + 32) + 336))(v34);
  v23 = v45;
  v29 = *(_QWORD *)(v1 + 24);
  if (!v45)
  {
    if (v46 != v29)
    {
      v63 = v46;
      sub_23AA724E8(v30, v1 + 312, &qword_2542E5050);
      sub_23AA724E8(v1 + 312, v1 + 560, &qword_2542E5050);
      v64 = sub_23AAFCF2C(v1 + 560);
      v12 = *(_QWORD *)(v1 + 112);
      v31 = *(_QWORD *)(v1 + 16);
      if (v64 != 1)
        *(_QWORD *)(v30 + 216) = v63;
      v65 = *(_QWORD **)(v1 + 232);
      if ((*v65 & 0x400000000000000) == 0)
        *v65 |= 0x400000000000000uLL;
      v33 = v63;
LABEL_20:
      v42 = MEMORY[0x23B8613CC](&unk_23B1DD478, v12);
      *(_QWORD *)(v1 + 296) = v42;
      if (sub_23AF219A4(v12, v42) != 1)
        goto LABEL_43;
      v43 = v29;
      v44 = *(_QWORD *)(v1 + 224);
      if (v44)
      {
        if (v44 == 500)
        {
          if (v29 > 2)
          {
            if (v29 == 3)
            {
              v43 = 1002;
              goto LABEL_33;
            }
            if (v29 == 502)
            {
              v43 = 1003;
              goto LABEL_33;
            }
          }
          else
          {
            if (v29 == 1)
            {
              v43 = 1000;
              goto LABEL_33;
            }
            if (v29 == 2)
            {
              v43 = 1001;
              goto LABEL_33;
            }
          }
          v43 = 500;
        }
        else if (v44 == 501)
        {
          v43 = v29;
        }
        else
        {
          v43 = *(_QWORD *)(v1 + 224);
        }
      }
LABEL_33:
      v47 = v33;
      switch(v31)
      {
        case 0:
          break;
        case 500:
          if (v33 > 2)
          {
            if (v33 == 3)
            {
              v47 = 1002;
              break;
            }
            if (v33 == 502)
            {
              v47 = 1003;
              break;
            }
          }
          else
          {
            if (v33 == 1)
            {
              v47 = 1000;
              break;
            }
            if (v33 == 2)
            {
              v47 = 1001;
              break;
            }
          }
          v47 = 500;
          break;
        case 501:
          v47 = v33;
          break;
        default:
          v47 = v31;
          break;
      }
      if (v43 != v47)
      {
        *(_QWORD *)(v1 + 232) = v33;
        if ((unint64_t)(v47 - 501) < 2 || v47 == 1003)
        {
          v48 = *(_QWORD *)(v1 + 240);
          *(_QWORD *)(v1 + 560) = *(_QWORD *)(v1 + 248);
          v49 = *(_QWORD *)(v1 + 208);
          *(_QWORD *)(v1 + 568) = *(_QWORD *)(v1 + 200);
          *(_QWORD *)(v1 + 576) = v48;
          *(_QWORD *)(v1 + 584) = v49;
          type metadata accessor for JobResult();
        }
        v50 = *(_QWORD *)(v1 + 240);
        *(_QWORD *)(v1 + 560) = *(_QWORD *)(v1 + 248);
        v51 = *(_QWORD *)(v1 + 208);
        *(_QWORD *)(v1 + 568) = *(_QWORD *)(v1 + 200);
        *(_QWORD *)(v1 + 576) = v50;
        *(_QWORD *)(v1 + 584) = v51;
        type metadata accessor for JobResult();
      }
LABEL_43:
      *(_DWORD *)(v1 + 12) = 0;
      *(_DWORD *)(v1 + 44) = (*(uint64_t (**)(void))(**(_QWORD **)(v1 + 304) + 512))();
      v52 = sub_23AF219A4(v12, *(_QWORD *)(v1 + 296));
      if ((v52 - 1) >= 2u)
      {
        *(_QWORD *)(v1 + 232) = v33;
        v53 = *(_QWORD *)(v1 + 296);
        v54 = sub_23AF219A4(v12, v53) == 1;
        v55 = *(_DWORD *)(v1 + 44) & 1;
        v56 = sub_23AEFF068(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 24), v55, v54);
        v57 = v53;
        v58 = *(_QWORD *)(v1 + 232);
        v59 = sub_23AF219A4(*(_QWORD *)(v1 + 112), v57) == 1;
        if (v56 != sub_23AEFF068(v31, v58, v55, v59))
        {
          *(_QWORD *)(v1 + 288) = v23;
          v60 = *(_QWORD *)(v1 + 240);
          *(_QWORD *)(v1 + 560) = *(_QWORD *)(v1 + 248);
          v61 = *(_QWORD *)(v1 + 208);
          *(_QWORD *)(v1 + 568) = *(_QWORD *)(v1 + 200);
          *(_QWORD *)(v1 + 576) = v60;
          *(_QWORD *)(v1 + 584) = v61;
          type metadata accessor for JobResult();
        }
      }
      sub_23AB00114();
    }
    v33 = *(_QWORD *)(v1 + 24);
    v12 = *(_QWORD *)(v1 + 112);
LABEL_19:
    v31 = *(_QWORD *)(v1 + 16);
    goto LABEL_20;
  }
  return v28 & 1;
}

void sub_23B0F8DD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[38] = a1;
  v1[70] = v5;
  v1[71] = v3;
  v1[72] = v4;
  v1[73] = v2;
  type metadata accessor for Materialization.BackgroundMaterializeParentHierarchy();
}

uint64_t sub_23B0F8DF8()
{
  _QWORD *v0;
  void (*v1)(_QWORD, uint64_t, _QWORD);
  void (*v2)(uint64_t, _QWORD);
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t result;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1(v0[27], v3, v0[34]);
  v4 = v0[19];
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v6 = v5;
  result = (*(uint64_t (**)(uint64_t, _QWORD))(v0[18] + 8))(v4, v0[20]);
  v8 = v6 * 1000000000.0;
  if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = v0[27];
  if (v8 < 9.22337204e18)
  {
    v10 = sub_23B134C38(v0[27], 0, (uint64_t)v8, 0);
    v11 = v9;
    v12 = v10;
    v2(v11, v0[34]);
    sub_23AE181A4(v0[21], v12);
    swift_release();
    JUMPOUT(0x23B0F8EC4);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_23B0F9058(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;

  v1[36] = a1;
  v2 = v1[34];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = v1[15];
  v5 = swift_getAssociatedConformanceWitness();
  v1[70] = v2;
  v1[71] = v4;
  v1[72] = AssociatedConformanceWitness;
  v1[73] = v5;
  type metadata accessor for ReconciliationID();
}

void sub_23B0F90C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata3;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v3 = *(int *)(TupleTypeMetadata3 + 48);
  v4 = *(int *)(TupleTypeMetadata3 + 64);
  v5 = v0[17];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[32] + 16))(v5, v0[35], v1);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)(v5 + v4) = 0;
  v6 = v0[13];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v0[21], v5);
  (*(void (**)(uint64_t, uint64_t))(v0[12] + 8))(v5, v6);
  JUMPOUT(0x23B0F9180);
}

void sub_23B0F9234()
{
  sub_23B10BBEC();
}

uint64_t sub_23B0F9258(uint64_t result)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  if (!v3)
  {
    if ((result & 1) == 0)
      sub_23B10BDF8(v4, v2, v1);
    return 0;
  }
  return result;
}

uint64_t sub_23B0F929C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  v5 = sub_23B126FF0(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

uint64_t sub_23B0F9300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0FB930(a1, a2, a3, a4, (uint64_t (*)(void))sub_23B1270E0);
}

void sub_23B0F930C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[12];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *a2;
  v3 = *(_QWORD *)(*a2 + 104);
  v4 = *(_QWORD *)(*a2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = sub_23B1C6C98();
  v23[8] = *(_QWORD *)(v24 - 8);
  v6 = MEMORY[0x24BDAC7A8](v24);
  v23[3] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v23[6] = (char *)v23 - v9;
  v23[10] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v23[11] = AssociatedTypeWitness;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v23[2] = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v23[5] = (char *)v23 - v12;
  v13 = *(_QWORD *)(v2 + 96);
  v14 = *(_QWORD *)(v2 + 80);
  v15 = swift_getAssociatedTypeWitness();
  v26 = sub_23B1C6C98();
  v29 = *(_QWORD *)(v26 - 8);
  v16 = MEMORY[0x24BDAC7A8](v26);
  v23[7] = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v25 = (char *)v23 - v19;
  v27 = *(_QWORD *)(v15 - 8);
  v28 = v15;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v23[4] = (char *)v23 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23[9] = (char *)v23 - v22;
  v32 = v14;
  v33 = v4;
  v30 = v4;
  v31 = v3;
  v34 = v13;
  v35 = v3;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B0F952C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t);
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  _BYTE v69[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 200) = &v69[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v6 - 192) = &v69[-v12];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v69[-v14];
  v16 = *(uint64_t (**)(uint64_t))(v3 + 152);
  *(_QWORD *)(v6 - 144) = v5;
  if ((v16(v13) & 0x4000) == 0 || !sub_23B0C6AC4(a1))
    return 0;
  v18 = type metadata accessor for ItemReconciliationHalf(0, v1, v2, v17);
  v19 = *(int *)(v18 + 36);
  v20 = *(_QWORD *)(v4 + v19);
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
  v22 = v4;
  *(_QWORD *)(v6 - 296) = v21;
  v21(v15, v4, a1);
  if ((v20 & 0x80) != 0)
  {
    v26 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v30 = v15;
    v28 = a1;
    v26(v30, a1);
  }
  else
  {
    v24 = &v15[*(int *)(a1 + 52)];
    v25 = *(_QWORD *)&v24[*(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 128), v23)+ 36)];
    v26 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v27 = v15;
    v28 = a1;
    v26(v27, a1);
    if ((v25 & 0x80) == 0)
      return 0;
  }
  v31 = *(_QWORD *)(v6 - 144);
  if (sub_23AE4F6B4() && (v32 = *(_QWORD *)(v4 + v19), (v32 & 0x80) != 0))
  {
    v42 = *(_BYTE **)(v6 - 192);
    v33 = v28;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 - 296))(v42, v4, v28);
    if ((v32 & 1) != 0)
    {
      v26(v42, v28);
      v44 = *(_QWORD *)(v6 - 184);
    }
    else
    {
      v43 = *(_QWORD *)&v42[*(int *)(v18 + 36)];
      v26(v42, v28);
      v44 = *(_QWORD *)(v6 - 184);
      if ((v43 & 8) == 0)
        goto LABEL_10;
    }
    *(_QWORD *)(v6 - 184) = v28;
    v45 = *(_QWORD *)(v6 - 152);
    v46 = v44;
    v47 = *(_QWORD *)(v6 - 176);
    (*(void (**)(void))(v45 + 16))();
    v49 = *(_QWORD *)(v6 - 168);
    v48 = *(_QWORD *)(v6 - 160);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v46, 1, v48) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v47);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v49 + 32))(*(_QWORD *)(v6 - 232), v46, v48);
      v54 = *(_QWORD *)(v6 - 240);
      v55 = *(_QWORD *)(v6 - 256);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v54 + 16))(v55, v22 + *(int *)(*(_QWORD *)(v6 - 184) + 52), *(_QWORD *)(v6 - 208));
      v57 = *(_QWORD *)(v6 - 224);
      v56 = *(_QWORD *)(v6 - 216);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56) != 1)
      {
        v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 32);
        v66 = *(_QWORD *)(v6 - 264);
        v67 = v65(v66, v55, v56);
        v68 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 176))(v67);
        sub_23AD9DA20(v66, v68);
      }
      (*(void (**)(_QWORD, uint64_t))(v49 + 8))(*(_QWORD *)(v6 - 232), v48);
      (*(void (**)(uint64_t, _QWORD))(v54 + 8))(v55, *(_QWORD *)(v6 - 208));
    }
    v33 = *(_QWORD *)(v6 - 184);
  }
  else
  {
    v33 = v28;
  }
LABEL_10:
  if (sub_23AE4F6B4())
  {
    v35 = v22 + *(int *)(v33 + 52);
    v36 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 128), v34);
    v37 = *(_QWORD *)(v35 + *(int *)(v36 + 36));
    if ((v37 & 0x80) != 0)
    {
      v38 = v36;
      v39 = *(_BYTE **)(v6 - 200);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 - 296))(v39, v22, v33);
      if ((v37 & 1) != 0)
      {
        v26(v39, v33);
        v41 = *(_QWORD *)(v6 - 152);
      }
      else
      {
        v40 = *(_QWORD *)&v39[*(int *)(v33 + 52) + *(int *)(v38 + 36)];
        v26(v39, v33);
        v41 = *(_QWORD *)(v6 - 152);
        if ((v40 & 8) == 0)
          return 0;
      }
      v50 = *(_QWORD *)(v6 - 248);
      v51 = *(_QWORD *)(v6 - 176);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v50, v22, v51);
      v53 = *(_QWORD *)(v6 - 168);
      v52 = *(_QWORD *)(v6 - 160);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v50, 1, v52) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v50, v51);
      }
      else
      {
        v58 = *(_QWORD *)(v6 - 272);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v58, v50, v52);
        v59 = *(_QWORD *)(v6 - 240);
        v60 = *(_QWORD *)(v6 - 280);
        v61 = v35;
        v62 = *(_QWORD *)(v6 - 208);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v60, v61, v62);
        v64 = *(_QWORD *)(v6 - 224);
        v63 = *(_QWORD *)(v6 - 216);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v60, 1, v63) != 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v64 + 32))(*(_QWORD *)(v6 - 288), v60, v63);
          sub_23AD9DA20(v58, *(uint64_t **)(v6 - 144));
        }
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v58, v52);
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v62);
      }
    }
  }
  return 0;
}

void sub_23B0F9BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23B0F9C00(a1, a2, a3, a4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
}

void sub_23B0F9C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _OWORD *))
{
  sub_23B126E34(a1, a2, a3, a4, a5);
}

uint64_t sub_23B0F9C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  return a1;
}

void sub_23B0F9C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[22];
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v41 = a4;
  v34 = a3;
  v39 = a2;
  v49 = a1;
  v4 = *a4;
  v5 = *(_QWORD *)(*a4 + 96);
  v6 = *(_QWORD *)(*a4 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v36 = sub_23B1C6C98();
  v30[6] = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v30[9] = (char *)v30 - v8;
  v38 = type metadata accessor for JobLockRule(0, v6, v5, v9);
  v35 = *(_QWORD *)(v38 - 8);
  v10 = MEMORY[0x24BDAC7A8](v38);
  v33 = (char *)v30 - v11;
  v40 = AssociatedTypeWitness;
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v30[7] = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v30[13] = (char *)v30 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v30[14] = (char *)v30 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v30[12] = (char *)v30 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v30[10] = (char *)v30 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v30[15] = (char *)v30 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v30[16] = (char *)v30 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v32 = (char *)v30 - v26;
  v31 = type metadata accessor for ItemReconciliationHalf(0, v6, v5, v27);
  v30[18] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v30[17] = (char *)v30 - v28;
  v29 = *(_QWORD *)(v4 + 88);
  v42 = *(_QWORD *)(v4 + 104);
  v43 = v29;
  v45 = v6;
  v46 = v29;
  v47 = v5;
  v44 = v5;
  v48 = v42;
  type metadata accessor for ItemReconciliation();
}

void sub_23B0F9ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v13 = sub_23B1C6C98();
  v9[23] = *(_QWORD *)(v13 - 8);
  v9[24] = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v9[11] = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v9[19] = (char *)&a9 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v9[21] = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v9[27] = (char *)&a9 - v21;
  v9[25] = a1;
  v9[33] = *(_QWORD *)(a1 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v9[8] = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v9[20] = (char *)&a9 - v25;
  v9[41] = *(_QWORD *)(v11 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v9[29] = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v9[32] = (char *)&a9 - v28;
  v30 = type metadata accessor for SnapshotItem(255, v11, v10, v29);
  v31 = sub_23B1C6C98();
  v9[30] = *(_QWORD *)(v31 - 8);
  v9[31] = v31;
  v32 = MEMORY[0x24BDAC7A8](v31);
  v9[36] = (char *)&a9 - v33;
  v9[35] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v9[34] = (char *)&a9 - v34;
  v35 = sub_23B1C6C98();
  v9[45] = v35;
  v36 = MEMORY[0x24BDAC7A8](v35);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v38 = MEMORY[0x24BDAC7A8](v37);
  MEMORY[0x24BDAC7A8](v38);
  v9[46] = v11;
  v9[83] = v11;
  v9[84] = v9[50];
  v9[85] = v9[51];
  v9[86] = v9[49];
  type metadata accessor for Ingestion.FetchItemMetadata();
}

uint64_t sub_23B0FA168(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10 = v1[47];
  v11 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)v2 + 288))(*(_QWORD *)(v9 - 72), a1, 0);
  if (!v10)
  {
    v1[4] = v6;
    v1[5] = v7;
    v1[1] = v8;
    v1[2] = v3;
    v14 = v1[49];
    v13 = v1[50];
    *v1 = v5;
    v1[3] = v4;
    v1[47] = 0;
    if ((v11 & 1) == 0)
    {
      v1[83] = v1[46];
      v1[84] = v13;
      v1[85] = v1[51];
      v1[86] = v14;
      type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
    }
    v1[83] = 0;
    v1[84] = 0xE000000000000000;
    sub_23B1C6EFC();
    v15 = v1[84];
    v1[83] = v1[83];
    v1[84] = v15;
    sub_23B1C64F4();
    swift_getAssociatedConformanceWitness();
    sub_23B1C7340();
    v2 = v1[83];
    sub_23AEB4428(v2, v1[84], 0, 2);
    swift_bridgeObjectRelease();
  }
  return v2;
}

void sub_23B0FA2B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t TupleTypeMetadata2;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  void (*v68)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  void *v98;
  id v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t AssociatedConformanceWitness;
  char v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  const char *v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t (*v111)(uint64_t);
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(_QWORD);
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v8 = *(_QWORD *)(v7 - 72);
  v9 = v1[47];
  v10 = v3(v8, a1, 0);
  if (v9)
    goto LABEL_54;
  v1[47] = 0;
  if ((v10 & 1) != 0)
  {
    sub_23B1C7310();
    swift_allocObject();
    v1[50] = sub_23B1C6728();
    v12 = v11;
    v13 = v1[44];
    v14 = v11 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1[40] + 16);
    v1[49] = v12;
    v15(v12, v8, v13);
    v16 = v6;
    v17 = v1[4];
    v18 = v1[5];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 16))(v17, v1[43], v5);
    v19 = v1[41];
    v20 = v1[46];
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v20);
    v22 = v5;
    v23 = v18;
    v24 = v16;
    v25 = 1;
    if (v21 != 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v24 + 72))(v20, v24);
      v25 = 0;
      v23 = v19;
      v22 = v20;
    }
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1[40] + 56))(v14, v25, 1, v13);
    swift_storeEnumTagMultiPayload();
    v26 = sub_23AD7D55C(v1[50]);
    v27 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v1[48] + 32) + 16) + 304);
    v28 = swift_retain();
    v29 = v27(v28);
    swift_release();
    sub_23B10CEB8(v26, v1[37], v29 & 1, v30, v31, v20, v32, v33, v24);
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1[41] + 48);
  v35 = v1[46];
  if (v34(v1[43], 1, v35) == 1)
  {
    v1[83] = v35;
    v1[84] = v2;
    v1[85] = v6;
    v1[86] = v4;
    type metadata accessor for Propagation.DeleteItem();
  }
  v36 = v1[47];
  v37 = *(_QWORD *)(v1[48] + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v37 + 240))(v8, 1);
  if (!v36)
  {
    v1[47] = 0;
    v38 = v1[35];
    v39 = v1[36];
    v40 = v1[3];
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v39, 1, v40) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(v1[30] + 8))(v39, v1[31]);
      v41 = v1[5];
      v42 = v1[2];
      v43 = v5;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 16))(v42, v1[43], v5);
      v44 = v1[46];
      if (v34(v42, 1, v44) == 1)
      {
        v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
        (*(void (**)(uint64_t))(*(_QWORD *)v1[48] + 216))(v45);
        v46 = v1[44];
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        v48 = v1[28];
        v49 = v48 + *(int *)(TupleTypeMetadata2 + 48);
        v50 = v1[40];
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v50 + 16))(v48, *(_QWORD *)(v7 - 72), v46);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v49, 1, 1, v46);
        v51 = v1[42];
        swift_storeEnumTagMultiPayload();
        LOBYTE(v49) = sub_23ABD4368();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v1[38] + 8))(v48, v51);
        if ((v49 & 1) != 0)
        {
          v1[83] = 0;
          v1[84] = 0xE000000000000000;
          sub_23B1C6EFC();
          v52 = v1[84];
          v1[83] = v1[83];
          v1[84] = v52;
          sub_23B1C64F4();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          JUMPOUT(0x23B0FA258);
        }
        goto LABEL_54;
      }
      v75 = v1[41];
      v76 = v1[29];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v76, v42, v44);
      v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 144))(v44, v6);
      v79 = v77;
      if (!(v78 >> 62))
      {
        sub_23AAA12F0(v77, v78);
        v1[83] = 0;
        v1[84] = 0xE000000000000000;
        sub_23B1C6EFC();
        swift_bridgeObjectRelease();
        v1[83] = 0xD000000000000019;
        v1[84] = 0x800000023B2074B0;
        sub_23ADB47EC(v79);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v91 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
        v92 = v76;
LABEL_38:
        v91(v92, v44);
        goto LABEL_54;
      }
      if (v78 >> 62 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v44);
        goto LABEL_54;
      }
      v93 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 80);
      v95 = v93(v44, v6);
      v96 = v94;
      if (v95 == 11822 && v94 == 0xE200000000000000
        || (sub_23B1C7388() & 1) != 0
        || v95 == 46 && v96 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        v1[83] = 0;
        v1[84] = 0xE000000000000000;
        sub_23B1C6EFC();
        swift_bridgeObjectRelease();
        v1[83] = 0xD00000000000001ELL;
        v1[84] = 0x800000023B207400;
        v93(v44, v6);
        v98 = (void *)sub_23B1C63BC();
        v99 = objc_msgSend(v98, sel_fp_obfuscatedFilename);

        sub_23B1C63E0();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v91 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
        v92 = v76;
        goto LABEL_38;
      }
      v1[4] = v37;
      v97 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v97 & 1) != 0)
        goto LABEL_37;
      v100 = *(void (**)(uint64_t, uint64_t))(v6 + 64);
      v101 = v1[16];
      v100(v44, v6);
      v102 = v1[44];
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v104 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v102, AssociatedConformanceWitness);
      v105 = *(void (**)(uint64_t, uint64_t))(v1[40] + 8);
      v1[50] = v105;
      v105(v101, v102);
      if ((v104 & 1) != 0 && sub_23AE4F6B4())
      {
        v106 = 0xD000000000000024;
        v107 = "item is root and not in the snapshot";
      }
      else
      {
        v108 = v1[15];
        v100(v1[46], v1[51]);
        v109 = v1[44];
        v110 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v109, AssociatedConformanceWitness);
        ((void (*)(uint64_t, uint64_t))v1[50])(v108, v109);
        if ((v110 & 1) == 0 || !sub_23AE4F6B4())
        {
          v111 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1[4] + 16) + 304);
          v112 = swift_retain();
          v113 = v111(v112);
          v114 = swift_release();
          if ((v113 & 1) != 0)
            goto LABEL_51;
          if (!v1[37])
            goto LABEL_51;
          v115 = v1[44];
          v116 = swift_getTupleTypeMetadata2();
          v117 = v1[28];
          v118 = v117 + *(int *)(v116 + 48);
          v119 = v1[40];
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v119 + 16))(v117, *(_QWORD *)(v7 - 72), v115);
          v120 = *(void (**)(_QWORD))(v1[51] + 72);
          v120(v1[46]);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v119 + 56))(v118, 0, 1, v115);
          v121 = v1[42];
          swift_storeEnumTagMultiPayload();
          v122 = sub_23ABD00F4();
          v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v1[38] + 8))(v117, v121);
          if ((v122 & 1) == 0)
          {
LABEL_51:
            if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v1[48] + 256))(v114) & 1) != 0 && sub_23AE4F6B4())
            {
              (*(void (**)(_QWORD))(v1[51] + 72))(v1[46]);
              sub_23AB00114();
            }
            v128 = v1[46];
            v129 = v1[51];
            v100(v128, v129);
            (*(void (**)(uint64_t, uint64_t))(v129 + 72))(v128, v129);
            sub_23B0F9234();
          }
          v1[83] = 0;
          v1[84] = 0xE000000000000000;
          sub_23B1C6EFC();
          v123 = v1[84];
          v1[83] = v1[83];
          v1[84] = v123;
          sub_23B1C64F4();
          v124 = v1[10];
          v125 = v1[29];
          v126 = v1[46];
          ((void (*)(uint64_t, _QWORD))v120)(v126, v1[51]);
          v127 = v1[44];
          sub_23B1C7340();
          ((void (*)(uint64_t, uint64_t))v1[50])(v124, v127);
          sub_23AEB4428(v1[83], v1[84], 0, 2);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v1[41] + 8))(v125, v126);
LABEL_56:
          JUMPOUT(0x23B0FA280);
        }
        v106 = 0xD000000000000025;
        v107 = "item is trash and not in the snapshot";
      }
      sub_23AEB4428(v106, (unint64_t)(v107 - 32) | 0x8000000000000000, 0, 2);
      (*(void (**)(_QWORD, _QWORD))(v1[41] + 8))(v1[29], v1[46]);
      goto LABEL_56;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v38 + 32))(v1[34], v39, v40);
    v53 = v1[5];
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16);
    v55 = v1[1];
    v56 = v1[43];
    v1[49] = v54;
    v54(v55, v56, v5);
    v57 = v1[46];
    v1[50] = v34;
    if (v34(v55, 1, v57) != 1)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v1[41] + 32))(v1[32], v55, v57);
      (*(void (**)(uint64_t, uint64_t))(v6 + 120))(v57, v6);
      sub_23AAB7E4C(v1 + 114, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      sub_23AA724E8((uint64_t)(v1 + 114), (uint64_t)(v1 + 176), &qword_2542E5050);
      if (sub_23AAFCF2C((uint64_t)(v1 + 176)) != 1)
      {
        v80 = v1[34] + *(int *)(v40 + 52);
        sub_23AA724E8(v80, (uint64_t)(v1 + 52), &qword_2542E5050);
        sub_23AA724E8((uint64_t)(v1 + 52), (uint64_t)(v1 + 83), &qword_2542E5050);
        if (sub_23AAFCF2C((uint64_t)(v1 + 83)) == 1)
        {
          v81 = v1[47];
          (*(void (**)(uint64_t))(*(_QWORD *)v37 + 264))(v8);
          if (v81)
          {
            (*(void (**)(_QWORD, uint64_t))(v1[41] + 8))(v1[32], v57);
            (*(void (**)(_QWORD, _QWORD))(v1[35] + 8))(v1[34], v1[3]);
            goto LABEL_54;
          }
          sub_23AA724E8((uint64_t)(v1 + 145), v80, &qword_2542E5050);
        }
      }
      sub_23AB00114();
    }
    v1[4] = v37;
    (*(void (**)(uint64_t, _QWORD))(v53 + 8))(v55, v1[45]);
    v58 = v1[40];
    v59 = v1[38];
    sub_23B1C7310();
    v60 = *(_QWORD *)(v59 + 72);
    swift_allocObject();
    v1[48] = sub_23B1C6728();
    v62 = v61;
    v63 = v1[44];
    v64 = swift_getTupleTypeMetadata2();
    v65 = v62 + *(int *)(v64 + 48);
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
    v67 = *(_QWORD *)(v7 - 72);
    v66(v62, v67, v63);
    v1[39] = v1[34] + *(int *)(v1[3] + 36);
    ((void (*)(uint64_t))v66)(v65);
    v68 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56);
    v1[40] = v68;
    v68(v65, 0, 1, v63);
    swift_storeEnumTagMultiPayload();
    v69 = v62 + v60;
    v70 = v69 + *(int *)(v64 + 48);
    v66(v69, v67, v63);
    v71 = *v1;
    ((void (*)(_QWORD, _QWORD, _QWORD))v1[49])(*v1, v1[43], v1[45]);
    v72 = v1[46];
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v1[50])(v71, 1, v72) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(v1[5] + 8))(v71, v1[45]);
      v66(v70, v1[39], v63);
      v73 = v63;
      v74 = v1[51];
    }
    else
    {
      v73 = v63;
      v74 = v1[51];
      v82 = v1[26];
      (*(void (**)(uint64_t, uint64_t))(v74 + 72))(v72, v74);
      (*(void (**)(uint64_t, uint64_t))(v1[41] + 8))(v71, v72);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v70, v82, v73);
    }
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v1[40])(v70, 0, 1, v73);
    swift_storeEnumTagMultiPayload();
    v83 = sub_23AD7D55C(v1[48]);
    v84 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1[4] + 16) + 304);
    v85 = swift_retain();
    v86 = v84(v85);
    swift_release();
    sub_23B10CEB8(v83, v1[37], v86 & 1, v87, v88, v72, v89, v90, v74);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(v1[35] + 8))(v1[34], v1[3]);
  }
LABEL_54:
  JUMPOUT(0x23B0FA188);
}

void sub_23B0FB570(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, uint64_t);
  uint64_t v8;
  void (*v9)(_QWORD, uint64_t);
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD, uint64_t, uint64_t);
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v16)(_QWORD, _QWORD, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (v3)
  {
    v5 = v2[44];
    v6 = (void (*)(_QWORD, uint64_t))v2[50];
    v6(v2[13], v5);
    v6(v2[14], v5);
    (*(void (**)(_QWORD, _QWORD))(v2[41] + 8))(v2[29], v2[46]);
  }
  else
  {
    v8 = v2[44];
    v9 = (void (*)(_QWORD, uint64_t))v2[50];
    v9(v2[13], v8);
    v9(v2[14], v8);
    if (a2)
    {
      (*(void (**)(_QWORD, _QWORD))(v2[41] + 8))(v2[29], v2[46]);
    }
    else
    {
      v2[83] = sub_23B1C6758();
      v10 = v2[44];
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v12 = v2[28] + *(int *)(TupleTypeMetadata2 + 48);
      v13 = v2[40];
      v14 = *(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 16);
      v14(v2[28], *(_QWORD *)(v4 - 72), v10);
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
      *(_QWORD *)(v4 - 72) = v15;
      v15(v12, 1, 1, v10);
      swift_storeEnumTagMultiPayload();
      sub_23B1C67DC();
      sub_23B1C67AC();
      v16 = *(void (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(v2[4] + 16) + 504);
      swift_retain();
      v17 = v2[9];
      v16(v2[29], v2[46], v2[51]);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v17, 1, v10) == 1)
      {
        (*(void (**)(_QWORD, _QWORD))(v2[6] + 8))(v2[9], v2[39]);
      }
      else
      {
        v18 = v2[7];
        v19 = v2[44];
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v2[40] + 32))(v18, v2[9], v19);
        v20 = v2[28] + *(int *)(TupleTypeMetadata2 + 48);
        v14(v2[28], v18, v19);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 - 72))(v20, 1, 1, v19);
        swift_storeEnumTagMultiPayload();
        sub_23B1C67AC();
        ((void (*)(uint64_t, uint64_t))v2[50])(v18, v19);
      }
      v21 = v2[83];
      v22 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v2[4] + 16) + 304);
      v23 = swift_retain();
      v24 = v22(v23);
      swift_release();
      v25 = v2[46];
      sub_23B10CEB8(v21, v2[37], v24 & 1, v26, v27, v25, v28, v29, v2[51]);
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD, uint64_t))(v2[41] + 8))(v2[29], v25);
    }
  }
  JUMPOUT(0x23B0FA188);
}

void sub_23B0FB918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23B0F9C00(a1, a2, a3, a4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.DeferredRescan);
}

uint64_t sub_23B0FB924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0FB930(a1, a2, a3, a4, (uint64_t (*)(void))sub_23B126DB8);
}

uint64_t sub_23B0FB930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  v6 = a5();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

uint64_t sub_23B0FB994(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t AssociatedTypeWitness;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t TupleTypeMetadata3;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[15];
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v112 = a1;
  v103 = a4;
  v101 = a2;
  v96 = a3;
  v4 = *(_QWORD *)(*a3 + 80);
  v94 = *a3;
  v5 = *(_QWORD *)(v94 + 96);
  type metadata accessor for SnapshotItem(255, v4, v5, (uint64_t)a4);
  v81 = sub_23B1C6C98();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v92 = (char *)v76 - v6;
  v77 = type metadata accessor for JobLockRule(0, v4, v5, v7);
  v76[14] = *(_QWORD *)(v77 - 8);
  v8 = MEMORY[0x24BDAC7A8](v77);
  v76[11] = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76[10] = v9;
  MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)v76 - v10;
  v11 = sub_23B1C5BDC();
  v98 = *(_QWORD *)(v11 - 8);
  v99 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v97 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_23B1C5E4C();
  v102 = *(_QWORD *)(v100 - 8);
  v13 = MEMORY[0x24BDAC7A8](v100);
  v90 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v89 = (char *)v76 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v91 = (char *)v76 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v87 = (char *)v76 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v76[13] = (char *)v76 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v93 = (char *)v76 - v23;
  v25 = type metadata accessor for FileTreeWriter.FileTreeChange(0, v4, v5, v24);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  v28 = MEMORY[0x24BDAC7A8](v25);
  v86 = (char *)v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v85 = (char *)v76 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v83 = (char *)v76 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v76[12] = (char *)v76 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v95 = (char *)v76 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v84 = (char *)v76 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)v76 - v39;
  v108 = sub_23B1C6C98();
  v106 = *(_QWORD *)(v108 - 8);
  v41 = MEMORY[0x24BDAC7A8](v108);
  v79 = (char *)v76 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v88 = (char *)v76 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v82 = (char *)v76 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v76[9] = (char *)v76 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v107 = (char *)v76 - v49;
  v104 = v5;
  v105 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v110 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v111 = AssociatedTypeWitness;
  v51 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v53 = (char *)v76 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v51);
  v56 = (char *)v76 - v55;
  v57 = MEMORY[0x24BDAC7A8](v54);
  v59 = (char *)v76 - v58;
  v60 = MEMORY[0x24BDAC7A8](v57);
  v62 = (char *)v76 - v61;
  MEMORY[0x24BDAC7A8](v60);
  v109 = (char *)v76 - v63;
  v64 = v26;
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v65(v40, v112, v25);
  if (!swift_getEnumCaseMultiPayload())
  {
    v76[2] = v56;
    v76[5] = v59;
    v76[3] = v62;
    v76[4] = v53;
    v76[7] = v65;
    v76[6] = v64;
    v76[8] = v25;
    type metadata accessor for JobLockAggregator(255, v105, v104, v66);
    sub_23B1C6C98();
    v68 = v111;
    v69 = v108;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v71 = &v40[*(int *)(TupleTypeMetadata3 + 48)];
    v72 = (uint64_t)v109;
    v73 = v40;
    v74 = *(_QWORD *)&v40[*(int *)(TupleTypeMetadata3 + 64)];
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v73, v68);
    v75 = (uint64_t)v107;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v107, v71, v69);
    sub_23B0F9C64(v72, v75, v74, v103);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v40, v25);
}

void sub_23B0FC058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  unint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v7 - 216) = v3;
  *(_QWORD *)(v7 - 232) = a3;
  v8 = (id)fpfs_current_or_default_log();
  v9 = *(_QWORD *)(v7 - 320);
  sub_23B1C5E58();
  v10 = *(_QWORD *)(v7 - 352);
  v11 = *(_QWORD *)(v7 - 480);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 488);
  v12(v10, *(_QWORD *)(v7 - 144), v11);
  swift_bridgeObjectRetain();
  v13 = v4;
  v14 = sub_23B1C5E40();
  v15 = sub_23B1C6A94();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_QWORD *)(v7 - 144) = v18;
    *(_QWORD *)(v7 - 136) = v5;
    *(_QWORD *)(v7 - 128) = v18;
    *(_DWORD *)v17 = 136315394;
    *(_DWORD *)(v7 - 200) = v16;
    v19 = *(_QWORD *)(v7 - 280);
    v12(v19, v10, v11);
    v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 496) + 8);
    v20(v10, v11);
    sub_23ADB4C18(v11);
    v22 = v21;
    v24 = v23;
    v20(v19, v11);
    *(_QWORD *)(v7 - 96) = sub_23AABEC68(v22, v24, (uint64_t *)(v7 - 128));
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    v25 = *(_QWORD *)(v7 - 216);
    *(_QWORD *)(v7 - 96) = sub_23AABEC68(v25, v13, (uint64_t *)(v7 - 128));
    sub_23B1C6CBC();
    v26 = *(_QWORD *)(v7 - 232);
    sub_23B127608(v25, v13, v26, 0);
    sub_23B127608(v25, v13, v26, 0);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v14, (os_log_type_t)*(_DWORD *)(v7 - 200), "⛔️  discarded %s: %s", (uint8_t *)v17, 0x16u);
    v27 = *(_QWORD *)(v7 - 144);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v27, -1, -1);
    MEMORY[0x23B8614BC](v17, -1, -1);

    swift_release();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 224) + 8))(*(_QWORD *)(v7 - 320), *(_QWORD *)(v7 - 240));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 192) + 8))(*(_QWORD *)(v7 - 184), *(_QWORD *)(v7 - 176));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 160) + 8))(*(_QWORD *)(v7 - 168), *(_QWORD *)(v7 - 152));
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 496) + 8))(v10, v11);

    swift_release();
    v28 = *(_QWORD *)(v7 - 216);
    v29 = *(_QWORD *)(v7 - 232);
    sub_23B127608(v28, v13, v29, 0);
    sub_23B127608(v28, v13, v29, 0);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 224) + 8))(v9, *(_QWORD *)(v7 - 240));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 192) + 8))(*(_QWORD *)(v7 - 184), *(_QWORD *)(v7 - 176));
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v7 - 160) + 8))(*(_QWORD *)(v7 - 168), v6);
  }
  JUMPOUT(0x23B0FBFFCLL);
}

void sub_23B0FCC4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B126EF4(v2, 0x2000000000000000, v0, v1, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
}

void sub_23B0FCC70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;
  void *v11;
  char v12;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v4);
  v10 = *(void **)(a1 + 88);
  v11 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = xmmword_23B1DA980;
  v12 = *(_BYTE *)(a1 + 104);
  *(_BYTE *)(a1 + 104) = 0;
  sub_23AAAEE10(v10, v11, v12);
  *(_QWORD *)(v8 - 128) = v6;
  *(_QWORD *)(v8 - 120) = v1;
  *(_QWORD *)(v8 - 112) = v5;
  *(_QWORD *)(v8 - 104) = v2;
  type metadata accessor for JobResult();
}

void sub_23B0FCCB4()
{
  uint64_t v0;
  void (*v1)(_QWORD, uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23AE181A4(*(_QWORD *)(v3 - 272), v0);
  swift_release();
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 192) + 8))(*(_QWORD *)(v3 - 184), *(_QWORD *)(v3 - 176));
  v1(*(_QWORD *)(v3 - 168), v2);
  JUMPOUT(0x23B0FBEE0);
}

void sub_23B0FD06C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 400) + 8))(v0, *(_QWORD *)(v1 - 392));
  JUMPOUT(0x23B0FBFD4);
}

void sub_23B0FD250()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;

  v6 = *(_QWORD *)(v5 - 512);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 144))(v6, *(_QWORD *)(v5 - 168), v1);
  v7 = *(_QWORD *)(v5 - 264);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v9 = v8;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 256) + 8))(v7, *(_QWORD *)(v5 - 248));
  v10 = v9 * 1000000000.0;
  if ((~COERCE__INT64(v9 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v10 > -9.22337204e18)
    {
      if (v10 < 9.22337204e18)
      {
        v11 = (uint64_t)v10;
        swift_allocObject();
        v12 = sub_23AF1AD34(v6, 0x2000000000000000, v11, 2048);
        v2(v6, *(_QWORD *)(v5 - 152));
        v14 = *(void **)(v12 + 88);
        v13 = *(void **)(v12 + 96);
        *(_QWORD *)(v12 + 88) = 256;
        *(_QWORD *)(v12 + 96) = *(_QWORD *)(v5 - 280);
        v15 = *(_BYTE *)(v12 + 104);
        *(_BYTE *)(v12 + 104) = 0;
        swift_retain();
        sub_23AAAEE10(v14, v13, v15);
        *(_QWORD *)(v5 - 128) = *(_QWORD *)(v5 - 200);
        *(_QWORD *)(v5 - 120) = v3;
        *(_QWORD *)(v5 - 112) = v4;
        *(_QWORD *)(v5 - 104) = v0;
        type metadata accessor for JobResult();
      }
LABEL_7:
      __break(1u);
      JUMPOUT(0x23B0FD784);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_23B0FD370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, uint64_t);
  uint64_t v4;

  sub_23AE181A4(*(_QWORD *)(v4 - 272), v0);
  swift_release();
  swift_release();
  sub_23B127608(*(_QWORD *)(v4 - 216), v1, *(_QWORD *)(v4 - 232), 3);
  (*(void (**)(_QWORD, _QWORD))(v4 - 192))(*(_QWORD *)(v4 - 184), *(_QWORD *)(v4 - 176));
  v3(*(_QWORD *)(v4 - 168), v2);
  JUMPOUT(0x23B0FBEE0);
}

id sub_23B0FD7B0()
{
  id result;

  result = sub_23B0FD7CC();
  qword_2542EDE00 = (uint64_t)result;
  return result;
}

id sub_23B0FD7CC()
{
  xpc_object_t v0;
  id v1;
  void *v2;
  id v3;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5B8], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5D8], *MEMORY[0x24BDAC608]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6B8], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC698], (const char *)*MEMORY[0x24BDAC6A8]);
  v1 = objc_allocWithZone(MEMORY[0x24BE313D0]);
  v2 = (void *)sub_23B1C63BC();
  v3 = objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

  swift_unknownObjectRelease();
  return v3;
}

void sub_23B0FD8E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t TupleTypeMetadata3;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int *TupleTypeMetadata;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  int *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v71 = a6;
  v72 = a7;
  v68 = a5;
  LODWORD(v70) = a4;
  v69 = a3;
  v75 = a9;
  v76 = a2;
  v73 = a8;
  v74 = a11;
  v12 = type metadata accessor for SnapshotItem(0, a8, a11, a4);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v67 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v67 - v20;
  v22 = sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v24 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v26 = (char *)&v67 - v25;
  v27 = (char *)&v67 + *(int *)(v24 + 48) - v25;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v28((char *)&v67 - v25, a1, v22);
  v28(v27, v76, v22);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(a1) = v29(v26, 1, v12);
  v76 = v12;
  v30 = v29(v27, 1, v12);
  if ((_DWORD)a1 == 1)
  {
    if (v30 == 1)
    {
      v32 = v73;
      v31 = v74;
      swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v34 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
      v35 = swift_checkMetadataState();
      v36 = v69;
      v37 = v34(v35, AssociatedConformanceWitness);
      v38 = v75;
      if ((v37 & 1) != 0)
      {
        *v75 = 0xD00000000000001ALL;
        v38[1] = 0x800000023B206C00;
        v77 = v32;
        v78 = v32;
        v79 = v31;
        v80 = v31;
        type metadata accessor for ItemChange();
      }
      MEMORY[0x24BDAC7A8](v37);
      strcpy((char *)&v67 - 32, "  isRecursive reason ");
      v77 = v35;
      v78 = v22;
      v79 = MEMORY[0x24BEE1328];
      v80 = MEMORY[0x24BEE0D00];
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      v58 = (char *)v38 + TupleTypeMetadata[12];
      v59 = TupleTypeMetadata[16];
      v60 = (_QWORD *)((char *)v38 + TupleTypeMetadata[20]);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v38, v36, v35);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v58, 1, 1, v76);
      *((_BYTE *)v38 + v59) = v68 & 1;
      v61 = v72;
      *v60 = v71;
      v60[1] = v61;
      v77 = v32;
      v78 = v32;
      v79 = v31;
      v80 = v31;
      type metadata accessor for ItemChange();
    }
    v49 = v76;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v51 = *(int *)(TupleTypeMetadata3 + 48);
    v52 = v75;
    v53 = (_QWORD *)((char *)v75 + *(int *)(TupleTypeMetadata3 + 64));
    (*(void (**)(_QWORD *, char *, uint64_t))(v13 + 32))(v75, v27, v49);
    *((_BYTE *)v52 + v51) = v70 & 1;
    v54 = v72;
    *v53 = v71;
    v53[1] = v54;
    v77 = v73;
    v78 = v73;
    v79 = v74;
    v80 = v74;
    type metadata accessor for ItemChange();
  }
  v39 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  if (v30 == 1)
  {
    v70 = v13;
    v40 = v21;
    v41 = v76;
    v67 = v39;
    v39(v21, v26, v76);
    v43 = v73;
    v42 = v74;
    swift_getAssociatedTypeWitness();
    v44 = swift_getAssociatedConformanceWitness();
    v45 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 64);
    v46 = swift_checkMetadataState();
    v47 = v45(v46, v44);
    v48 = v75;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v70 + 8))(v21, v41);
      *v48 = 0xD00000000000001ALL;
      v48[1] = 0x800000023B206C00;
      v77 = v43;
      v78 = v43;
      v79 = v42;
      v80 = v42;
      type metadata accessor for ItemChange();
    }
    MEMORY[0x24BDAC7A8](v47);
    strcpy((char *)&v67 - 32, "  isRecursive reason ");
    v77 = v46;
    v78 = v22;
    v79 = MEMORY[0x24BEE1328];
    v80 = MEMORY[0x24BEE0D00];
    v62 = (int *)swift_getTupleTypeMetadata();
    v63 = (char *)v48 + v62[12];
    v64 = v62[16];
    v65 = (_QWORD *)((char *)v48 + v62[20]);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v48, v69, v46);
    v67(v63, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v63, 0, 1, v41);
    *((_BYTE *)v48 + v64) = v68 & 1;
    v66 = v72;
    *v65 = v71;
    v65[1] = v66;
    v77 = v43;
    v78 = v43;
    v79 = v42;
    v80 = v42;
    type metadata accessor for ItemChange();
  }
  v55 = v19;
  v56 = v76;
  v39(v55, v26, v76);
  v39(v16, v27, v56);
  MEMORY[0x23B8613CC](&unk_23B1DD478, v56);
  sub_23AF223C8((uint64_t)v16);
}

void sub_23B0FE01C()
{
  JUMPOUT(0x23B0FE024);
}

void sub_23B0FE054(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[12];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24 = a2;
  v2 = (_QWORD *)*a2;
  v17 = sub_23B1C5BDC();
  v14[8] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v16 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v2[12];
  v5 = v2[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v23 = (char *)v14 - v6;
  v7 = v2[11];
  v8 = v2[13];
  v15 = type metadata accessor for ItemReconciliationHalf(0, v7, v8, v9);
  v14[11] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v14[10] = (char *)v14 - v10;
  v12 = type metadata accessor for ItemReconciliationHalf(0, v5, v4, v11);
  v21 = *(_QWORD *)(v12 - 8);
  v22 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v20 = (char *)v14 - v13;
  v25 = v5;
  v26 = v7;
  v27 = v4;
  v28 = v8;
  type metadata accessor for ItemReconciliation();
}

void sub_23B0FE1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v13 - 152) = a1;
  v14 = sub_23B1C6C98();
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v13 - 168) = v14;
  *(_QWORD *)(v13 - 160) = v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 328) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 192) = (char *)&a9 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 184) = (char *)&a9 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v31 = MEMORY[0x24BDAC7A8](v30);
  MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 280) = v12;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v11;
  *(_QWORD *)(v13 - 272) = v11;
  type metadata accessor for Job();
}

uint64_t sub_23B0FE35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 128) = sub_23B1C6758();
  *(_QWORD *)(v2 - 264) = v0;
  v4 = type metadata accessor for SnapshotItem(0, v1, v0, v3);
  v5 = MEMORY[0x23B8613CC](&unk_23B1DD478, v4);
  if (sub_23AF219A4(v4, v5) == 1)
    sub_23AB00114();
  return *(_QWORD *)(v2 - 128);
}

uint64_t sub_23B0FEBA0(void (*a1)(char *), uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v36 = a1;
  v37 = a3;
  v5 = *a2;
  v6 = sub_23B1C5BDC();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v7 = *(_QWORD *)(v5 + 96);
  v35 = v5;
  v8 = *(_QWORD *)(v5 + 80);
  v34 = v7;
  v32 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v29 - v13;
  v14 = sub_23B1C6C98();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - v16;
  v18 = a2[4];
  result = sub_23AE4F6B4();
  if ((result & 1) != 0)
  {
    v21 = type metadata accessor for SnapshotItem(0, v32, v34, v20);
    v30 = (char *)v36 + *(int *)(v21 + 36);
    v22 = (uint64_t *)((char *)v36 + *(int *)(v21 + 44));
    v33 = v3;
    v23 = *v22;
    v29 = v22[1];
    v36 = *(void (**)(char *))(v10 + 16);
    v36(v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, AssociatedTypeWitness);
    v24 = v33;
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t, char *))(*(_QWORD *)v18 + 256))(v30, v23, v29, v17);
    v33 = v24;
    if (v24)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    else
    {
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      if (MEMORY[0x23B85F0E0](v26, AssociatedTypeWitness))
      {
        v27 = *(_QWORD *)(v35 + 88);
        v28 = *(_QWORD *)(v35 + 104);
        v41 = v32;
        v42 = v27;
        v43 = v34;
        v44 = v28;
        type metadata accessor for JobResult();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

BOOL sub_23B0FEFA4(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;

  v5 = *a1;
  if (!sub_23AE4F6B4())
    return 0;
  v7 = a2 + *(int *)(type metadata accessor for SnapshotItem(0, *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 96), v6) + 48);
  v8 = (int *)type metadata accessor for ItemMetadata();
  return (*(_BYTE *)(v7 + v8[20]) & 1) == 0
      && !*(_BYTE *)(v7 + v8[21])
      && (*(_BYTE *)(v7 + v8[16]) & 1) == 0
      && (*(_BYTE *)(v7 + v8[17]) & 1) == 0
      && (*(_QWORD *)&a3 & 0x10008) == 0x10000;
}

uint64_t sub_23B0FF044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v5);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(a1 + 40) + 368))(a2, 1);
  if (!v2 && (result & 1) != 0)
    type metadata accessor for Propagation.DeletionAcked();
  return result;
}

void sub_23B0FF1E0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[26];

  v18[10] = a3;
  v18[13] = a2;
  v18[18] = a1;
  v3 = (_QWORD *)*a1;
  v4 = sub_23B1C5BDC();
  v18[19] = *(_QWORD *)(v4 - 8);
  v18[20] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18[17] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v3[10];
  v7 = v3[12];
  v9 = type metadata accessor for SnapshotMutation(0, v6, v7, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v18[15] = v9;
  v18[16] = v10;
  MEMORY[0x24BDAC7A8](v9);
  v18[14] = (char *)v18 - v11;
  v12 = v3[11];
  v13 = v3[13];
  v15 = type metadata accessor for SnapshotMutation(0, v12, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v18[11] = v15;
  v18[12] = v16;
  MEMORY[0x24BDAC7A8](v15);
  v18[9] = (char *)v18 - v17;
  v18[21] = v12;
  v18[22] = v6;
  v18[23] = v13;
  v18[24] = v7;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B0FF2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 232) = a1;
  *(_QWORD *)(v5 - 224) = v6;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v2;
  type metadata accessor for ConcreteJobResult();
}

void sub_23B0FF33C()
{
  sub_23AEB6FD8();
}

void sub_23B0FF344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 240) = a1;
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v2;
  type metadata accessor for JobResult();
}

void sub_23B0FF35C(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;

  *(_QWORD *)(v1 - 256) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v1 - 248) = v3;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 112) = v3;
  *(_QWORD *)(v1 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 - 96) = v5;
  type metadata accessor for ReconciliationID();
}

void sub_23B0FF3FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;

  *(_QWORD *)(v3 - 264) = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v3 - 272) = TupleTypeMetadata2;
  v5 = *(int *)(TupleTypeMetadata2 + 48);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
  v7 = *(_QWORD *)(v3 - 208);
  v6(v1, v7, v2);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v1 + v5) = 0;
  v8 = *(_QWORD *)(v3 - 232);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v3 - 240);
  sub_23AEB700C(v9, v1);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 224) + 8);
  *(_QWORD *)(v3 - 224) = v10;
  v10(v1, v8);
  v11 = swift_getTupleTypeMetadata2();
  v12 = *(_QWORD *)(v3 - 216);
  v13 = (char *)(v12 + *(int *)(v11 + 48));
  v6(v12, v7, v2);
  strcpy(v13, "lazily deleted");
  v13[15] = -18;
  v14 = *(_QWORD *)(v3 - 200);
  swift_storeEnumTagMultiPayload();
  sub_23AEB7038(v9, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 192) + 8))(v12, v14);
  v15 = *(int *)(*(_QWORD *)(v3 - 272) + 48);
  v16 = *(_QWORD *)(v3 - 248);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18 = *(_QWORD *)(v3 - 184);
  v17(v1, v18, v16);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v1 + v15) = 2;
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v9, v1);
  (*(void (**)(uint64_t, uint64_t))(v3 - 224))(v1, v8);
  v19 = swift_getTupleTypeMetadata2();
  v20 = *(_QWORD *)(v3 - 176);
  v21 = (char *)(v20 + *(int *)(v19 + 48));
  v17(v20, v18, v16);
  strcpy(v21, "lazily deleted");
  v21[15] = -18;
  v22 = *(_QWORD *)(v3 - 168);
  swift_storeEnumTagMultiPayload();
  sub_23AEB7064(v9, v20);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 8))(v20, v22);
  (*(void (**)(uint64_t))(**(_QWORD **)(v3 - 144) + 176))(v23);
  v24 = *(_QWORD *)(v3 - 152);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v26 = v25;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 136) + 8))(v24, *(_QWORD *)(v3 - 128));
  v27 = v26 * 1000000000.0;
  if ((~COERCE__INT64(v26 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v27 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v27 < 9.22337204e18)
    sub_23AEBF200(v9, (uint64_t)v27);
LABEL_7:
  __break(1u);
}

void sub_23B0FF724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  _QWORD v17[131];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = MEMORY[0x24BDAC7A8](a1);
  v24 = v2;
  v17[119] = v3;
  v20 = v4;
  v19 = v5;
  v25 = v6;
  v22 = v7;
  v23 = v1;
  v21 = v8;
  v18 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v18);
  v17[1] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17[19] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v17[18] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v17[21] = (char *)v17 - v13;
  v14 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedConformanceWitness();
  v26 = v14;
  v17[46] = AssociatedTypeWitness;
  v27 = AssociatedTypeWitness;
  v17[41] = AssociatedConformanceWitness;
  v17[42] = v16;
  v28 = AssociatedConformanceWitness;
  v29 = v16;
  type metadata accessor for FileItemVersion();
}

void sub_23B0FF8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t AssociatedTypeWitness;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v9[79] = a1;
  v15 = sub_23B1C6C98();
  v9[33] = *(_QWORD *)(v15 - 8);
  v9[34] = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v9[30] = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v9[29] = (char *)&a9 - v19;
  v9[45] = v11;
  v9[17] = *(_QWORD *)(v11 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v9[14] = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v9[20] = (char *)&a9 - v22;
  *(_QWORD *)(v14 - 72) = swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9[47] = TupleTypeMetadata2;
  v9[28] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v9[63] = (char *)&a9 - v24;
  v25 = *(_QWORD *)(v10 + 88);
  v26 = *(_QWORD *)(v10 + 104);
  v28 = type metadata accessor for SnapshotItem(255, v25, v26, v27);
  v29 = sub_23B1C6C98();
  v9[59] = *(_QWORD *)(v29 - 8);
  v9[60] = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v9[10] = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v9[4] = (char *)&a9 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v9[11] = (char *)&a9 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v9[73] = (char *)&a9 - v37;
  v9[71] = v28;
  v9[70] = *(_QWORD *)(v28 - 8);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v9[5] = (char *)&a9 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v9[6] = (char *)&a9 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v9[58] = (char *)&a9 - v42;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[107] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v44 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9[38] = (char *)&a9 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v9[3] = (char *)&a9 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v9[13] = (char *)&a9 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v9[12] = (char *)&a9 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v9[72] = (char *)&a9 - v52;
  v54 = type metadata accessor for ItemReconciliationHalf(0, v25, v26, v53);
  v9[80] = v54;
  v9[75] = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v9[74] = (char *)&a9 - v55;
  v9[270] = v13;
  v9[271] = v25;
  v9[272] = v12;
  v9[273] = v26;
  type metadata accessor for PersistenceTrigger();
}

void sub_23B0FFC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v9[129] = a1;
  v9[128] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9[127] = (char *)&a9 - v15;
  v16 = sub_23B1C5E4C();
  v9[152] = v16;
  v9[146] = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v9[140] = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v9[142] = (char *)&a9 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v9[135] = (char *)&a9 - v21;
  v9[155] = v10;
  v22 = sub_23B1C6C98();
  v9[105] = v22;
  v9[104] = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v9[35] = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v9[7] = (char *)&a9 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v9[24] = (char *)&a9 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v9[26] = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v9[76] = (char *)&a9 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v9[118] = (char *)&a9 - v33;
  v9[270] = v14;
  v9[271] = v12;
  v9[272] = v13;
  v9[273] = v11;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B0FFE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v9[159] = a1;
  v9[154] = *(_QWORD *)(a1 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  v9[68] = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v9[62] = (char *)&a9 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v9[158] = (char *)&a9 - v20;
  v22 = type metadata accessor for SnapshotMutation(0, v14, v13, v21);
  v9[149] = v22;
  v9[148] = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v9[147] = (char *)&a9 - v24;
  v9[110] = v11;
  v9[109] = *(_QWORD *)(v11 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v9[40] = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v9[55] = (char *)&a9 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v9[54] = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v9[56] = (char *)&a9 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v9[113] = (char *)&a9 - v34;
  v9[169] = *(_QWORD *)(*(_QWORD *)(v15 - 72) - 8);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v9[64] = (char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v9[96] = (char *)&a9 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v9[84] = (char *)&a9 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v9[130] = (char *)&a9 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v9[156] = (char *)&a9 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v9[115] = (char *)&a9 - v45;
  type metadata accessor for SnapshotItem(255, v14, v13, v46);
  v47 = sub_23B1C6C98();
  v9[163] = v47;
  v9[160] = *(_QWORD *)(v47 - 8);
  v48 = MEMORY[0x24BDAC7A8](v47);
  v9[114] = (char *)&a9 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x24BDAC7A8](v48);
  v9[133] = (char *)&a9 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v9[138] = (char *)&a9 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v9[125] = (char *)&a9 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v9[150] = (char *)&a9 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v9[161] = (char *)&a9 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v9[122] = (char *)&a9 - v61;
  v9[151] = v62;
  MEMORY[0x24BDAC7A8](v60);
  v9[106] = (char *)&a9 - v63;
  v65 = type metadata accessor for ItemReconciliationHalf(0, v14, v13, v64);
  v9[123] = v65;
  v9[120] = *(_QWORD *)(v65 - 8);
  v66 = MEMORY[0x24BDAC7A8](v65);
  v9[16] = (char *)&a9 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = MEMORY[0x24BDAC7A8](v66);
  v9[15] = (char *)&a9 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v9[82] = (char *)&a9 - v71;
  MEMORY[0x24BDAC7A8](v70);
  v9[117] = (char *)&a9 - v72;
  v9[270] = v14;
  v9[172] = v12;
  v9[271] = v12;
  v9[272] = v13;
  v9[168] = v10;
  v9[273] = v10;
  type metadata accessor for ItemReconciliation();
}

void sub_23B100274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v14 = sub_23B1C6C98();
  v9[136] = v14;
  v9[134] = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v9[85] = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v9[90] = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v9[92] = (char *)&a9 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v9[61] = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v9[95] = (char *)&a9 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v9[49] = (char *)&a9 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v9[48] = (char *)&a9 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v9[69] = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v9[93] = (char *)&a9 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v9[91] = (char *)&a9 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v9[8] = (char *)&a9 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v9[2] = (char *)&a9 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v9[9] = (char *)&a9 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v9[22] = (char *)&a9 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v9[23] = (char *)&a9 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v9[25] = (char *)&a9 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v9[65] = (char *)&a9 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v9[52] = (char *)&a9 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v9[51] = (char *)&a9 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v9[44] = (char *)&a9 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v9[43] = (char *)&a9 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v9[36] = (char *)&a9 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v9[86] = (char *)&a9 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v9[98] = (char *)&a9 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v9[31] = (char *)&a9 - v64;
  v65 = MEMORY[0x24BDAC7A8](v63);
  v9[87] = (char *)&a9 - v66;
  v67 = MEMORY[0x24BDAC7A8](v65);
  v9[77] = (char *)&a9 - v68;
  v69 = MEMORY[0x24BDAC7A8](v67);
  v9[66] = (char *)&a9 - v70;
  v71 = MEMORY[0x24BDAC7A8](v69);
  v9[37] = (char *)&a9 - v72;
  v73 = MEMORY[0x24BDAC7A8](v71);
  v9[108] = (char *)&a9 - v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  v9[111] = (char *)&a9 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  v9[94] = (char *)&a9 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  v9[88] = (char *)&a9 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  v9[99] = (char *)&a9 - v82;
  v83 = MEMORY[0x24BDAC7A8](v81);
  v9[32] = (char *)&a9 - v84;
  v85 = MEMORY[0x24BDAC7A8](v83);
  v9[102] = (char *)&a9 - v86;
  v87 = MEMORY[0x24BDAC7A8](v85);
  v9[67] = (char *)&a9 - v88;
  v89 = MEMORY[0x24BDAC7A8](v87);
  v9[101] = (char *)&a9 - v90;
  v91 = MEMORY[0x24BDAC7A8](v89);
  v9[89] = (char *)&a9 - v92;
  v93 = MEMORY[0x24BDAC7A8](v91);
  v9[100] = (char *)&a9 - v94;
  v95 = MEMORY[0x24BDAC7A8](v93);
  v9[112] = (char *)&a9 - v96;
  v97 = MEMORY[0x24BDAC7A8](v95);
  v9[132] = (char *)&a9 - v98;
  v99 = MEMORY[0x24BDAC7A8](v97);
  v9[141] = (char *)&a9 - v100;
  v101 = MEMORY[0x24BDAC7A8](v99);
  v9[145] = (char *)&a9 - v102;
  v103 = MEMORY[0x24BDAC7A8](v101);
  v9[116] = (char *)&a9 - v104;
  v105 = MEMORY[0x24BDAC7A8](v103);
  v106 = MEMORY[0x24BDAC7A8](v105);
  v9[139] = a1;
  v9[137] = *(_QWORD *)(a1 - 8);
  v107 = MEMORY[0x24BDAC7A8](v106);
  v9[78] = (char *)&a9 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = MEMORY[0x24BDAC7A8](v107);
  v9[83] = (char *)&a9 - v110;
  v111 = MEMORY[0x24BDAC7A8](v109);
  v9[57] = (char *)&a9 - v112;
  v113 = MEMORY[0x24BDAC7A8](v111);
  v9[50] = (char *)&a9 - v114;
  v115 = MEMORY[0x24BDAC7A8](v113);
  v9[39] = (char *)&a9 - v116;
  v117 = MEMORY[0x24BDAC7A8](v115);
  v9[53] = (char *)&a9 - v118;
  v119 = MEMORY[0x24BDAC7A8](v117);
  v9[27] = (char *)&a9 - v120;
  v121 = MEMORY[0x24BDAC7A8](v119);
  v9[103] = (char *)&a9 - v122;
  v123 = MEMORY[0x24BDAC7A8](v121);
  v124 = MEMORY[0x24BDAC7A8](v123);
  v9[121] = (char *)&a9 - v125;
  v126 = MEMORY[0x24BDAC7A8](v124);
  v9[97] = (char *)&a9 - v127;
  v128 = MEMORY[0x24BDAC7A8](v126);
  v9[167] = v10;
  v9[171] = *(_QWORD *)(v10 - 8);
  v129 = MEMORY[0x24BDAC7A8](v128);
  v9[81] = (char *)&a9 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = MEMORY[0x24BDAC7A8](v129);
  v9[153] = (char *)&a9 - v132;
  v133 = MEMORY[0x24BDAC7A8](v131);
  v9[157] = (char *)&a9 - v134;
  v135 = MEMORY[0x24BDAC7A8](v133);
  v9[126] = (char *)&a9 - v136;
  v137 = MEMORY[0x24BDAC7A8](v135);
  v9[124] = (char *)&a9 - v138;
  MEMORY[0x24BDAC7A8](v137);
  v9[162] = (char *)&a9 - v139;
  v9[270] = v12;
  v9[174] = v12;
  v9[271] = v12;
  v9[272] = v11;
  v9[173] = v11;
  v9[273] = v11;
  type metadata accessor for ItemChange();
}

uint64_t sub_23B100B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))((char *)&a9 - v12, *(_QWORD *)(v9 + 1328), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B100B60 + dword_23B10BA44[EnumCaseMultiPayload]))();
}

uint64_t sub_23B100B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *TupleTypeMetadata;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  char v20;

  *(_QWORD *)v1 = v4;
  *(_QWORD *)(v1 + 1328) = v3;
  MEMORY[0x24BDAC7A8](a1);
  v5 = *(_QWORD *)(v1 + 1336);
  *(_QWORD *)(v1 + 2160) = v5;
  *(_QWORD *)(v1 + 2168) = v5;
  v6 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v1 + 2176) = &type metadata for Fields;
  *(_QWORD *)(v1 + 2184) = v6;
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v8 = *(_QWORD *)(v2 + TupleTypeMetadata[16]);
  v9 = v2 + TupleTypeMetadata[12];
  *(_QWORD *)(v1 + 1296) = *(_QWORD *)(v2 + TupleTypeMetadata[20]);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 1368) + 32);
  v10(*(_QWORD *)(v1 + 1256), v2, v5);
  v11 = *(_QWORD *)(v1 + 1224);
  v10(v11, v9, v5);
  v12 = v11;
  *(_QWORD *)(v1 + 2416) = v8;
  v13 = MEMORY[0x23B8613CC](&unk_23B1DD478, v5);
  LOBYTE(v9) = sub_23AF219A4(v5, v13);
  v14 = sub_23AF219A4(v5, v13);
  if ((sub_23AFA7428(v14, v9) & 1) != 0)
  {
    *(_QWORD *)(v1 + 1288) = v13;
    sub_23AB00114();
  }
  swift_bridgeObjectRelease();
  if (*(_DWORD *)(v1 + 1312) != 4)
  {
    *(_QWORD *)(v1 + 2160) = 0;
    *(_QWORD *)(v1 + 2168) = 0xE000000000000000;
    sub_23B1C6EFC();
    v16 = *(_QWORD *)(v1 + 2168);
    *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 2160);
    *(_QWORD *)(v1 + 2168) = v16;
    sub_23B1C734C();
    MEMORY[0x23B8613CC](&unk_23B1DD494, *(_QWORD *)(v1 + 1336));
    sub_23B1C7340();
    sub_23B1C734C();
    sub_23B1C7340();
    sub_23B1C734C();
    (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(v1 + 1360) + 168))(*(_QWORD *)(v1 + 2160), *(_QWORD *)(v1 + 2168));
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
    *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
    *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
    *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
    type metadata accessor for JobResult();
  }
  v17 = type metadata accessor for FileTreeError(0, *(_QWORD *)(v1 + 1392), *(_QWORD *)(v1 + 1384), v15);
  MEMORY[0x23B8613CC](&unk_23B1D40CC, v17);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1368) + 8);
  v19 = *(_QWORD *)(v1 + 1336);
  v18(*(_QWORD *)(v1 + 1256), v19);
  v18(v12, v19);
  return v20 & 1;
}

void sub_23B102B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;

  *(_QWORD *)(v0 + 1400) = v1;
  if (!v1)
  {
    v5 = *(_QWORD *)(v0 + 1096);
    v6 = *(_QWORD *)(v0 + 1112);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v6) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1072) + 8))(v2, *(_QWORD *)(v0 + 1088));
      v7 = *(void (**)(uint64_t, uint64_t))(v0 + 1192);
    }
    else
    {
      v8 = *(_QWORD *)(v0 + 776);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8, v2, v6);
      v9 = sub_23AA9F3C4(16, *(_QWORD *)(v8 + *(int *)(*(_QWORD *)(v0 + 984) + 36)));
      v10 = v6;
      v11 = v9;
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v10);
      v7 = *(void (**)(uint64_t, uint64_t))(v0 + 1192);
      if (v11)
        JUMPOUT(0x23B1040ECLL);
    }
    v12 = *(_QWORD *)(v0 + 1400);
    v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v0 + 1328) + 464))(*(_QWORD *)(v0 + 1320));
    *(_QWORD *)(v0 + 1400) = v12;
    if (!v12)
    {
      if ((v13 & 1) == 0)
      {
        v14 = *(_QWORD *)(v0 + 1264);
        v15 = (_BYTE *)(v14 + *(int *)(v3 + 48));
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 1224))(v14, *(_QWORD *)(v0 + 1320), *(_QWORD *)(v4 - 72));
        swift_storeEnumTagMultiPayload();
        *v15 = 1;
        swift_storeEnumTagMultiPayload();
        v16 = *(_QWORD *)(v0 + 1272);
        swift_storeEnumTagMultiPayload();
        sub_23AEB700C(*(_QWORD *)(v0 + 1360), v14);
        v7(v14, v16);
        JUMPOUT(0x23B1040F4);
      }
      JUMPOUT(0x23B1040F0);
    }
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1368) + 8))(*(_QWORD *)(v0 + 992), *(_QWORD *)(v0 + 1336));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1280) + 8))(*(_QWORD *)(v0 + 1288), *(_QWORD *)(v0 + 1304));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1352) + 8))(*(_QWORD *)(v0 + 1248), *(_QWORD *)(v4 - 72));
  JUMPOUT(0x23B100EB8);
}

void sub_23B102B98(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2;
  if (v3)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v2);
    JUMPOUT(0x23B1012F4);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v7);
  if ((a1 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 1368) + 8))(*(_QWORD *)(v1 + 1296), v5);
    JUMPOUT(0x23B102A3CLL);
  }
  JUMPOUT(0x23B1025A8);
}

void sub_23B102CDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;

  v1[160] = a1;
  v8 = v2;
  v9 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  v1[165] = v6;
  v10 = v1[147];
  v11 = (_QWORD *)(v10 + v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1[171] + 16))(v10, v4, v8);
  v12 = v1[161];
  *v11 = v1[156];
  v11[1] = v12;
  v13 = v1[149];
  swift_storeEnumTagMultiPayload();
  sub_23AEB7038(v3, v10);
  (*(void (**)(uint64_t, uint64_t))(v1[148] + 8))(v10, v13);
  v14 = v1[155];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1[270] = *(_QWORD *)(v7 - 72);
  v1[271] = v14;
  v1[272] = v5;
  v1[273] = AssociatedConformanceWitness;
  type metadata accessor for ReconciliationID();
}

void sub_23B102DB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  char v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  void (*v54)(char *);
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t TupleTypeMetadata3;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  _WORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  char v86;
  BOOL v87;
  _BYTE *v88;

  *(_QWORD *)(v1 + 1304) = a1;
  v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 1352) + 16);
  v9 = *(_QWORD *)(v1 + 1264);
  v10 = *(_QWORD *)(v1 + 1296);
  *(_QWORD *)(v1 + 1352) = v8;
  v8(v9, v10, v5);
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v9 + v7) = sub_23AF219A4(v2, *(_QWORD *)(v1 + 1320));
  v11 = *(_QWORD *)(v1 + 1272);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4, v9);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1232) + 8);
  *(_QWORD *)(v1 + 1248) = v12;
  v12(v9, v11);
  if (sub_23AE4F6B4())
  {
    type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v1 + 1392), *(_QWORD *)(v1 + 1384), v13);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v15 = *(_QWORD *)(v1 + 1264);
    v16 = (_QWORD *)(v15 + *(int *)(TupleTypeMetadata2 + 48));
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v15, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
    v17 = swift_storeEnumTagMultiPayload();
    *v16 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + 1408) + 272))(v17);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_23AEB700C(*(_QWORD *)(v1 + 1360), v15);
    (*(void (**)(uint64_t, uint64_t))(v1 + 1248))(v15, v11);
  }
  *(_QWORD *)(v1 + 1912) = *sub_23AFA7BFC();
  v18 = *(_DWORD *)(v1 + 1256);
  if (*(_DWORD *)(v1 + 1312) == 3)
    v18 = 0;
  v19 = *(_QWORD *)(v1 + 1048);
  if (v18 == 1)
    sub_23AAA0ECC((_QWORD *)(v1 + 2160), 0x80000000000);
  v20 = *(_QWORD *)(v1 + 1336);
  v21 = *(_QWORD *)(v1 + 1296) + *(int *)(v20 + 48);
  v22 = *(int *)(v19 + 140);
  *(_QWORD *)(v1 + 1288) = v21;
  v23 = *(_QWORD *)(v1 + 1384);
  v24 = *(_QWORD *)(v1 + 1392);
  v25 = *(_QWORD *)(v1 + 944);
  if (*(_BYTE *)(v21 + v22) == 1)
    sub_23AAA0ECC((_QWORD *)(v1 + 2160), 0x8000);
  v26 = *(_QWORD *)(v1 + 1296);
  v27 = sub_23AF219A4(v20, *(_QWORD *)(v1 + 1320));
  if (!sub_23AFA7480(v27))
  {
    v58 = *(_QWORD *)(v1 + 1400);
    (*(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v1 + 1408) + 16) + 160))(v26);
    *(_QWORD *)(v1 + 1400) = v58;
    if (v58)
LABEL_48:
      JUMPOUT(0x23B104158);
    v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 856) + 48))(v25, 1, v3);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 832) + 8))(v25, *(_QWORD *)(v1 + 840));
    if (v78 != 1)
      sub_23AAB51D0(8);
  }
  v29 = *(void (**)(uint64_t, uint64_t))(v1 + 1248);
  v30 = type metadata accessor for ReconciliationSideMutation(255, v24, v23, v28);
  v31 = swift_getTupleTypeMetadata2();
  v32 = *(_QWORD *)(v1 + 1264);
  v33 = (_QWORD *)(v32 + *(int *)(v31 + 48));
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v32, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
  swift_storeEnumTagMultiPayload();
  v34 = *(_QWORD *)(v1 + 1144);
  *v33 = *(_QWORD *)(v1 + 1912);
  v33[1] = v34;
  v33[2] = *(_QWORD *)(v1 + 1152);
  swift_storeEnumTagMultiPayload();
  v35 = *(_QWORD *)(v1 + 1272);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v1 + 1360), v32);
  v29(v32, v35);
  v36 = *(_DWORD *)(v1 + 1312);
  v37 = v36 - 3;
  *(_QWORD *)(v1 + 1256) = v30;
  if (v36 == 3
    && ((*(_DWORD *)(v1 + 1216) | *(unsigned __int8 *)(*(_QWORD *)(v1 + 1288) + *(int *)(*(_QWORD *)(v1 + 1048) + 64))) & 1) == 0)
  {
    v79 = *(_QWORD *)(v1 + 1264);
    v80 = (_WORD *)(v79 + *(int *)(v31 + 48));
    v81 = *(_QWORD *)(v1 + 1296);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v1 + 1352))(v79, v81, *(_QWORD *)(v6 - 72));
    swift_storeEnumTagMultiPayload();
    *v80 = 0;
    swift_storeEnumTagMultiPayload();
    v82 = *(_QWORD *)(v1 + 1272);
    swift_storeEnumTagMultiPayload();
    sub_23AEB700C(*(_QWORD *)(v1 + 1360), v79);
    v29(v79, v82);
    if (*(_BYTE *)(*(_QWORD *)(v1 + 1288) + *(int *)(*(_QWORD *)(v1 + 1048) + 80)) == 1)
    {
      v83 = *(_QWORD *)(v1 + 1264);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v1 + 1352))(v83, v81, *(_QWORD *)(v6 - 72));
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      v84 = *(_QWORD *)(v1 + 1272);
      swift_storeEnumTagMultiPayload();
      sub_23AEB700C(*(_QWORD *)(v1 + 1360), v83);
      v29(v83, v84);
    }
    v85 = v29;
    v48 = v31;
    v86 = sub_23AF219A4(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1320));
    v87 = sub_23AAB3058(v86);
    v52 = *(_QWORD *)(v1 + 1360);
    v51 = *(_QWORD *)(v1 + 1272);
    v49 = *(_QWORD *)(v1 + 1264);
    v47 = v85;
    if (v87 || !sub_23AE4F6B4())
    {
LABEL_25:
      v53 = (_BYTE *)(v49 + *(int *)(v48 + 48));
      v54 = *(void (**)(char *))(v1 + 1296);
      (*(void (**)(uint64_t, void (*)(char *), _QWORD))(v1 + 1352))(v49, v54, *(_QWORD *)(v6 - 72));
      swift_storeEnumTagMultiPayload();
      v55 = *(int **)(v1 + 1048);
      *v53 = *(_BYTE *)(*(_QWORD *)(v1 + 1288) + v55[16]);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_23AEB700C(v52, v49);
      v47(v49, v51);
      if (*(_DWORD *)(v1 + 1208))
      {
        v56 = *(_QWORD *)(v1 + 1400);
        sub_23B0FEBA0(v54, *(uint64_t **)(v1 + 1408), v52);
        *(_QWORD *)(v1 + 1400) = v56;
        v57 = *(_QWORD *)(v1 + 1344);
        if (v56)
          goto LABEL_48;
      }
      else
      {
        v57 = *(_QWORD *)(v1 + 1344);
      }
      if (sub_23AA9F3D0(1, *(_QWORD *)(v1 + 952)) && !sub_23AE4F6B4())
      {
        type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v1 + 1376), v57, v59);
        v60 = swift_getTupleTypeMetadata2();
        v61 = *(_QWORD *)(v1 + 1264);
        v62 = v61 + *(int *)(v60 + 48);
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v61, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
        swift_storeEnumTagMultiPayload();
        *(_WORD *)v62 = 515;
        v63 = *(_QWORD *)(v1 + 1152);
        *(_QWORD *)(v62 + 8) = *(_QWORD *)(v1 + 1144);
        *(_QWORD *)(v62 + 16) = v63;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_23AEB700C(v52, v61);
        v64 = v61;
        v47 = *(void (**)(uint64_t, uint64_t))(v1 + 1248);
        v47(v64, v51);
      }
      if (sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v1 + 1288) + v55[22]), 2))
      {
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        v66 = *(int *)(TupleTypeMetadata3 + 48);
        v67 = *(int *)(TupleTypeMetadata3 + 64);
        v68 = *(_QWORD *)(v1 + 1264);
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v68, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)(v68 + v66) = 2;
        v69 = sub_23ACD8490(0);
        v70 = sub_23AFD7BC8(v69);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v68 + v67) = v70;
        v52 = *(_QWORD *)(v1 + 1360);
        swift_storeEnumTagMultiPayload();
        sub_23AEB700C(v52, v68);
        v71 = v68;
        v47 = *(void (**)(uint64_t, uint64_t))(v1 + 1248);
        v47(v71, v51);
      }
      if (*(_BYTE *)(*(_QWORD *)(v1 + 1288) + v55[23]) == 1)
      {
        v72 = swift_getTupleTypeMetadata2();
        v73 = *(_QWORD *)(v1 + 1264);
        v74 = v73 + *(int *)(v72 + 48);
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v73, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)v74 = 4;
        *(_BYTE *)(v74 + 8) = 0;
        swift_storeEnumTagMultiPayload();
        sub_23AEB700C(v52, v73);
        v47(v73, v51);
      }
      if (*(_BYTE *)(*(_QWORD *)(v1 + 1288) + v55[24]) == 1)
      {
        v75 = swift_getTupleTypeMetadata2();
        v76 = *(_QWORD *)(v1 + 1264);
        v77 = v76 + *(int *)(v75 + 48);
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v76, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)v77 = 8;
        *(_BYTE *)(v77 + 8) = 0;
        swift_storeEnumTagMultiPayload();
        sub_23AEB700C(v52, v76);
        v47(v76, v51);
      }
      JUMPOUT(0x23B100EB0);
    }
    v88 = (_BYTE *)(v49 + *(int *)(v48 + 48));
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v49, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
    swift_storeEnumTagMultiPayload();
    *v88 = 2;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    if (sub_23AE4F6B4() || (v38 = sub_23AF219A4(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1320)), !sub_23AFA7B8C(v38)))
    {
      v39 = *(_QWORD *)(v1 + 1264);
      v40 = (_BYTE *)(v39 + *(int *)(v31 + 48));
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v39, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
      swift_storeEnumTagMultiPayload();
      *v40 = 2;
      swift_storeEnumTagMultiPayload();
      v41 = *(_QWORD *)(v1 + 1272);
      swift_storeEnumTagMultiPayload();
      sub_23AEB700C(*(_QWORD *)(v1 + 1360), v39);
      v42 = v39;
      v24 = *(_QWORD *)(v1 + 1392);
      v29(v42, v41);
    }
    v43 = v31;
    v44 = v37 >= 2;
    v45 = *(_QWORD *)(v1 + 1336);
    if (v44
      && sub_23AE4F6B4()
      && (sub_23AF21910(v45, *(_QWORD *)(v1 + 1320)) & 1) != 0
      && (v46 = sub_23AF219A4(v45, *(_QWORD *)(v1 + 1320)), sub_23AFA7480(v46))
      || *(_DWORD *)(v1 + 1216) && (sub_23AF21910(v45, *(_QWORD *)(v1 + 1320)) & 1) != 0)
    {
      *(_QWORD *)(v1 + 2160) = v24;
      *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
      *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
      *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
      type metadata accessor for Ingestion.DeleteRejectedItemInTree();
    }
    v47 = v29;
    v48 = v43;
    v49 = *(_QWORD *)(v1 + 1264);
    v50 = (_BYTE *)(v49 + *(int *)(v43 + 48));
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1352))(v49, *(_QWORD *)(v1 + 1296), *(_QWORD *)(v6 - 72));
    swift_storeEnumTagMultiPayload();
    *v50 = 0;
    swift_storeEnumTagMultiPayload();
  }
  v51 = *(_QWORD *)(v1 + 1272);
  swift_storeEnumTagMultiPayload();
  v52 = *(_QWORD *)(v1 + 1360);
  sub_23AEB700C(v52, v49);
  v47(v49, v51);
  goto LABEL_25;
}

void sub_23B1037CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t MetatypeMetadata;

  v1[153] = a1;
  MetatypeMetadata = swift_getMetatypeMetadata();
  sub_23AFD4CB4(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  sub_23B1C6728();
  v1[270] = v1[174];
  v1[271] = v1[172];
  v1[272] = v1[173];
  v1[273] = v2;
  type metadata accessor for Ingestion.TrackTemporaryItem();
}

void sub_23B103834(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *);
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  *v4 = a1;
  v6 = v3;
  v7 = v1[115];
  v8 = sub_23AD7D55C(v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)*v1 + 272))(v7, v8);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    JUMPOUT(0x23B103890);
  }
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v1[153];
  if (MEMORY[0x23B85F0E0](v10, v11))
  {
    v12 = 0;
    do
    {
      v13 = v10;
      v14 = sub_23AB22848(v1 + 270, v12, v10, v11);
      v16 = *v15;
      swift_retain();
      ((void (*)(_QWORD *, _QWORD))v14)(v1 + 270, 0);
      v17 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        JUMPOUT(0x23B106D84);
      }
      if (*(unsigned __int8 *)(v16 + 104) <= 1u)
      {
        v1[270] = v1[174];
        v1[271] = v1[172];
        v1[272] = v1[173];
        v1[273] = v1[168];
        type metadata accessor for JobResult();
      }
      swift_release();
      v10 = v13;
      ++v12;
    }
    while (v17 != MEMORY[0x23B85F0E0](v13, v11));
  }
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(v1[169] + 8))(v1[115], *(_QWORD *)(v5 - 72));
  JUMPOUT(0x23B102958);
}

void sub_23B103960()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[270] = v4;
  v0[271] = v2;
  v0[272] = v3;
  v0[273] = v1;
  type metadata accessor for Ingestion.DeleteRejectedItemInTree();
}

void sub_23B103980(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  v4 = sub_23ADA8168(a1);
  v6 = sub_23B1270E0(v3, v4, v5, 0x10000000);
  sub_23AE181A4(v1[170], v6);
  swift_release();
  v7 = *(void (**)(uint64_t, uint64_t))(v1[171] + 8);
  v8 = v1[167];
  v7(v1[157], v8);
  v9 = *(void (**)(uint64_t, uint64_t))(v1[134] + 8);
  v10 = v1[136];
  v9(v2, v10);
  v9(v1[141], v10);
  v7(v3, v8);
  JUMPOUT(0x23B100EB4);
}

void sub_23B103A38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;

  v1[160] = a1;
  v3 = *(_QWORD *)(v2 - 72);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = v1[155];
  v6 = swift_getAssociatedConformanceWitness();
  v1[270] = v3;
  v1[271] = v5;
  v1[272] = AssociatedConformanceWitness;
  v1[273] = v6;
  type metadata accessor for ReconciliationID();
}

void sub_23B103AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, _QWORD);
  uint64_t AssociatedConformanceWitness;
  uint64_t v41;
  int v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;

  v4 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1352) + 16);
  v6 = *(_QWORD *)(v0 + 1264);
  v5(v6, *(_QWORD *)(v0 + 1224), v1);
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v6 + v4) = sub_23AF219A4(*(_QWORD *)(v0 + 1336), *(_QWORD *)(v0 + 1288));
  v7 = *(_QWORD *)(v0 + 1272);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v0 + 1360), v6);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 1232) + 8);
  *(_QWORD *)(v0 + 1248) = v8;
  v8(v6, v7);
  v10 = type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v0 + 1392), *(_QWORD *)(v0 + 1384), v9);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v0 + 1160) = TupleTypeMetadata2;
  v12 = (uint64_t *)(v6 + *(int *)(TupleTypeMetadata2 + 48));
  v13 = *(_QWORD *)(v0 + 1224);
  v14 = *(_QWORD *)(v3 - 72);
  *(_QWORD *)(v0 + 1200) = v5;
  v5(v6, v13, v14);
  swift_storeEnumTagMultiPayload();
  v15 = *sub_23AFA7BFC();
  v16 = sub_23ADA816C();
  *v12 = v15;
  v12[1] = v16;
  v12[2] = v17;
  *(_QWORD *)(v0 + 1168) = v10;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v0 + 1360), v6);
  v18 = v7;
  v19 = *(_QWORD *)(v0 + 1224);
  (*(void (**)(uint64_t, uint64_t))(v0 + 1248))(v6, v18);
  if (sub_23AE4F6B4())
  {
    v20 = *(_QWORD *)(v0 + 1264);
    v21 = (_QWORD *)(v20 + *(int *)(*(_QWORD *)(v0 + 1160) + 48));
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v0 + 1200))(v20, v19, *(_QWORD *)(v3 - 72));
    v22 = swift_storeEnumTagMultiPayload();
    *v21 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 1408) + 272))(v22);
    swift_storeEnumTagMultiPayload();
    v23 = *(_QWORD *)(v0 + 1272);
    swift_storeEnumTagMultiPayload();
    sub_23AEB700C(*(_QWORD *)(v0 + 1360), v20);
    (*(void (**)(uint64_t, uint64_t))(v0 + 1248))(v20, v23);
  }
  v24 = sub_23AE4F6B4();
  v25 = *(_QWORD *)(v0 + 1056);
  if (v24
    || (v26 = sub_23AF219A4(*(_QWORD *)(v0 + 1336), *(_QWORD *)(v0 + 1288)), v27 = sub_23AFA7B8C(v26), (v27 & 1) == 0))
  {
    v28 = *(_QWORD *)(v0 + 1264);
    v29 = (_BYTE *)(v28 + *(int *)(*(_QWORD *)(v0 + 1160) + 48));
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 1200))(v28, *(_QWORD *)(v0 + 1224), *(_QWORD *)(v3 - 72));
    swift_storeEnumTagMultiPayload();
    *v29 = 2;
    swift_storeEnumTagMultiPayload();
    v30 = *(_QWORD *)(v0 + 1272);
    swift_storeEnumTagMultiPayload();
    sub_23AEB700C(*(_QWORD *)(v0 + 1360), v28);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 1248))(v28, v30);
  }
  v31 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 1408) + 152);
  *(_QWORD *)(v0 + 1168) = v31;
  v32 = v31(v27);
  if (sub_23AA9F3D0(0x4000, v32))
  {
    v33 = v25;
    v34 = *(_QWORD *)(v0 + 1072);
    v35 = *(_QWORD *)(v0 + 896);
    v36 = *(_QWORD *)(v0 + 1088);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v33, v36);
    v37 = *(_QWORD *)(v0 + 1112);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1304))(v35, 1, v37) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 1096);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v2, v35, v37);
      if (*(_DWORD *)(v0 + 1312) != 4)
        JUMPOUT(0x23B10434CLL);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v2, v37);
    }
  }
  v39 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 1304);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v0 + 1248) = AssociatedConformanceWitness;
  *(_QWORD *)(v0 + 1160) = *(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 32) + 8);
  if ((sub_23B1C63A4() & 1) == 0 && sub_23AA9F3D0(2, *(_QWORD *)(v0 + 2416)))
  {
    v41 = *(_QWORD *)(v0 + 1128);
    v42 = v39(v41, 1, *(_QWORD *)(v0 + 1112));
    v43 = *(_QWORD *)(v0 + 1072);
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
    v45 = *(_QWORD *)(v0 + 800);
    v46 = *(_QWORD *)(v0 + 1088);
    v44(v45, v41, v46);
    if (v42 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v46);
      v44(*(_QWORD *)(v0 + 808), v41, v46);
      JUMPOUT(0x23B10471CLL);
    }
    JUMPOUT(0x23B1043D0);
  }
  JUMPOUT(0x23B1048A4);
}

void sub_23B104194()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = swift_dynamicCastClass();
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 88);
    v6 = *(_QWORD *)(v4 + 96);
    v7 = *(_BYTE *)(v4 + 104);
    if (sub_23B12B404(v5, v6, v7) || sub_23B12B3D0(v5, v6, v7))
    {
      swift_release();
    }
    else
    {
      v8 = sub_23AF1ADBC();
      swift_retain();
      v9 = *(_QWORD *)(v0 + 1360);
      sub_23AE1ACCC(v9, v8);
      swift_release();
      v10 = *(_QWORD *)(v0 + 1264);
      v11 = v10 + *(int *)(*(_QWORD *)(v0 + 1192) + 48);
      v1(v10, v2, *(_QWORD *)(v3 - 72));
      swift_storeEnumTagMultiPayload();
      *(_OWORD *)v11 = xmmword_23B1CFCA0;
      *(_BYTE *)(v11 + 16) = 4;
      swift_storeEnumTagMultiPayload();
      v12 = *(_QWORD *)(v0 + 1272);
      swift_storeEnumTagMultiPayload();
      sub_23AEB700C(v9, v10);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v0 + 1232))(v10, v12);
    }
    JUMPOUT(0x23B105588);
  }
  swift_release();
  JUMPOUT(0x23B1046FCLL);
}

void sub_23B1042B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 1400) = a1;
  v2 = sub_23AF1ADBC();
  swift_retain();
  sub_23AE181A4(*(_QWORD *)(v1 + 1360), v2);
  swift_release();
  JUMPOUT(0x23B104218);
}

void sub_23B10435C(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  void (*v8)(_QWORD, uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v4 = v1[132];
  if (v2)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, _QWORD))(v1[137] + 8))(v3, v1[139]);
    (*(void (**)(_QWORD, _QWORD))(v1[171] + 8))(v1[157], v1[167]);
    v5 = *(void (**)(uint64_t, uint64_t))(v1[134] + 8);
    v6 = v1[136];
    v5(v4, v6);
    v5(v1[141], v6);
    JUMPOUT(0x23B10153CLL);
  }
  v1[175] = 0;
  (*(void (**)(uint64_t, _QWORD))(v1[137] + 8))(v3, v1[139]);
  if ((a1 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v8 = *(void (**)(_QWORD, uint64_t))(v1[171] + 8);
    v9 = v1[167];
    v8(v1[157], v9);
    v10 = *(void (**)(uint64_t, uint64_t))(v1[134] + 8);
    v11 = v1[136];
    v10(v4, v11);
    v10(v1[141], v11);
    v8(v1[153], v9);
    JUMPOUT(0x23B100EB8);
  }
  JUMPOUT(0x23B103E00);
}

void sub_23B104518()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0[175] = v2;
  v0[270] = v5;
  v0[271] = v3;
  v0[272] = v4;
  v0[273] = v1;
  type metadata accessor for Ingestion.FaultDirectoryInTree();
}

void sub_23B10453C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_23AD3B904(v0[165], v0[143], v0[144], 0x10000);
  sub_23AE181A4(v0[170], v1);
  swift_release();
  JUMPOUT(0x23B104578);
}

void sub_23B10484C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[270] = v4;
  v0[271] = v3;
  v0[272] = v2;
  v0[273] = v1;
  type metadata accessor for Materialization.MaterializeParentHierarchy();
}

void sub_23B104870()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23AD3B900(v1, v0[143], v0[144], v0[119]);
  sub_23AE181A4(v0[170], v2);
  swift_release();
  JUMPOUT(0x23B1048A4);
}

void sub_23B104950(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *TupleTypeMetadata;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  int v43;
  char v44;
  BOOL v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t AssociatedConformanceWitness;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  void (*v68)(_QWORD *);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(_QWORD, uint64_t);
  uint64_t v88;
  void (*v89)(_QWORD, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  BOOL v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BOOL4 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *);
  uint64_t v129;
  uint64_t v130;
  char v131;
  BOOL v132;
  void (*v133)(void (*)(char *), uint64_t, _QWORD);
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(uint64_t, uint64_t, uint64_t);
  BOOL v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t);
  void (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unsigned __int8 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  void (*v174)(_QWORD, uint64_t, _QWORD);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t);
  uint64_t v183;
  void (*v184)(uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  void (*v191)(uint64_t, uint64_t);
  void (*v192)(uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  BOOL v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  BOOL v218;
  void (*v219)(void);
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  BOOL v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  BOOL v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  BOOL v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  BOOL v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  BOOL v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unsigned __int8 v272;
  BOOL v273;
  uint64_t v274;
  char v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unsigned __int8 v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  BOOL v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  unsigned int (*v314)(uint64_t, uint64_t, uint64_t);
  void (*v315)(_QWORD, uint64_t);
  uint64_t v316;
  uint64_t v317;
  unsigned int (*v318)(uint64_t, uint64_t, uint64_t);
  uint64_t v319;
  uint64_t v320;
  void (*v321)(char *);
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  int v326;
  void (*v327)(uint64_t, uint64_t);
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  _OWORD *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  void (*v337)(_QWORD, uint64_t);
  uint64_t v338;
  uint64_t v339;
  unsigned int v340;
  uint64_t v341;
  uint64_t v342;
  unsigned int (*v343)(uint64_t, uint64_t, uint64_t);
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *Strong;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  BOOL v356;
  uint64_t v357;
  int v358;
  uint64_t v359;
  uint64_t v360;
  BOOL v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  BOOL v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  _BOOL4 v376;
  void (*v377)(_QWORD, uint64_t);
  void (*v378)(uint64_t, uint64_t);
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  void (*v387)(_QWORD, uint64_t);
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  uint64_t v395;
  BOOL v396;
  char v397;
  uint64_t v398;
  uint64_t v399;
  char v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;

  *(_QWORD *)(v1 + 1280) = a1;
  MEMORY[0x24BDAC7A8](a1);
  v4 = *(_QWORD *)(v1 + 1336);
  *(_QWORD *)(v1 + 2160) = v4;
  *(_QWORD *)(v1 + 2168) = v4;
  *(_QWORD *)(v1 + 2176) = &type metadata for Fields;
  *(_QWORD *)(v1 + 2184) = MEMORY[0x24BEE0D00];
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v6 = *(_QWORD *)(v1 + 1176);
  v7 = v6 + TupleTypeMetadata[12];
  v8 = TupleTypeMetadata[16];
  v9 = (_QWORD *)(v6 + TupleTypeMetadata[20]);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 1368) + 16);
  v10(v6, *(_QWORD *)(v1 + 1256), v4);
  v11 = *(_QWORD *)(v1 + 1224);
  *(_QWORD *)(v1 + 1136) = v10;
  v10(v7, v11, v4);
  *(_QWORD *)(v6 + v8) = *(_QWORD *)(v1 + 2416);
  *v9 = *(_QWORD *)(v1 + 1296);
  v9[1] = v2;
  v12 = *(_QWORD *)(v1 + 1192);
  swift_storeEnumTagMultiPayload();
  sub_23AEB7038(*(_QWORD *)(v1 + 1360), v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1184) + 8))(v6, v12);
  v13 = sub_23AE4F6B4();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 16);
  v15 = *(_QWORD *)(v1 + 1096);
  v16 = *(_QWORD *)(v1 + 1056);
  v17 = *(_QWORD *)(v1 + 864);
  v18 = *(_QWORD *)(v1 + 888);
  if (v13)
  {
    v19 = *(_QWORD *)(v1 + 752);
    v20 = *(_QWORD *)(v1 + 1088);
    v14(v19, *(_QWORD *)(v1 + 1056), v20);
    v21 = *(_QWORD *)(v1 + 1112);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v19, 1, v21) != 1)
    {
      v22 = *(_QWORD *)(v1 + 960);
      v23 = v19;
      v24 = *(_QWORD *)(v1 + 656);
      v25 = *(_QWORD *)(v1 + 984);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v23, v25);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v23, v21);
      if (qword_2542E7190 == -1)
        goto LABEL_5;
      goto LABEL_309;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v19, v20);
  }
  while (1)
  {
    v29 = *(_QWORD *)(v1 + 1088);
    v14(v18, *(_QWORD *)(v1 + 1128), v29);
    v30 = *(_QWORD *)(v1 + 1112);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v18, 1, v30);
    *(_QWORD *)(v1 + 1296) = v14;
    if (v31 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v18, v29);
    }
    else
    {
      v32 = v18;
      v33 = *(_QWORD *)(v1 + 960);
      v34 = *(_QWORD *)(v1 + 936);
      v35 = *(_QWORD *)(v1 + 984);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v34, v32, v35);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v32, v30);
      v36 = *(_QWORD *)(v34 + *(int *)(v35 + 36));
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v35);
      if (sub_23AA9F3C4(4, v36))
      {
        *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
        *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
        *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
        *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
        type metadata accessor for ItemJob();
      }
      v29 = *(_QWORD *)(v1 + 1088);
      v16 = *(_QWORD *)(v1 + 1056);
    }
    v14(v17, v16, v29);
    v37 = *(_QWORD *)(v1 + 1112);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v17, 1, v37) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v17, v29);
    }
    else
    {
      v38 = *(_QWORD *)(v1 + 824);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v38, v17, v37);
      v39 = *(_QWORD *)(v38 + *(int *)(*(_QWORD *)(v1 + 984) + 36));
      if (sub_23AA9F490(v39))
      {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v38, v37);
      }
      else
      {
        if (sub_23AA9F3C4(4, v39))
        {
          *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
          *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
          *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
          *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
          type metadata accessor for ItemJob();
        }
        v57 = *(_QWORD *)(v3 - 72);
        if (sub_23AE4F6B4())
        {
          v63 = *(_QWORD *)(v1 + 1240);
          AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          *(_QWORD *)(v1 + 2160) = v57;
          *(_QWORD *)(v1 + 2168) = v63;
          *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
          *(_QWORD *)(v1 + 2184) = AssociatedConformanceWitness;
          type metadata accessor for ReconciliationID();
        }
        (*(void (**)(_QWORD, _QWORD))(v15 + 8))(*(_QWORD *)(v1 + 824), *(_QWORD *)(v1 + 1112));
      }
    }
    v40 = *(_QWORD *)(v1 + 952);
    if (sub_23AA9F3D0(0x4000000, v40))
    {
      v41 = sub_23AF219A4(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1288));
      if (sub_23AC37B08(v41, 1))
      {
        *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
        *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
        *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
        *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
        type metadata accessor for Ingestion.FetchChildrenMetadata();
      }
    }
    v42 = sub_23AA9F3D0(0x1000000000, v40);
    v43 = sub_23AA9F3D0(0x2000000000, v40);
    if (sub_23AE4F6B4())
    {
      v44 = sub_23AF219A4(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1288));
      v45 = sub_23AC37B08(v44, 1);
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
      if (v45
        && sub_23AA9F3D0(0x100000000000, *(_QWORD *)(v1 + 2416))
        && (v47 = *(_QWORD *)(v1 + 1224) + *(int *)(*(_QWORD *)(v1 + 1336) + 48),
            v48 = *(_QWORD *)(v1 + 1048),
            (*(_BYTE *)(v47 + *(int *)(v48 + 64)) & 1) == 0))
      {
        v49 = *(_QWORD *)(v1 + 952);
        if (*(_BYTE *)(v47 + *(int *)(v48 + 60)) != 1)
          goto LABEL_55;
        v62 = *(_QWORD *)(v1 + 296);
        v46(v62, v16, *(_QWORD *)(v1 + 1088));
        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 1304))(v62, 1, *(_QWORD *)(v1 + 1112)) == 1)
        {
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1072) + 8))(v62, *(_QWORD *)(v1 + 1088));
          v16 = *(_QWORD *)(v1 + 1056);
          v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
LABEL_55:
          v42 = 1;
          goto LABEL_25;
        }
        v91 = *(_QWORD *)(v1 + 216);
        v92 = *(_QWORD *)(v1 + 1112);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v91, v62, v92);
        v93 = sub_23AA9F3C4(16, *(_QWORD *)(v91 + *(int *)(*(_QWORD *)(v1 + 984) + 36)));
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v91, v92);
        v16 = *(_QWORD *)(v1 + 1056);
        v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
        if (!v93)
          goto LABEL_55;
      }
      else
      {
        v49 = *(_QWORD *)(v1 + 952);
      }
    }
    else
    {
      v49 = *(_QWORD *)(v1 + 952);
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
    }
LABEL_25:
    if (!sub_23AE4F6B4() || !sub_23AA9F3D0(2, *(_QWORD *)(v1 + 2416)))
      goto LABEL_59;
    *(_DWORD *)(v1 + 1192) = v42;
    *(_DWORD *)(v1 + 1200) = v43;
    v50 = *(_QWORD *)(v1 + 1336);
    v51 = *(_QWORD *)(v1 + 1256);
    v52 = v51 + *(int *)(v50 + 36);
    v53 = *(_QWORD *)(v1 + 1400);
    v54 = (*(uint64_t (**)(uint64_t, _QWORD))(**(_QWORD **)(v1 + 1328) + 528))(v52, *(_QWORD *)(v1 + 1216));
    if (v53)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1368) + 8))(v51, v50);
      v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8);
      v56 = *(_QWORD *)(v1 + 1088);
      v55(v16, v56);
      v55(*(_QWORD *)(v1 + 1128), v56);
      JUMPOUT(0x23B101540);
    }
    v58 = v54;
    *(_QWORD *)(v1 + 1176) = v52;
    *(_QWORD *)(v1 + 2160) = v54;
    v25 = *(_QWORD *)(v3 - 72);
    v59 = sub_23B1C67DC();
    MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v59);
    v60 = v58;
    if ((sub_23B1C69B0() & 1) != 0)
    {
      *(_QWORD *)(v1 + 1400) = 0;
      swift_bridgeObjectRelease();
      v42 = *(_DWORD *)(v1 + 1192);
      v15 = *(_QWORD *)(v1 + 1096);
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
      if ((v42 & *(_DWORD *)(v1 + 1200) & 1) != 0)
      {
        v61 = 1;
        LOBYTE(v42) = 1;
        v16 = *(_QWORD *)(v1 + 1056);
        goto LABEL_61;
      }
LABEL_52:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
      v80 = swift_allocObject();
      v81 = sub_23B1A1F64(v80, 2);
      *v82 = xmmword_23B1DA9E0;
      v83 = nullsub_1(v81);
      v84 = sub_23AFD7BC8(v83);
      swift_bridgeObjectRelease();
      v85 = *(_QWORD *)(v1 + 1400);
      v86 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v1 + 1328) + 448))(*(_QWORD *)(v1 + 1176), v84);
      if (v85)
      {
        v87 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 1368) + 8);
        v88 = *(_QWORD *)(v1 + 1336);
        v87(*(_QWORD *)(v1 + 1256), v88);
        v89 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 1072) + 8);
        v90 = *(_QWORD *)(v1 + 1088);
        v89(*(_QWORD *)(v1 + 1056), v90);
        v89(*(_QWORD *)(v1 + 1128), v90);
        v87(*(_QWORD *)(v1 + 1224), v88);
        goto LABEL_315;
      }
      v94 = v86;
      v42 |= sub_23AA9F3D0(0x1000000000, v86);
      v95 = sub_23AA9F3D0(0x2000000000, v94);
      *(_QWORD *)(v1 + 1400) = 0;
      if (v95)
      {
        v61 = 1;
        goto LABEL_282;
      }
      v15 = *(_QWORD *)(v1 + 1096);
      v49 = *(_QWORD *)(v1 + 952);
      v16 = *(_QWORD *)(v1 + 1056);
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
      v43 = *(_DWORD *)(v1 + 1200);
LABEL_59:
      if (((v42 | v43) & 1) != 0)
      {
        v61 = v42 ^ 1 | v43;
        goto LABEL_61;
      }
      goto LABEL_78;
    }
    v17 = 0;
    v65 = MEMORY[0x23B85F0E0](v58, v25);
    v66 = *(_QWORD *)(v1 + 1352);
    if (!v65)
    {
LABEL_51:
      *(_QWORD *)(v1 + 1400) = 0;
      swift_bridgeObjectRelease();
      v42 = 1;
      v61 = 1;
      v15 = *(_QWORD *)(v1 + 1096);
      v49 = *(_QWORD *)(v1 + 952);
      v16 = *(_QWORD *)(v1 + 1056);
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
      if ((*(_DWORD *)(v1 + 1200) & 1) != 0)
        goto LABEL_61;
      goto LABEL_52;
    }
    v22 = 0;
    *(_QWORD *)(v1 + 1400) = *(_QWORD *)(**(_QWORD **)(v1 + 1208) + 160);
    v15 = *(_QWORD *)(v1 + 608);
    *(_QWORD *)(v1 + 1184) = v60;
    while (1)
    {
      v68 = sub_23AB22848((_QWORD *)(v1 + 2160), v22, v60, v25);
      v24 = *(_QWORD *)(v1 + 672);
      (*(void (**)(uint64_t))(v66 + 16))(v24);
      ((void (*)(uint64_t, _QWORD))v68)(v1 + 2160, 0);
      v69 = v66;
      v14 = (void (*)(uint64_t, uint64_t, uint64_t))(v22 + 1);
      if (__OFADD__(v22, 1))
        break;
      v70 = *(_QWORD *)(v1 + 768);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v70, v24, v25);
      (*(void (**)(uint64_t))(v1 + 1400))(v70);
      v71 = *(_QWORD *)(v1 + 856);
      v72 = *(_QWORD *)(v1 + 1240);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v15, 1, v72) == 1)
      {
        v25 = *(_QWORD *)(v3 - 72);
        (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 1352) + 8))(*(_QWORD *)(v1 + 768), v25);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 832) + 8))(v15, *(_QWORD *)(v1 + 840));
      }
      else
      {
        v73 = *(_QWORD *)(v1 + 576);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v73, v15, v72);
        v74 = *(_QWORD *)(v1 + 584);
        (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v1 + 1408) + 40) + 240))(v73, 1);
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v73, v72);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1352) + 8))(*(_QWORD *)(v1 + 768), *(_QWORD *)(v3 - 72));
        v75 = *(_QWORD *)(v1 + 560);
        v76 = *(_QWORD *)(v1 + 568);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v74, 1, v76) == 1)
        {
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 472) + 8))(v74, *(_QWORD *)(v1 + 480));
          v25 = *(_QWORD *)(v3 - 72);
          v15 = *(_QWORD *)(v1 + 608);
          v60 = *(_QWORD *)(v1 + 1184);
        }
        else
        {
          v77 = *(_QWORD *)(v1 + 464);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v77, v74, v76);
          v78 = v76;
          v79 = *(unsigned __int8 *)(v77 + *(int *)(v76 + 48) + *(int *)(*(_QWORD *)(v1 + 1048) + 60));
          (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v77, v78);
          v60 = *(_QWORD *)(v1 + 1184);
          if (v79 == 1)
          {
            swift_bridgeObjectRelease();
            v61 = 1;
            LOBYTE(v42) = 1;
            *(_QWORD *)(v1 + 1400) = 0;
LABEL_282:
            v15 = *(_QWORD *)(v1 + 1096);
            v49 = *(_QWORD *)(v1 + 952);
            v16 = *(_QWORD *)(v1 + 1056);
            v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
LABEL_61:
            if (sub_23AE4F6B4())
            {
              v96 = sub_23AF219A4(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1288));
              if (sub_23AC37B08(v96, 1))
              {
                v97 = sub_23ACD8484(0);
                v98 = sub_23AFD7BC8(v97);
                swift_bridgeObjectRelease();
                *(_QWORD *)(v1 + 1912) = v98;
                sub_23AF24980(0x1000000000, v42 & 1);
                sub_23AF24980(0x2000000000, v61 & 1);
                *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
                *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
                *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
                *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
                type metadata accessor for Ingestion.FetchChildrenMetadata();
              }
              *(_DWORD *)(v1 + 1208) = v61;
              v99 = *(_QWORD *)(v1 + 528);
              v100 = *(_QWORD *)(v1 + 1088);
              v46(v99, v16, v100);
              v101 = *(_QWORD *)(v1 + 1112);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v99, 1, v101) == 1)
              {
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v99, v100);
                goto LABEL_78;
              }
              v102 = *(_QWORD *)(v1 + 424);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v102, v99, v101);
              if (sub_23B0C6AC4(v101))
              {
                if (sub_23AA9F490(*(_QWORD *)(v102 + *(int *)(*(_QWORD *)(v1 + 984) + 36))))
                {
                  v103 = *(_QWORD *)(v1 + 1400);
                  if (sub_23AA9F490(*(_QWORD *)(v102
                                               + *(int *)(*(_QWORD *)(v1 + 1112) + 52)
                                               + *(int *)(*(_QWORD *)(v1 + 640) + 36))))
                  {
                    if ((v42 & 1) != 0)
                    {
                      v104 = sub_23AF219A4(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1288));
                      if (sub_23AAA0A58(v104)
                        && !sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v1 + 1224)+ *(int *)(*(_QWORD *)(v1 + 1336) + 48)+ *(int *)(*(_QWORD *)(v1 + 1048) + 84)), 0))
                      {
                        v105 = *(_QWORD *)(v1 + 1240);
                        v106 = swift_getAssociatedConformanceWitness();
                        *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                        *(_QWORD *)(v1 + 2168) = v105;
                        *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                        *(_QWORD *)(v1 + 2184) = v106;
                        type metadata accessor for ReconciliationID();
                      }
                    }
                    if ((*(_DWORD *)(v1 + 1208) & 1) != 0
                      && (*(_BYTE *)(*(_QWORD *)(v1 + 1224)
                                   + *(int *)(*(_QWORD *)(v1 + 1336) + 48)
                                   + *(int *)(*(_QWORD *)(v1 + 1048) + 80)) & 1) == 0)
                    {
                      v107 = sub_23AF219A4(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1288));
                      if (sub_23AFA7480(v107))
                      {
                        v108 = *(_QWORD *)(v1 + 1240);
                        v109 = swift_getAssociatedConformanceWitness();
                        *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                        *(_QWORD *)(v1 + 2168) = v108;
                        *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                        *(_QWORD *)(v1 + 2184) = v109;
                        type metadata accessor for ReconciliationID();
                      }
                    }
                  }
                  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(*(_QWORD *)(v1 + 424), *(_QWORD *)(v1 + 1112));
                  v110 = v103;
                  v49 = *(_QWORD *)(v1 + 952);
                  v16 = *(_QWORD *)(v1 + 1056);
                  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
LABEL_79:
                  *(_QWORD *)(v1 + 1400) = v110;
                  v111 = sub_23AA9F3D0(1, v49);
                  *(_DWORD *)(v1 + 1200) = v111;
                  if (v111 && !sub_23AE4F6B4())
                  {
                    v112 = *(_QWORD *)(v1 + 616);
                    v113 = *(_QWORD *)(v1 + 1088);
                    v46(v112, v16, v113);
                    v114 = *(_QWORD *)(v1 + 1112);
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v112, 1, v114) == 1)
                    {
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v112, v113);
                    }
                    else
                    {
                      v115 = sub_23B0C6AC4(v114);
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v112, v114);
                      if (!v115)
                      {
                        v116 = *(_QWORD *)(v1 + 1240);
                        v117 = swift_getAssociatedConformanceWitness();
                        *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                        *(_QWORD *)(v1 + 2168) = v116;
                        *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                        *(_QWORD *)(v1 + 2184) = v117;
                        type metadata accessor for ReconciliationID();
                      }
                    }
                  }
                  if (sub_23AA9F3D0(8, *(_QWORD *)(v1 + 2416)))
                  {
                    v118 = *(_QWORD *)(v1 + 696);
                    v119 = *(_QWORD *)(v1 + 1088);
                    v46(v118, *(_QWORD *)(v1 + 1056), v119);
                    v120 = *(_QWORD *)(v1 + 1112);
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v118, 1, v120) == 1)
                    {
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v118, v119);
                    }
                    else
                    {
                      v121 = *(_QWORD *)(v1 + 960);
                      v122 = *(_QWORD *)(v1 + 936);
                      v123 = *(_QWORD *)(v1 + 984);
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v122, v118, v123);
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v118, v120);
                      v124 = *(unsigned __int8 *)(v122 + *(int *)(v123 + 44));
                      (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v122, v123);
                      if (v124 != 3 && sub_23AA9F51C(v124, 1))
                      {
                        v125 = *(_QWORD *)(v1 + 1240);
                        v126 = swift_getAssociatedConformanceWitness();
                        *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                        *(_QWORD *)(v1 + 2168) = v125;
                        *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                        *(_QWORD *)(v1 + 2184) = v126;
                        type metadata accessor for ReconciliationID();
                      }
                    }
                  }
                  if (*(_DWORD *)(v1 + 1312))
                  {
                    v127 = *(_QWORD *)(v1 + 1336);
                    goto LABEL_95;
                  }
                  v127 = *(_QWORD *)(v1 + 1336);
                  v128 = *(void (**)(char *))(v1 + 1224);
                  v131 = sub_23AF219A4(v127, *(_QWORD *)(v1 + 1288));
                  v132 = sub_23AC37B08(v131, 0);
                  v129 = *(_QWORD *)(v1 + 1056);
                  v130 = *(_QWORD *)(v1 + 784);
                  if (!v132 || !sub_23AA9F3D0(8, *(_QWORD *)(v1 + 2416)))
                    goto LABEL_100;
                  v133 = *(void (**)(void (*)(char *), uint64_t, _QWORD))(**(_QWORD **)(*(_QWORD *)(v1 + 1328) + 16)
                                                                                             + 504);
                  swift_retain();
                  v134 = *(_QWORD *)(v1 + 448);
                  v133(v128, v127, *(_QWORD *)(v1 + 1288));
                  v135 = v134;
                  swift_release();
                  v136 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 1352) + 48);
                  if (v136(v135, 1, *(_QWORD *)(v3 - 72)) == 1)
                  {
                    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 872) + 8))(v135, *(_QWORD *)(v1 + 880));
                    goto LABEL_100;
                  }
                  v169 = v127;
                  v170 = *(_QWORD *)(v1 + 1352);
                  v171 = *(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 32);
                  v172 = *(_QWORD *)(v1 + 512);
                  v173 = *(_QWORD *)(v3 - 72);
                  v171(v172, v135, v173);
                  v174 = *(void (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(*(_QWORD *)(v1 + 1328) + 16)
                                                                        + 504);
                  swift_retain();
                  v175 = *(_QWORD *)(v1 + 432);
                  v174(*(_QWORD *)(v1 + 1256), v169, *(_QWORD *)(v1 + 1288));
                  swift_release();
                  v176 = *(_QWORD *)(v1 + 440);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 16))(v176, v172, v173);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v170 + 56))(v176, 0, 1, v173);
                  v177 = *(_QWORD *)(v1 + 504);
                  v178 = v177 + *(int *)(*(_QWORD *)(v1 + 376) + 48);
                  v179 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 872) + 16);
                  v180 = v175;
                  v181 = *(_QWORD *)(v1 + 880);
                  v179(v177, v180, v181);
                  v179(v178, v176, v181);
                  if (v136(v177, 1, v173) == 1)
                  {
                    v182 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 872) + 8);
                    v183 = *(_QWORD *)(v1 + 440);
                    *(_QWORD *)(v1 + 1208) = v182;
                    v182(v183, v181);
                    if (v136(v178, 1, v173) == 1)
                    {
                      (*(void (**)(_QWORD, _QWORD))(v1 + 1208))(*(_QWORD *)(v1 + 504), *(_QWORD *)(v1 + 880));
LABEL_130:
                      (*(void (**)(_QWORD, _QWORD))(v1 + 1208))(*(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 880));
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1352) + 8))(*(_QWORD *)(v1 + 512), *(_QWORD *)(v3 - 72));
                      v127 = *(_QWORD *)(v1 + 1336);
LABEL_95:
                      v128 = *(void (**)(char *))(v1 + 1224);
                      v129 = *(_QWORD *)(v1 + 1056);
                      v130 = *(_QWORD *)(v1 + 784);
LABEL_100:
                      v137 = sub_23AA9F490(*(_QWORD *)(v1 + 2416));
                      v138 = v129;
                      v139 = *(_QWORD *)(v1 + 1088);
                      v140 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296);
                      v140(v130, v138, v139);
                      if (v137)
                      {
                        v141 = *(_QWORD *)(v1 + 688);
                        v140(v141, v130, v139);
                        v142 = *(_QWORD *)(v1 + 1112);
                        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v141, 1, v142) == 1)
                        {
                          v143 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8);
                          v143(v130, v139);
                          v143(v141, v139);
                          goto LABEL_109;
                        }
                        v154 = *(_QWORD *)(v1 + 960);
                        v155 = v141;
                        v156 = *(_QWORD *)(v1 + 936);
                        v157 = *(_QWORD *)(v1 + 984);
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 16))(v156, v155, v157);
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v155, v142);
                        v158 = *(_QWORD *)(v156 + *(int *)(v157 + 36));
                        v159 = v157;
                        v127 = *(_QWORD *)(v1 + 1336);
                        (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v156, v159);
                        LOBYTE(v158) = sub_23AA9F490(v158);
                        v144 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8);
                        v144(v130, v139);
                        v128 = *(void (**)(char *))(v1 + 1224);
                        if ((v158 & 1) != 0)
                        {
LABEL_109:
                          v160 = *(_QWORD *)(v1 + 1240);
                          v161 = swift_getAssociatedConformanceWitness();
                          *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                          *(_QWORD *)(v1 + 2168) = v160;
                          *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                          *(_QWORD *)(v1 + 2184) = v161;
                          type metadata accessor for ReconciliationID();
                        }
                      }
                      else
                      {
                        v144 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8);
                        v144(v130, v139);
                      }
                      v145 = *(_QWORD *)(v1 + 1248);
                      v146 = (*(uint64_t (**)(_QWORD, uint64_t))(v145 + 64))(*(_QWORD *)(v3 - 72), v145);
                      *(_QWORD *)(v1 + 1208) = v144;
                      if ((v146 & 1) != 0
                        || ((*(uint64_t (**)(_QWORD, uint64_t))(v145 + 72))(*(_QWORD *)(v3 - 72), v145) & 1) != 0)
                      {
                        v147 = *(_QWORD *)(v1 + 2416);
                        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
                        v148 = swift_allocObject();
                        v149 = sub_23B1A1F64(v148, 3);
                        *(_OWORD *)v150 = xmmword_23B1D7770;
                        *(_QWORD *)(v150 + 16) = 256;
                        v151 = nullsub_1(v149);
                        v152 = sub_23AFD7BC8(v151);
                        swift_bridgeObjectRelease();
                        v153 = sub_23AFA7CC0(v152, v147);
                        if (!sub_23AA9F490(v153))
                        {
                          v162 = *(_QWORD *)(v1 + 1240);
                          v163 = swift_getAssociatedConformanceWitness();
                          *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                          *(_QWORD *)(v1 + 2168) = v162;
                          *(_QWORD *)(v1 + 2176) = v145;
                          *(_QWORD *)(v1 + 2184) = v163;
                          type metadata accessor for ReconciliationID();
                        }
                        v164 = *(_QWORD *)(v1 + 760);
                        v165 = *(_QWORD *)(v1 + 744);
                        if (sub_23AA9F3D0(16, *(_QWORD *)(v1 + 2416))
                          && (sub_23AF21910(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1288)) & 1) != 0)
                        {
                          v292 = *(_QWORD *)(v1 + 1240);
                          v293 = swift_getAssociatedConformanceWitness();
                          *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                          *(_QWORD *)(v1 + 2168) = v292;
                          *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                          *(_QWORD *)(v1 + 2184) = v293;
                          type metadata accessor for ReconciliationID();
                        }
                        v294 = sub_23AA9F3D0(16, *(_QWORD *)(v1 + 2416));
                        v295 = *(_QWORD *)(v1 + 1336);
                        v296 = *(_QWORD *)(v1 + 1072);
                        if (v294 && (sub_23AF21910(*(_QWORD *)(v1 + 1336), *(_QWORD *)(v1 + 1288)) & 1) == 0)
                        {
                          v297 = *(_QWORD *)(v1 + 1088);
                          (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 1296))(v165, *(_QWORD *)(v1 + 1056), v297);
                          v298 = *(_QWORD *)(v1 + 1112);
                          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v165, 1, v298) == 1)
                          {
                            (*(void (**)(uint64_t, uint64_t))(v1 + 1208))(v165, v297);
                          }
                          else
                          {
                            v299 = *(_QWORD *)(v1 + 400);
                            (*(void (**)(void))(*(_QWORD *)(v1 + 1096) + 32))();
                            if (sub_23B0C6AC4(v298))
                            {
                              if (sub_23B0C9B4C(*(_BYTE *)(v299
                                                          + *(int *)(v298 + 52)
                                                          + *(int *)(*(_QWORD *)(v1 + 640) + 52))))
                              {
                                v300 = *(_QWORD *)(v1 + 1240);
                                v301 = swift_getAssociatedConformanceWitness();
                                *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                                *(_QWORD *)(v1 + 2168) = v300;
                                *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                                *(_QWORD *)(v1 + 2184) = v301;
                                type metadata accessor for ReconciliationID();
                              }
                              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v299, v298);
                              v296 = *(_QWORD *)(v1 + 1072);
                            }
                            else
                            {
                              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v299, v298);
                            }
                          }
                          v295 = *(_QWORD *)(v1 + 1336);
                        }
                        if (sub_23AA9F3D0(0x2000000000000, *(_QWORD *)(v1 + 2416)))
                        {
                          v302 = sub_23AF219A4(v295, *(_QWORD *)(v1 + 1288));
                          if (sub_23AC37B08(v302, 0))
                          {
                            v303 = *(_QWORD *)(v1 + 552);
                            v304 = *(_QWORD *)(v1 + 1088);
                            (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 1296))(v303, *(_QWORD *)(v1 + 1056), v304);
                            v305 = *(_QWORD *)(v1 + 1112);
                            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v303, 1, v305) == 1)
                            {
                              (*(void (**)(uint64_t, uint64_t))(v1 + 1208))(v303, v304);
                              goto LABEL_222;
                            }
                            v306 = *(_QWORD *)(v1 + 456);
                            (*(void (**)(void))(*(_QWORD *)(v1 + 1096) + 32))();
                            if (sub_23B0C6AC4(v305))
                            {
                              v307 = v306 + *(int *)(v305 + 52);
                              v308 = *(_QWORD *)(v1 + 832);
                              v309 = *(_QWORD *)(v1 + 280);
                              v310 = *(_QWORD *)(v1 + 840);
                              (*(void (**)(uint64_t, uint64_t, uint64_t))(v308 + 16))(v309, v307, v310);
                              v311 = *(_QWORD *)(v1 + 856);
                              if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v311 + 48))(v309, 1, *(_QWORD *)(v1 + 1240)) == 1)
                              {
                                (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(v306, *(_QWORD *)(v1 + 1112));
                                (*(void (**)(uint64_t, uint64_t))(v308 + 8))(v309, v310);
                                v296 = *(_QWORD *)(v1 + 1072);
                                v128 = *(void (**)(char *))(v1 + 1224);
                                goto LABEL_222;
                              }
                              v315 = *(void (**)(_QWORD, uint64_t))(v1 + 1208);
                              (*(void (**)(_QWORD, uint64_t, _QWORD))(v311 + 32))(*(_QWORD *)(v1 + 304), v309, *(_QWORD *)(v1 + 1240));
                              v316 = *(_QWORD *)(v1 + 1224) + *(int *)(*(_QWORD *)(v1 + 1336) + 52);
                              sub_23AA724E8(v316, v1 + 1912, &qword_2542E5050);
                              sub_23AA724E8(v1 + 1912, v1 + 2160, &qword_2542E5050);
                              if (sub_23AAFCF2C(v1 + 2160) == 1
                                || !sub_23AC37674(*(_QWORD *)(v316 + 208), 501)
                                || sub_23AA9F3D0(1, *(_QWORD *)(*(_QWORD *)(v1 + 456) + *(int *)(*(_QWORD *)(v1 + 1112) + 76))))
                              {
LABEL_232:
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 856) + 8))(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 1240));
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(*(_QWORD *)(v1 + 456), *(_QWORD *)(v1 + 1112));
                                goto LABEL_233;
                              }
                              v382 = *(_QWORD *)(v1 + 1400);
                              (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(*(_QWORD *)(v1 + 1408) + 40)
                                                                      + 240))(*(_QWORD *)(v1 + 304), 1);
                              *(_QWORD *)(v1 + 1400) = v382;
                              if (v382)
                              {
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 856) + 8))(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 1240));
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(*(_QWORD *)(v1 + 456), *(_QWORD *)(v1 + 1112));
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1368) + 8))(*(_QWORD *)(v1 + 1256), *(_QWORD *)(v1 + 1336));
                                v383 = *(_QWORD *)(v1 + 1088);
                                v315(*(_QWORD *)(v1 + 1056), v383);
                                v315(*(_QWORD *)(v1 + 1128), v383);
                                goto LABEL_316;
                              }
                              if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 + 560) + 48))(*(_QWORD *)(v1 + 80), 1, *(_QWORD *)(v1 + 568)) != 1)
                              {
                                v401 = *(_QWORD *)(v1 + 568);
                                (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v1 + 560) + 32))(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 80), v401);
                                v402 = MEMORY[0x23B8613CC](&unk_23B1DD478, v401);
                                if ((sub_23AF21910(v401, v402) & 1) == 0)
                                {
                                  v403 = *(_QWORD *)(v1 + 1240);
                                  v404 = swift_getAssociatedConformanceWitness();
                                  *(_QWORD *)(v1 + 1664) = *(_QWORD *)(v3 - 72);
                                  *(_QWORD *)(v1 + 1672) = v403;
                                  *(_QWORD *)(v1 + 1680) = *(_QWORD *)(v1 + 1248);
                                  *(_QWORD *)(v1 + 1688) = v404;
                                  type metadata accessor for ReconciliationID();
                                }
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 560) + 8))(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 568));
                                goto LABEL_232;
                              }
                              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 856) + 8))(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 1240));
                              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(*(_QWORD *)(v1 + 456), *(_QWORD *)(v1 + 1112));
                              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 472) + 8))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 480));
LABEL_233:
                              v295 = *(_QWORD *)(v1 + 1336);
                              v296 = *(_QWORD *)(v1 + 1072);
                              v128 = *(void (**)(char *))(v1 + 1224);
                              v164 = *(_QWORD *)(v1 + 760);
                            }
                            else
                            {
                              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v306, v305);
LABEL_222:
                              v295 = *(_QWORD *)(v1 + 1336);
                            }
                          }
                        }
                        if (sub_23AA9F3D0(0x100000000000, *(_QWORD *)(v1 + 2416)))
                        {
                          if (*((_BYTE *)v128 + *(int *)(v295 + 48) + *(int *)(*(_QWORD *)(v1 + 1048) + 64)) == 1)
                          {
                            v312 = *(_QWORD *)(v1 + 1240);
                            v313 = swift_getAssociatedConformanceWitness();
                            *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                            *(_QWORD *)(v1 + 2168) = v312;
                            *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                            *(_QWORD *)(v1 + 2184) = v313;
                            type metadata accessor for ReconciliationID();
                          }
                          v314 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
                        }
                        else
                        {
                          v314 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
                        }
                        if (sub_23AA9F3D0(2, *(_QWORD *)(v1 + 2416)))
                        {
                          v317 = *(_QWORD *)(v1 + 1088);
                          (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 1296))(v164, *(_QWORD *)(v1 + 1056), v317);
                          v318 = v314;
                          v319 = *(_QWORD *)(v1 + 1112);
                          if (v318(v164, 1, v319) == 1)
                          {
                            (*(void (**)(uint64_t, uint64_t))(v296 + 8))(v164, v317);
                            v314 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
                          }
                          else
                          {
                            v320 = v164 + *(int *)(v319 + 52);
                            v321 = v128;
                            v322 = *(_QWORD *)(v1 + 600);
                            v323 = *(_QWORD *)(v1 + 592);
                            v324 = v164;
                            v325 = *(_QWORD *)(v1 + 640);
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(v322 + 16))(v323, v320, v325);
                            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v324, v319);
                            v326 = *(unsigned __int8 *)(v323 + *(int *)(v325 + 44));
                            v327 = *(void (**)(uint64_t, uint64_t))(v322 + 8);
                            v128 = v321;
                            v295 = *(_QWORD *)(v1 + 1336);
                            v327(v323, v325);
                            v314 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
                            if (v326 != 3 && !(*(_DWORD *)(v1 + 1200) & 1 | !sub_23AA9F51C(v326, 2)))
                            {
                              v328 = *(_QWORD *)(v1 + 1240);
                              v329 = swift_getAssociatedConformanceWitness();
                              *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                              *(_QWORD *)(v1 + 2168) = v328;
                              *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                              *(_QWORD *)(v1 + 2184) = v329;
                              type metadata accessor for ReconciliationID();
                            }
                          }
                        }
                        if (!*(_DWORD *)(v1 + 1312))
                        {
                          v330 = *(_QWORD *)(v1 + 2416);
                          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
                          v331 = swift_allocObject();
                          v332 = sub_23B1A1F64(v331, 2);
                          *v333 = xmmword_23B1CA760;
                          v334 = nullsub_1(v332);
                          v335 = sub_23AFD7BC8(v334);
                          swift_bridgeObjectRelease();
                          if ((sub_23AA9F56C(v335, v330) & 1) != 0)
                          {
                            v296 = *(_QWORD *)(v1 + 1072);
                          }
                          else
                          {
                            v336 = *(_QWORD *)(v1 + 1400);
                            sub_23B0FEBA0(v128, *(uint64_t **)(v1 + 1408), *(_QWORD *)(v1 + 1360));
                            *(_QWORD *)(v1 + 1400) = v336;
                            v296 = *(_QWORD *)(v1 + 1072);
                            if (v336)
                            {
                              (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 1368) + 8))(*(_QWORD *)(v1 + 1256), v295);
                              v337 = *(void (**)(_QWORD, uint64_t))(v296 + 8);
                              v338 = *(_QWORD *)(v1 + 1088);
                              v337(*(_QWORD *)(v1 + 1056), v338);
                              v337(*(_QWORD *)(v1 + 1128), v338);
                              goto LABEL_316;
                            }
                          }
                          v314 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
                        }
                        v339 = *(_QWORD *)(v3 - 72);
                        if (((*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1248) + 72))(v339, *(_QWORD *)(v1 + 1248)) & 1) != 0&& sub_23AA9F3D0(8, *(_QWORD *)(v1 + 2416)))
                        {
                          v340 = *(_DWORD *)(v1 + 1312);
                          v341 = *(_QWORD *)(v1 + 1088);
                          if (v340 < 2)
                          {
                            v342 = *(_QWORD *)(v1 + 488);
                            (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1296))(v342, *(_QWORD *)(v1 + 1056), *(_QWORD *)(v1 + 1088));
                            v343 = v314;
                            v344 = *(_QWORD *)(v1 + 1112);
                            if (v343(v342, 1, v344) == 1)
                            {
                              (*(void (**)(uint64_t, uint64_t))(v296 + 8))(v342, v341);
                            }
                            else
                            {
                              v361 = sub_23B0C6AC4(v344);
                              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v342, v344);
                              if (v361)
                              {
                                v362 = *(_QWORD *)(v1 + 1240);
                                v363 = swift_getAssociatedConformanceWitness();
                                *(_QWORD *)(v1 + 2160) = v339;
                                *(_QWORD *)(v1 + 2168) = v362;
                                *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                                *(_QWORD *)(v1 + 2184) = v363;
                                type metadata accessor for ReconciliationID();
                              }
                            }
                            if (sub_23AE4F6B4())
                            {
                              *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
                              *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
                              *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
                              *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
                              type metadata accessor for Ingestion.FetchChildrenMetadata();
                            }
                            v345 = *(_QWORD *)(v1 + 1400);
                            v348 = *(_QWORD *)(v1 + 1368);
                            v341 = *(_QWORD *)(v1 + 1088);
LABEL_256:
                            v349 = *(_QWORD *)(v1 + 736);
                            v350 = *(_QWORD *)(v1 + 1336);
                            v351 = *(_QWORD *)(v1 + 1056);
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296))(v349, v351, v341);
                            v352 = *(_QWORD *)(v1 + 1112);
                            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v349, 1, v352) == 1)
                            {
                              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v349, v341);
                            }
                            else
                            {
                              v353 = v350;
                              v354 = *(_QWORD *)(v1 + 1096);
                              v355 = *(_QWORD *)(v1 + 664);
                              (*(void (**)(void))(v354 + 32))();
                              v356 = sub_23AA9F3D0(4, *(_QWORD *)(v355 + *(int *)(*(_QWORD *)(v1 + 984) + 76)));
                              v357 = v353;
                              v358 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 1224)
                                                        + *(int *)(v353 + 48)
                                                        + *(int *)(*(_QWORD *)(v1 + 1048) + 92));
                              if (v356 != v358)
                              {
                                *(_QWORD *)(v1 + 1400) = v345;
                                v359 = *(_QWORD *)(v1 + 1240);
                                v360 = swift_getAssociatedConformanceWitness();
                                if (v358)
                                {
                                  *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                                  *(_QWORD *)(v1 + 2168) = v359;
                                  *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                                  *(_QWORD *)(v1 + 2184) = v360;
                                  type metadata accessor for ReconciliationID();
                                }
                                *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                                *(_QWORD *)(v1 + 2168) = v359;
                                *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                                *(_QWORD *)(v1 + 2184) = v360;
                                type metadata accessor for ReconciliationID();
                              }
                              (*(void (**)(uint64_t, uint64_t))(v354 + 8))(v355, v352);
                              v341 = *(_QWORD *)(v1 + 1088);
                              v351 = *(_QWORD *)(v1 + 1056);
                              v350 = v357;
                            }
                            v364 = *(_QWORD *)(v1 + 720);
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1296))(v364, v351, v341);
                            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v364, 1, v352) == 1)
                            {
                              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v364, v341);
                            }
                            else
                            {
                              *(_QWORD *)(v1 + 1400) = v345;
                              v365 = *(_QWORD *)(v1 + 1096);
                              v366 = *(_QWORD *)(v1 + 624);
                              (*(void (**)(void))(v365 + 32))();
                              if (sub_23AA9F3D0(8, *(_QWORD *)(v366 + *(int *)(*(_QWORD *)(v1 + 984) + 76))) != *(_BYTE *)(*(_QWORD *)(v1 + 1224) + *(int *)(v350 + 48) + *(int *)(*(_QWORD *)(v1 + 1048) + 96)))
                              {
                                v367 = *(_QWORD *)(v3 - 72);
                                (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v1 + 1352) + 16))(*(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 1224), v367);
                                v368 = *(_QWORD *)(v1 + 1240);
                                v369 = swift_getAssociatedConformanceWitness();
                                *(_QWORD *)(v1 + 2160) = v367;
                                *(_QWORD *)(v1 + 2168) = v368;
                                *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                                *(_QWORD *)(v1 + 2184) = v369;
                                type metadata accessor for ReconciliationID();
                              }
                              (*(void (**)(uint64_t, uint64_t))(v365 + 8))(v366, v352);
                              v348 = *(_QWORD *)(v1 + 1368);
                            }
                            v370 = sub_23AE4F6B4();
                            v371 = *(_QWORD *)(v1 + 680);
                            if (v370)
                            {
                              v372 = *(_QWORD *)(v1 + 1088);
                              (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 1296))(*(_QWORD *)(v1 + 680), v351, v372);
                              v373 = *(_QWORD *)(v1 + 1112);
                              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304))(v371, 1, v373) == 1)
                              {
                                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8))(v371, v372);
                                v374 = 2;
                              }
                              else
                              {
                                v375 = *(_QWORD *)(v371 + *(int *)(v373 + 76));
                                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v371, v373);
                                v374 = sub_23AA9F3D0(2, v375);
                              }
                              v376 = sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v1 + 1224)+ *(int *)(v350 + 48)+ *(int *)(*(_QWORD *)(v1 + 1048) + 88)), 2);
                              if (v374 == 2 || ((v376 ^ (v374 != 0)) & 1) != 0)
                              {
                                *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
                                *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
                                *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
                                *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
                                type metadata accessor for ConcreteJobResult();
                              }
                            }
                            v377 = *(void (**)(_QWORD, uint64_t))(v348 + 8);
                            v377(*(_QWORD *)(v1 + 1256), v350);
                            v378 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1072) + 8);
                            v379 = *(_QWORD *)(v1 + 1088);
                            v378(v351, v379);
                            v378(*(_QWORD *)(v1 + 1128), v379);
                            v377(*(_QWORD *)(v1 + 1224), v350);
LABEL_315:
                            JUMPOUT(0x23B102A3CLL);
                          }
                          v345 = *(_QWORD *)(v1 + 1400);
                          if (v340 != 2)
                          {
LABEL_255:
                            v348 = *(_QWORD *)(v1 + 1368);
                            goto LABEL_256;
                          }
                        }
                        else
                        {
                          v345 = *(_QWORD *)(v1 + 1400);
                          v341 = *(_QWORD *)(v1 + 1088);
                          if (*(_DWORD *)(v1 + 1312) != 2)
                            goto LABEL_255;
                        }
                        v346 = *(_QWORD *)(v1 + 648);
                        (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1136))(v346, *(_QWORD *)(v1 + 1224), *(_QWORD *)(v1 + 1336));
                        Strong = (_QWORD *)swift_weakLoadStrong();
                        if (Strong)
                          sub_23B0FE054(v346, Strong);
                        __break(1u);
                        JUMPOUT(0x23B10BA08);
                      }
                      v166 = *(_QWORD *)(v1 + 2416);
                      *(_QWORD *)(v1 + 2408) = v166;
                      if (sub_23AA9F3D0(0x200000000000, v166) && !sub_23AA9F3D0(8, v166))
                        sub_23AAB51D0(0x200000000000);
                      if (sub_23AA9F3D0(16, v166) && (sub_23AF21910(v127, *(_QWORD *)(v1 + 1288)) & 1) != 0)
                      {
                        v167 = sub_23AF219A4(v127, *(_QWORD *)(v1 + 1288));
                        if (sub_23AFA74BC(v167)
                          && ((*(uint64_t (**)(void))(**(_QWORD **)(v1 + 1408) + 520))() & 1) != 0)
                        {
                          *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
                          *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
                          *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
                          *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
                          type metadata accessor for RemoteVersion.CleanRemoteVersions();
                        }
                        if (sub_23AA9F3D0(8, v166))
                        {
                          v168 = *(_QWORD *)(v1 + 288);
                          (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1296))(v168, *(_QWORD *)(v1 + 1056), *(_QWORD *)(v1 + 1088));
                          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 1304))(v168, 1, *(_QWORD *)(v1 + 1112)) == 1)
                          {
                            (*(void (**)(_QWORD, _QWORD))(v1 + 1208))(*(_QWORD *)(v1 + 288), *(_QWORD *)(v1 + 1088));
                          }
                          else
                          {
                            v195 = *(_QWORD *)(v1 + 1112);
                            v196 = *(_QWORD *)(v1 + 288);
                            v197 = sub_23B0C6AC4(v195);
                            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v196, v195);
                            if (v197)
                            {
                              v198 = *(_QWORD *)(v1 + 1240);
                              v199 = swift_getAssociatedConformanceWitness();
                              *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                              *(_QWORD *)(v1 + 2168) = v198;
                              *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                              *(_QWORD *)(v1 + 2184) = v199;
                              type metadata accessor for ReconciliationID();
                            }
                          }
                        }
                        sub_23AAB51D0(8);
                      }
                      if (sub_23AA9F3D0(8, *(_QWORD *)(v1 + 2416)))
                      {
                        v200 = *(_QWORD *)(v1 + 1224) + *(int *)(*(_QWORD *)(v1 + 1336) + 40);
                        v201 = *(int *)(*(_QWORD *)(v1 + 632) + 52);
                        v202 = *(_QWORD *)(v200 + v201);
                        if (v202)
                        {
                          *(_QWORD *)(v1 + 2160) = v202;
                          v203 = sub_23B1C67DC();
                          MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v203);
                          if ((sub_23B1C6638() & 1) != 0)
                          {
                            *(_QWORD *)(v1 + 1192) = v200;
                            v204 = *(_QWORD *)(v1 + 344);
                            (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1296))(v204, *(_QWORD *)(v1 + 1056), *(_QWORD *)(v1 + 1088));
                            if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 1304))(v204, 1, *(_QWORD *)(v1 + 1112)) == 1)
                            {
                              (*(void (**)(_QWORD, _QWORD))(v1 + 1208))(*(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 1088));
                            }
                            else
                            {
                              v205 = *(_QWORD *)(v1 + 960);
                              v206 = *(_QWORD *)(v1 + 120);
                              v207 = *(_QWORD *)(v1 + 344);
                              v208 = *(_QWORD *)(v1 + 984);
                              (*(void (**)(uint64_t, uint64_t, uint64_t))(v205 + 16))(v206, v207, v208);
                              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(v207, *(_QWORD *)(v1 + 1112));
                              v209 = *(_QWORD *)(v1 + 232);
                              (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 264) + 16))(v209, v206 + *(int *)(v208 + 48), *(_QWORD *)(v1 + 272));
                              (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v206, v208);
                              v210 = *(_QWORD *)(*(_QWORD *)(v1 + 632) - 8);
                              *(_QWORD *)(v1 + 1184) = v210;
                              if ((*(unsigned int (**)(uint64_t, uint64_t))(v210 + 48))(v209, 1) == 1)
                              {
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 264) + 8))(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 272));
                              }
                              else
                              {
                                v211 = *(_QWORD *)(v1 + 136);
                                v212 = *(_QWORD *)(v1 + 112);
                                v213 = *(_QWORD *)(v1 + 232);
                                v214 = *(_QWORD *)(v1 + 360);
                                (*(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 16))(v212, v213, v214);
                                (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1184) + 8))(v213, *(_QWORD *)(v1 + 632));
                                (*(void (**)(_QWORD, uint64_t, uint64_t))(v211 + 32))(*(_QWORD *)(v1 + 160), v212, v214);
                                v215 = *(_QWORD *)(*(_QWORD *)(v1 + 1192) + v201);
                                if (v215)
                                {
                                  *(_QWORD *)(v1 + 2160) = v215;
                                  if ((sub_23B1C6638() & 1) != 0)
                                  {
                                    v216 = *(_QWORD *)(v1 + 1240);
                                    v217 = swift_getAssociatedConformanceWitness();
                                    *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                                    *(_QWORD *)(v1 + 2168) = v216;
                                    *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                                    *(_QWORD *)(v1 + 2184) = v217;
                                    type metadata accessor for ReconciliationID();
                                  }
                                }
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 136) + 8))(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 360));
                              }
                            }
                            sub_23AAB51D0(8);
                          }
                        }
                      }
                      v218 = sub_23AA9F3D0(0x20000000000, *(_QWORD *)(v1 + 2416));
                      v219 = *(void (**)(void))(v1 + 1296);
                      if (v218)
                      {
                        v220 = *(_QWORD *)(v1 + 1224) + *(int *)(*(_QWORD *)(v1 + 1336) + 40);
                        v221 = *(int *)(*(_QWORD *)(v1 + 632) + 60);
                        v222 = *(_QWORD *)(v220 + v221);
                        if (v222)
                        {
                          *(_QWORD *)(v1 + 2160) = v222;
                          v223 = sub_23B1C67DC();
                          MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v223);
                          if ((sub_23B1C6638() & 1) != 0)
                          {
                            *(_QWORD *)(v1 + 1192) = v220;
                            v224 = *(_QWORD *)(v1 + 352);
                            ((void (*)(uint64_t, _QWORD, _QWORD))v219)(v224, *(_QWORD *)(v1 + 1056), *(_QWORD *)(v1 + 1088));
                            if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 1304))(v224, 1, *(_QWORD *)(v1 + 1112)) == 1)
                            {
                              (*(void (**)(_QWORD, _QWORD))(v1 + 1208))(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 1088));
                            }
                            else
                            {
                              v225 = *(_QWORD *)(v1 + 960);
                              v226 = *(_QWORD *)(v1 + 128);
                              v227 = *(_QWORD *)(v1 + 352);
                              v228 = *(_QWORD *)(v1 + 984);
                              (*(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 16))(v226, v227, v228);
                              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(v227, *(_QWORD *)(v1 + 1112));
                              v229 = *(_QWORD *)(v1 + 240);
                              (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 264) + 16))(v229, v226 + *(int *)(v228 + 48), *(_QWORD *)(v1 + 272));
                              (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v226, v228);
                              v230 = *(_QWORD *)(*(_QWORD *)(v1 + 632) - 8);
                              *(_QWORD *)(v1 + 1184) = v230;
                              if ((*(unsigned int (**)(uint64_t, uint64_t))(v230 + 48))(v229, 1) == 1)
                              {
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 264) + 8))(*(_QWORD *)(v1 + 240), *(_QWORD *)(v1 + 272));
                              }
                              else
                              {
                                v231 = *(_QWORD *)(v1 + 632);
                                v232 = *(_QWORD *)(v1 + 240);
                                v233 = *(_QWORD *)(v1 + 152);
                                v234 = *(_QWORD *)(v1 + 368);
                                (*(void (**)(_QWORD, uint64_t, uint64_t))(v233 + 16))(*(_QWORD *)(v1 + 144), v232 + *(int *)(v231 + 56), v234);
                                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1184) + 8))(v232, v231);
                                (*(void (**)(_QWORD, _QWORD, uint64_t))(v233 + 32))(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 144), v234);
                                v235 = *(_QWORD *)(*(_QWORD *)(v1 + 1192) + v221);
                                if (v235)
                                {
                                  *(_QWORD *)(v1 + 2160) = v235;
                                  if ((sub_23B1C6638() & 1) != 0)
                                  {
                                    v236 = *(_QWORD *)(v1 + 1240);
                                    v237 = swift_getAssociatedConformanceWitness();
                                    *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                                    *(_QWORD *)(v1 + 2168) = v236;
                                    *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                                    *(_QWORD *)(v1 + 2184) = v237;
                                    type metadata accessor for ReconciliationID();
                                  }
                                }
                                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 152) + 8))(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 368));
                              }
                            }
                            sub_23AAB51D0(0x20000000000);
                            v219 = *(void (**)(void))(v1 + 1296);
                          }
                        }
                      }
                      v238 = sub_23AFA98F0(0x160000000010000, *(_QWORD *)(v1 + 2416));
                      v239 = sub_23AC37674(v238, 0x20000000000);
                      v240 = *(_QWORD **)(v1 + 1408);
                      v241 = *(_QWORD *)(v1 + 1048);
                      v242 = *(_QWORD *)(v1 + 1248);
                      if (v239)
                      {
                        v243 = *(_QWORD *)(v1 + 408);
                        v244 = *(_QWORD *)(v1 + 1088);
                        ((void (*)(uint64_t, _QWORD, uint64_t))v219)(v243, *(_QWORD *)(v1 + 1056), v244);
                        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 1304))(v243, 1, *(_QWORD *)(v1 + 1112)) == 1)
                        {
                          (*(void (**)(uint64_t, uint64_t))(v1 + 1208))(v243, v244);
                        }
                        else
                        {
                          v245 = *(_QWORD *)(v1 + 312);
                          v246 = *(_QWORD *)(v1 + 1112);
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 32))(v245, v243, v246);
                          v247 = sub_23B0C6AC4(v246);
                          v248 = *(_QWORD *)(v1 + 984);
                          if (v247
                            && sub_23ADF8AF8(0x160000000010000, *(_QWORD *)(v245 + *(int *)(v248 + 40)))
                            && !sub_23B12B0D4(*(_QWORD *)(v245 + *(int *)(v248 + 64)), *(_QWORD *)(v245 + *(int *)(v248 + 64) + 8), *(_BYTE *)(v245 + *(int *)(v248 + 64) + 16)))
                          {
                            v249 = v245
                                 + *(int *)(*(_QWORD *)(v1 + 1112) + 52)
                                 + *(int *)(*(_QWORD *)(v1 + 640) + 64);
                            if (!sub_23B12B0D4(*(_QWORD *)v249, *(_QWORD *)(v249 + 8), *(_BYTE *)(v249 + 16)))
                            {
                              v250 = *(_QWORD *)(v1 + 1240);
                              v251 = swift_getAssociatedConformanceWitness();
                              *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                              *(_QWORD *)(v1 + 2168) = v250;
                              *(_QWORD *)(v1 + 2176) = v242;
                              *(_QWORD *)(v1 + 2184) = v251;
                              type metadata accessor for ReconciliationID();
                            }
                          }
                          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(v245, *(_QWORD *)(v1 + 1112));
                        }
                      }
                      if (sub_23B0FEFA4(*(uint64_t **)(v1 + 1328), *(_QWORD *)(v1 + 1224), *(_QWORD *)(v1 + 2416)))
                      {
                        sub_23AAB51D0(0x10000);
                        v252 = *(_QWORD *)(v1 + 416);
                        v253 = *(_QWORD *)(v1 + 1088);
                        v219();
                        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 1304))(v252, 1, *(_QWORD *)(v1 + 1112)) == 1)
                        {
                          (*(void (**)(uint64_t, uint64_t))(v1 + 1208))(v252, v253);
                        }
                        else
                        {
                          v254 = *(_QWORD *)(v1 + 1112);
                          v255 = sub_23B0C6AC4(v254);
                          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v252, v254);
                          if (v255)
                          {
                            v256 = *(_QWORD *)(v1 + 1240);
                            v257 = swift_getAssociatedConformanceWitness();
                            *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
                            *(_QWORD *)(v1 + 2168) = v256;
                            *(_QWORD *)(v1 + 2176) = v242;
                            *(_QWORD *)(v1 + 2184) = v257;
                            type metadata accessor for ReconciliationID();
                          }
                        }
                      }
                      v258 = *(_QWORD *)(v1 + 2408);
                      v259 = sub_23AA9F3D0(0x2000000, v258);
                      v260 = *(_QWORD *)(v1 + 1336);
                      if (v259)
                      {
                        sub_23AAA0ECC((_QWORD *)(v1 + 2160), 0x100000D000000);
                        v258 = *(_QWORD *)(v1 + 2408);
                      }
                      v261 = sub_23AFA7B90(v258);
                      *(_QWORD *)(v1 + 2408) = v261;
                      v262 = sub_23AFA98F0(0x100000000000, v261);
                      v263 = sub_23AA9F490(v262);
                      v264 = *(_QWORD *)(v3 - 72);
                      if (!v263
                        || sub_23AA9F3D0(0x100000000000, v261)
                        && *(_BYTE *)(*(_QWORD *)(v1 + 1224) + *(int *)(v260 + 48) + *(int *)(v241 + 60)) != 1
                        || sub_23AA9F3D0(0x800000, *(_QWORD *)(v1 + 2416)))
                      {
                        v265 = *(_QWORD *)(v1 + 1240);
                        v266 = swift_getAssociatedConformanceWitness();
                        *(_QWORD *)(v1 + 2160) = v264;
                        *(_QWORD *)(v1 + 2168) = v265;
                        *(_QWORD *)(v1 + 2176) = v242;
                        *(_QWORD *)(v1 + 2184) = v266;
                        type metadata accessor for ReconciliationID();
                      }
                      if (sub_23AA9F3D0(0x10000000000000, *(_QWORD *)(v1 + 2416))
                        && (*(_BYTE *)(*(_QWORD *)(v1 + 1224) + *(int *)(v260 + 48) + *(int *)(v241 + 72)) & 1) == 0)
                      {
                        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
                        v267 = swift_allocObject();
                        v268 = sub_23B1A1F64(v267, 3);
                        *(_OWORD *)v269 = xmmword_23B1DAA10;
                        *(_QWORD *)(v269 + 16) = 1;
                        v270 = nullsub_1(v268);
                        v271 = sub_23AFD7BC8(v270);
                        swift_bridgeObjectRelease();
                        sub_23AAA0ECC((_QWORD *)(v1 + 2160), v271);
                      }
                      *(_QWORD *)(v1 + 1192) = v240[5];
                      if (!sub_23AE4F6B4())
                        goto LABEL_191;
                      v272 = sub_23AF219A4(v260, *(_QWORD *)(v1 + 1288));
                      v273 = sub_23AFA74BC(v272);
                      v274 = *(_QWORD *)(v1 + 1240);
                      if (v273)
                      {
                        v275 = (*(uint64_t (**)(void))(*v240 + 160))();
                        if (sub_23AC42E98(v275 & 1, 0))
                        {
                          if (!sub_23AA9F3D0(0x4000000000000, *(_QWORD *)(v1 + 2416)))
                            goto LABEL_190;
                          v276 = *(_QWORD *)(v1 + 200);
                          (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1296))(v276, *(_QWORD *)(v1 + 1056), *(_QWORD *)(v1 + 1088));
                          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 1304))(v276, 1, *(_QWORD *)(v1 + 1112)) == 1)
                          {
                            (*(void (**)(_QWORD, _QWORD))(v1 + 1208))(*(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 1088));
                            (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 856) + 56))(*(_QWORD *)(v1 + 208), 1, 1, *(_QWORD *)(v1 + 1240));
                            goto LABEL_189;
                          }
                          v277 = *(_QWORD *)(v1 + 1112);
                          v278 = *(_QWORD *)(v1 + 200);
                          v279 = *(_QWORD *)(v1 + 600);
                          v280 = *(_QWORD *)(v1 + 592);
                          v281 = *(_QWORD *)(v1 + 640);
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v279 + 16))(v280, v278 + *(int *)(v277 + 52), v281);
                          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v278, v277);
                          v282 = *(_QWORD *)(v1 + 208);
                          (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 832) + 16))(v282, v280, *(_QWORD *)(v1 + 840));
                          (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v280, v281);
                          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 856) + 48))(v282, 1, *(_QWORD *)(v1 + 1240)) == 1)
                          {
LABEL_189:
                            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 832) + 8))(*(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 840));
LABEL_190:
                            v260 = *(_QWORD *)(v1 + 1336);
                            v264 = *(_QWORD *)(v3 - 72);
LABEL_191:
                            v274 = *(_QWORD *)(v1 + 1240);
                            goto LABEL_192;
                          }
                          v380 = *(_QWORD *)(v1 + 96);
                          (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 856) + 32))(v380, *(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 1240));
                          v381 = *(_QWORD *)(v1 + 1400);
                          (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v1 + 1192) + 240))(v380, 1);
                          *(_QWORD *)(v1 + 1400) = v381;
                          if (!v381)
                          {
                            if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 + 560) + 48))(*(_QWORD *)(v1 + 88), 1, *(_QWORD *)(v1 + 568)) == 1)
                            {
                              v274 = *(_QWORD *)(v1 + 1240);
                              (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 856) + 8))(*(_QWORD *)(v1 + 96), v274);
                              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 472) + 8))(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 480));
                            }
                            else
                            {
                              v398 = *(_QWORD *)(v1 + 568);
                              (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v1 + 560) + 32))(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 88), v398);
                              v399 = MEMORY[0x23B8613CC](&unk_23B1DD478, v398);
                              if ((sub_23AF21910(v398, v399) & 1) == 0)
                              {
                                v400 = *(_BYTE *)(*(_QWORD *)(v1 + 48)
                                                + *(int *)(*(_QWORD *)(v1 + 568) + 48)
                                                + *(int *)(*(_QWORD *)(v1 + 1048) + 84));
                                if (!sub_23AA9F51C(v400, 3) && !sub_23AA9F51C(v400, 2))
                                {
                                  *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
                                  *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
                                  *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
                                  *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
                                  type metadata accessor for Conflict.PopulateConflicts();
                                }
                              }
                              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 560) + 8))(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 568));
                              v274 = *(_QWORD *)(v1 + 1240);
                              (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 856) + 8))(*(_QWORD *)(v1 + 96), v274);
                            }
                            v260 = *(_QWORD *)(v1 + 1336);
                            v264 = *(_QWORD *)(v3 - 72);
                            goto LABEL_192;
                          }
                          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 856) + 8))(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 1240));
LABEL_289:
                          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1368) + 8))(*(_QWORD *)(v1 + 1256), *(_QWORD *)(v1 + 1336));
                          v386 = *(_QWORD *)(v1 + 1088);
                          v387 = *(void (**)(_QWORD, uint64_t))(v1 + 1208);
                          v387(*(_QWORD *)(v1 + 1056), v386);
                          v387(*(_QWORD *)(v1 + 1128), v386);
LABEL_316:
                          JUMPOUT(0x23B10491CLL);
                        }
                      }
LABEL_192:
                      if (sub_23AE4F6B4())
                      {
                        v283 = sub_23AF219A4(v260, *(_QWORD *)(v1 + 1288));
                        if (sub_23AFA74BC(v283) && sub_23AA9F3D0(16, *(_QWORD *)(v1 + 2416)))
                        {
                          if ((sub_23AF21910(v260, *(_QWORD *)(v1 + 1288)) & 1) != 0)
                            goto LABEL_200;
                          v284 = *(_QWORD *)(v1 + 184);
                          (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 1296))(v284, *(_QWORD *)(v1 + 1056), *(_QWORD *)(v1 + 1088));
                          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v1 + 1304))(v284, 1, *(_QWORD *)(v1 + 1112)) == 1)
                          {
                            (*(void (**)(_QWORD, _QWORD))(v1 + 1208))(*(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 1088));
                            (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 856) + 56))(*(_QWORD *)(v1 + 192), 1, 1, *(_QWORD *)(v1 + 1240));
                            goto LABEL_199;
                          }
                          v285 = *(_QWORD *)(v1 + 1112);
                          v286 = *(_QWORD *)(v1 + 184);
                          v287 = *(_QWORD *)(v1 + 600);
                          v288 = *(_QWORD *)(v1 + 592);
                          v289 = *(_QWORD *)(v1 + 640);
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v287 + 16))(v288, v286 + *(int *)(v285 + 52), v289);
                          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v286, v285);
                          v290 = *(_QWORD *)(v1 + 192);
                          (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 832) + 16))(v290, v288, *(_QWORD *)(v1 + 840));
                          (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v288, v289);
                          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 856) + 48))(v290, 1, *(_QWORD *)(v1 + 1240)) == 1)
                          {
LABEL_199:
                            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 832) + 8))(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 840));
LABEL_200:
                            v264 = *(_QWORD *)(v3 - 72);
                            v274 = *(_QWORD *)(v1 + 1240);
                          }
                          else
                          {
                            v384 = *(_QWORD *)(v1 + 104);
                            (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 856) + 32))(v384, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 1240));
                            v385 = *(_QWORD *)(v1 + 1400);
                            (*(void (**)(uint64_t))(**(_QWORD **)(v1 + 1192) + 264))(v384);
                            *(_QWORD *)(v1 + 1400) = v385;
                            if (v385)
                            {
                              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 856) + 8))(*(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 1240));
                              goto LABEL_289;
                            }
                            sub_23AA724E8(v1 + 2424, v1 + 3416, &qword_2542E5050);
                            if (sub_23AAFCF2C(v1 + 3416) != 1)
                            {
                              v388 = *(_OWORD *)(v1 + 3624);
                              *(_OWORD *)(v1 + 3856) = *(_OWORD *)(v1 + 3608);
                              *(_OWORD *)(v1 + 3872) = v388;
                              *(_OWORD *)(v1 + 3888) = *(_OWORD *)(v1 + 3640);
                              v389 = *(_OWORD *)(v1 + 3560);
                              *(_OWORD *)(v1 + 3792) = *(_OWORD *)(v1 + 3544);
                              *(_OWORD *)(v1 + 3808) = v389;
                              v390 = *(_OWORD *)(v1 + 3592);
                              *(_OWORD *)(v1 + 3824) = *(_OWORD *)(v1 + 3576);
                              *(_OWORD *)(v1 + 3840) = v390;
                              v391 = *(_OWORD *)(v1 + 3496);
                              *(_OWORD *)(v1 + 3728) = *(_OWORD *)(v1 + 3480);
                              *(_OWORD *)(v1 + 3744) = v391;
                              v392 = *(_OWORD *)(v1 + 3528);
                              *(_OWORD *)(v1 + 3760) = *(_OWORD *)(v1 + 3512);
                              *(_OWORD *)(v1 + 3776) = v392;
                              v393 = *(_OWORD *)(v1 + 3432);
                              *(_OWORD *)(v1 + 3664) = *(_OWORD *)(v1 + 3416);
                              *(_OWORD *)(v1 + 3680) = v393;
                              v394 = *(_OWORD *)(v1 + 3464);
                              *(_OWORD *)(v1 + 3696) = *(_OWORD *)(v1 + 3448);
                              *(_QWORD *)(v1 + 3904) = *(_QWORD *)(v1 + 3656);
                              *(_OWORD *)(v1 + 3712) = v394;
                              sub_23AA724E8(v1 + 3888, v1 + 3912, &qword_2542E76C0);
                              sub_23AAB7528(v1 + 3912);
                              sub_23AAB7E4C((_QWORD *)(v1 + 2424), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
                              sub_23AA724E8(v1 + 3912, v3 - 104, &qword_2542E76C0);
                              v395 = *(_QWORD *)(v3 - 104);
                              if (v395)
                              {
                                v396 = sub_23AF967B4(v395);
                                sub_23AAB7500(v1 + 3912);
                                if (!v396)
                                {
                                  v397 = *(_BYTE *)(*(_QWORD *)(v1 + 1224)
                                                  + *(int *)(*(_QWORD *)(v1 + 1336) + 48)
                                                  + *(int *)(*(_QWORD *)(v1 + 1048) + 84));
                                  if (!sub_23AA9F51C(v397, 3) && !sub_23AA9F51C(v397, 2))
                                  {
                                    *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1376);
                                    *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1392);
                                    *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1344);
                                    *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1384);
                                    type metadata accessor for Conflict.PopulateConflicts();
                                  }
                                }
                              }
                            }
                            v274 = *(_QWORD *)(v1 + 1240);
                            (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 856) + 8))(*(_QWORD *)(v1 + 104), v274);
                            v264 = *(_QWORD *)(v3 - 72);
                          }
                        }
                      }
                      v291 = swift_getAssociatedConformanceWitness();
                      *(_QWORD *)(v1 + 2160) = v264;
                      *(_QWORD *)(v1 + 2168) = v274;
                      *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
                      *(_QWORD *)(v1 + 2184) = v291;
                      type metadata accessor for ReconciliationID();
                    }
LABEL_127:
                    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 224) + 8))(*(_QWORD *)(v1 + 504), *(_QWORD *)(v1 + 376));
                  }
                  else
                  {
                    v179(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 504), v181);
                    if (v136(v178, 1, v173) == 1)
                    {
                      v184 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 872) + 8);
                      v185 = *(_QWORD *)(v1 + 440);
                      v186 = *(_QWORD *)(v1 + 880);
                      *(_QWORD *)(v1 + 1208) = v184;
                      v184(v185, v186);
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1352) + 8))(*(_QWORD *)(v1 + 320), *(_QWORD *)(v3 - 72));
                      goto LABEL_127;
                    }
                    v187 = *(_QWORD *)(v1 + 1040);
                    v188 = *(_QWORD *)(v3 - 72);
                    v171(v187, v178, v188);
                    v189 = *(_QWORD *)(v1 + 320);
                    v190 = sub_23B1C63A4();
                    v191 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1352) + 8);
                    v191(v187, v188);
                    v192 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 872) + 8);
                    v193 = *(_QWORD *)(v1 + 880);
                    v192(*(_QWORD *)(v1 + 440), v193);
                    v191(v189, v188);
                    v194 = *(_QWORD *)(v1 + 504);
                    *(_QWORD *)(v1 + 1208) = v192;
                    v192(v194, v193);
                    if ((v190 & 1) != 0)
                      goto LABEL_130;
                  }
                  *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v1 + 1392);
                  *(_QWORD *)(v1 + 2168) = *(_QWORD *)(v1 + 1376);
                  *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1384);
                  *(_QWORD *)(v1 + 2184) = *(_QWORD *)(v1 + 1344);
                  type metadata accessor for ItemJob();
                }
                (*(void (**)(uint64_t, _QWORD))(v15 + 8))(v102, *(_QWORD *)(v1 + 1112));
                v16 = *(_QWORD *)(v1 + 1056);
              }
              else
              {
                (*(void (**)(uint64_t, _QWORD))(v15 + 8))(v102, *(_QWORD *)(v1 + 1112));
              }
            }
LABEL_78:
            v110 = *(_QWORD *)(v1 + 1400);
            goto LABEL_79;
          }
          v25 = *(_QWORD *)(v3 - 72);
          v15 = *(_QWORD *)(v1 + 608);
        }
      }
      ++v22;
      v67 = v14 == (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x23B85F0E0](v60, v25);
      v66 = *(_QWORD *)(v1 + 1352);
      if (v67)
        goto LABEL_51;
    }
    __break(1u);
LABEL_309:
    swift_once();
LABEL_5:
    v26 = sub_23B0C8954(qword_2542EDE38 | 0x10, 0, v25);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v25);
    v16 = *(_QWORD *)(v1 + 1056);
    v18 = *(_QWORD *)(v1 + 888);
    if (!v26)
    {
      v27 = *(_QWORD *)(v1 + 1240);
      v28 = swift_getAssociatedConformanceWitness();
      *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
      *(_QWORD *)(v1 + 2168) = v27;
      *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
      *(_QWORD *)(v1 + 2184) = v28;
      type metadata accessor for ReconciliationID();
    }
  }
}

void sub_23B1055E4(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v1[161];
  if (v2)
  {
    (*(void (**)(uint64_t, _QWORD))(v1[137] + 8))(v4, v1[139]);
    JUMPOUT(0x23B101D20);
  }
  (*(void (**)(uint64_t, _QWORD))(v1[137] + 8))(v4, v1[139]);
  if ((a1 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v1[160] + 8))(v5, v3);
    JUMPOUT(0x23B105658);
  }
  JUMPOUT(0x23B101C94);
}

void sub_23B10587C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;

  type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  v10 = (_BYTE *)(v7 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4[169] + 16))(v7, v8 + *(_QWORD *)(*(_QWORD *)v8 + 536), *(_QWORD *)(v9 - 72));
  swift_storeEnumTagMultiPayload();
  *v10 = 0;
  swift_storeEnumTagMultiPayload();
  v11 = v4[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v7);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v7, v11);
  if (v4[150] == MEMORY[0x23B85F0E0](v6, v5))
    JUMPOUT(0x23B105958);
  JUMPOUT(0x23B1057D4);
}

void sub_23B1059C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  BOOL v34;
  uint64_t v35;

  v8 = type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 + 1392), *(_QWORD *)(v4 + 1384), a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(v4 + 1264);
  v11 = (_BYTE *)(v10 + *(int *)(TupleTypeMetadata2 + 48));
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 1352) + 16);
  v13 = *(_QWORD *)(v4 + 1224);
  *(_QWORD *)(v4 + 1200) = v12;
  v12(v10, v13, v6);
  swift_storeEnumTagMultiPayload();
  *v11 = 0;
  *(_QWORD *)(v4 + 1192) = v8;
  swift_storeEnumTagMultiPayload();
  v14 = *(_QWORD *)(v4 + 1272);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v4 + 1360), v10);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1232) + 8);
  v16 = v15(v10, v14);
  v17 = (*(uint64_t (**)(uint64_t))(v4 + 1168))(v16);
  if (sub_23AA9F3D0(0x4000, v17))
  {
    v18 = *(_QWORD *)(v4 + 1264);
    v19 = (_BYTE *)(v18 + *(int *)(TupleTypeMetadata2 + 48));
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 1200))(v18, v13, *(_QWORD *)(v7 - 72));
    swift_storeEnumTagMultiPayload();
    *v19 = 0;
    swift_storeEnumTagMultiPayload();
    v20 = *(_QWORD *)(v4 + 1272);
    swift_storeEnumTagMultiPayload();
    sub_23AEB700C(*(_QWORD *)(v4 + 1360), v18);
    v15(v18, v20);
  }
  v21 = sub_23AA9F3C4(8, *(_QWORD *)(*(_QWORD *)(v4 + 824) + v5));
  v22 = *(_QWORD *)(v4 + 496);
  if (v21)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v4 + 1200))(*(_QWORD *)(v4 + 496), v13, *(_QWORD *)(v7 - 72));
    swift_storeEnumTagMultiPayload();
    v23 = sub_23AF219A4(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288));
    v24 = *(_QWORD *)(v4 + 1376);
    if (qword_2542E7190 != -1)
      swift_once();
    v25 = qword_2542EDE38;
    if ((qword_2542EDE38 & 8) != 0 && v23 == 1)
      v25 = qword_2542EDE38 & 0xFFFFFFFFFFFFFFF7;
    v27 = (_QWORD *)(v22 + *(int *)(TupleTypeMetadata2 + 48));
    *v27 = v25;
    v28 = *(_QWORD *)(v4 + 1360);
  }
  else
  {
    v22 = *(_QWORD *)(v4 + 1264);
    v27 = (_QWORD *)(v22 + *(int *)(TupleTypeMetadata2 + 48));
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 1200))(v22, v13, *(_QWORD *)(v7 - 72));
    swift_storeEnumTagMultiPayload();
    v29 = sub_23ACD83C0(0);
    v30 = sub_23AFD7BC8(v29);
    swift_bridgeObjectRelease();
    *v27 = v30;
    v28 = *(_QWORD *)(v4 + 1360);
    v24 = *(_QWORD *)(v4 + 1376);
  }
  v31 = *(_QWORD *)(v4 + 1152);
  v27[1] = *(_QWORD *)(v4 + 1144);
  v27[2] = v31;
  swift_storeEnumTagMultiPayload();
  v32 = *(_QWORD *)(v4 + 1272);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v28, v22);
  v15(v22, v32);
  v33 = sub_23AF219A4(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288));
  v34 = sub_23AC37B08(v33, 1);
  v35 = *(_QWORD *)(v4 + 1096);
  if (v34
    && (sub_23AF21910(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288)) & 1) == 0
    && (*(_BYTE *)(*(_QWORD *)(v4 + 1224)
                 + *(int *)(*(_QWORD *)(v4 + 1336) + 48)
                 + *(int *)(*(_QWORD *)(v4 + 1048) + 64)) & 1) == 0)
  {
    *(_QWORD *)(v4 + 2160) = *(_QWORD *)(v4 + 1392);
    *(_QWORD *)(v4 + 2168) = v24;
    *(_QWORD *)(v4 + 2176) = *(_QWORD *)(v4 + 1384);
    *(_QWORD *)(v4 + 2184) = *(_QWORD *)(v4 + 1344);
    type metadata accessor for Ingestion.FetchChildrenMetadata();
  }
  (*(void (**)(_QWORD, _QWORD))(v35 + 8))(*(_QWORD *)(v4 + 824), *(_QWORD *)(v4 + 1112));
  JUMPOUT(0x23B1050B4);
}

void sub_23B105EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 1040);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1200))(v2, *(_QWORD *)(v0 + 1224), v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
  v3 = swift_allocObject();
  v4 = sub_23B1A1F64(v3, 2);
  *v5 = *(_QWORD *)(v0 + 952);
  v5[1] = 0x80000000;
  v6 = nullsub_1(v4);
  v7 = sub_23AFD7BC8(v6);
  swift_bridgeObjectRelease();
  sub_23B126EF4(v2, *(_QWORD *)(v0 + 1144), *(_QWORD *)(v0 + 1152), v7, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

void sub_23B105F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1352) + 8))(v2, v3);
  sub_23AE181A4(*(_QWORD *)(v1 + 1360), a1);
  swift_release();
  JUMPOUT(0x23B105FB0);
}

void sub_23B1062AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_23ADA8168(a1);
  v4 = *(_QWORD *)(v1 + 1912);
  *(_QWORD *)(v1 + 1208) = v4;
  sub_23B126EF4(v2, v3, v5, v4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

void sub_23B1062E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23AE181A4(v6, a1);
  swift_release();
  v1[270] = v5;
  v1[271] = v4;
  v1[272] = v3;
  v1[273] = v2;
  type metadata accessor for Ingestion.ReSnapshotChildren();
}

void sub_23B106324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23ADA8168(a1);
  sub_23B126E34(*(_QWORD *)(v1 + 1224), v2, v3, *(_QWORD *)(v1 + 1208), (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
}

void sub_23B106354(uint64_t a1)
{
  uint64_t v1;

  sub_23AE181A4(v1, a1);
  swift_release();
  JUMPOUT(0x23B1066F4);
}

void sub_23B1064C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = v4[158];
  v10 = (_QWORD *)(v9 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[169] + 16))(v9, v4[153], v7);
  v11 = swift_storeEnumTagMultiPayload();
  v12 = sub_23ADA8168(v11);
  *v10 = 0x10000;
  v10[1] = v12;
  v10[2] = v13;
  swift_storeEnumTagMultiPayload();
  v14 = v4[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v9);
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v9, v14);
  JUMPOUT(0x23B10657CLL);
}

void sub_23B106604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = v4[158];
  v8 = (_QWORD *)(v7 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[169] + 16))(v7, v4[153], v5);
  v9 = swift_storeEnumTagMultiPayload();
  v10 = sub_23ADA8168(v9);
  *v8 = 8;
  v8[1] = v10;
  v8[2] = v11;
  swift_storeEnumTagMultiPayload();
  v12 = v4[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v7);
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v7, v12);
  (*(void (**)(_QWORD, _QWORD))(v4[137] + 8))(v4[53], v4[139]);
  JUMPOUT(0x23B106CF4);
}

void sub_23B1067DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = v4[158];
  v10 = v9 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[169] + 16))(v9, v4[153], v7);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)v10 = 515;
  v11 = v4[144];
  *(_QWORD *)(v10 + 8) = v4[143];
  *(_QWORD *)(v10 + 16) = v11;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v9);
  JUMPOUT(0x23B106894);
}

void sub_23B1069A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, _QWORD, _QWORD);
  char v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t TupleTypeMetadata3;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  BOOL v43;
  void (*v44)(uint64_t, uint64_t, _QWORD);
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t AssociatedConformanceWitness;

  type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 + 1392), *(_QWORD *)(v4 + 1384), a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(v4 + 1264);
  v11 = v10 + *(int *)(TupleTypeMetadata2 + 48);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 1352) + 16);
  v13 = *(_QWORD *)(v4 + 1224);
  *(_QWORD *)(v4 + 1208) = v12;
  v12(v10, v13, v6);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)v11 = 769;
  v14 = *(_QWORD *)(v4 + 1152);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v4 + 1144);
  *(_QWORD *)(v11 + 16) = v14;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v4 + 1360), v10);
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1232) + 8);
  v15(v10, v7);
  v16 = *(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1296);
  v17 = sub_23AF219A4(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288));
  if (sub_23AC37B08(v17, 0))
  {
    v18 = *(_QWORD *)(v4 + 248);
    v16(v18, *(_QWORD *)(v4 + 1056), *(_QWORD *)(v4 + 1088));
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v4 + 1304))(v18, 1, *(_QWORD *)(v4 + 1112)) == 1)
      JUMPOUT(0x23B1068F0);
    v19 = *(_QWORD *)(v18 + *(int *)(*(_QWORD *)(v4 + 1112) + 76));
    v5(v18);
    if (!sub_23AA9F3D0(1, v19))
    {
      sub_23AA724E8(*(_QWORD *)(v4 + 1256) + *(int *)(*(_QWORD *)(v4 + 1336) + 52), v4 + 1912, &qword_2542E5050);
      sub_23AA724E8(v4 + 1912, v4 + 2160, &qword_2542E5050);
      if (sub_23AAFCF2C(v4 + 2160) != 1)
      {
        v20 = *(_OWORD *)(v4 + 2368);
        *(_OWORD *)(v4 + 4368) = *(_OWORD *)(v4 + 2352);
        *(_OWORD *)(v4 + 4384) = v20;
        *(_OWORD *)(v4 + 4400) = *(_OWORD *)(v4 + 2384);
        v21 = *(_OWORD *)(v4 + 2304);
        *(_OWORD *)(v4 + 4304) = *(_OWORD *)(v4 + 2288);
        *(_OWORD *)(v4 + 4320) = v21;
        v22 = *(_OWORD *)(v4 + 2336);
        *(_OWORD *)(v4 + 4336) = *(_OWORD *)(v4 + 2320);
        *(_OWORD *)(v4 + 4352) = v22;
        v23 = *(_OWORD *)(v4 + 2240);
        *(_OWORD *)(v4 + 4240) = *(_OWORD *)(v4 + 2224);
        *(_OWORD *)(v4 + 4256) = v23;
        v24 = *(_OWORD *)(v4 + 2272);
        *(_OWORD *)(v4 + 4272) = *(_OWORD *)(v4 + 2256);
        *(_OWORD *)(v4 + 4288) = v24;
        v25 = *(_OWORD *)(v4 + 2176);
        *(_OWORD *)(v4 + 4176) = *(_OWORD *)(v4 + 2160);
        *(_OWORD *)(v4 + 4192) = v25;
        v26 = *(_OWORD *)(v4 + 2208);
        *(_OWORD *)(v4 + 4208) = *(_OWORD *)(v4 + 2192);
        *(_QWORD *)(v4 + 4416) = *(_QWORD *)(v4 + 2400);
        *(_OWORD *)(v4 + 4224) = v26;
        v27 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v4 + 1408) + 512);
        sub_23AA724E8(v4 + 1912, v4 + 1664, &qword_2542E5050);
        v28 = sub_23AC42B28(v4 + 1664);
        v29 = v27(v28);
        v30 = sub_23AF9679C(v29 & 1, 0, 0);
        sub_23AAB7E4C((_QWORD *)(v4 + 1912), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
        if (sub_23AC37674(v30, 501))
        {
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          v32 = *(int *)(TupleTypeMetadata3 + 48);
          v33 = *(int *)(TupleTypeMetadata3 + 64);
          v34 = *(_QWORD *)(v4 + 1264);
          (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1208))(v34, *(_QWORD *)(v4 + 1224), *(_QWORD *)(v8 - 72));
          swift_storeEnumTagMultiPayload();
          *(_QWORD *)(v34 + v32) = 1;
          v35 = sub_23ACD8490(0);
          v36 = sub_23AFD7BC8(v35);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v34 + v33) = v36;
          v37 = *(_QWORD *)(v4 + 1272);
          swift_storeEnumTagMultiPayload();
          sub_23AEB700C(*(_QWORD *)(v4 + 1360), v34);
          v15(v34, v37);
        }
      }
    }
  }
  if (*(_DWORD *)(v4 + 1312))
  {
    v38 = *(_QWORD *)(v4 + 1056);
    v39 = *(_QWORD *)(v4 + 784);
  }
  else
  {
    v40 = *(_QWORD *)(v4 + 1336);
    v41 = *(_QWORD *)(v4 + 1224);
    v42 = sub_23AF219A4(v40, *(_QWORD *)(v4 + 1288));
    v43 = sub_23AC37B08(v42, 0);
    v38 = *(_QWORD *)(v4 + 1056);
    v39 = *(_QWORD *)(v4 + 784);
    if (v43 && sub_23AA9F3D0(8, *(_QWORD *)(v4 + 2416)))
    {
      v44 = *(void (**)(uint64_t, uint64_t, _QWORD))(**(_QWORD **)(*(_QWORD *)(v4 + 1328) + 16) + 504);
      swift_retain();
      v45 = *(_QWORD *)(v4 + 448);
      v44(v41, v40, *(_QWORD *)(v4 + 1288));
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 1352) + 48))(v45, 1, *(_QWORD *)(v8 - 72)) != 1)JUMPOUT(0x23B107360);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 + 872) + 8))(v45, *(_QWORD *)(v4 + 880));
    }
  }
  v46 = sub_23AA9F490(*(_QWORD *)(v4 + 2416));
  v47 = v38;
  v48 = *(_QWORD *)(v4 + 1088);
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 1296);
  v49(v39, v47, v48);
  if (v46)
  {
    v50 = *(_QWORD *)(v4 + 688);
    v49(v50, v39, v48);
    v51 = *(_QWORD *)(v4 + 1112);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 1304))(v50, 1, v51) == 1)
    {
      v52 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1072) + 8);
      v52(v39, v48);
      v52(v50, v48);
      goto LABEL_22;
    }
    v63 = *(_QWORD *)(v4 + 960);
    v64 = v50;
    v65 = *(_QWORD *)(v4 + 936);
    v66 = *(_QWORD *)(v4 + 984);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v65, v64, v66);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1096) + 8))(v64, v51);
    v67 = *(_QWORD *)(v65 + *(int *)(v66 + 36));
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v66);
    LOBYTE(v67) = sub_23AA9F490(v67);
    v53 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1072) + 8);
    v53(v39, v48);
    if ((v67 & 1) != 0)
    {
LABEL_22:
      v68 = *(_QWORD *)(v4 + 1240);
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      *(_QWORD *)(v4 + 2160) = *(_QWORD *)(v8 - 72);
      *(_QWORD *)(v4 + 2168) = v68;
      *(_QWORD *)(v4 + 2176) = *(_QWORD *)(v4 + 1248);
      *(_QWORD *)(v4 + 2184) = AssociatedConformanceWitness;
      type metadata accessor for ReconciliationID();
    }
  }
  else
  {
    v53 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1072) + 8);
    v53(v39, v48);
  }
  v54 = *(_QWORD *)(v4 + 1248);
  v55 = (*(uint64_t (**)(_QWORD, uint64_t))(v54 + 64))(*(_QWORD *)(v8 - 72), v54);
  *(_QWORD *)(v4 + 1208) = v53;
  if ((v55 & 1) != 0 || ((*(uint64_t (**)(_QWORD, uint64_t))(v54 + 72))(*(_QWORD *)(v8 - 72), v54) & 1) != 0)
  {
    v56 = *(_QWORD *)(v4 + 2416);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
    v57 = swift_allocObject();
    v58 = sub_23B1A1F64(v57, 3);
    *(_OWORD *)v59 = xmmword_23B1D7770;
    *(_QWORD *)(v59 + 16) = 256;
    v60 = nullsub_1(v58);
    v61 = sub_23AFD7BC8(v60);
    swift_bridgeObjectRelease();
    v62 = sub_23AFA7CC0(v61, v56);
    if (sub_23AA9F490(v62))
      JUMPOUT(0x23B10720CLL);
    JUMPOUT(0x23B107104);
  }
  JUMPOUT(0x23B107218);
}

void sub_23B107064()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5 = v0[158];
  v6 = (_QWORD *)(v5 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[169] + 16))(v5, v2, v1);
  swift_storeEnumTagMultiPayload();
  v7 = v0[144];
  *v6 = v0[143];
  v6[1] = v7;
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v0[170], v5);
  (*(void (**)(uint64_t, uint64_t))(v0[154] + 8))(v5, v3);
  JUMPOUT(0x23B109B44);
}

void sub_23B10714C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = v4[158];
  v10 = (_QWORD *)(v9 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[169] + 16))(v9, v4[153], v6);
  swift_storeEnumTagMultiPayload();
  v11 = v4[143];
  *v10 = v5;
  v10[1] = v11;
  v10[2] = v4[144];
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v9);
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v9, v7);
  JUMPOUT(0x23B10720CLL);
}

void sub_23B1072CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_23ADA8168(a1);
  v5 = sub_23AD3B904(v2, v3, v4, 2);
  sub_23AE181A4(*(_QWORD *)(v1 + 1360), v5);
  swift_release();
  JUMPOUT(0x23B10730CLL);
}

void sub_23B1075A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t MetatypeMetadata;

  MetatypeMetadata = swift_getMetatypeMetadata();
  sub_23AFD4CB4(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  sub_23B1C6728();
  v0[270] = v3;
  v0[271] = v2;
  v0[272] = v4;
  v0[273] = v1;
  type metadata accessor for Ingestion.TrackTemporaryItem();
}

void sub_23B1075FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *);
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *v4 = a1;
  v6 = sub_23AD7D55C(v3);
  v7 = *(_QWORD *)(v1 + 1400);
  v8 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)v1 + 272))(*(_QWORD *)(v1 + 512), v6);
  *(_QWORD *)(v1 + 1400) = v7;
  if (v7)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(v1 + 1208))(*(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 880));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1352) + 8))(*(_QWORD *)(v1 + 512), *(_QWORD *)(v5 - 72));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 1368) + 8))(*(_QWORD *)(v1 + 1256), *(_QWORD *)(v1 + 1336));
    v9 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 1072) + 8);
    v10 = *(_QWORD *)(v1 + 1088);
    v9(*(_QWORD *)(v1 + 1056), v10);
    v9(*(_QWORD *)(v1 + 1128), v10);
    JUMPOUT(0x23B104918);
  }
  v11 = v8;
  swift_bridgeObjectRelease();
  if (MEMORY[0x23B85F0E0](v11, v2))
  {
    v12 = 0;
    do
    {
      v13 = sub_23AB22848((_QWORD *)(v1 + 2160), v12, v11, v2);
      v15 = *v14;
      swift_retain();
      ((void (*)(uint64_t, _QWORD))v13)(v1 + 2160, 0);
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        JUMPOUT(0x23B10B530);
      }
      if (*(unsigned __int8 *)(v15 + 104) <= 1u)
      {
        v17 = sub_23AF1ADBC();
        swift_retain();
        sub_23AE181A4(*(_QWORD *)(v1 + 1360), v17);
        swift_release();
      }
      swift_release();
      ++v12;
    }
    while (v16 != MEMORY[0x23B85F0E0](v11, v2));
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x23B107760);
}

void sub_23B107810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata3;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = v4[158];
  v10 = v9 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4[169] + 16))(v9, v7, v5);
  swift_storeEnumTagMultiPayload();
  v11 = v4[79];
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v13 = *(int *)(TupleTypeMetadata3 + 48);
  v14 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v7 + *(int *)(v4[167] + 40), v11);
  *(_BYTE *)(v10 + v13) = 1;
  *(_BYTE *)(v10 + v14) = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v6, v9);
  JUMPOUT(0x23B107914);
}

void sub_23B107B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = v4[158];
  v8 = v7 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[169] + 16))(v7, v4[153], v5);
  swift_storeEnumTagMultiPayload();
  v9 = v4[79];
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v11 = *(int *)(TupleTypeMetadata3 + 48);
  v12 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[148] + 16))(v8, v4[149], v9);
  *(_BYTE *)(v8 + v11) = 1;
  *(_BYTE *)(v8 + v12) = 0;
  swift_storeEnumTagMultiPayload();
  v13 = v4[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v7);
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v7, v13);
  JUMPOUT(0x23B107C48);
}

void sub_23B107E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = v4[158];
  v8 = v7 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[169] + 16))(v7, v4[153], v5);
  swift_storeEnumTagMultiPayload();
  v9 = v4[79];
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v11 = *(int *)(TupleTypeMetadata3 + 48);
  v12 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[148] + 16))(v8, v4[149], v9);
  *(_BYTE *)(v8 + v11) = 0;
  *(_BYTE *)(v8 + v12) = 1;
  swift_storeEnumTagMultiPayload();
  v13 = v4[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v7);
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v7, v13);
  JUMPOUT(0x23B107F98);
}

void sub_23B1080FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4[149] = type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = v4[158];
  v8 = v7 + *(int *)(TupleTypeMetadata2 + 48);
  v9 = v4[153];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4[169] + 16))(v7, v9, v5);
  swift_storeEnumTagMultiPayload();
  v10 = v4[79];
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v12 = *(int *)(TupleTypeMetadata3 + 48);
  v13 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9 + *(int *)(v4[167] + 40), v10);
  *(_BYTE *)(v8 + v12) = 0;
  *(_BYTE *)(v8 + v13) = 1;
  swift_storeEnumTagMultiPayload();
  v14 = v4[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v7);
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v7, v14);
  sub_23AAB51D0(0x20000000000);
  JUMPOUT(0x23B108224);
}

void sub_23B108314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = v4[158];
  v10 = (_QWORD *)(v9 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4[169] + 16))(v9, v4[153], v7);
  swift_storeEnumTagMultiPayload();
  *v10 = 0x10000;
  v11 = v4[144];
  v10[1] = v4[143];
  v10[2] = v11;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v9);
  JUMPOUT(0x23B1083D0);
}

void sub_23B1084A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  BOOL v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t AssociatedConformanceWitness;

  type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 + 1392), *(_QWORD *)(v4 + 1384), a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = v8;
  v12 = *(_QWORD *)(v4 + 1264);
  v13 = (_BYTE *)(v12 + *(int *)(TupleTypeMetadata2 + 48));
  v14 = v7;
  v15 = *(_QWORD *)(v4 + 1224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 1352) + 16))(v12, v15, v14);
  swift_storeEnumTagMultiPayload();
  v16 = v15 + *(int *)(v5 + 48);
  v17 = *(int *)(v11 + 64);
  *v13 = *(_BYTE *)(v16 + v17);
  swift_storeEnumTagMultiPayload();
  v18 = *(_QWORD *)(v4 + 1272);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v4 + 1360), v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1232) + 8))(v12, v18);
  v19 = *(_QWORD *)(v4 + 520);
  v20 = *(_QWORD *)(v4 + 1088);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 1296))(v19, *(_QWORD *)(v4 + 1056), v20);
  v21 = *(_QWORD *)(v4 + 1112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 1304))(v19, 1, v21) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 1208))(v19, v20);
    v22 = 0;
  }
  else
  {
    v23 = *(_QWORD *)(v4 + 960);
    v24 = *(_QWORD *)(v4 + 936);
    v25 = v19;
    v26 = v19;
    v27 = *(_QWORD *)(v4 + 984);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v25, v27);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1096) + 8))(v26, v21);
    v28 = *(_QWORD *)(v24 + *(int *)(v27 + 36));
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v27);
    v22 = sub_23AA9F3C4(16, v28);
  }
  v29 = *(_BYTE *)(v16 + v17);
  v30 = *(_QWORD *)(v4 + 1336);
  v31 = sub_23AF219A4(v30, *(_QWORD *)(v4 + 1288));
  v32 = sub_23AC37B08(v31, 1);
  v33 = *(_QWORD *)(v4 + 1048);
  v34 = *(_QWORD *)(v4 + 1248);
  v35 = *(_QWORD *)(v9 - 72);
  if (v32 && v22 && (v29 & 1) == 0)
  {
    v36 = *(_QWORD *)(v4 + 1040);
    (*(void (**)(_QWORD, _QWORD))(v34 + 48))(*(_QWORD *)(v9 - 72), *(_QWORD *)(v4 + 1248));
    v37 = sub_23B1C63A4();
    v38 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1352) + 8);
    v38(v36, v35);
    if ((v37 & 1) == 0)
    {
      v39 = *(_QWORD *)(v4 + 1040);
      (*(void (**)(uint64_t, uint64_t))(v34 + 56))(v35, v34);
      v40 = sub_23B1C63A4();
      v38(v39, v35);
      if ((v40 & 1) == 0)
        sub_23AAA0ECC((_QWORD *)(v4 + 2160), 0x100000000000);
    }
  }
  if (sub_23AA9F3D0(0x10000000000000, *(_QWORD *)(v4 + 2416))
    && (*(_BYTE *)(*(_QWORD *)(v4 + 1224) + *(int *)(v30 + 48) + *(int *)(v33 + 72)) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
    v41 = swift_allocObject();
    v42 = sub_23B1A1F64(v41, 3);
    *(_OWORD *)v43 = xmmword_23B1DAA10;
    *(_QWORD *)(v43 + 16) = 1;
    v44 = nullsub_1(v42);
    v45 = sub_23AFD7BC8(v44);
    swift_bridgeObjectRelease();
    sub_23AAA0ECC((_QWORD *)(v4 + 2160), v45);
  }
  *(_QWORD *)(v4 + 1192) = v6[5];
  if (sub_23AE4F6B4())
  {
    v46 = sub_23AF219A4(v30, *(_QWORD *)(v4 + 1288));
    v47 = sub_23AFA74BC(v46);
    v48 = *(_QWORD *)(v4 + 1240);
    if (!v47 || (v49 = (*(uint64_t (**)(void))(*v6 + 160))(), !sub_23AC42E98(v49 & 1, 0)))
    {
LABEL_23:
      if (sub_23AE4F6B4())
      {
        v57 = sub_23AF219A4(v30, *(_QWORD *)(v4 + 1288));
        if (sub_23AFA74BC(v57) && sub_23AA9F3D0(16, *(_QWORD *)(v4 + 2416)))
        {
          if ((sub_23AF21910(v30, *(_QWORD *)(v4 + 1288)) & 1) == 0)
          {
            v58 = *(_QWORD *)(v4 + 184);
            (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1296))(v58, *(_QWORD *)(v4 + 1056), *(_QWORD *)(v4 + 1088));
            if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v4 + 1304))(v58, 1, *(_QWORD *)(v4 + 1112)) == 1)
            {
              (*(void (**)(_QWORD, _QWORD))(v4 + 1208))(*(_QWORD *)(v4 + 184), *(_QWORD *)(v4 + 1088));
              (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 856) + 56))(*(_QWORD *)(v4 + 192), 1, 1, *(_QWORD *)(v4 + 1240));
            }
            else
            {
              v59 = *(_QWORD *)(v4 + 1112);
              v60 = *(_QWORD *)(v4 + 184);
              v61 = *(_QWORD *)(v4 + 600);
              v62 = *(_QWORD *)(v4 + 592);
              v63 = *(_QWORD *)(v4 + 640);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v62, v60 + *(int *)(v59 + 52), v63);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1096) + 8))(v60, v59);
              v64 = *(_QWORD *)(v4 + 192);
              (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 832) + 16))(v64, v62, *(_QWORD *)(v4 + 840));
              (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v63);
              if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 856) + 48))(v64, 1, *(_QWORD *)(v4 + 1240)) != 1)JUMPOUT(0x23B10AC8CLL);
            }
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 832) + 8))(*(_QWORD *)(v4 + 192), *(_QWORD *)(v4 + 840));
          }
          v35 = *(_QWORD *)(v9 - 72);
          v48 = *(_QWORD *)(v4 + 1240);
        }
      }
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      *(_QWORD *)(v4 + 2160) = v35;
      *(_QWORD *)(v4 + 2168) = v48;
      *(_QWORD *)(v4 + 2176) = *(_QWORD *)(v4 + 1248);
      *(_QWORD *)(v4 + 2184) = AssociatedConformanceWitness;
      type metadata accessor for ReconciliationID();
    }
    if (sub_23AA9F3D0(0x4000000000000, *(_QWORD *)(v4 + 2416)))
    {
      v50 = *(_QWORD *)(v4 + 200);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1296))(v50, *(_QWORD *)(v4 + 1056), *(_QWORD *)(v4 + 1088));
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v4 + 1304))(v50, 1, *(_QWORD *)(v4 + 1112)) == 1)
      {
        (*(void (**)(_QWORD, _QWORD))(v4 + 1208))(*(_QWORD *)(v4 + 200), *(_QWORD *)(v4 + 1088));
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 856) + 56))(*(_QWORD *)(v4 + 208), 1, 1, *(_QWORD *)(v4 + 1240));
      }
      else
      {
        v51 = *(_QWORD *)(v4 + 1112);
        v52 = *(_QWORD *)(v4 + 200);
        v53 = *(_QWORD *)(v4 + 600);
        v54 = *(_QWORD *)(v4 + 592);
        v55 = *(_QWORD *)(v4 + 640);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v54, v52 + *(int *)(v51 + 52), v55);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1096) + 8))(v52, v51);
        v56 = *(_QWORD *)(v4 + 208);
        (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 832) + 16))(v56, v54, *(_QWORD *)(v4 + 840));
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v55);
        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 856) + 48))(v56, 1, *(_QWORD *)(v4 + 1240)) != 1)JUMPOUT(0x23B10ABACLL);
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 832) + 8))(*(_QWORD *)(v4 + 208), *(_QWORD *)(v4 + 840));
    }
    v30 = *(_QWORD *)(v4 + 1336);
    v35 = *(_QWORD *)(v9 - 72);
  }
  v48 = *(_QWORD *)(v4 + 1240);
  goto LABEL_23;
}

void sub_23B108A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  unint64_t *v10;
  void (*v11)(uint64_t, _QWORD, uint64_t);
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  int v28;
  _BOOL4 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  char v39;
  BOOL v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  char v52;
  char v53;
  BOOL v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  BOOL v78;

  type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 + 1392), *(_QWORD *)(v4 + 1384), a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = *(_QWORD *)(v4 + 1264);
  v10 = (unint64_t *)(v9 + *(int *)(TupleTypeMetadata2 + 48));
  v11 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 + 1352) + 16);
  v11(v9, *(_QWORD *)(v4 + 1224), v6);
  swift_storeEnumTagMultiPayload();
  v12 = sub_23AFA7B90(*(_QWORD *)(v4 + 2408));
  v13 = *(_QWORD *)(v4 + 1144);
  *v10 = v12;
  v10[1] = v13;
  v10[2] = *(_QWORD *)(v4 + 1152);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v4 + 1360), v9);
  v14 = v5;
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1232) + 8);
  v15(v9, v14);
  v16 = sub_23AF219A4(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288));
  if (!sub_23AFA7480(v16))
    goto LABEL_9;
  if (!sub_23AA9F3D0(8, *(_QWORD *)(v4 + 2416)))
    goto LABEL_9;
  v17 = *(_QWORD *)(v4 + 1264);
  v18 = v17 + *(int *)(TupleTypeMetadata2 + 48);
  v11(v17, *(_QWORD *)(v4 + 1224), *(_QWORD *)(v7 - 72));
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_QWORD *)(v18 + 16) = 0xB000000000000000;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_BYTE *)(v18 + 56) = 0;
  swift_storeEnumTagMultiPayload();
  v19 = *(_QWORD *)(v4 + 1272);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v4 + 1360), v17);
  v15(v17, v19);
  if (sub_23AE4F6B4())
    goto LABEL_9;
  v20 = sub_23AF219A4(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288));
  if ((sub_23AFA7404(1, v20) & 1) == 0)
    goto LABEL_9;
  v21 = *(_QWORD *)(v4 + 176);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1296))(v21, *(_QWORD *)(v4 + 1056), *(_QWORD *)(v4 + 1088));
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v4 + 1304))(v21, 1, *(_QWORD *)(v4 + 1112)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 1208))(*(_QWORD *)(v4 + 176), *(_QWORD *)(v4 + 1088));
  }
  else
  {
    v22 = *(_QWORD *)(v4 + 960);
    v23 = *(_QWORD *)(v4 + 936);
    v24 = *(_QWORD *)(v4 + 176);
    v25 = *(_QWORD *)(v4 + 984);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v24, v25);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 + 1096) + 8))(v24, *(_QWORD *)(v4 + 1112));
    v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    LOBYTE(v22) = *(_BYTE *)(v23 + *(int *)(v25 + 52));
    v26(v23, v25);
    if (sub_23AA9F51C(v22, 0))
      goto LABEL_9;
  }
  if (sub_23AA9F51C(*(_BYTE *)(*(_QWORD *)(v4 + 1224)+ *(int *)(*(_QWORD *)(v4 + 1336) + 48)+ *(int *)(*(_QWORD *)(v4 + 1048) + 84)), 0))
  {
LABEL_9:
    JUMPOUT(0x23B108D1CLL);
  }
  v27 = *(_QWORD *)(v4 + 1256) + *(int *)(*(_QWORD *)(v4 + 1336) + 52);
  sub_23AA724E8(v27, v4 + 1912, &qword_2542E5050);
  sub_23AA724E8(v4 + 1912, v4 + 2160, &qword_2542E5050);
  v28 = sub_23AAFCF2C(v4 + 2160);
  v29 = v28 == 1;
  if (v28 == 1)
  {
    *(_QWORD *)(v4 + 1184) = 0;
  }
  else
  {
    v30 = *(_OWORD *)(v4 + 2368);
    *(_OWORD *)(v4 + 4112) = *(_OWORD *)(v4 + 2352);
    *(_OWORD *)(v4 + 4128) = v30;
    *(_OWORD *)(v4 + 4144) = *(_OWORD *)(v4 + 2384);
    v31 = *(_OWORD *)(v4 + 2304);
    *(_OWORD *)(v4 + 4048) = *(_OWORD *)(v4 + 2288);
    *(_OWORD *)(v4 + 4064) = v31;
    v32 = *(_OWORD *)(v4 + 2336);
    *(_OWORD *)(v4 + 4080) = *(_OWORD *)(v4 + 2320);
    *(_OWORD *)(v4 + 4096) = v32;
    v33 = *(_OWORD *)(v4 + 2240);
    *(_OWORD *)(v4 + 3984) = *(_OWORD *)(v4 + 2224);
    *(_OWORD *)(v4 + 4000) = v33;
    v34 = *(_OWORD *)(v4 + 2272);
    *(_OWORD *)(v4 + 4016) = *(_OWORD *)(v4 + 2256);
    *(_OWORD *)(v4 + 4032) = v34;
    v35 = *(_OWORD *)(v4 + 2176);
    *(_OWORD *)(v4 + 3920) = *(_OWORD *)(v4 + 2160);
    *(_OWORD *)(v4 + 3936) = v35;
    v36 = *(_OWORD *)(v4 + 2208);
    *(_OWORD *)(v4 + 3952) = *(_OWORD *)(v4 + 2192);
    *(_QWORD *)(v4 + 4160) = *(_QWORD *)(v4 + 2400);
    *(_OWORD *)(v4 + 3968) = v36;
    v37 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v4 + 1408) + 512);
    sub_23AA724E8(v4 + 1912, v4 + 1664, &qword_2542E5050);
    v38 = sub_23AC42B28(v4 + 1664);
    *(_DWORD *)(v4 + 1184) = v37(v38);
    v39 = sub_23AF219A4(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288));
    v40 = sub_23AC37B08(v39, 1);
    v41 = *(_QWORD *)(v4 + 72);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1296))(v41, *(_QWORD *)(v4 + 1056), *(_QWORD *)(v4 + 1088));
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v4 + 1304))(v41, 1, *(_QWORD *)(v4 + 1112)) == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(v4 + 1208))(*(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 1088));
      v42 = 1;
    }
    else
    {
      v43 = *(_QWORD *)(*(_QWORD *)(v4 + 72) + *(int *)(*(_QWORD *)(v4 + 1112) + 76));
      (*(void (**)(void))(*(_QWORD *)(v4 + 1096) + 8))();
      v42 = sub_23AA9F3D0(1, v43);
    }
    *(_QWORD *)(v4 + 1184) = sub_23AF9679C(*(_DWORD *)(v4 + 1184) & 1, v40, v42);
    sub_23AAB7E4C((_QWORD *)(v4 + 1912), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  }
  if (sub_23AA9F3D0(2, *(_QWORD *)(v4 + 2416)))
  {
    sub_23AA724E8(v27, v4 + 1416, &qword_2542E5050);
    sub_23AA724E8(v4 + 1416, v4 + 1664, &qword_2542E5050);
    if (sub_23AAFCF2C(v4 + 1664) != 1 && sub_23AC37674(*(_QWORD *)(v4 + 1872), 0))
    {
      v44 = *(_QWORD *)(v4 + 1400);
      (*(void (**)(_QWORD))(**(_QWORD **)(v4 + 1328) + 264))(*(_QWORD *)(v4 + 1216));
      *(_QWORD *)(v4 + 1400) = v44;
      if (v44)
        JUMPOUT(0x23B10ACE0);
      sub_23AA724E8(v4 + 2672, v4 + 2920, &qword_2542E5050);
      if (sub_23AAFCF2C(v4 + 2920) != 1)
      {
        v45 = *(_OWORD *)(v4 + 3128);
        *(_OWORD *)(v4 + 3360) = *(_OWORD *)(v4 + 3112);
        *(_OWORD *)(v4 + 3376) = v45;
        *(_OWORD *)(v4 + 3392) = *(_OWORD *)(v4 + 3144);
        v46 = *(_OWORD *)(v4 + 3064);
        *(_OWORD *)(v4 + 3296) = *(_OWORD *)(v4 + 3048);
        *(_OWORD *)(v4 + 3312) = v46;
        v47 = *(_OWORD *)(v4 + 3096);
        *(_OWORD *)(v4 + 3328) = *(_OWORD *)(v4 + 3080);
        *(_OWORD *)(v4 + 3344) = v47;
        v48 = *(_OWORD *)(v4 + 3000);
        *(_OWORD *)(v4 + 3232) = *(_OWORD *)(v4 + 2984);
        *(_OWORD *)(v4 + 3248) = v48;
        v49 = *(_OWORD *)(v4 + 3032);
        *(_OWORD *)(v4 + 3264) = *(_OWORD *)(v4 + 3016);
        *(_OWORD *)(v4 + 3280) = v49;
        v50 = *(_OWORD *)(v4 + 2936);
        *(_OWORD *)(v4 + 3168) = *(_OWORD *)(v4 + 2920);
        *(_OWORD *)(v4 + 3184) = v50;
        v51 = *(_OWORD *)(v4 + 2968);
        *(_OWORD *)(v4 + 3200) = *(_OWORD *)(v4 + 2952);
        *(_QWORD *)(v4 + 3408) = *(_QWORD *)(v4 + 3160);
        *(_OWORD *)(v4 + 3216) = v51;
        v52 = (*(uint64_t (**)(void))(**(_QWORD **)(v4 + 1408) + 512))();
        v53 = sub_23AF219A4(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288));
        v54 = sub_23AC37B08(v53, 1);
        v55 = *(_QWORD *)(v4 + 16);
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1296))(v55, *(_QWORD *)(v4 + 1056), *(_QWORD *)(v4 + 1088));
        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v4 + 1304))(v55, 1, *(_QWORD *)(v4 + 1112)) == 1)
        {
          (*(void (**)(_QWORD, _QWORD))(v4 + 1208))(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 1088));
          v56 = 1;
        }
        else
        {
          v57 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + *(int *)(*(_QWORD *)(v4 + 1112) + 76));
          (*(void (**)(void))(*(_QWORD *)(v4 + 1096) + 8))();
          v56 = sub_23AA9F3D0(1, v57);
        }
        *(_QWORD *)(v4 + 1184) = sub_23AF9679C(v52 & 1, v54, v56);
        sub_23AAB7E4C((_QWORD *)(v4 + 2672), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
        v29 = 0;
      }
    }
  }
  v58 = (*(uint64_t (**)(void))(v4 + 1168))();
  if (sub_23AA9F3D0(4096, v58))
  {
    if (v29)
      goto LABEL_9;
    if (sub_23AC37674(*(_QWORD *)(v4 + 1184), 1003) || sub_23AC37674(*(_QWORD *)(v4 + 1184), 502))
    {
      v59 = *(_QWORD *)(v4 + 64);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1296))(v59, *(_QWORD *)(v4 + 1056), *(_QWORD *)(v4 + 1088));
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v4 + 1304))(v59, 1, *(_QWORD *)(v4 + 1112)) == 1)
      {
        (*(void (**)(_QWORD, _QWORD))(v4 + 1208))(*(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 1088));
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 856) + 56))(*(_QWORD *)(v4 + 56), 1, 1, *(_QWORD *)(v4 + 1240));
LABEL_35:
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 832) + 8))(*(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 840));
        goto LABEL_36;
      }
      v60 = *(_QWORD *)(v4 + 1112);
      v61 = *(_QWORD *)(v4 + 64);
      v62 = *(_QWORD *)(v4 + 600);
      v63 = *(_QWORD *)(v4 + 592);
      v64 = *(_QWORD *)(v4 + 640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v63, v61 + *(int *)(v60 + 52), v64);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1096) + 8))(v61, v60);
      v65 = *(_QWORD *)(v4 + 56);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 832) + 16))(v65, v63, *(_QWORD *)(v4 + 840));
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v64);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 856) + 48))(v65, 1, *(_QWORD *)(v4 + 1240)) == 1)goto LABEL_35;
      v72 = *(_QWORD *)(v4 + 24);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v4 + 856) + 32))(v72, *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 1240));
      v73 = *(_QWORD *)(v4 + 1400);
      (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v4 + 1192) + 240))(v72, 1);
      *(_QWORD *)(v4 + 1400) = v73;
      if (v73)
        JUMPOUT(0x23B10ACD8);
      if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v4 + 560) + 48))(*(_QWORD *)(v4 + 32), 1, *(_QWORD *)(v4 + 568)) == 1)
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 472) + 8))(*(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 480));
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 856) + 8))(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 1240));
        goto LABEL_36;
      }
      v74 = *(_QWORD *)(v4 + 568);
      v75 = *(_QWORD *)(v4 + 32);
      v76 = *(_QWORD *)(v4 + 8);
      sub_23AA9BA80(v75 + *(int *)(v74 + 48), v76);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 560) + 8))(v75, v74);
      v77 = *(_BYTE *)(v76 + *(int *)(*(_QWORD *)(v4 + 1048) + 84));
      sub_23AA9F854(v76);
      if (sub_23AA9F51C(v77, 3))
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 856) + 8))(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 1240));
LABEL_37:
        type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 + 1376), *(_QWORD *)(v4 + 1344), v66);
        v67 = swift_getTupleTypeMetadata2();
        v68 = *(_QWORD *)(v4 + 1264);
        v69 = v68 + *(int *)(v67 + 48);
        v11(v68, *(_QWORD *)(v4 + 1224), *(_QWORD *)(v7 - 72));
        swift_storeEnumTagMultiPayload();
        *(_WORD *)v69 = 259;
        v70 = *(_QWORD *)(v4 + 1152);
        *(_QWORD *)(v69 + 8) = *(_QWORD *)(v4 + 1144);
        *(_QWORD *)(v69 + 16) = v70;
        swift_storeEnumTagMultiPayload();
        v71 = *(_QWORD *)(v4 + 1272);
        swift_storeEnumTagMultiPayload();
        sub_23AEB700C(*(_QWORD *)(v4 + 1360), v68);
        v15(v68, v71);
        goto LABEL_9;
      }
      v78 = sub_23AA9F51C(v77, 2);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 856) + 8))(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 1240));
      if (v78)
        goto LABEL_37;
    }
  }
  else if (v29)
  {
    goto LABEL_9;
  }
LABEL_36:
  if (!sub_23AC37674(*(_QWORD *)(v4 + 1184), 2))
    goto LABEL_9;
  goto LABEL_37;
}

void sub_23B108D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedConformanceWitness;

  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  v12 = (_BYTE *)(*(_QWORD *)(v4 + 1264) + *(int *)(swift_getTupleTypeMetadata2() + 48));
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 1352) + 16);
  v14 = *(_QWORD *)(v4 + 1264);
  v15 = v8;
  v16 = v9;
  *(_QWORD *)(v4 + 1216) = v13;
  v13(v14, v10, v15);
  swift_storeEnumTagMultiPayload();
  *v12 = 0;
  v17 = *(_QWORD *)(v4 + 1264);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v4 + 1360), v17);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1232) + 8);
  v18(v17, v16);
  v19 = *(_QWORD *)(v4 + 1088);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 1296))(v7, *(_QWORD *)(v4 + 1056), v19);
  v20 = *(_QWORD *)(v4 + 1112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 1304))(v7, 1, v20) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 1208))(v7, v19);
    v21 = *(_QWORD *)(v4 + 744);
  }
  else
  {
    *(_QWORD *)(v4 + 1192) = v18;
    v22 = *(_QWORD *)(v4 + 960);
    v23 = v7;
    v24 = *(_QWORD *)(v4 + 936);
    v25 = *(_QWORD *)(v4 + 984);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v23, v25);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1096) + 8))(v23, v20);
    v26 = *(unsigned __int8 *)(v24 + *(int *)(v25 + 56));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v25);
    v27 = *(_QWORD *)(v4 + 1224);
    v21 = *(_QWORD *)(v4 + 744);
    if (v26 != 6 && sub_23AA9F51C(v26, 0) && *(_DWORD *)(v4 + 1312) != 3)
    {
      type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 + 1392), *(_QWORD *)(v4 + 1384), v28);
      swift_getTupleTypeMetadata2();
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v4 + 1216))(*(_QWORD *)(v4 + 1264), v27, *(_QWORD *)(v11 - 72));
      swift_storeEnumTagMultiPayload();
      v29 = *(_QWORD *)(v4 + 1264);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_23AEB700C(*(_QWORD *)(v4 + 1360), v29);
      (*(void (**)(uint64_t, uint64_t))(v4 + 1192))(v29, v16);
    }
  }
  if (sub_23AA9F3D0(16, *(_QWORD *)(v4 + 2416))
    && (sub_23AF21910(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288)) & 1) == 0)
  {
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 + 1296))(v21, *(_QWORD *)(v4 + 1056), *(_QWORD *)(v4 + 1088));
    v30 = *(_QWORD *)(v4 + 1112);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 1304))(v21, 1, v30) != 1)
    {
      v31 = *(_QWORD *)(v4 + 400);
      (*(void (**)(void))(*(_QWORD *)(v4 + 1096) + 32))();
      if (sub_23B0C6AC4(v30))
      {
        if (sub_23B0C9B4C(*(_BYTE *)(v31 + *(int *)(v30 + 52) + *(int *)(*(_QWORD *)(v4 + 640) + 52))))
        {
          v32 = *(_QWORD *)(v4 + 1240);
          AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          *(_QWORD *)(v4 + 2160) = *(_QWORD *)(v11 - 72);
          *(_QWORD *)(v4 + 2168) = v32;
          *(_QWORD *)(v4 + 2176) = *(_QWORD *)(v4 + 1248);
          *(_QWORD *)(v4 + 2184) = AssociatedConformanceWitness;
          type metadata accessor for ReconciliationID();
        }
        JUMPOUT(0x23B1096A0);
      }
      JUMPOUT(0x23B1091A8);
    }
    JUMPOUT(0x23B1091B8);
  }
  JUMPOUT(0x23B1091C0);
}

void sub_23B1090D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  v11 = (_BYTE *)(v4[158] + *(int *)(swift_getTupleTypeMetadata2() + 48));
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v4[169] + 16))(v4[158], v9, v8);
  swift_storeEnumTagMultiPayload();
  *v11 = 2;
  v12 = v4[158];
  swift_storeEnumTagMultiPayload();
  v13 = v4[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v12);
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v4[137] + 8))(v10, v7);
  JUMPOUT(0x23B1091BCLL);
}

void sub_23B10936C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  _BYTE *v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v12 = type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 + 1392), *(_QWORD *)(v4 + 1384), a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v4 + 1176) = TupleTypeMetadata2;
  v14 = (_BYTE *)(v6 + *(int *)(TupleTypeMetadata2 + 48));
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 1352) + 16);
  *(_QWORD *)(v4 + 1184) = v15;
  v15(v6, v5, v8);
  *(_QWORD *)(v4 + 1192) = a1;
  swift_storeEnumTagMultiPayload();
  *v14 = 1;
  *(_QWORD *)(v4 + 1216) = v12;
  swift_storeEnumTagMultiPayload();
  v16 = *(_QWORD *)(v4 + 1272);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v4 + 1360), v6);
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1232) + 8);
  v17(v6, v16);
  if (*(_BYTE *)(v7 + v9) == 1)
  {
    *(_QWORD *)(v4 + 2160) = *(_QWORD *)(v4 + 1392);
    *(_QWORD *)(v4 + 2168) = *(_QWORD *)(v4 + 1376);
    *(_QWORD *)(v4 + 2176) = *(_QWORD *)(v4 + 1384);
    *(_QWORD *)(v4 + 2184) = *(_QWORD *)(v4 + 1344);
    type metadata accessor for Materialization.MaterializeIgnoredItem();
  }
  *(_QWORD *)(v4 + 1168) = v17;
  v18 = *(_QWORD *)(v4 + 1224);
  v19 = sub_23AF219A4(*(_QWORD *)(v4 + 1336), *(_QWORD *)(v4 + 1288));
  v20 = sub_23AC37B08(v19, 1);
  v21 = *(_QWORD *)(v4 + 1344);
  v22 = *(_QWORD *)(v4 + 1384);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v4 + 1304);
  if (v20)
  {
    *(_QWORD *)(v4 + 2160) = *(_QWORD *)(v4 + 1392);
    *(_QWORD *)(v4 + 2168) = *(_QWORD *)(v4 + 1376);
    *(_QWORD *)(v4 + 2176) = v22;
    *(_QWORD *)(v4 + 2184) = v21;
    type metadata accessor for Ingestion.FetchChildrenMetadata();
  }
  v24 = *(_QWORD *)(v4 + 392);
  v25 = *(_QWORD *)(v4 + 1088);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 1296))(v24, *(_QWORD *)(v4 + 1056), v25);
  if (v23(v24, 1, *(_QWORD *)(v4 + 1112)) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 1208))(v24, v25);
  }
  else
  {
    v26 = *(_QWORD *)(v4 + 1112);
    v27 = sub_23B0C6AC4(v26);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1096) + 8))(v24, v26);
    if (!v27)
    {
      v28 = *(_QWORD *)(v4 + 1264);
      v29 = (uint64_t *)(v28 + *(int *)(*(_QWORD *)(v4 + 1176) + 48));
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 1184))(v28, v18, *(_QWORD *)(v10 - 72));
      swift_storeEnumTagMultiPayload();
      v30 = sub_23AFA7BFC();
      v31 = *(_QWORD *)(v4 + 1144);
      *v29 = *v30;
      v29[1] = v31;
      v29[2] = *(_QWORD *)(v4 + 1152);
      swift_storeEnumTagMultiPayload();
      v32 = *(_QWORD *)(v4 + 1272);
      swift_storeEnumTagMultiPayload();
      sub_23AEB700C(*(_QWORD *)(v4 + 1360), v28);
      (*(void (**)(uint64_t, uint64_t))(v4 + 1168))(v28, v32);
    }
  }
  JUMPOUT(0x23B109870);
}

void sub_23B10946C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;

  v4 = sub_23ADA8168(a1);
  v6 = sub_23B134BC8(*(_QWORD *)(v1 + 1224), v4, v5, 0x2000000);
  sub_23AE181A4(v2, v6);
  swift_release();
  v7 = *(_QWORD *)(v1 + 384);
  v8 = *(_QWORD *)(v1 + 1088);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 1296))(v7, *(_QWORD *)(v1 + 1056), v8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 1304);
  if (v9(v7, 1, *(_QWORD *)(v1 + 1112)) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 1208))(v7, v8);
  }
  else
  {
    v10 = *(_QWORD *)(v1 + 960);
    v11 = *(_QWORD *)(v1 + 936);
    v12 = *(_QWORD *)(v1 + 984);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v7, v12);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1096) + 8))(v7, *(_QWORD *)(v1 + 1112));
    v13 = *(unsigned __int8 *)(v11 + *(int *)(v12 + 56));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    if (v13 != 6)
      sub_23AD683E4();
  }
  v14 = *(_QWORD *)(v1 + 1072);
  v15 = *(_QWORD *)(v1 + 760);
  if (sub_23AA9F3D0(2, *(_QWORD *)(v1 + 2416)))
  {
    v16 = *(_QWORD *)(v1 + 1088);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 1296))(v15, *(_QWORD *)(v1 + 1056), v16);
    v17 = v9;
    v18 = *(_QWORD *)(v1 + 1112);
    if (v17(v15, 1, v18) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    }
    else
    {
      v19 = v15 + *(int *)(v18 + 52);
      v20 = *(_QWORD *)(v1 + 600);
      v21 = *(_QWORD *)(v1 + 592);
      v22 = v15;
      v23 = *(_QWORD *)(v1 + 640);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v21, v19, v23);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 1096) + 8))(v22, v18);
      v24 = *(unsigned __int8 *)(v21 + *(int *)(v23 + 44));
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v23);
      if (v24 != 3 && !(*(_DWORD *)(v1 + 1200) & 1 | !sub_23AA9F51C(v24, 2)))
      {
        v25 = *(_QWORD *)(v1 + 1240);
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        *(_QWORD *)(v1 + 2160) = *(_QWORD *)(v3 - 72);
        *(_QWORD *)(v1 + 2168) = v25;
        *(_QWORD *)(v1 + 2176) = *(_QWORD *)(v1 + 1248);
        *(_QWORD *)(v1 + 2184) = AssociatedConformanceWitness;
        type metadata accessor for ReconciliationID();
      }
    }
  }
  JUMPOUT(0x23B109A6CLL);
}

void sub_23B10956C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23B126EF4(v1, *(_QWORD *)(v0 + 1144), *(_QWORD *)(v0 + 1152), 0x4000000, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

void sub_23B10958C(uint64_t a1)
{
  uint64_t v1;

  sub_23AE181A4(*(_QWORD *)(v1 + 1360), a1);
  swift_release();
  JUMPOUT(0x23B1095A8);
}

void sub_23B1097B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 1400) = v1;
  if (!v1)
    JUMPOUT(0x23B109868);
  JUMPOUT(0x23B10ACE0);
}

void sub_23B1099A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  v10 = v4[158] + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v4[169] + 16))(v4[158], v9, v7);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)v10 = 770;
  v11 = v4[144];
  *(_QWORD *)(v10 + 8) = v4[143];
  *(_QWORD *)(v10 + 16) = v11;
  v12 = v4[158];
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v12);
  (*(void (**)(uint64_t, uint64_t))(v4[154] + 8))(v12, v8);
  JUMPOUT(0x23B109A6CLL);
}

void sub_23B109C1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  void (*v5)(_QWORD, uint64_t);
  uint64_t v6;

  if (v1)
  {
    swift_release();
    v4 = *(void (**)(uint64_t, uint64_t))(v0[171] + 8);
    v4(v2, v3);
    v4(v0[157], v3);
    v5 = *(void (**)(_QWORD, uint64_t))(v0[134] + 8);
    v6 = v0[136];
    v5(v0[132], v6);
    v5(v0[141], v6);
    v4(v0[153], v3);
    JUMPOUT(0x23B102A3CLL);
  }
  (*(void (**)(uint64_t, uint64_t))(v0[171] + 8))(v2, v3);
  swift_release();
  v0[270] = v0[174];
  v0[271] = v0[172];
  v0[272] = v0[173];
  v0[273] = v0[168];
  type metadata accessor for Job();
}

void sub_23B109CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  void (*v5)(_QWORD *);
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  if (MEMORY[0x23B85F0E0](v2, a1))
  {
    for (i = 0; ; ++i)
    {
      v5 = sub_23AB22848((_QWORD *)(v1 + 2160), i, v2, a1);
      v7 = *v6;
      swift_retain();
      ((void (*)(uint64_t, _QWORD))v5)(v1 + 2160, 0);
      v8 = i + 1;
      if (__OFADD__(i, 1))
        break;
      sub_23AE181A4(*(_QWORD *)(v1 + 1360), v7);
      swift_release();
      if (v8 == MEMORY[0x23B85F0E0](v2, a1))
      {
        swift_bridgeObjectRelease();
        JUMPOUT(0x23B109D5CLL);
      }
    }
    __break(1u);
    JUMPOUT(0x23B10AE2CLL);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x23B109D58);
}

void sub_23B109E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD, uint64_t);
  uint64_t v25;

  type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  v10 = v4[158] + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v11 = *(void (**)(_QWORD, uint64_t, uint64_t))(v4[169] + 16);
  v11(v4[158], v5, v8);
  v4[165] = v11;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v10 = 0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = 0xB000000000000000;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_BYTE *)(v10 + 56) = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v12 = v4[170];
  sub_23AEB700C(v12, v4[158]);
  v13 = v6;
  v14 = *(void (**)(uint64_t, uint64_t))(v4[154] + 8);
  v14(v4[158], v4[159]);
  type metadata accessor for ReconciliationSideMutation(255, v13, v7, v15);
  v16 = v4[158] + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v17 = v5;
  v18 = *(_QWORD *)(v9 - 72);
  v11(v4[158], v17, v18);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  *(_QWORD *)(v16 + 16) = 0xB000000000000000;
  v19 = v4[159];
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_BYTE *)(v16 + 56) = 0;
  v20 = v4[158];
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v12, v20);
  v14(v20, v19);
  v21 = v20 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  ((void (*)(uint64_t, _QWORD, uint64_t))v4[165])(v20, v4[153], v18);
  v22 = v4[83];
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v21 = 4;
  *(_BYTE *)(v21 + 8) = 0;
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v12, v20);
  v14(v20, v19);
  v23 = v4[175];
  sub_23AB24D8C(v22, v4[176]);
  if (v23)
  {
    (*(void (**)(uint64_t, _QWORD))(v4[137] + 8))(v22, v4[139]);
    (*(void (**)(_QWORD, _QWORD))(v4[171] + 8))(v4[157], v4[167]);
    v24 = *(void (**)(_QWORD, uint64_t))(v4[134] + 8);
    v25 = v4[136];
    v24(v4[132], v25);
    v24(v4[141], v25);
    JUMPOUT(0x23B10153CLL);
  }
  (*(void (**)(uint64_t, _QWORD))(v4[137] + 8))(v22, v4[139]);
  JUMPOUT(0x23B10A548);
}

void sub_23B10A13C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v4 = v0[158] + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v5 = v1;
  v6 = v0[158];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[169] + 16))(v6, v0[153], v5);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v4 = 4;
  *(_BYTE *)(v4 + 8) = 1;
  v7 = v0[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v0[170], v6);
  (*(void (**)(uint64_t, uint64_t))(v0[154] + 8))(v6, v7);
  v8 = v0[175];
  sub_23AB24D8C(v2, v0[176]);
  v9 = v0[132];
  if (v8)
  {
    (*(void (**)(uint64_t, _QWORD))(v0[137] + 8))(v2, v0[139]);
    (*(void (**)(_QWORD, uint64_t))(v0[171] + 8))(v0[157], v3);
    v10 = *(void (**)(uint64_t, uint64_t))(v0[134] + 8);
    v11 = v0[136];
    v10(v9, v11);
    v10(v0[141], v11);
    JUMPOUT(0x23B101540);
  }
  JUMPOUT(0x23B10A530);
}

void sub_23B10A2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4[164] = type metadata accessor for ReconciliationSideMutation(255, v4[174], v4[173], a4);
  v7 = v4[158] + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v8 = v4[153];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v5 + 16))(v4[158], v8, v6);
  swift_storeEnumTagMultiPayload();
  v9 = v4[79];
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v11 = *(int *)(TupleTypeMetadata3 + 48);
  v12 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8 + *(int *)(v4[167] + 40), v9);
  *(_BYTE *)(v7 + v11) = 1;
  *(_BYTE *)(v7 + v12) = 0;
  v13 = v4[158];
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[170], v13);
  JUMPOUT(0x23B10A3E0);
}

void sub_23B10A41C()
{
  uint64_t *v0;

  sub_23B126EF4(v0[165], v0[143], v0[144], 2048, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

void sub_23B10A448(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23AE181A4(v1[170], a1);
  swift_release();
  v1[270] = v1[174];
  v1[271] = v1[172];
  v1[272] = v3;
  v1[273] = v2;
  type metadata accessor for Ingestion.ReSnapshotChildren();
}

void sub_23B10A48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B126E34(v2, v1, v0, 2048, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
}

void sub_23B10A4B4(uint64_t a1)
{
  uint64_t v1;

  sub_23AE181A4(v1, a1);
  swift_release();
  JUMPOUT(0x23B109D5CLL);
}

void sub_23B10A658()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD, uint64_t);
  uint64_t v8;

  swift_storeEnumTagMultiPayload();
  v4 = v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(_QWORD *)v4 = 8;
  *(_BYTE *)(v4 + 8) = v1 ^ 1;
  v5 = v0[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v0[170], v3);
  (*(void (**)(uint64_t, uint64_t))(v0[154] + 8))(v3, v5);
  v6 = v0[175];
  sub_23AB24D8C(v2, v0[176]);
  if (v6)
  {
    (*(void (**)(uint64_t, _QWORD))(v0[137] + 8))(v2, v0[139]);
    (*(void (**)(_QWORD, _QWORD))(v0[171] + 8))(v0[157], v0[167]);
    v7 = *(void (**)(_QWORD, uint64_t))(v0[134] + 8);
    v8 = v0[136];
    v7(v0[132], v8);
    v7(v0[141], v8);
    JUMPOUT(0x23B10A758);
  }
  (*(void (**)(uint64_t, _QWORD))(v0[137] + 8))(v2, v0[139]);
  JUMPOUT(0x23B10A79CLL);
}

void sub_23B10A8A0()
{
  sub_23AEB6FD8();
}

void sub_23B10A8A8()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;

  v3 = v0[155];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if ((v1 & 1) != 0)
  {
    v0[270] = *(_QWORD *)(v2 - 72);
    v0[271] = v3;
    v0[272] = v0[156];
    v0[273] = AssociatedConformanceWitness;
    type metadata accessor for ReconciliationID();
  }
  v0[270] = *(_QWORD *)(v2 - 72);
  v0[271] = v3;
  v0[272] = v0[156];
  v0[273] = AssociatedConformanceWitness;
  type metadata accessor for ReconciliationID();
}

void sub_23B10A9A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata3;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v3 = *(int *)(TupleTypeMetadata3 + 48);
  v4 = *(int *)(TupleTypeMetadata3 + 64);
  v5 = v0[158];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[169] + 16))(v5, v0[153], v1);
  swift_storeEnumTagMultiPayload();
  v6 = sub_23ACD8490(0);
  v7 = sub_23AFD7BC8(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + v3) = v7;
  *(_QWORD *)(v5 + v4) = 2;
  JUMPOUT(0x23B10AA28);
}

void sub_23B10AA78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[167];
  if (v1)
  {
    swift_release();
    (*(void (**)(_QWORD, uint64_t))(v0[171] + 8))(v0[157], v2);
    JUMPOUT(0x23B10AAB0);
  }
  swift_release();
  JUMPOUT(0x23B10AAE4);
}

void sub_23B10B400()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata3;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v3 = *(int *)(TupleTypeMetadata3 + 48);
  v4 = *(int *)(TupleTypeMetadata3 + 64);
  v5 = v0[158];
  (*(void (**)(uint64_t))(v0[169] + 16))(v5);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v5 + v3) = 1;
  v6 = sub_23ACD8490(0);
  v7 = sub_23AFD7BC8(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + v4) = v7;
  v8 = v0[159];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v0[170], v5);
  (*(void (**)(uint64_t, uint64_t))(v0[154] + 8))(v5, v8);
  (*(void (**)(_QWORD, _QWORD))(v0[70] + 8))(v0[5], v0[71]);
  (*(void (**)(_QWORD, uint64_t))(v0[107] + 8))(v0[38], v1);
  (*(void (**)(_QWORD, _QWORD))(v0[137] + 8))(v0[57], v0[139]);
  JUMPOUT(0x23B1092ECLL);
}

void sub_23B10B55C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23ADA8168(a1);
  v4 = sub_23B126FF0(v1[153], v2, v3, 0x8000000);
  sub_23AE181A4(v1[170], v4);
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(v1[70] + 8))(v1[6], v1[71]);
  (*(void (**)(_QWORD, _QWORD))(v1[107] + 8))(v1[12], v1[155]);
  JUMPOUT(0x23B1088F4);
}

void sub_23B10B900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23ADA8168(a1);
  v4 = sub_23B126FF0(*(_QWORD *)(v1 + 104), v2, v3, 1);
  sub_23AE1ACCC(*(_QWORD *)(v1 + 1360), v4);
  swift_release();
  JUMPOUT(0x23B10B058);
}

uint64_t sub_23B10BA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  type metadata accessor for SnapshotItem(255, a2, a4, a4);
  v5 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v9 - v7, a1, v5);
  return sub_23B1C6434();
}

uint64_t sub_23B10BAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE v14[16];

  v5 = type metadata accessor for SnapshotItem(255, a2, a4, a4);
  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v14[-v8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(&v14[-v8], a1, v6);
  v10 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
  {
    v11 = 4;
  }
  else
  {
    v12 = MEMORY[0x23B8613CC](&unk_23B1DD478, v5);
    v11 = sub_23AF219A4(v5, v12);
    v7 = v10;
    v6 = v5;
  }
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v14[15] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4690);
  return sub_23B1C6434();
}

void sub_23B10BBEC()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B10BC34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedConformanceWitness;
  char v9;
  char v10;
  uint64_t v12;

  *(_QWORD *)(v2 - 160) = a1;
  v3 = sub_23B1C6C98();
  *(_QWORD *)(v2 - 152) = v3;
  *(_QWORD *)(v2 - 168) = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = (char *)&v12 - v6;
  if (sub_23AE4F6B4())
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1, AssociatedTypeWitness);
    if ((v9 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    }
    else
    {
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
      if ((v10 & 1) == 0)
        sub_23AB00114();
    }
  }
  return 1;
}

void sub_23B10BDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 - 160) - 8) + 48))(v1, 1);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 168) + 8))(v1, *(_QWORD *)(v2 - 152));
  }
  JUMPOUT(0x23B10BD78);
}

void sub_23B10BDF8(uint64_t a1, int a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v10 = a2;
  v16 = a1;
  v3 = (_QWORD *)*a3;
  v4 = sub_23B1C5E4C();
  v9[2] = *(_QWORD *)(v4 - 8);
  v9[3] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v13 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v3[10];
  v6 = v3[11];
  v8 = v3[13];
  v14 = v3[12];
  v15 = v7;
  v17 = v7;
  v18 = v6;
  v11 = v8;
  v12 = v6;
  v19 = v14;
  v20 = v8;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B10BE8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[96];

  v4 = sub_23B1C6C98();
  v5 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v2 - 128) = a1;
  v6 = MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v2 - 216) = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v2 - 160) = &v12[-v9];
  v10 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v2 - 184) = *(_QWORD *)(v1 + 32);
  if (sub_23AE4F6B4())
    sub_23AB00114();
  return 0;
}

uint64_t sub_23B10C4AC@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  char v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  char *v68;
  int v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  char *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[3];
  char *v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  void (*v100)(char *, char *, uint64_t);
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[248];
  _BYTE v109[248];
  _BYTE v110[248];
  _BYTE v111[248];
  _QWORD v112[32];
  uint64_t v113;

  v96 = a5;
  LODWORD(v99) = a4;
  v95 = a3;
  v113 = a2;
  v100 = a1;
  v102 = a7;
  v8 = *a6;
  v91 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v91);
  v90 = (char *)v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v8 + 80);
  v97 = *(_QWORD *)(v8 + 96);
  v98 = v10;
  v12 = type metadata accessor for SnapshotItem(0, v10, v97, v11);
  v103 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v92 = (char *)v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v101 = (char *)v82 - v15;
  v107 = v16;
  v17 = sub_23B1C6C98();
  v104 = *(_QWORD *)(v17 - 8);
  v105 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v94 = (char *)v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v93 = (char *)v82 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v89 = (char *)v82 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v88 = (char *)v82 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v87 = (char *)v82 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v82 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)v82 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)v82 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)v82 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37);
  v42 = (char *)v82 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)v82 - v43;
  v86 = a6;
  v45 = a6[4];
  v46 = v106;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v45 + 240))(v113, 1);
  if (!v46)
  {
    v82[0] = v39;
    v82[1] = v33;
    v82[2] = v36;
    v83 = v30;
    v85 = v45;
    v48 = (char)v99;
    v106 = 0;
    v49 = v104;
    v50 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
    v50(v42, (char *)v100, v105);
    v51 = v103;
    v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
    if (v52(v42, 1, v107) == 1)
    {
      v53 = v105;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v105);
      v54 = (uint64_t)v93;
      v84 = v44;
      v50(v93, v44, v53);
      v55 = (uint64_t)v94;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v94, 1, 1, v107);
      v56 = sub_23AE4F6B4();
      sub_23B0FD8E0(v54, v55, v113, 0, v56 && (v96 & 0x400000) == 0, 0x6C6564206D657469, 0xEC00000064657465, v98, v102, v81, v97);
    }
    v94 = (char *)v52;
    v57 = v105;
    v93 = *(char **)(v51 + 32);
    ((void (*)(char *, char *, uint64_t))v93)(v101, v42, v107);
    if ((v48 & 1) == 0)
      sub_23B0F9234();
    v100 = v50;
    v58 = v57;
    v59 = v44;
    v60 = v107;
    v61 = (uint64_t)v90;
    v62 = v92;
    sub_23AA724E8((uint64_t)&v101[*(int *)(v107 + 52)], (uint64_t)v110, &qword_2542E5050);
    sub_23AA724E8((uint64_t)v110, (uint64_t)v111, &qword_2542E5050);
    if (sub_23AAFCF2C((uint64_t)v111) == 1)
    {
      v63 = v91;
      goto LABEL_14;
    }
    v64 = v83;
    v100(v83, v59, v58);
    v65 = v94;
    v66 = ((uint64_t (*)(char *, uint64_t, uint64_t))v94)(v64, 1, v60);
    v99 = *(void (**)(char *, uint64_t))(v104 + 8);
    v99(v64, v58);
    if (v66 == 1)
    {
      v63 = v91;
LABEL_13:
      v62 = v92;
LABEL_14:
      v68 = v87;
      v100(v87, v59, v58);
      v69 = ((uint64_t (*)(char *, uint64_t, uint64_t))v94)(v68, 1, v60);
      v84 = v59;
      if (v69 == 1)
      {
        (*(void (**)(char *, uint64_t))(v104 + 8))(v68, v58);
        v71 = v102;
        v70 = v103;
        v72 = v101;
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v93)(v62, v68, v60);
        sub_23AA9BA80((uint64_t)&v62[*(int *)(v60 + 48)], v61);
        v73 = v62;
        v70 = v103;
        (*(void (**)(char *, uint64_t))(v103 + 8))(v73, v60);
        v74 = *(_BYTE *)(v61 + *(int *)(v63 + 48));
        sub_23AA9F854(v61);
        v72 = v101;
        v71 = v102;
        v101[*(int *)(v60 + 48) + *(int *)(v63 + 48)] = v74;
        v59 = v84;
      }
      v75 = (uint64_t)v88;
      v100(v88, v59, v58);
      v76 = (uint64_t)v89;
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v89, v72, v60);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v76, 0, 1, v60);
      v77 = sub_23AE4F6B4();
      if (v95 == 4)
        v78 = 0x6F7270206D657469;
      else
        v78 = 0x616863206D657469;
      if (v95 == 4)
        v79 = 0xEF64657461676170;
      else
        v79 = 0xEC0000006465676ELL;
      sub_23B0FD8E0(v75, v76, v113, (v96 & 0x800400000) != 0, v77, v78, v79, v98, v71, v81, v97);
    }
    v67 = ((uint64_t (*)(char *, uint64_t, uint64_t))v65)(v59, 1, v60);
    v63 = v91;
    if (!v67)
    {
      sub_23AA724E8((uint64_t)&v59[*(int *)(v60 + 52)], (uint64_t)v108, &qword_2542E5050);
      v63 = v91;
      sub_23AA724E8((uint64_t)v108, (uint64_t)v109, &qword_2542E5050);
      if (sub_23AAFCF2C((uint64_t)v109) != 1)
        goto LABEL_13;
    }
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v94)(v59, 1, v60))
      goto LABEL_13;
    v80 = v106;
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v85 + 264))(v112, v113);
    v106 = v80;
    if (!v80)
    {
      sub_23AD3BD7C((uint64_t)v112, (uint64_t)&v59[*(int *)(v60 + 52)]);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v60);
    return ((uint64_t (*)(char *, uint64_t))v99)(v59, v58);
  }
  return result;
}

uint64_t sub_23B10CEB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;

  v12 = type metadata accessor for JobLockRule(0, a6, a9, a4);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v36 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v36 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)v36 - v24;
  if (!a2)
  {
LABEL_14:
    v31 = 0xD000000000000016;
    sub_23AEB4428(0xD000000000000016, 0x800000023B207490, 0, 2);
    return v31;
  }
  if ((a3 & 1) != 0)
    return 0;
  v36[0] = v23;
  swift_retain();
  v26 = swift_bridgeObjectRetain();
  if (!MEMORY[0x23B85F0E0](v26, v12))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v32 = swift_bridgeObjectRetain();
    if (MEMORY[0x23B85F0E0](v32, v12))
    {
      v33 = 0;
      while (1)
      {
        v34 = sub_23B1C6770();
        sub_23B1C6734();
        if ((v34 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v19, a1+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v33, v12);
          v35 = v33 + 1;
          if (__OFADD__(v33, 1))
            goto LABEL_27;
        }
        else
        {
          result = sub_23B1C6F38();
          if (v36[0] != 8)
            goto LABEL_33;
          v37 = result;
          (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 16))(v19, &v37, v12);
          swift_unknownObjectRelease();
          v35 = v33 + 1;
          if (__OFADD__(v33, 1))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v19, v12);
        if ((sub_23ABD01C4() & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
        ++v33;
        if (v35 == MEMORY[0x23B85F0E0](a1, v12))
          goto LABEL_28;
      }
      swift_bridgeObjectRelease();
      v37 = 0;
      v38 = 0xE000000000000000;
      sub_23B1C64F4();
      MEMORY[0x23B8613CC](&unk_23B1D15C0, v12);
      sub_23B1C7340();
      sub_23B1C64F4();
      swift_release();
      v31 = v37;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      return v31;
    }
LABEL_28:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  v36[1] = a2;
  v27 = 0;
  while (1)
  {
    v28 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v28 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v25, a1+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v27, v12);
      v29 = v27 + 1;
      if (__OFADD__(v27, 1))
        goto LABEL_13;
      goto LABEL_7;
    }
    result = sub_23B1C6F38();
    if (v36[0] != 8)
      break;
    v37 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 16))(v25, &v37, v12);
    swift_unknownObjectRelease();
    v29 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v25, v12);
    if ((sub_23ABD00F4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v37 = 0;
      v38 = 0xE000000000000000;
      sub_23B1C64F4();
      MEMORY[0x23B8613CC](&unk_23B1D15C0, v12);
      sub_23B1C7340();
      sub_23B1C64F4();
      v31 = v37;
      sub_23AEB4428(v37, v38, 0, 2);
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
      return v31;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
    ++v27;
    if (v29 == MEMORY[0x23B85F0E0](a1, v12))
      goto LABEL_9;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void sub_23B10D36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[16];

  v17[4] = a4;
  v17[11] = a3;
  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  v9 = type metadata accessor for FileTreeWriter.FileTreeChange(0, v7, v8, a4);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v17[5] = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_23B1C5E4C();
  v17[7] = *(_QWORD *)(v12 - 8);
  v17[8] = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = (void (*)(uint64_t))v6[27];
  v17[10] = a1;
  v14(v13);
  sub_23ABD41A0(a2);
  swift_release();
  v15 = v6[11];
  v16 = v6[13];
  v17[12] = v7;
  v17[13] = v15;
  v17[14] = v8;
  v17[15] = v16;
  type metadata accessor for ConcreteJobResult();
}

void sub_23B10D480()
{
  sub_23AEB6FD8();
}

uint64_t sub_23B10D488(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;

  v7 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v8 = v3;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9(v2, *(_QWORD *)(v5 - 120), v4);
  *(_QWORD *)(v5 - 160) = v1;
  v10 = sub_23B1C5E40();
  v11 = sub_23B1C6A88();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (_DWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_QWORD *)(v5 - 192) = v13;
    *(_QWORD *)(v5 - 112) = v13;
    *(_QWORD *)(v5 - 184) = a1;
    *v12 = 136446210;
    *(_QWORD *)(v5 - 208) = v12 + 1;
    *(_QWORD *)(v5 - 200) = v12;
    v14 = *(_QWORD *)(v5 - 168);
    v9(v14, v2, v4);
    v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v15(v2, v4);
    sub_23ADB4C18(v4);
    v17 = v16;
    v19 = v18;
    v15(v14, v4);
    *(_QWORD *)(v5 - 72) = sub_23AABEC68(v17, v19, (uint64_t *)(v5 - 112));
    a1 = *(uint64_t **)(v5 - 184);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v20 = *(uint8_t **)(v5 - 200);
    _os_log_impl(&dword_23AA66000, v10, v11, "%{public}s", v20, 0xCu);
    v21 = *(_QWORD *)(v5 - 192);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v21, -1, -1);
    MEMORY[0x23B8614BC](v20, -1, -1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v4);
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 152) + 8))(*(_QWORD *)(v5 - 160), *(_QWORD *)(v5 - 144));
  v22 = *(_QWORD *)(v5 - 136);
  sub_23B0FB994(*(_QWORD *)(v5 - 120), 1, a1, *(uint64_t **)(v5 - 128));
  if (!v22)
    sub_23AEBF200((uint64_t)a1, *(_QWORD *)(v5 - 176));
  return swift_release();
}

uint64_t sub_23B10D688()
{
  return 0x656D2D6863746566;
}

uint64_t sub_23B10D6AC()
{
  uint64_t v0;

  if ((*(_QWORD *)(v0 + 128) & 0x10000) != 0)
    return 3;
  else
    return 2 * ((*(_QWORD *)(v0 + 128) & 0x8008) != 0);
}

uint64_t sub_23B10D6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD **v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[40];
  uint64_t v33;

  v6 = v5;
  v7 = v4;
  v33 = a1;
  v9 = type metadata accessor for JobLockRule(0, *(_QWORD *)(*v7 + 560), *(_QWORD *)(*v7 + 576), a4);
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_23B1C6C98();
  v29 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - v14;
  v16 = *(_QWORD ***)(a2 + 32);
  v17 = *(uint64_t (**)(uint64_t))(*v16[2] + 304);
  v18 = swift_retain();
  v19 = v17(v18);
  swift_release();
  if ((v19 & 1) != 0)
    return 0;
  v21 = (char *)v7 + *(_QWORD *)(*v7 + 536);
  v20 = (uint64_t)v16;
  ((void (*)(char *))(*v16)[35])(v21);
  if (!v6)
  {
    swift_beginAccess();
    sub_23AD4332C((uint64_t)(v7 + 6), (uint64_t)v32);
    v22 = v7[14];
    v23 = &v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v11, v21, AssociatedTypeWitness);
    v24 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v23, v15, v13);
    v25 = v31;
    swift_storeEnumTagMultiPayload();
    v20 = sub_23ABD2E40((uint64_t)v32, v22, (uint64_t)v11, v26);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v25);
    sub_23AD43374((uint64_t)v32);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v13);
  }
  return v20;
}

void sub_23B10D918()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B10D9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t (*v22)(_BYTE *, uint64_t);
  _BYTE v24[96];

  v4 = sub_23B1C6C98();
  *(_QWORD *)(v3 - 144) = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v3 - 168) = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v24[-v8];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v24[-v10];
  v12 = v0;
  v13 = *(_QWORD **)(v0 + 32);
  v14 = v13[2];
  v15 = v2 + *(_QWORD *)(v1 + 536);
  (*(void (**)(uint64_t))(*v13 + 616))(v15);
  v16 = *(_QWORD *)(v3 - 144);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v11, v9, v4);
  v17 = *(_BYTE **)(v3 - 168);
  v18 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v17, v11, v4);
  *(_QWORD *)(v3 - 176) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 272))(v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v12;
  v19[3] = v2;
  v20 = *(_QWORD *)(v3 - 128);
  v19[4] = *(_QWORD *)(v3 - 136);
  v19[5] = v20;
  v19[6] = *(_QWORD *)(v3 - 160);
  *(_QWORD *)(v3 - 136) = *(_QWORD *)(*(_QWORD *)v14 + 496);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v21 = *(void **)(v3 - 176);
  (*(void (**)(uint64_t, _BYTE *, void *, _QWORD, _QWORD, uint64_t (*)(uint64_t), _QWORD *))(v3 - 136))(v15, v17, v21, *(_QWORD *)(v3 - 152), 0, sub_23B129EA8, v19);
  swift_release();

  v22 = *(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 144) + 8);
  v22(v17, v4);
  return v22(v11, v4);
}

uint64_t sub_23B10DBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a6;
  v29 = a5;
  v30 = a4;
  v31 = a3;
  v32 = a2;
  v9 = *(_QWORD **)a2;
  v11 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v33 = a1;
  v34 = v11;
  v35 = v9[12];
  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, v11, v35, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v12 = sub_23B1C74F0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  v17 = swift_allocObject();
  v37 = v17;
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a2;
  v18 = swift_allocObject();
  v36 = v18;
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v33, v12);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = v34;
  v24 = v35;
  *((_QWORD *)v23 + 3) = v9[11];
  *((_QWORD *)v23 + 4) = v24;
  *((_QWORD *)v23 + 5) = v9[13];
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v19], v16, v12);
  v25 = (uint64_t *)&v23[v20];
  v26 = v29;
  *v25 = v30;
  v25[1] = v26;
  *(_QWORD *)&v23[v21] = v31;
  *(_QWORD *)&v23[v22] = v32;
  *(_QWORD *)&v23[(v22 + 15) & 0xFFFFFFFFFFFFFFF8] = v38;
  v27 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD433C8, v37, (uint64_t)sub_23AD43544, v36, (uint64_t)sub_23B12A004, (uint64_t)v23, v27, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23B10DE4C(char *a1, void (*a2)(uint64_t, uint64_t, unint64_t, void *), uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(void);
  uint64_t v65;
  void (*v66)(id *, char *, uint64_t);
  id v67;
  id v68;
  char v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  id v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int EnumCaseMultiPayload;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  uint64_t v92;
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  void (*v94)(char *, uint64_t);
  unsigned int (*v95)(id *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t AssociatedConformanceWitness;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  id *v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t (*v120)(char *, uint64_t, uint64_t);
  int v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  char *v130;
  int v131;
  uint64_t *v132;
  char *v133;
  double v134;
  int is_busy_date;
  void *v136;
  void (*v137)(uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  char *v145;
  char *v146;
  void (*v147)(char *, uint64_t);
  char *v148;
  id v149;
  char *v150;
  int v151;
  void (*v152)(char *, uint64_t, uint64_t, uint64_t);
  id v153;
  void (*v154)(uint64_t);
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  uint64_t v161;
  char v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t TupleTypeMetadata2;
  char *v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  void (*v197)(uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(char *, uint64_t, uint64_t);
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(uint64_t, uint64_t, unint64_t, void *);
  uint64_t v214;
  uint64_t *v215;
  unint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  id v225;

  v217 = a1;
  v210 = a6;
  v208 = a5;
  v212 = a3;
  v213 = a2;
  v215 = a4;
  v6 = *a4;
  v176 = type metadata accessor for ItemMetadata();
  v7 = MEMORY[0x24BDAC7A8](v176);
  v187 = (uint64_t)&v165 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 560);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v7);
  v188 = (char *)&v165 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v192 = (char *)&v165 - v13;
  v193 = v6;
  v14 = *(_QWORD *)(v6 + 576);
  v16 = type metadata accessor for FileTreeError(255, v9, v14, v15);
  v195 = sub_23B1C6C98();
  v194 = *(_QWORD *)(v195 - 8);
  MEMORY[0x24BDAC7A8](v195);
  v196 = (char *)&v165 - v17;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v198 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v175 = (char *)&v165 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v167 = (char *)&v165 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v186 = (char *)&v165 - v23;
  v211 = v24;
  v25 = sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v168 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v26 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v177 = (char *)&v165 - v27;
  v180 = v25;
  v182 = *(_QWORD *)(v25 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v169 = (char *)&v165 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v181 = (char *)&v165 - v31;
  v209 = v16;
  v202 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v197 = (void (*)(uint64_t, uint64_t))((char *)&v165 - v32);
  v173 = sub_23B1C5474();
  v172 = *(_QWORD *)(v173 - 8);
  MEMORY[0x24BDAC7A8](v173);
  v171 = (char *)&v165 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23B1C545C();
  v205 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v165 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SnapshotItem(0, v9, v14, v37);
  v199 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v184 = (char *)&v165 - v39;
  v200 = v40;
  v203 = sub_23B1C6C98();
  v207 = *(_QWORD *)(v203 - 8);
  v41 = MEMORY[0x24BDAC7A8](v203);
  v174 = (char *)&v165 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v166 = (char *)&v165 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v185 = (char *)&v165 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v190 = (char *)&v165 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v201 = (uint64_t)&v165 - v49;
  v214 = v14;
  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, v9, v14, v50);
  v204 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v51 = sub_23B1C74F0();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v178 = (char *)&v165 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v53);
  v56 = (id *)((char *)&v165 - v55);
  v218 = sub_23B1C6C98();
  v216 = *(_QWORD *)(v218 - 8);
  v57 = MEMORY[0x24BDAC7A8](v218);
  v189 = (char *)&v165 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v191 = (char *)&v165 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v63 = (char *)&v165 - v62;
  MEMORY[0x24BDAC7A8](v61);
  v206 = (char *)v10;
  v64 = *(void (**)(void))(v10 + 56);
  v219 = v9;
  v220 = (char *)&v165 - v65;
  v64();
  v170 = v52;
  v66 = *(void (**)(id *, char *, uint64_t))(v52 + 16);
  v66(v56, v217, v51);
  v179 = v51;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v75 = swift_retain();
      v213(v75, 0, 0, 0);
      swift_release_n();
      return (*(uint64_t (**)(char *, uint64_t))(v216 + 8))(v220, v218);
    }
    v95 = (unsigned int (*)(id *, uint64_t, uint64_t))*((_QWORD *)v206 + 6);
    v96 = v219;
    if (v95(v56, 1, v219) == 1)
    {
      v97 = v211;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      if (((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v97, AssociatedConformanceWitness) & 1) != 0)
      {
        (*(void (**)(id *, uint64_t))(v216 + 8))(v56, v218);
        v99 = *(_QWORD *)(v193 + 568);
        v100 = *(_QWORD *)(v193 + 584);
        v221 = v96;
        v222 = v99;
        v223 = v214;
        v224 = v100;
        type metadata accessor for JobResult();
      }
    }
    v205 = (uint64_t (*)(char *, uint64_t, uint64_t))v95;
    v101 = v216;
    v102 = v220;
    v103 = v218;
    v217 = *(char **)(v216 + 8);
    ((void (*)(char *, uint64_t))v217)(v220, v218);
    v104 = v56;
    v105 = v103;
    (*(void (**)(char *, id *, uint64_t))(v101 + 32))(v102, v104, v103);
    v106 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
    v107 = v102;
    v108 = v219;
    v106(v63, v107, v103);
    v109 = v201;
    v110 = (uint64_t)v63;
    v111 = v214;
    sub_23AF17160(v110, v108, v214, v201);
    v112 = v207;
    v113 = v190;
    v114 = v203;
    (*(void (**)(char *, uint64_t, uint64_t))(v207 + 16))(v190, v109, v203);
    v115 = v199;
    v116 = v200;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48))(v113, 1, v200) == 1)
    {
      (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v114);
      v216 = 0xEA00000000003E6CLL;
      v204 = 0x696E3A6D6574693CLL;
    }
    else
    {
      v117 = v184;
      (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v184, v113, v116);
      v221 = 0;
      v222 = 0xE000000000000000;
      sub_23B1C64F4();
      MEMORY[0x23B8613CC](&unk_23B1DD494, v116);
      sub_23B1C7340();
      sub_23B1C64F4();
      v204 = v221;
      v216 = v222;
      v118 = v117;
      v105 = v218;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v118, v116);
    }
    v119 = v191;
    v106(v191, v220, v105);
    v120 = v205;
    v121 = v205(v119, 1, v108);
    v122 = v192;
    if (v121 == 1)
    {
      ((void (*)(char *, uint64_t))v217)(v119, v105);
    }
    else
    {
      (*((void (**)(char *, char *, uint64_t))v206 + 4))(v192, v119, v108);
      v123 = v186;
      v124 = v122;
      v197 = *(void (**)(uint64_t, uint64_t))(v111 + 64);
      v197(v108, v111);
      v125 = v215;
      v126 = (uint64_t)v215 + *(_QWORD *)(*v215 + 536);
      v127 = v211;
      swift_getAssociatedConformanceWitness();
      v202 = v126;
      v128 = sub_23B1C63A4();
      (*(void (**)(char *, uint64_t))(v198 + 8))(v123, v127);
      if ((v128 & 1) == 0)
      {
        v143 = (uint64_t)v174;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v199 + 56))(v174, 1, 1, v200);
        sub_23B0F7398(v143, v202, 0, 0, 0, v208, v125[14], v125[15]);
      }
      (*((void (**)(char *, uint64_t))v206 + 1))(v124, v108);
      v105 = v218;
      v111 = v214;
      v114 = v203;
    }
    v129 = v114;
    v130 = v189;
    v106(v189, v220, v105);
    v131 = v120(v130, 1, v108);
    v132 = v215;
    if (v131 == 1)
    {
      ((void (*)(char *, uint64_t))v217)(v130, v105);
      goto LABEL_34;
    }
    v133 = v206;
    (*((void (**)(char *, char *, uint64_t))v206 + 4))(v188, v130, v108);
    (*(void (**)(uint64_t, uint64_t))(v111 + 104))(v108, v111);
    result = sub_23B1C5B94();
    if ((~*(_QWORD *)&v134 & 0x7FF0000000000000) != 0)
    {
      if (v134 > -9.22337204e18)
      {
        if (v134 < 9.22337204e18)
        {
          is_busy_date = fpfs_is_busy_date();
          sub_23AA9F854(v187);
          if (is_busy_date)
          {
            MEMORY[0x23B8613CC](&unk_23B1D40CC, v209);
            v136 = (void *)swift_allocError();
            swift_storeEnumTagMultiPayload();
            v213(0, v204, v216, v136);

            swift_bridgeObjectRelease();
            v137 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v208 + 32) + 16) + 832);
            v138 = swift_retain();
            v137(v138);
            swift_release();
            (*((void (**)(char *, uint64_t))v133 + 1))(v188, v108);
            (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v201, v129);
            return ((uint64_t (*)(char *, uint64_t))v217)(v220, v105);
          }
          (*((void (**)(char *, uint64_t))v133 + 1))(v188, v108);
LABEL_34:
          if ((v132[16] & 0x10000) != 0)
            v144 = 3;
          else
            v144 = 2 * ((v132[16] & 0x8008) != 0);
          sub_23B0F7398(v201, (uint64_t)v132 + *(_QWORD *)(*v132 + 536), v144, 0, 0, v208, v132[14], v132[15]);
        }
LABEL_50:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_50;
  }
  v67 = *v56;
  v68 = *v56;
  sub_23B1C5378();
  sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
  v69 = sub_23B1C575C();

  (*((void (**)(char *, uint64_t))v205 + 1))(v36, v34);
  v70 = v215;
  v71 = v211;
  if ((v69 & 1) != 0)
  {
    v72 = (uint64_t)v215 + *(_QWORD *)(*v215 + 536);
    v73 = swift_getAssociatedConformanceWitness();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v73 + 72))(v71, v73) & 1) != 0)
    {

      v74 = (uint64_t)v185;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v199 + 56))(v185, 1, 1, v200);
      sub_23B0F7398(v74, v72, 0, 0, 0, v208, v70[14], v70[15]);
    }
  }
  v225 = v67;
  v77 = v67;
  v78 = (char *)v197;
  v79 = v209;
  v80 = swift_dynamicCast();
  v81 = v219;
  if (!v80)
    goto LABEL_42;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v205 = (uint64_t (*)(char *, uint64_t, uint64_t))v66;
    v139 = swift_getAssociatedTypeWitness();
    v140 = swift_getAssociatedTypeWitness();
    v141 = swift_getAssociatedConformanceWitness();
    v142 = swift_getAssociatedConformanceWitness();
    v221 = v139;
    v222 = v140;
    v223 = v141;
    v224 = v142;
    type metadata accessor for FileItemVersion();
  }
  if (EnumCaseMultiPayload == 4)
  {
    v83 = v180;
    v191 = (char *)swift_getTupleTypeMetadata2();
    v206 = &v78[*((int *)v191 + 12)];
    v84 = v198;
    v85 = *(char **)(v198 + 16);
    v86 = v181;
    v201 = (uint64_t)v70 + *(_QWORD *)(*v70 + 536);
    v192 = v85;
    ((void (*)(char *))v85)(v181);
    v190 = *(char **)(v84 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v190)(v86, 0, 1, v71);
    v87 = v177;
    v88 = &v177[*(int *)(TupleTypeMetadata2 + 48)];
    v89 = v182;
    v205 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v182 + 16);
    v205(v177, (uint64_t)v86, v83);
    v90 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
    v217 = v88;
    v91 = v78;
    v92 = v83;
    v90(v88, v91, v83);
    v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
    if (v93(v87, 1, v71) == 1)
    {
      v94 = *(void (**)(char *, uint64_t))(v89 + 8);
      v94(v86, v83);
      if (v93(v217, 1, v71) == 1)
      {
        v94(v87, v83);

        (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v167, v206, v71);
        goto LABEL_47;
      }
    }
    else
    {
      v145 = v169;
      v205(v169, (uint64_t)v87, v83);
      v146 = v217;
      if (v93(v217, 1, v71) != 1)
      {
        v158 = v198;
        v159 = *(void (**)(char *, char *, uint64_t))(v198 + 32);
        v160 = v186;
        v159(v186, v146, v71);
        swift_getAssociatedConformanceWitness();
        v161 = v92;
        v162 = sub_23B1C63A4();
        v147 = *(void (**)(char *, uint64_t))(v158 + 8);
        v147(v160, v71);
        v163 = *(void (**)(char *, uint64_t))(v182 + 8);
        v163(v181, v161);
        v147(v145, v71);
        v163(v177, v161);
        v79 = v209;
        v148 = v206;
        if ((v162 & 1) != 0)
        {

          v159(v167, v148, v71);
LABEL_47:
          v164 = (uint64_t)v166;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v199 + 56))(v166, 1, 1, v200);
          sub_23B0F7398(v164, v201, 0, 0, 0, v208, v215[14], v215[15]);
        }
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v182 + 8))(v181, v83);
      (*(void (**)(char *, uint64_t))(v198 + 8))(v145, v71);
    }
    (*(void (**)(char *, uint64_t))(v168 + 8))(v87, TupleTypeMetadata2);
    v147 = *(void (**)(char *, uint64_t))(v198 + 8);
    v148 = v206;
    v79 = v209;
LABEL_41:
    v147(v148, v71);
    v81 = v219;
    goto LABEL_42;
  }
  (*(void (**)(char *, uint64_t))(v202 + 8))(v78, v79);
LABEL_42:

  v221 = (uint64_t)v67;
  v149 = v67;
  v150 = v196;
  v151 = swift_dynamicCast();
  v152 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v202 + 56);
  if (!v151)
  {
    v152(v150, 1, 1, v79);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v150, v195);
    v156 = *(_QWORD *)(v193 + 568);
    v157 = *(_QWORD *)(v193 + 584);
    v221 = v81;
    v222 = v156;
    v223 = v214;
    v224 = v157;
    type metadata accessor for JobResult();
  }
  v152(v150, 0, 1, v79);
  (*(void (**)(char *, uint64_t))(v194 + 8))(v150, v195);
  v153 = v67;
  v213(0, 0, 0, v67);

  v154 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v208 + 32) + 16) + 832);
  v155 = swift_retain();
  v154(v155);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v216 + 8))(v220, v218);
}

void sub_23B10FC60(uint64_t a1@<X8>)
{
  sub_23B120A48(a1);
}

uint64_t sub_23B10FC6C()
{
  return 0x6F632D6863746566;
}

uint64_t sub_23B10FCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t AssociatedTypeWitness;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[40];
  uint64_t v52;

  v5 = v4;
  v49 = a1;
  v50 = a2;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 560);
  v8 = *(_QWORD *)(v6 + 576);
  v45 = type metadata accessor for JobLockRule(0, v7, v8, a4);
  v48 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v41 - v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - v12;
  v46 = type metadata accessor for SnapshotItem(255, v7, v8, v14);
  v15 = sub_23B1C6C98();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - v17;
  v19 = (uint64_t)v5 + *(_QWORD *)(v6 + 536);
  v20 = v52;
  (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v50 + 32) + 240))(v19, 1);
  if (!v20)
  {
    v41 = 0;
    v42 = v5;
    v43 = v13;
    v50 = v11;
    v52 = v10;
    v21 = (uint64_t)v44;
    v22 = v45;
    v23 = (uint64_t)v5 + *(_QWORD *)(*v5 + 592);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 40))(v23, v18, v15);
    swift_endAccess();
    v24 = v46;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v23, 1, v46))
    {
      v25 = AssociatedTypeWitness;
      v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
      v27 = 1;
      v28 = v22;
      v29 = v43;
    }
    else
    {
      v30 = v23 + *(int *)(v24 + 36);
      v25 = AssociatedTypeWitness;
      v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
      v29 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v43, v30, AssociatedTypeWitness);
      v27 = 0;
      v28 = v22;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v29, v27, 1, v25);
    v31 = v29;
    v32 = v42;
    swift_beginAccess();
    sub_23AD4332C((uint64_t)(v32 + 6), (uint64_t)v51);
    v33 = v32[14];
    v34 = v52;
    v35 = v21 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v21, v19, v25);
    v36 = v50;
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v35, v31, v34);
    swift_storeEnumTagMultiPayload();
    v38 = sub_23ABD2E40((uint64_t)v51, v33, v21, v37);
    v39 = v21;
    v11 = v38;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v39, v28);
    sub_23AD43374((uint64_t)v51);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v34);
  }
  return v11;
}

void sub_23B10FFD0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B1100C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  _BYTE v36[64];

  v4 = sub_23B1C6C98();
  *(_QWORD *)(v3 - 160) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 - 264) = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v36[-v5];
  *(_QWORD *)(v3 - 256) = &v36[-v5];
  swift_getTupleTypeMetadata2();
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 - 280) = v7;
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v36[-v10];
  *(_DWORD *)(v3 - 236) = (v1 & 0x4400000000) != 0;
  v12 = swift_allocObject();
  *(_QWORD *)(v3 - 208) = v12;
  v13 = *(_QWORD *)(v3 - 152);
  *(_QWORD *)(v12 + 16) = v0;
  *(_QWORD *)(v12 + 24) = v13;
  v14 = swift_allocObject();
  *(_QWORD *)(v3 - 232) = v14;
  v15 = *(_QWORD *)(v3 - 128);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v14 + 24) = v15;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 16))(v11, *(_QWORD *)(v3 - 224), v7);
  v16 = *(_QWORD *)(v3 - 160);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 16))(v6, *(_QWORD *)(v3 - 200), v4);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (*(unsigned __int8 *)(v16 + 80) + v21 + 20) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = v2;
  v24 = *(_QWORD *)(v3 - 192);
  v25 = *(_QWORD *)(v3 - 216);
  *((_QWORD *)v23 + 3) = *(_QWORD *)(v24 + 568);
  *((_QWORD *)v23 + 4) = v25;
  v26 = *(_QWORD *)(v3 - 272);
  *((_QWORD *)v23 + 5) = *(_QWORD *)(v24 + 584);
  *((_QWORD *)v23 + 6) = v26;
  *((_QWORD *)v23 + 7) = *(_QWORD *)(v3 - 144);
  (*(void (**)(char *, _BYTE *, _QWORD))(v8 + 32))(&v23[v17], v11, *(_QWORD *)(v3 - 280));
  v28 = *(void **)(v3 - 184);
  v27 = *(_QWORD *)(v3 - 176);
  *(_QWORD *)&v23[v18] = v28;
  *(_QWORD *)&v23[v19] = *(_QWORD *)(v3 - 152);
  *(_QWORD *)&v23[v20] = v27;
  v29 = &v23[v21];
  v30 = *(_QWORD *)(v3 - 128);
  *(_QWORD *)v29 = *(_QWORD *)(v3 - 136);
  *((_QWORD *)v29 + 1) = v30;
  v31 = *(_QWORD *)(v3 - 256);
  v29[16] = BYTE3(*(_QWORD *)(v3 - 248)) & 1;
  v29[17] = *(_DWORD *)(v3 - 236);
  v29[18] = *(_DWORD *)(v3 - 168);
  v29[19] = *(_DWORD *)(v3 - 164);
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v3 - 160) + 32))(&v23[v22], v31, *(_QWORD *)(v3 - 264));
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  v32 = *(id *)(v3 - 144);
  v33 = type metadata accessor for Continuation();
  v34 = v28;
  swift_retain();
  sub_23AD02DFC((uint64_t)"handle(reply:strictVersioning:itemUnchanged:error:lastKnownVersion:request:db:result:reason:completion:)", 104, 2u, (uint64_t)sub_23AD433C8, *(_QWORD *)(v3 - 208), (uint64_t)sub_23AD43544, *(_QWORD *)(v3 - 232), (uint64_t)sub_23B129830, (uint64_t)v23, v33, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23B1103C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  _QWORD v20[110];

  v20[73] = a8;
  v20[72] = a7;
  v20[85] = a6;
  v20[101] = a5;
  v20[76] = a4;
  v20[95] = a3;
  v20[97] = a2;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 560);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20[17] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v20[12] = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v20[11] = (char *)v20 - v13;
  v20[79] = *(_QWORD *)(v8 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v20[9] = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v20[18] = (char *)v20 - v16;
  v17 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedConformanceWitness();
  v20[15] = AssociatedTypeWitness;
  v20[105] = AssociatedTypeWitness;
  v20[106] = v17;
  v20[10] = AssociatedConformanceWitness;
  v20[107] = AssociatedConformanceWitness;
  v20[108] = v19;
  type metadata accessor for FileItemVersion();
}

void sub_23B11058C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t AssociatedTypeWitness;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v14 = sub_23B1C6C98();
  *(_QWORD *)(v12 - 648) = v14;
  *(_QWORD *)(v12 - 656) = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v12 - 208) = (char *)&a9 - v16;
  *(_QWORD *)(v12 - 784) = a1;
  *(_QWORD *)(v12 - 792) = *(_QWORD *)(a1 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v12 - 848) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v12 - 776) = (char *)&a9 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v12 - 248) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v21 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v12 - 536) = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v12 - 480) = (char *)&a9 - v23;
  v24 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v12 - 488) = (char *)&a9 - v25;
  v26 = sub_23B1C5E4C();
  *(_QWORD *)(v12 - 664) = v26;
  *(_QWORD *)(v12 - 672) = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v12 - 712) = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v12 - 728) = (char *)&a9 - v29;
  v30 = *(_QWORD *)(v9 + 584);
  v31 = *(_QWORD *)(v9 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v12 - 552) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v33 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v12 - 808) = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v12 - 856) = v34;
  MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v12 - 800) = (char *)&a9 - v35;
  *(_QWORD *)(v12 - 560) = type metadata accessor for SnapshotItem(255, v10, v11, v36);
  v37 = sub_23B1C6C98();
  *(_QWORD *)(v12 - 424) = v37;
  *(_QWORD *)(v12 - 400) = *(_QWORD *)(v37 - 8);
  v38 = MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)(v12 - 576) = (char *)&a9 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  *(_QWORD *)(v12 - 368) = (char *)&a9 - v41;
  MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v12 - 760) = (char *)&a9 - v42;
  v43 = swift_getAssociatedTypeWitness();
  v44 = sub_23B1C6C98();
  v45 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v12 - 632) = v45;
  *(_QWORD *)(v12 - 744) = *(_QWORD *)(v45 - 8);
  v46 = MEMORY[0x24BDAC7A8](v45);
  *(_QWORD *)(v12 - 624) = (char *)&a9 - v47;
  *(_QWORD *)(v12 - 544) = v44;
  *(_QWORD *)(v12 - 640) = *(_QWORD *)(v44 - 8);
  v48 = MEMORY[0x24BDAC7A8](v46);
  *(_QWORD *)(v12 - 736) = (char *)&a9 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x24BDAC7A8](v48);
  *(_QWORD *)(v12 - 216) = (char *)&a9 - v51;
  v52 = *(_QWORD *)(v43 - 8);
  *(_QWORD *)(v12 - 232) = v43;
  *(_QWORD *)(v12 - 224) = v52;
  v53 = MEMORY[0x24BDAC7A8](v50);
  *(_QWORD *)(v12 - 752) = (char *)&a9 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  MEMORY[0x24BDAC7A8](v55);
  *(_QWORD *)(v12 - 688) = (char *)&a9 - v56;
  v58 = type metadata accessor for FileTreeError(0, v10, v11, v57);
  *(_QWORD *)(v12 - 392) = v58;
  *(_QWORD *)(v12 - 696) = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  *(_QWORD *)(v12 - 416) = (char *)&a9 - v59;
  *(_QWORD *)(v12 - 288) = AssociatedTypeWitness;
  v60 = sub_23B1C6C98();
  *(_QWORD *)(v12 - 584) = v60;
  *(_QWORD *)(v12 - 592) = *(_QWORD *)(v60 - 8);
  v61 = MEMORY[0x24BDAC7A8](v60);
  *(_QWORD *)(v12 - 768) = (char *)&a9 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v61);
  *(_QWORD *)(v12 - 600) = (char *)&a9 - v63;
  v65 = type metadata accessor for ItemReconciliationHalf(0, v31, v30, v64);
  *(_QWORD *)(v12 - 464) = v65;
  *(_QWORD *)(v12 - 520) = *(_QWORD *)(v65 - 8);
  v66 = MEMORY[0x24BDAC7A8](v65);
  *(_QWORD *)(v12 - 608) = (char *)&a9 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v66);
  *(_QWORD *)(v12 - 528) = (char *)&a9 - v68;
  *(_QWORD *)(v12 - 120) = v10;
  *(_QWORD *)(v12 - 112) = v31;
  *(_QWORD *)(v12 - 104) = v11;
  *(_QWORD *)(v12 - 96) = v30;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B110B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v13 - 304) = a1;
  *(_QWORD *)(v13 - 320) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 312) = (char *)&a9 - v14;
  v16 = type metadata accessor for ItemReconciliationHalf(0, v10, v11, v15);
  *(_QWORD *)(v13 - 432) = v16;
  *(_QWORD *)(v13 - 440) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 448) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 176) = v10;
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 272) = v9;
  *(_QWORD *)(v13 - 192) = v11;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  *(_QWORD *)(v13 - 256) = v12;
  type metadata accessor for ItemReconciliation();
}

void sub_23B110C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  void *v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  unint64_t v57;
  char *v58;
  void (*v59)(char *, _QWORD);
  uint64_t v60;
  char v61;
  _BOOL4 v62;

  *(_QWORD *)(v11 - 296) = a1;
  v12 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 160) = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v11 - 616) = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v11 - 408) = (char *)&a9 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v11 - 472) = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v11 - 360) = (char *)&a9 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v11 - 144) = (char *)&a9 - v22;
  *(_QWORD *)(v11 - 240) = v10;
  v23 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 264) = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v11 - 704) = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v11 - 896) = (char *)&a9 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v11 - 832) = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v11 - 720) = (char *)&a9 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v11 - 496) = (char *)&a9 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v11 - 504) = (char *)&a9 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v11 - 512) = (char *)&a9 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&a9 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)&a9 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v47 = (char *)&a9 - v45;
  v48 = *(_BYTE *)(v46 + 128);
  *(_QWORD *)(v11 - 568) = v9;
  if ((v48 & 1) == 0)
  {
    *(_DWORD *)(v11 - 352) = 0;
    goto LABEL_18;
  }
  if (*(_QWORD *)(v11 - 184))
  {
    v49 = *(void **)(v11 - 352);
    if (v49)
      *(_DWORD *)(v11 - 352) = objc_msgSend(v49, sel_requestedExtent) != (id)-1;
    else
      *(_DWORD *)(v11 - 352) = 0;
LABEL_18:
    sub_23AB00114();
  }
  *(_QWORD *)(v11 - 904) = v46;
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v51 = *(_QWORD *)(v11 - 200);
  v52 = *(_QWORD *)(v11 - 264);
  v50((char *)&a9 - v45, v51, v52);
  v53 = *(_QWORD *)(v11 - 240);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 248) + 48);
  *(_QWORD *)(v11 - 352) = v54;
  if (v54(v47, 1, v53) == 1)
  {
    v55 = *(void (**)(char *, uint64_t))(v24 + 8);
    v55(v47, v52);
    v50(v44, v51, v52);
LABEL_11:
    v55(v44, v52);
    *(_DWORD *)(v11 - 352) = 0;
    goto LABEL_18;
  }
  v56 = *((_QWORD *)v47 + 1);
  v57 = *((_QWORD *)v47 + 2);
  *(_DWORD *)(v11 - 680) = v47[40];
  sub_23AAA3E18(v56, v57);
  v58 = &v47[*(int *)(*(_QWORD *)(v11 - 240) + 48)];
  v59 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v11 - 328) + 8);
  v59(v58, *(_QWORD *)(v11 - 176));
  v50(v44, v51, v52);
  if (*(_DWORD *)(v11 - 680) == 1)
  {
    v55 = *(void (**)(char *, uint64_t))(v24 + 8);
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v41, v44, v52);
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v11 - 352))(v41, 1, *(_QWORD *)(v11 - 240)) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v41, v52);
  }
  else
  {
    v60 = *((_QWORD *)v41 + 3);
    v61 = v41[40];
    sub_23AAA3E18(*((_QWORD *)v41 + 1), *((_QWORD *)v41 + 2));
    v59(&v41[*(int *)(*(_QWORD *)(v11 - 240) + 48)], *(_QWORD *)(v11 - 176));
    if ((v61 & 1) == 0)
    {
      v62 = v60 != -1;
      goto LABEL_17;
    }
  }
  v62 = 1;
LABEL_17:
  *(_DWORD *)(v11 - 352) = v62;
  goto LABEL_18;
}

void sub_23B11108C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  int v42;
  void (*v43)(uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t TupleTypeMetadata3;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  void (*v76)(uint64_t, _QWORD);
  int v77;
  uint64_t v78;
  char v79;
  id v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  unsigned int v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  __int128 v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  __int128 v132;
  void (*v133)(uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(uint64_t, uint64_t, uint64_t);
  uint64_t v168;
  char v169;
  void (*v170)(uint64_t, uint64_t);
  void (*v171)(uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  void *v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  id v183;
  id v184;
  uint64_t v185;
  NSObject *v186;
  os_log_type_t v187;
  uint8_t *v188;
  uint64_t v189;
  uint64_t v190;
  id v191;
  void *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t ObjectType;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  void (*v206)(_QWORD, uint64_t, uint64_t);
  uint64_t v207;
  uint64_t v208;

  if (!v1)
  {
    *((_QWORD *)v8 - 117) = v4;
    *((_QWORD *)v8 - 85) = v0;
    *((_QWORD *)v8 - 113) = v3;
    *((_QWORD *)v8 - 21) = 0;
    *((_DWORD *)v8 - 237) = v8[17];
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v10 = v7;
    v11 = *((_QWORD *)v8 - 20);
    *((_QWORD *)v8 - 114) = v9;
    v9(v2, v5, v11);
    v12 = *((_QWORD *)v8 - 37);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    *((_QWORD *)v8 - 115) = v14;
    v15 = v14(v2, 1, v12);
    *((_QWORD *)v8 - 57) = v10;
    *((_QWORD *)v8 - 116) = v6;
    *((_QWORD *)v8 - 118) = v13;
    if (v15 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v11);
      v16 = v11;
      v17 = *((_QWORD *)v8 - 18);
LABEL_5:
      v23 = sub_23AE4F6B4();
      v24 = *((_QWORD *)v8 - 45);
      v25 = (void (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v8 - 114);
      v25(v24, v17, v16);
      if (v23)
      {
        (*(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 57) + 8))(v24, v16);
        goto LABEL_12;
      }
      v26 = *((_QWORD *)v8 - 59);
      v25(v26, v24, v16);
      if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v8 - 115))(v26, 1, v12) == 1)
      {
        v27 = *(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 57) + 8);
        v27(v24, v16);
        v27(v26, v16);
LABEL_11:
        if ((*(_BYTE *)(*((_QWORD *)v8 - 113) + 128) & 1) != 0)
        {
          if (*((_DWORD *)v8 - 88))
          {
            v56 = *((_QWORD *)v8 - 34);
            *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 22);
            *((_QWORD *)v8 - 14) = v56;
            v57 = *((_QWORD *)v8 - 32);
            *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
            *((_QWORD *)v8 - 12) = v57;
            type metadata accessor for JobResult();
          }
          if (*((_QWORD *)v8 - 23))
          {
            v66 = *((_QWORD *)v8 - 34);
            *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 22);
            *((_QWORD *)v8 - 14) = v66;
            v67 = *((_QWORD *)v8 - 32);
            *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
            *((_QWORD *)v8 - 12) = v67;
            type metadata accessor for JobResult();
          }
          v87 = *((_QWORD *)v8 - 34);
          *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 22);
          *((_QWORD *)v8 - 14) = v87;
          v88 = *((_QWORD *)v8 - 32);
          *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
          *((_QWORD *)v8 - 12) = v88;
          type metadata accessor for JobResult();
        }
LABEL_12:
        v29 = *((_QWORD *)v8 - 34);
        *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 22);
        *((_QWORD *)v8 - 14) = v29;
        v30 = *((_QWORD *)v8 - 32);
        *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
        *((_QWORD *)v8 - 12) = v30;
        type metadata accessor for JobResult();
      }
      v28 = *(unsigned __int8 *)(v26 + *(int *)(v12 + 56));
      (*(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 118) + 8))(v26, v12);
      if (v28 != 4)
      {
        (*(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 57) + 8))(v24, v16);
        if (v28 == 2)
          goto LABEL_12;
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_117;
    }
    v18 = *((_QWORD *)v8 - 55);
    v19 = *((_QWORD *)v8 - 56);
    v20 = *((_QWORD *)v8 - 54);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v2, v20);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v12);
    v21 = *(unsigned __int8 *)(v19 + *(int *)(v20 + 52));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    v16 = v11;
    v17 = *((_QWORD *)v8 - 18);
    v22 = *((_QWORD *)v8 - 27);
    if (v21)
      goto LABEL_5;
    v31 = (void *)*((_QWORD *)v8 - 23);
    if (v31)
    {
      v32 = *((_QWORD *)v8 - 51);
      (*((void (**)(uint64_t, _QWORD, uint64_t))v8 - 114))(v32, *((_QWORD *)v8 - 18), v16);
      if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v8 - 115))(v32, 1, v12) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 57) + 8))(v32, v16);
        v33 = *((_QWORD *)v8 - 22);
        v34 = (char *)*((_QWORD *)v8 - 52);
      }
      else
      {
        v35 = v32 + *(int *)(v12 + 52);
        v36 = *((_QWORD *)v8 - 65);
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
        v38 = v12;
        v39 = *((_QWORD *)v8 - 66);
        v40 = *((_QWORD *)v8 - 58);
        v37(v39, v35, v40);
        v41 = *(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 118) + 8);
        v41(v32, v38);
        v42 = *(unsigned __int8 *)(v39 + *(int *)(v40 + 44));
        v43 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        v43(v39, v40);
        if (!v42)
        {
          v58 = *((_QWORD *)v8 - 77);
          (*((void (**)(uint64_t, _QWORD, _QWORD))v8 - 114))(v58, *((_QWORD *)v8 - 18), *((_QWORD *)v8 - 20));
          if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v8 - 115))(v58, 1, v38) != 1)
          {
            v59 = *((_QWORD *)v8 - 76);
            v60 = *((_QWORD *)v8 - 58);
            v37(v59, v58 + *(int *)(v38 + 52), v60);
            v41(v58, v38);
            v61 = *((_QWORD *)v8 - 75);
            (*(void (**)(uint64_t, uint64_t, _QWORD))(*((_QWORD *)v8 - 74) + 16))(v61, v59, *((_QWORD *)v8 - 73));
            v43(v59, v60);
            v62 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*((_QWORD *)v8 - 69) + 48))(v61, 1, *((_QWORD *)v8 - 36));
            v63 = *((_QWORD *)v8 - 22);
            v64 = *((_QWORD *)v8 - 24);
            v65 = *((_QWORD *)v8 - 32);
            if (v62 != 1)
            {
              *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 34);
              *((_QWORD *)v8 - 14) = v63;
              *((_QWORD *)v8 - 13) = v65;
              *((_QWORD *)v8 - 12) = v64;
              type metadata accessor for Materialization.MaterializeItem();
            }
LABEL_118:
            __break(1u);
            JUMPOUT(0x23B114438);
          }
LABEL_117:
          __break(1u);
          goto LABEL_118;
        }
        v33 = *((_QWORD *)v8 - 22);
        v22 = *((_QWORD *)v8 - 27);
        v34 = (char *)*((_QWORD *)v8 - 52);
        v17 = *((_QWORD *)v8 - 18);
      }
      *((_QWORD *)v8 - 17) = v31;
      v44 = v31;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      v45 = *((_QWORD *)v8 - 49);
      if (swift_dynamicCast())
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E7700);
            v46 = *((_QWORD *)v8 - 29);
            v47 = *((_QWORD *)v8 - 81);
            TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
            *((_QWORD *)v8 - 25) = &v34[*(int *)(TupleTypeMetadata3 + 48)];

            v49 = v33;
            v50 = *((_QWORD *)v8 - 28);
            v51 = *((_QWORD *)v8 - 86);
            (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v51, v34, v46);
            v52 = *((_QWORD *)v8 - 24);
            swift_getAssociatedConformanceWitness();
            v53 = sub_23B1C63A4();
            (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v46);
            if ((v53 & 1) != 0)
            {
              v54 = *((_QWORD *)v8 - 34);
              *((_QWORD *)v8 - 15) = v49;
              *((_QWORD *)v8 - 14) = v54;
              v55 = *((_QWORD *)v8 - 32);
              *((_QWORD *)v8 - 13) = v52;
              *((_QWORD *)v8 - 12) = v55;
              type metadata accessor for JobResult();
            }
            (*(void (**)(_QWORD, uint64_t))(*((_QWORD *)v8 - 82) + 8))(*((_QWORD *)v8 - 25), v47);
            v31 = (void *)*((_QWORD *)v8 - 23);
            v17 = *((_QWORD *)v8 - 18);
            v33 = v49;
            goto LABEL_87;
          case 4u:
            v68 = *((_QWORD *)v8 - 68);
            v69 = *((_QWORD *)v8 - 29);
            *((_QWORD *)v8 - 25) = &v34[*(int *)(swift_getTupleTypeMetadata2() + 48)];
            v70 = *((_QWORD *)v8 - 28);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v70 + 16))(v22, *((_QWORD *)v8 - 85), v69);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v22, 0, 1, v69);
            v71 = *((_QWORD *)v8 - 78);
            v72 = v71 + *(int *)(*((_QWORD *)v8 - 79) + 48);
            v73 = *((_QWORD *)v8 - 80);
            v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
            v74(v71, v22, v68);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v73 + 32))(v72, *((_QWORD *)v8 - 52), v68);
            v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
            if (v75(v71, 1, v69) == 1)
            {
              v76 = *(void (**)(uint64_t, _QWORD))(v73 + 8);
              v76(v22, *((_QWORD *)v8 - 68));
              v77 = v75(v72, 1, v69);
              v33 = *((_QWORD *)v8 - 22);
              v78 = *((_QWORD *)v8 - 25);
              if (v77 == 1)
              {
                v76(*((_QWORD *)v8 - 78), *((_QWORD *)v8 - 68));
                (*(void (**)(_QWORD, uint64_t, _QWORD))(*((_QWORD *)v8 - 28) + 32))(*((_QWORD *)v8 - 94), v78, *((_QWORD *)v8 - 29));
                goto LABEL_84;
              }
              goto LABEL_71;
            }
            v153 = *((_QWORD *)v8 - 92);
            v74(v153, v71, *((_QWORD *)v8 - 68));
            v154 = v75(v72, 1, v69);
            v33 = *((_QWORD *)v8 - 22);
            if (v154 == 1)
            {
              (*(void (**)(_QWORD, _QWORD))(*((_QWORD *)v8 - 80) + 8))(*((_QWORD *)v8 - 27), *((_QWORD *)v8 - 68));
              (*(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 28) + 8))(v153, v69);
              v78 = *((_QWORD *)v8 - 25);
LABEL_71:
              (*(void (**)(_QWORD, _QWORD))(*((_QWORD *)v8 - 93) + 8))(*((_QWORD *)v8 - 78), *((_QWORD *)v8 - 79));
              (*(void (**)(uint64_t, _QWORD))(*((_QWORD *)v8 - 28) + 8))(v78, *((_QWORD *)v8 - 29));
              goto LABEL_86;
            }
            v166 = *((_QWORD *)v8 - 28);
            v167 = *(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 32);
            *((_QWORD *)v8 - 26) = v167;
            v168 = *((_QWORD *)v8 - 71);
            v167(v168, v72, v69);
            swift_getAssociatedConformanceWitness();
            v169 = sub_23B1C63A4();
            v170 = *(void (**)(uint64_t, uint64_t))(v166 + 8);
            v170(v168, v69);
            v171 = *(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 80) + 8);
            v172 = *((_QWORD *)v8 - 68);
            v171(*((_QWORD *)v8 - 27), v172);
            v170(v153, v69);
            v171(v71, v172);
            v173 = *((_QWORD *)v8 - 25);
            v33 = *((_QWORD *)v8 - 22);
            if ((v169 & 1) != 0)
            {
              (*((void (**)(_QWORD, uint64_t, _QWORD))v8 - 26))(*((_QWORD *)v8 - 94), v173, *((_QWORD *)v8 - 29));
LABEL_84:
              v174 = *((_QWORD *)v8 - 95);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*((_QWORD *)v8 - 70) - 8) + 56))(v174, 1, 1);
              sub_23B0F7398(v174, *((_QWORD *)v8 - 85), 0, 0, 0, *((_QWORD *)v8 - 19), *(_QWORD *)(*((_QWORD *)v8 - 113) + 112), *(_QWORD *)(*((_QWORD *)v8 - 113) + 120));
            }
            v170(v173, *((_QWORD *)v8 - 29));
LABEL_86:
            v17 = *((_QWORD *)v8 - 18);
            v31 = (void *)*((_QWORD *)v8 - 23);
            goto LABEL_87;
          case 5u:
            v79 = *v34;
            if (!sub_23AE4F6B4())
            {
              if ((v79 & v8[16]) == 1)
              {
                if ((*((_DWORD *)v8 - 237) & 1) != 0)
                {
                  (*(void (**)(unint64_t, unint64_t))(**((_QWORD **)v8 - 35) + 168))(0xD000000000000053, 0x800000023B21E4D0);
                  v155 = *((_QWORD *)v8 - 34);
                  *((_QWORD *)v8 - 15) = v33;
                  *((_QWORD *)v8 - 14) = v155;
                  v156 = *((_QWORD *)v8 - 32);
                  *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
                  *((_QWORD *)v8 - 12) = v156;
                  type metadata accessor for JobResult();
                }
                v157 = *((_QWORD *)v8 - 96);
                v158 = *((_QWORD *)v8 - 21);
                (*(void (**)(_QWORD))(*(_QWORD *)v6 + 160))(*((_QWORD *)v8 - 85));
                if (v158)
                {
                  (*(void (**)(uint64_t, _QWORD))(*((_QWORD *)v8 - 57) + 8))(v17, *((_QWORD *)v8 - 20));

                  return;
                }
                v200 = *((_QWORD *)v8 - 69);
                v201 = *((_QWORD *)v8 - 36);
                v202 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v200 + 48))(v157, 1, v201);
                *((_QWORD *)v8 - 21) = 0;
                if (v202 != 1)
                {
                  v206 = *(void (**)(_QWORD, uint64_t, uint64_t))(v200 + 32);
                  *((_QWORD *)v8 - 25) = v206;
                  v206(*((_QWORD *)v8 - 100), v157, v201);
                  v207 = *((_QWORD *)v8 - 34);
                  *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 22);
                  *((_QWORD *)v8 - 14) = v207;
                  v208 = *((_QWORD *)v8 - 32);
                  *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
                  *((_QWORD *)v8 - 12) = v208;
                  type metadata accessor for JobResult();
                }
                (*(void (**)(uint64_t, _QWORD))(*((_QWORD *)v8 - 74) + 8))(v157, *((_QWORD *)v8 - 73));
                v33 = *((_QWORD *)v8 - 22);
              }
              v203 = *((_QWORD *)v8 - 34);
              *((_QWORD *)v8 - 15) = v33;
              *((_QWORD *)v8 - 14) = v203;
              v204 = *((_QWORD *)v8 - 32);
              *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
              *((_QWORD *)v8 - 12) = v204;
              type metadata accessor for JobResult();
            }
            v205 = v31;
LABEL_112:
            (*((void (**)(_QWORD, _QWORD, _QWORD, void *))v8 - 48))(0, 0, 0, v205);
            break;
          case 0x14u:
            if (!sub_23AE4F6B4() && (*((_DWORD *)v8 - 237) & 1) != 0)
            {
              v80 = (id)fpfs_current_or_default_log();
              v81 = *((_QWORD *)v8 - 91);
              sub_23B1C5E58();
              v82 = sub_23B1C5E40();
              v83 = sub_23B1C6A88();
              if (os_log_type_enabled(v82, v83))
              {
                v84 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v84 = 0;
                _os_log_impl(&dword_23AA66000, v82, v83, "download got canceled since we are out of space", v84, 2u);
                MEMORY[0x23B8614BC](v84, -1, -1);
              }

              (*(void (**)(uint64_t, _QWORD))(*((_QWORD *)v8 - 84) + 8))(v81, *((_QWORD *)v8 - 83));
              v85 = *((_QWORD *)v8 - 34);
              *((_QWORD *)v8 - 15) = v33;
              *((_QWORD *)v8 - 14) = v85;
              v86 = *((_QWORD *)v8 - 32);
              *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
              *((_QWORD *)v8 - 12) = v86;
              type metadata accessor for JobResult();
            }
            v205 = v31;
            goto LABEL_112;
          default:
            (*(void (**)(char *, uint64_t))(*((_QWORD *)v8 - 87) + 8))(v34, v45);
            goto LABEL_87;
        }
        goto LABEL_113;
      }
LABEL_87:

      *((_QWORD *)v8 - 17) = v31;
      v175 = v31;
      sub_23AB6CDB0();
      if (!swift_dynamicCast())
        goto LABEL_100;
      v176 = (void *)*((_QWORD *)v8 - 9);
      v177 = objc_msgSend(v176, sel_domain);
      v178 = sub_23B1C63E0();
      v180 = v179;

      if (v178 == sub_23B1C63E0() && v180 == v181)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v182 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v182 & 1) == 0)
        {
LABEL_99:

LABEL_100:
          (*((void (**)(_QWORD, _QWORD, _QWORD, void *))v8 - 48))(0, 0, 0, v31);
          goto LABEL_101;
        }
      }
      v183 = objc_msgSend(v176, sel_code);
      if (v183 == (id)*MEMORY[0x24BDC81D0])
      {
        if (!sub_23AE4F6B4() && (*((_DWORD *)v8 - 237) & 1) != 0)
        {
          v184 = (id)fpfs_current_or_default_log();
          v185 = *((_QWORD *)v8 - 89);
          sub_23B1C5E58();
          v186 = sub_23B1C5E40();
          v187 = sub_23B1C6A88();
          if (os_log_type_enabled(v186, v187))
          {
            v188 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v188 = 0;
            _os_log_impl(&dword_23AA66000, v186, v187, "speculative download got canceled by the provider going to update speculative fulfilled", v188, 2u);
            MEMORY[0x23B8614BC](v188, -1, -1);
          }

          (*(void (**)(uint64_t, _QWORD))(*((_QWORD *)v8 - 84) + 8))(v185, *((_QWORD *)v8 - 83));
          v189 = *((_QWORD *)v8 - 34);
          *((_QWORD *)v8 - 15) = v33;
          *((_QWORD *)v8 - 14) = v189;
          v190 = *((_QWORD *)v8 - 32);
          *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
          *((_QWORD *)v8 - 12) = v190;
          type metadata accessor for JobResult();
        }
        v191 = v176;
        (*((void (**)(_QWORD, _QWORD, _QWORD, void *))v8 - 48))(0, 0, 0, v176);

LABEL_113:
        (*(void (**)(uint64_t, _QWORD))(*((_QWORD *)v8 - 57) + 8))(v17, *((_QWORD *)v8 - 20));

        return;
      }
      goto LABEL_99;
    }
    v89 = *((_QWORD *)v8 - 117);
    v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16);
    v91 = *((_QWORD *)v8 - 64);
    v92 = *((_QWORD *)v8 - 25);
    v93 = *((_QWORD *)v8 - 33);
    *((_QWORD *)v8 - 23) = v90;
    v90(v91, v92, v93);
    v94 = *((_QWORD *)v8 - 30);
    v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*((_QWORD *)v8 - 31) + 48);
    if (v95(v91, 1, v94) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v91, v93);
      v96 = 1;
      v97 = *((_QWORD *)v8 - 22);
      v98 = *((_QWORD *)v8 - 46);
      v99 = *((_QWORD *)v8 - 41);
      v100 = *((_QWORD *)v8 - 61);
    }
    else
    {
      sub_23AAA3E18(*(_QWORD *)(v91 + 8), *(_QWORD *)(v91 + 16));
      v101 = v91 + *(int *)(v94 + 48);
      v99 = *((_QWORD *)v8 - 41);
      v100 = *((_QWORD *)v8 - 61);
      v97 = *((_QWORD *)v8 - 22);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v100, v101, v97);
      v96 = 0;
      v98 = *((_QWORD *)v8 - 46);
    }
    *((_DWORD *)v8 - 74) = v8[18];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v100, v96, 1, v97);
    sub_23AF17160(v100, v97, *((_QWORD *)v8 - 24), v98);
    v102 = (uint64_t *)*((_QWORD *)v8 - 63);
    (*((void (**)(uint64_t *, _QWORD, uint64_t))v8 - 23))(v102, *((_QWORD *)v8 - 25), v93);
    v103 = v95((uint64_t)v102, 1, v94);
    *((_QWORD *)v8 - 27) = v95;
    if (v103 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t))(*((_QWORD *)v8 - 117) + 8))(v102, v93);
      v104 = 0xEA00000000003E6CLL;
      *((_QWORD *)v8 - 44) = 0x696E3A6D6574693CLL;
    }
    else
    {
      v105 = *(int *)(v94 + 48);
      v106 = *((_QWORD *)v8 - 60);
      v107 = v106 + v105;
      v108 = (uint64_t)v102 + v105;
      v110 = *v102;
      v109 = v102[1];
      v111 = v102[4];
      v112 = *((_BYTE *)v102 + 40);
      v113 = v102[6];
      *(_QWORD *)v106 = *v102;
      *(_QWORD *)(v106 + 8) = v109;
      v114 = *((_OWORD *)v102 + 1);
      *((_OWORD *)v8 - 22) = v114;
      *(_OWORD *)(v106 + 16) = v114;
      *(_QWORD *)(v106 + 32) = v111;
      *(_BYTE *)(v106 + 40) = v112;
      *(_QWORD *)(v106 + 48) = v113;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v107, v108, v97);
      *((_QWORD *)v8 - 15) = 0;
      *((_QWORD *)v8 - 14) = 0xE000000000000000;
      v115 = *((_QWORD *)v8 - 44);
      sub_23AAA3E2C(v109, v115);
      v116 = v98;
      sub_23B1C6EFC();
      v117 = *((_QWORD *)v8 - 14);
      *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 15);
      *((_QWORD *)v8 - 14) = v117;
      sub_23B1C64F4();
      v118 = *((_QWORD *)v8 - 50);
      v119 = *((_QWORD *)v8 - 72);
      v120 = *((_QWORD *)v8 - 53);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v119, v116, v120);
      v121 = (int *)*((_QWORD *)v8 - 70);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v121 - 1) + 48))(v119, 1, v121) != 1)
        sub_23AF14E68(v121);
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v119, v120);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      *((_QWORD *)v8 - 17) = 677669222;
      *((_QWORD *)v8 - 16) = 0xE400000000000000;
      *((_QWORD *)v8 - 9) = v110;
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AAA3E18(v109, v115);
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v104 = *((_QWORD *)v8 - 14);
      *((_QWORD *)v8 - 44) = *((_QWORD *)v8 - 15);
      (*(void (**)(_QWORD, uint64_t))(*((_QWORD *)v8 - 31) + 8))(*((_QWORD *)v8 - 60), v94);
      v17 = *((_QWORD *)v8 - 18);
      v97 = *((_QWORD *)v8 - 22);
      v95 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v8 - 27);
      v93 = *((_QWORD *)v8 - 33);
    }
    v122 = *((_QWORD *)v8 - 62);
    (*((void (**)(uint64_t, _QWORD, uint64_t))v8 - 23))(v122, *((_QWORD *)v8 - 25), v93);
    if (v95(v122, 1, v94) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 117) + 8))(v122, v93);
      v123 = *((_QWORD *)v8 - 50);
      goto LABEL_54;
    }
    *((_QWORD *)v8 - 45) = v104;
    v124 = v17;
    v125 = *(int *)(v94 + 48);
    v126 = *((_QWORD *)v8 - 67);
    v127 = v126 + v125;
    v128 = v122 + v125;
    v129 = *(_QWORD *)(v122 + 32);
    v130 = *(_BYTE *)(v122 + 40);
    v131 = *(_QWORD *)(v122 + 48);
    v132 = *(_OWORD *)(v122 + 16);
    *(_OWORD *)v126 = *(_OWORD *)v122;
    *(_OWORD *)(v126 + 16) = v132;
    *(_QWORD *)(v126 + 32) = v129;
    *(_BYTE *)(v126 + 40) = v130;
    *(_QWORD *)(v126 + 48) = v131;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*((_QWORD *)v8 - 41) + 32))(v127, v128, v97);
    v133 = *(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 24) + 64);
    v134 = *((_QWORD *)v8 - 71);
    v135 = *((_QWORD *)v8 - 24);
    *((_QWORD *)v8 - 51) = v133;
    v133(v97, v135);
    v136 = *((_QWORD *)v8 - 29);
    swift_getAssociatedConformanceWitness();
    v137 = sub_23B1C63A4();
    v138 = (*(uint64_t (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 28) + 8))(v134, v136);
    if ((v137 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*((_QWORD *)v8 - 31) + 8))(v126, v94);
      v123 = *((_QWORD *)v8 - 50);
      v17 = v124;
      v95 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v8 - 27);
      v93 = *((_QWORD *)v8 - 33);
      v104 = *((_QWORD *)v8 - 45);
LABEL_54:
      v139 = *((_QWORD *)v8 - 85);
      v140 = *((_QWORD *)v8 - 21);
      v141 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(*((_QWORD *)v8 - 19) + 32) + 288))(v139);
      *((_QWORD *)v8 - 21) = v140;
      if (v140)
      {
        (*(void (**)(_QWORD, _QWORD))(v123 + 8))(*((_QWORD *)v8 - 46), *((_QWORD *)v8 - 53));
        swift_bridgeObjectRelease();
LABEL_101:
        (*(void (**)(uint64_t, _QWORD))(*((_QWORD *)v8 - 57) + 8))(v17, *((_QWORD *)v8 - 20));
        return;
      }
      if ((v141 & 1) != 0)
      {
        if (!sub_23AE4F6B4())
        {
          if ((*((_DWORD *)v8 - 237) & 1) != 0)
          {
            v142 = *((_QWORD *)v8 - 34);
            *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 22);
            *((_QWORD *)v8 - 14) = v142;
            v143 = *((_QWORD *)v8 - 32);
            *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
            *((_QWORD *)v8 - 12) = v143;
            type metadata accessor for JobResult();
          }
          v144 = *((_QWORD *)v8 - 34);
          *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 22);
          *((_QWORD *)v8 - 14) = v144;
          v145 = *((_QWORD *)v8 - 32);
          *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
          *((_QWORD *)v8 - 12) = v145;
          type metadata accessor for JobResult();
        }
        sub_23B0F7398(*((_QWORD *)v8 - 46), v139, 0, 0, 0, *((_QWORD *)v8 - 19), *(_QWORD *)(*((_QWORD *)v8 - 113) + 112), *(_QWORD *)(*((_QWORD *)v8 - 113) + 120));
      }
      *((_QWORD *)v8 - 45) = v104;
      v152 = (char *)*((_QWORD *)v8 - 88);
      (*((void (**)(char *, _QWORD, uint64_t))v8 - 23))(v152, *((_QWORD *)v8 - 25), v93);
      if (v95((uint64_t)v152, 1, v94) == 1)
      {
        (*(void (**)(char *, uint64_t))(*((_QWORD *)v8 - 117) + 8))(v152, v93);
        goto LABEL_108;
      }
      v159 = *(_QWORD *)v152;
      v160 = *((_QWORD *)v152 + 1);
      v161 = *((_QWORD *)v152 + 2);
      v162 = (*(uint64_t (**)(char *, _QWORD))(*((_QWORD *)v8 - 41) + 8))(&v152[*(int *)(v94 + 48)], *((_QWORD *)v8 - 22));
      v163 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v8 - 19) + 40) + 16) + 136);
      if (v159)
      {
        MEMORY[0x24BDAC7A8](v162);
        swift_retain();
        v164 = (void *)*((_QWORD *)v8 - 21);
        sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
        if (v164)
        {

          sub_23AAA3E18(v160, v161);
          swift_release();
          *((_QWORD *)v8 - 21) = 0;
          goto LABEL_108;
        }
        *((_QWORD *)v8 - 21) = 0;
        *(_BYTE *)(v163 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
        if (*(_QWORD *)(v163 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
        {
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain();
          MEMORY[0x23B85F548](1, ObjectType);
          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_retain();
      }
      sub_23AAA3E18(v160, v161);
      swift_release();
LABEL_108:
      v198 = *((_QWORD *)v8 - 34);
      *((_QWORD *)v8 - 15) = *((_QWORD *)v8 - 22);
      *((_QWORD *)v8 - 14) = v198;
      v199 = *((_QWORD *)v8 - 32);
      *((_QWORD *)v8 - 13) = *((_QWORD *)v8 - 24);
      *((_QWORD *)v8 - 12) = v199;
      type metadata accessor for JobResult();
    }
    *((_QWORD *)v8 - 23) = v127;
    if (*(_QWORD *)v126)
    {
      v146 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v8 - 19) + 40) + 16) + 136);
      MEMORY[0x24BDAC7A8](v138);
      swift_retain();
      v147 = (void *)*((_QWORD *)v8 - 21);
      sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
      v148 = *((_QWORD *)v8 - 20);
      v149 = *((_QWORD *)v8 - 57);
      v150 = *((_QWORD *)v8 - 49);
      v151 = *((_QWORD *)v8 - 44);
      if (v147)
      {

        swift_release();
        *((_QWORD *)v8 - 21) = 0;
      }
      else
      {
        *((_QWORD *)v8 - 21) = 0;
        *(_BYTE *)(v146 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
        if (*(_QWORD *)(v146 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
        {
          v165 = swift_getObjectType();
          swift_unknownObjectRetain();
          MEMORY[0x23B85F548](1, v165);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
    }
    else
    {
      v148 = *((_QWORD *)v8 - 20);
      v149 = *((_QWORD *)v8 - 57);
      v150 = *((_QWORD *)v8 - 49);
      v151 = *((_QWORD *)v8 - 44);
    }
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v150);
    v192 = (void *)swift_allocError();
    v194 = v193;
    v195 = *((_QWORD *)v8 - 29);
    swift_getTupleTypeMetadata2();
    v196 = *((_QWORD *)v8 - 28);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v196 + 16))(v194, *((_QWORD *)v8 - 85), v195);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v196 + 56))(v194, 0, 1, v195);
    (*((void (**)(_QWORD, _QWORD))v8 - 51))(*((_QWORD *)v8 - 22), *((_QWORD *)v8 - 24));
    swift_storeEnumTagMultiPayload();
    (*((void (**)(_QWORD, uint64_t, _QWORD, void *))v8 - 48))(0, v151, *((_QWORD *)v8 - 45), v192);

    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*((_QWORD *)v8 - 50) + 8))(*((_QWORD *)v8 - 46), *((_QWORD *)v8 - 53));
    (*(void (**)(_QWORD, uint64_t))(v149 + 8))(*((_QWORD *)v8 - 18), v148);
    (*(void (**)(_QWORD, _QWORD))(*((_QWORD *)v8 - 31) + 8))(*((_QWORD *)v8 - 67), *((_QWORD *)v8 - 30));
  }
}

uint64_t sub_23B11448C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  void (*v26)(char *, uint64_t, uint64_t);
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  NSObject *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  _QWORD v50[2];
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v61 = a6;
  v62 = a7;
  v59 = a4;
  v60 = a5;
  v58 = *(_QWORD *)(*(_QWORD *)a3 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v50 - v17;
  v19 = sub_23B1C5E4C();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v55 = v21;
    v56 = v20;
    v57 = a8;
    v24 = a1;
    v25 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v26(v18, a2, AssociatedTypeWitness);
    v27 = a1;
    v28 = a1;
    v29 = sub_23B1C5E40();
    v30 = sub_23B1C6AA0();
    v54 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v53 = a3;
      v32 = v31;
      v51 = (_QWORD *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v64 = v52;
      *(_DWORD *)v32 = 136315394;
      v50[1] = v32 + 4;
      v26(v16, (uint64_t)v18, AssociatedTypeWitness);
      v33 = *(void (**)(char *, uint64_t))(v13 + 8);
      v33(v18, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      v34 = v29;
      v35 = sub_23B1C7304();
      v37 = v36;
      v33(v16, AssociatedTypeWitness);
      v63 = sub_23AABEC68(v35, v37, &v64);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2112;
      v38 = a1;
      v39 = _swift_stdlib_bridgeErrorToNSError();
      v63 = v39;
      sub_23B1C6CBC();
      v40 = v51;
      *v51 = v39;

      _os_log_impl(&dword_23AA66000, v34, (os_log_type_t)v54, "updateEvictionReason for %s failed with %@", (uint8_t *)v32, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v40, -1, -1);
      v41 = v52;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v41, -1, -1);
      MEMORY[0x23B8614BC](v32, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, AssociatedTypeWitness);

    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v56);
    a8 = v57;
  }
  v42 = swift_allocObject();
  v44 = v59;
  v43 = v60;
  *(_QWORD *)(v42 + 16) = v59;
  *(_QWORD *)(v42 + 24) = v43;
  v45 = (_QWORD *)swift_allocObject();
  v46 = v62;
  v45[2] = v61;
  v45[3] = v46;
  v45[4] = v44;
  v45[5] = v43;
  v45[6] = a8;
  swift_retain_n();
  swift_retain();
  swift_retain();
  v47 = a8;
  v48 = type metadata accessor for Continuation();
  sub_23AD02DFC((uint64_t)"handle(reply:strictVersioning:itemUnchanged:error:lastKnownVersion:request:db:result:reason:completion:)", 104, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v42, (uint64_t)sub_23B129B74, (uint64_t)v45, v48, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

void sub_23B1148F4()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23B114948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 160) = a1;
  *(_QWORD *)(v5 - 152) = v6;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for JobResult();
}

void sub_23B114988(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;

  *(_QWORD *)(v1 - 176) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 - 88) = v5;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23B114A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  type metadata accessor for ReconciliationSideMutation(255, v4, v5, a4);
  v9 = v7 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v10 = *(char **)(v8 - 168);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v7, &v10[*(_QWORD *)(*(_QWORD *)v10 + 536)], v6);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)v9 = 768;
  *(_OWORD *)(v9 + 8) = *((_OWORD *)v10 + 7);
  swift_storeEnumTagMultiPayload();
  v11 = *(_QWORD *)(v8 - 160);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v8 - 144), v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 152) + 8))(v7, v11);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v8 - 120))(0, 0, 0, *(_QWORD *)(v8 - 136));
}

void sub_23B114B28()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23B114B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;

  *(_QWORD *)(v9 - 224) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v9 - 216) = a1;
  v10 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v9 - 240) = (char *)&a9 - v11;
  swift_getTupleTypeMetadata2();
  v12 = sub_23B1C6C98();
  *(_QWORD *)(v9 - 168) = v12;
  *(_QWORD *)(v9 - 136) = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v15;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v17;
  type metadata accessor for FileItemVersion();
}

void sub_23B114CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[96];

  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  if ((*(_DWORD *)(v6 - 232) & 1) != 0)
  {
    *(_QWORD *)(v6 - 248) = &v24[-v11];
    *(_QWORD *)(v6 - 232) = v12;
    v14 = v1;
    v15 = *(_QWORD *)(v6 - 128);
    v16 = *(_QWORD *)(v6 - 168);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 136) + 16))(v3, *(_QWORD *)(v6 - 160), v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1)
    {
      sub_23AAA3E18(*(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16));
      v22 = v3 + *(int *)(v5 + 48);
      (*(void (**)(uint64_t, uint64_t))(v2 + 112))(v4, v2);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v22, v4);
      (*(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 232) + 32))(*(_QWORD *)(v6 - 248), v10, a1);
      *(_QWORD *)(v6 - 120) = v4;
      *(_QWORD *)(v6 - 112) = v15;
      *(_QWORD *)(v6 - 136) = a1;
      v23 = *(_QWORD *)(v6 - 144);
      *(_QWORD *)(v6 - 104) = v2;
      *(_QWORD *)(v6 - 96) = v23;
      type metadata accessor for JobResult();
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v3, v16);
    v1 = v14;
    v13 = *(_QWORD *)(v6 - 152);
  }
  v17 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v1, v17, AssociatedTypeWitness);
  v19 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 152) = v2;
  *(_QWORD *)(v6 - 232) = v4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v21 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 112) = v19;
  *(_QWORD *)(v6 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v6 - 96) = v21;
  type metadata accessor for ReconciliationID();
}

void sub_23B11506C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v0 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v0 - 112) = v2;
  *(_QWORD *)(v0 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v0 - 96) = v4;
  type metadata accessor for ReconciliationID();
}

void sub_23B115108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v7 - 128) = type metadata accessor for ReconciliationSideMutation(255, v5, v6, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = *(_QWORD *)(v7 - 240);
  v10 = (_QWORD *)(v9 + *(int *)(TupleTypeMetadata2 + 48));
  v11 = *(_QWORD *)(v7 - 152) + *(_QWORD *)(**(_QWORD **)(v7 - 152) + 536);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v12(v9, v11, v4);
  swift_storeEnumTagMultiPayload();
  *v10 = 8;
  swift_storeEnumTagMultiPayload();
  v13 = *(_QWORD *)(v7 - 216);
  swift_storeEnumTagMultiPayload();
  v14 = *(_QWORD *)(v7 - 208);
  sub_23AEB700C(v14, v9);
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 224) + 8);
  *(_QWORD *)(v7 - 144) = v15;
  v15(v9, v13);
  v16 = v9 + *(int *)(TupleTypeMetadata2 + 48);
  v12(v9, v11, v4);
  swift_storeEnumTagMultiPayload();
  v17 = *(_QWORD *)(v7 - 136);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v19 = *(int *)(TupleTypeMetadata3 + 48);
  v20 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v7 - 232) + 16))(v16, *(_QWORD *)(v7 - 248), v17);
  *(_BYTE *)(v16 + v19) = 1;
  *(_BYTE *)(v16 + v20) = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v14, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 - 144))(v9, v13);
  JUMPOUT(0x23B1152A0);
}

void sub_23B1152D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[13];
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata2;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v39 = a4;
  v40 = a5;
  v41 = a3;
  v42 = a1;
  v43 = a2;
  v6 = *(_QWORD **)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 560);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = sub_23B1C6C98();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)v22 - v9;
  v10 = v6[71];
  v11 = v6[73];
  v13 = type metadata accessor for SnapshotItem(255, v10, v11, v12);
  v23 = sub_23B1C6C98();
  v22[12] = *(_QWORD *)(v23 - 8);
  v14 = MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v22 - v15;
  v34 = v13;
  v24 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v22[11] = (char *)v22 - v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v30 = sub_23B1C6C98();
  v27 = *(_QWORD *)(v30 - 8);
  v18 = MEMORY[0x24BDAC7A8](v30);
  v28 = (char *)v22 - v19;
  v33 = AssociatedTypeWitness;
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v18);
  v26 = (char *)v22 - v20;
  v21 = v6[72];
  v44 = v7;
  v45 = v10;
  v31 = v10;
  v46 = v21;
  v47 = v11;
  v32 = v11;
  type metadata accessor for ItemReconciliation();
}

void sub_23B1154EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;

  v11 = sub_23B1C6C98();
  *(_QWORD *)(v9 - 336) = v11;
  *(_QWORD *)(v9 - 344) = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v9 - 264) = (char *)&a9 - v13;
  *(_QWORD *)(v9 - 288) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v9 - 296) = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v16;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v18;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B115604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void *v46;
  _BYTE v47[64];

  *(_QWORD *)(v6 - 232) = a1;
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 - 192) = v8;
  *(_QWORD *)(v6 - 184) = v7;
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v6 - 200) = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v47[-v11];
  v13 = *(_QWORD *)(v1 + 128);
  v14 = *(_QWORD *)(*(_QWORD *)(v6 - 136) + 32);
  v15 = *(_QWORD *)(v3 + 536);
  *(_QWORD *)(v6 - 144) = v1;
  v16 = v1 + v15;
  (*(void (**)(uint64_t))(*(_QWORD *)v14 + 616))(v16);
  *(_QWORD *)(v6 - 400) = v13;
  *(_QWORD *)(v6 - 432) = v5;
  *(_QWORD *)(v6 - 424) = v9;
  *(_QWORD *)(v6 - 416) = v4;
  *(_QWORD *)(v6 - 408) = v2;
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 624))(v16);
  *(_QWORD *)(v6 - 448) = v16;
  *(_QWORD *)(v6 - 440) = v12;
  if (v18 == 4)
    v20 = 0;
  else
    v20 = v18;
  if (v18 == 4)
    v21 = 0;
  else
    v21 = v17;
  *(_QWORD *)(v6 - 456) = v21;
  v22 = v14;
  v23 = sub_23AE4F6B4();
  v24 = *(void **)(v6 - 152);
  if (v23)
  {
    v25 = *(_QWORD *)(v6 - 400);
  }
  else
  {
    v25 = *(_QWORD *)(v6 - 400);
    if (v24)
    {
      v26 = v24;
      if (objc_msgSend(v26, sel_requestedExtent) != (id)-1)
      {
        *(_QWORD *)(v6 - 472) = v26;
        sub_23AB00114();
      }

    }
  }
  *(_DWORD *)(v6 - 460) = v20;
  v28 = *(_QWORD *)(v6 - 144);
  v27 = *(_QWORD *)(v6 - 136);
  if ((v25 & 0x4400000000) != 0)
    v29 = (*(_QWORD *)(v28 + 128) >> 10) & 0x40 | 0x100;
  else
    v29 = (*(_QWORD *)(v28 + 128) >> 10) & 0x40;
  if (v24)
    v30 = (*(_QWORD *)(v28 + 128) >> 10) & 0x40;
  else
    v30 = v29;
  *(_QWORD *)(v6 - 216) = v30;
  v31 = *(_QWORD *)(v22 + 16);
  v32 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 272);
  v33 = swift_retain();
  *(_QWORD *)(v6 - 208) = v32(v33);
  v34 = *(_QWORD *)(v6 - 200);
  v35 = *(_QWORD *)(v6 - 192);
  v36 = *(_QWORD *)(v6 - 184);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 16))(v34, *(_QWORD *)(v6 - 440), v36);
  v37 = (*(unsigned __int8 *)(v35 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v38 = swift_allocObject();
  v39 = *(_QWORD *)(v6 - 280);
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v6 - 408);
  *(_QWORD *)(v38 + 24) = v39;
  v40 = *(_QWORD *)(v6 - 272);
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v6 - 416);
  *(_QWORD *)(v38 + 40) = v40;
  *(_QWORD *)(v38 + 48) = v24;
  *(_QWORD *)(v38 + 56) = v28;
  *(_BYTE *)(v38 + 64) = (v30 & 8) != 0;
  v41 = v24;
  v43 = *(_QWORD *)(v6 - 168);
  v42 = *(_QWORD *)(v6 - 160);
  *(_QWORD *)(v38 + 72) = v27;
  *(_QWORD *)(v38 + 80) = v42;
  *(_QWORD *)(v38 + 88) = *(_QWORD *)(v6 - 176);
  *(_QWORD *)(v38 + 96) = v43;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32))(v38 + v37, v34, v36);
  *(_QWORD *)(v6 - 176) = *(_QWORD *)(*(_QWORD *)v31 + 560);
  v44 = v41;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v45 = *(_QWORD *)(v6 - 440);
  v46 = *(void **)(v6 - 208);
  (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, void *, void *, _QWORD, void (*)(), uint64_t))(v6 - 176))(*(_QWORD *)(v6 - 448), *(unsigned int *)(v6 - 460), *(_QWORD *)(v6 - 456), v45, v46, v41, *(_QWORD *)(v6 - 216), sub_23B129D3C, v38);
  swift_release();
  swift_release();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v45, v36);
}

void sub_23B115D80()
{
  uint64_t v0;
  uint64_t v1;

  swift_getTupleTypeMetadata2();
  v0 = sub_23B1C6C98();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B115ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  __int128 v32;
  _BYTE v33[64];

  *(_QWORD *)(v5 - 240) = a1;
  v6 = sub_23B1C6C98();
  *(_QWORD *)(v5 - 232) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 224) = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v33[-v7];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = sub_23B1C6C98();
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 - 176) = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v33[-v14];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v16 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (void **)&v33[-v17];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v19 + 16))(&v33[-v17], *(_QWORD *)(v5 - 200), v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *v18;
    v21 = *(void **)(v5 - 192);
    if (v21)
    {
      v22 = v21;
      if (objc_msgSend(v22, sel_requestedExtent) != (id)-1)
        objc_msgSend(v22, sel_setSelectedForMaterialization_, 0);

    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v15, 1, 1, TupleTypeMetadata2);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 - 240) - 8) + 56))(v8, 1, 1);
    v23 = v20;
    sub_23B10FFD0();
  }
  v24 = *(_QWORD *)(v5 - 216);
  (*(void (**)(uint64_t, void **, uint64_t))(v24 + 32))(v4, v18, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v2, v4, v3);
  v25 = *(_QWORD *)(v5 - 208);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v2, 1, v25) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v2, v3);
    v26 = 1;
  }
  else
  {
    v27 = *(_QWORD *)(v2 + 32);
    v28 = *(_BYTE *)(v2 + 40);
    v29 = *(_QWORD *)(v2 + 48);
    v30 = v2 + *(int *)(v25 + 48);
    v31 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
    v32 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v2;
    *((_OWORD *)v13 + 1) = v32;
    *((_QWORD *)v13 + 4) = v27;
    v13[40] = v28;
    *((_QWORD *)v13 + 6) = v29;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v31, v30, v1);
    v26 = 0;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v13, v26, 1, TupleTypeMetadata2);
  sub_23B10FFD0();
}

void sub_23B11620C()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(v0, *(_QWORD *)(v1 - 176));
  JUMPOUT(0x23B11622CLL);
}

void sub_23B116250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  _QWORD v20[18];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a2;
  v32 = a4;
  v33 = a5;
  v34 = a3;
  v35 = a1;
  v6 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v5 + 568), *(_QWORD *)(*(_QWORD *)v5 + 584), a4);
  v21 = sub_23B1C6C98();
  v20[17] = *(_QWORD *)(v21 - 8);
  v7 = MEMORY[0x24BDAC7A8](v21);
  v20[16] = (char *)v20 - v8;
  v22 = v6;
  v23 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v20[14] = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[8] = v10;
  MEMORY[0x24BDAC7A8](v9);
  v20[15] = (char *)v20 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = sub_23B1C6C98();
  v26 = *(_QWORD *)(v28 - 8);
  v13 = MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)v20 - v14;
  v30 = AssociatedTypeWitness;
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v13);
  v29 = (char *)v20 - v15;
  v16 = swift_getAssociatedTypeWitness();
  v17 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedConformanceWitness();
  v24 = v16;
  v37 = v16;
  v38 = v17;
  v20[10] = v17;
  v25 = AssociatedConformanceWitness;
  v39 = AssociatedConformanceWitness;
  v40 = v19;
  v20[9] = v19;
  type metadata accessor for FileItemVersion();
}

void sub_23B1164C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;

  v11 = sub_23B1C6C98();
  *(_QWORD *)(v9 - 272) = v11;
  *(_QWORD *)(v9 - 288) = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v9 - 472) = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v9 - 312) = (char *)&a9 - v15;
  *(_QWORD *)(v9 - 264) = a1;
  *(_QWORD *)(v9 - 304) = *(_QWORD *)(a1 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v9 - 480) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v9 - 376) = (char *)&a9 - v19;
  *(_QWORD *)(v9 - 520) = v20;
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v9 - 328) = (char *)&a9 - v21;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v25 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 384) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v23;
  *(_QWORD *)(v9 - 392) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v25;
  type metadata accessor for FileItemVersion();
}

void sub_23B116670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v15 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 248) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v13 - 240) = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - v17;
  v18 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 208) = a1;
  *(_QWORD *)(v13 - 200) = v18;
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 488) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 256) = (char *)&a9 - v21;
  *(_QWORD *)(v13 - 224) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 296) = v10;
  *(_QWORD *)(v13 - 216) = v12;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v9;
  *(_QWORD *)(v13 - 280) = v9;
  type metadata accessor for ItemReconciliation();
}

void sub_23B116734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23B1C6C98();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v0 - 192) = v1;
  *(_QWORD *)(v0 - 184) = v2;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  sub_23AB00114();
}

uint64_t sub_23B1167D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(_QWORD, uint64_t);
  char v64;
  uint64_t v65;
  char v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  char v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(_QWORD, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t result;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  char *v114;
  void *v115;
  uint64_t v116;
  void (*v117)(uint64_t, _QWORD, _QWORD, uint64_t, void *, void *, uint64_t, void (*)(), char *);
  id v118;
  id v119;
  uint64_t v120;
  uint64_t v121;

  if (v21)
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v22, 1, 1, v23);
LABEL_4:
    v30 = *(_QWORD *)(v29 - 192);
    v31 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 184) + 8);
    v32 = v22;
LABEL_5:
    v31(v32, v30);
    goto LABEL_6;
  }
  *(_QWORD *)(v29 - 560) = v27;
  *(_QWORD *)(v29 - 552) = v25;
  *(_QWORD *)(v29 - 536) = v26;
  *(_QWORD *)(v29 - 544) = v20;
  *(_QWORD *)(v29 - 528) = v24;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v22, 1, v23) == 1)
    goto LABEL_4;
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32);
  v34 = *(_QWORD *)(v29 - 528);
  v33(v34, v22, v23);
  v36 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v29 - 224), *(_QWORD *)(v29 - 216), v35);
  v38 = *(_QWORD *)(v29 - 248);
  v37 = *(_QWORD *)(v29 - 240);
  v39 = *(_QWORD *)(v29 - 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v39, v34 + *(int *)(v36 + 48), v37);
  v41 = *(_QWORD *)(v29 - 208);
  v40 = *(_QWORD *)(v29 - 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v41) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v34, v23);
    v31 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v32 = v39;
LABEL_9:
    v30 = v37;
    goto LABEL_5;
  }
  *(_QWORD *)(v29 - 192) = v33;
  *(_QWORD *)(v29 - 568) = v28;
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
  v43 = *(_QWORD *)(v29 - 256);
  *(_QWORD *)(v29 - 232) = v42;
  v42(v43, v39, v41);
  v44 = v34 + *(int *)(v23 + 52);
  v46 = *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v29 - 296), *(_QWORD *)(v29 - 280), v45)+ 48);
  *(_QWORD *)(v29 - 184) = v44;
  v47 = v44 + v46;
  v48 = *(_QWORD *)(v29 - 288);
  v49 = *(_QWORD *)(v29 - 312);
  v50 = *(_QWORD *)(v29 - 272);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v47, v50);
  v51 = *(_QWORD *)(v29 - 304);
  v52 = *(_QWORD *)(v29 - 264);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v52) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v41);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v29 - 568) + 8))(*(_QWORD *)(v29 - 528), v23);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
LABEL_6:
    sub_23B1152D8(*(_QWORD *)(v29 - 152), *(_QWORD *)(v29 - 136), *(_QWORD *)(v29 - 160), *(_QWORD *)(v29 - 176), *(_QWORD *)(v29 - 168));
  }
  *(_QWORD *)(v29 - 576) = v23;
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32);
  v54 = *(_QWORD *)(v29 - 328);
  *(_QWORD *)(v29 - 240) = v53;
  v53(v54, v49, v52);
  v55 = *(_QWORD *)(v29 - 368);
  v56 = *(_QWORD *)(v29 - 360);
  v37 = *(_QWORD *)(v29 - 352);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 16))(v56, *(_QWORD *)(v29 - 184), v37);
  v57 = *(_QWORD *)(v29 - 320);
  v58 = *(_QWORD *)(v29 - 336);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v56, 1, v58) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v54, v52);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v29 - 200) + 8))(*(_QWORD *)(v29 - 256), v41);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v29 - 568) + 8))(*(_QWORD *)(v29 - 528), *(_QWORD *)(v29 - 576));
    v31 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v32 = v56;
    goto LABEL_9;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v57 + 32))(*(_QWORD *)(v29 - 344), v56, v58);
  v59 = *(_QWORD **)(*(_QWORD *)(v29 - 136) + 40);
  v60 = v59[2];
  v61 = v54;
  v62 = *(_QWORD *)(v29 - 392);
  v63 = *(uint64_t (**)(_QWORD, uint64_t))(v62 + 48);
  swift_retain();
  v64 = v63(*(_QWORD *)(v29 - 384), v62);
  v65 = *(_QWORD *)(v29 - 264);
  v66 = v64;
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
  v68 = *(_QWORD *)(v29 - 376);
  v67(v68, v61, v65);
  if ((v66 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v68, v65);
    goto LABEL_17;
  }
  *(_QWORD *)(v29 - 184) = v60;
  v69 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v29 - 400) + 48))(*(_QWORD *)(v29 - 408));
  v70 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  v70(v68, v65);
  v71 = *(_QWORD *)(v29 - 208);
  if ((v69 & 1) != 0)
LABEL_17:
    sub_23B1152D8(*(_QWORD *)(v29 - 152), *(_QWORD *)(v29 - 136), *(_QWORD *)(v29 - 160), *(_QWORD *)(v29 - 176), *(_QWORD *)(v29 - 168));
  *(_QWORD *)(v29 - 248) = v67;
  v72 = *(_QWORD *)(v29 - 448);
  (*(void (**)(_QWORD, uint64_t))(*v59 + 240))(*(_QWORD *)(v29 - 344), 1);
  v73 = *(_QWORD *)(v29 - 416);
  v74 = *(_QWORD *)(v29 - 424);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v72, 1, v74) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v29 - 440) + 8))(v72, *(_QWORD *)(v29 - 432));
    sub_23B1152D8(*(_QWORD *)(v29 - 152), *(_QWORD *)(v29 - 136), *(_QWORD *)(v29 - 160), *(_QWORD *)(v29 - 176), *(_QWORD *)(v29 - 168));
  }
  v75 = *(void (**)(_QWORD, uint64_t, uint64_t))(v73 + 32);
  v75(*(_QWORD *)(v29 - 456), v72, v74);
  v76 = MEMORY[0x23B8613CC](&unk_23B1DD478, v74);
  if ((sub_23AF21910(v74, v76) & 1) != 0 || (sub_23B08551C() & 1) == 0)
    sub_23B1152D8(*(_QWORD *)(v29 - 152), *(_QWORD *)(v29 - 136), *(_QWORD *)(v29 - 160), *(_QWORD *)(v29 - 176), *(_QWORD *)(v29 - 168));
  *(_QWORD *)(v29 - 360) = v75;
  *(_QWORD *)(v29 - 352) = v70;
  v77 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(v29 - 136) + 32) + 624))(*(_QWORD *)(v29 - 560));
  *(_DWORD *)(v29 - 384) = v78 == 4;
  if (v78 == 4)
    v79 = 0;
  else
    v79 = v77;
  *(_QWORD *)(v29 - 392) = v79;
  v80 = *(_QWORD *)(v29 - 264);
  v81 = *(_QWORD *)(v29 - 456);
  v82 = *(_QWORD *)(v29 - 576);
  v83 = *(_QWORD *)(v29 - 472);
  result = (*(uint64_t (**)(void))(**(_QWORD **)(v29 - 136) + 272))();
  *(_QWORD *)(v29 - 312) = result;
  if (*(_QWORD *)(v29 - 152))
    *(_QWORD *)(v29 - 368) = 0;
  else
    *(_QWORD *)(v29 - 368) = (unint64_t)((*(_BYTE *)(*(_QWORD *)(v29 - 144) + 132) & 0x44) != 0) << 8;
  v85 = *(_QWORD *)(v29 - 416);
  v86 = *(unsigned __int8 *)(*(_QWORD *)(v29 - 528) + *(int *)(v82 + 56));
  *(_DWORD *)(v29 - 376) = v86;
  if (v86 == 4)
  {
    __break(1u);
  }
  else
  {
    v87 = v82;
    v88 = v74;
    v89 = v81 + *(int *)(v74 + 48);
    *(_QWORD *)(v29 - 400) = *(_QWORD *)(v89 + *(int *)(type metadata accessor for ItemMetadata() + 100));
    v90 = *(_QWORD *)(v29 - 328);
    v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 - 248);
    v91(v83, v90, v80);
    v92 = *(_QWORD *)(v29 - 304);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v83, 0, 1, v80);
    v91(*(_QWORD *)(v29 - 480), v90, v80);
    v93 = *(_QWORD *)(v29 - 568);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v93 + 16))(*(_QWORD *)(v29 - 536), *(_QWORD *)(v29 - 528), v87);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v85 + 16))(*(_QWORD *)(v29 - 464), v81, v88);
    v94 = *(_QWORD *)(v29 - 200);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v94 + 16))(*(_QWORD *)(v29 - 488), *(_QWORD *)(v29 - 256), v71);
    v95 = v80;
    v96 = (*(unsigned __int8 *)(v92 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    v97 = (*(_QWORD *)(v29 - 520) + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v29 - 304) = v97;
    v98 = (*(unsigned __int8 *)(v93 + 80) + v97 + 8) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    v99 = (*(_QWORD *)(v29 - 552) + v98 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v29 - 408) = v99;
    v100 = (*(unsigned __int8 *)(v85 + 80) + v99 + 9) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    v101 = (*(_QWORD *)(v29 - 512) + *(unsigned __int8 *)(v94 + 80) + v100) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
    *(_QWORD *)(v29 - 432) = v101;
    v102 = (*(_QWORD *)(v29 - 544) + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v29 - 248) = v102;
    v103 = (v102 + 15) & 0xFFFFFFFFFFFFFFF8;
    v104 = (char *)swift_allocObject();
    v105 = *(_QWORD *)(v29 - 296);
    *((_QWORD *)v104 + 2) = *(_QWORD *)(v29 - 224);
    *((_QWORD *)v104 + 3) = v105;
    v106 = *(_QWORD *)(v29 - 280);
    *((_QWORD *)v104 + 4) = *(_QWORD *)(v29 - 216);
    *((_QWORD *)v104 + 5) = v106;
    v107 = v87;
    v108 = *(_QWORD *)(v29 - 176);
    *((_QWORD *)v104 + 6) = *(_QWORD *)(v29 - 136);
    *((_QWORD *)v104 + 7) = v108;
    v109 = *(_QWORD *)(v29 - 144);
    *((_QWORD *)v104 + 8) = *(_QWORD *)(v29 - 168);
    *((_QWORD *)v104 + 9) = v109;
    v110 = &v104[v96];
    v111 = *(_QWORD *)(v29 - 160);
    v112 = *(void **)(v29 - 152);
    *((_QWORD *)v104 + 10) = v112;
    *((_QWORD *)v104 + 11) = v111;
    (*(void (**)(char *, _QWORD, uint64_t))(v29 - 240))(v110, *(_QWORD *)(v29 - 480), v95);
    v113 = *(_QWORD *)(v29 - 184);
    *(_QWORD *)&v104[*(_QWORD *)(v29 - 304)] = v113;
    (*(void (**)(char *, _QWORD, uint64_t))(v29 - 192))(&v104[v98], *(_QWORD *)(v29 - 536), v107);
    v114 = &v104[*(_QWORD *)(v29 - 408)];
    *(_QWORD *)v114 = *(_QWORD *)(v29 - 392);
    v114[8] = *(_DWORD *)(v29 - 384);
    (*(void (**)(char *, _QWORD, _QWORD))(v29 - 360))(&v104[v100], *(_QWORD *)(v29 - 464), *(_QWORD *)(v29 - 424));
    (*(void (**)(char *, _QWORD, uint64_t))(v29 - 232))(&v104[*(_QWORD *)(v29 - 432)], *(_QWORD *)(v29 - 488), v71);
    v115 = *(void **)(v29 - 312);
    *(_QWORD *)&v104[*(_QWORD *)(v29 - 248)] = v115;
    v116 = *(_QWORD *)(v29 - 368);
    *(_QWORD *)&v104[v103] = v116;
    v117 = *(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, void *, void *, uint64_t, void (*)(), char *))(*(_QWORD *)v113 + 560);
    v118 = v115;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v119 = v112;
    swift_retain();
    v120 = *(_QWORD *)(v29 - 344);
    v121 = *(_QWORD *)(v29 - 472);
    v117(v120, *(unsigned int *)(v29 - 376), *(_QWORD *)(v29 - 400), v121, v115, v112, v116, sub_23B1290AC, v104);
    swift_release();

    swift_release();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v29 - 288) + 8))(v121, *(_QWORD *)(v29 - 272));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v29 - 416) + 8))(*(_QWORD *)(v29 - 456), *(_QWORD *)(v29 - 424));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v29 - 320) + 8))(v120, *(_QWORD *)(v29 - 336));
    (*(void (**)(_QWORD, _QWORD))(v29 - 352))(*(_QWORD *)(v29 - 328), *(_QWORD *)(v29 - 264));
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v29 - 200) + 8))(*(_QWORD *)(v29 - 256), v71);
    return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v29 - 568) + 8))(*(_QWORD *)(v29 - 528), *(_QWORD *)(v29 - 576));
  }
  return result;
}

void sub_23B1172A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  _QWORD v16[8];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v25 = a8;
  v28 = a7;
  v29 = a6;
  v30 = a1;
  v31 = a5;
  v26 = a3;
  v27 = a4;
  v32 = a2;
  v8 = *a2;
  v17 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*a2 + 88), *(_QWORD *)(*a2 + 104), a4);
  v16[7] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v16[6] = (char *)v16 - v9;
  v10 = *(_QWORD *)(v8 + 80);
  v19 = *(_QWORD *)(v8 + 96);
  v18 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v20 = (char *)v16 - v11;
  v12 = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v33 = v12;
  v34 = v13;
  v23 = v15;
  v24 = AssociatedConformanceWitness;
  v35 = AssociatedConformanceWitness;
  v36 = v15;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B117440(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  _BYTE v50[80];

  *(_QWORD *)(v3 - 256) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v3 - 248) = a1;
  MEMORY[0x24BDAC7A8](a1);
  v5 = &v50[-v4];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v3 - 328) = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v3 - 216) = &v50[-v10];
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v11 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v50[-v12];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 16))(&v50[-v12], *(_QWORD *)(v3 - 176), v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

LABEL_4:
    v15 = swift_allocObject();
    v16 = *(_QWORD *)(v3 - 208);
    v17 = *(_QWORD *)(v3 - 200);
    *(_QWORD *)(v15 + 16) = v16;
    *(_QWORD *)(v15 + 24) = v17;
    v18 = (_QWORD *)swift_allocObject();
    v19 = *(_QWORD *)(v3 - 160);
    v21 = *(_QWORD *)(v3 - 192);
    v20 = *(void **)(v3 - 184);
    v18[2] = *(_QWORD *)(v3 - 168);
    v18[3] = v20;
    v18[4] = v19;
    v18[5] = v21;
    v18[6] = v16;
    v18[7] = v17;
    v22 = type metadata accessor for Continuation();
    swift_retain_n();
    swift_retain();
    v23 = v20;
    swift_retain();
    swift_retain();
    sub_23ACFFF44((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_23AD43544, v15, (uint64_t)sub_23B129330, (uint64_t)v18, v22, MEMORY[0x24BEE0D00]);
    swift_release();
    return swift_release();
  }
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v13, 1, TupleTypeMetadata2) == 1)
    goto LABEL_4;
  *(_QWORD *)(v3 - 344) = v7;
  *(_QWORD *)(v3 - 176) = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 - 336) = TupleTypeMetadata2;
  v25 = *(int *)(TupleTypeMetadata2 + 48);
  v26 = *(_QWORD *)(v3 - 216);
  v27 = v26 + v25;
  v28 = &v13[v25];
  v29 = *((_QWORD *)v13 + 4);
  v30 = v13[40];
  v31 = *((_QWORD *)v13 + 6);
  v32 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v13;
  *(_OWORD *)(v26 + 16) = v32;
  *(_QWORD *)(v26 + 32) = v29;
  *(_BYTE *)(v26 + 40) = v30;
  *(_QWORD *)(v26 + 48) = v31;
  v33 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v3 - 352) = v33;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v33 + 32))(v27, v28, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 112))(v1, v2);
  v34 = sub_23B08551C();
  v35 = (*(uint64_t (**)(_BYTE *, _QWORD))(*(_QWORD *)(v3 - 256) + 8))(v5, *(_QWORD *)(v3 - 248));
  if ((v34 & 1) != 0)
  {
    *(_QWORD *)(v3 - 240) = v27;
    v36 = *(_QWORD *)(v3 - 168);
    *(_QWORD *)(v3 - 224) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 - 160) + 32) + 16);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 272) + 16))(*(_QWORD *)(v3 - 280), v36 + *(_QWORD *)(*(_QWORD *)v36 + 536), *(_QWORD *)(v3 - 264));
    *(_QWORD *)(v3 - 144) = *(_QWORD *)(v3 - 296);
    *(_QWORD *)(v3 - 136) = v1;
    *(_QWORD *)(v3 - 128) = *(_QWORD *)(v3 - 288);
    *(_QWORD *)(v3 - 120) = v2;
    type metadata accessor for ItemReconciliation();
  }
  if (*(_QWORD *)v26)
  {
    v37 = *(_QWORD *)(*(_QWORD *)(v3 - 176) + 136);
    MEMORY[0x24BDAC7A8](v35);
    *(_QWORD *)&v50[-32] = v37;
    *(_DWORD *)&v50[-24] = 0;
    v49 = v38;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC243B0);
    *(_BYTE *)(v37 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v37 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_unknownObjectRelease();
    }
  }
  v40 = swift_allocObject();
  v41 = *(_QWORD *)(v3 - 208);
  v42 = *(_QWORD *)(v3 - 200);
  *(_QWORD *)(v40 + 16) = v41;
  *(_QWORD *)(v40 + 24) = v42;
  v43 = (_QWORD *)swift_allocObject();
  v44 = *(_QWORD *)(v3 - 160);
  v46 = *(_QWORD *)(v3 - 192);
  v45 = *(void **)(v3 - 184);
  v43[2] = *(_QWORD *)(v3 - 168);
  v43[3] = v45;
  v43[4] = v44;
  v43[5] = v46;
  v43[6] = v41;
  v43[7] = v42;
  v47 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  v48 = v45;
  swift_retain();
  swift_retain();
  sub_23ACFFF44((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_23AD43544, v40, (uint64_t)sub_23B129330, (uint64_t)v43, v47, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 344) + 8))(v26, *(_QWORD *)(v3 - 336));
}

void sub_23B117BC0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  _BYTE v18[48];
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  _BYTE *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v26 = a8;
  v27 = a6;
  v24 = a7;
  v20 = a4;
  v28 = a1;
  v22 = a2;
  v8 = *a2;
  v23 = a5;
  v30 = *(_QWORD *)(v8 + 192);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v29 = swift_getTupleTypeMetadata2();
  v9 = sub_23B1C6C98();
  v25 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v21 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v12);
  v31 = &v18[-v13];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  v32 = AssociatedTypeWitness;
  v33 = v15;
  v34 = AssociatedConformanceWitness;
  v35 = v17;
  type metadata accessor for FileItemVersion();
}

void sub_23B117DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  int v77;
  _BYTE v78[64];

  *(_QWORD *)(v6 - 256) = a1;
  v7 = sub_23B1C6C98();
  *(_QWORD *)(v6 - 264) = v7;
  *(_QWORD *)(v6 - 272) = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v6 - 232) = &v78[-v8];
  *(_QWORD *)(v6 - 288) = v3;
  *(_QWORD *)(v6 - 152) = swift_getTupleTypeMetadata2();
  v9 = sub_23B1C6C98();
  *(_QWORD *)(v6 - 248) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 - 240) = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v6 - 304) = &v78[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v6 - 336) = &v78[-v12];
  v13 = sub_23B1C5CB4();
  *(_QWORD *)(v6 - 344) = v13;
  *(_QWORD *)(v6 - 352) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v6 - 328) = &v78[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  *(_QWORD *)(v6 - 200) = v2;
  v15 = sub_23B1C74F0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (void **)&v78[-v18];
  if (*(_QWORD *)v1)
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v6 - 280) + 136);
    MEMORY[0x24BDAC7A8](v17);
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
    *(_BYTE *)(v20 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v20 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_unknownObjectRelease();
    }
  }
  v22 = *(_QWORD *)(v6 + 16);
  (*(void (**)(void **, _QWORD, uint64_t))(v16 + 16))(v19, *(_QWORD *)(v6 - 176), v15);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v31 = *(_QWORD *)(v6 - 208);
    v30 = *(_QWORD *)(v6 - 200);
    v32 = *(_QWORD *)(v6 - 144);
    (*(void (**)(uint64_t, void **, uint64_t))(v31 + 32))(v32, v19, v30);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
    *(_QWORD *)(v6 - 176) = v33;
    v33(v4, v32, v30);
    v34 = *(_QWORD *)(v6 - 168);
    v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48);
    *(_QWORD *)(v6 - 312) = v35;
    v36 = v35(v4, 1, v34);
    *(_QWORD *)(v6 - 280) = v22;
    if (v36 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v4, v30);
      v37 = 0;
      *(_QWORD *)(v6 - 328) = 0;
      *(_QWORD *)(v6 - 344) = 0;
      *(_QWORD *)(v6 - 352) = 0;
      *(_QWORD *)(v6 - 360) = 0;
      *(_QWORD *)(v6 - 336) = 0;
      v38 = 0xB000000000000000;
    }
    else
    {
      v37 = *(_QWORD *)v4;
      *(_QWORD *)(v6 - 328) = *(_QWORD *)(v4 + 8);
      v38 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v6 - 344) = *(_QWORD *)(v4 + 24);
      *(_QWORD *)(v6 - 352) = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v6 - 360) = *(unsigned __int8 *)(v4 + 40);
      *(_QWORD *)(v6 - 336) = *(_QWORD *)(v4 + 48);
      (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 288) - 8) + 8))(v4 + *(int *)(v34 + 48));
    }
    v42 = v5 + *(int *)(*(_QWORD *)(v6 - 320) + 48);
    v43 = *(_QWORD *)v1;
    v44 = *(_QWORD *)(v1 + 8);
    v45 = *(_QWORD *)(v1 + 16);
    v46 = *(_QWORD *)(v1 + 24);
    v47 = *(_QWORD *)(v1 + 32);
    v48 = *(_BYTE *)(v1 + 40);
    v49 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)v5 = v43;
    *(_QWORD *)(v5 + 8) = v44;
    *(_QWORD *)(v5 + 16) = v45;
    *(_QWORD *)(v5 + 24) = v46;
    *(_QWORD *)(v5 + 32) = v47;
    *(_BYTE *)(v5 + 40) = v48;
    *(_QWORD *)(v5 + 48) = v49;
    v50 = *(_QWORD *)(*(_QWORD *)(v6 - 160) - 8);
    v51 = *(void (**)(void))(v50 + 16);
    *(_QWORD *)(v6 - 320) = v42;
    v51();
    if (v38 >> 60 == 11)
    {
      sub_23AAA3E2C(v44, v45);
      sub_23AAAEE4C(v37, *(_QWORD *)(v6 - 328), v38);
      v52 = v43;
      v53 = v44;
      v54 = v45;
LABEL_25:
      sub_23AAAEE4C(v52, v53, v54);
LABEL_26:
      v55 = *(_QWORD *)(v6 - 200);
      v62 = *(_QWORD *)(v6 - 208);
      v56 = *(_QWORD *)(v6 - 320);
      goto LABEL_27;
    }
    if (v37 != v43)
    {
      v52 = v37;
      v53 = *(_QWORD *)(v6 - 328);
      v54 = v38;
      goto LABEL_25;
    }
    if (v38 >> 60 == 15)
    {
      if (v45 >> 60 == 15)
      {
        sub_23AAA3E2C(v44, v45);
        sub_23AAAEE4C(v37, *(_QWORD *)(v6 - 328), v38);
        v55 = *(_QWORD *)(v6 - 200);
        v56 = *(_QWORD *)(v6 - 320);
LABEL_34:
        v62 = *(_QWORD *)(v6 - 208);
LABEL_27:
        (*(void (**)(uint64_t, _QWORD))(v50 + 8))(v56, *(_QWORD *)(v6 - 160));
        v63 = *(__int128 **)(v6 - 296);
        (*(void (**)(__int128 *, _QWORD, uint64_t))(v6 - 176))(v63, *(_QWORD *)(v6 - 144), v55);
        v64 = *(_QWORD *)(v6 - 168);
        if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v6 - 312))(v63, 1, v64) == 1)
        {
          (*(void (**)(__int128 *, uint64_t))(v62 + 8))(v63, v55);
          v65 = 1;
          v66 = *(_QWORD *)(v6 - 152);
          v67 = *(_QWORD *)(v6 - 304);
        }
        else
        {
          v68 = *((_QWORD *)v63 + 4);
          v69 = *((_BYTE *)v63 + 40);
          v70 = *((_QWORD *)v63 + 6);
          v71 = (uint64_t)v63 + *(int *)(v64 + 48);
          v66 = *(_QWORD *)(v6 - 152);
          v72 = *(_QWORD *)(v6 - 304);
          v73 = v72 + *(int *)(v66 + 48);
          v74 = *v63;
          v75 = v63[1];
          v67 = v72;
          *(_OWORD *)v72 = v74;
          *(_OWORD *)(v72 + 16) = v75;
          *(_QWORD *)(v72 + 32) = v68;
          *(_BYTE *)(v72 + 40) = v69;
          *(_QWORD *)(v72 + 48) = v70;
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 288) - 8) + 32))(v73, v71);
          v65 = 0;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v67, v65, 1, v66);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 256) - 8) + 56))(*(_QWORD *)(v6 - 232), 1, 1);
        sub_23B10FFD0();
      }
    }
    else if (v45 >> 60 != 15)
    {
      sub_23AAA3E2C(v44, v45);
      v76 = *(_QWORD *)(v6 - 328);
      sub_23AAAE4B4(v37, v76, v38);
      sub_23AAAE6AC(v76, v38);
      *(_DWORD *)(v6 - 364) = v77;
      sub_23AAA3E18(v44, v45);
      sub_23AAAEE4C(v37, v76, v38);
      sub_23AAAEE4C(v37, v76, v38);
      v55 = *(_QWORD *)(v6 - 200);
      v56 = *(_QWORD *)(v6 - 320);
      goto LABEL_34;
    }
    sub_23AAA3E2C(v44, v45);
    sub_23AAA3E18(*(_QWORD *)(v6 - 328), v38);
    sub_23AAA3E18(v44, v45);
    goto LABEL_26;
  }
  v23 = *v19;
  v24 = *(_QWORD *)(v6 - 192);
  v25 = *(_QWORD *)(v6 - 152);
  v26 = *(void **)(v6 - 312);
  v27 = *(_QWORD *)(v6 - 328);
  if (v26)
  {
    v28 = v26;
    if (objc_msgSend(v28, sel_requestedExtent) != (id)-1)
      objc_msgSend(v28, sel_setSelectedForMaterialization_, 0);

  }
  *(_QWORD *)(v6 - 120) = v23;
  v29 = v23;
  type metadata accessor for NSFileProviderError(0);
  if (swift_dynamicCast())
  {

    goto LABEL_15;
  }

  *(_QWORD *)(v6 - 120) = v23;
  v39 = v23;
  v40 = *(_QWORD *)(v6 - 344);
  if (swift_dynamicCast())
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 352) + 8))(v27, v40);
LABEL_15:

    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(*(_QWORD *)(v6 - 336), 1, 1, v25);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 256) - 8) + 56))(*(_QWORD *)(v6 - 232), 1, 1);
    v41 = v23;
    sub_23B10FFD0();
  }

  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v24;
  *(_QWORD *)(v57 + 24) = v22;
  v58 = (_QWORD *)swift_allocObject();
  v59 = *(_QWORD *)(v6 - 216);
  v58[2] = *(_QWORD *)(v6 - 224);
  v58[3] = v26;
  v58[4] = *(_QWORD *)(v6 - 184);
  v58[5] = v59;
  v58[6] = v24;
  v58[7] = v22;
  v60 = type metadata accessor for Continuation();
  swift_retain_n();
  v61 = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23ACFFF44((uint64_t)"provideWithExistingItem(for:db:result:completion:)", 50, 2, (uint64_t)sub_23AD43544, v57, (uint64_t)sub_23B129330, (uint64_t)v58, v60, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();

}

void sub_23B11882C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23B118908(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  _BYTE v10[96];

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = &v10[-v7];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(&v10[-v7], *(_QWORD *)(v4 - 144) + *(_QWORD *)(v1 + 536), v3);
  swift_storeEnumTagMultiPayload();
  v9 = (void *)(*(uint64_t (**)(_BYTE *))(*v2 + 464))(v8);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, a1);
  if (v9)
    objc_msgSend(v9, sel_setSelectedForMaterialization_, 1);
  if (*(_BYTE *)(v2[4] + 32) == 1)
    sub_23B116250((uint64_t)v9, (uint64_t)v2, *(_QWORD *)(v4 - 136), *(_QWORD *)(v4 - 128), *(_QWORD *)(v4 - 120));
  sub_23B1152D8((uint64_t)v9, (uint64_t)v2, *(_QWORD *)(v4 - 136), *(_QWORD *)(v4 - 128), *(_QWORD *)(v4 - 120));
}

uint64_t sub_23B118A00@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_23B1206F0(a1, a2);
}

void sub_23B118A14(uint64_t a1@<X8>)
{
  sub_23B120A48(a1);
}

void type metadata accessor for Ingestion.FetchContent()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B118A34()
{
  return 0xD000000000000016;
}

void sub_23B118A50()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23B118AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v13 - 264) = a1;
  *(_QWORD *)(v13 - 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 296) = v16;
  *(_QWORD *)(v13 - 304) = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 224) = (char *)&a9 - v18;
  *(_QWORD *)(v13 - 160) = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - v19;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B118BA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 192) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 256) = v4;
  *(_QWORD *)(v6 - 200) = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v6 - 120) = v5;
  *(_QWORD *)(v6 - 112) = v2;
  *(_QWORD *)(v6 - 104) = v3;
  *(_QWORD *)(v6 - 96) = v1;
  type metadata accessor for JobResult();
}

void sub_23B118BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;

  *(_QWORD *)(v3 - 152) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 232) = v1;
  v6 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 120) = v2;
  *(_QWORD *)(v3 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v3 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v3 - 96) = v6;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23B118C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t (*v30)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  *(_QWORD *)(v10 - 248) = v4;
  *(_QWORD *)(v10 - 240) = v9;
  v11 = type metadata accessor for ReconciliationSideMutation(255, v9, v4, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v10 - 216) = TupleTypeMetadata2;
  v13 = (_BYTE *)(v7 + *(int *)(TupleTypeMetadata2 + 48));
  v14 = *(_QWORD *)(v10 - 136) + *(_QWORD *)(*(_QWORD *)(v10 - 184) + 536);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 160) + 16);
  v16 = v8;
  v15(v7, v14, v8);
  swift_storeEnumTagMultiPayload();
  *v13 = 0;
  *(_QWORD *)(v10 - 208) = v11;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v10 - 144), v7);
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 192) + 8);
  v18 = v7;
  v19 = v7;
  v20 = *(_QWORD *)(v10 - 200);
  *(_QWORD *)(v10 - 192) = v17;
  *(_QWORD *)(v10 - 184) = v6;
  v17(v19, v6);
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 288))(v14);
  *(_QWORD *)(v10 - 312) = v14;
  if ((v21 & 1) != 0)
  {
    if (((*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v20 + 368))(*(_QWORD *)(v10 - 312), 1) & 1) != 0)
    {
      *(_QWORD *)(v10 - 120) = *(_QWORD *)(v10 - 240);
      *(_QWORD *)(v10 - 112) = v5;
      v22 = *(_QWORD *)(v10 - 232);
      *(_QWORD *)(v10 - 104) = *(_QWORD *)(v10 - 248);
      *(_QWORD *)(v10 - 96) = v22;
      type metadata accessor for Ingestion.FetchItemMetadata();
    }
    (*(void (**)(_QWORD))(*(_QWORD *)v20 + 280))(*(_QWORD *)(v10 - 312));
    *(_QWORD *)(v10 - 200) = v5;
    v26 = *(_QWORD *)(v10 - 160);
    v27 = *(_QWORD *)(v10 - 224);
    v28 = v16;
    v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v16);
    v30 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v10 - 176);
    v31 = *(_QWORD *)(v10 - 136);
    if (v29 == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 304) + 8))(v27, *(_QWORD *)(v10 - 296));
    }
    else
    {
      v32 = *(_QWORD *)(v10 - 288);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v32, v27, v16);
      v33 = swift_getTupleTypeMetadata2();
      v34 = *(_QWORD *)(v10 - 280);
      v35 = v26;
      v36 = v34 + *(int *)(v33 + 48);
      v15(v34, *(_QWORD *)(v10 - 312), v16);
      swift_storeEnumTagMultiPayload();
      v15(v36, v32, v16);
      swift_storeEnumTagMultiPayload();
      v37 = *(_QWORD *)(v10 - 264);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t))(**(_QWORD **)(v10 - 256) + 312))(v34);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 272) + 8))(v34, v37);
      v38 = v32;
      v30 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v10 - 176);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v28);
    }
    if ((*(_BYTE *)(v31 + 131) & 2) == 0)
    {
      v39 = (_OWORD *)(v18 + *(int *)(*(_QWORD *)(v10 - 216) + 48));
      v15(v18, *(_QWORD *)(v10 - 312), v28);
      swift_storeEnumTagMultiPayload();
      *v39 = *(_OWORD *)(v31 + 112);
      swift_storeEnumTagMultiPayload();
      v40 = *(_QWORD *)(v10 - 184);
      swift_storeEnumTagMultiPayload();
      sub_23AEB700C(*(_QWORD *)(v10 - 144), v18);
      (*(void (**)(uint64_t, uint64_t))(v10 - 192))(v18, v40);
      v41 = *(_QWORD *)(v10 - 200);
      *(_QWORD *)(v10 - 120) = *(_QWORD *)(v10 - 240);
      *(_QWORD *)(v10 - 112) = v41;
      v42 = *(_QWORD *)(v10 - 232);
      *(_QWORD *)(v10 - 104) = *(_QWORD *)(v10 - 248);
      *(_QWORD *)(v10 - 96) = v42;
      type metadata accessor for Ingestion.MarkParentDeleted();
    }
    return v30(0, 0, 0, 0);
  }
  else
  {
    v23 = (_OWORD *)(v18 + *(int *)(*(_QWORD *)(v10 - 216) + 48));
    v15(v18, *(_QWORD *)(v10 - 312), v16);
    swift_storeEnumTagMultiPayload();
    *v23 = *(_OWORD *)(*(_QWORD *)(v10 - 136) + 112);
    swift_storeEnumTagMultiPayload();
    v24 = *(_QWORD *)(v10 - 184);
    swift_storeEnumTagMultiPayload();
    sub_23AEB700C(*(_QWORD *)(v10 - 144), v18);
    (*(void (**)(uint64_t, uint64_t))(v10 - 192))(v18, v24);
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v10 - 176))(0, 0, 0, 0);
  }
}

unint64_t sub_23B119140()
{
  return 0xD000000000000013;
}

void sub_23B11915C()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23B1191B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 288) = a1;
  *(_QWORD *)(v13 - 296) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 304) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 264) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  *(_QWORD *)(v13 - 280) = v12;
  type metadata accessor for ItemReconciliation();
}

void sub_23B11921C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 216) = (char *)&a9 - v14;
  v16 = type metadata accessor for SnapshotItem(0, v10, v11, v15);
  *(_QWORD *)(v12 - 224) = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v12 - 232) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v12 - 320) = v18;
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v12 - 144) = (char *)&a9 - v19;
  *(_QWORD *)(v12 - 256) = v10;
  *(_QWORD *)(v12 - 272) = v11;
  v21 = type metadata accessor for ItemReconciliationHalf(0, v10, v11, v20);
  *(_QWORD *)(v12 - 176) = v21;
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v12 - 136) = a1;
  v22 = sub_23B1C6C98();
  *(_QWORD *)(v12 - 192) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v12 - 184) = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v12 - 240) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v12 - 160) = *(_QWORD *)(v9 + 16);
  sub_23AB00114();
}

void sub_23B11938C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;

  if (v20)
  {
    v36 = v20;
    (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v28 - 168))(0, 0, 0, v20);

    return;
  }
  *(_QWORD *)(v28 - 336) = v24;
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  v30 = *(_QWORD *)(v28 - 136);
  *(_QWORD *)(v28 - 200) = v29;
  v31 = v29(v23, 1, v30);
  *(_QWORD *)(v28 - 312) = v27;
  if (v31 == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v28 - 192) + 8))(v23, *(_QWORD *)(v28 - 184));
    *(_QWORD *)(v28 - 328) = 0;
  }
  else
  {
    v32 = *(_QWORD *)(v28 - 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v23, v32);
    (*(void (**)(uint64_t, _QWORD))(v27 + 8))(v23, *(_QWORD *)(v28 - 136));
    v33 = *(_QWORD *)(v26 + *(int *)(v32 + 36));
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v32);
    *(_QWORD *)(v28 - 328) = (v33 >> 1) & 1;
  }
  v34 = (*(uint64_t (**)(uint64_t, _QWORD))(**(_QWORD **)(v28 - 336) + 472))(v22, *(_QWORD *)(v28 - 208));
  v37 = v34;
  *(_QWORD *)(v28 - 360) = v35;
  v38 = MEMORY[0x23B85F0E0](v34, v21);
  v39 = *(_QWORD *)(v28 - 224);
  v40 = *(_QWORD *)(v28 - 232);
  if (!v38)
  {
    v43 = swift_bridgeObjectRelease();
    if ((*(_QWORD *)(v28 - 328) & 1) != 0)
    {
      v44 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v28 - 168);
      v45 = *(_QWORD *)(v28 - 360);
      if (!v45)
        goto LABEL_19;
    }
    else
    {
      v44 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v28 - 168);
      v45 = *(_QWORD *)(v28 - 360);
      if (!v45)
      {
        (*(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v28 - 336) + 16) + 832))(v43);
LABEL_19:
        v46 = 0;
        goto LABEL_20;
      }
    }
    v46 = v45;
LABEL_20:
    swift_retain();
    v44(v46, 0, 0, 0);
    swift_release();
    swift_release();
    return;
  }
  *(_QWORD *)(v28 - 208) = v37;
  v41 = sub_23B1C6770();
  sub_23B1C6734();
  if ((v41 & 1) != 0)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v39 + 16))(*(_QWORD *)(v28 - 144), v37 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)), v21);
    goto LABEL_10;
  }
  v42 = sub_23B1C6F38();
  if (*(_QWORD *)(v28 - 320) == 8)
  {
    *(_QWORD *)(v28 - 120) = v42;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v39 + 16))(*(_QWORD *)(v28 - 144), v28 - 120, v21);
    swift_unknownObjectRelease();
LABEL_10:
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 32))(v40, *(_QWORD *)(v28 - 144), v21);
    sub_23AB00114();
  }
  __break(1u);
}

void type metadata accessor for Ingestion.MarkParentDeleted()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B1198E0()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_23B1C6C98();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_23B119970()
{
  return 0xD000000000000017;
}

char *sub_23B11998C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t TupleTypeMetadata3;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[40];
  uint64_t v50;

  v5 = v4;
  v45 = a1;
  v7 = *v5;
  v44 = type metadata accessor for JobLockRule(0, *(_QWORD *)(*v5 + 560), *(_QWORD *)(*v5 + 576), a4);
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v9 = (char *)&v41 - v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v41 - v17;
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v47 = AssociatedTypeWitness;
  v48 = v19;
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v41 - v20;
  v22 = (char *)v5 + *(_QWORD *)(v7 + 536);
  v23 = v50;
  (*(void (**)(char *))(**(_QWORD **)(a2 + 32) + 280))(v22);
  v50 = v23;
  if (!v23)
  {
    v42 = v15;
    v43 = v22;
    v24 = v21;
    v25 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v18, 1, v47) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
      return 0;
    }
    else
    {
      v27 = v47;
      v26 = v48;
      v28 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      v41 = v24;
      v28(v24, v18, v47);
      v29 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
      v30 = v42;
      v29(v42, v24, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v27);
      v31 = (char *)v5 + *(_QWORD *)(*v5 + 592);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v31, v30, v11);
      swift_endAccess();
      swift_beginAccess();
      sub_23AD4332C((uint64_t)(v5 + 6), (uint64_t)v49);
      v32 = v5[14];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v34 = (uint64_t)v9;
      v35 = &v9[*(int *)(TupleTypeMetadata3 + 48)];
      v36 = v34 + *(int *)(TupleTypeMetadata3 + 64);
      v29((char *)v34, v43, v27);
      v37 = v41;
      v29(v35, v41, v27);
      v29((char *)v36, v37, v27);
      v38 = v44;
      swift_storeEnumTagMultiPayload();
      v21 = (char *)sub_23ABD2E40((uint64_t)v49, v32, v34, v39);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v34, v38);
      sub_23AD43374((uint64_t)v49);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v27);
    }
  }
  return v21;
}

void sub_23B119CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v21 = a4;
  v22 = a5;
  v17 = a3;
  v6 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v5 + 560), *(_QWORD *)(*(_QWORD *)v5 + 576), a4);
  v15 = sub_23B1C6C98();
  v18 = *(_QWORD *)(v15 - 8);
  v7 = MEMORY[0x24BDAC7A8](v15);
  v8 = *(_QWORD *)(v6 - 8);
  v19 = v6;
  v20 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v16 = (char *)&v14 - v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = swift_getAssociatedConformanceWitness();
  v23 = AssociatedTypeWitness;
  v24 = v11;
  v25 = AssociatedConformanceWitness;
  v26 = v13;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B119E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t);
  _BYTE v35[96];

  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v35[-v10];
  v12 = *(_QWORD **)(v3 + 32);
  v13 = *(_QWORD *)(v2 + 536);
  v14 = *(_QWORD *)(v4 - 152);
  v15 = v14 + v13;
  (*(void (**)(uint64_t, uint64_t))(*v12 + 240))(v14 + v13, 1);
  *(_QWORD *)(v4 - 224) = a1;
  *(_QWORD *)(v4 - 216) = v9;
  *(_QWORD *)(v4 - 208) = v3;
  v16 = *(_QWORD *)(v4 - 176);
  v17 = *(_QWORD *)(v4 - 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 160) + 48))(v1, 1, v17) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v16 + 8))(v1, *(_QWORD *)(v4 - 200));
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v4 - 144))(0, 0, 0, 0);
  }
  else
  {
    v19 = *(_QWORD *)(v4 - 160);
    v20 = *(_QWORD *)(v4 - 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v20, v1, v17);
    v21 = v20 + *(int *)(v17 + 40);
    *(_QWORD *)(v4 - 240) = v11;
    *(_QWORD *)(v4 - 232) = v6;
    v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
    v23 = v11;
    v24 = *(_QWORD *)(v4 - 224);
    v22(v11, v21, v24);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v17);
    v25 = v12[2];
    v26 = *(_BYTE **)(v4 - 216);
    v22(v26, (uint64_t)v23, v24);
    v27 = *(_QWORD *)(v4 - 208);
    v28 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 272);
    v29 = swift_retain();
    v30 = (void *)v28(v29);
    v31 = (_QWORD *)swift_allocObject();
    v32 = *(_QWORD *)(v4 - 144);
    v33 = *(_QWORD *)(v4 - 136);
    v31[2] = v27;
    v31[3] = v32;
    v31[4] = v33;
    v31[5] = v14;
    v31[6] = *(_QWORD *)(v4 - 184);
    *(_QWORD *)(v4 - 144) = *(_QWORD *)(*(_QWORD *)v25 + 624);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    (*(void (**)(uint64_t, uint64_t, _BYTE *, void *, uint64_t (*)(uint64_t), _QWORD *))(v4 - 144))(v15, 1, v26, v30, sub_23B128654, v31);
    swift_release();
    swift_release();

    v34 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 232) + 8);
    v34(v26, v24);
    return ((uint64_t (*)(_QWORD, uint64_t))v34)(*(_QWORD *)(v4 - 240), v24);
  }
}

uint64_t sub_23B11A07C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v27 = a5;
  v28 = a6;
  v24 = a4;
  v25 = a3;
  v29 = a2;
  v9 = *a2;
  v26 = *(_QWORD *)(*a2 + 80);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v10 = sub_23B1C74F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v24 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  v19 = v27;
  *(_QWORD *)(v18 + 16) = v26;
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(v9 + 88);
  *(_QWORD *)(v18 + 40) = *(_QWORD *)(v9 + 104);
  *(_QWORD *)(v18 + 48) = v19;
  *(_QWORD *)(v18 + 56) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v16, v14, v10);
  *(_QWORD *)(v18 + v17) = v29;
  v20 = (_QWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
  v21 = v24;
  *v20 = v25;
  v20[1] = v21;
  v22 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v15, (uint64_t)sub_23B1287B4, v18, v22, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

void sub_23B11A2A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[7];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v33 = a6;
  v34 = a5;
  v30 = a4;
  v36 = a3;
  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 576);
  v8 = *(_QWORD *)(*a1 + 560);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v35 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v22[2] = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v22[3] = (char *)v22 - v12;
  v29 = type metadata accessor for FileTreeError(0, v8, v7, v13);
  v22[4] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v22 - v14;
  v23 = type metadata accessor for SnapshotMutation(0, v8, v7, v15);
  v22[6] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v22[5] = (char *)v22 - v16;
  v27 = type metadata accessor for SnapshotItem(255, v8, v7, v17);
  v25 = sub_23B1C6C98();
  v24 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v22 - v18;
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v37 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v37);
  v38 = (char *)v22 - v19;
  v20 = *(_QWORD *)(v6 + 568);
  v32 = v6;
  v21 = *(_QWORD *)(v6 + 584);
  v39 = v8;
  v40 = v20;
  v41 = v7;
  v42 = v21;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B11A51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  uint64_t *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v9 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v8 - 136) = v4;
  v11 = (*(_QWORD *)(v4 + 128) & 0xA0) == 0;
  *(_QWORD *)(v8 - 304) = *(_QWORD *)(v4 + 128) & 0xA0;
  *(_QWORD *)(v8 - 160) = v1;
  *(_QWORD *)(v8 - 152) = v9;
  *(_QWORD *)(v8 - 176) = v5;
  *(_QWORD *)(v8 - 200) = v12;
  if (!v11)
  {
    *(_QWORD *)(v8 - 120) = v3;
    *(_QWORD *)(v8 - 112) = v7;
    *(_QWORD *)(v8 - 104) = v6;
    *(_QWORD *)(v8 - 96) = v1;
    type metadata accessor for JobResult();
  }
  *(_QWORD *)(v8 - 232) = (char *)&v25 - v10;
  *(_QWORD *)(v8 - 224) = v3;
  v13 = *(void ***)(v8 - 144);
  v14 = *(uint64_t **)(v8 - 136);
  (*(void (**)(void **, _QWORD, _QWORD))(v2 + 16))(v13, *(_QWORD *)(v8 - 184), *(_QWORD *)(v8 - 168));
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v19 = *(_QWORD *)(v8 - 264);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 - 272) - 8) + 56))(v19, 1, 1);
    sub_23B0F7398(v19, (uint64_t)v14 + *(_QWORD *)(*v14 + 536), 0, 0, 0, *(_QWORD *)(v8 - 248), v14[14], v14[15]);
  }
  v15 = *v13;
  *(_QWORD *)(v8 - 72) = v15;
  v16 = v15;
  v17 = *(_QWORD *)(v8 - 240);
  v18 = *(_QWORD *)(v8 - 256);
  if (swift_dynamicCast())
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v21 = swift_getAssociatedTypeWitness();
      *(_QWORD *)(v8 - 144) = swift_getAssociatedConformanceWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      *(_QWORD *)(v8 - 120) = AssociatedTypeWitness;
      *(_QWORD *)(v8 - 112) = v21;
      *(_QWORD *)(v8 - 104) = *(_QWORD *)(v8 - 144);
      *(_QWORD *)(v8 - 96) = AssociatedConformanceWitness;
      type metadata accessor for FileItemVersion();
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 352) + 8))(v17, v18);
  }

  if (!*(_QWORD *)(v8 - 304))
  {
    *(_QWORD *)(v8 - 120) = *(_QWORD *)(v8 - 224);
    *(_QWORD *)(v8 - 112) = v7;
    v23 = *(_QWORD *)(v8 - 160);
    *(_QWORD *)(v8 - 104) = v6;
    *(_QWORD *)(v8 - 96) = v23;
    type metadata accessor for JobResult();
  }
  v24 = v15;
  (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v8 - 208))(0, 0, 0, v15);

}

uint64_t sub_23B11AD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 592);
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_23B11ADF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23AF19DA4();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 592);
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_23B11AE70()
{
  return sub_23AD9CC04((void (*)(void))sub_23B11ADF4);
}

void type metadata accessor for Ingestion.DeleteRejectedItemInTree()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B11AE88()
{
  return 0xD000000000000017;
}

uint64_t sub_23B11AEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t, uint64_t (*)(uint64_t), _QWORD *);

  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v11 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 536);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = v5;
  v12[6] = a3;
  v13 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), _QWORD *))(*(_QWORD *)v10 + 704);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13(v11, sub_23B128528, v12);
  swift_release();
  return swift_release();
}

void sub_23B11AF70()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
}

void sub_23B11B058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t AssociatedTypeWitness;
  uint64_t v35;
  uint64_t AssociatedConformanceWitness;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[80];

  v4 = sub_23B1C6C98();
  *(_QWORD *)(v3 - 256) = v4;
  *(_QWORD *)(v3 - 264) = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v3 - 168) = &v42[-v6];
  *(_QWORD *)(v3 - 272) = v1;
  *(_QWORD *)(v3 - 280) = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v3 - 296) = &v42[-v7];
  v9 = type metadata accessor for FileTreeError(0, v2, v0, v8);
  *(_QWORD *)(v3 - 208) = v9;
  *(_QWORD *)(v3 - 248) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v3 - 224) = &v42[-v10];
  v12 = type metadata accessor for SnapshotItem(255, v2, v0, v11);
  v13 = sub_23B1C6C98();
  *(_QWORD *)(v3 - 200) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v3 - 192) = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v3 - 304) = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v42[-v17];
  *(_QWORD *)(v3 - 216) = *(_QWORD *)(v2 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = &v42[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  v23 = &v42[-v22];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v24 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (void **)&v42[-v25];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v27 + 16))(&v42[-v25], *(_QWORD *)(v3 - 160), v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)(v3 - 312) = v12;
    *(_QWORD *)(v3 - 216) = v2;
    *(_QWORD *)(v3 - 160) = v0;
    v28 = *v26;
    *(_QWORD *)(v3 - 72) = *v26;
    v29 = v28;
    v30 = *(_QWORD *)(v3 - 224);
    v31 = *(_QWORD *)(v3 - 208);
    v32 = swift_dynamicCast();
    v33 = *(_QWORD *)(v3 - 152);
    if (v32)
    {
      if (!swift_getEnumCaseMultiPayload())
      {
        AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        v35 = swift_getAssociatedTypeWitness();
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v37 = swift_getAssociatedConformanceWitness();
        *(_QWORD *)(v3 - 120) = AssociatedTypeWitness;
        *(_QWORD *)(v3 - 112) = v35;
        *(_QWORD *)(v3 - 104) = AssociatedConformanceWitness;
        *(_QWORD *)(v3 - 96) = v37;
        type metadata accessor for FileItemVersion();
      }
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v30, v31);
    }

    if ((*(_BYTE *)(v33 + 130) & 1) == 0)
    {
      v39 = *(_QWORD *)(v3 - 160);
      v41 = *(_QWORD *)(v3 - 240);
      v40 = *(_QWORD *)(v3 - 232);
      *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 216);
      *(_QWORD *)(v3 - 112) = v41;
      *(_QWORD *)(v3 - 104) = v39;
      *(_QWORD *)(v3 - 96) = v40;
      type metadata accessor for JobResult();
    }
    sub_23AF19EE8();
  }
  v38 = *(_QWORD *)(v3 - 216);
  (*(void (**)(_BYTE *, void **, uint64_t))(v38 + 32))(v23, v26, v2);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v38 + 16))(v21, v23, v2);
  sub_23AF15480((uint64_t)v21, v2, v0, (uint64_t)v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v18, 0, 1, v12);
  sub_23B0F7398((uint64_t)v18, *(_QWORD *)(v3 - 152) + *(_QWORD *)(**(_QWORD **)(v3 - 152) + 536), 3, 0, 0, *(_QWORD *)(v3 - 136), *(_QWORD *)(*(_QWORD *)(v3 - 152) + 112), *(_QWORD *)(*(_QWORD *)(v3 - 152) + 120));
}

void sub_23B11B6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23AD67D18(v2, v1, v0);
}

void sub_23B11B6F8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v6;

  if (v1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 264) + 8))(v2, *(_QWORD *)(v4 - 256));
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 264) + 8))(v2, *(_QWORD *)(v4 - 256));
    if ((a1 & 1) == 0)
    {
      *(_QWORD *)(v4 - 128) = 0;
      JUMPOUT(0x23B11B618);
    }
    v6 = v3;
    (*(void (**)(_QWORD, unint64_t, unint64_t, void *))(v4 - 176))(0, 0xD000000000000020, 0x800000023B21E350, v3);

  }
  JUMPOUT(0x23B11B780);
}

void type metadata accessor for Ingestion.FaultDirectoryInTree()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B11B804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for SnapshotItem(255, *(_QWORD *)(a1 + 560), *(_QWORD *)(a1 + 576), a4);
  result = sub_23B1C6C98();
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_23B11B884()
{
  return 0xD000000000000019;
}

uint64_t sub_23B11B8A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 592);
  swift_beginAccess();
  v4 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v1 + 560), *(_QWORD *)(v1 + 576), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4))
    return 4;
  else
    return *(unsigned __int8 *)(v2 + *(int *)(v4 + 48));
}

uint64_t sub_23B11B928()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 592);
  swift_beginAccess();
  v4 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v1 + 560), *(_QWORD *)(v1 + 576), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4))
    return 2;
  v6 = v2 + *(int *)(v4 + 48);
  return *(unsigned __int8 *)(v6 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_23B11B9C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 592);
  swift_beginAccess();
  v4 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v1 + 560), *(_QWORD *)(v1 + 576), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4);
  result = 0;
  if (!v5)
  {
    v7 = v2 + *(int *)(v4 + 48);
    return *(_QWORD *)(v7 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_23B11BA60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 592);
  swift_beginAccess();
  v4 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v1 + 560), *(_QWORD *)(v1 + 576), v3);
  v5 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4))
  {
    v6 = 0;
  }
  else
  {
    v7 = v2 + *(int *)(v4 + 48);
    v6 = *(unsigned int *)(v7 + 4);
    v5 = *(_BYTE *)(v7 + 8);
  }
  return v6 | ((unint64_t)v5 << 32);
}

uint64_t sub_23B11BB00@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 592);
  swift_beginAccess();
  v6 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v3 + 560), *(_QWORD *)(v3 + 576), v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    v9 = v4 + *(int *)(v6 + 36);
    v10 = swift_getAssociatedTypeWitness();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v9, v10);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
  }
}

char *sub_23B11BC24(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata3;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  uint64_t AssociatedTypeWitness;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _BYTE v50[40];
  uint64_t v51;

  v5 = v4;
  v49 = a2;
  v47 = a1;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 560);
  v8 = *(_QWORD *)(v6 + 576);
  v44 = type metadata accessor for JobLockRule(0, v7, v8, a4);
  v46 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v45 = (char *)&v42 - v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v48 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v42 - v13;
  v16 = type metadata accessor for SnapshotItem(255, v7, v8, v15);
  v17 = sub_23B1C6C98();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v42 - v19;
  v21 = *(_QWORD *)(v6 + 536);
  v22 = v5;
  v23 = (uint64_t)v5 + v21;
  v24 = v51;
  (*(void (**)(uint64_t, uint64_t))(**((_QWORD **)v49 + 4) + 240))(v23, 1);
  if (!v24)
  {
    v42 = v12;
    v51 = 0;
    v49 = v14;
    v25 = v48;
    v26 = v22;
    v27 = (uint64_t)v22 + *(_QWORD *)(*v22 + 592);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 40))(v27, v20, v17);
    swift_endAccess();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v27, 1, v16))
    {
      return 0;
    }
    else
    {
      v28 = v27 + *(int *)(v16 + 36);
      v29 = v25;
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
      v31 = v42;
      v32 = AssociatedTypeWitness;
      v30(v42, v28, AssociatedTypeWitness);
      v33 = v49;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v49, v31, v32);
      swift_beginAccess();
      sub_23AD4332C((uint64_t)(v26 + 6), (uint64_t)v50);
      v34 = v26[14];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v36 = (uint64_t)v45;
      v37 = &v45[*(int *)(TupleTypeMetadata3 + 48)];
      v38 = &v45[*(int *)(TupleTypeMetadata3 + 64)];
      v30(v45, v23, v32);
      v30(v37, (uint64_t)v33, v32);
      v30(v38, (uint64_t)v33, v32);
      v39 = v44;
      swift_storeEnumTagMultiPayload();
      v12 = (char *)sub_23ABD2E40((uint64_t)v50, v34, v36, v40);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v36, v39);
      sub_23AD43374((uint64_t)v50);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v32);
    }
  }
  return v12;
}

uint64_t sub_23B11BF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t, uint64_t (*)(uint64_t), _QWORD *);

  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v11 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 536);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = v5;
  v12[6] = a3;
  v13 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), _QWORD *))(*(_QWORD *)v10 + 712);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13(v11, sub_23B1284E0, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_23B11C02C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a8;
  v34 = a2;
  v36 = a5;
  v37 = a6;
  v30 = a4;
  v31 = a3;
  v38 = a9;
  v39 = a10;
  v13 = *a2;
  v32 = *(_QWORD *)(*a2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v14 = sub_23B1C74F0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = swift_allocObject();
  v35 = v19;
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, v14);
  v20 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v32;
  *(_OWORD *)(v24 + 24) = *(_OWORD *)(v13 + 88);
  *(_QWORD *)(v24 + 40) = *(_QWORD *)(v13 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v24 + v20, v18, v14);
  v25 = v37;
  *(_QWORD *)(v24 + v21) = v36;
  *(_QWORD *)(v24 + v22) = v34;
  *(_QWORD *)(v24 + v23) = v25;
  v26 = (_QWORD *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
  v27 = v30;
  *v26 = v31;
  v26[1] = v27;
  v28 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, v38, v35, v39, v24, v28, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

void sub_23B11C234(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t AssociatedConformanceWitness;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;

  v50 = a1;
  v47 = a6;
  v48 = a5;
  v51 = a2;
  v52 = a4;
  v46 = a3;
  v6 = *(_QWORD *)(*a2 + 576);
  v41 = (_QWORD *)*a2;
  v7 = v41[70];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v39[3] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v39[4] = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v39[2] = (char *)v39 - v9;
  v43 = type metadata accessor for FileTreeError(0, v7, v6, v10);
  v40 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v49 = (char *)v39 - v11;
  v13 = type metadata accessor for SnapshotItem(255, v7, v6, v12);
  v14 = sub_23B1C6C98();
  v44 = *(_QWORD *)(v14 - 8);
  v45 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v39[1] = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v39 - v18;
  v42 = *(_QWORD *)(v7 - 8);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v39 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v25 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (id *)((char *)v39 - v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))((char *)v39 - v26, v50, v25);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = v13;
    v57 = *v27;
    v29 = v57;
    v30 = v49;
    v31 = v43;
    if (swift_dynamicCast())
    {
      if (!swift_getEnumCaseMultiPayload())
      {
        v32 = swift_getAssociatedTypeWitness();
        v33 = swift_getAssociatedTypeWitness();
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v35 = swift_getAssociatedConformanceWitness();
        v53 = v32;
        v54 = v33;
        v55 = AssociatedConformanceWitness;
        v56 = v35;
        type metadata accessor for FileItemVersion();
      }
      (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v31);
    }

    v37 = v41[71];
    v38 = v41[73];
    v53 = v7;
    v54 = v37;
    v55 = v6;
    v56 = v38;
    type metadata accessor for JobResult();
  }
  v36 = v42;
  (*(void (**)(char *, id *, uint64_t))(v42 + 32))(v24, v27, v7);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v24, v7);
  sub_23AF15480((uint64_t)v22, v7, v6, (uint64_t)v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v19, 0, 1, v13);
  sub_23B0F7398((uint64_t)v19, (uint64_t)v51 + *(_QWORD *)(*v51 + 536), 3, 0, 0, v46, v51[14], v51[15]);
}

void sub_23B11C7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v1;
  type metadata accessor for Ingestion.UnfaultDirectoryInTree();
}

void sub_23B11C800()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = (uint64_t)v2 + *(_QWORD *)(*v2 + 536);
  v5 = v2[14];
  v6 = v2[15];
  v7 = v2[16];
  swift_allocObject();
  v8 = sub_23B126F70(v4, v5, v6, v7);
  sub_23AE181A4(v1, v8);
  swift_release();
  v9 = v0;
  (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v3 - 168))(0, 0, 0, v0);

  JUMPOUT(0x23B11C88CLL);
}

uint64_t sub_23B11C8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 592);
  type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v4 + 560), *(_QWORD *)(*(_QWORD *)v4 + 576), a4);
  v6 = sub_23B1C6C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23B11C94C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = sub_23AF19DA4();
  v3 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 592);
  type metadata accessor for SnapshotItem(255, *(_QWORD *)(v1 + 560), *(_QWORD *)(v1 + 576), v4);
  v5 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  return v2;
}

uint64_t sub_23B11C9B8()
{
  sub_23B11C94C();
  return swift_deallocClassInstance();
}

void type metadata accessor for Ingestion.UnfaultDirectoryInTree()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B11C9E4()
{
  return 0xD000000000000013;
}

uint64_t sub_23B11CA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  char *v34;
  uint64_t v35;
  void (*v36)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, _QWORD, _QWORD, _QWORD);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[6];

  v6 = v5;
  v41 = a5;
  v42 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))a4;
  v55 = a3;
  v9 = *v6;
  v10 = *(_QWORD *)(*v6 + 576);
  v47 = *(_QWORD *)(*v6 + 560);
  v11 = type metadata accessor for SnapshotItem(255, v47, v10, a4);
  v48 = sub_23B1C6C98();
  v45 = *(_QWORD *)(v48 - 8);
  v12 = MEMORY[0x24BDAC7A8](v48);
  v43 = (char *)&v38 - v13;
  v14 = *(_QWORD *)(v11 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v38 - v17;
  v44 = a1;
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(v9 + 536);
  v49 = v6;
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 472))((uint64_t)v6 + v20, a2);
  v53 = v18;
  v38 = v15;
  v39 = v19;
  v52 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v14;
  v40 = v22;
  v56 = v9;
  if (!MEMORY[0x23B85F0E0](v21, v11))
  {
    v35 = swift_bridgeObjectRelease();
    v36 = v42;
    if ((*((_BYTE *)v49 + 129) & 0x80) != 0)
    {
      if (!v40)
      {
        (*(void (**)(uint64_t))(**(_QWORD **)(v39 + 16) + 832))(v35);
LABEL_16:
        v37 = 0;
        goto LABEL_17;
      }
    }
    else if (!v40)
    {
      goto LABEL_16;
    }
    v37 = v40;
LABEL_17:
    swift_retain();
    v36(v37, 0, 0, 0);
    swift_release();
    return swift_release();
  }
  v23 = v49;
  v24 = v54;
  v50 = v21;
  v51 = v11;
  v46 = v10;
  v27 = sub_23B1C6770();
  sub_23B1C6734();
  if ((v27 & 1) != 0)
  {
    v28 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
    v29 = v53;
    v28(v53, v21 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)), v11);
    goto LABEL_6;
  }
  result = sub_23B1C6F38();
  if (v38 == 8)
  {
    v58[0] = result;
    v28 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
    v34 = v53;
    v28(v53, (unint64_t)v58, v11);
    v29 = v34;
    swift_unknownObjectRelease();
LABEL_6:
    v57 = 1;
    v30 = v54;
    v31 = (uint64_t)v52;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v52, v29, v11);
    if ((v23[16] & 0xFFFFFFCFFFFFFFFFLL) == 0)
    {
      v32 = (uint64_t)v43;
      v28(v43, v31, v11);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v11);
      sub_23B0F7398(v32, v31, 0, 0, 0, v44, v23[14], v23[15]);
    }
    v25 = *(_QWORD *)(v56 + 568);
    v26 = *(_QWORD *)(v56 + 584);
    v58[0] = v47;
    v58[1] = v25;
    v58[2] = v46;
    v58[3] = v26;
    type metadata accessor for JobResult();
  }
  __break(1u);
  return result;
}

uint64_t sub_23B11CE9C()
{
  return 0x6465727265666564;
}

void sub_23B11CEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[15];
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15[10] = a5;
  v15[6] = a3;
  v6 = (_QWORD *)*v5;
  v7 = sub_23B1C5BDC();
  v15[7] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v8 = v6[72];
  v9 = v6[70];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15[5] = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v15[12] = (char *)v15 - v12;
  v13 = v6[71];
  v14 = v6[73];
  v17 = v9;
  v18 = v13;
  v15[13] = v14;
  v15[14] = v13;
  v19 = v8;
  v20 = v14;
  type metadata accessor for SQLDatabase();
}

void sub_23B11CFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  void (*v12)(uint64_t, uint64_t);
  double v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 - 208) = v5;
  v9 = swift_dynamicCastClass();
  *(_QWORD *)(v8 - 184) = v3;
  *(_QWORD *)(v8 - 200) = v6;
  *(_QWORD *)(v8 - 240) = v4;
  if (v9)
  {
    *(_QWORD *)(v8 - 264) = v2;
    *(_QWORD *)(v8 - 256) = v1;
    sub_23AEAA874();
  }
  (*(void (**)(uint64_t (*)(_QWORD), _QWORD))(**(_QWORD **)(v6 + 16) + 672))(nullsub_1, 0);
  sub_23B0EB9DC();
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v11 = v10;
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 216) + 8);
  v12(v2, v1);
  v13 = v11 * 1000000000.0;
  if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v13 > -9.22337204e18)
    {
      if (v13 < 9.22337204e18)
      {
        *(_QWORD *)(v8 - 216) = v7;
        *(_QWORD *)(v8 - 208) = v12;
        v15 = *(_QWORD *)(v8 - 168);
        v14 = *(_QWORD *)(v8 - 160);
        *(_QWORD *)(v8 - 136) = v0;
        *(_QWORD *)(v8 - 128) = v14;
        *(_QWORD *)(v8 - 120) = *(_QWORD *)(v8 - 240);
        *(_QWORD *)(v8 - 112) = v15;
        type metadata accessor for JobResult();
      }
LABEL_9:
      __break(1u);
      JUMPOUT(0x23B11D464);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_9;
}

void type metadata accessor for Ingestion.DeferredRescan()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B11D47C()
{
  return 0xD000000000000017;
}

uint64_t sub_23B11D498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_23B11D518()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 130) & 1) != 0)
    return 3;
  else
    return 1;
}

uint64_t sub_23B11D52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[40];

  v5 = type metadata accessor for JobLockRule(0, *(_QWORD *)(*v4 + 560), *(_QWORD *)(*v4 + 576), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = v16 - v7 + 22;
  swift_beginAccess();
  sub_23AD4332C((uint64_t)(v4 + 6), (uint64_t)v16);
  v9 = v4[14];
  v10 = (char *)v4 + *(_QWORD *)(*v4 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v8, v10, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  v13 = sub_23ABD2E40((uint64_t)v16, v9, (uint64_t)v8, v12);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  sub_23AD43374((uint64_t)v16);
  return v13;
}

void sub_23B11D678()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23B11D758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 176) = a1;
  *(_QWORD *)(v5 - 192) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v1;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B11D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 248) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 240) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 256) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 232) = v10;
  *(_QWORD *)(v13 - 224) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for ItemReconciliation();
}

void sub_23B11D7E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD, void *, void *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, void (*)(void *, char), _QWORD *);
  void *v30;
  _BYTE v31[96];

  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 - 216) = v8;
  *(_QWORD *)(v6 - 208) = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v6 - 200) = &v31[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v31[-v12];
  v14 = swift_allocObject();
  type metadata accessor for SnapshotItem(0, v5, v3, v15);
  v16 = sub_23B1C61C4();
  *(_QWORD *)(v6 - 160) = v14;
  *(_QWORD *)(v14 + 16) = v16;
  v17 = v4[4];
  v18 = (*(uint64_t (**)(void))(*v4 + 256))();
  v19 = *(_QWORD *)(v6 - 136);
  if ((v18 & 1) != 0)
  {
    *(_QWORD *)(v6 - 272) = v17;
    *(_QWORD *)(v6 - 288) = v13;
    *(_QWORD *)(v6 - 264) = a1;
    *(_QWORD *)(v6 - 280) = v1;
    sub_23AB00114();
  }
  *(_QWORD *)(v6 - 200) = v19 + *(_QWORD *)(*(_QWORD *)v19 + 536);
  v20 = v19;
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v2);
  v21 = *(_QWORD *)(v6 - 176);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v6 - 208) = (*(uint64_t (**)(uint64_t))(*v4 + 464))(v2);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 192) + 8))(v2, v21);
  v23 = *(_QWORD *)(v17 + 16);
  v24 = (void *)(*(uint64_t (**)(uint64_t))(*v4 + 272))(v22);
  v25 = swift_allocObject();
  v26 = *(_QWORD *)(v6 - 160);
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v26;
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v4;
  v27[3] = v20;
  v28 = *(_QWORD *)(v6 - 144);
  v27[4] = *(_QWORD *)(v6 - 152);
  v27[5] = v28;
  v27[6] = *(_QWORD *)(v6 - 168);
  v27[7] = v26;
  v29 = *(void (**)(_QWORD, _QWORD, void *, void *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, void (*)(void *, char), _QWORD *))(*(_QWORD *)v23 + 144);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  v30 = *(void **)(v6 - 208);
  v29(*(_QWORD *)(v6 - 200), *(_QWORD *)(v6 - 184), v24, v30, sub_23B128344, v25, sub_23B128394, v27);
  swift_release();
  swift_release();
  swift_release();

}

void sub_23B11DCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  type metadata accessor for ReconciliationSideMutation(255, v5, v4, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = *(_QWORD *)(v6 - 256);
  v9 = (_BYTE *)(v8 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v6 - 280) - 8) + 16))(v8, *(_QWORD *)(v6 - 296));
  swift_storeEnumTagMultiPayload();
  *v9 = 3;
  swift_storeEnumTagMultiPayload();
  v10 = *(_QWORD *)(v6 - 240);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v6 - 168), v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 248) + 8))(v8, v10);
  JUMPOUT(0x23B11DDACLL);
}

uint64_t sub_23B11DDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD, _QWORD);
  char *v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52[3];

  v7 = *(_QWORD *)(*(_QWORD *)a2 + 560);
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 576);
  v44 = type metadata accessor for SnapshotItem(255, v7, v8, a4);
  v9 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t)&v37 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v48 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v37 - v13;
  v15 = *(_QWORD *)(v7 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v12);
  v42 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v37 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v51 = (char *)&v37 - v21;
  v22 = swift_bridgeObjectRetain();
  if (!MEMORY[0x23B85F0E0](v22, v7))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  v46 = v20;
  v47 = a1;
  v37 = v16;
  v23 = 0;
  v39 = a3 + 16;
  v40 = AssociatedTypeWitness;
  v49 = v8;
  v24 = *(void (**)(_QWORD, _QWORD))(v8 + 72);
  v45 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 536);
  v41 = v15;
  v38 = v24;
  v25 = v46;
  while (1)
  {
    v27 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v27 & 1) != 0)
    {
      v28 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
      v28(v51, a1+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v23, v7);
      v29 = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_11;
      goto LABEL_6;
    }
    result = sub_23B1C6F38();
    if (v37 != 8)
      break;
    v52[0] = result;
    v28 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    v28(v51, (unint64_t)v52, v7);
    swift_unknownObjectRelease();
    v29 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
LABEL_6:
    v50 = v29;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v25, v51, v7);
    v24(v7, v49);
    swift_getAssociatedConformanceWitness();
    v30 = sub_23B1C63A4();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, AssociatedTypeWitness);
    if ((v30 & 1) != 0)
    {
      v31 = v49;
      (*(void (**)(uint64_t, uint64_t))(v49 + 64))(v7, v49);
      v32 = v42;
      v28(v42, (unint64_t)v25, v7);
      v33 = v43;
      v34 = (uint64_t)v32;
      v35 = v31;
      AssociatedTypeWitness = v40;
      v15 = v41;
      sub_23AF15480(v34, v7, v35, v43);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v33, 0, 1, v44);
      swift_beginAccess();
      sub_23B1C629C();
      v24 = v38;
      sub_23B1C62C0();
      swift_endAccess();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v7);
    a1 = v47;
    v26 = MEMORY[0x23B85F0E0](v47, v7);
    ++v23;
    if (v50 == v26)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_23B11E1C0(void *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v57;

  if ((a2 & 1) != 0)
  {
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = a4;
    *(_QWORD *)(v41 + 24) = a3;
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = a5;
    *(_QWORD *)(v42 + 24) = a6;
    v43 = (_QWORD *)swift_allocObject();
    v43[2] = a3;
    v43[3] = a4;
    v43[4] = a7;
    v43[5] = a1;
    v43[6] = a5;
    v43[7] = a6;
    sub_23AAFCDA4(a1, 1);
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    sub_23AAFCDA4(a1, 1);
    v44 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD433C8, v41, (uint64_t)sub_23AD43544, v42, (uint64_t)sub_23B1284C0, (uint64_t)v43, v44, MEMORY[0x24BEE0D00]);
    swift_release();
    swift_release();
    swift_release();
    sub_23AAFCD98(a1, 1);
  }
  else
  {
    v13 = *a3;
    swift_beginAccess();
    v16 = *(_QWORD *)(a8 + 16);
    v17 = *(_QWORD *)(v13 + 96);
    v18 = *(_QWORD *)(v13 + 80);
    swift_getAssociatedTypeWitness();
    v20 = type metadata accessor for SnapshotItem(0, v18, v17, v19);
    swift_getAssociatedConformanceWitness();
    nullsub_1(v16);
    sub_23AAFCDA4(a1, 0);
    v21 = sub_23B1C6260();
    swift_bridgeObjectRetain();
    MEMORY[0x23B8613CC](MEMORY[0x24BEE03C0], v21);
    v22 = sub_23B1C6800();
    v23 = MEMORY[0x23B85F0B0](v22, v20);
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a1;
    v24[3] = a3;
    v24[4] = a4;
    v24[5] = a7;
    v24[6] = a5;
    v24[7] = a6;
    v51 = v24;
    v24[8] = v22;
    swift_retain();
    v50 = a4;
    swift_retain();
    v49 = a1;
    sub_23AAFCDA4(a1, 0);
    swift_retain();
    swift_retain();
    v25 = swift_bridgeObjectRetain();
    if (MEMORY[0x23B85F0B0](v25, v20) < 1)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      if (v23)
      {
        sub_23AAFCD98(v49, 0);
      }
      else
      {
        v45 = swift_allocObject();
        *(_QWORD *)(v45 + 16) = v50;
        *(_QWORD *)(v45 + 24) = a3;
        v46 = swift_allocObject();
        *(_QWORD *)(v46 + 16) = a5;
        *(_QWORD *)(v46 + 24) = a6;
        v47 = swift_allocObject();
        *(_QWORD *)(v47 + 16) = sub_23B12840C;
        *(_QWORD *)(v47 + 24) = v51;
        v48 = type metadata accessor for Continuation();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD433C8, v45, (uint64_t)sub_23AD43544, v46, (uint64_t)sub_23AEB3ED4, v47, v48, MEMORY[0x24BEE0D00]);
        sub_23AAFCD98(v49, 0);
        swift_release();
        swift_release();
        swift_release();
      }
      swift_release();
    }
    else
    {
      v26 = 0;
      if (v23 >= 50)
        v27 = 50;
      else
        v27 = v23;
      while (v27 >= v26)
      {
        v53 = sub_23B1C680C();
        v29 = v28;
        v55 = v31;
        v57 = v30;
        v54 = v27 == v23;
        v32 = swift_allocObject();
        *(_QWORD *)(v32 + 16) = v50;
        *(_QWORD *)(v32 + 24) = a3;
        v33 = swift_allocObject();
        *(_QWORD *)(v33 + 16) = a5;
        *(_QWORD *)(v33 + 24) = a6;
        v34 = v23;
        v35 = swift_allocObject();
        *(_QWORD *)(v35 + 16) = v50;
        *(_QWORD *)(v35 + 24) = v53;
        *(_QWORD *)(v35 + 32) = v29;
        *(_QWORD *)(v35 + 40) = v57;
        *(_QWORD *)(v35 + 48) = v55;
        *(_QWORD *)(v35 + 56) = a3;
        *(_BYTE *)(v35 + 64) = v54;
        *(_QWORD *)(v35 + 72) = sub_23B12840C;
        *(_QWORD *)(v35 + 80) = v51;
        v36 = type metadata accessor for Continuation();
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_unknownObjectRetain();
        swift_retain();
        sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD433C8, v32, (uint64_t)sub_23AD43544, v33, (uint64_t)sub_23B128474, v35, v36, MEMORY[0x24BEE0D00]);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        v37 = v27 + 50;
        if (__OFADD__(v27, 50))
          goto LABEL_17;
        if (v34 < v37)
          v37 = v34;
        v26 = v27;
        v38 = v27 < v34;
        v27 = v37;
        v23 = v34;
        if (!v38)
          goto LABEL_11;
      }
      __break(1u);
LABEL_17:
      __break(1u);
    }
  }
}

void sub_23B11E7B8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[24];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v28 = a2;
  v18[20] = a6;
  v18[21] = a5;
  v21 = a4;
  v22 = a3;
  v6 = (_QWORD *)*a1;
  v25 = sub_23B1C5474();
  v18[8] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v18[7] = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v6[10];
  v9 = v6[12];
  v18[12] = type metadata accessor for SnapshotItem(255, v8, v9, v10);
  v24 = sub_23B1C6C98();
  v18[11] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v18[13] = (char *)v18 - v11;
  v23 = sub_23B1C545C();
  v18[19] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18[18] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v18[10] = (char *)v18 - v13;
  v19 = type metadata accessor for FileTreeError(0, v8, v9, v14);
  v18[9] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)v18 - v15;
  v16 = v6[11];
  v17 = v6[13];
  v29 = v8;
  v30 = v16;
  v31 = v9;
  v32 = v17;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B11E9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 280) = a1;
  *(_QWORD *)(v13 - 288) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 144) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 240) = v9;
  *(_QWORD *)(v13 - 232) = v10;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ItemReconciliation();
}

void sub_23B11EA00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23B1C6C98();
  v5 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v2 - 200) = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v2 - 304) = v1;
  sub_23AB00114();
}

void sub_23B11EAB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  int EnumCaseMultiPayload;
  uint64_t AssociatedTypeWitness;
  uint64_t v42;
  uint64_t AssociatedConformanceWitness;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  if (v1)
    return;
  *(_QWORD *)(v9 - 400) = v2;
  *(_QWORD *)(v9 - 392) = v5;
  *(_QWORD *)(v9 - 384) = v7;
  *(_QWORD *)(v9 - 136) = v6;
  *(_QWORD *)(v9 - 368) = v4;
  v10 = *(_QWORD *)(v9 - 200);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v3, 1, v0);
  *(_QWORD *)(v9 - 376) = 0;
  if (v11 != 1)
  {
    v15 = v0;
    v16 = *(_QWORD *)(v9 - 384);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v16, v3, v0);
    v17 = v16 + *(int *)(v0 + 52);
    v19 = *(_QWORD *)(v9 - 240);
    v18 = *(_QWORD *)(v9 - 232);
    v21 = type metadata accessor for ItemReconciliationHalf(0, v19, v18, v20);
    v22 = *(unsigned __int8 *)(v17 + *(int *)(v21 + 56));
    *(_QWORD *)(v9 - 408) = v15;
    if (v22 == 6)
    {
      v23 = *(_QWORD *)(v9 - 392);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v23, v16, v15);
    }
    else
    {
      v24 = v19;
      v25 = *(_QWORD *)(v9 - 392);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v25, v16, v15);
      v26 = v22 == 4;
      v23 = v25;
      v19 = v24;
      if (v26)
      {
        v27 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
        *(_QWORD *)(v9 - 200) = v27;
        v27(v23, v15);
        v28 = *(_QWORD *)(v9 - 144);
        goto LABEL_11;
      }
    }
    v29 = v23;
    v30 = *(unsigned __int8 *)(v23 + *(int *)(v15 + 52) + *(int *)(v21 + 56));
    v31 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v31(v29, v15);
    if (v30 != 3)
    {
      v33 = *(_QWORD *)(v9 - 144);
      v34 = *(_QWORD *)(v9 - 368);
      if (*(_BYTE *)(v16 + *(int *)(type metadata accessor for ItemReconciliationHalf(0, v33, v34, v32) + 52)) == 1)
      {
        *(_QWORD *)(v9 - 120) = v33;
        *(_QWORD *)(v9 - 112) = v19;
        *(_QWORD *)(v9 - 104) = v34;
        *(_QWORD *)(v9 - 96) = v18;
        type metadata accessor for JobResult();
      }
      v31(v16, *(_QWORD *)(v9 - 408));
      v12 = *(void **)(v9 - 208);
      v13 = v34;
      v14 = v33;
      goto LABEL_15;
    }
    v28 = *(_QWORD *)(v9 - 144);
    *(_QWORD *)(v9 - 200) = v31;
LABEL_11:
    *(_QWORD *)(v9 - 120) = v28;
    *(_QWORD *)(v9 - 112) = v19;
    *(_QWORD *)(v9 - 104) = *(_QWORD *)(v9 - 368);
    *(_QWORD *)(v9 - 96) = v18;
    type metadata accessor for JobResult();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 400) + 8))(v3, v8);
  v12 = *(void **)(v9 - 208);
  v13 = *(_QWORD *)(v9 - 368);
  v14 = *(_QWORD *)(v9 - 144);
LABEL_15:
  v35 = *(_QWORD *)(v9 - 184);
  v36 = *(_QWORD *)(v9 - 160);
  v38 = *(_QWORD *)(v9 - 224);
  v37 = *(_QWORD *)(v9 - 216);
  *(_QWORD *)(v9 - 72) = v12;
  v39 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  if (swift_dynamicCast())
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 13)
    {
      v46 = *(_QWORD *)(v9 - 240);
      v45 = *(_QWORD *)(v9 - 232);
      *(_QWORD *)(v9 - 120) = v14;
      *(_QWORD *)(v9 - 112) = v46;
      *(_QWORD *)(v9 - 104) = v13;
      *(_QWORD *)(v9 - 96) = v45;
      type metadata accessor for JobResult();
    }
    if (!EnumCaseMultiPayload)
    {
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v42 = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v44 = swift_getAssociatedConformanceWitness();
      *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
      *(_QWORD *)(v9 - 112) = v42;
      *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
      *(_QWORD *)(v9 - 96) = v44;
      type metadata accessor for FileItemVersion();
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 344) + 8))(v37, v38);
  }

  sub_23B1C5378();
  sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
  v47 = sub_23B1C575C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 264) + 8))(v36, v35);
  v48 = *(_QWORD *)(v9 - 152);
  v49 = swift_getAssociatedConformanceWitness();
  v50 = v49;
  if ((v47 & 1) != 0 && ((*(uint64_t (**)(uint64_t, uint64_t))(v49 + 72))(v48, v49) & 1) != 0)
  {
    v51 = *(_QWORD *)(v9 - 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 - 320) - 8) + 56))(v51, 1, 1);
    sub_23B0F7398(v51, *(_QWORD *)(v9 - 136), 0, 0, 0, *(_QWORD *)(v9 - 304), *(_QWORD *)(*(_QWORD *)(v9 - 128) + 112), *(_QWORD *)(*(_QWORD *)(v9 - 128) + 120));
  }
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v50 + 72))(v48, v50) & 1) == 0
    && (*(_QWORD *)(*(_QWORD *)(v9 - 128) + 128) & 1) == 0)
  {
    v53 = *(_QWORD *)(v9 - 240);
    v52 = *(_QWORD *)(v9 - 232);
    *(_QWORD *)(v9 - 120) = v14;
    *(_QWORD *)(v9 - 112) = v53;
    *(_QWORD *)(v9 - 104) = v13;
    *(_QWORD *)(v9 - 96) = v52;
    type metadata accessor for JobResult();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v9 - 248))(0, 0, 0, v12);
}

void sub_23B11F588()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23B11F5E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 128) = v1;
  *(_QWORD *)(v5 - 120) = v1;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 136) = v2;
  *(_QWORD *)(v5 - 96) = v4;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B11F628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v7 = sub_23B1C6C98();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v22 - v12;
  *(_QWORD *)(v6 - 168) = v0;
  if (!v0)
  {
    *(_QWORD *)(v6 - 256) = v11;
    *(_QWORD *)(v6 - 248) = v9;
    *(_QWORD *)(v6 - 240) = v13;
    *(_QWORD *)(v6 - 232) = v5;
    *(_QWORD *)(v6 - 224) = v1;
    *(_QWORD *)(v6 - 216) = v4;
    *(_QWORD *)(v6 - 208) = v3;
    *(_QWORD *)(v6 - 200) = v2;
    if (!sub_23AE4F6B4() && (*(_BYTE *)(*(_QWORD *)(v6 - 184) + 128) & 1) != 0)
      sub_23AB00114();
    v14 = *(_QWORD *)(v6 - 136);
    v15 = *(_QWORD *)(v6 - 208);
    v16 = *(_QWORD *)(v6 - 200);
    *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 128);
    *(_QWORD *)(v6 - 112) = v16;
    *(_QWORD *)(v6 - 104) = v14;
    *(_QWORD *)(v6 - 96) = v15;
    type metadata accessor for JobResult();
  }
  v17 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v6 - 152);
  v18 = *(_QWORD *)(v6 - 176);
  v19 = *(_QWORD *)(v6 - 168);
  *(_QWORD *)(v6 - 120) = 0x6572646C6968633CLL;
  *(_QWORD *)(v6 - 112) = 0xEA00000000003A6ELL;
  v20 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v6 - 128), *(_QWORD *)(v6 - 136), v10);
  *(_QWORD *)(v6 - 72) = MEMORY[0x23B85F0B0](v18, v20);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v17(v19, *(_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 112), 0);
  return swift_bridgeObjectRelease();
}

void sub_23B11FBCC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, int a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v42 = a8;
  v57 = a5;
  v58 = a3;
  v13 = *a1;
  v45 = sub_23B1C5BDC();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v43 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v13 + 560);
  v50 = v13;
  v16 = *(_QWORD *)(v13 + 576);
  v46 = v15;
  v47 = v16;
  v18 = type metadata accessor for SnapshotItem(0, v15, v16, v17);
  v55 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v54 = (char *)&v39 - v19;
  v20 = sub_23B1C5E4C();
  v52 = *(_QWORD *)(v20 - 8);
  v53 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v24 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_unknownObjectRetain_n();
  v25 = v23;
  swift_retain();
  v26 = sub_23B1C5E40();
  v27 = sub_23B1C6A88();
  LODWORD(v51) = v27;
  v28 = os_log_type_enabled(v26, v27);
  v59 = a2;
  v49 = a4;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v48 = a7;
    v30 = v29;
    v31 = (_QWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v61 = v41;
    *(_DWORD *)v30 = 138412802;
    v40 = v26;
    v32 = objc_msgSend(v25, sel_enter);
    v60 = (uint64_t)v32;
    v56 = a6;
    sub_23B1C6CBC();
    *v31 = v32;

    *(_WORD *)(v30 + 12) = 2082;
    sub_23AF1A18C();
    v60 = sub_23AABEC68(v33, v34, &v61);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 22) = 2050;
    v35 = sub_23B1C6DA0();
    swift_unknownObjectRelease();
    v60 = v35;
    a6 = v56;
    sub_23B1C6CBC();
    swift_unknownObjectRelease();
    v36 = v40;
    _os_log_impl(&dword_23AA66000, v40, (os_log_type_t)v51, "%@ processing item batch %{public}s -> <items:%{public}ld>", (uint8_t *)v30, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v31, -1, -1);
    v37 = v41;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v37, -1, -1);
    MEMORY[0x23B8614BC](v30, -1, -1);

  }
  else
  {

    swift_release();
    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v52 + 8))(v22, v53);
  if ((a1[16] & 0x10000) != 0)
    v38 = 3;
  else
    v38 = 1;
  sub_23B10BDF8((uint64_t)a1 + *(_QWORD *)(*a1 + 536), v38, a6);
}

uint64_t sub_23B120274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = a6;
  v38 = a5;
  v9 = *(_QWORD *)a4;
  v10 = *(_QWORD *)(*(_QWORD *)a4 + 80);
  v11 = *(_QWORD *)(*(_QWORD *)a4 + 96);
  v30 = type metadata accessor for FileTreeError(0, v10, v11, a4);
  v29[1] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29[2] = (char *)v29 - v12;
  v14 = type metadata accessor for SnapshotItem(255, v10, v11, v13);
  v15 = sub_23B1C6C98();
  v33 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v29 - v16;
  v18 = sub_23B1C5BDC();
  v31 = *(_QWORD *)(v18 - 8);
  v32 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v35 = v11;
  v19 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v36 = (char *)v29 - v22;
  if (a2)
    sub_23B10BBEC();
  v29[0] = AssociatedTypeWitness;
  v23 = (uint64_t *)(a3 + *(int *)(v14 + 68));
  v24 = (unint64_t)v23[1] >> 62;
  if ((_DWORD)v24)
  {
    if ((_DWORD)v24 == 1)
    {
      v40 = v19;
      v34 = *v23;
      v25 = *(_QWORD *)(v9 + 88);
      v26 = *(_QWORD *)(v9 + 104);
      v41 = v25;
      v42 = v35;
      v43 = v26;
      type metadata accessor for Ingestion.TrackTemporaryItem();
    }
    v27 = *(_QWORD *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v17, a3, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v17, 0, 1, v14);
    if ((v38[16] & 0x10000) != 0)
      v28 = 3;
    else
      v28 = 1;
    sub_23B0F7398((uint64_t)v17, a3, v28, 1, 0, a4, v38[14], v38[15]);
  }
  return result;
}

uint64_t sub_23B1206F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v34 = a2;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 584);
  v32 = *(_QWORD *)(*(_QWORD *)v3 + 568);
  v33 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)&v27 - v10;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - v12;
  if (sub_23AE4F6B4())
  {
    v14 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v16 = swift_getAssociatedConformanceWitness();
    v35 = v14;
    v36 = AssociatedTypeWitness;
    goto LABEL_3;
  }
  v29 = v7;
  v30 = v11;
  v27 = v13;
  v28 = v8;
  v17 = v31;
  v18 = v39;
  result = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 16) + 160))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 536));
  if (!v18)
  {
    v39 = 0;
    v20 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v17, 1, AssociatedTypeWitness) != 1)
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v23 = v27;
      v22(v27, v17, AssociatedTypeWitness);
      v22(v34, v23, AssociatedTypeWitness);
      v24 = swift_getAssociatedTypeWitness();
      v25 = swift_getAssociatedConformanceWitness();
      v26 = swift_getAssociatedConformanceWitness();
      v35 = v24;
      v36 = AssociatedTypeWitness;
      v37 = v25;
      v38 = v26;
      type metadata accessor for ReconciliationID();
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v29);
    v21 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v16 = swift_getAssociatedConformanceWitness();
    v35 = v21;
    v36 = AssociatedTypeWitness;
LABEL_3:
    v37 = AssociatedConformanceWitness;
    v38 = v16;
    type metadata accessor for ReconciliationID();
  }
  return result;
}

void sub_23B120A10()
{
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23B120854);
}

void sub_23B120A40(uint64_t a1@<X8>)
{
  sub_23B120A48(a1);
}

void sub_23B120A48(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23B120AD0()
{
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TestingOperation();
}

uint64_t sub_23B120AF4(uint64_t a1)
{
  uint64_t v1;

  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
}

unint64_t sub_23B120B3C()
{
  return 0xD000000000000012;
}

uint64_t sub_23B120B58()
{
  return 9;
}

uint64_t sub_23B120B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[40];

  v5 = v4;
  v7 = type metadata accessor for JobLockRule(0, *(_QWORD *)(*v5 + 560), *(_QWORD *)(*v5 + 576), a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = v19 - v9 + 22;
  v11 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(a2 + 32) + 16) + 304);
  v12 = swift_retain();
  v13 = v11(v12);
  swift_release();
  if ((v13 & 1) != 0)
    return 0;
  swift_beginAccess();
  sub_23AD4332C((uint64_t)(v5 + 6), (uint64_t)v19);
  v15 = v5[14];
  swift_storeEnumTagMultiPayload();
  v14 = sub_23ABD2E40((uint64_t)v19, v15, (uint64_t)v10, v16);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  sub_23AD43374((uint64_t)v19);
  return v14;
}

void sub_23B120C98(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(id, uint64_t (*)(uint64_t, uint64_t), _QWORD *);
  id v20;

  v10 = (*(uint64_t (**)(void))(*a1 + 216))();
  v14 = sub_23ABD54AC(v10, v11, v12, v13);
  swift_release();
  v15 = *(_QWORD *)(a1[4] + 16);
  v16 = *(uint64_t (**)(uint64_t))(*a1 + 272);
  v17 = swift_retain();
  v20 = (id)v16(v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = v5;
  v18[4] = a4;
  v18[5] = a5;
  v18[6] = a3;
  v18[7] = v14;
  v19 = *(void (**)(id, uint64_t (*)(uint64_t, uint64_t), _QWORD *))(*(_QWORD *)v15 + 648);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v19(v20, sub_23B128254, v18);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_23B120DBC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v14 = *a3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a3;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a3;
  v17[3] = a2;
  type metadata accessor for FileTreeWriter.EventStreamBatch(255, *(_QWORD *)(v14 + 80), *(_QWORD *)(v14 + 96), v18);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v19 = sub_23B1C74F0();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17 + 4, a1, v19);
  v17[9] = a7;
  v17[10] = a4;
  v17[11] = a5;
  v17[12] = a6;
  v17[13] = a8;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_23AAB547C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB5450);
  v20 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD433C8, v15, (uint64_t)sub_23AD43544, v16, (uint64_t)sub_23B1282C4, (uint64_t)v17, v20, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23B120F88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD, uint64_t, unint64_t, void *), uint64_t a7, uint64_t *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  double v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  int64_t v62;
  char v63;
  void (*v64)(int64_t, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t, _QWORD, _QWORD);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(void);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(_QWORD, uint64_t, unint64_t, void *);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t);
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t ObjectType;
  _QWORD *v160;
  int64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  _QWORD v172[2];
  unsigned __int8 v173;
  double v174;
  char v175;
  uint64_t v176;

  v9 = v8;
  v149 = a8;
  v134 = a7;
  v135 = a6;
  v138 = a5;
  v137 = a4;
  v13 = *(_QWORD *)(*a1 + 80);
  v139 = (_QWORD *)*a1;
  v156 = v139[12];
  type metadata accessor for FileTreeWriter.EventStreamBatch(255, v13, v156, a4);
  v142 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v14 = sub_23B1C74F0();
  v15 = *(char **)(*(_QWORD *)(v14 - 8) + 32);
  v154 = a3;
  v16 = v14;
  v155 = v15;
  ((void (*)(void **, uint64_t))v15)(&v171, a3);
  v130 = v171;
  v141 = type metadata accessor for FileTreeError(0, v13, v156, v17);
  v128 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141);
  v140 = (char *)&v126 - v18;
  v19 = sub_23B1C6C98();
  v164 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v129 = (char *)&v126 - v20;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v145 = sub_23B1C6C98();
  v144 = *(_QWORD *)(v145 - 8);
  v23 = MEMORY[0x24BDAC7A8](v145);
  v147 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v146 = (char *)&v126 - v25;
  v158 = v19;
  v26 = sub_23B1C6C98();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v126 - v28;
  v165 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v127 = v30;
  v161 = (int64_t)&v126 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_23B1C5BDC();
  v136 = *(_QWORD *)(v133 - 8);
  v31 = MEMORY[0x24BDAC7A8](v133);
  v153 = (void (*)(uint64_t, uint64_t))((char *)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v151 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v143 = (char *)&v126 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v160 = (uint64_t *)((char *)&v126 - v36);
  v126 = v37;
  v38 = MEMORY[0x24BDAC7A8](v35);
  v162 = (char *)&v126 - v39;
  v40 = *(uint64_t (**)(uint64_t))(*a1 + 152);
  v150 = a1;
  v41 = v40(v38);
  v163 = v13;
  v157 = AssociatedTypeWitness;
  v148 = TupleTypeMetadata2;
  v131 = a2;
  v132 = v41;
  if ((v41 & 0x40) == 0)
  {
    v42 = *(_QWORD *)(a2 + 16);
    if (v42)
    {
      v43 = v150[7];
      ObjectType = swift_getObjectType();
      v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 8);
      v45 = *(_QWORD *)(type metadata accessor for SyncState() - 8);
      v46 = a2 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
      v47 = *(_QWORD *)(v45 + 72);
      swift_bridgeObjectRetain();
      do
      {
        v44(v46, ObjectType, v43);
        if (v8)
          return swift_bridgeObjectRelease();
        v46 += v47;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease();
      v9 = 0;
      v13 = v163;
    }
    AssociatedTypeWitness = v157;
  }
  v48 = v154;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v155)(v172, v154, v16);
  v155 = (char *)v172[0];
  if (v175 == 1)
  {
    _s3__C4CodeOMa_1(0);
    v166 = -1002;
    v49 = v130;
    sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
    v50 = sub_23B1C575C();
    sub_23AAB547C(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
    if ((v50 & 1) != 0)
    {
      v152 = v9;
      v52 = v156;
      if ((v132 & 0x40) == 0)
      {
        v53 = v139[11];
        v54 = v139[13];
        v166 = v13;
        v167 = v53;
        v168 = v156;
        v169 = v54;
        type metadata accessor for JobResult();
      }
      v117 = *(void (**)(void))(*(_QWORD *)(v150[4] + 16) + 16);
      if (v117)
      {
        type metadata accessor for FileTreeWriter.FileTreeChange(255, v13, v156, v51);
        sub_23B1C7310();
        swift_allocObject();
        swift_retain();
        v118 = sub_23B1C6728();
        *(_BYTE *)v119 = 0;
        *(_QWORD *)(v119 + 8) = 7;
        *(_BYTE *)(v119 + 16) = 1;
        v13 = v163;
        swift_storeEnumTagMultiPayload();
        v120 = v118;
        v52 = v156;
        sub_23AD7D55C(v120);
        v117();
        sub_23AAB7948((uint64_t)v117);
        swift_bridgeObjectRelease();
      }
      v121 = v139[11];
      v122 = v139[13];
      v166 = v13;
      v167 = v121;
      v168 = v52;
      v169 = v122;
      type metadata accessor for JobResult();
    }
LABEL_25:
    v69 = v139[11];
    v70 = v139[13];
    v166 = v13;
    v167 = v69;
    v168 = v156;
    v169 = v70;
    type metadata accessor for JobResult();
  }
  v154 = v172[1];
  v55 = v174;
  LODWORD(v130) = v173;
  if ((v173 & 1) != 0)
  {
    v56 = v139[11];
    v57 = v139[13];
    v166 = v13;
    v167 = v56;
    v168 = v156;
    v169 = v57;
    type metadata accessor for JobResult();
  }
  v152 = v9;
  swift_getTupleTypeMetadata2();
  sub_23B1C6758();
  v58 = v156;
  ObjectType = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 32);
  v176 = sub_23B1C623C();
  v59 = swift_bridgeObjectRetain();
  if (MEMORY[0x23B85F0E0](v59, v13))
  {
    v60 = 0;
    v153 = *(void (**)(uint64_t, uint64_t))(v58 + 64);
    v61 = v155;
    v62 = v161;
    do
    {
      v63 = sub_23B1C6770();
      sub_23B1C6734();
      if ((v63 & 1) != 0)
      {
        v64 = *(void (**)(int64_t, char *, uint64_t))(v165 + 16);
        v64(v161, &v61[((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80))+ *(_QWORD *)(v165 + 72) * v60], v13);
        v65 = v156;
        v66 = v60 + 1;
        if (__OFADD__(v60, 1))
          goto LABEL_24;
      }
      else
      {
        v68 = sub_23B1C6F38();
        v65 = v156;
        if (v127 != 8)
        {
          __break(1u);
LABEL_74:
          __break(1u);
          JUMPOUT(0x23B1227E0);
        }
        v166 = v68;
        v64 = *(void (**)(int64_t, char *, uint64_t))(v165 + 16);
        v64(v161, (char *)&v166, v13);
        swift_unknownObjectRelease();
        v66 = v60 + 1;
        if (__OFADD__(v60, 1))
        {
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
      }
      v13 = v163;
      v153(v163, v65);
      v64((int64_t)v29, (char *)v62, v13);
      v67 = v165;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v29, 0, 1, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v29, 0, 1, v158);
      AssociatedTypeWitness = v157;
      sub_23B1C629C();
      sub_23B1C62C0();
      (*(void (**)(int64_t, uint64_t))(v67 + 8))(v62, v13);
      v61 = v155;
      ++v60;
    }
    while (v66 != MEMORY[0x23B85F0E0](v155, v13));
  }
  swift_bridgeObjectRelease();
  v72 = v154;
  v73 = swift_bridgeObjectRetain();
  if (!MEMORY[0x23B85F0E0](v73, AssociatedTypeWitness))
    goto LABEL_38;
  v74 = 0;
  v75 = v158;
  v76 = v151;
  v77 = v162;
  while (1)
  {
    v78 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v78 & 1) != 0)
    {
      (*(void (**)(_QWORD *, unint64_t, uint64_t))(v76 + 16))(v160, v72+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(_QWORD *)(v76 + 72) * v74, AssociatedTypeWitness);
      v79 = v74 + 1;
      if (__OFADD__(v74, 1))
        break;
      goto LABEL_31;
    }
    v82 = sub_23B1C6F38();
    if (v126 != 8)
      goto LABEL_74;
    v166 = v82;
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v76 + 16))(v160, &v166, AssociatedTypeWitness);
    swift_unknownObjectRelease();
    v79 = v74 + 1;
    if (__OFADD__(v74, 1))
      break;
LABEL_31:
    (*(void (**)(char *, _QWORD *, uint64_t))(v76 + 32))(v77, v160, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v29, 1, 1, v163);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v29, 0, 1, v75);
    sub_23B1C629C();
    sub_23B1C62C0();
    v80 = v154;
    ++v74;
    v81 = v79 == MEMORY[0x23B85F0E0](v154, AssociatedTypeWitness);
    v72 = v80;
    if (v81)
      goto LABEL_38;
  }
  __break(1u);
LABEL_38:
  v83 = swift_bridgeObjectRelease();
  if ((v132 & 0x40) != 0)
  {
    v102 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v150[4] + 16) + 16);
    v103 = v163;
    if (v102)
    {
      v166 = v176;
      v104 = MEMORY[0x24BDAC7A8](v83);
      v105 = v139[13];
      *(&v126 - 4) = v139[11];
      *(&v126 - 3) = v105;
      *(&v126 - 2) = (uint64_t)v149;
      MEMORY[0x24BDAC7A8](v104);
      *(&v126 - 6) = v103;
      *(&v126 - 5) = v106;
      v107 = v156;
      *(&v126 - 4) = v156;
      *(&v126 - 3) = v108;
      *(&v126 - 2) = (uint64_t)sub_23B1282EC;
      *(&v126 - 1) = v109;
      sub_23AAFA320((uint64_t)v102);
      v110 = sub_23B1C629C();
      v112 = type metadata accessor for FileTreeWriter.FileTreeChange(0, v103, v107, v111);
      swift_bridgeObjectRetain();
      v113 = MEMORY[0x23B8613CC](MEMORY[0x24BEE04E8], v110);
      v114 = v152;
      v116 = sub_23AD7E264((void (*)(char *, char *))sub_23B1282F8, (uint64_t)(&v126 - 8), v110, v112, MEMORY[0x24BEE4078], v113, MEMORY[0x24BEE40A8], v115);
      v152 = v114;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v102(v116, v131, 0, 0);
      sub_23AAB7948((uint64_t)v102);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v162 = (char *)v176;
    v84 = 1 << *(_BYTE *)(v176 + 32);
    v85 = -1;
    if (v84 < 64)
      v85 = ~(-1 << v84);
    v86 = *(_QWORD *)(v176 + 64);
    v160 = (_QWORD *)(v176 + 64);
    v87 = v85 & v86;
    v161 = (unint64_t)(v84 + 63) >> 6;
    ObjectType = v161 - 1;
    v88 = (uint64_t)v129;
    v89 = v148;
    v90 = v147;
    v91 = v146;
    if ((v85 & v86) != 0)
    {
      v165 = (v87 - 1) & v87;
      v92 = __clz(__rbit64(v87));
      v93 = v164;
      goto LABEL_43;
    }
    v96 = 1;
    v93 = v164;
    if (v161 <= 1)
      goto LABEL_47;
    v97 = v160[1];
    if (v97)
    {
LABEL_46:
      v165 = (v97 - 1) & v97;
      v92 = __clz(__rbit64(v97)) + (v96 << 6);
LABEL_43:
      v94 = v162;
      (*(void (**)(char *, unint64_t, uint64_t))(v151 + 16))(v147, *((_QWORD *)v162 + 6) + *(_QWORD *)(v151 + 72) * v92, AssociatedTypeWitness);
      (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(&v90[*(int *)(v89 + 48)], *((_QWORD *)v94 + 7) + *(_QWORD *)(v93 + 72) * v92, v158);
      v95 = 0;
      goto LABEL_48;
    }
    if (v161 <= 2)
    {
      v165 = 0;
      v95 = 1;
      goto LABEL_48;
    }
    v97 = v160[2];
    if (v97)
    {
      v96 = 2;
      goto LABEL_46;
    }
    v101 = 3;
    if (v161 <= 3)
    {
LABEL_47:
      v165 = 0;
      v95 = 1;
      goto LABEL_48;
    }
    v97 = v160[3];
    if (v97)
    {
      v96 = 3;
      goto LABEL_46;
    }
    while (1)
    {
      v96 = v101 + 1;
      if (__OFADD__(v101, 1))
      {
        __break(1u);
        JUMPOUT(0x23B122808);
      }
      if (v96 >= v161)
        break;
      v97 = v160[v96];
      ++v101;
      if (v97)
        goto LABEL_46;
    }
    v165 = 0;
    v95 = 1;
LABEL_48:
    v98 = *(_QWORD *)(v89 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v90, v95, 1, v89);
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v91, v90, v145);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v91, 1, v89) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v88, &v91[*(int *)(v89 + 48)], v158);
      v99 = (uint64_t)v143;
      v100 = (*(uint64_t (**)(char *, char *, uint64_t))(v151 + 32))(v143, v91, AssociatedTypeWitness);
      MEMORY[0x23B8601A8](v100);
      sub_23B1229EC(v99, v88, v149, v150);
    }
    swift_release();
    v103 = v163;
  }
  if (v55 >= 30.0)
  {
    sub_23AB7BFCC();
    v123 = (void *)swift_allocError();
    *(_QWORD *)v124 = 0;
    *(_QWORD *)(v124 + 8) = 0;
    *(_BYTE *)(v124 + 16) = -4;
  }
  else
  {
    v123 = 0;
  }
  v166 = 0;
  v167 = 0xE000000000000000;
  v125 = v123;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v166 = 0x646574616470753CLL;
  v167 = 0xE90000000000003ALL;
  v170 = MEMORY[0x23B85F0B0](v155, v103);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v170 = MEMORY[0x23B85F0B0](v154, AssociatedTypeWitness);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v135(0, v166, v167, v123);

  return swift_bridgeObjectRelease();
}

uint64_t sub_23B122828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t TupleTypeMetadata3;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v8 = *(_QWORD *)(*(_QWORD *)a3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_23B1C6C98();
  sub_23B1C6C98();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v13 = a4 + *(int *)(TupleTypeMetadata3 + 48);
  v14 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a4, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v13, a2, v11);
  *(_QWORD *)(a4 + v14) = a3;
  type metadata accessor for FileTreeWriter.FileTreeChange(0, v9, v8, v15);
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

uint64_t sub_23B12293C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

void sub_23B1229EC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[12];

  v14[4] = a1;
  v14[5] = a2;
  v4 = *a3;
  v5 = *a4;
  v6 = sub_23B1C5BDC();
  v14[2] = *(_QWORD *)(v6 - 8);
  v14[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v14[1] = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 80);
  v8 = *(_QWORD *)(v4 + 88);
  v11 = type metadata accessor for FileTreeWriter.FileTreeChange(0, v9, v8, v10);
  v14[6] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v12 = *(_QWORD *)(v5 + 88);
  v13 = *(_QWORD *)(v5 + 104);
  v14[8] = v9;
  v14[9] = v12;
  v14[10] = v8;
  v14[11] = v13;
  type metadata accessor for ConcreteJobResult();
}

void sub_23B122AC4()
{
  sub_23AEB6FD8();
}

uint64_t sub_23B122ACC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata3;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  double v18;
  double v19;
  double v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_23B1C6C98();
  type metadata accessor for JobLockAggregator(255, v3, v1, v11);
  sub_23B1C6C98();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v13 = v6 + *(int *)(TupleTypeMetadata3 + 48);
  v14 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v6, *(_QWORD *)(v7 - 144), AssociatedTypeWitness);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v13, *(_QWORD *)(v7 - 136), v10);
  *(_QWORD *)(v6 + v14) = v5;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v15 = *(_QWORD *)(v7 - 120);
  sub_23B0FB994(v6, 0, a1, v2);
  if (v15)
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 8))(v6, v4);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 8))(v6, v4);
  v17 = *(_QWORD *)(v7 - 168);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v19 = v18;
  result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 160) + 8))(v17, *(_QWORD *)(v7 - 152));
  v20 = v19 * 1000000000.0;
  if ((~COERCE__INT64(v19 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v20 > -9.22337204e18)
    {
      if (v20 < 9.22337204e18)
        sub_23AEBF200((uint64_t)a1, (uint64_t)v20);
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

void type metadata accessor for Ingestion.FetchEventStream()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B122CD0()
{
  return 0xD000000000000014;
}

uint64_t sub_23B122CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t (*)(), _QWORD *);

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v10 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 536);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  v12 = *(void (**)(uint64_t, uint64_t (*)(), _QWORD *))(*(_QWORD *)v9 + 576);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v10, sub_23B12820C, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_23B122D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v7 = type metadata accessor for Continuation();
  swift_retain_n();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v5, (uint64_t)sub_23B128218, v6, v7, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

void type metadata accessor for Ingestion.CancelFetchFileContent()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B122E84()
{
  return swift_initClassMetadata2();
}

unint64_t sub_23B122EC4()
{
  return 0xD000000000000018;
}

uint64_t sub_23B122EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v5;

  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 136) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 152) = v5;
  *(_OWORD *)(v4 + 168) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v4 + 184) = *(_QWORD *)(a1 + 48);
  return sub_23AF1A8A8(a2, a3, a4);
}

uint64_t sub_23B122F0C()
{
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 979659110;
}

void sub_23B122F74()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23B123044(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 1, 1, a1);
}

uint64_t sub_23B123080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  __int128 v10;
  _QWORD *v11;
  void (*v12)(_OWORD *, uint64_t (*)(void *), _QWORD *);
  _OWORD v14[3];
  uint64_t v15;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v10 = *(_OWORD *)(v5 + 152);
  v14[0] = *(_OWORD *)(v5 + 136);
  v14[1] = v10;
  v14[2] = *(_OWORD *)(v5 + 168);
  v15 = *(_QWORD *)(v5 + 184);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  v12 = *(void (**)(_OWORD *, uint64_t (*)(void *), _QWORD *))(*(_QWORD *)v9 + 680);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v14, sub_23B1281F0, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_23B123144(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  swift_retain_n();
  v9 = a1;
  v10 = type metadata accessor for Continuation();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v7, (uint64_t)sub_23AD9EF28, (uint64_t)v8, v10, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

uint64_t sub_23B123230()
{
  uint64_t v0;

  return sub_23AAA3E18(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
}

uint64_t sub_23B123238()
{
  uint64_t v0;

  v0 = sub_23AF1A8FC();
  sub_23AAA3E18(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  return v0;
}

uint64_t sub_23B123268()
{
  uint64_t v0;

  v0 = sub_23AF1A8FC();
  sub_23AAA3E18(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  return swift_deallocClassInstance();
}

void type metadata accessor for Ingestion.CollectCapturedContent()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B1232AC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23B123330()
{
  return 0x74692D656772656DLL;
}

uint64_t sub_23B123350()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  sub_23B1C64F4();
  sub_23B1C7340();
  return 0;
}

uint64_t sub_23B123430(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t TupleTypeMetadata3;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[40];
  uint64_t v49;

  v3 = v2;
  v45 = a1;
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 520);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 504);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_23B1C6C98();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v40 - v12;
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v46 = AssociatedTypeWitness;
  v47 = v14;
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v40 - v15;
  v17 = *(_QWORD *)(a2 + 32);
  v18 = &v3[*(_QWORD *)(v5 + 536)];
  v19 = v49;
  (*(void (**)(char *))(*(_QWORD *)v17 + 280))(v18);
  v49 = v19;
  if (!v19)
  {
    v20 = v16;
    v21 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v13, 1, v46) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      return 0;
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      v43 = v20;
      v22(v20, v13, v21);
      swift_beginAccess();
      sub_23AD4332C((uint64_t)(v3 + 48), (uint64_t)v48);
      v44 = *((_QWORD *)v3 + 14);
      v24 = type metadata accessor for JobLockRule(255, v7, v6, v23);
      v25 = v18;
      v26 = v24;
      sub_23B1C7310();
      v41 = *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72);
      swift_allocObject();
      v42 = sub_23B1C6728();
      v28 = v27;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v30 = v28 + *(int *)(TupleTypeMetadata3 + 48);
      v31 = v28 + *(int *)(TupleTypeMetadata3 + 64);
      v32 = *(void (**)(uint64_t, char *, uint64_t))(v47 + 16);
      v32(v28, v25, v21);
      v33 = v43;
      v32(v30, v43, v21);
      v32(v31, v33, v21);
      swift_storeEnumTagMultiPayload();
      v34 = v28 + v41;
      v35 = v28 + v41 + *(int *)(TupleTypeMetadata3 + 48);
      v36 = v34 + *(int *)(TupleTypeMetadata3 + 64);
      v32(v34, &v3[*(_QWORD *)(*(_QWORD *)v3 + 544)], v21);
      v32(v35, v33, v21);
      v32(v36, v33, v21);
      swift_storeEnumTagMultiPayload();
      v37 = sub_23AD7D55C(v42);
      v17 = sub_23ABD195C((uint64_t)v48, v44, v37, v38);
      swift_bridgeObjectRelease();
      sub_23AD43374((uint64_t)v48);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v21);
    }
  }
  return v17;
}

void sub_23B123760()
{
  type metadata accessor for Propagation.PropagationError();
}

void sub_23B1237B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;

  *(_QWORD *)(v9 - 256) = a1;
  *(_QWORD *)(v9 - 328) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 336) = (char *)&a9 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v12;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v14;
  type metadata accessor for FileItemVersion();
}

void sub_23B123888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v13 - 224) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v14;
  v16 = type metadata accessor for SnapshotItem(255, v10, v11, v15);
  v17 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 304) = v17;
  *(_QWORD *)(v13 - 248) = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 168) = (char *)&a9 - v21;
  v22 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v13 - 240) = v16;
  *(_QWORD *)(v13 - 232) = v22;
  v23 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 352) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v25;
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B1239B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v15 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v14 - 184) = a1;
  *(_QWORD *)(v14 - 176) = v15;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 216) = v13;
  v16 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 280) = v16;
  *(_QWORD *)(v14 - 272) = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v14 - 320) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v14 - 312) = (char *)&a9 - v20;
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 264) = (char *)&a9 - v21;
  *(_QWORD *)(v14 - 120) = v10;
  *(_QWORD *)(v14 - 112) = v12;
  *(_QWORD *)(v14 - 104) = v11;
  *(_QWORD *)(v14 - 96) = v9;
  type metadata accessor for JobResult();
}

void sub_23B123A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;

  *(_QWORD *)(v1 - 192) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 112) = v3;
  *(_QWORD *)(v1 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 - 96) = v5;
  type metadata accessor for ReconciliationID();
}

void sub_23B123B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD, void *);
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, _QWORD, uint64_t (*)(void *), _QWORD *);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t TupleTypeMetadata2;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  uint64_t v73;
  void *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD, uint64_t, uint64_t, void *, uint64_t (*)(uint64_t), _QWORD *);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;

  type metadata accessor for ReconciliationSideMutation(255, v5, v6, a4);
  v11 = v7 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v12 = v4 + *(_QWORD *)(*(_QWORD *)(v10 - 160) + 544);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v13(v7, v12, v9);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)v11 = xmmword_23B1CFCA0;
  *(_BYTE *)(v11 + 16) = 4;
  swift_storeEnumTagMultiPayload();
  v14 = *(_QWORD *)(v10 - 184);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v8, v7);
  v15 = *(_QWORD *)(v10 - 144);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 176) + 8))(v7, v14);
  v16 = *(_QWORD **)(v15 + 32);
  v17 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 536);
  v18 = *(void (**)(uint64_t, uint64_t))(*v16 + 240);
  v19 = *(_QWORD *)(v10 - 168);
  v18(v17, 1);
  *(_QWORD *)(v10 - 160) = v12;
  v23 = *(_QWORD *)(v10 - 248);
  v22 = *(_QWORD *)(v10 - 240);
  *(_QWORD *)(v10 - 192) = v13;
  *(_QWORD *)(v10 - 184) = v9;
  *(_QWORD *)(v10 - 176) = v17;
  v25 = *(_QWORD *)(v10 - 224);
  v24 = *(_QWORD *)(v10 - 216);
  v26 = *(_QWORD *)(v10 - 232);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v19, 1, v22);
  if (v28 == 1)
  {
    v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v30 = *(_QWORD *)(v10 - 304);
    v29(v19, v30);
    v31 = *(_QWORD *)(v10 - 288);
    v18(*(_QWORD *)(v10 - 160), 1);
    v61 = v27(v31, 1, v22);
    v62 = v31;
    if (v61 == 1)
    {
      v29(v31, v30);
      MEMORY[0x23B8613CC](&unk_23B1D8690, *(_QWORD *)(v10 - 256));
      v63 = (void *)swift_allocError();
      v65 = v64;
      v66 = *(_QWORD *)(v10 - 184);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v68 = (char *)(v65 + *(int *)(TupleTypeMetadata2 + 48));
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 - 192))(v65, *(_QWORD *)(v10 - 176), v66);
      strcpy(v68, "no source item");
      v68[15] = -18;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v65, 0, 1, TupleTypeMetadata2);
      swift_willThrow();
      v20 = *(void (**)(_QWORD, _QWORD, _QWORD, void *))(v10 - 208);
LABEL_2:
      v21 = v63;
      v20(0, 0, 0, v63);

      return;
    }
    v80 = *(_QWORD *)(v10 - 232);
    v81 = *(_QWORD *)(v10 - 352);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v81, v62, v22);
    v82 = MEMORY[0x23B8613CC](&unk_23B1DD478, v22);
    v83 = sub_23AF219A4(v22, v82);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD, void *))(v10 - 208);
    if (v83 != 1)
    {
      MEMORY[0x23B8613CC](&unk_23B1D8690, *(_QWORD *)(v10 - 256));
      v63 = (void *)swift_allocError();
      v85 = v84;
      v86 = *(_QWORD *)(v10 - 184);
      v87 = swift_getTupleTypeMetadata2();
      v88 = (_QWORD *)(v85 + *(int *)(v87 + 48));
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 - 192))(v85, *(_QWORD *)(v10 - 176), v86);
      *v88 = 0xD00000000000002DLL;
      v88[1] = 0x800000023B21E1D0;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v85, 0, 1, v87);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v22);
      goto LABEL_2;
    }
    v20(0, 0, 0, 0);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v22);
  }
  else
  {
    v32 = *(_QWORD *)(v10 - 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v32, v19, v22);
    v33 = MEMORY[0x23B8613CC](&unk_23B1DD478, v22);
    v34 = v22;
    v35 = sub_23AF219A4(v22, v33);
    v36 = *(_QWORD *)(v10 - 312);
    v37 = v24;
    v38 = v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v36, v32 + *(int *)(v34 + 40), v24);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v32, v34);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v36, 0, 1, v24);
    v39 = *(_QWORD *)(v10 - 272);
    v40 = *(_QWORD *)(v10 - 264);
    v41 = *(_QWORD *)(v10 - 280);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v40, v36, v41);
    v42 = *(_QWORD *)(v10 - 256);
    if (v35 == 1)
    {
      v43 = v16[2];
      v44 = (_QWORD *)swift_allocObject();
      v45 = *(_QWORD *)(v10 - 152);
      v46 = *(_QWORD *)(v10 - 208);
      v47 = *(_QWORD *)(v10 - 200);
      v44[2] = *(_QWORD *)(v10 - 144);
      v44[3] = v46;
      v48 = v40;
      v49 = *(_QWORD *)(v10 - 136);
      v44[4] = v47;
      v44[5] = v49;
      v44[6] = v45;
      v50 = *(void (**)(_QWORD, _QWORD, uint64_t (*)(void *), _QWORD *))(*(_QWORD *)v43 + 632);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v50(*(_QWORD *)(v10 - 176), *(_QWORD *)(v10 - 160), sub_23B128188, v44);
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v48, v41);
    }
    else
    {
      v51 = *(_QWORD *)(v10 - 320);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v51, v40, v41);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v51, 1, v37) == 1)
      {
        v52 = v40;
        v53 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        v53(v51, v41);
        v54 = *(_QWORD *)(v10 - 184);
        v55 = swift_getTupleTypeMetadata2();
        v56 = *(_QWORD *)(v10 - 336);
        v57 = (_QWORD *)(v56 + *(int *)(v55 + 48));
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 - 192))(v56, *(_QWORD *)(v10 - 176), v54);
        *v57 = 0x20676E697373696DLL;
        v57[1] = 0xEF6E6F6973726576;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v56, 0, 1, v55);
        MEMORY[0x23B8613CC](&unk_23B1D8690, v42);
        v58 = (void *)swift_allocError();
        v59 = *(_QWORD *)(v10 - 328);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v60, v56, v42);
        (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v10 - 208))(0, 0, 0, v58);

        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v56, v42);
        v53(v52, v41);
      }
      else
      {
        v69 = *(_QWORD *)(v10 - 344);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v69, v51, v37);
        v70 = v16[2];
        v71 = *(_QWORD *)(v10 - 144);
        v72 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v71 + 272);
        v73 = swift_retain();
        v74 = (void *)v72(v73);
        v75 = (_QWORD *)swift_allocObject();
        v76 = v41;
        v77 = *(_QWORD *)(v10 - 152);
        v75[2] = v71;
        v75[3] = v77;
        v78 = *(_QWORD *)(v10 - 200);
        v75[4] = *(_QWORD *)(v10 - 208);
        v75[5] = v78;
        v75[6] = *(_QWORD *)(v10 - 136);
        v79 = *(void (**)(_QWORD, uint64_t, uint64_t, void *, uint64_t (*)(uint64_t), _QWORD *))(*(_QWORD *)v70 + 624);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v79(*(_QWORD *)(v10 - 176), 1, v69, v74, sub_23B128178, v75);
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 224) + 8))(v69, *(_QWORD *)(v10 - 216));
        (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v10 - 272) + 8))(*(_QWORD *)(v10 - 264), v76);
      }
    }
  }
}

uint64_t sub_23B1242F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a3;
  *(_QWORD *)(v12 + 24) = a4;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a5;
  v13[4] = a6;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = a4;
  swift_retain_n();
  v14 = a1;
  v15 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v12, (uint64_t)sub_23B1281AC, (uint64_t)v13, v15, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

void sub_23B124410()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23B124464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 200) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 192) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v12;
  *(_QWORD *)(v13 - 88) = v10;
  type metadata accessor for ItemReconciliation();
}

void sub_23B1244A8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _BYTE v16[96];

  v8 = sub_23B1C6C98();
  *(_QWORD *)(v6 - 184) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 - 176) = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v6 - 168) = &v16[-v10];
  type metadata accessor for SnapshotItem(255, v1, v5, v11);
  v12 = sub_23B1C6C98();
  v13 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v6 - 152) = &v16[-v14];
  if (v2)
  {
    *(_QWORD *)(v6 - 216) = v3;
    *(_QWORD *)(v6 - 152) = a1;
    v15 = v2;
    sub_23AB00114();
  }
  *(_QWORD *)(v6 - 160) = v13;
  *(_QWORD *)(v6 - 112) = v1;
  *(_QWORD *)(v6 - 104) = v4;
  *(_QWORD *)(v6 - 96) = v5;
  *(_QWORD *)(v6 - 88) = v3;
  type metadata accessor for JobResult();
}

void sub_23B1245D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  *(_QWORD *)(v4 - 88) = v1;
  type metadata accessor for Ingestion.FetchChildrenMetadata();
}

void sub_23B1245EC()
{
  uint64_t *v0;

  sub_23B126EF4((uint64_t)v0 + *(_QWORD *)(*v0 + 544), v0[14], v0[15], v0[16] | 0x800, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

void sub_23B124614(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23AE181A4(*(_QWORD *)(v3 - 128), a1);
  swift_release();
  v4 = *(_QWORD *)(v3 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v4, 1, 1, v2);
  sub_23B0F7398(v4, (uint64_t)v1 + *(_QWORD *)(*v1 + 536), 0, 0, 0, *(_QWORD *)(v3 - 120), v1[14], v1[15]);
}

void sub_23B12468C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, _QWORD))(v2 + 8))(v0, *(_QWORD *)(v3 - 160));
  if (!v1)
    (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v3 - 136))(0, 0, 0, 0);
  JUMPOUT(0x23B1247DCLL);
}

void sub_23B124820(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;

  *(_QWORD *)(v1 - 184) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 - 88) = v5;
  type metadata accessor for ReconciliationID();
}

void sub_23B1248BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  type metadata accessor for ReconciliationSideMutation(255, v4, v7, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(v8 - 208);
  v11 = v10 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v10, *(_QWORD *)(v8 - 120), v5);
  swift_storeEnumTagMultiPayload();
  if (qword_2542E7190 != -1)
    swift_once();
  *(_QWORD *)v11 = qword_2542EDE38;
  *(_OWORD *)(v11 + 8) = *(_OWORD *)(*(_QWORD *)(v8 - 176) + 112);
  swift_storeEnumTagMultiPayload();
  v12 = *(_QWORD *)(v8 - 192);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v8 - 128), v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 200) + 8))(v10, v12);
  v13 = v6;
  (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v8 - 136))(0, 0, 0, v6);

  JUMPOUT(0x23B1247D0);
}

uint64_t sub_23B1249E8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v29 = a5;
  v30 = a4;
  v34 = *a2;
  v35 = a6;
  v31 = a2;
  v33 = *(_QWORD *)(v34 + 80);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v11 = sub_23B1C74F0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - v14;
  v16 = swift_allocObject();
  v32 = v16;
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  v18 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = (v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v33;
  v21 = v34;
  v22 = v35;
  *(_OWORD *)(v20 + 24) = *(_OWORD *)(v34 + 88);
  *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 104);
  *(_QWORD *)(v20 + 48) = v22;
  *(_QWORD *)(v20 + 56) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v20 + v18, v15, v11);
  v23 = v30;
  *(_QWORD *)(v20 + v19) = v31;
  v24 = (_QWORD *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8));
  v25 = v29;
  *v24 = v23;
  v24[1] = v25;
  v26 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD433C8, v32, (uint64_t)sub_23AD43544, v17, (uint64_t)sub_23B1281D0, v20, v26, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23B124C4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[26];

  v16[17] = a5;
  v16[15] = a3;
  v16[16] = a6;
  v16[7] = a4;
  v16[25] = a2;
  v16[14] = a1;
  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 80);
  v8 = *(_QWORD *)(*a1 + 96);
  v16[2] = type metadata accessor for SnapshotItem(255, v7, v8, a4);
  v9 = sub_23B1C6C98();
  v16[5] = *(_QWORD *)(v9 - 8);
  v16[6] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v16[4] = (char *)v16 - v10;
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v11 = sub_23B1C74F0();
  v12 = *(_QWORD *)(v11 - 8);
  v16[12] = v11;
  v16[13] = v12;
  MEMORY[0x24BDAC7A8](v11);
  v16[8] = (char *)v16 - v13;
  v14 = *(_QWORD *)(v6 + 88);
  v15 = *(_QWORD *)(v6 + 104);
  v16[19] = v7;
  v16[20] = v14;
  v16[21] = v8;
  v16[22] = v15;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B124D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 192) = a1;
  *(_QWORD *)(v5 - 184) = v6;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v1;
  type metadata accessor for JobResult();
}

void sub_23B124DC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  *(_QWORD *)(v3 - 200) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 264) = v1;
  *(_QWORD *)(v3 - 272) = v2;
  v7 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v3 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v3 - 112) = v5;
  *(_QWORD *)(v3 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v3 - 96) = v7;
  type metadata accessor for ReconciliationID();
}

void sub_23B124E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v9 - 248) = v8;
  v10 = v8;
  v11 = *(_QWORD *)(v9 - 208);
  type metadata accessor for ReconciliationSideMutation(255, v6, v10, a4);
  v12 = v5 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v13 = *(_QWORD *)(v9 - 72) + *(_QWORD *)(**(_QWORD **)(v9 - 72) + 536);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v5, v13, v4);
  v14 = *(_QWORD *)(v9 - 160);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)v12 = xmmword_23B1CFCA0;
  *(_BYTE *)(v12 + 16) = 4;
  v15 = *(_QWORD *)(v9 - 176);
  swift_storeEnumTagMultiPayload();
  v16 = *(_QWORD *)(v9 - 192);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v14, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 184) + 8))(v5, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 168) + 16))(v11, *(_QWORD *)(v9 - 152), v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = *(_QWORD *)(v9 - 272);
    *(_QWORD *)(v9 - 120) = v7;
    *(_QWORD *)(v9 - 112) = v17;
    v18 = *(_QWORD *)(v9 - 264);
    *(_QWORD *)(v9 - 104) = *(_QWORD *)(v9 - 248);
    *(_QWORD *)(v9 - 96) = v18;
    type metadata accessor for Ingestion.FetchItemMetadata();
  }
  v19 = *(_QWORD *)(v9 - 240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v9 - 256) - 8) + 56))(v19, 1, 1);
  sub_23B0F7398(v19, v13, 0, 0, 0, *(_QWORD *)(v9 - 216), *(_QWORD *)(*(_QWORD *)(v9 - 72) + 112), *(_QWORD *)(*(_QWORD *)(v9 - 72) + 120));
}

void sub_23B125080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(v2, *(_QWORD *)(v6 - 224));
  if (!v0)
    v4(0, 0, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v5, v3);
  JUMPOUT(0x23B1250D4);
}

uint64_t sub_23B1250F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8);
  v4(v1, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, uint64_t))v4)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 544), AssociatedTypeWitness);
}

uint64_t sub_23B125180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  void (*v3)(uint64_t, uint64_t);

  v0 = sub_23AF1A8FC();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8);
  v3(v1, AssociatedTypeWitness);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 544), AssociatedTypeWitness);
  return v0;
}

uint64_t sub_23B125208()
{
  return sub_23AD9CC04((void (*)(void))sub_23B125180);
}

void type metadata accessor for Ingestion.MergeItems()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B125220()
{
  return 0xD000000000000014;
}

uint64_t sub_23B12523C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  _BYTE *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[40];

  v5 = type metadata accessor for JobLockRule(0, *(_QWORD *)(*v4 + 560), *(_QWORD *)(*v4 + 576), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = v18 - v7 + 22;
  swift_beginAccess();
  sub_23AD4332C((uint64_t)(v4 + 6), (uint64_t)v18);
  v9 = v4[14];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  v11 = &v8[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  v12 = (char *)v4 + *(_QWORD *)(*v4 + 536);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(_BYTE *, char *, uint64_t))(v13 + 16))(v8, v12, AssociatedTypeWitness);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  v15 = sub_23ABD2E40((uint64_t)v18, v9, (uint64_t)v8, v14);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  sub_23AD43374((uint64_t)v18);
  return v15;
}

uint64_t sub_23B1253D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t TupleTypeMetadata2;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(void);
  uint64_t *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v115 = a7;
  v116 = a4;
  v111 = a2;
  v112 = a6;
  v109 = a5;
  v110 = a3;
  v114 = a1;
  v117 = a8;
  v9 = *v8;
  v10 = *(_QWORD *)(*(_QWORD *)(*v8 + 560) - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v102 - v13;
  v15 = *(_QWORD *)(v9 + 576);
  v113 = v16;
  v18 = type metadata accessor for FileTreeWriter.ItemOrContinuation(255, v16, v15, v17);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v19 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (void **)((char *)&v102 - v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)&v102 - v20, v114, v19);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v104 = v8;
    v105 = v11;
    v114 = v15;
    v106 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v107 = v9;
    v34 = v112;
    v33 = v113;
    v108 = v14;
    v35 = v117;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void **, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v21, v18);
      v36 = swift_allocObject();
      v37 = v115;
      *(_QWORD *)(v36 + 16) = v34;
      *(_QWORD *)(v36 + 24) = v37;
      v38 = (_QWORD *)swift_allocObject();
      v38[2] = v34;
      v38[3] = v37;
      v38[4] = v111;
      v39 = type metadata accessor for Continuation();
      swift_retain_n();
      swift_retain();
      sub_23AD02DFC((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v36, (uint64_t)sub_23B127DF8, (uint64_t)v38, v39, MEMORY[0x24BEE0D00]);
      swift_release();
      swift_release();
      type metadata accessor for TrackingContinuation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56);
      v32 = v35;
      return v31(v32, 1, 1, TupleTypeMetadata2);
    }
    v40 = v33;
    v41 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v10 + 48))(v21, 1, v33);
    v42 = v35;
    v43 = v115;
    if (v41 == 1)
    {
      v44 = v42;
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = v34;
      *(_QWORD *)(v45 + 24) = v43;
      v46 = swift_allocObject();
      *(_QWORD *)(v46 + 16) = v34;
      *(_QWORD *)(v46 + 24) = v43;
      v47 = type metadata accessor for Continuation();
      swift_retain_n();
      sub_23AD02DFC((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v45, (uint64_t)sub_23B127DAC, v46, v47, MEMORY[0x24BEE0D00]);
      swift_release();
      swift_release();
      type metadata accessor for TrackingContinuation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56);
      v32 = v44;
      return v31(v32, 1, 1, TupleTypeMetadata2);
    }
    v49 = v108;
    v103 = *(void (**)(void))(v10 + 32);
    v103();
    (*(void (**)(uint64_t))(v114 + 144))(v33);
    v51 = v50;
    if (v50 >> 62)
    {
      if (v50 >> 62 != 1)
      {
        v69 = swift_allocObject();
        v111 = v69;
        v70 = v34;
        *(_QWORD *)(v69 + 16) = v34;
        *(_QWORD *)(v69 + 24) = v43;
        v71 = v10;
        v102 = v10;
        v72 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
        v73 = v106;
        v72(v106, v49, v33);
        v74 = (*(unsigned __int8 *)(v71 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
        v75 = (v105 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
        v76 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
        v77 = (v76 + 15) & 0xFFFFFFFFFFFFFFF8;
        v78 = swift_allocObject();
        *(_QWORD *)(v78 + 16) = v33;
        v79 = v107;
        v80 = v114;
        *(_QWORD *)(v78 + 24) = *(_QWORD *)(v107 + 568);
        *(_QWORD *)(v78 + 32) = v80;
        *(_QWORD *)(v78 + 40) = *(_QWORD *)(v79 + 584);
        *(_BYTE *)(v78 + 48) = v109 & 1;
        ((void (*)(unint64_t, char *, uint64_t))v103)(v78 + v74, v73, v33);
        *(_QWORD *)(v78 + v75) = v116;
        *(_QWORD *)(v78 + v76) = v104;
        *(_QWORD *)(v78 + v77) = v110;
        v81 = (_QWORD *)(v78 + ((v77 + 15) & 0xFFFFFFFFFFFFFFF8));
        *v81 = v70;
        v81[1] = v43;
        v82 = type metadata accessor for Continuation();
        swift_retain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_23AD02DFC((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v111, (uint64_t)sub_23B127D40, v78, v82, MEMORY[0x24BEE0D00]);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v108, v33);
        type metadata accessor for TrackingContinuation();
        goto LABEL_3;
      }
      v51 = v50 & 0x3FFFFFFFFFFFFFFFLL;
    }
    v52 = v10;
    v53 = v34;
    if (v111)
    {
      v54 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v51 + 112);
      v55 = swift_retain();
      v56 = v54(v55);
      if (!v57)
      {
        swift_release();
        type metadata accessor for TrackingContinuation();
        v99 = swift_getTupleTypeMetadata2();
        v100 = *(int *)(v99 + 48);
        v101 = v117;
        ((void (*)(uint64_t, char *, uint64_t))v103)(v117, v108, v33);
        *(_QWORD *)(v101 + v100) = v51;
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v101, 0, 1, v99);
      }
      v58 = v57;
      v110 = v56;
      v59 = swift_allocObject();
      *(_QWORD *)(v59 + 16) = v34;
      v60 = v34;
      v61 = v115;
      *(_QWORD *)(v59 + 24) = v115;
      v62 = v106;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v106, v108, v33);
      v63 = (*(unsigned __int8 *)(v10 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v64 = (_QWORD *)swift_allocObject();
      v65 = v107;
      v66 = (uint64_t)v64;
      v64[2] = v33;
      v67 = v114;
      v64[3] = *(_QWORD *)(v65 + 568);
      v64[4] = v67;
      v64[5] = *(_QWORD *)(v65 + 584);
      v64[6] = v60;
      v64[7] = v61;
      v64[8] = v51;
      v64[9] = v110;
      v64[10] = v58;
      ((void (*)(char *, char *, uint64_t))v103)((char *)v64 + v63, v62, v33);
      v68 = type metadata accessor for Continuation();
      swift_retain_n();
      sub_23AD02DFC((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v59, (uint64_t)sub_23B127C48, v66, v68, MEMORY[0x24BEE0D00]);
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v108, v33);
      type metadata accessor for TrackingContinuation();
    }
    else
    {
      v83 = v107;
      v84 = swift_allocObject();
      v85 = v115;
      *(_QWORD *)(v84 + 16) = v53;
      *(_QWORD *)(v84 + 24) = v85;
      v86 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v87 = v106;
      v86(v106, v49, v40);
      v88 = *(unsigned __int8 *)(v52 + 80);
      v102 = v52;
      v89 = v40;
      v90 = (v88 + 72) & ~v88;
      v91 = (_QWORD *)swift_allocObject();
      v92 = v53;
      v93 = v49;
      v94 = (uint64_t)v91;
      v91[2] = v89;
      v95 = v114;
      v91[3] = *(_QWORD *)(v83 + 568);
      v91[4] = v95;
      v91[5] = *(_QWORD *)(v83 + 584);
      v91[6] = v92;
      v91[7] = v85;
      v91[8] = v51;
      v96 = (char *)v91 + v90;
      v97 = v89;
      ((void (*)(char *, char *, uint64_t))v103)(v96, v87, v89);
      v98 = type metadata accessor for Continuation();
      swift_retain_n();
      sub_23AD02DFC((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v84, (uint64_t)sub_23B127B74, v94, v98, MEMORY[0x24BEE0D00]);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v93, v97);
      type metadata accessor for TrackingContinuation();
    }
    goto LABEL_3;
  }
  v23 = *v21;
  v24 = swift_allocObject();
  v25 = v112;
  v26 = v115;
  *(_QWORD *)(v24 + 16) = v112;
  *(_QWORD *)(v24 + 24) = v26;
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v8;
  v27[3] = v23;
  v27[4] = v111;
  v27[5] = v25;
  v27[6] = v26;
  swift_retain_n();
  swift_retain();
  v28 = v23;
  v29 = type metadata accessor for Continuation();
  swift_retain();
  sub_23AD02DFC((uint64_t)"handleLookupResult(lookupResult:baseContinuation:result:db:expectTrackedItem:completion:)", 89, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v24, (uint64_t)sub_23B127E74, (uint64_t)v27, v29, MEMORY[0x24BEE0D00]);

  swift_release();
  swift_release();
  type metadata accessor for TrackingContinuation();
LABEL_3:
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56);
  v32 = v117;
  return v31(v32, 1, 1, TupleTypeMetadata2);
}

void sub_23B125DAC(void (*a1)(uint64_t, _QWORD, _QWORD, void *), uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  _BYTE v7[128];

  sub_23B128138((uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  sub_23ADAB3F8();
  v5 = (void *)swift_allocError();
  sub_23AA724E8((uint64_t)v7, v6, (uint64_t *)&unk_2542E0950);
  a1(a3, 0, 0, v5);

}

void sub_23B125E54(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a5;
  v31 = a7;
  v32 = a6;
  v34 = a4;
  v40 = a2;
  LODWORD(v33) = a1;
  v30 = a3;
  v7 = *(_QWORD *)a3;
  v8 = *(_QWORD *)(*(_QWORD *)a3 + 96);
  v9 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28[1] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v29 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = type metadata accessor for SnapshotItem(255, v9, v8, v11);
  v13 = sub_23B1C6C98();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v28 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v12 - 8);
  v21 = MEMORY[0x24BDAC7A8](v17);
  v25 = (char *)v28 - v24;
  if ((v33 & 1) != 0)
  {
    v29 = v23;
    v33 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v19, v40, v9);
    sub_23AF15480((uint64_t)v19, v9, v8, (uint64_t)v25);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v16, v25, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v12);
    sub_23B0F7398((uint64_t)v16, (uint64_t)v25, 0, 0, 0, v30, *(_QWORD *)(v34 + 112), *(_QWORD *)(v34 + 120));
  }
  v26 = *(_QWORD *)(v7 + 88);
  v27 = *(_QWORD *)(v7 + 104);
  v36 = v9;
  v37 = v26;
  v38 = v8;
  v39 = v27;
  type metadata accessor for JobResult();
}

void sub_23B126058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v0;
  *(_QWORD *)(v4 - 96) = v3;
  *(_QWORD *)(v4 - 88) = v1;
  type metadata accessor for Ingestion.FetchItemMetadata();
}

void sub_23B126070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
  sub_23B126EF4(v0, *(_QWORD *)(*(_QWORD *)(v3 - 136) + 112), *(_QWORD *)(*(_QWORD *)(v3 - 136) + 120), 2048, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
}

void sub_23B1260B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 184) + 8))(v1, *(_QWORD *)(v2 - 176));
  sub_23AE181A4(*(_QWORD *)(v2 - 128), a1);
  swift_release();
  *(_QWORD *)(v2 - 112) = 0;
  *(_QWORD *)(v2 - 104) = 0xE000000000000000;
  sub_23B1C6EFC();
  v4 = *(_QWORD *)(v2 - 104);
  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 112);
  *(_QWORD *)(v2 - 104) = v4;
  sub_23B1C64F4();
  sub_23B1C7340();
  (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 - 152))(0, *(_QWORD *)(v2 - 112), *(_QWORD *)(v2 - 104), 0);
  swift_bridgeObjectRelease();
  JUMPOUT(0x23B1261C8);
}

uint64_t sub_23B1261EC(void (*a1)(uint64_t, _QWORD, unint64_t, _QWORD), uint64_t a2, uint64_t a3)
{
  sub_23B1C64F4();
  sub_23B1C7340();
  a1(a3, 0, 0xE000000000000000, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B1262A8(void (*a1)(uint64_t, _QWORD, unint64_t, _QWORD), uint64_t a2, uint64_t a3)
{
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C7340();
  a1(a3, 0, 0xE000000000000000, 0);
  return swift_bridgeObjectRelease();
}

void sub_23B12635C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B126430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t, char *, _QWORD, _QWORD, uint64_t, uint64_t (*)(uint64_t), _QWORD *);
  uint64_t v19;

  v7 = sub_23B1C6C98();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(*(_QWORD *)(v2 + 32) + 16);
  *(_QWORD *)(v5 - 144) = v12;
  *(_QWORD *)(v5 - 136) = v8;
  if (v4)
  {
    type metadata accessor for TrackingContinuation();
    v13 = swift_dynamicCastClass();
    if (v13)
      swift_retain();
  }
  else
  {
    v13 = 0;
  }
  v14 = *(_QWORD *)(v5 - 152);
  v15 = v1 + *(_QWORD *)(v3 + 536);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v10, 1, 1, a1);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v1;
  v16[3] = v13;
  v16[4] = *(_QWORD *)(v5 - 128);
  v16[5] = v2;
  v16[6] = v14;
  v16[7] = *(_QWORD *)(v5 - 120);
  v16[8] = v11;
  v17 = *(void (**)(uint64_t, char *, _QWORD, _QWORD, uint64_t, uint64_t (*)(uint64_t), _QWORD *))(*(_QWORD *)v11 + 496);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain_n();
  swift_retain();
  v17(v15, v10, 0, 0, 2048, sub_23B127A78, v16);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 144) + 8))(v10, *(_QWORD *)(v5 - 136));
}

void sub_23B1265A8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B126684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, _BYTE *, _QWORD, _QWORD, uint64_t, uint64_t (*)(uint64_t), _QWORD *);
  _BYTE v26[96];

  v7 = sub_23B1C6C98();
  *(_QWORD *)(v5 - 176) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 - 168) = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v26[-v8];
  type metadata accessor for TrackingContinuation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v26[-v13];
  v15 = *(_QWORD *)(v5 - 144);
  v16 = *(_QWORD *)(v5 - 136);
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 144) = v2;
  sub_23B1253D0(v15, v1, v2, *(_QWORD *)(v5 - 128), 0, v16, *(_QWORD *)(v5 - 120), (uint64_t)&v26[-v13]);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  v18 = *(_QWORD *)&v14[*(int *)(TupleTypeMetadata2 + 48)];
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v14, v4);
  v19 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 536);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v9, 1, 1, a1);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v3;
  v21 = *(_QWORD *)(v5 - 152);
  v20[3] = *(_QWORD *)(v5 - 160);
  v20[4] = v18;
  v22 = *(_QWORD *)(v5 - 136);
  v24 = *(_QWORD *)(v5 - 128);
  v23 = *(_QWORD *)(v5 - 120);
  v20[5] = *(_QWORD *)(v5 - 144);
  v20[6] = v24;
  v20[7] = v22;
  v20[8] = v23;
  v25 = *(void (**)(uint64_t, _BYTE *, _QWORD, _QWORD, uint64_t, uint64_t (*)(uint64_t), _QWORD *))(*(_QWORD *)v21 + 496);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v25(v19, v9, 0, 0, 3072, sub_23B127AD0, v20);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, _QWORD))(*(_QWORD *)(v5 - 176) + 8))(v9, *(_QWORD *)(v5 - 168));
}

uint64_t sub_23B126884(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a5;
  v45 = a7;
  v37 = a4;
  v43 = a1;
  v39 = *a2;
  v11 = *(_QWORD *)(v39 + 560);
  type metadata accessor for TrackingContinuation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v36 - v16;
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  v18 = *(_QWORD *)(v40 + 64);
  v19 = MEMORY[0x24BDAC7A8](v15);
  v38 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v42 = (char *)&v36 - v20;
  v21 = a3;
  if (!a3)
  {
    v21 = v37;
    swift_retain();
  }
  swift_retain();
  v22 = v45;
  sub_23B1253D0(v43, v21, v44, a6, 1, v45, a8, (uint64_t)v17);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v17, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v43 = *(_QWORD *)&v17[*(int *)(TupleTypeMetadata2 + 48)];
  v44 = a6;
  v24 = v40;
  v25 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v26 = v42;
  v27 = v22;
  v28 = v41;
  v25(v42, v17, v41);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v27;
  *(_QWORD *)(v29 + 24) = a8;
  v30 = v38;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v38, v26, v28);
  v31 = (*(unsigned __int8 *)(v24 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v28;
  v33 = v39;
  *(_OWORD *)(v32 + 24) = *(_OWORD *)(v39 + 568);
  *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 584);
  *(_QWORD *)(v32 + 48) = v27;
  v34 = v43;
  *(_QWORD *)(v32 + 56) = a8;
  *(_QWORD *)(v32 + 64) = v34;
  v25((char *)(v32 + v31), v30, v28);
  v35 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD3B9C0, v29, (uint64_t)sub_23B127AE0, v32, v35, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v42, v28);
}

uint64_t sub_23B126B6C(void (*a1)(uint64_t, _QWORD, unint64_t, void *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;

  sub_23B1C64F4();
  sub_23B1C7340();
  v12 = type metadata accessor for FileTreeError(0, a5, a7, v11);
  MEMORY[0x23B8613CC](&unk_23B1D40CC, v12);
  v13 = (void *)swift_allocError();
  swift_storeEnumTagMultiPayload();
  a1(a3, 0, 0xE000000000000000, v13);

  return swift_bridgeObjectRelease();
}

void type metadata accessor for Ingestion.TrackTemporaryItem()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B126C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v11 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16);
  v13(v11, a1, AssociatedTypeWitness);
  v13(v5 + *(_QWORD *)(*(_QWORD *)v5 + 544), a2, AssociatedTypeWitness);
  return sub_23AF1A8A8(a3, a4, a5);
}

uint64_t sub_23B126D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  return sub_23B126C88(a1, a2, a3, a4, a5);
}

void sub_23B126DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23B126E34(a1, a2, a3, a4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.DeferredRescan);
}

uint64_t sub_23B126DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  return sub_23B126EAC(a1, a2, a3, a4, 0x80000);
}

void sub_23B126E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23B126EF4(a1, a2, a3, a4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchItemMetadata);
}

void sub_23B126E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23B126E34(a1, a2, a3, a4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.ReSnapshotChildren);
}

void sub_23B126E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _OWORD *))
{
  uint64_t v5;
  __int128 v6;
  _OWORD v7[2];

  v6 = *(_OWORD *)(v5 + 576);
  v7[0] = *(_OWORD *)(v5 + 560);
  v7[1] = v6;
  a5(0, v7);
  JUMPOUT(0x23B126E70);
}

uint64_t sub_23B126EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  v6 = sub_23AF1AD34(a1, a2, a3, a4);
  swift_retain();
  sub_23AEACC34(a5);
  swift_release();
  return v6;
}

void sub_23B126EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23B126EF4(a1, a2, a3, a4, (void (*)(_QWORD, _OWORD *))type metadata accessor for Ingestion.FetchChildrenMetadata);
}

void sub_23B126EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _OWORD *))
{
  uint64_t v5;
  __int128 v6;
  _OWORD v7[2];

  v6 = *(_OWORD *)(v5 + 576);
  v7[0] = *(_OWORD *)(v5 + 560);
  v7[1] = v6;
  a5(0, v7);
  JUMPOUT(0x23B126F30);
}

uint64_t sub_23B126F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  v9 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 592);
  v10 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)v4 + 560), *(_QWORD *)(*(_QWORD *)v4 + 576), a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  return sub_23AF1AD34(a1, a2, a3, a4);
}

uint64_t sub_23B126FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  return sub_23B126F70(a1, a2, a3, a4);
}

uint64_t sub_23B127050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  v9 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 592);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);
  return sub_23AF1AD34(a1, a2, a3, a4);
}

uint64_t sub_23B1270E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  return sub_23B127050(a1, a2, a3, a4);
}

uint64_t sub_23B127148()
{
  return swift_deallocObject();
}

uint64_t sub_23B127158()
{
  return swift_deallocObject();
}

uint64_t sub_23B12716C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v4[2];
  v6 = v4[3];
  v7 = v4[4];
  type metadata accessor for SnapshotItem(255, v5, v7, a4);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C6C98() - 8) + 80);
  return sub_23B10BAE0((uint64_t)v4 + ((v8 + 48) & ~v8), v5, v6, v7);
}

uint64_t sub_23B1271DC()
{
  return swift_deallocObject();
}

uint64_t sub_23B1271EC()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 32), a4);
  v6 = *(_QWORD *)(sub_23B1C6C98() - 8);
  v7 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v7, 1, v5))
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8);
    v9(v7, AssociatedTypeWitness);
    v9(v7 + *(int *)(v5 + 36), AssociatedTypeWitness);
    v10 = v7 + *(int *)(v5 + 40);
    v11 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
  }
  return swift_deallocObject();
}

uint64_t sub_23B127574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v4[2];
  v6 = v4[3];
  v7 = v4[4];
  type metadata accessor for SnapshotItem(255, v5, v7, a4);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C6C98() - 8) + 80);
  return sub_23B10BA54((uint64_t)v4 + ((v8 + 48) & ~v8), v5, v6, v7);
}

uint64_t sub_23B1275E8()
{
  return swift_deallocObject();
}

uint64_t sub_23B1275F8()
{
  return swift_deallocObject();
}

uint64_t sub_23B127608(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23B127644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v30;
  void (*v31)(uint64_t, uint64_t);

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 32);
  v7 = *(_QWORD *)(type metadata accessor for JobLockRule(0, v5, v6, a4) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(type metadata accessor for FileTreeWriter.FileTreeChange(0, v5, v6, v10) - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  swift_release();
  v13 = v4 + v8;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v13, AssociatedTypeWitness);
      break;
    case 1u:
      v15 = swift_getAssociatedTypeWitness();
      v30 = v12;
      v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
      v16(v13, v15);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v16(v13 + *(int *)(TupleTypeMetadata3 + 48), v15);
      v16(v13 + *(int *)(TupleTypeMetadata3 + 64), v15);
      v12 = v30;
      break;
    case 2u:
      v18 = swift_getAssociatedTypeWitness();
      v19 = v12;
      v20 = *(_QWORD *)(v18 - 8);
      v31 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v31(v13, v18);
      sub_23B1C6C98();
      v21 = v13 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
      v12 = v19;
      if (!v22(v21, 1, v18))
        v31(v21, v18);
      break;
    default:
      break;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1)
  {
    v28 = swift_getAssociatedTypeWitness();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v4 + v12, v28);
  }
  else if (!EnumCaseMultiPayload)
  {
    v24 = swift_getAssociatedTypeWitness();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v4 + v12, v24);
    sub_23B1C6C98();
    type metadata accessor for JobLockAggregator(255, v5, v6, v25);
    sub_23B1C6C98();
    v26 = v4 + v12 + *(int *)(swift_getTupleTypeMetadata3() + 48);
    v27 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v26, 1, v5))
      (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v26, v5);
    swift_release();
  }
  return swift_deallocObject();
}

void sub_23B1279C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = v4[2];
  v6 = v4[4];
  v7 = *(_QWORD *)(type metadata accessor for JobLockRule(0, v5, v6, a4) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(type metadata accessor for FileTreeWriter.FileTreeChange(0, v5, v6, v10) - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  sub_23B10D36C(v4[6], (uint64_t)v4 + v8, (uint64_t)v4 + v12, *(_QWORD *)((char *)v4 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B127A6C()
{
  return objectdestroy_56Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23B127A78(uint64_t a1)
{
  return sub_23ACFA458(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1265A8);
}

uint64_t sub_23B127A84()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B127AD0(uint64_t a1)
{
  return sub_23ACFA458(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B126884);
}

uint64_t sub_23B127AE0()
{
  return sub_23B127B90((uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_23B126B6C);
}

uint64_t objectdestroy_65Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B127B74()
{
  return sub_23B127B90((uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_23B1261EC);
}

uint64_t sub_23B127B90(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, char *))
{
  char *v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*((_QWORD *)v1 + 2) - 8) + 80);
  return a1(*((_QWORD *)v1 + 6), *((_QWORD *)v1 + 7), *((_QWORD *)v1 + 8), &v1[(v2 + 72) & ~v2]);
}

uint64_t sub_23B127BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B127C48()
{
  uint64_t v0;

  return sub_23B1262A8(*(void (**)(uint64_t, _QWORD, unint64_t, _QWORD))(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_23B127C90()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B127D40()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_23B125E54(*(unsigned __int8 *)(v0 + 48), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23B127DAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, uint64_t, unint64_t, _QWORD))(v0 + 16))(0, 0x3E6C696E3CLL, 0xE500000000000000, 0);
}

uint64_t sub_23B127DEC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23B127DF8()
{
  uint64_t v0;

  sub_23B125DAC(*(void (**)(uint64_t, _QWORD, _QWORD, void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23B127E14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B127E38()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B127E74()
{
  uint64_t v0;

  return sub_23B127EB8(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 560), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 568), *(_QWORD *)(**(_QWORD **)(v0 + 16) + 576));
}

uint64_t sub_23B127EB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  int v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  _QWORD v23[6];

  v23[0] = a3;
  v9 = type metadata accessor for FileTreeError(255, a5, a7, a4);
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v23 - v12;
  v23[5] = a1;
  v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  v15 = swift_dynamicCast();
  v16 = *(_QWORD *)(v9 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v15)
  {
    v17(v13, 0, 1, v9);
    if (!swift_getEnumCaseMultiPayload())
    {
      swift_getAssociatedTypeWitness();
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v19 = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v21 = swift_getAssociatedConformanceWitness();
      v23[1] = AssociatedTypeWitness;
      v23[2] = v19;
      v23[3] = AssociatedConformanceWitness;
      v23[4] = v21;
      type metadata accessor for FileItemVersion();
    }
  }
  else
  {
    v17(v13, 1, 1, v9);
    v16 = v11;
    v9 = v10;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v9);
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, void *))v23[0])(a2, 0, 0, a1);
}

double sub_23B128138(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 11;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_23B12816C()
{
  return objectdestroy_110Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23B128178(uint64_t a1)
{
  return sub_23AC048C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1249E8);
}

uint64_t sub_23B128188(void *a1)
{
  uint64_t *v1;

  return sub_23B1242F8(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_23B128198()
{
  return objectdestroy_120Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4CA0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23B1281AC()
{
  return sub_23ACFA4E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B124410);
}

uint64_t sub_23B1281D0()
{
  return sub_23B1287D0((uint64_t (*)(_QWORD, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD))sub_23B124C4C);
}

uint64_t sub_23B1281F0(void *a1)
{
  uint64_t *v1;

  return sub_23B123144(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23B1281FC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_23B12820C()
{
  uint64_t *v0;

  return sub_23B122D98(v0[2], v0[3], v0[4]);
}

uint64_t sub_23B128218()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16))(0, 0, 0, 0);
}

uint64_t sub_23B128254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23B120DBC(a1, a2, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_23B128268()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_23AAB54B4(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1282C4()
{
  uint64_t v0;

  return sub_23B120F88(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void (**)(_QWORD, uint64_t, unint64_t, void *))(v0 + 88), *(_QWORD *)(v0 + 96), *(uint64_t **)(v0 + 104));
}

uint64_t sub_23B1282EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23B122828(a1, a2, *(_QWORD *)(v3 + 32), a3);
}

uint64_t sub_23B1282F8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B12293C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48));
}

uint64_t sub_23B12831C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B128344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23B11DDEC(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t objectdestroy_153Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B128394(void *a1, char a2)
{
  uint64_t v2;

  sub_23B11E1C0(a1, a2 & 1, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_23B1283A8()
{
  return objectdestroy_56Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_56Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  a1(*(_QWORD *)(v1 + 64));
  return swift_deallocObject();
}

void sub_23B12840C()
{
  sub_23B11F588();
}

uint64_t sub_23B128438()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B128474()
{
  uint64_t v0;

  sub_23B11FBCC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD **)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_23B1284AC()
{
  return objectdestroy_120Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_23B1284C0()
{
  return sub_23ACFA4E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B11E7B8);
}

uint64_t sub_23B1284E0(uint64_t a1)
{
  return sub_23B12854C(a1, (uint64_t)&unk_250C180D0, (uint64_t)&unk_250C180F8, (uint64_t)sub_23AD43544, (uint64_t)sub_23B128508);
}

uint64_t sub_23B128508()
{
  return sub_23B1285A8((uint64_t (*)(unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B11C234);
}

uint64_t sub_23B128528(uint64_t a1)
{
  return sub_23B12854C(a1, (uint64_t)&unk_250C18148, (uint64_t)&unk_250C18170, (uint64_t)sub_23AD43544, (uint64_t)sub_23B12858C);
}

uint64_t sub_23B12854C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_23B11C02C(a1, *(uint64_t **)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), a2, a3, a4, a5);
}

uint64_t sub_23B12858C()
{
  return sub_23B1285A8((uint64_t (*)(unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B11AF70);
}

uint64_t sub_23B1285A8(uint64_t (*a1)(unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v3 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a1(v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1+ ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1+ ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

uint64_t sub_23B128654(uint64_t a1)
{
  return sub_23AC048C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B11A07C);
}

uint64_t objectdestroy_130Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata2;
  uint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v3 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  v5 = (id *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v6 = *(_QWORD *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v4, 1, v1))
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v4, v1);

  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1287B4()
{
  return sub_23B1287D0((uint64_t (*)(_QWORD, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD))sub_23B11A2A8);
}

uint64_t sub_23B1287D0(uint64_t (*a1)(_QWORD, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v3 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a1(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_23B128898()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B12895C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 136) = (*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64)
                         + ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80))
                         + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v3;
  type metadata accessor for ItemReconciliation();
}

void sub_23B1289A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;

  *(_QWORD *)(v6 - 128) = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SnapshotItem(0, v4, v5, a4) - 8)
                                             + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 112) = v8;
  *(_QWORD *)(v6 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v6 - 96) = v10;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B128A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(unint64_t, uint64_t);
  unint64_t v34;
  unint64_t v35;
  int *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(unint64_t, uint64_t);
  unint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  void (*v59)(uint64_t, uint64_t);
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v9 = *(_QWORD *)(a1 - 8);
  v54 = *(unsigned __int8 *)(v9 + 80);
  v53 = *(_QWORD *)(v9 + 64);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  v10 = v3 + v61;
  v11 = v3 + v61;
  v60 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8);
  v62 = v1;
  v60(v11, v1);
  swift_bridgeObjectRelease();
  v59 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v59(v10 + *(int *)(v4 + 56), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(v7 - 136) = v3;
  v12 = v3 + v49;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, AssociatedTypeWitness);
  v16 = v56 + 7;
  v17 = (int *)type metadata accessor for ItemReconciliationHalf(0, v5, v2, v15);
  v18 = v12 + v17[12];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v18, 1, a1))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v18);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v18 + *(int *)(a1 + 56));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v57 = a1;
  sub_23AAAEE10(*(void **)(v12 + v17[16]), *(id *)(v12 + v17[16] + 8), *(_BYTE *)(v12 + v17[16] + 16));
  v19 = v12 + v17[17];
  v20 = *(_QWORD *)(v19 + 16);
  if (v20 >> 60 != 11 && v20 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v19 + 8), v20);
  v21 = (v16 & 0xFFFFFFFFFFFFFFF8) + *(_QWORD *)(v7 - 128);

  v22 = v12 + *(int *)(v65 + 52);
  v23 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  v26 = v21 + 9;
  v27 = (int *)type metadata accessor for ItemReconciliationHalf(0, v52, v51, v25);
  v28 = v22 + v27[12];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v28, 1, v4))
  {
    v60(v28, v62);
    swift_bridgeObjectRelease();
    v59(v28 + *(int *)(v4 + 56), v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v29 = v26 & ~*(_QWORD *)(v7 - 128);
  sub_23AAAEE10(*(void **)(v22 + v27[16]), *(id *)(v22 + v27[16] + 8), *(_BYTE *)(v22 + v27[16] + 16));
  v30 = v22 + v27[17];
  v31 = *(_QWORD *)(v30 + 16);
  if (v31 >> 60 != 11 && v31 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v30 + 8), v31);

  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v7 - 136) + v29;
  v33 = *(void (**)(unint64_t, uint64_t))(v24 + 8);
  v33(v32, v23);
  v33(v32 + v58[9], v23);
  v34 = v32 + v58[10];
  v60(v34, v62);
  swift_bridgeObjectRelease();
  v59(v34 + *(int *)(v4 + 56), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = v32 + v58[12];
  v36 = (int *)type metadata accessor for ItemMetadata();
  v37 = v35 + v36[7];
  v38 = sub_23B1C5BDC();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(void (**)(unint64_t, uint64_t))(v39 + 8);
  v40(v37, v38);
  v40(v35 + v36[8], v38);
  swift_bridgeObjectRelease();
  v41 = v35 + v36[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v39 + 48))(v41, 1, v38))
    v40(v41, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = (uint64_t *)(v35 + v36[33]);
  v43 = v42[1];
  if (v43 >> 60 != 15)
    sub_23AAAE53C(*v42, v43);
  swift_bridgeObjectRelease();
  v44 = v32 + v58[13];
  v45 = *(void **)(v44 + 16);
  if (v45 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v44 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v46 = (v29 + v55 + v54) & ~v54;
  sub_23AAA12F0(*(_QWORD *)(v32 + v58[17]), *(_QWORD *)(v32 + v58[17] + 8));
  v47 = *(_QWORD *)(v7 - 136);
  (*(void (**)(unint64_t))(*(_QWORD *)(v63 - 8) + 8))(v47 + v46);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(v64 - 8) + 8))(v47 + v46 + *(int *)(v57 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_23B1290AC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B129170()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23B1291A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for SnapshotItem(0, v5, v4, a4);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B129288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_23B1172A8(a20, *(uint64_t **)(v20 + 48), *(_QWORD *)(v20 + 56), *(_QWORD *)(v20 + 64), *(_QWORD *)(v20 + 72), *(_QWORD *)(v20 + 80), *(_QWORD *)(v20 + 88), v20 + a19);
}

uint64_t sub_23B129334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v3 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  swift_release();
  v6 = v0 + v4;
  v7 = *(_QWORD *)(v0 + v4 + 16);
  if (v7 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v6 + 8), v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v6 + *(int *)(TupleTypeMetadata2 + 48), v1);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B129458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(swift_getTupleTypeMetadata2() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_23B117BC0(a1, *(_QWORD **)(v1 + 48), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_245Tm()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B129550()
{
  uint64_t *v0;

  sub_23B1152D8(v0[3], v0[4], v0[5], v0[6], v0[7]);
}

void sub_23B129580()
{
  swift_getTupleTypeMetadata2();
  sub_23B1C6C98();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B1296B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(sub_23B1C6C98() - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 20) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();

  v8 = v1 + v15;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1 + v15, 1, v3);
  v10 = v16;
  if (!v9)
  {
    v11 = *(_QWORD *)(v8 + 16);
    if (v11 >> 60 != 15)
      sub_23AAAE53C(*(_QWORD *)(v8 + 8), v11);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v8 + *(int *)(v3 + 48), v2);
    v10 = v16;
  }

  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v1 + v7, 1, a1))
  {
    (*(void (**)(unint64_t))(*(_QWORD *)(v13 - 8) + 8))(v1 + v7);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t))(*(_QWORD *)(v14 - 8) + 8))(v1 + v7 + *(int *)(a1 + 56));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_23B129830()
{
  swift_getTupleTypeMetadata2();
  sub_23B1C6C98();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B12995C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23B1C6C98();
  sub_23B1103C4(*(_QWORD *)(v14 + 48), *(_QWORD *)(v14 + 56), v14 + a13, *(_QWORD *)(v14 + a12), *(_QWORD *)(v14 + a11), *(_QWORD *)(v14 + v13), *(_QWORD *)(v14 + v15), *(_QWORD *)(v14 + v15 + 8));
}

uint64_t sub_23B1299EC()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23B129ACC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B11448C(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(_QWORD *)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1+ ((((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B129B68()
{
  return objectdestroy_110Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

void sub_23B129B74()
{
  sub_23B1148F4();
}

void sub_23B129B94()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B129C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C6C98() - 8) + 80);
  v6 = (v5 + 104) & ~v5;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v2 + v6, 1, a1))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + v6, v3);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2 + v6 + *(int *)(a1 + 56), v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_23B129D3C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B129DFC()
{
  sub_23B1C6C98();
  sub_23B115D80();
}

uint64_t sub_23B129E54()
{
  return objectdestroy_110Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_110Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  swift_release();
  swift_release();
  a1(*(_QWORD *)(v1 + 48));
  return swift_deallocObject();
}

uint64_t sub_23B129EA8(uint64_t a1)
{
  return sub_23AC048C0(a1, sub_23B10DBF4);
}

uint64_t sub_23B129EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, v5, *(_QWORD *)(v4 + 32), a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v6 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
  }
  else
  {
    v8 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v4 + v7, 1, v5))
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v4 + v7, v5);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B12A004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 32), a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v5 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B10DE4C((char *)(v4 + v6), *(void (**)(uint64_t, uint64_t, unint64_t, void *))(v4 + v7), *(_QWORD *)(v4 + v7 + 8), *(uint64_t **)(v4 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4+ ((((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

void type metadata accessor for Ingestion()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B12A13C()
{
  uint64_t result;

  type metadata accessor for FPDNetworkMonitor();
  swift_allocObject();
  result = sub_23B12A174();
  qword_2542EDC30 = result;
  return result;
}

uint64_t sub_23B12A174()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v0 = sub_23B1C6B3C();
  v22 = *(_QWORD *)(v0 - 8);
  v23 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23B1C6AE8();
  v21 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  v9 = sub_23B1C60A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v20 - v14;
  v20 = sub_23AD40D68();
  sub_23B1C6068();
  v25 = MEMORY[0x24BEE4AF8];
  sub_23AD40DA4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74C0);
  sub_23AD40DEC();
  sub_23B1C6DE8();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v16 = v21;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v6, v8, v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v2, *MEMORY[0x24BEE5758], v23);
  v17 = sub_23B1C6B60();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v18 = v24;
  *(_QWORD *)(v24 + 16) = v17;
  sub_23B1C5FFC();
  swift_allocObject();
  *(_QWORD *)(v18 + 24) = sub_23B1C5FF0();
  sub_23AAFA320((uint64_t)sub_23B12A3F4);
  sub_23B1C5FD8();
  sub_23B1C5FE4();
  return v18;
}

uint64_t sub_23B12A3F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_23B1C6014();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v14(v8, a1, v2);
  v15 = sub_23B1C5E40();
  v16 = sub_23B1C6A88();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v26 = v9;
    v18 = (uint8_t *)v17;
    v24 = swift_slowAlloc();
    v28 = v24;
    v25 = v10;
    *(_DWORD *)v18 = 136315138;
    v23 = v18 + 4;
    v14(v6, (uint64_t)v8, v2);
    v19 = sub_23B1C644C();
    v27 = sub_23AABEC68(v19, v20, &v28);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    _os_log_impl(&dword_23AA66000, v15, v16, "Network path update %s", v18, 0xCu);
    v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v21, -1, -1);
    MEMORY[0x23B8614BC](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v26);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_23B12A648@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, _QWORD, uint64_t);
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  v2 = sub_23B1C5FC0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C6014();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5FCC();
  v10 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v10(v5, *MEMORY[0x24BDE00A0], v2);
  v11 = sub_23B1C6008();
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  if ((v11 & 1) != 0)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v14 = 0x74656E7265687465;
    v15 = 0xE800000000000000;
  }
  else
  {
    v10(v5, *MEMORY[0x24BDE00A8], v2);
    v16 = sub_23B1C6008();
    v12(v5, v2);
    if ((v16 & 1) != 0)
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v14 = 1768319351;
      v15 = 0xE400000000000000;
    }
    else
    {
      v10(v5, *MEMORY[0x24BDE00B8], v2);
      v17 = sub_23B1C6008();
      v12(v5, v2);
      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v17 & 1) != 0)
      {
        v14 = 0x72616C756C6C6563;
        v15 = 0xE800000000000000;
      }
      else
      {
        v14 = 0x726568746FLL;
        v15 = 0xE500000000000000;
      }
    }
  }
  *a1 = v14;
  a1[1] = v15;
  return result;
}

uint64_t sub_23B12A844()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FPDNetworkMonitor()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for FileTreeSide(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B12A8DC + 4 * byte_23B1E7149[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B12A910 + 4 * asc_23B1E7144[v4]))();
}

uint64_t sub_23B12A910(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B12A918(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B12A920);
  return result;
}

uint64_t sub_23B12A92C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B12A934);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B12A938(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B12A940(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileTreeSide()
{
  return &type metadata for FileTreeSide;
}

unint64_t sub_23B12A960()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569E8890;
  if (!qword_2569E8890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E8898);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2569E8890);
  }
  return result;
}

uint64_t sub_23B12A9AC()
{
  _BYTE *v0;

  if (*v0)
    return 20550;
  else
    return 21318;
}

void sub_23B12A9C8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC6D0;
}

unint64_t sub_23B12A9DC()
{
  unint64_t result;

  result = qword_2569E88A0;
  if (!qword_2569E88A0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E7240, &type metadata for FileTreeSide);
    atomic_store(result, (unint64_t *)&qword_2569E88A0);
  }
  return result;
}

uint64_t sub_23B12AA20()
{
  sub_23B12AA6C();
  return sub_23B1C6674();
}

unint64_t sub_23B12AA6C()
{
  unint64_t result;

  result = qword_2569E88A8[0];
  if (!qword_2569E88A8[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E71C8, &type metadata for FileTreeSide);
    atomic_store(result, qword_2569E88A8);
  }
  return result;
}

uint64_t sub_23B12AAB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  _BOOL8 v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;

  v2 = v1;
  v4 = sub_23B1C7328();
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v36 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v39 = (char *)&v36 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E67B0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_23AB6E30C(v2, (uint64_t)v21);
  sub_23AB6E30C(a1, v22);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v23(v21, 1, v7);
  v24 = v23((char *)v22, 1, v7);
  if ((_DWORD)a1 == 1)
  {
    if (v24 == 1)
    {
      return 1;
    }
    else
    {
      sub_23AB6E2CC(v22);
      return 0;
    }
  }
  else if (v24 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v21, v7);
    return 0;
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v26(v17, v21, v7);
    v26(v39, (char *)v22, v7);
    v27 = *MEMORY[0x24BEE38B8];
    v28 = v37;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 104);
    v29(v6, v27, v4);
    sub_23B12AD78((uint64_t)v6);
    v30 = *(void (**)(char *, uint64_t))(v28 + 8);
    v30(v6, v4);
    v29(v6, v27, v4);
    v31 = v38;
    v32 = v39;
    sub_23B12AD78((uint64_t)v6);
    v30(v6, v4);
    v33 = sub_23B1C5BC4();
    v34 = *(void (**)(char *, uint64_t))(v8 + 8);
    v34(v31, v7);
    v34(v13, v7);
    v25 = v33 == 0;
    v34(v32, v7);
    v34(v17, v7);
  }
  return v25;
}

uint64_t sub_23B12AD78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  _QWORD v9[2];

  v2 = sub_23B1C7328();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5B94();
  v9[1] = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 != *MEMORY[0x24BEE38D0]
    && v7 != *MEMORY[0x24BEE38C8]
    && v7 != *MEMORY[0x24BEE38E0]
    && v7 != *MEMORY[0x24BEE38E8]
    && v7 != *MEMORY[0x24BEE38B8]
    && v7 != *MEMORY[0x24BEE38C0])
  {
    sub_23B1C6878();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_23B1C5B88();
}

void destroy for JobSchedulingState(uint64_t a1)
{
  sub_23AAAEE10(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9libfssync18JobSchedulingStateOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23AAAE478(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JobSchedulingState(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23AAAE478(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23AAAEE10(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JobSchedulingState(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23AAAEE10(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JobSchedulingState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JobSchedulingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23B12B080(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_23B12B098(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingState()
{
  return &type metadata for JobSchedulingState;
}

BOOL sub_23B12B0C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (a1 & ~a2) == 0 && a4 == 0;
}

BOOL sub_23B12B0D4(uint64_t a1, uint64_t a2, char a3)
{
  return a3 == 2;
}

uint64_t sub_23B12B0E4(void *a1, id a2, char a3)
{
  uint64_t result;
  void *v7;
  id v8;
  char v9;
  id v10;
  char v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  switch(a3)
  {
    case 0:
      if (a2)
      {
        v15 = 0;
        swift_retain();
        sub_23B1C64F4();
        type metadata accessor for Continuation();
        sub_23B1C7028();
        sub_23B1C64F4();
        sub_23AF15C44((unint64_t)a1);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v7 = a1;
        v8 = a2;
        v9 = 0;
        goto LABEL_11;
      }
      v15 = 32;
      sub_23AF15C44((unint64_t)a1);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 1:
    case 2:
      if (a1)
      {
        v15 = 0;
        sub_23AAAE478(a1, a2, a3);
        sub_23B1C64F4();
        type metadata accessor for Continuation();
        sub_23B1C7028();
        sub_23AAAEE10(a1, a2, a3);
        sub_23B1C64F4();
        goto LABEL_13;
      }
      result = 0;
      break;
    case 3:
      v10 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      v11 = swift_dynamicCast();

      if ((v11 & 1) != 0)
      {
        result = 0xD000000000000017;
      }
      else
      {
        v15 = 0x3C3A726F72726520;
        swift_getErrorValue();
        sub_23AAAE478(a1, a2, 3);
        v12 = sub_23B0D9CF0(v14);
        v13 = objc_msgSend(v12, sel_description);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        v7 = a1;
        v8 = a2;
        v9 = 3;
LABEL_11:
        sub_23AAAEE10(v7, v8, v9);
LABEL_13:
        result = v15;
      }
      break;
    default:
      return 0;
  }
  return result;
}

BOOL sub_23B12B3D0(uint64_t a1, uint64_t a2, char a3)
{
  _BOOL4 v3;

  if (!a3)
    return a2 != 0;
  v3 = a1 != 0;
  if (a3 != 2)
    v3 = 0;
  if (a3 == 1)
    return a1 != 0;
  else
    return v3;
}

BOOL sub_23B12B404(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 2 < 2)
    return 1;
  return a3 == 4 && a1 == 1 && !a2;
}

uint64_t sub_23B12B440()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B12B474
                                                            + 4 * byte_23B1E7298[*(unsigned __int8 *)(v0 + 16)]))(0x208FB8EFBC80E2, 0xA700000000000000);
}

uint64_t sub_23B12B474()
{
  return 548638690;
}

uint64_t sub_23B12B488@<X0>(uint64_t a1@<X8>)
{
  if (a1)
    return 548966370;
  else
    return 548376546;
}

uint64_t sub_23B12B4A4()
{
  return 0x208FB8EFB696E2;
}

uint64_t sub_23B12B4B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  if (a1 | *(_QWORD *)(v1 + 8))
    return 545627362;
  else
    return 0x208FB8EFB49CE2;
}

void sub_23B12B4F0(uint64_t a1)
{
  sub_23B12B50C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_23B12B50C(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

BOOL sub_23B12B554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  return !a6 && v7 == v6;
}

void sub_23B12B6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[13];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v22 = a5;
  v21 = a7;
  v18 = a6;
  v19 = a4;
  v15[9] = a2;
  v15[10] = a3;
  v27 = a1;
  v7 = *a5;
  v8 = *(_QWORD *)(*a5 + 104);
  v9 = *(_QWORD *)(*a5 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = sub_23B1C6C98();
  v15[11] = *(_QWORD *)(v16 - 8);
  v11 = MEMORY[0x24BDAC7A8](v16);
  v15[12] = (char *)v15 - v12;
  v20 = AssociatedTypeWitness;
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15[8] = (char *)v15 - v13;
  v14 = *(_QWORD *)(v7 + 96);
  v23 = *(_QWORD *)(v7 + 80);
  v24 = v9;
  v25 = v14;
  v26 = v8;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B12B7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9[16] = *(_QWORD *)(a1 - 8);
  v9[17] = a1;
  MEMORY[0x24BDAC7A8](a1);
  v9[14] = (char *)&a9 - v14;
  v9[20] = v13;
  v9[27] = v13;
  v9[28] = v10;
  v9[22] = v10;
  v9[29] = v11;
  v9[30] = v12;
  v9[24] = v12;
  type metadata accessor for ItemReconciliation();
}

void sub_23B12B820()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23B1C6C98();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23AB00114();
}

void sub_23B12B898()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v0[26] = v1;
  if (!v1)
  {
    v9 = v0[19];
    v0[6] = v6;
    v0[7] = v3;
    v10 = v0[23];
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v7) != 1)
    {
      v0[3] = v4;
      v0[4] = v9 | 1;
      v11 = v0[6];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v11, v2, v7);
      v13 = v0[18];
      if (v13)
      {
        v0[19] = v13;
      }
      else
      {
        swift_retain();
        v0[19] = v10;
      }
      v14 = v0[24];
      v15 = v0[22];
      v16 = v0[7];
      v17 = v0[20];
      v18 = type metadata accessor for ItemReconciliationHalf(0, v17, v16, v12);
      v19 = *(unsigned __int8 *)(v11 + *(int *)(v18 + 56));
      v0[5] = v7;
      v0[2] = v18;
      if (v19 != 2)
      {
        swift_retain();
        v0[27] = v17;
        v0[28] = v15;
        v0[29] = v16;
        v0[30] = v14;
        type metadata accessor for JobResult();
      }
      v0[27] = v17;
      v0[28] = v15;
      v0[29] = v16;
      v0[30] = v14;
      type metadata accessor for JobResult();
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v5);
  }
}

void sub_23B12C060()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23B12C0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9[8] = *(_QWORD *)(a1 - 8);
  v9[9] = a1;
  MEMORY[0x24BDAC7A8](a1);
  v9[7] = (char *)&a9 - v14;
  v9[35] = v11;
  v9[36] = v13;
  v9[37] = v10;
  v9[38] = v12;
  type metadata accessor for PersistenceTrigger();
}

void sub_23B12C104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9[4] = *(_QWORD *)(a1 - 8);
  v9[5] = a1;
  MEMORY[0x24BDAC7A8](a1);
  v9[3] = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = sub_23B1C6C98();
  v9[11] = *(_QWORD *)(v16 - 8);
  v9[12] = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v9[10] = (char *)&a9 - v18;
  v9[20] = AssociatedTypeWitness;
  v9[18] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v17);
  v9[13] = (char *)&a9 - v19;
  v9[35] = v11;
  v9[36] = v13;
  v9[19] = v13;
  v9[37] = v10;
  v9[38] = v12;
  v9[21] = v12;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B12C1E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  int v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  char v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  _BYTE v42[96];

  v6 = sub_23B1C6C98();
  *(_QWORD *)(v1 + 176) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v1 + 184) = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v1 + 224) = a1;
  *(_QWORD *)(v1 + 232) = &v42[-v8];
  *(_QWORD *)(v1 + 216) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v1 + 192) = v4;
  *(_QWORD *)(v1 + 200) = &v42[-v9];
  *(_QWORD *)(v1 + 208) = v3;
  v11 = type metadata accessor for SnapshotItem(255, v4, v3, v10);
  v12 = sub_23B1C6C98();
  *(_QWORD *)(v1 + 248) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v42[-v15];
  v17 = *(_QWORD *)(v11 - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v20 = &v42[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = &v42[-v22];
  MEMORY[0x24BDAC7A8](v21);
  v25 = &v42[-v24];
  *(_QWORD *)(v1 + 240) = v2;
  v26 = *(_QWORD *)(v1 + 264);
  result = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v2 + 32) + 240))(*(_QWORD *)(v1 + 272), 1);
  if (!v26)
  {
    *(_QWORD *)(v1 + 8) = v20;
    *(_QWORD *)(v1 + 16) = v23;
    *(_QWORD *)(v1 + 264) = v25;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v11) == 1)
    {
      return (*(uint64_t (**)(_BYTE *, _QWORD))(v13 + 8))(v16, *(_QWORD *)(v1 + 248));
    }
    else
    {
      v28 = *(_QWORD *)(v1 + 264);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32))(v28, v16, v11);
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
      v30 = *(_QWORD *)(v1 + 16);
      v29(v30, v28, v11);
      v31 = *(_DWORD *)(v1 + 260);
      if (v31 == 4)
      {
        v32 = MEMORY[0x23B8613CC](&unk_23B1DD478, v11);
        LOBYTE(v31) = sub_23AF219A4(v11, v32);
      }
      v33 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v33(v30, v11);
      if (v31 == 2)
      {
        return ((uint64_t (*)(uint64_t, uint64_t))v33)(v28, v11);
      }
      else
      {
        *(_QWORD *)(v1 + 248) = v33;
        v34 = v28 + *(int *)(v11 + 48);
        v35 = type metadata accessor for ItemMetadata();
        LOBYTE(v34) = *(_BYTE *)(v34 + *(int *)(v35 + 64));
        v36 = *(_QWORD *)(v1 + 8);
        v29(v36, v28, v11);
        if ((v34 & 1) != 0)
        {
          v37 = v36;
          v38 = *(void (**)(uint64_t, uint64_t))(v1 + 248);
          v38(v37, v11);
          return ((uint64_t (*)(uint64_t, uint64_t))v38)(v28, v11);
        }
        else
        {
          v39 = *(_BYTE *)(v36 + *(int *)(v11 + 48) + *(int *)(v35 + 68));
          v40 = v36;
          v41 = *(void (**)(uint64_t, uint64_t))(v1 + 248);
          v41(v40, v11);
          if ((v39 & 1) == 0)
            sub_23AB00114();
          return ((uint64_t (*)(uint64_t, uint64_t))v41)(v28, v11);
        }
      }
    }
  }
  return result;
}

void sub_23B12C610(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t MetatypeMetadata;

  v1[30] = a1;
  MetatypeMetadata = swift_getMetatypeMetadata();
  sub_23AFD4CB4(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  sub_23B1C6728();
  v1[35] = v3;
  v1[36] = v2;
  v1[37] = v5;
  v1[38] = v4;
  type metadata accessor for Materialization.EvictItem();
}

void sub_23B12C664(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *v3 = a1;
  v5 = sub_23AD7D55C(v2);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v1 + 248) + 272))(*(_QWORD *)(v1 + 272), v5);
  if (v6)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 216) + 8))(*(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 224));
    JUMPOUT(0x23B12C494);
  }
  v8 = v7;
  *(_QWORD *)(v1 + 16) = 0;
  v9 = *(_QWORD *)(v1 + 232) | *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 - 72) = v8;
  v10 = sub_23B1C67DC();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v10);
  sub_23B1C69A4();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v1 + 280);
  *(_QWORD *)(v1 + 232) = v9;
  if (v11)
  {
    v12 = *(_QWORD *)(v1 + 192);
    v13 = *(_QWORD *)(v1 + 208);
    if (*(_BYTE *)(v11 + 104) == 1)
    {
      v14 = *(_QWORD *)(v1 + 152);
      *(_QWORD *)(v1 + 280) = v12;
      *(_QWORD *)(v1 + 288) = v14;
      v15 = *(_QWORD *)(v1 + 168);
      *(_QWORD *)(v1 + 296) = v13;
      *(_QWORD *)(v1 + 304) = v15;
      type metadata accessor for JobResult();
    }
    swift_release();
  }
  else
  {
    v12 = *(_QWORD *)(v1 + 192);
    v13 = *(_QWORD *)(v1 + 208);
  }
  v16 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v1 + 280) = v12;
  *(_QWORD *)(v1 + 288) = v16;
  v17 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v1 + 296) = v13;
  *(_QWORD *)(v1 + 304) = v17;
  type metadata accessor for JobResult();
}

void sub_23B12C828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;

  v8 = v3;
  v9 = sub_23B134BD0(*(_QWORD *)(v1 + 272), v2, v5, *(_QWORD *)(v1 + 232), 64);
  v10 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v1 + 248) = a1;
  sub_23AE181A4(v10, v9);
  swift_release();
  if (*(_DWORD *)(v1 + 260) == 1)
  {
    *(_QWORD *)(v1 + 280) = v4;
    *(_QWORD *)(v1 + 288) = v8;
    v11 = *(_QWORD *)(v1 + 168);
    *(_QWORD *)(v1 + 296) = v6;
    *(_QWORD *)(v1 + 304) = v11;
    type metadata accessor for Materialization.EvictChildren();
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = *(_QWORD *)(v1 + 160);
  v15 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 + 280) = AssociatedTypeWitness;
  *(_QWORD *)(v1 + 288) = v14;
  *(_QWORD *)(v1 + 296) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 + 304) = v15;
  type metadata accessor for ReconciliationID();
}

void sub_23B12C940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD, _QWORD);
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for ReconciliationSideMutation(255, v6, v7, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = v4[7];
  v11 = v10 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v10, v4[34], v5);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)v11 = 259;
  v12 = v4[15];
  *(_QWORD *)(v11 + 8) = v4[14];
  *(_QWORD *)(v11 + 16) = v12;
  swift_storeEnumTagMultiPayload();
  v13 = v4[9];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[16], v10);
  (*(void (**)(uint64_t, uint64_t))(v4[8] + 8))(v10, v13);
  (*(void (**)(_QWORD, _QWORD))(v4[27] + 8))(v4[25], v4[28]);
  v8(v4[33], *v4);
  JUMPOUT(0x23B12C4B4);
}

void sub_23B12CAA0(char a1@<W0>, char a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;

  if (sub_23AEFF0F4(v3, v4, 0, a1 & 1, 1u, a2 & 1) == 3)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v7 = v2[20];
    v8 = swift_getAssociatedConformanceWitness();
    v2[35] = AssociatedTypeWitness;
    v2[36] = v7;
    v2[37] = AssociatedConformanceWitness;
    v2[38] = v8;
    type metadata accessor for ReconciliationID();
  }
  (*(void (**)(_QWORD, _QWORD))(v2[18] + 8))(v2[13], v2[20]);
  sub_23AAA5B2C((uint64_t)(v2 + 39));
  v2[29] = 2;
  JUMPOUT(0x23B12C5E4);
}

uint64_t sub_23B12CCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B1301B4(a1, a2, a3, a4, 0x10000);
}

uint64_t sub_23B12CCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B1301B4(a1, a2, a3, a4, 32);
}

void sub_23B12CCC0()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23B12DF28()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23B12DF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 160) = a1;
  *(_QWORD *)(v13 - 152) = v14;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 176) = (char *)&a9 - v15;
  v16 = sub_23B1C5E4C();
  *(_QWORD *)(v13 - 168) = v16;
  *(_QWORD *)(v13 - 184) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 128) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v10;
  *(_QWORD *)(v13 - 88) = v12;
  type metadata accessor for ItemJob();
}

void sub_23B12E000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t MetatypeMetadata;

  *(_QWORD *)(v5 - 136) = a1;
  MetatypeMetadata = swift_getMetatypeMetadata();
  sub_23AFD4CB4(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  sub_23B1C6728();
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v4;
  type metadata accessor for Materialization.EvictItem();
}

uint64_t sub_23B12E054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *v5 = a1;
  v10 = sub_23AD7D55C(v4);
  v11 = *(_QWORD *)(v9 - 120);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 272))(v1, v10);
  result = swift_bridgeObjectRelease();
  if (!v11)
  {
    v14 = *(_QWORD *)(v9 - 128);
    *(_QWORD *)(v9 - 120) = 0;
    *(_QWORD *)(v9 - 216) = v8;
    *(_QWORD *)(v9 - 208) = v7;
    *(_QWORD *)(v9 - 200) = v6;
    *(_QWORD *)(v9 - 192) = v3;
    *(_QWORD *)(v9 - 224) = v1;
    *(_QWORD *)(v9 - 72) = v12;
    v15 = sub_23B1C67DC();
    MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v15);
    sub_23B1C69A4();
    result = swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v9 - 112);
    if (v16)
    {
      v17 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      swift_retain();
      v18 = sub_23B1C5E40();
      v19 = sub_23B1C6AB8();
      v20 = os_log_type_enabled(v18, v19);
      *(_QWORD *)(v9 - 136) = v16;
      if (v20)
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        *(_QWORD *)(v9 - 112) = v22;
        *(_DWORD *)v21 = 136446210;
        sub_23AF1A18C();
        *(_QWORD *)(v9 - 72) = sub_23AABEC68(v23, v24, (uint64_t *)(v9 - 112));
        sub_23B1C6CBC();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v18, v19, "✴️  cancelling eviction %{public}s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v22, -1, -1);
        MEMORY[0x23B8614BC](v21, -1, -1);

      }
      else
      {

        swift_release();
      }
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 184) + 8))(v14, *(_QWORD *)(v9 - 168));
      v25 = *(_QWORD *)(v9 - 200);
      v26 = *(_QWORD *)(v9 - 216);
      v27 = *(_QWORD *)(v9 - 208);
      *(_QWORD *)(v9 - 112) = *(_QWORD *)(v9 - 192);
      *(_QWORD *)(v9 - 104) = v27;
      *(_QWORD *)(v9 - 96) = v25;
      *(_QWORD *)(v9 - 88) = v26;
      type metadata accessor for JobResult();
    }
  }
  return result;
}

uint64_t sub_23B12E40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B1301B4(a1, a2, a3, a4, 0x400000);
}

uint64_t sub_23B12E414()
{
  return 0x6C6169726574616DLL;
}

void sub_23B12E438()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23B12E498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 472) = a1;
  *(_QWORD *)(v13 - 480) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 488) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 136) = v10;
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v11;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B12E4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;

  *(_QWORD *)(v9 - 400) = a1;
  *(_QWORD *)(v9 - 416) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 408) = (char *)&a9 - v10;
  v11 = sub_23B1C5BDC();
  *(_QWORD *)(v9 - 280) = v11;
  *(_QWORD *)(v9 - 496) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v9 - 504) = (char *)&a9 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C545C();
  *(_QWORD *)(v9 - 600) = v13;
  *(_QWORD *)(v9 - 608) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v9 - 616) = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 136) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 128) = v16;
  *(_QWORD *)(v9 - 248) = v16;
  *(_QWORD *)(v9 - 376) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 120) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 112) = v18;
  *(_QWORD *)(v9 - 384) = v18;
  type metadata accessor for ThrottlingKey();
}

void sub_23B12E670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)(v14 - 576) = a1;
  *(_QWORD *)(v14 - 560) = swift_getTupleTypeMetadata2();
  v15 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 584) = v15;
  *(_QWORD *)(v14 - 592) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v14 - 568) = (char *)&a9 - v16;
  v17 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 440) = v17;
  *(_QWORD *)(v14 - 448) = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v14 - 456) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v14 - 528) = (char *)&a9 - v21;
  *(_QWORD *)(v14 - 352) = v13;
  *(_QWORD *)(v14 - 424) = *(_QWORD *)(v13 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v14 - 536) = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v14 - 552) = (char *)&a9 - v24;
  v26 = type metadata accessor for ItemReconciliationHalf(0, v12, v11, v25);
  *(_QWORD *)(v14 - 328) = v26;
  *(_QWORD *)(v14 - 336) = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v14 - 344) = (char *)&a9 - v27;
  v29 = type metadata accessor for ItemReconciliationHalf(0, v10, v9, v28);
  *(_QWORD *)(v14 - 360) = v29;
  *(_QWORD *)(v14 - 368) = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v14 - 304) = (char *)&a9 - v30;
  v32 = type metadata accessor for SnapshotItem(255, v10, v9, v31);
  v33 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 312) = v33;
  *(_QWORD *)(v14 - 320) = *(_QWORD *)(v33 - 8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v14 - 208) = v32;
  *(_QWORD *)(v14 - 200) = (char *)&a9 - v35;
  *(_QWORD *)(v14 - 216) = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v14 - 232) = v10;
  *(_QWORD *)(v14 - 224) = (char *)&a9 - v36;
  *(_QWORD *)(v14 - 136) = v10;
  *(_QWORD *)(v14 - 128) = v12;
  *(_QWORD *)(v14 - 240) = v12;
  *(_QWORD *)(v14 - 256) = v9;
  *(_QWORD *)(v14 - 120) = v9;
  *(_QWORD *)(v14 - 112) = v11;
  *(_QWORD *)(v14 - 264) = v11;
  type metadata accessor for ItemReconciliation();
}

void sub_23B12E914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v9 - 288) = a1;
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 - 192) = v10;
  *(_QWORD *)(v9 - 184) = v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v9 - 544) = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v9 - 464) = (char *)&a9 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v9 - 512) = (char *)&a9 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v9 - 520) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v9 - 432) = (char *)&a9 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v9 - 296) = (char *)&a9 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v9 - 392) = (char *)&a9 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v31 = MEMORY[0x24BDAC7A8](v30);
  MEMORY[0x24BDAC7A8](v31);
  sub_23AB00114();
}

void sub_23B12EB20(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t AssociatedTypeWitness;
  uint64_t v42;
  uint64_t AssociatedConformanceWitness;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  _BOOL4 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  double v136;
  double v137;
  double v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  void *v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  char v148;

  if (!v23)
  {
    *(_QWORD *)(v31 - 656) = v30;
    *(_QWORD *)(v31 - 632) = v27;
    *(_QWORD *)(v31 - 664) = v24;
    *(_QWORD *)(v31 - 648) = v26;
    *(_QWORD *)(v31 - 672) = v22;
    *(_QWORD *)(v31 - 640) = v28;
    *(_QWORD *)(v31 - 624) = v29;
    v32 = *(_QWORD *)(v31 - 200);
    (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v31 - 152) + 32) + 240))(v25, 1);
    v35 = *(_QWORD *)(v31 - 216);
    v34 = *(_QWORD *)(v31 - 208);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v31 - 320) + 8))(v32, *(_QWORD *)(v31 - 312));
      goto LABEL_6;
    }
    *(_QWORD *)(v31 - 320) = v25;
    v45 = *(_QWORD *)(v31 - 224);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v45, v32, v34);
    v47 = *(_QWORD *)(v31 - 192);
    v46 = *(_QWORD *)(v31 - 184);
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
    v49 = *(_QWORD *)(v31 - 632);
    v48(v49, *(_QWORD *)(v31 - 624), v47);
    v50 = *(_QWORD *)(v31 - 288);
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
    *(_QWORD *)(v31 - 200) = v52;
    v53 = v52(v49, 1, v50);
    *(_QWORD *)(v31 - 312) = v51;
    if (v53 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v49, v47);
      v54 = v47;
      v55 = v50;
      v56 = *(_QWORD *)(v31 - 304);
    }
    else
    {
      *(_QWORD *)(v31 - 680) = v48;
      v57 = *(_QWORD *)(v31 - 368);
      v58 = v49;
      v56 = *(_QWORD *)(v31 - 304);
      v59 = *(_QWORD *)(v31 - 360);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v56, v58, v59);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v58, v50);
      v60 = *(_QWORD *)(v56 + *(int *)(v59 + 36));
      v61 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 - 680);
      v61(v56, v59);
      v54 = v47;
      v55 = v50;
      if ((v60 & 1) != 0)
      {
        (*(void (**)(uint64_t, _QWORD))(v35 + 8))(v45, *(_QWORD *)(v31 - 208));
LABEL_6:
        v37 = *(_QWORD *)(v31 - 240);
        v38 = *(_QWORD *)(v31 - 256);
        if ((*(_BYTE *)(*(_QWORD *)(v31 - 168) + 130) & 2) != 0)
        {
          *(_QWORD *)(v31 - 136) = *(_QWORD *)(v31 - 232);
          *(_QWORD *)(v31 - 128) = v37;
          v39 = *(_QWORD *)(v31 - 264);
          *(_QWORD *)(v31 - 120) = v38;
          *(_QWORD *)(v31 - 112) = v39;
          type metadata accessor for JobResult();
        }
        v40 = type metadata accessor for FileTreeError(0, *(_QWORD *)(v31 - 232), *(_QWORD *)(v31 - 256), v36);
        MEMORY[0x23B8613CC](&unk_23B1D40CC, v40);
        swift_allocError();
        AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        v42 = swift_getAssociatedTypeWitness();
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v44 = swift_getAssociatedConformanceWitness();
        *(_QWORD *)(v31 - 136) = AssociatedTypeWitness;
        *(_QWORD *)(v31 - 128) = v42;
        *(_QWORD *)(v31 - 120) = AssociatedConformanceWitness;
        *(_QWORD *)(v31 - 112) = v44;
        type metadata accessor for FileItemVersion();
      }
    }
    v62 = *(_QWORD *)(v31 - 664);
    v63 = *(_QWORD *)(v31 - 624);
    v48(v62, v63, v54);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 - 200))(v62, 1, v55) == 1)
    {
      v64 = *(_QWORD *)(v31 - 184);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v54);
      *(_DWORD *)(v31 - 632) = 6;
    }
    else
    {
      v65 = v63;
      v66 = *(_QWORD *)(v31 - 368);
      v67 = *(_QWORD *)(v31 - 360);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v56, v62, v67);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 312) + 8))(v62, v55);
      *(_DWORD *)(v31 - 632) = *(unsigned __int8 *)(v56 + *(int *)(v67 + 56));
      v68 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v63 = v65;
      v68(v56, v67);
      v64 = *(_QWORD *)(v31 - 184);
    }
    v69 = *(_QWORD *)(v31 - 280);
    v70 = *(_QWORD *)(v31 - 656);
    v48(v70, v63, v54);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 - 200))(v70, 1, v55) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v70, v54);
      *(_DWORD *)(v31 - 304) = 0;
    }
    else
    {
      v71 = v69;
      v72 = *(_QWORD *)(v31 - 336);
      v73 = v48;
      v74 = *(_QWORD *)(v31 - 344);
      v75 = v54;
      v76 = v63;
      v77 = *(_QWORD *)(v31 - 328);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v74, v70 + *(int *)(v55 + 52), v77);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 312) + 8))(v70, v55);
      v78 = *(unsigned __int8 *)(v74 + *(int *)(v77 + 52));
      v79 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v69 = v71;
      v80 = v74;
      v48 = v73;
      v81 = v77;
      v63 = v76;
      v54 = v75;
      v64 = *(_QWORD *)(v31 - 184);
      v79(v80, v81);
      *(_DWORD *)(v31 - 304) = v78 == 4;
    }
    v82 = *(_QWORD *)(v31 - 296);
    v83 = *(_QWORD *)(v31 - 640);
    v84 = *(_DWORD *)(v31 - 632);
    if (v84 == 4)
    {
      v85 = *(_QWORD *)(v31 - 648);
      v48(v85, v63, v54);
      v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32);
      v87 = *(_QWORD *)(v31 - 672);
      v86(v87, v85, v54);
      v86(v83, v87, v54);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 - 200))(v83, 1, v55) == 1)
      {
        v88 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v88(v83, v54);
        v82 = *(_QWORD *)(v31 - 296);
        goto LABEL_23;
      }
      v92 = v83 + *(int *)(v55 + 52);
      v93 = *(_QWORD *)(v31 - 336);
      v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16);
      *(_QWORD *)(v31 - 680) = v48;
      v95 = *(_QWORD *)(v31 - 344);
      v96 = *(_QWORD *)(v31 - 328);
      v94(v95, v92, v96);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 312) + 8))(v83, v55);
      v97 = *(unsigned __int8 *)(v95 + *(int *)(v96 + 52));
      v98 = v95;
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 - 680);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v98, v96);
      v99 = *(_QWORD *)(v31 - 392);
      v48(v99, *(_QWORD *)(v31 - 624), v54);
      if (v97 != 3)
      {
        v104 = v99;
        v82 = *(_QWORD *)(v31 - 296);
        v86(v82, v104, v54);
        goto LABEL_31;
      }
      v69 = *(_QWORD *)(v31 - 280);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v99, v54);
    }
    else
    {
      v89 = *(_QWORD *)(v31 - 648);
      v48(v89, v63, v54);
      if (v84 == 6)
      {
        v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32);
        v90 = *(_QWORD *)(v31 - 672);
        v86(v90, v89, v54);
        v88 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v88(v90, v54);
LABEL_23:
        v91 = *(_QWORD *)(v31 - 392);
        v48(v91, *(_QWORD *)(v31 - 624), v54);
        v86(v82, v91, v54);
        if (v84 != 4)
        {
          v88(v82, v54);
          goto LABEL_33;
        }
LABEL_31:
        v105 = *(_QWORD *)(v31 - 432);
        v86(v105, v82, v54);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 - 200))(v105, 1, v55) != 1)
        {
          v106 = *(_QWORD *)(v31 - 336);
          v107 = *(_QWORD *)(v31 - 344);
          v108 = *(_QWORD *)(v31 - 328);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v107, v105 + *(int *)(v55 + 52), v108);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 312) + 8))(v105, v55);
          v109 = *(unsigned __int8 *)(v107 + *(int *)(v108 + 52));
          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v107, v108);
          v103 = v109 == 1;
          goto LABEL_35;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 184) + 8))(v105, v54);
LABEL_33:
        v103 = 0;
LABEL_35:
        v69 = *(_QWORD *)(v31 - 280);
LABEL_36:
        v110 = *(_QWORD *)(v31 - 208);
        v111 = MEMORY[0x23B8613CC](&unk_23B1DD478, v110);
        if (*(_DWORD *)(v31 - 304) & 1 | (((sub_23AF21910(v110, v111) | v103) & 1) == 0))
        {
          v112 = *(_QWORD *)(v31 - 240);
          *(_QWORD *)(v31 - 136) = *(_QWORD *)(v31 - 232);
          *(_QWORD *)(v31 - 128) = v112;
          v113 = *(_QWORD *)(v31 - 264);
          *(_QWORD *)(v31 - 120) = *(_QWORD *)(v31 - 256);
          *(_QWORD *)(v31 - 112) = v113;
          type metadata accessor for JobResult();
        }
        if ((*(_BYTE *)(*(_QWORD *)(v31 - 168) + 130) & 2) == 0)
        {
LABEL_39:
          v114 = *(_QWORD *)(v31 - 240);
          *(_QWORD *)(v31 - 136) = *(_QWORD *)(v31 - 232);
          *(_QWORD *)(v31 - 128) = v114;
          v115 = *(_QWORD *)(v31 - 264);
          *(_QWORD *)(v31 - 120) = *(_QWORD *)(v31 - 256);
          *(_QWORD *)(v31 - 112) = v115;
          type metadata accessor for JobResult();
        }
        if (((*(uint64_t (**)(_QWORD))(*(_QWORD *)(v31 - 384) + 72))(*(_QWORD *)(v31 - 248)) & 1) != 0)
        {
          v116 = *(_QWORD *)(v31 - 520);
          v48(v116, *(_QWORD *)(v31 - 624), v54);
          v117 = *(_QWORD *)(v31 - 288);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 - 200))(v116, 1, v117) == 1)
          {
            v118 = *(_QWORD *)(v31 - 184);
            (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v116, v54);
            v119 = *(_QWORD *)(v31 - 424);
            v120 = *(_QWORD *)(v31 - 512);
          }
          else
          {
            v121 = *(_QWORD *)(v31 - 336);
            v122 = v48;
            v123 = *(_QWORD *)(v31 - 344);
            v124 = *(_QWORD *)(v31 - 328);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v123, v116 + *(int *)(v117 + 52), v124);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 312) + 8))(v116, v117);
            v125 = *(unsigned __int8 *)(v123 + *(int *)(v124 + 52));
            v126 = v123;
            v48 = v122;
            (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v126, v124);
            v118 = *(_QWORD *)(v31 - 184);
            v119 = *(_QWORD *)(v31 - 424);
            v120 = *(_QWORD *)(v31 - 512);
            if (v125 == 2)
            {
LABEL_48:
              v69 = *(_QWORD *)(v31 - 280);
              goto LABEL_49;
            }
          }
          v48(v120, *(_QWORD *)(v31 - 624), v54);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 - 200))(v120, 1, v117) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v120, v54);
            v127 = *(_QWORD *)(v31 - 528);
            (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v119 + 56))(v127, 1, 1, *(_QWORD *)(v31 - 352));
LABEL_47:
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v31 - 448) + 8))(v127, *(_QWORD *)(v31 - 440));
            goto LABEL_48;
          }
          *(_QWORD *)(v31 - 680) = v48;
          v128 = *(_QWORD *)(v31 - 336);
          v129 = *(_QWORD *)(v31 - 344);
          v130 = *(_QWORD *)(v31 - 328);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 16))(v129, v120 + *(int *)(v117 + 52), v130);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 312) + 8))(v120, v117);
          v131 = *(_QWORD *)(v31 - 528);
          (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v31 - 448) + 16))(v131, v129, *(_QWORD *)(v31 - 440));
          v132 = v130;
          v127 = v131;
          (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v129, v132);
          v133 = v131;
          v134 = *(_QWORD *)(v31 - 352);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v133, 1, v134) == 1)
            goto LABEL_47;
          v139 = *(_QWORD *)(v31 - 552);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 32))(v139, v127, v134);
          *(_QWORD *)(v31 - 136) = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v31 - 152)
                                                                                             + 24)
                                                                               + 344))(v139, 6);
          v140 = *(_QWORD *)(v31 - 560);
          v141 = sub_23B1C67DC();
          MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v141);
          v142 = *(_QWORD *)(v31 - 568);
          sub_23B1C69A4();
          swift_bridgeObjectRelease();
          v143 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 48))(v142, 1, v140);
          v69 = *(_QWORD *)(v31 - 280);
          if (v143 == 1)
          {
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v31 - 592) + 8))(v142, *(_QWORD *)(v31 - 584));
LABEL_59:
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v31 - 424) + 8))(v139, *(_QWORD *)(v31 - 352));
            goto LABEL_49;
          }
          v144 = *(void **)(v142 + *(int *)(v140 + 48) + 40);
          (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v31 - 576) - 8) + 8))(v142);
          if (!v144)
          {

            swift_bridgeObjectRelease();
            goto LABEL_59;
          }
          v145 = v144;
          v146 = *(_QWORD *)(v31 - 616);
          sub_23B1C5378();
          sub_23ADA1DEC();
          v147 = *(_QWORD *)(v31 - 600);
          v148 = sub_23B1C575C();

          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 608) + 8))(v146, v147);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v31 - 424) + 8))(v139, *(_QWORD *)(v31 - 352));
          if ((v148 & 1) != 0)
            goto LABEL_39;
        }
LABEL_49:
        v135 = *(_QWORD *)(v31 - 504);
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v137 = v136;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 496) + 8))(v135, v69);
        v138 = v137 * 1000000000.0;
        if ((~COERCE__INT64(v137 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v138 > -9.22337204e18)
          {
            if (v138 < 9.22337204e18)
              sub_23B12B6D8(*(_QWORD *)(v31 - 320), 0x2000000000000000, (uint64_t)v138, 0x20000, *(uint64_t **)(v31 - 152), 0, *(_QWORD *)(v31 - 272));
LABEL_62:
            __break(1u);
            JUMPOUT(0x23B130194);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_62;
      }
      v100 = v89;
      v101 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      v101(v100, v54);
      v102 = *(_QWORD *)(v31 - 392);
      v48(v102, v63, v54);
      v101(v102, v54);
    }
    v103 = 1;
    goto LABEL_36;
  }
  v33 = v23;
  (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v31 - 176))(0, 0, 0, v23);

}

uint64_t sub_23B130198()
{
  return 0x7463697665;
}

uint64_t sub_23B1301AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B1301B4(a1, a2, a3, a4, 64);
}

uint64_t sub_23B1301B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  v6 = sub_23B134BD0(a1, a2, a3, a4, a5);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v6;
}

void sub_23B130218()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
}

uint64_t sub_23B1302E8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 1, 1, a1);
}

void sub_23B130324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[18];

  v13[11] = a3;
  v13[3] = a5;
  v13[4] = a4;
  v13[12] = a1;
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 560);
  v8 = *(_QWORD *)(*v5 + 576);
  v13[2] = type metadata accessor for SnapshotItem(255, v7, v8, a4);
  v9 = sub_23B1C6C98();
  v13[0] = *(_QWORD *)(v9 - 8);
  v13[1] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v13[5] = (char *)v13 - v10;
  v13[6] = v6;
  v11 = *(_QWORD *)(v6 + 568);
  v12 = *(_QWORD *)(v6 + 584);
  v13[14] = v7;
  v13[15] = v11;
  v13[16] = v8;
  v13[17] = v12;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B1303C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 160) = a1;
  *(_QWORD *)(v5 - 152) = v6;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v4;
  type metadata accessor for JobResult();
}

void sub_23B130408(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;

  *(_QWORD *)(v1 - 168) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 - 88) = v5;
  type metadata accessor for ReconciliationID();
}

void sub_23B1304A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD, _QWORD, void *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  _BYTE *v22;

  type metadata accessor for ReconciliationSideMutation(255, v4, v5, a4);
  v10 = v8 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v11 = *(_QWORD *)(v9 - 144);
  v12 = v11 + *(_QWORD *)(*(_QWORD *)(v9 - 176) + 536);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, v12, v6);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)v10 = 769;
  *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 112);
  swift_storeEnumTagMultiPayload();
  v13 = *(_QWORD *)(v9 - 160);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v9 - 136), v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 152) + 8))(v8, v13);
  (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v9 - 128) + 32) + 240))(v12, 1);
  v15 = *(_QWORD *)(v9 - 224);
  v14 = *(_QWORD *)(v9 - 216);
  v16 = *(void (**)(_QWORD, _QWORD, _QWORD, void *))(v9 - 192);
  v17 = *(_QWORD *)(v9 - 208);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v7, v14);
LABEL_4:
    v16(0, 0, 0, 0);
    return;
  }
  v19 = MEMORY[0x23B8613CC](&unk_23B1DD478, v17);
  v20 = sub_23AF21910(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v7, v17);
  if ((v20 & 1) != 0)
    goto LABEL_4;
  sub_23AAFCEE8();
  v21 = (void *)swift_allocError();
  *v22 = 4;
  v16(0, 0, 0, v21);

}

uint64_t sub_23B1306C4()
{
  return 0x68632D7463697665;
}

uint64_t sub_23B1306E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  char *v29;
  void (*v30)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v31;
  _QWORD v32[3];
  void (*v33)(uint64_t, _QWORD, _QWORD, _QWORD);
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v6 = v5;
  v33 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))a4;
  v36 = a3;
  v10 = *(_QWORD *)v6;
  v11 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*(_QWORD *)v6 + 560), *(_QWORD *)(*(_QWORD *)v6 + 576), a4);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v32 - v16;
  v35 = a1;
  v18 = (*(uint64_t (**)(char *, uint64_t))(**(_QWORD **)(a1 + 32) + 472))(&v6[*(_QWORD *)(v10 + 536)], a2);
  v19 = a5;
  v20 = v18;
  v37 = v17;
  v32[0] = v13;
  v32[2] = v21;
  if ((*((_QWORD *)v6 + 16) & 0x20000000000) != 0)
    v22 = 2;
  else
    v22 = 4;
  v34 = v22;
  if (!MEMORY[0x23B85F0E0](v18, v11))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v30 = v33;
    v31 = swift_retain();
    v30(v31, 0, 0, 0);
    return swift_release_n();
  }
  v32[1] = v19;
  v23 = 0;
  while (1)
  {
    v24 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v24 & 1) != 0)
    {
      v25 = v37;
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v37, v20+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v23, v11);
      v26 = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_14;
      goto LABEL_9;
    }
    result = sub_23B1C6F38();
    if (v32[0] != 8)
      break;
    v38 = result;
    v29 = v37;
    (*(void (**)(char *, uint64_t *, uint64_t))(v12 + 16))(v37, &v38, v11);
    v25 = v29;
    swift_unknownObjectRelease();
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
LABEL_9:
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v25, v11);
    v27 = MEMORY[0x23B8613CC](&unk_23B1DD478, v11);
    if (sub_23AF219A4(v11, v27) != 2)
    {
      sub_23AF219A4(v11, v27);
      sub_23B12C060();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    ++v23;
    if (v26 == MEMORY[0x23B85F0E0](v20, v11))
      goto LABEL_15;
  }
  __break(1u);
  return result;
}

void type metadata accessor for Materialization.EvictChildren()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B130A1C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_23B130A38(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = v2;
  swift_retain();
  swift_retain();
  sub_23ACFFA68((uint64_t)"requestCompleted(isIgnored:db:)", 31, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23B135288, v5);
  return swift_release();
}

void sub_23B130AD8()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23B130B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v12 = *(_QWORD *)(a1 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - v14;
  *(_QWORD *)(v11 - 120) = v13;
  *(_QWORD *)(v11 - 136) = v12;
  if ((v10 & 1) != 0)
  {
    v16 = *(_QWORD *)(v11 - 72) + *(_QWORD *)(**(_QWORD **)(v11 - 72) + 536);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    *(_QWORD *)(v11 - 144) = v9;
    v18 = AssociatedTypeWitness;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v15, v16, AssociatedTypeWitness);
    v19 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v21 = swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v11 - 112) = v18;
    *(_QWORD *)(v11 - 104) = v19;
    *(_QWORD *)(v11 - 96) = AssociatedConformanceWitness;
    *(_QWORD *)(v11 - 88) = v21;
    type metadata accessor for ReconciliationID();
  }
  v22 = swift_getAssociatedTypeWitness();
  v23 = swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedTypeWitness();
  v25 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 112) = v24;
  *(_QWORD *)(v11 - 104) = v22;
  *(_QWORD *)(v11 - 96) = v25;
  *(_QWORD *)(v11 - 88) = v23;
  type metadata accessor for ReconciliationID();
}

void sub_23B130D28()
{
  swift_getTupleTypeMetadata2();
  sub_23B06BF34();
}

uint64_t sub_23B130D58(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;

  *v5 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v1 + *(_QWORD *)(*(_QWORD *)v1 + 536), v2);
  swift_storeEnumTagMultiPayload();
  v7 = *(_QWORD *)(v6 - 120);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *))(*(_QWORD *)v4 + 312))(v5);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v5, v7);
}

void sub_23B130DEC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23B130ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 248) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 208) = v12;
  *(_QWORD *)(v13 - 200) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 224) = v9;
  *(_QWORD *)(v13 - 216) = v10;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ReconciliationID();
}

void sub_23B130F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v13 - 256) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - v14;
  v16 = type metadata accessor for ItemReconciliationHalf(0, v11, v12, v15);
  *(_QWORD *)(v13 - 288) = v16;
  *(_QWORD *)(v13 - 232) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 240) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 192) = v10;
  *(_QWORD *)(v13 - 184) = v9;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B130FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_23B1C6C98();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v3 - 168) = (char *)&v12 - v6;
  v7 = *(_QWORD *)(*(_QWORD *)(v3 - 136) + 32);
  v8 = *(_QWORD *)(v3 - 144) + *(_QWORD *)(v2 + 536);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 424))(v8) & 1) != 0
    || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 432))(v8) & 1) != 0)
  {
    if (*(_QWORD *)(v3 - 176))
      sub_23AB00114();
    if (sub_23AE4F6B4())
    {
      v10 = *(_QWORD *)(v3 - 192);
      *(_QWORD *)(v3 - 120) = v0;
      *(_QWORD *)(v3 - 112) = v10;
      v11 = *(_QWORD *)(v3 - 184);
      *(_QWORD *)(v3 - 104) = v1;
      *(_QWORD *)(v3 - 96) = v11;
      type metadata accessor for ConcreteDatabase();
    }
    (*(void (**)(void))(**(_QWORD **)(v3 - 136) + 176))();
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 192);
    *(_QWORD *)(v3 - 112) = v0;
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 184);
    *(_QWORD *)(v3 - 96) = v1;
    type metadata accessor for ConcreteDatabase();
  }
  return (*(uint64_t (**)(_QWORD, unint64_t, unint64_t, _QWORD))(v3 - 152))(0, 0xD000000000000017, 0x800000023B21E6B0, 0);
}

void sub_23B13132C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 - 168) = swift_dynamicCastClassUnconditional();
  v1 = *(_QWORD *)(v0 - 200);
  *(_QWORD *)(v0 - 120) = *(_QWORD *)(v0 - 208);
  *(_QWORD *)(v0 - 112) = v1;
  v2 = *(_QWORD *)(v0 - 224);
  *(_QWORD *)(v0 - 104) = *(_QWORD *)(v0 - 216);
  *(_QWORD *)(v0 - 96) = v2;
  type metadata accessor for FPFSID();
}

void sub_23B131368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(*(_QWORD *)(v2 - 264), v0, v1);
  swift_storeEnumTagMultiPayload();
  sub_23AF4E3A4();
}

void sub_23B1313A8(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = swift_allocBox();
  v10 = v9;
  v11 = *(int *)(TupleTypeMetadata2 + 48);
  v1(v9, v2, v3);
  swift_storeEnumTagMultiPayload();
  v12 = *(_QWORD *)(v5 - 144);
  *(_QWORD *)(v10 + v11) = *(_QWORD *)(v12 + 112);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1768]), sel_init);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v4;
  swift_retain();
  swift_retain();
  sub_23AAD7544(a1, 0, 0, 1, v8 | 0x5000000000000002, v13, (uint64_t)sub_23B1351E0, v14);
}

void sub_23B13158C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v3;
  *(_QWORD *)(v4 - 96) = v0;
  type metadata accessor for Ingestion.ReSnapshotChildren();
}

void sub_23B1315A4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23B126E28(v0, *(_QWORD *)(*(_QWORD *)(v1 - 144) + 112), *(_QWORD *)(*(_QWORD *)(v1 - 144) + 120), *(_QWORD *)(*(_QWORD *)(v1 - 144) + 128));
}

void sub_23B1315C0(uint64_t a1)
{
  _QWORD *v1;
  void (*v2)(_QWORD, _QWORD, _QWORD, void *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;

  v6 = *(_QWORD *)(v5 - 280);
  sub_23AE181A4(v6, a1);
  swift_release();
  v7 = v1[14];
  v8 = v1[15];
  v9 = v1[16];
  swift_allocObject();
  v10 = sub_23AF1AD34(v4, v7, v8, v9);
  sub_23AE181A4(v6, v10);
  swift_release();
  sub_23AAFCEE8();
  v11 = (void *)swift_allocError();
  *v12 = 3;
  v2(0, 0, 0, v11);

  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 296) + 8))(*(_QWORD *)(v5 - 168), v3);
  JUMPOUT(0x23B131074);
}

uint64_t sub_23B131698(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;
  _QWORD v21[8];

  v21[3] = a2;
  v6 = *a2;
  v7 = *(_QWORD *)(*a2 + 568);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v11 = sub_23B1C74F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v21 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v21 - v13, a1, v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
    v16 = *(_QWORD *)(v6 + 584);
    v21[2] = v8;
    v21[1] = v16;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v21[0] = a4;
    v18 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v20 = swift_getAssociatedConformanceWitness();
    v21[4] = AssociatedTypeWitness;
    v21[5] = v18;
    v21[6] = AssociatedConformanceWitness;
    v21[7] = v20;
    type metadata accessor for ReconciliationID();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return sub_23B130A38(0, a4);
}

uint64_t sub_23B131970(char a1, char a2, uint64_t a3, uint64_t a4)
{
  char v5;

  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    swift_willThrowTypedImpl();
    v5 = 0;
  }
  else
  {
    v5 = a1 & 1;
  }
  return sub_23B130A38(v5, a4);
}

void type metadata accessor for Materialization.MaterializeParentHierarchy()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B1319E0()
{
  return 0xD000000000000027;
}

uint64_t sub_23B1319FC(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v27 = a6;
  v25 = a1;
  v26 = a5;
  v29 = a4;
  v9 = (_QWORD *)*v6;
  v10 = (_QWORD *)*a1;
  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v24 - v14, a2, v11);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = v9[70];
  *((_QWORD *)v18 + 3) = v9[71];
  *((_QWORD *)v18 + 4) = v10[71];
  *((_QWORD *)v18 + 5) = v10[72];
  *((_QWORD *)v18 + 6) = v9[72];
  *((_QWORD *)v18 + 7) = v9[73];
  *((_QWORD *)v18 + 8) = v10[73];
  v19 = v25;
  *((_QWORD *)v18 + 9) = v10[74];
  *((_QWORD *)v18 + 10) = v19;
  v20 = v26;
  v21 = v27;
  *((_QWORD *)v18 + 11) = a3;
  *((_QWORD *)v18 + 12) = v20;
  *((_QWORD *)v18 + 13) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[v16], v15, v11);
  v22 = v29;
  *(_QWORD *)&v18[v17] = v28;
  *(_QWORD *)&v18[(v17 + 15) & 0xFFFFFFFFFFFFFFF8] = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA93780(v22);
  sub_23AADBF54(a3, v22, (uint64_t)sub_23B134EA0, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_23B131BA0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, unint64_t a8)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;

  v45 = a7;
  v46 = a8;
  v43 = a4;
  v44 = a5;
  v41 = a3;
  v42 = a2;
  v10 = (_QWORD *)*a2;
  v39 = (_QWORD *)*a7;
  v40 = v10;
  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  v35 = *(_QWORD *)(v11 - 8);
  v13 = v35;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v35 - v14;
  v38 = (char *)&v35 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v37 = v11;
  v16 = sub_23B1C74F0();
  v17 = *(_QWORD *)(v16 - 8);
  v36 = v16;
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v35 - v19;
  (*(void (**)(char *, uint64_t))(v17 + 16))((char *)&v35 - v19, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a6, v11);
  v21 = (*(unsigned __int8 *)(v17 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v22 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (*(unsigned __int8 *)(v13 + 80) + v24 + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v26 = (v12 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (char *)swift_allocObject();
  v29 = v39;
  v28 = v40;
  *((_QWORD *)v27 + 2) = v39[70];
  *((_QWORD *)v27 + 3) = v29[71];
  *((_QWORD *)v27 + 4) = v28[71];
  *((_QWORD *)v27 + 5) = v28[72];
  *((_QWORD *)v27 + 6) = v29[72];
  *((_QWORD *)v27 + 7) = v29[73];
  *((_QWORD *)v27 + 8) = v28[73];
  *((_QWORD *)v27 + 9) = v28[74];
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v27[v21], v20, v36);
  *(_QWORD *)&v27[v22] = v41;
  v30 = v43;
  *(_QWORD *)&v27[v23] = v42;
  v31 = &v27[v24];
  v32 = v44;
  *(_QWORD *)v31 = v30;
  *((_QWORD *)v31 + 1) = v32;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v27[v25], v38, v37);
  v33 = v46;
  *(_QWORD *)&v27[v26] = v45;
  *(_QWORD *)&v27[(v26 + 15) & 0xFFFFFFFFFFFFFFF8] = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA93780(v33);
  sub_23ACFFA68((uint64_t)"backgroundMaterialize(concreteDB:lastMaterializedLevel:id:request:requestCompleted:)", 84, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23B1350E8, (uint64_t)v27);
  return swift_release();
}

void sub_23B131E38(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[32];
  __int128 v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t TupleTypeMetadata2;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v33 = a5;
  v24 = a8;
  v25 = a7;
  v26 = a6;
  v38 = a4;
  v31 = a3;
  v32 = a2;
  v34 = a1;
  v8 = *a2;
  v9 = *(_QWORD *)(*a2 + 80);
  v10 = sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v22 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v27 = &v19[-v12];
  v29 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v23 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v21 = &v19[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v28 = &v19[-v17];
  v18 = *(_QWORD *)(v8 + 88);
  v35 = v9;
  v36 = v18;
  v20 = *(_OWORD *)(v8 + 96);
  v37 = v20;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23B131F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, _BYTE *, uint64_t);
  uint64_t v25;
  _BYTE v26[96];

  *(_QWORD *)(v3 - 160) = a1;
  v4 = sub_23B1C6C98();
  *(_QWORD *)(v3 - 168) = v4;
  *(_QWORD *)(v3 - 216) = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v26[-v6];
  *(_QWORD *)(v3 - 152) = v1;
  v8 = *(_QWORD *)(v1 - 8);
  v9 = MEMORY[0x24BDAC7A8](v5);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = &v26[-v13];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v26[-v15];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v17 = sub_23B1C74F0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v26[-v19];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v18 + 16))(&v26[-v19], *(_QWORD *)(v3 - 128), v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    *(_QWORD *)(v3 - 312) = v14;
    *(_QWORD *)(v3 - 304) = v11;
    *(_QWORD *)(v3 - 128) = v16;
    *(_QWORD *)(v3 - 296) = v2;
    v22 = *(_QWORD *)(v3 - 152);
    v21 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v20, 1, v22);
    if ((_DWORD)v21 != 1)
    {
      v24 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32);
      v25 = *(_QWORD *)(v3 - 128);
      *(_QWORD *)(v3 - 320) = v24;
      v24(v25, v20, v22);
      sub_23AF4E47C(*(_QWORD *)(v3 - 184), 1, (uint64_t)v7);
    }
  }
  return (*(uint64_t (**)(uint64_t))(v3 - 72))(v21);
}

void sub_23B1324C4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23B1325AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 280) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v14;
  v15 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 256) = v15;
  *(_QWORD *)(v13 - 264) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 232) = v10;
  *(_QWORD *)(v13 - 224) = v12;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v11;
  *(_QWORD *)(v13 - 240) = v11;
  type metadata accessor for ReconciliationID();
}

void sub_23B132648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v14 - 304) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 312) = (char *)&a9 - v15;
  *(_QWORD *)(v14 - 216) = v9;
  v16 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 288) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v14 - 320) = (char *)&a9 - v17;
  v19 = type metadata accessor for ItemReconciliationHalf(0, v11, v12, v18);
  *(_QWORD *)(v14 - 336) = v19;
  *(_QWORD *)(v14 - 344) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 352) = (char *)&a9 - v20;
  *(_QWORD *)(v14 - 208) = v11;
  *(_QWORD *)(v14 - 200) = v12;
  *(_QWORD *)(v14 - 120) = v11;
  *(_QWORD *)(v14 - 112) = v10;
  *(_QWORD *)(v14 - 192) = v10;
  *(_QWORD *)(v14 - 184) = v13;
  *(_QWORD *)(v14 - 104) = v12;
  *(_QWORD *)(v14 - 96) = v13;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B13273C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v2 - 248) = a1;
  v3 = sub_23B1C6C98();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v2 - 168) = (char *)&v18 - v5;
  v6 = swift_allocObject();
  v8 = *(_QWORD *)(v2 - 152);
  v7 = *(_QWORD *)(v2 - 144);
  *(_QWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 24) = v8;
  v9 = *(_QWORD *)(v7 + 32);
  v10 = v8 + *(_QWORD *)(v1 + 536);
  v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 424);
  swift_retain();
  swift_retain();
  v12 = v11(v10);
  *(_QWORD *)(v2 - 360) = v6;
  if ((v12 & 1) != 0
    || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 432))(v10) & 1) != 0
    || (*(_BYTE *)(*(_QWORD *)(v2 - 152) + 132) & 0x40) != 0)
  {
    if (*(_QWORD *)(v2 - 176))
      sub_23AB00114();
    if (sub_23AE4F6B4())
    {
      v14 = *(_QWORD *)(v2 - 192);
      *(_QWORD *)(v2 - 120) = *(_QWORD *)(v2 - 208);
      *(_QWORD *)(v2 - 112) = v14;
      v15 = *(_QWORD *)(v2 - 184);
      *(_QWORD *)(v2 - 104) = *(_QWORD *)(v2 - 200);
      *(_QWORD *)(v2 - 96) = v15;
      type metadata accessor for ConcreteDatabase();
    }
    *(_QWORD *)(v2 - 144) = (*(uint64_t (**)(void))(**(_QWORD **)(v2 - 144) + 176))();
    v16 = *(_QWORD *)(v2 - 208);
    *(_QWORD *)(v2 - 120) = *(_QWORD *)(v2 - 192);
    *(_QWORD *)(v2 - 112) = v16;
    v17 = *(_QWORD *)(v2 - 200);
    *(_QWORD *)(v2 - 104) = *(_QWORD *)(v2 - 184);
    *(_QWORD *)(v2 - 96) = v17;
    type metadata accessor for ConcreteDatabase();
  }
  (*(void (**)(_QWORD, unint64_t, unint64_t, _QWORD))(v2 - 136))(0, 0xD000000000000017, 0x800000023B21E6B0, 0);
  return swift_release();
}

void sub_23B132B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 - 168) = swift_dynamicCastClassUnconditional();
  v1 = *(_QWORD *)(v0 - 224);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(*(_QWORD *)(v0 - 272), 1, 1, v1);
  v2 = *(_QWORD *)(v0 - 216);
  *(_QWORD *)(v0 - 120) = v1;
  *(_QWORD *)(v0 - 112) = v2;
  v3 = *(_QWORD *)(v0 - 232);
  *(_QWORD *)(v0 - 104) = *(_QWORD *)(v0 - 240);
  *(_QWORD *)(v0 - 96) = v3;
  type metadata accessor for FPFSID();
}

void sub_23B132B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(*(_QWORD *)(v2 - 296), v0, v1);
  swift_storeEnumTagMultiPayload();
  sub_23AF4E3A4();
}

void sub_23B132BC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = v2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = swift_allocBox();
  v11 = v10;
  v12 = *(int *)(TupleTypeMetadata2 + 48);
  v4(v10, v6, v3);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v11 + v12) = *(_QWORD *)(*(_QWORD *)(v5 - 152) + 112);
  sub_23B1319FC(*(_QWORD **)(v5 - 168), v1, a1, v9 | 0x8000000000000004, (uint64_t)sub_23B134D68, *(_QWORD *)(v5 - 360));
  swift_release();
  swift_release();
  swift_release();
  JUMPOUT(0x23B132C8CLL);
}

void sub_23B132D80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE *v9;

  v2 = *(_QWORD **)(v1 - 152);
  v3 = v2[14];
  v4 = v2[15];
  v5 = v0;
  v6 = v2[16];
  swift_allocObject();
  v7 = sub_23B126EAC(v5, v3, v4, v6, 0x400000);
  sub_23AE181A4(*(_QWORD *)(v1 - 328), v7);
  swift_release();
  sub_23AAFCEE8();
  v8 = (void *)swift_allocError();
  *v9 = 3;
  (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v1 - 136))(0, 0, 0, v8);
  swift_release();

  JUMPOUT(0x23B132E44);
}

void sub_23B132E54()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23B132E9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v1 - 136) = a1;
  *(_QWORD *)(v1 - 128) = v2;
  MEMORY[0x24BDAC7A8](a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 104) = v4;
  *(_QWORD *)(v1 - 96) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 - 88) = v6;
  type metadata accessor for ReconciliationID();
}

void sub_23B132F60()
{
  swift_getTupleTypeMetadata2();
  sub_23B06BF34();
}

uint64_t sub_23B132F8C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v3 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v2, v1 + *(_QWORD *)(*(_QWORD *)v1 + 536), v4);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v5 - 136);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_BYTE *))(**(_QWORD **)(v5 - 120) + 312))(v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 128) + 8))(v3, v6);
}

void type metadata accessor for Materialization.BackgroundMaterializeParentHierarchy()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B133028()
{
  return 0xD000000000000018;
}

void sub_23B133044()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
}

void sub_23B133148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v14 - 448) = a1;
  *(_QWORD *)(v14 - 432) = swift_getTupleTypeMetadata2();
  v15 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 456) = v15;
  *(_QWORD *)(v14 - 464) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v14 - 472) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v14 - 440) = (char *)&a9 - v19;
  *(_QWORD *)(v14 - 288) = v10;
  *(_QWORD *)(v14 - 296) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v14 - 424) = (char *)&a9 - v20;
  v21 = sub_23B1C5BDC();
  *(_QWORD *)(v14 - 352) = v21;
  *(_QWORD *)(v14 - 368) = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v14 - 360) = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for SnapshotMutation(0, v9, v12, v23);
  *(_QWORD *)(v14 - 376) = v24;
  *(_QWORD *)(v14 - 384) = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v14 - 392) = (char *)&a9 - v25;
  *(_QWORD *)(v14 - 136) = v9;
  *(_QWORD *)(v14 - 128) = v11;
  *(_QWORD *)(v14 - 120) = v12;
  *(_QWORD *)(v14 - 112) = v13;
  type metadata accessor for ReconciliationMutation();
}

void sub_23B1332D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v13 - 400) = a1;
  *(_QWORD *)(v13 - 408) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 416) = (char *)&a9 - v14;
  type metadata accessor for SnapshotItem(255, v9, v11, v15);
  v16 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 264) = v16;
  *(_QWORD *)(v13 - 272) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 224) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 136) = v9;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v12;
  type metadata accessor for ItemReconciliation();
}

void sub_23B133388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v16 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 216) = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v14 - 192) = a1;
  *(_QWORD *)(v14 - 184) = v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v14 - 256) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 208) = (char *)&a9 - v22;
  *(_QWORD *)(v14 - 232) = *(_QWORD *)(v9 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v14 - 344) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v26 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v14 - 240) = (char *)&a9 - v27;
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v14 - 200) = v10;
  *(_QWORD *)(v14 - 136) = v10;
  *(_QWORD *)(v14 - 128) = v11;
  *(_QWORD *)(v14 - 280) = v11;
  *(_QWORD *)(v14 - 120) = v12;
  *(_QWORD *)(v14 - 112) = v13;
  *(_QWORD *)(v14 - 248) = v13;
  type metadata accessor for ConcreteDatabase();
}

void sub_23B1334CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  if (swift_dynamicCastClass())
  {
    *(_QWORD *)(v2 - 488) = v1;
    *(_QWORD *)(v2 - 480) = v0;
    swift_retain();
    sub_23AB00114();
  }
  v3 = (id)FPNotSupportedError();
  (*(void (**)(_QWORD, unint64_t, unint64_t, id))(v2 - 160))(0, 0xD000000000000013, 0x800000023B21E590, v3);

}

void sub_23B133860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 - 320);
  *(_QWORD *)(v0 - 136) = *(_QWORD *)(v0 - 288);
  *(_QWORD *)(v0 - 128) = v1;
  v2 = *(_QWORD *)(v0 - 336);
  *(_QWORD *)(v0 - 120) = *(_QWORD *)(v0 - 328);
  *(_QWORD *)(v0 - 112) = v2;
  type metadata accessor for ReconciliationID();
}

void sub_23B133898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 296) + 16);
  v6 = *(_QWORD *)(v3 - 416);
  v7 = *(_QWORD *)(v3 - 264);
  v5(v6, v7, v1);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v6 + v4) = 3;
  v8 = *(_QWORD *)(v3 - 400);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v3 - 312);
  sub_23AEB700C(v9, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 408) + 8))(v6, v8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v11 = *(int *)(TupleTypeMetadata3 + 48);
  v12 = *(_QWORD *)(v3 - 392);
  v13 = (_QWORD *)(v12 + *(int *)(TupleTypeMetadata3 + 64));
  v5(v12, v7, v1);
  *(_BYTE *)(v12 + v11) = 1;
  *v13 = 0xD000000000000029;
  v13[1] = 0x800000023B21E660;
  v14 = *(_QWORD *)(v3 - 376);
  swift_storeEnumTagMultiPayload();
  sub_23AEB7038(v9, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 384) + 8))(v12, v14);
  *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 200);
  *(_QWORD *)(v3 - 128) = v0;
  v15 = *(_QWORD *)(v3 - 248);
  *(_QWORD *)(v3 - 120) = v2;
  *(_QWORD *)(v3 - 112) = v15;
  type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
}

void sub_23B133A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v2 - 360);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v5 = v4;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 368) + 8))(v3, *(_QWORD *)(v2 - 352));
  v6 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v6 > -9.22337204e18)
    {
      if (v6 < 9.22337204e18)
      {
        v7 = sub_23AD3B900(*(_QWORD *)(v2 - 264), 0, (uint64_t)v6, 0);
        sub_23AE181A4(v1, v7);
        swift_release();
        v8 = *(_QWORD *)(v2 - 176);
        v9 = *(_QWORD *)(v8 + 128);
        if ((v9 & 0x4000) == 0)
          *(_QWORD *)(v8 + 128) = v9 | 0x4000;
        v10 = *(_QWORD *)(v2 - 280);
        *(_QWORD *)(v2 - 136) = *(_QWORD *)(v2 - 200);
        *(_QWORD *)(v2 - 128) = v10;
        v11 = *(_QWORD *)(v2 - 248);
        *(_QWORD *)(v2 - 120) = v0;
        *(_QWORD *)(v2 - 112) = v11;
        type metadata accessor for DiskImport.ContinueDiskImport();
      }
LABEL_9:
      __break(1u);
      JUMPOUT(0x23B1346E0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_9;
}

void sub_23B133B14()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  void (*v9)(_QWORD, uint64_t, unint64_t, _QWORD);
  uint64_t v10;

  v5 = *(_QWORD *)(v4 - 424);
  sub_23B0EB9DC();
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v7 = v6;
  v1(v2, v0);
  v8 = v7 * 1000000000.0;
  if ((~COERCE__INT64(v7 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    v9 = *(void (**)(_QWORD, uint64_t, unint64_t, _QWORD))(v4 - 160);
    if (v8 > -9.22337204e18)
    {
      if (v8 < 9.22337204e18)
      {
        v10 = sub_23AD3B900(v5, 0x2000000000000000, (uint64_t)v8, 0x4000);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 296) + 8))(v5, *(_QWORD *)(v4 - 288));
        sub_23AE181A4(v3, v10);
        swift_release();
        v9(0, 0x6C6169726574616DLL, 0xEC00000064657A69, 0);
        swift_release();
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 232) + 8))(*(_QWORD *)(v4 - 240), *(_QWORD *)(v4 - 480));
        (*(void (**)(_QWORD, _QWORD))(v4 - 184))(*(_QWORD *)(v4 - 208), *(_QWORD *)(v4 - 192));
        JUMPOUT(0x23B1342ACLL);
      }
LABEL_7:
      __break(1u);
      JUMPOUT(0x23B1346ECLL);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_23B133CA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v1 = sub_23B134BD0(*(_QWORD *)(v0 - 264), *(_QWORD *)(*(_QWORD *)(v0 - 176) + 112), *(_QWORD *)(*(_QWORD *)(v0 - 176) + 120), *(_QWORD *)(*(_QWORD *)(v0 - 176) + 128), 0x10000);
  sub_23AE181A4(*(_QWORD *)(v0 - 312), v1);
  swift_release();
  sub_23AAFCEE8();
  v2 = (void *)swift_allocError();
  *v3 = 3;
  (*(void (**)(_QWORD, unint64_t, unint64_t, void *))(v0 - 160))(0, 0xD000000000000023, 0x800000023B21E5F0, v2);

  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 232) + 8))(*(_QWORD *)(v0 - 240), *(_QWORD *)(v0 - 480));
  JUMPOUT(0x23B1342A8);
}

void sub_23B133DC8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  uint64_t v34;
  _BOOL4 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t v44;

  sub_23B134C40();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5 = swift_allocBox();
  v7 = v6;
  v8 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 296) + 16))(v6, *(_QWORD *)(v3 - 264), v1);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v7 + v8) = objc_msgSend((id)objc_opt_self(), sel_requestForSelf);
  *(_QWORD *)(v3 - 240) = v5 | 0x4000000000000000;
  *(_QWORD *)(v3 - 232) = v5;
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 - 152) + 24) + 352);
  v10 = v9(*(_QWORD *)(v3 - 488), 1);
  if (v0)
  {

LABEL_8:
    v17 = 0;
    *(_QWORD *)(v3 - 200) = 0;
    *(_QWORD *)(v3 - 192) = 0;
    *(_QWORD *)(v3 - 216) = 0;
    *(_QWORD *)(v3 - 208) = 0;
    v20 = 0;
    v23 = 0;
    v24 = 0;
    v26 = 1;
    goto LABEL_9;
  }
  *(_QWORD *)(v3 - 136) = v10;
  v11 = *(_QWORD *)(v3 - 432);
  v12 = sub_23B1C67DC();
  v13 = MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v12);
  v14 = *(_QWORD *)(v3 - 440);
  *(_QWORD *)(v3 - 256) = v12;
  *(_QWORD *)(v3 - 272) = v13;
  sub_23B1C69A4();
  swift_bridgeObjectRelease();
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  *(_QWORD *)(v3 - 264) = v15;
  if (v15(v14, 1, v11) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 464) + 8))(v14, *(_QWORD *)(v3 - 456));
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v3 - 224))(v2, *(_QWORD *)(v3 - 488), *(_QWORD *)(v3 - 480));
  }
  else
  {
    v16 = (unsigned __int8 *)(v14 + *(int *)(v11 + 48));
    v17 = *v16;
    v18 = *((_QWORD *)v16 + 1);
    *(_QWORD *)(v3 - 200) = *((_QWORD *)v16 + 2);
    *(_QWORD *)(v3 - 192) = v18;
    v19 = *((_QWORD *)v16 + 3);
    v20 = *((_QWORD *)v16 + 4);
    v21 = v14;
    v22 = *((_QWORD *)v16 + 5);
    v23 = v16[48];
    v24 = *((_QWORD *)v16 + 7);
    *(_QWORD *)(v3 - 216) = *((_QWORD *)v16 + 8);
    *(_QWORD *)(v3 - 208) = v19;
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 - 448) - 8) + 8))(v21);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v3 - 224))(v2, *(_QWORD *)(v3 - 488), *(_QWORD *)(v3 - 480));
    *(_QWORD *)(v3 - 280) = v22;
    if (v22 != 1)
    {
      (*(void (**)(uint64_t, _QWORD))(v3 - 184))(v2, *(_QWORD *)(v3 - 480));
      v26 = *(_QWORD *)(v3 - 280);
      goto LABEL_9;
    }
  }
  *(_QWORD *)(v3 - 136) = v9(v2, 0);
  v25 = *(_QWORD *)(v3 - 472);
  sub_23B1C69A4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(v3 - 184))(v2, *(_QWORD *)(v3 - 480));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 - 264))(v25, 1, v11) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 464) + 8))(v25, *(_QWORD *)(v3 - 456));
    goto LABEL_8;
  }
  v42 = (unsigned __int8 *)(v25 + *(int *)(*(_QWORD *)(v3 - 432) + 48));
  v17 = *v42;
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)(v3 - 200) = *((_QWORD *)v42 + 2);
  *(_QWORD *)(v3 - 192) = v43;
  v44 = *((_QWORD *)v42 + 3);
  v20 = *((_QWORD *)v42 + 4);
  v26 = *((_QWORD *)v42 + 5);
  v23 = v42[48];
  v24 = *((_QWORD *)v42 + 7);
  *(_QWORD *)(v3 - 216) = *((_QWORD *)v42 + 8);
  *(_QWORD *)(v3 - 208) = v44;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 - 448) - 8) + 8))(v25);
LABEL_9:
  *(_QWORD *)(v3 - 256) = v24;
  v27 = v23;
  v28 = v17;
  v29 = *(_QWORD *)(v3 - 488);
  v30 = *(_QWORD *)(v3 - 480);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 - 224))(*(_QWORD *)(v3 - 344), v29, v30);
  v31 = *(_BYTE *)(v29 + *(int *)(v30 + 48) + *(int *)(*(_QWORD *)(v3 - 496) + 64));
  *(_QWORD *)(v3 - 264) = v20;
  v32 = (v31 & 1) != 0 || v26 != 1 && v27 == 6;
  v34 = *(_QWORD *)(v3 - 176);
  v35 = *(_QWORD *)(v34 + 128) == 0x40000000;
  v36 = (_QWORD *)swift_allocObject();
  v37 = *(_QWORD *)(v3 - 152);
  v36[2] = *(_QWORD *)(v3 - 248);
  v36[3] = v37;
  v36[4] = v34;
  swift_retain_n();
  swift_retain();
  v38 = *(_QWORD *)(v3 - 480);
  v39 = MEMORY[0x23B8613CC](&unk_23B1DD478, v38);
  v40 = *(_QWORD *)(v3 - 344);
  sub_23AADE1D0(v40, v32, v35, *(_QWORD *)(v3 - 240), (uint64_t)sub_23B134C80, (uint64_t)v36, v38, v39);
  swift_release();
  v41 = *(void (**)(uint64_t, uint64_t))(v3 - 184);
  v41(v40, v38);
  type metadata accessor for RequestContinuation();
  swift_allocObject();
  (*(void (**)(void))(v3 - 160))();
  swift_release();
  swift_release();
  sub_23B134C8C(v28, *(_QWORD *)(v3 - 192), *(_QWORD *)(v3 - 200), *(_QWORD *)(v3 - 208), *(_QWORD *)(v3 - 264), (id)v26);
  swift_release();
  v41(*(_QWORD *)(v3 - 488), v38);
  JUMPOUT(0x23B133684);
}

void sub_23B133ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 - 320);
  *(_QWORD *)(v0 - 136) = *(_QWORD *)(v0 - 288);
  *(_QWORD *)(v0 - 128) = v1;
  v2 = *(_QWORD *)(v0 - 336);
  *(_QWORD *)(v0 - 120) = *(_QWORD *)(v0 - 328);
  *(_QWORD *)(v0 - 112) = v2;
  type metadata accessor for ReconciliationID();
}

void sub_23B133F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 296) + 16);
  v6 = *(_QWORD *)(v3 - 416);
  v7 = *(_QWORD *)(v3 - 264);
  v5(v6, v7, v1);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v6 + v4) = 3;
  v8 = *(_QWORD *)(v3 - 400);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v3 - 312);
  sub_23AEB700C(v9, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 408) + 8))(v6, v8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v11 = *(int *)(TupleTypeMetadata3 + 48);
  v12 = *(_QWORD *)(v3 - 392);
  v13 = (_QWORD *)(v12 + *(int *)(TupleTypeMetadata3 + 64));
  v5(v12, v7, v1);
  *(_BYTE *)(v12 + v11) = 1;
  *v13 = 0xD000000000000036;
  v13[1] = 0x800000023B21E620;
  v14 = *(_QWORD *)(v3 - 376);
  swift_storeEnumTagMultiPayload();
  sub_23AEB7038(v9, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 384) + 8))(v12, v14);
  *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 200);
  *(_QWORD *)(v3 - 128) = v0;
  v15 = *(_QWORD *)(v3 - 248);
  *(_QWORD *)(v3 - 120) = v2;
  *(_QWORD *)(v3 - 112) = v15;
  type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
}

void sub_23B134084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v2 - 360);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v5 = v4;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 368) + 8))(v3, *(_QWORD *)(v2 - 352));
  v6 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v6 > -9.22337204e18)
    {
      if (v6 < 9.22337204e18)
      {
        v7 = sub_23AD3B900(*(_QWORD *)(v2 - 264), 0, (uint64_t)v6, 0);
        sub_23AE181A4(v1, v7);
        swift_release();
        v8 = *(_QWORD *)(v2 - 176);
        v9 = *(_QWORD *)(v8 + 128);
        if ((v9 & 0x4000) == 0)
          *(_QWORD *)(v8 + 128) = v9 | 0x4000;
        v10 = *(_QWORD *)(v2 - 280);
        *(_QWORD *)(v2 - 136) = *(_QWORD *)(v2 - 200);
        *(_QWORD *)(v2 - 128) = v10;
        v11 = *(_QWORD *)(v2 - 248);
        *(_QWORD *)(v2 - 120) = v0;
        *(_QWORD *)(v2 - 112) = v11;
        type metadata accessor for DiskImport.ContinueDiskImport();
      }
LABEL_9:
      __break(1u);
      JUMPOUT(0x23B1346F8);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_9;
}

uint64_t sub_23B134180()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 - 424);
  sub_23B0EB9DC();
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v7 = v6;
  result = v1(v2, v0);
  v9 = v7 * 1000000000.0;
  if ((~COERCE__INT64(v7 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v9 < 9.22337204e18)
  {
    v10 = sub_23AD3B900(v5, 0x2000000000000000, (uint64_t)v9, 0x4000);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 296) + 8))(v5, *(_QWORD *)(v4 - 288));
    sub_23AE181A4(v3, v10);
    swift_release();
    JUMPOUT(0x23B134254);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23B134704(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t (*)(), _QWORD *);
  id v11;

  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a2;
  v9[4] = a1;
  v9[5] = a4;
  v10 = *(void (**)(uint64_t (*)(), _QWORD *))(*(_QWORD *)v8 + 656);
  swift_retain();
  swift_retain();
  swift_retain();
  v11 = a1;
  swift_retain();
  v10(sub_23B134CD4, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_23B1347BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v8;
  id v9;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  v8[5] = a4;
  swift_retain();
  v9 = a3;
  swift_retain();
  swift_retain();
  sub_23ACFFA68((uint64_t)"execute(on:continuation:result:completion:)", 43, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23B134D48, (uint64_t)v8);
  return swift_release();
}

void sub_23B13487C()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23B1348E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  _BYTE v22[96];

  *(_QWORD *)(v5 - 128) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 120) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 136) = &v22[-v6];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23AFAFA8C();
  if (!v3)
  {
    if (!v4)
      goto LABEL_7;
    v11 = (uint64_t)v2 + *(_QWORD *)(*v2 + 536);
    v13 = v2[14];
    v12 = v2[15];
    *(_QWORD *)(v5 - 184) = v2[16];
    *(_QWORD *)(v5 - 176) = v12;
    swift_allocObject();
    v14 = sub_23B126EAC(v11, v13, *(_QWORD *)(v5 - 176), *(_QWORD *)(v5 - 184), 0x10000);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v16 = v15;
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    v17 = v16 * 1000000000.0;
    if ((~COERCE__INT64(v16 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v17 > -9.22337204e18)
      {
        if (v17 < 9.22337204e18)
        {
          sub_23AEBEFD4(v14);
          swift_release();
LABEL_7:
          *(_QWORD *)(v5 - 192) = v1;
          AssociatedTypeWitness = swift_getAssociatedTypeWitness();
          v19 = swift_getAssociatedTypeWitness();
          AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          v21 = swift_getAssociatedConformanceWitness();
          *(_QWORD *)(v5 - 112) = AssociatedTypeWitness;
          *(_QWORD *)(v5 - 104) = v19;
          *(_QWORD *)(v5 - 96) = AssociatedConformanceWitness;
          *(_QWORD *)(v5 - 88) = v21;
          type metadata accessor for ReconciliationID();
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

void type metadata accessor for Materialization.MaterializeIgnoredItem()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B134BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B134BD0(a1, a2, a3, a4, 32);
}

uint64_t sub_23B134BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B134BD0(a1, a2, a3, a4, 0x10000);
}

uint64_t sub_23B134BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  return sub_23B126EAC(a1, a2, a3, a4, a5);
}

uint64_t sub_23B134C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B134BD0(a1, a2, a3, a4, 0x400000);
}

unint64_t sub_23B134C40()
{
  unint64_t result;

  result = qword_2569E1B18;
  if (!qword_2569E1B18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569E1B18);
  }
  return result;
}

uint64_t sub_23B134C80(void *a1)
{
  uint64_t *v1;

  return sub_23B134704(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23B134C8C(int a1, int a2, int a3, int a4, int a5, id a6)
{
  uint64_t result;

  if (a6 != (id)1)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B134CC0()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_23B134CD4()
{
  uint64_t v0;

  return sub_23B1347BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23B134CE0()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4CA0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_2Tm_0(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  swift_release();
  a1(*(_QWORD *)(v2 + 24));
  a2(*(_QWORD *)(v2 + 32));
  swift_release();
  return swift_deallocObject();
}

void sub_23B134D48()
{
  sub_23B13487C();
}

void sub_23B134D68()
{
  sub_23B132E54();
}

uint64_t sub_23B134D70()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(sub_23B1C6C98() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_release();
  swift_release();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  sub_23B134E64(*(_QWORD *)(v0 + ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

unint64_t sub_23B134E64(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23B134EA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(sub_23B1C6C98() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B131BA0(a1, *(_QWORD **)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), v1 + v4, *(_QWORD **)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B134F28()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v3 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (((((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v5 + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v12 = *(_QWORD *)(v6 + 64);
  v8 = (id *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness))
      (*(void (**)(id *, uint64_t))(v9 + 8))(v8, AssociatedTypeWitness);
  }
  swift_release();
  swift_release();
  swift_release();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + v7, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v7, AssociatedTypeWitness);
  swift_release();
  sub_23B134E64(*(_QWORD *)(v0 + ((((v12 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

void sub_23B1350E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  swift_getAssociatedTypeWitness();
  v1 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v2 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v6 + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23B131E38(v0 + v3, *(uint64_t **)(v0 + v4), *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8), v0 + v8, *(_QWORD *)(v0 + v9), *(_QWORD *)(v0 + ((v9 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B1351E0()
{
  uint64_t v0;

  return sub_23B130A38(0, *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroyTm_4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B135240(uint64_t a1)
{
  uint64_t v1;

  return sub_23B131698(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B135250(char a1, char a2)
{
  uint64_t v2;

  return sub_23B131970(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23B13525C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B135288()
{
  sub_23B130AD8();
}

void type metadata accessor for Materialization()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B1352B8()
{
  return 0xD000000000000155;
}

unint64_t sub_23B1352D8()
{
  return 0xD000000000000077;
}

unint64_t sub_23B1352F4()
{
  return 0xD000000000000058;
}

unint64_t sub_23B135310()
{
  return 0xD000000000000038;
}

unint64_t sub_23B13532C()
{
  return 0xD0000000000000C5;
}

unint64_t sub_23B135348()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_23B135364()
{
  return 0xD000000000000019;
}

uint64_t sub_23B135380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  uint64_t result;
  unsigned int v13;
  char v14;
  char v15;
  id v16;
  _QWORD v17[6];
  char v18;
  id v19;

  v4 = v3;
  v19 = 0;
  v18 = 2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = &v18;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = &v19;
  *(_DWORD *)(v8 + 48) = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23B14187C;
  *(_QWORD *)(v9 + 24) = v8;
  v17[4] = sub_23AD035D8;
  v17[5] = v9;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_23AAB6470;
  v17[3] = &block_descriptor_216;
  v10 = _Block_copy(v17);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a1 & 1) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v19)
    v13 = 0;
  else
    v13 = v11;
  if (v13 == 1)
  {
    v14 = v18;
    if (v18 != 2)
    {
      swift_release();
      v15 = v14 & 1;
      return v15 & 1;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    v16 = v19;
    swift_willThrow();

    swift_release();
    return v15 & 1;
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_23B135538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  unint64_t result;
  unsigned int v13;
  uint64_t v14;
  char v15;
  id v16;
  _QWORD aBlock[6];
  unsigned int v18;
  __int16 v19;
  id v20;

  v4 = v3;
  v20 = 0;
  v18 = 0;
  v19 = 256;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = &v18;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = &v20;
  *(_DWORD *)(v8 + 48) = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23B141574;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AAB6470;
  aBlock[3] = &block_descriptor_85_1;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a1 & 1) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v20)
    v13 = 0;
  else
    v13 = v11;
  if (v13 == 1)
  {
    if ((v19 & 0x100) == 0)
    {
      v14 = v18;
      v15 = v19;
      swift_release();
      return v14 | ((unint64_t)(v15 & 1) << 32);
    }
    goto LABEL_11;
  }
  if (v20)
  {
    v16 = v20;
    swift_willThrow();

    return swift_release();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23B1356F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t result;
  int v13;
  id v14;
  _QWORD aBlock[6];
  void *v16;
  char v17;
  id v18;

  v4 = v3;
  v18 = 0;
  v16 = 0;
  v17 = 1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = &v16;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = &v18;
  *(_DWORD *)(v8 + 48) = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23B1415A4;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AAB6470;
  aBlock[3] = &block_descriptor_95_0;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v18)
    v13 = 0;
  else
    v13 = (int)v11;
  if (v13 == 1)
  {
    if ((v17 & 1) == 0)
    {
      v11 = v16;
      swift_release();
      return (uint64_t)v11;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    v14 = v18;
    swift_willThrow();

    swift_release();
    return (uint64_t)v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_23B1358B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t result;
  int v13;
  id v14;
  _QWORD aBlock[6];
  void *v16;
  unsigned int v17;
  unsigned __int8 v18;
  id v19;

  v4 = v3;
  v19 = 0;
  v16 = 0;
  v18 = 2;
  v17 = 0;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = &v16;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = &v19;
  *(_DWORD *)(v8 + 48) = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23B141760;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AAB6470;
  aBlock[3] = &block_descriptor_155_0;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v19)
    v13 = 0;
  else
    v13 = (int)v11;
  if (v13 == 1)
  {
    if (((v17 | ((unint64_t)v18 << 32)) & 0xFF00000000) != 0x200000000)
    {
      v11 = v16;
      swift_release();
      return (uint64_t)v11;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    v14 = v19;
    swift_willThrow();

    swift_release();
    return (uint64_t)v11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_23B135A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  uint64_t result;
  unsigned int v13;
  id v14;
  _QWORD v15[6];
  void *v16;
  uint64_t v17;
  int v18;
  id v19;

  v4 = v3;
  v19 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = &v16;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = &v19;
  *(_DWORD *)(v8 + 48) = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23B1418BC;
  *(_QWORD *)(v9 + 24) = v8;
  v15[4] = sub_23AD035D8;
  v15[5] = v9;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_23AAB6470;
  v15[3] = &block_descriptor_226_0;
  v10 = _Block_copy(v15);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v19)
    v13 = 0;
  else
    v13 = v11;
  if (v13 == 1)
  {
    if (v17)
    {
      v10 = v16;
      swift_release();
      return (uint64_t)v10;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    v14 = v19;
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_release();
    return (uint64_t)v10;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_23B135C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned int v11;
  uint64_t result;
  unsigned int v13;
  id v14;
  _QWORD v15[6];
  char v16;
  id v17;

  v4 = v3;
  v17 = 0;
  v16 = 1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = &v16;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = &v17;
  *(_DWORD *)(v8 + 48) = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23B14124C;
  *(_QWORD *)(v9 + 24) = v8;
  v15[4] = sub_23AD035D8;
  v15[5] = v9;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_23AAB6470;
  v15[3] = &block_descriptor_18_3;
  v10 = _Block_copy(v15);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v4, sel_performWithFlags_action_, a1, v10);
  _Block_release(v10);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a1 & 1) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v17)
    v13 = 0;
  else
    v13 = v11;
  if (v13 == 1)
  {
    if ((v16 & 1) == 0)
      return swift_release();
    goto LABEL_11;
  }
  if (v17)
  {
    v14 = v17;
    swift_willThrow();

    return swift_release();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23B135DF8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);

  v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  LOBYTE(a2) = v3(a2);
  swift_release();
  return a2 & 1;
}

uint64_t sub_23B135E40(uint64_t a1, _BYTE *a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v5;

  a3(&v5);
  *a2 = v5;
  return 1;
}

uint64_t sub_23B135EB4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  int v4;
  uint64_t v6;

  a3(&v6);
  v4 = v6;
  *(_BYTE *)(a2 + 4) = BYTE4(v6);
  *(_DWORD *)a2 = v4;
  *(_BYTE *)(a2 + 5) = 0;
  return 1;
}

uint64_t sub_23B135F34(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v5;

  a3(&v5);
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = 0;
  return 1;
}

uint64_t sub_23B135FAC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  int v4;
  char v5;
  uint64_t v7;
  int v8;
  char v9;

  a3(&v7);
  v4 = v8;
  v5 = v9;
  *(_QWORD *)a2 = v7;
  *(_BYTE *)(a2 + 12) = v5;
  *(_DWORD *)(a2 + 8) = v4;
  return 1;
}

uint64_t sub_23B136030(uint64_t a1, uint64_t a2, void (*a3)(__int128 *__return_ptr))
{
  int v4;
  __int128 v6;
  int v7;

  a3(&v6);
  v4 = v7;
  *(_OWORD *)a2 = v6;
  *(_DWORD *)(a2 + 16) = v4;
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_23B1360B4(uint64_t a1, _BYTE *a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v5;

  a3(&v5);
  *a2 = 0;
  return 1;
}

id sub_23B136124(char *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  id v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  void (*v24)(_BYTE *, uint64_t);
  char *v25;
  objc_class *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  _BYTE *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  id v48;
  _QWORD *v49;
  os_log_t v50;
  void *v51;
  void (*v52)(char *, uint64_t);
  _BYTE v54[12];
  int v55;
  os_log_t v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  _BYTE *v65;
  uint64_t v66;
  char *v67;
  objc_super v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72[3];

  v72[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_23B1C5E4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v65 = &v54[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23B1C5A08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v64 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v54[-v10];
  v12 = &v1[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL];
  v13 = *(void (**)(char *, uint64_t))(v7 + 16);
  v66 = v14;
  v13(&v1[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL], (uint64_t)a1);
  v71 = MEMORY[0x24BEE4AF8];
  v67 = v1;
  sub_23B1C5978();
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = v11;
  v17 = (void *)sub_23B1C5954();
  v72[0] = 0;
  v18 = objc_msgSend(v15, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v17, 0, 1, v72);

  v19 = v72[0];
  if (v18)
  {
    v20 = v66;
    v21 = sub_23B1C6704();
    v22 = v19;

    v23 = sub_23B13F958(v21, 0x6573616261746164, 0xEB0000000062642FLL);
    swift_bridgeObjectRelease();
    sub_23AD7D6F0(v23);
    v24 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v24(v16, v20);
    v25 = v67;
    *(_QWORD *)&v67[OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_fpDatabaseURLs] = v71;

    v26 = (objc_class *)type metadata accessor for FPFSSQLRestoreEngine(0);
    v68.receiver = v25;
    v68.super_class = v26;
    v27 = objc_msgSendSuper2(&v68, sel_init);
    v24(a1, v20);
  }
  else
  {
    v59 = v7;
    v60 = v12;
    v61 = v4;
    v62 = a1;
    v63 = v3;
    v28 = v72[0];
    v29 = (void *)sub_23B1C587C();

    swift_willThrow();
    v30 = (id)fpfs_current_or_default_log();
    v31 = v65;
    sub_23B1C5E58();
    v32 = v64;
    v33 = v16;
    v34 = v66;
    ((void (*)(char *, char *, uint64_t))v13)(v64, v16, v66);
    v35 = v29;
    v36 = v29;
    v37 = sub_23B1C5E40();
    v38 = sub_23B1C6AB8();
    v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      v40 = swift_slowAlloc();
      v57 = (_QWORD *)swift_slowAlloc();
      v58 = (void *)swift_slowAlloc();
      v72[0] = v58;
      *(_DWORD *)v40 = 136315394;
      v56 = v37;
      v41 = (void *)sub_23B1C5954();
      v42 = objc_msgSend(v41, sel_fp_shortDescription);
      v55 = v39;
      v43 = v42;

      v44 = sub_23B1C63E0();
      v46 = v45;

      v70 = sub_23AABEC68(v44, v46, (uint64_t *)v72);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v47 = *(void (**)(char *, uint64_t))(v59 + 8);
      v47(v32, v34);
      *(_WORD *)(v40 + 12) = 2112;
      swift_getErrorValue();
      v48 = sub_23B0D9CF0(v69);
      v70 = (uint64_t)v48;
      sub_23B1C6CBC();
      v49 = v57;
      *v57 = v48;

      v50 = v56;
      _os_log_impl(&dword_23AA66000, v56, (os_log_type_t)v55, "Failed to enumerate %s: %@", (uint8_t *)v40, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v49, -1, -1);
      v51 = v58;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v51, -1, -1);
      MEMORY[0x23B8614BC](v40, -1, -1);

      v47(v62, v34);
      (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v31, v63);
      v47(v33, v34);
      v47(v60, v34);
    }
    else
    {

      v52 = *(void (**)(char *, uint64_t))(v59 + 8);
      v52(v32, v34);

      v52(v62, v34);
      (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v31, v63);
      v52(v16, v34);
      v52(v60, v34);
    }

    type metadata accessor for FPFSSQLRestoreEngine(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v27;
}

uint64_t sub_23B1367B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint8_t *v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  __int128 v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  id v66;
  void *v67;
  unsigned int v68;
  id v69;
  char *v70;
  uint64_t v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  NSObject *v84;
  os_log_type_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  unsigned __int8 v107;
  uint64_t result;
  id v109;
  char *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  id v114;
  NSObject *v115;
  os_log_type_t v116;
  _BOOL4 v117;
  uint8_t *v118;
  uint8_t *v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t (*v124)(char *);
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  id v128;
  id v129;
  id v130;
  _QWORD v131[6];
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  void (*v147)(uint64_t, char *, uint64_t);
  void (*v148)(char *, uint64_t);
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t (*v154)(char *);
  void (*v155)(char *, char *, uint64_t);
  char *v156;
  char *v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  uint64_t v160;
  char *v161;
  void (*v162)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v163;
  uint64_t aBlock[6];
  uint64_t v165;
  char v166;

  v142 = a2;
  v163 = sub_23B1C5A08();
  v3 = *(_QWORD *)(v163 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x24BDAC7A8](v163);
  v131[0] = (char *)v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v131[2] = (char *)v131 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v143 = (char *)v131 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v146 = (char *)v131 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v156 = (char *)v131 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v161 = (char *)v131 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v131 - v19;
  v159 = sub_23B1C5E4C();
  v21 = *(_QWORD *)(v159 - 8);
  v22 = MEMORY[0x24BDAC7A8](v159);
  v131[1] = (char *)v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v131[3] = (char *)v131 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v149 = (char *)v131 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v152 = (char *)v131 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)v131 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v145 = (char *)v131 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v131 - v35;
  v37 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v38 = sub_23B1C5E40();
  v39 = sub_23B1C6AB8();
  v40 = os_log_type_enabled(v38, v39);
  v139 = a1;
  if (v40)
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    _os_log_impl(&dword_23AA66000, v38, v39, "Checking if provider is iCloud Drive on FPFS", v41, 2u);
    v42 = v41;
    a1 = v139;
    MEMORY[0x23B8614BC](v42, -1, -1);
  }
  v141 = v32;

  v158 = *(void (**)(char *, uint64_t))(v21 + 8);
  v158(v36, v159);
  v43 = *(_QWORD *)(a1 + 16);
  v160 = v43;
  if (v43)
  {
    v44 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v45 = *(_QWORD *)(v3 + 72);
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    v47 = v43;
    v48 = v161;
    while (1)
    {
      v49 = v163;
      v46(v20, v44, v163);
      v162 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v162(v20, 0, 1, v49);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v20, 1, v49) == 1)
        break;
      v50 = v163;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v48, v20, v163);
      sub_23B1382BC();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v48, v50);
      v44 += v45;
      if (!--v47)
        goto LABEL_9;
    }
  }
  else
  {
    v162 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v162(v20, 1, 1, v163);
  }
  v51 = v139;
  swift_bridgeObjectRelease();
  v52 = v156;
  v53 = v149;
  v54 = v160;
  if (v160)
  {
    v55 = *(unsigned __int8 *)(v3 + 80);
    v56 = (char *)(v51 + ((v55 + 32) & ~v55));
    v150 = *(_QWORD *)(v3 + 72);
    v57 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v131[5] = &v166;
    v137 = v55 | 7;
    v138 = (v55 + 24) & ~v55;
    v136 = (v4 + v138 + 7) & 0xFFFFFFFFFFFFFFF8;
    v135 = (v136 + 15) & 0xFFFFFFFFFFFFFFF8;
    v134 = (v135 + 15) & 0xFFFFFFFFFFFFFFF8;
    v133 = v134 + 8;
    swift_bridgeObjectRetain();
    v154 = 0;
    v153 = 0;
    *(_QWORD *)&v58 = 136315138;
    v140 = v58;
    v131[4] = MEMORY[0x24BEE4AD8] + 8;
    v132 = 0x800000023B21E940;
    v144 = v18;
    v155 = v57;
    v151 = v3;
    while (1)
    {
      v160 = v54;
      v64 = v163;
      v57(v18, v56, v163);
      v162(v18, 0, 1, v64);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v18, 1, v64) == 1)
        break;
      v157 = v56;
      v65 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v65(v52, v18, v163);
      v66 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      sub_23B1C59E4();
      v67 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v68 = objc_msgSend(v66, sel_fileExistsAtPath_, v67);

      v69 = (id)fpfs_current_or_default_log();
      if (v68)
      {
        v147 = (void (*)(uint64_t, char *, uint64_t))v65;
        v70 = v145;
        sub_23B1C5E58();
        v71 = v163;
        v72 = v146;
        v57(v146, v52, v163);
        v73 = sub_23B1C5E40();
        v74 = sub_23B1C6AB8();
        if (os_log_type_enabled(v73, v74))
        {
          v75 = (uint8_t *)swift_slowAlloc();
          v76 = swift_slowAlloc();
          aBlock[0] = v76;
          *(_DWORD *)v75 = v140;
          v148 = (void (*)(char *, uint64_t))(v75 + 4);
          v77 = (void *)sub_23B1C5954();
          v78 = objc_msgSend(v77, sel_fp_shortDescription);

          v79 = sub_23B1C63E0();
          v81 = v80;

          v165 = sub_23AABEC68(v79, v81, aBlock);
          sub_23B1C6CBC();
          v52 = v156;
          swift_bridgeObjectRelease();
          v148 = *(void (**)(char *, uint64_t))(v151 + 8);
          v148(v146, v71);
          _os_log_impl(&dword_23AA66000, v73, v74, "Patching database at %s", v75, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v76, -1, -1);
          MEMORY[0x23B8614BC](v75, -1, -1);

          v82 = v145;
        }
        else
        {
          v148 = *(void (**)(char *, uint64_t))(v151 + 8);
          v148(v72, v71);

          v82 = v70;
        }
        v158(v82, v159);
        v97 = swift_allocObject();
        strcpy((char *)(v97 + 16), "openDatabase");
        *(_BYTE *)(v97 + 29) = 0;
        *(_WORD *)(v97 + 30) = -5120;
        v98 = sub_23B139238(v52);
        v99 = qword_2542EE110;
        v100 = *(void **)(v98 + qword_2542EE110);
        swift_beginAccess();
        *(_QWORD *)(v97 + 16) = 0xD000000000000010;
        *(_QWORD *)(v97 + 24) = v132;
        swift_retain();
        v101 = v100;
        swift_bridgeObjectRelease();
        v165 = -1;
        v102 = v161;
        v103 = v163;
        v155(v161, v52, v163);
        v104 = swift_allocObject();
        *(_QWORD *)(v104 + 16) = v97;
        v147(v104 + v138, v102, v103);
        *(_QWORD *)(v104 + v136) = v98;
        *(_QWORD *)(v104 + v135) = v142;
        *(_QWORD *)(v104 + v134) = &v165;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_23AAB7948((uint64_t)v154);
        v105 = swift_allocObject();
        *(_QWORD *)(v105 + 16) = sub_23B14117C;
        *(_QWORD *)(v105 + 24) = v104;
        aBlock[4] = (uint64_t)sub_23AA7E774;
        aBlock[5] = v105;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_23AAB6470;
        aBlock[3] = (uint64_t)&block_descriptor_40;
        v106 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        v107 = objc_msgSend(v101, sel_performWithFlags_action_, 9, v106);
        _Block_release(v106);
        LOBYTE(v106) = swift_isEscapingClosureAtFileLocation();
        result = swift_release();
        if ((v106 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        if ((v107 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v125 = *(_QWORD *)(v97 + 16);
          v126 = v165;
          sub_23B1411F8();
          swift_allocError();
          *v127 = v126;
          swift_bridgeObjectRetain();

          v128 = (id)fpfs_adopt_log();
          sub_23ADD4598();
          if ((*(_BYTE *)(v98 + qword_2542EDE58) & 1) == 0)
          {
            v129 = *(id *)(v98 + 64);
            sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23ACF20E0, v98);

          }
          v130 = (id)fpfs_adopt_log();

          swift_release_n();
          v148(v156, v163);
          swift_release();
          swift_release();
          return v125;
        }
        v154 = (uint64_t (*)(char *))v101;
        v109 = (id)fpfs_current_or_default_log();
        v110 = v141;
        sub_23B1C5E58();
        v111 = sub_23B1C5E40();
        v112 = sub_23B1C6AB8();
        if (os_log_type_enabled(v111, v112))
        {
          v113 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v113 = 0;
          _os_log_impl(&dword_23AA66000, v111, v112, "Marking domain as needs-reindexing", v113, 2u);
          MEMORY[0x23B8614BC](v113, -1, -1);
        }

        v158(v110, v159);
        v52 = v156;
        sub_23B138A48((uint64_t)v156);
        v114 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v115 = sub_23B1C5E40();
        v116 = sub_23B1C6A94();
        v117 = os_log_type_enabled(v115, v116);
        v3 = v151;
        if (v117)
        {
          v118 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v118 = 0;
          _os_log_impl(&dword_23AA66000, v115, v116, "Flushing database...", v118, 2u);
          v119 = v118;
          v52 = v156;
          MEMORY[0x23B8614BC](v119, -1, -1);
        }

        v158(v152, v159);
        strcpy((char *)(v97 + 16), "flushDatabase");
        *(_WORD *)(v97 + 30) = -4864;
        swift_bridgeObjectRelease();
        v120 = *(id *)(v98 + v99);
        sub_23B135C4C(5, (uint64_t)sub_23B13C53C, 0);
        v63 = v160;

        sub_23B13870C((uint64_t)v52, 0, 0, 1701736292, 0xE400000000000000);
        v121 = (id)fpfs_adopt_log();
        sub_23ADD4598();
        if ((*(_BYTE *)(v98 + qword_2542EDE58) & 1) == 0)
        {
          v122 = *(id *)(v98 + 64);
          sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23ACF20E0, v98);

        }
        v57 = v155;
        v123 = (id)fpfs_adopt_log();

        swift_release_n();
        v148(v52, v163);
        swift_release();
        v154 = sub_23B14117C;
        v153 = v104;
        v18 = v144;
        v53 = v149;
      }
      else
      {
        sub_23B1C5E58();
        v83 = v143;
        v57(v143, v52, v163);
        v84 = sub_23B1C5E40();
        v85 = sub_23B1C6AB8();
        if (os_log_type_enabled(v84, v85))
        {
          v86 = v83;
          v87 = swift_slowAlloc();
          v88 = swift_slowAlloc();
          aBlock[0] = v88;
          *(_DWORD *)v87 = v140;
          v89 = (void *)sub_23B1C5954();
          v90 = objc_msgSend(v89, sel_fp_shortDescription);

          v91 = sub_23B1C63E0();
          v93 = v92;

          v52 = v156;
          *(_QWORD *)(v87 + 4) = sub_23AABEC68(v91, v93, aBlock);
          swift_bridgeObjectRelease();
          v59 = *(void (**)(char *, uint64_t))(v3 + 8);
          v94 = v86;
          v18 = v144;
          v95 = v163;
          v59(v94, v163);
          _os_log_impl(&dword_23AA66000, v84, v85, "No file at %s, so no need to patch.", (uint8_t *)v87, 0xCu);
          swift_arrayDestroy();
          v96 = v88;
          v53 = v149;
          MEMORY[0x23B8614BC](v96, -1, -1);
          MEMORY[0x23B8614BC](v87, -1, -1);

          v158(v53, v159);
          v61 = v52;
          v62 = v95;
          v57 = v155;
        }
        else
        {

          v59 = *(void (**)(char *, uint64_t))(v3 + 8);
          v60 = v163;
          v59(v83, v163);
          v158(v53, v159);
          v61 = v52;
          v62 = v60;
        }
        v59(v61, v62);
        v63 = v160;
      }
      v56 = &v157[v150];
      v54 = v63 - 1;
      if (!v54)
        goto LABEL_32;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v154 = 0;
    v153 = 0;
LABEL_32:
    v162(v18, 1, 1, v163);
  }
  v124 = v154;
  swift_bridgeObjectRelease();
  sub_23AAB7948((uint64_t)v124);
  return 0;
}

id sub_23B1381A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSSQLRestoreEngine(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23B138228()
{
  return type metadata accessor for FPFSSQLRestoreEngine(0);
}

uint64_t type metadata accessor for FPFSSQLRestoreEngine(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2569E8968);
}

uint64_t sub_23B138244()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5A08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_23B1382BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v0 = sub_23B1C5E4C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23B1C5A08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v40 - v9;
  sub_23B1C599C();
  sub_23B1C599C();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  v12 = sub_23AB6BC38((uint64_t)v10, 0);
  v11(v10, v4);
  if (!v12)
    return;
  v13 = (void *)sub_23AB60CA8();
  v14 = sub_23B1C63E0();
  v16 = v15;

  if (v14 != 0xD00000000000002BLL || v16 != 0x800000023B1F8300)
  {
    v17 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_6;
    v35 = (void *)sub_23AB60CA8();
    v36 = sub_23B1C63E0();
    v38 = v37;

    if (v36 != 0xD000000000000032 || v38 != 0x800000023B1F8330)
    {
      v39 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
      {

        return;
      }
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
LABEL_6:
  v18 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v19 = v12;
  v20 = sub_23B1C5E40();
  v21 = sub_23B1C6A94();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v44 = v42;
    *(_DWORD *)v22 = 136315138;
    v40 = v22 + 4;
    v41 = v22;
    v23 = v19;
    v24 = (void *)sub_23AB60CA8();
    v25 = sub_23B1C63E0();
    v27 = v26;

    v19 = v23;
    v43 = sub_23AABEC68(v25, v27, &v44);
    sub_23B1C6CBC();

    swift_bridgeObjectRelease();
    v28 = v41;
    _os_log_impl(&dword_23AA66000, v20, v21, "Importing domain in provider %s. Turning on iCloud Drive on FPFS.", v41, 0xCu);
    v29 = v42;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v29, -1, -1);
    MEMORY[0x23B8614BC](v28, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_23B1C63E0();
  v30 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v31 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v30, sel_initWithSuiteName_, v31);

  if (v32)
  {
    v33 = (void *)*MEMORY[0x24BDC80C8];
    if ((objc_msgSend(v32, sel_BOOLForKey_, *MEMORY[0x24BDC80C8]) & 1) == 0)
    {
      objc_msgSend(v32, sel_setInteger_forKey_, 0, *MEMORY[0x24BDC80D0]);
      v34 = v33;
      objc_msgSend(v32, sel_setBool_forKey_, 1, v34);

    }
  }

}

void sub_23B13870C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t inited;
  uint64_t v22;
  void *v23;
  _DWORD v25[4];

  v9 = sub_23B1C5A08();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25[-2] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v25[-2] - v14;
  sub_23B1C599C();
  sub_23B1C599C();
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  v18 = sub_23AB6BC38((uint64_t)v15, 0);
  v16(v15, v9);
  if (v18)
  {
    sub_23B1C63E0();
    strcpy((char *)v25, "d2d_restore_");
    BYTE1(v25[3]) = 0;
    HIWORD(v25[3]) = -5120;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v17 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();

  }
  else
  {
    v17 = (void *)sub_23B1C63BC();
  }
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v20 = objc_msgSend(v19, sel_sessionForProviderID_version_, v17, 0);

  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5600);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23B1D2330;
    strcpy((char *)v25, "operationType");
    HIWORD(v25[3]) = -4864;
    v22 = MEMORY[0x24BEE0D00];
    sub_23B1C6E84();
    *(_QWORD *)(inited + 96) = v22;
    *(_QWORD *)(inited + 72) = a4;
    *(_QWORD *)(inited + 80) = a5;
    strcpy((char *)v25, "missedItems");
    v25[3] = -352321536;
    swift_bridgeObjectRetain();
    sub_23B1C6E84();
    *(_QWORD *)(inited + 168) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 144) = a3;
    sub_23AAE9FE8(inited);
    v23 = (void *)sub_23B1C61F4();
    swift_bridgeObjectRelease();
    if (a2)
      a2 = (void *)sub_23B1C5870();
    objc_msgSend(v20, sel_postReportWithCategory_type_payload_error_, 1, 1, v23, a2);

  }
}

uint64_t sub_23B138A48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  void *v39;
  id v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint8_t *v51;
  id v52;
  char *v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v64;
  void *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[2];

  v2 = sub_23B1C5E4C();
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v72 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v73 = (char *)&v66 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v76 = (char *)&v66 - v7;
  v8 = sub_23B1C5A08();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v71 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v74 = (char *)&v66 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v75 = (char *)&v66 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v66 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v66 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v66 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v66 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v66 - v28;
  v30 = a1;
  sub_23B1C599C();
  sub_23B1C599C();
  v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v32 = v8;
  v31(v27, v8);
  v33 = (char *)sub_23AB6BC38((uint64_t)v29, 0);
  v69 = v18;
  v70 = v30;
  v68 = v24;
  v76 = v33;
  v31(v29, v8);
  if (v76)
  {
    v34 = (char *)objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v35 = v31;
    sub_23B1C599C();
    sub_23B1C599C();
    v31(v21, v8);
    v36 = v68;
    sub_23B1C599C();
    v31(v27, v8);
    sub_23B1C63E0();
    v37 = v69;
    sub_23B1C5978();
    swift_bridgeObjectRelease();
    v38 = v75;
    sub_23B1C5978();
    sub_23B1C59E4();
    v39 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v72 = v34;
    objc_msgSend(v34, sel_fp_createPathIfNeeded_, v39);

    v40 = (id)fpfs_current_or_default_log();
    v41 = v73;
    sub_23B1C5E58();
    v42 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v43 = v74;
    v42(v74, v38, v32);
    v44 = sub_23B1C5E40();
    v45 = sub_23B1C6AB8();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v80[0] = v47;
      *(_DWORD *)v46 = 136315138;
      v67 = v31;
      v48 = sub_23B1C59E4();
      v79 = sub_23AABEC68(v48, v49, v80);
      v35 = v67;
      v36 = v68;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v35(v43, v32);
      _os_log_impl(&dword_23AA66000, v44, v45, "Marking domain as needing reindexing at %s", v46, 0xCu);
      swift_arrayDestroy();
      v50 = v47;
      v37 = v69;
      MEMORY[0x23B8614BC](v50, -1, -1);
      v51 = v46;
      v38 = v75;
      MEMORY[0x23B8614BC](v51, -1, -1);
    }
    else
    {
      v31(v43, v32);
    }

    (*(void (**)(char *, uint64_t))(v77 + 8))(v41, v78);
    v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE50]), sel_init);
    v65 = (void *)sub_23B1C5954();
    objc_msgSend(v64, sel_writeToURL_atomically_, v65, 0);

    v35(v38, v32);
    v35(v37, v32);
    return ((uint64_t (*)(char *, uint64_t))v35)(v36, v32);
  }
  else
  {
    v67 = v31;
    v52 = (id)fpfs_current_or_default_log();
    v53 = v72;
    sub_23B1C5E58();
    v54 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v71, v70, v8);
    v55 = sub_23B1C5E40();
    v56 = sub_23B1C6AA0();
    v57 = os_log_type_enabled(v55, v56);
    v58 = v78;
    if (v57)
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      v80[0] = v60;
      *(_DWORD *)v59 = 136315138;
      sub_23B141268();
      v61 = sub_23B1C7304();
      v79 = sub_23AABEC68(v61, v62, v80);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v67(v54, v32);
      _os_log_impl(&dword_23AA66000, v55, v56, "No providerID found for url %s", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v60, -1, -1);
      MEMORY[0x23B8614BC](v59, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v53, v78);
    }
    else
    {
      v67(v54, v32);

      return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v53, v58);
    }
  }
}

uint64_t sub_23B139238(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  const void *v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  _QWORD aBlock[6];
  char *v71;

  v71 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v1);
  v69 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23B1C5A08();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v59 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)&v59 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v59 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v68 = (char *)&v59 - v16;
  sub_23B1C590C();
  v65 = v15;
  sub_23B1C5978();
  sub_23B1C5978();
  aBlock[4] = sub_23AFE01B4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B135DF8;
  aBlock[3] = &block_descriptor_206_1;
  v17 = _Block_copy(aBlock);
  sub_23B1C599C();
  v18 = v10;
  v63 = v10;
  sub_23B1C599C();
  v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v19(v7, v3);
  v20 = v19;
  v66 = v19;
  v21 = sub_23B1C5930();
  v23 = v22;
  v61 = v3;
  v20(v18, v3);
  v62 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v62(v7, v15, v3);
  type metadata accessor for DocumentWharf();
  swift_allocObject();
  v64 = v17;
  _Block_copy(v17);
  v24 = sub_23B1AD8A4(v21, v23, (uint64_t)v7, v17, 0x100000000uLL, 0, 0);
  v25 = (void *)objc_opt_self();
  swift_retain();
  v26 = objc_msgSend(v25, sel_defaultStore);
  v27 = (int)objc_msgSend(v26, sel_softConcurrentOperationLimit);
  LODWORD(v7) = objc_msgSend(v26, sel_hardConcurrentOperationLimit);

  type metadata accessor for JobLimit();
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = v27;
  v28[4] = v27;
  v28[5] = (int)v7;
  v29 = objc_msgSend(v25, (SEL)&selRef_initWithPhysicalLocation_rootURL_error_);
  v30 = (int)objc_msgSend(v29, sel_softConcurrentContentUpdateLimit);
  LODWORD(v27) = objc_msgSend(v29, sel_hardConcurrentContentUpdateLimit);

  v31 = (_QWORD *)swift_allocObject();
  v31[2] = 0;
  v31[3] = v30;
  v31[4] = v30;
  v31[5] = (int)v27;
  v32 = objc_msgSend(v25, (SEL)&selRef_initWithPhysicalLocation_rootURL_error_);
  v33 = (int)objc_msgSend(v32, sel_softConcurrentMetadataOnlyUpdateLimit);
  LODWORD(v30) = objc_msgSend(v32, sel_hardConcurrentMetadataOnlyUpdateLimit);

  v34 = (_QWORD *)swift_allocObject();
  v34[2] = 0;
  v34[3] = v33;
  v34[4] = v33;
  v34[5] = (int)v30;
  v35 = objc_msgSend(v25, (SEL)&selRef_initWithPhysicalLocation_rootURL_error_);
  v36 = (int)objc_msgSend(v35, sel_softConcurrentProvideFileLimit);
  LODWORD(v33) = objc_msgSend(v35, sel_hardConcurrentProvideFileLimit);

  v37 = (_QWORD *)swift_allocObject();
  v37[2] = 0;
  v37[3] = v36;
  v37[4] = v36;
  v37[5] = (int)v33;
  type metadata accessor for RestoreUpgradeSchemaVFSFileTree(0);
  swift_allocObject();
  v60 = (_QWORD *)sub_23B14910C(v24, (uint64_t)v28, (uint64_t)v31, (uint64_t)v34, (uint64_t)v37);
  swift_retain();
  v38 = objc_msgSend(v25, sel_defaultStore);
  v39 = (int)objc_msgSend(v38, sel_softConcurrentOperationLimit);
  LODWORD(v31) = objc_msgSend(v38, sel_hardConcurrentOperationLimit);

  v40 = (_QWORD *)swift_allocObject();
  v40[2] = 0;
  v40[3] = v39;
  v40[4] = v39;
  v40[5] = (int)v31;
  v41 = objc_msgSend(v25, sel_defaultStore);
  v42 = (int)objc_msgSend(v41, sel_softConcurrentContentUpdateLimit);
  LODWORD(v39) = objc_msgSend(v41, sel_hardConcurrentContentUpdateLimit);

  v43 = (_QWORD *)swift_allocObject();
  v43[2] = 0;
  v43[3] = v42;
  v43[4] = v42;
  v43[5] = (int)v39;
  v44 = objc_msgSend(v25, sel_defaultStore);
  v45 = (int)objc_msgSend(v44, sel_softConcurrentMetadataOnlyUpdateLimit);
  LODWORD(v42) = objc_msgSend(v44, sel_hardConcurrentMetadataOnlyUpdateLimit);

  v46 = (_QWORD *)swift_allocObject();
  v46[2] = 0;
  v46[3] = v45;
  v46[4] = v45;
  v46[5] = (int)v42;
  v47 = objc_msgSend(v25, sel_defaultStore);
  v48 = (int)objc_msgSend(v47, sel_softConcurrentProvideFileLimit);
  LODWORD(v42) = objc_msgSend(v47, sel_hardConcurrentProvideFileLimit);

  v49 = (_QWORD *)swift_allocObject();
  v49[2] = 0;
  v49[3] = v48;
  v49[4] = v48;
  v49[5] = (int)v42;
  type metadata accessor for RestoreUpgradeSchemaFPFileTree(0);
  swift_allocObject();
  v50 = sub_23B1490F0(v24, (uint64_t)v40, (uint64_t)v43, (uint64_t)v46, (uint64_t)v49);
  v51 = (uint64_t)v63;
  v52 = v61;
  v62(v63, v71, v61);
  v53 = type metadata accessor for TelemetrySignposter(0);
  v54 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v69, 1, 1, v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69F0);
  v55 = swift_allocObject();
  v56 = sub_23AE34914(v51, v60, v50, v54, 0, 0x65726F74736572, 0xE700000000000000, v55);
  swift_release();
  _Block_release(v64);
  v57 = v66;
  v66(v67, v52);
  v57(v65, v52);
  v57(v68, v52);
  return v56;
}

uint64_t sub_23B139944(char *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  char *v50;
  uint8_t *v51;
  uint8_t *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  void *v55;
  NSObject *v56;
  char *v57;
  id v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  void *v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  char *v81;
  uint8_t *v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t *v88;
  uint64_t v89;
  id v90;
  char *v91;
  id v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  id v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  void *v105;
  void *v106;
  id v108;
  char *v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void *v117;
  uint64_t *v118;
  uint64_t v119;
  id v120;
  id v121;
  char *v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  id v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  id v138;
  char *v139;
  NSObject *v140;
  os_log_type_t v141;
  uint8_t *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t *v146;
  id v147;
  id v148;
  NSObject *v149;
  os_log_type_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  id v156;
  uint64_t v157;
  id v158;
  NSObject *v159;
  os_log_type_t v160;
  uint8_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  id v165;
  char *v166;
  os_log_type_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  id v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  id v181;
  NSObject *v182;
  os_log_type_t v183;
  uint8_t *v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  uint64_t *v188;
  uint64_t v189;
  id v190;
  char *v191;
  id v192;
  NSObject *v193;
  os_log_type_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  id v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  id v205;
  NSObject *v206;
  os_log_type_t v207;
  uint8_t *v208;
  uint64_t v209;
  id v210;
  NSObject *v211;
  os_log_type_t v212;
  uint8_t *v213;
  _QWORD v214[2];
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t *v225;
  char *v226;
  _QWORD *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(char *, uint64_t);
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  id v242[3];
  id v243[3];
  id v244[3];
  uint64_t v245[3];
  id v246[3];
  id aBlock[11];

  v224 = a5;
  v225 = a6;
  v227 = a4;
  v229 = a3;
  aBlock[9] = *(id *)MEMORY[0x24BDAC8D0];
  v230 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v230 - 8);
  v9 = MEMORY[0x24BDAC7A8](v230);
  v216 = (char *)v214 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v218 = (char *)v214 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v221 = (char *)v214 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v223 = (char *)v214 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v226 = (char *)v214 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v228 = (char *)v214 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v214 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v214[1] = (char *)v214 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v214[0] = (char *)v214 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v215 = (char *)v214 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v217 = (char *)v214 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v219 = (char *)v214 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v220 = (char *)v214 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v222 = (char *)v214 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)v214 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38);
  v43 = (char *)v214 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)v214 - v44;
  v233 = a2 + 16;
  v46 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v47 = sub_23B1C5E40();
  v48 = sub_23B1C6A94();
  v49 = os_log_type_enabled(v47, v48);
  v231 = a2;
  if (v49)
  {
    v50 = a1;
    v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v51 = 0;
    _os_log_impl(&dword_23AA66000, v47, v48, "Disabling foreign keys...", v51, 2u);
    v52 = v51;
    a1 = v50;
    a2 = v231;
    MEMORY[0x23B8614BC](v52, -1, -1);
  }

  v53 = *(void (**)(char *, uint64_t))(v8 + 8);
  v54 = v230;
  v232 = v53;
  v53(v45, v230);
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = 0xD000000000000012;
  *(_QWORD *)(a2 + 24) = 0x800000023B21E960;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_23B135364;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_21_2;
  v55 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v56 = objc_msgSend(a1, sel_executeSwift_error_, v55, aBlock);
  _Block_release(v55);
  v57 = (char *)aBlock[0];
  v58 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  if (!(_DWORD)v56)
  {
    v63 = (void *)sub_23B1C587C();

    swift_willThrow();
    v64 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v65 = v63;
    v66 = sub_23B1C5E40();
    v67 = sub_23B1C6AA0();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc();
      v227 = (_QWORD *)swift_slowAlloc();
      v228 = (char *)swift_slowAlloc();
      aBlock[0] = v228;
      *(_DWORD *)v68 = 136315394;
      swift_beginAccess();
      v69 = *(_QWORD *)(a2 + 16);
      v70 = *(_QWORD *)(v231 + 24);
      swift_bridgeObjectRetain();
      v246[0] = (id)sub_23AABEC68(v69, v70, (uint64_t *)aBlock);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2112;
      swift_getErrorValue();
      v71 = sub_23B0D9CF0(v239);
      v246[0] = v71;
      a2 = v231;
      sub_23B1C6CBC();
      v72 = v227;
      *v227 = v71;

      _os_log_impl(&dword_23AA66000, v66, v67, "[%s] Failed to disable foreign keys: %@", (uint8_t *)v68, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v72, -1, -1);
      v73 = v228;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v73, -1, -1);
      MEMORY[0x23B8614BC](v68, -1, -1);

      v232(v23, v230);
    }
    else
    {
      swift_release();

      v232(v23, v54);
    }
    swift_beginAccess();
    v74 = *(_QWORD *)(a2 + 16);
    v75 = *(_QWORD *)(a2 + 24);
    v76 = v63;
    swift_bridgeObjectRetain();
    sub_23B13870C(v229, v63, -1, v74, v75);

    swift_bridgeObjectRelease();
    return 0;
  }
  v59 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v60 = sub_23B1C5E40();
  v61 = sub_23B1C6A94();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v62 = 0;
    _os_log_impl(&dword_23AA66000, v60, v61, "Updating history table...", v62, 2u);
    MEMORY[0x23B8614BC](v62, -1, -1);
  }

  v232(v43, v54);
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = 0xD000000000000014;
  *(_QWORD *)(a2 + 24) = 0x800000023B21E980;
  swift_bridgeObjectRelease();
  sub_23B13BC08((uint64_t)v227);
  v77 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v78 = sub_23B1C5E40();
  v79 = sub_23B1C6A94();
  if (os_log_type_enabled(v78, v79))
  {
    v81 = a1;
    v82 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v82 = 0;
    _os_log_impl(&dword_23AA66000, v78, v79, "Patching reconciliation table...", v82, 2u);
    v83 = v82;
    a1 = v81;
    a2 = v231;
    MEMORY[0x23B8614BC](v83, -1, -1);
  }

  v232(v40, v54);
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = 0xD000000000000018;
  *(_QWORD *)(a2 + 24) = 0x800000023B21E9A0;
  swift_bridgeObjectRelease();
  v84 = v224;
  sub_23B13BD34(a1, v224);
  v86 = v85;
  if (v85 >= 1)
  {
    *v225 = v85;
    sub_23B1411F8();
    v87 = (void *)swift_allocError();
    *v88 = v86;
    swift_willThrow();
    v89 = v231;
    v90 = (id)fpfs_current_or_default_log();
    v91 = v226;
    sub_23B1C5E58();
    swift_retain();
    v92 = v87;
    v93 = sub_23B1C5E40();
    v94 = sub_23B1C6AA0();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = swift_slowAlloc();
      v227 = (_QWORD *)swift_slowAlloc();
      v231 = swift_slowAlloc();
      v246[0] = (id)v231;
      *(_DWORD *)v95 = 136315394;
      swift_beginAccess();
      v228 = a1;
      v96 = *(_QWORD *)(v89 + 16);
      v97 = *(_QWORD *)(v89 + 24);
      swift_bridgeObjectRetain();
      v244[0] = (id)sub_23AABEC68(v96, v97, (uint64_t *)v246);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v95 + 12) = 2112;
      swift_getErrorValue();
      v98 = sub_23B0D9CF0(v238);
      v244[0] = v98;
      a1 = v228;
      sub_23B1C6CBC();
      v99 = v227;
      *v227 = v98;

      _os_log_impl(&dword_23AA66000, v93, v94, "[%s] Failed to patch the reconciliation_table table: %@", (uint8_t *)v95, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v99, -1, -1);
      v100 = v231;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v100, -1, -1);
      MEMORY[0x23B8614BC](v95, -1, -1);

      v232(v226, v230);
    }
    else
    {
      swift_release();

      v232(v91, v54);
    }
    v101 = *v225;
    swift_beginAccess();
    v102 = *(_QWORD *)(v89 + 16);
    v103 = *(_QWORD *)(v89 + 24);
    v104 = v87;
    swift_bridgeObjectRetain();
    sub_23B13870C(v229, v87, v101, v102, v103);

    swift_bridgeObjectRelease();
    v105 = v87;
    goto LABEL_19;
  }
  v108 = (id)fpfs_current_or_default_log();
  v109 = v222;
  sub_23B1C5E58();
  v110 = sub_23B1C5E40();
  v111 = sub_23B1C6A94();
  if (os_log_type_enabled(v110, v111))
  {
    v112 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v112 = 0;
    _os_log_impl(&dword_23AA66000, v110, v111, "Patching FSSnapshot table...", v112, 2u);
    MEMORY[0x23B8614BC](v112, -1, -1);
  }

  v232(v109, v54);
  swift_beginAccess();
  v113 = v231;
  *(_QWORD *)(v231 + 16) = 0xD000000000000014;
  *(_QWORD *)(v113 + 24) = 0x800000023B21E9C0;
  swift_bridgeObjectRelease();
  sub_23B13BF98(a1, v84);
  v115 = v223;
  v116 = v114;
  if (v114 >= 1)
  {
    *v225 = v114;
    sub_23B1411F8();
    v117 = (void *)swift_allocError();
    *v118 = v116;
    swift_willThrow();
    v119 = v231;
    v120 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v121 = v117;
    v122 = v115;
    v123 = sub_23B1C5E40();
    v124 = sub_23B1C6AA0();
    if (os_log_type_enabled(v123, v124))
    {
      v125 = swift_slowAlloc();
      v126 = (_QWORD *)swift_slowAlloc();
      v127 = swift_slowAlloc();
      v245[0] = v127;
      *(_DWORD *)v125 = 136315394;
      swift_beginAccess();
      v228 = a1;
      v128 = *(_QWORD *)(v231 + 16);
      v129 = *(_QWORD *)(v231 + 24);
      swift_bridgeObjectRetain();
      v243[0] = (id)sub_23AABEC68(v128, v129, v245);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v125 + 12) = 2112;
      swift_getErrorValue();
      v130 = sub_23B0D9CF0(v237);
      v243[0] = v130;
      a1 = v228;
      sub_23B1C6CBC();
      *v126 = v130;

      _os_log_impl(&dword_23AA66000, v123, v124, "[%s] Failed to patch the fs_snapshot table: %@", (uint8_t *)v125, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v126, -1, -1);
      swift_arrayDestroy();
      v131 = v127;
      a2 = v231;
      MEMORY[0x23B8614BC](v131, -1, -1);
      MEMORY[0x23B8614BC](v125, -1, -1);

      v132 = v223;
      v133 = v230;
    }
    else
    {
      a2 = v119;
      swift_release();

      v132 = v122;
      v133 = v54;
    }
LABEL_28:
    v232(v132, v133);
    v134 = *v225;
    swift_beginAccess();
    v135 = *(_QWORD *)(a2 + 16);
    v136 = *(_QWORD *)(a2 + 24);
    v137 = v117;
    swift_bridgeObjectRetain();
    sub_23B13870C(v229, v117, v134, v135, v136);

    swift_bridgeObjectRelease();
    v105 = v117;
LABEL_19:

    v106 = a1;
LABEL_20:
    sub_23B13B898(v106);
    return 0;
  }
  v138 = (id)fpfs_current_or_default_log();
  v139 = v220;
  sub_23B1C5E58();
  v140 = sub_23B1C5E40();
  v141 = sub_23B1C6A94();
  if (os_log_type_enabled(v140, v141))
  {
    v142 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v142 = 0;
    _os_log_impl(&dword_23AA66000, v140, v141, "Patching FSItemJobs table...", v142, 2u);
    MEMORY[0x23B8614BC](v142, -1, -1);
  }

  v232(v139, v54);
  swift_beginAccess();
  a2 = v231;
  *(_QWORD *)(v231 + 16) = 0xD000000000000014;
  *(_QWORD *)(a2 + 24) = 0x800000023B21E9E0;
  swift_bridgeObjectRelease();
  sub_23B13C390(a1, v224, sub_23B1352F4, &block_descriptor_123_1, 537, sub_23B13D9C0);
  v144 = v221;
  v145 = v143;
  if (v143 >= 1)
  {
    *v225 = v143;
    sub_23B1411F8();
    v117 = (void *)swift_allocError();
    *v146 = v145;
    swift_willThrow();
    v147 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v148 = v117;
    v149 = sub_23B1C5E40();
    v150 = sub_23B1C6AA0();
    if (os_log_type_enabled(v149, v150))
    {
      v151 = swift_slowAlloc();
      v152 = (_QWORD *)swift_slowAlloc();
      v153 = swift_slowAlloc();
      v244[0] = (id)v153;
      *(_DWORD *)v151 = 136315394;
      swift_beginAccess();
      v228 = a1;
      v154 = *(_QWORD *)(v231 + 16);
      v155 = *(_QWORD *)(v231 + 24);
      swift_bridgeObjectRetain();
      v242[0] = (id)sub_23AABEC68(v154, v155, (uint64_t *)v244);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v151 + 12) = 2112;
      swift_getErrorValue();
      v156 = sub_23B0D9CF0(v236);
      v242[0] = v156;
      a1 = v228;
      sub_23B1C6CBC();
      *v152 = v156;

      _os_log_impl(&dword_23AA66000, v149, v150, "[%s] Failed to patch the fs_item_jobs table: %@", (uint8_t *)v151, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v152, -1, -1);
      swift_arrayDestroy();
      v157 = v153;
      a2 = v231;
      MEMORY[0x23B8614BC](v157, -1, -1);
      MEMORY[0x23B8614BC](v151, -1, -1);

      v132 = v221;
      v133 = v230;
    }
    else
    {
      swift_release();

      v132 = v144;
      v133 = v54;
    }
    goto LABEL_28;
  }
  v158 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v159 = sub_23B1C5E40();
  v160 = sub_23B1C6A94();
  if (os_log_type_enabled(v159, v160))
  {
    v161 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v161 = 0;
    _os_log_impl(&dword_23AA66000, v159, v160, "Patching FSThrottle table...", v161, 2u);
    MEMORY[0x23B8614BC](v161, -1, -1);
  }

  v232(v219, v54);
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = 0xD000000000000014;
  *(_QWORD *)(a2 + 24) = 0x800000023B21EA00;
  swift_bridgeObjectRelease();
  v162 = sub_23B13C1FC(a1, v224);
  v57 = v218;
  v163 = v162;
  if (v162 >= 1)
  {
    *v225 = v162;
    sub_23B1411F8();
    v40 = (char *)swift_allocError();
    *v164 = v163;
    swift_willThrow();
    v165 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v166 = v40;
    v56 = sub_23B1C5E40();
    v167 = sub_23B1C6AA0();
    if (os_log_type_enabled(v56, v167))
    {
      v168 = swift_slowAlloc();
      v169 = (_QWORD *)swift_slowAlloc();
      v170 = swift_slowAlloc();
      v243[0] = (id)v170;
      *(_DWORD *)v168 = 136315394;
      swift_beginAccess();
      v228 = a1;
      v171 = *(_QWORD *)(v231 + 16);
      v172 = *(_QWORD *)(v231 + 24);
      swift_bridgeObjectRetain();
      v241 = sub_23AABEC68(v171, v172, (uint64_t *)v243);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v168 + 12) = 2112;
      swift_getErrorValue();
      v173 = sub_23B0D9CF0(v235);
      v241 = (uint64_t)v173;
      a1 = v228;
      sub_23B1C6CBC();
      *v169 = v173;

      _os_log_impl(&dword_23AA66000, v56, v167, "[%s] Failed to patch the fs_throttle table: %@", (uint8_t *)v168, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v169, -1, -1);
      swift_arrayDestroy();
      v174 = v170;
      a2 = v231;
      MEMORY[0x23B8614BC](v174, -1, -1);
      MEMORY[0x23B8614BC](v168, -1, -1);

      v175 = v218;
      v176 = v230;
LABEL_42:
      v232(v175, v176);
      v177 = *v225;
      swift_beginAccess();
      v178 = *(_QWORD *)(a2 + 16);
      v179 = *(_QWORD *)(a2 + 24);
      v180 = v40;
      swift_bridgeObjectRetain();
      sub_23B13870C(v229, v40, v177, v178, v179);

      swift_bridgeObjectRelease();
      v105 = v40;
      goto LABEL_19;
    }
LABEL_41:
    swift_release();

    v175 = v57;
    v176 = v54;
    goto LABEL_42;
  }
  v181 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v182 = sub_23B1C5E40();
  v183 = sub_23B1C6A94();
  if (os_log_type_enabled(v182, v183))
  {
    v184 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v184 = 0;
    _os_log_impl(&dword_23AA66000, v182, v183, "Patching Jobs table...", v184, 2u);
    MEMORY[0x23B8614BC](v184, -1, -1);
  }

  v232(v217, v54);
  swift_beginAccess();
  strcpy((char *)(a2 + 16), "patchJobsTable");
  *(_BYTE *)(a2 + 31) = -18;
  swift_bridgeObjectRelease();
  v228 = a1;
  sub_23B13C390(a1, v224, sub_23B13532C, &block_descriptor_27_4, 626, sub_23B13E448);
  v186 = v185;
  if (v185 >= 1)
  {
    *v225 = v185;
    sub_23B1411F8();
    v187 = (void *)swift_allocError();
    *v188 = v186;
    swift_willThrow();
    v189 = v231;
    v190 = (id)fpfs_current_or_default_log();
    v191 = v216;
    sub_23B1C5E58();
    swift_retain();
    v192 = v187;
    v193 = sub_23B1C5E40();
    v194 = sub_23B1C6AA0();
    if (os_log_type_enabled(v193, v194))
    {
      v195 = swift_slowAlloc();
      v227 = (_QWORD *)swift_slowAlloc();
      v231 = swift_slowAlloc();
      v242[0] = (id)v231;
      *(_DWORD *)v195 = 136315394;
      swift_beginAccess();
      v196 = *(_QWORD *)(v189 + 16);
      v197 = *(_QWORD *)(v189 + 24);
      swift_bridgeObjectRetain();
      v240 = sub_23AABEC68(v196, v197, (uint64_t *)v242);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v195 + 12) = 2112;
      swift_getErrorValue();
      v198 = sub_23B0D9CF0(v234);
      v240 = (uint64_t)v198;
      sub_23B1C6CBC();
      v199 = v227;
      *v227 = v198;

      _os_log_impl(&dword_23AA66000, v193, v194, "[%s] Failed to patch the jobs table: %@", (uint8_t *)v195, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v199, -1, -1);
      v200 = v231;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v200, -1, -1);
      MEMORY[0x23B8614BC](v195, -1, -1);
    }
    else
    {
      swift_release();

    }
    v232(v191, v230);
    v201 = *v225;
    swift_beginAccess();
    v202 = *(_QWORD *)(v189 + 16);
    v203 = *(_QWORD *)(v189 + 24);
    v204 = v187;
    swift_bridgeObjectRetain();
    sub_23B13870C(v229, v187, v201, v202, v203);

    swift_bridgeObjectRelease();
    v106 = v228;
    goto LABEL_20;
  }
  v205 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v206 = sub_23B1C5E40();
  v207 = sub_23B1C6A94();
  if (os_log_type_enabled(v206, v207))
  {
    v208 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v208 = 0;
    _os_log_impl(&dword_23AA66000, v206, v207, "Patching Tombstone table...", v208, 2u);
    MEMORY[0x23B8614BC](v208, -1, -1);
  }

  v232(v215, v230);
  swift_beginAccess();
  v209 = v231;
  *(_QWORD *)(v231 + 16) = 0xD000000000000013;
  *(_QWORD *)(v209 + 24) = 0x800000023B21EA20;
  swift_bridgeObjectRelease();
  sub_23B1412B0(v228);
  v210 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v211 = sub_23B1C5E40();
  v212 = sub_23B1C6A94();
  if (os_log_type_enabled(v211, v212))
  {
    v213 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v213 = 0;
    _os_log_impl(&dword_23AA66000, v211, v212, "Database was updated successfully, commiting changes...", v213, 2u);
    MEMORY[0x23B8614BC](v213, -1, -1);
  }

  v232((char *)v214[0], v230);
  sub_23B13B898(v228);
  return 1;
}

uint64_t sub_23B13B898(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void (*v13)(char *, uint64_t);
  void *v14;
  unsigned int v15;
  id v16;
  uint64_t result;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  uint8_t *v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v29 - v7;
  v9 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v10 = sub_23B1C5E40();
  v11 = sub_23B1C6A94();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_23AA66000, v10, v11, "Reenabling foreign keys...", v12, 2u);
    MEMORY[0x23B8614BC](v12, -1, -1);
  }

  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v8, v2);
  aBlock[4] = sub_23ADFA24C;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_203_1;
  v14 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v15 = objc_msgSend(a1, sel_executeSwift_error_, v14, aBlock);
  _Block_release(v14);
  v16 = aBlock[0];
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  if (!v15)
  {
    v18 = (void *)sub_23B1C587C();

    swift_willThrow();
    v19 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v20 = v18;
    v21 = sub_23B1C5E40();
    v22 = sub_23B1C6AA0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v30 = v13;
      v24 = (uint8_t *)v23;
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      swift_getErrorValue();
      v26 = sub_23B0D9CF0(v31);
      aBlock[0] = v26;
      sub_23B1C6CBC();
      *v25 = v26;

      _os_log_impl(&dword_23AA66000, v21, v22, "Failed to enable foreign keys: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v25, -1, -1);
      v27 = v24;
      v28 = (uint64_t (*)(char *, uint64_t))v30;
      MEMORY[0x23B8614BC](v27, -1, -1);

      return v28(v6, v2);
    }
    else
    {

      return ((uint64_t (*)(char *, uint64_t))v13)(v6, v2);
    }
  }
  return result;
}

id sub_23B13BC08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  id result;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 56);
  ObjectType = swift_getObjectType();
  result = (id)sub_23AEBBD5C(ObjectType, v3);
  if (!v1)
  {
    v6 = (uint64_t)result;
    v7 = *(_QWORD *)(a1 + qword_2542EDE60);
    swift_retain();
    result = (id)FPVersion();
    if (result)
    {
      v8 = result;
      v9 = sub_23B1C63E0();
      v11 = v10;
      swift_release();

      v12 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 40) + 16) + 120);
      v13 = swift_retain();
      v14 = v12(v13);
      v16 = v15;
      swift_release();
      sub_23AF95360(590087, v6, v9, v11, v14, v16, *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), 1);
      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_23B13BD34(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id (*v15)(uint64_t, void *);
  void *v16;
  unint64_t (*v17)();
  uint64_t v18;
  uint64_t v19[2];

  v19[1] = *MEMORY[0x24BDAC8D0];
  v18 = 0;
  v19[0] = 0;
  v17 = (unint64_t (*)())sub_23B1352B4;
  v5 = (void *)MEMORY[0x24BDAC760];
  v13 = (id)MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_180;
  v6 = _Block_copy(&v13);
  swift_release();
  v13 = 0;
  v7 = objc_msgSend(a1, sel_executeSwift_error_, v6, &v13);
  _Block_release(v6);
  v8 = v13;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!v7)
  {
    sub_23B1C587C();

LABEL_11:
    swift_willThrow();
    return;
  }
  v17 = sub_23B1352B8;
  v18 = 0;
  v13 = v5;
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_183_1;
  v9 = _Block_copy(&v13);
  swift_release();
  v13 = 0;
  v10 = objc_msgSend(a1, sel_fetchSwift_error_, v9, &v13);
  _Block_release(v9);
  v11 = v13;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
LABEL_15:
    __break(1u);
  if (!v10)
  {
    sub_23B1C587C();

    goto LABEL_11;
  }
  if (objc_msgSend(v10, sel_next))
  {
    while (1)
    {
      v12 = (void *)MEMORY[0x23B8601A8]();
      sub_23B13C594(v10, a2, v19, a1);
      if (v2)
        break;
      objc_autoreleasePoolPop(v12);
      if ((objc_msgSend(v10, sel_next) & 1) == 0)
        goto LABEL_8;
    }
    objc_autoreleasePoolPop(v12);

  }
  else
  {
LABEL_8:

  }
}

void sub_23B13BF98(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id (*v15)(uint64_t, void *);
  void *v16;
  unint64_t (*v17)();
  uint64_t v18;
  uint64_t v19[2];

  v19[1] = *MEMORY[0x24BDAC8D0];
  v18 = 0;
  v19[0] = 0;
  v17 = (unint64_t (*)())sub_23B1352D4;
  v5 = (void *)MEMORY[0x24BDAC760];
  v13 = (id)MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_158_1;
  v6 = _Block_copy(&v13);
  swift_release();
  v13 = 0;
  v7 = objc_msgSend(a1, sel_executeSwift_error_, v6, &v13);
  _Block_release(v6);
  v8 = v13;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (!v7)
  {
    sub_23B1C587C();

LABEL_11:
    swift_willThrow();
    return;
  }
  v17 = sub_23B1352D8;
  v18 = 0;
  v13 = v5;
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_161_1;
  v9 = _Block_copy(&v13);
  swift_release();
  v13 = 0;
  v10 = objc_msgSend(a1, sel_fetchSwift_error_, v9, &v13);
  _Block_release(v9);
  v11 = v13;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
LABEL_15:
    __break(1u);
  if (!v10)
  {
    sub_23B1C587C();

    goto LABEL_11;
  }
  if (objc_msgSend(v10, sel_next))
  {
    while (1)
    {
      v12 = (void *)MEMORY[0x23B8601A8]();
      sub_23B13D0B0(v10, a2, v19, a1);
      if (v2)
        break;
      objc_autoreleasePoolPop(v12);
      if ((objc_msgSend(v10, sel_next) & 1) == 0)
        goto LABEL_8;
    }
    objc_autoreleasePoolPop(v12);

  }
  else
  {
LABEL_8:

  }
}

uint64_t sub_23B13C1FC(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  aBlock[4] = sub_23B135310;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_98_0;
  v5 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v6 = objc_msgSend(a1, sel_fetchSwift_error_, v5, aBlock);
  _Block_release(v5);
  v7 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v6)
  {
    if (objc_msgSend(v6, sel_next))
    {
      while (1)
      {
        v8 = (void *)MEMORY[0x23B8601A8]();
        sub_23B13DF1C(v6, a2, a1);
        if (v2)
          break;
        objc_autoreleasePoolPop(v8);
        if ((objc_msgSend(v6, sel_next) & 1) == 0)
          goto LABEL_9;
      }
      objc_autoreleasePoolPop(v8);
    }
LABEL_9:

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  return 0;
}

void sub_23B13C390(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, uint64_t, _QWORD *, void *))
{
  uint64_t v6;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14[6];
  _QWORD v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];
  v14[5] = 0;
  v15[0] = 0;
  v14[4] = a3;
  v14[0] = (id)MEMORY[0x24BDAC760];
  v14[1] = (id)1107296256;
  v14[2] = sub_23AA9432C;
  v14[3] = a4;
  v10 = _Block_copy(v14);
  swift_release();
  v14[0] = 0;
  v11 = objc_msgSend(a1, sel_fetchSwift_error_, v10, v14);
  _Block_release(v10);
  v12 = v14[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v11)
  {
    if (objc_msgSend(v11, sel_next))
    {
      while (1)
      {
        v13 = (void *)MEMORY[0x23B8601A8]();
        a6(v11, a2, v15, a1);
        if (v6)
          break;
        objc_autoreleasePoolPop(v13);
        if ((objc_msgSend(v11, sel_next) & 1) == 0)
          goto LABEL_6;
      }
      objc_autoreleasePoolPop(v13);

    }
    else
    {
LABEL_6:

    }
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
}

id sub_23B13C53C(void *a1)
{
  objc_msgSend(a1, sel_makeNextFlushFullSync);
  return objc_msgSend(a1, sel_flush);
}

void sub_23B13C57C()
{
  sub_23B13FCF4();
}

void sub_23B13C594(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v4;
  char **v8;
  unsigned __int8 v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  unsigned int v30;
  id v31;
  char isEscapingClosureAtFileLocation;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  id v51;
  id v52;
  id aBlock[7];

  v52 = a4;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = &selRef_defaultManager;
  v51 = objc_msgSend(a1, sel_longAtIndex_, 0);
  v9 = objc_msgSend(a1, sel_isNullAtIndex_, 1);
  if ((v9 & 1) != 0)
  {
    v10 = 0;
    v50 = 0;
  }
  else
  {
    v12 = (uint64_t)objc_msgSend(a1, sel_longAtIndex_, 1);
    v13 = objc_msgSend(a1, sel_unsignedIntAtIndex_, 2);
    if (v12 < 0)
    {
      LODWORD(v43) = 0;
      v42 = 3451;
      LOBYTE(v41) = 2;
LABEL_53:
      sub_23B1C7040();
      __break(1u);
      return;
    }
    v41 = a2;
    v42 = v12;
    LODWORD(v43) = MEMORY[0x24BDAC7A8](v13);
    v14 = sub_23B1358B0(5, (uint64_t)sub_23B1419E8, (uint64_t)&v40);
    if (v4)
      return;
    v10 = v15;
    if ((v15 & 0x100000000) == 0)
    {
      v19 = *a3 + 1;
      if (__OFADD__(*a3, 1))
        goto LABEL_50;
      goto LABEL_14;
    }
    v50 = v14;
    v8 = &selRef_defaultManager;
  }
  if ((objc_msgSend(a1, sel_isNullAtIndex_, 3) & 1) != 0)
  {
    v11 = 0;
    v49 = 255;
    goto LABEL_5;
  }
  v16 = a1;
  v17 = sub_23AF21670(v16, 3);
  if (v4)
  {

    return;
  }
  v11 = v17;
  v49 = v18;

  if ((_BYTE)v49)
  {
    if (v49 == 1)
    {
      MEMORY[0x24BDAC7A8](v33);
      v43 = a2;
      v44 = v11;
      v34 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)&v41);
      v49 = 1;
      v11 = v34;
    }
    goto LABEL_37;
  }
  MEMORY[0x24BDAC7A8](v33);
  v43 = a2;
  LODWORD(v44) = v38;
  v39 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)&v41);
  if ((v39 & 0x100000000) != 0)
  {
    v19 = *a3 + 1;
    if (__OFADD__(*a3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
LABEL_14:
    *a3 = v19;
    return;
  }
  v49 = 0;
  v11 = v39;
LABEL_37:
  v8 = &selRef_defaultManager;
LABEL_5:
  v47 = objc_msgSend(a1, sel_isNullAtIndex_, 4);
  v48 = v11;
  if ((v47 & 1) != 0)
  {
    v46 = 0;
  }
  else
  {
    v20 = (unint64_t)objc_msgSend(a1, v8[399], 4);
    if ((v20 & 0x8000000000000000) != 0)
    {
LABEL_52:
      LODWORD(v43) = 0;
      v42 = 3451;
      LOBYTE(v41) = 2;
      goto LABEL_53;
    }
    v21 = MEMORY[0x24BDAC7A8](v20);
    v43 = a2;
    v44 = v21;
    v46 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)&v41);
    if (v4)
      return;
  }
  LOBYTE(a3) = objc_msgSend(a1, sel_isNullAtIndex_, 5);
  if ((a3 & 1) != 0)
  {
    v45 = 0;
    goto LABEL_21;
  }
  v22 = (unint64_t)objc_msgSend(a1, v8[399], 5);
  if ((v22 & 0x8000000000000000) != 0)
    goto LABEL_52;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v43 = a2;
  v44 = v23;
  v45 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)&v41);
  if (v4)
    return;
LABEL_21:
  if ((objc_msgSend(a1, sel_isNullAtIndex_, 6) & 1) != 0)
  {
    v24 = 0;
    v25 = -1;
    goto LABEL_23;
  }
  v35 = a1;
  v24 = sub_23AAA43E4(v35, 6);
  v25 = v36;

  if (v4)
    return;
  if (!v25)
  {
    MEMORY[0x24BDAC7A8](v37);
    v43 = a2;
    LODWORD(v44) = v24;
    v39 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)&v41);
LABEL_43:
    if ((v39 & 0x100000000) != 0)
      v24 = 0;
    else
      v24 = v39;
    if ((v39 & 0x100000000) != 0)
      v25 = -1;
    else
      v25 = 0;
    goto LABEL_23;
  }
  if (v25 == 1)
  {
    MEMORY[0x24BDAC7A8](v37);
    v43 = a2;
    v44 = v24;
    v24 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)&v41);
    v25 = 1;
  }
LABEL_23:
  v26 = v48;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v50;
  *(_BYTE *)(v27 + 24) = v9;
  *(_DWORD *)(v27 + 28) = v10;
  *(_BYTE *)(v27 + 32) = v9;
  *(_QWORD *)(v27 + 40) = v26;
  *(_BYTE *)(v27 + 48) = v49;
  *(_QWORD *)(v27 + 56) = v46;
  *(_BYTE *)(v27 + 64) = v47;
  *(_QWORD *)(v27 + 72) = v45;
  *(_BYTE *)(v27 + 80) = (_BYTE)a3;
  *(_QWORD *)(v27 + 88) = v24;
  *(_BYTE *)(v27 + 96) = v25;
  *(_QWORD *)(v27 + 104) = v51;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = sub_23B1417EC;
  v28[3] = v27;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v28;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_196_0;
  v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v30 = objc_msgSend(v52, sel_executeSwift_error_, v29, aBlock);
  _Block_release(v29);
  v31 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_50:
    __break(1u);
  }
  if (!v30)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  swift_release();
}

uint64_t sub_23B13CC20(void *a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, unsigned __int8 a6, uint64_t a7, char a8, uint64_t a9, char a10, unint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v34;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  v19 = 0;
  if ((a3 & 1) == 0)
    v19 = sub_23B1C7514();
  v20 = objc_msgSend(a1, sel_bindObjectParameter_, v19, 0, 0xE000000000000000);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a4 & 0x100000000) != 0)
    v21 = 0;
  else
    v21 = sub_23B1C7508();
  v22 = objc_msgSend(a1, sel_bindObjectParameter_, v21);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (a6 > 1u)
  {
    if (a6 == 255)
    {
      v23 = objc_msgSend(a1, sel_bindObjectParameter_, 0);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (a6)
  {
    if ((a5 & 0x8000000000000000) == 0)
      goto LABEL_14;
    __break(1u);
LABEL_13:
    a5 = (unint64_t)(a5 != 0) << 63;
    goto LABEL_14;
  }
  a5 = -(uint64_t)a5;
LABEL_14:
  v23 = objc_msgSend(a1, sel_bindLongParameter_, a5);
LABEL_15:
  v24 = v23;
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a8 & 1) != 0)
    v25 = 0;
  else
    v25 = sub_23B1C7514();
  v26 = objc_msgSend(a1, sel_bindObjectParameter_, v25);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a10 & 1) != 0)
    v27 = 0;
  else
    v27 = sub_23B1C7514();
  v28 = a11;
  v29 = objc_msgSend(a1, sel_bindObjectParameter_, v27);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (a12 <= 1u)
  {
    if (!a12)
    {
      v28 = -(uint64_t)a11;
LABEL_29:
      v30 = objc_msgSend(a1, sel_bindLongParameter_, v28);
      goto LABEL_30;
    }
    if ((a11 & 0x8000000000000000) == 0)
      goto LABEL_29;
    __break(1u);
LABEL_28:
    v28 = (unint64_t)(a11 != 0) << 63;
    goto LABEL_29;
  }
  if (a12 != 255)
    goto LABEL_28;
  v30 = objc_msgSend(a1, sel_bindObjectParameter_, 0);
LABEL_30:
  v31 = v30;
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v32 = objc_msgSend(a1, sel_bindLongParameter_, a13);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v34;
}

void sub_23B13D0B0(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v4;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  int v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  void *v33;
  unsigned int v34;
  id v35;
  char isEscapingClosureAtFileLocation;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  int v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  id v47;
  id v48;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = objc_msgSend(a1, sel_longAtIndex_, 0);
  v10 = (uint64_t)objc_msgSend(a1, sel_longAtIndex_, 1);
  v11 = (unint64_t)objc_msgSend(a1, sel_longAtIndex_, 4);
  if (v10 < 0 || (v11 & 0x8000000000000000) != 0)
    goto LABEL_33;
  v47 = v9;
  v48 = a4;
  if (HIDWORD(v11))
  {
    LODWORD(v40) = 0;
    v39 = 3455;
    LOBYTE(v38) = 2;
    goto LABEL_35;
  }
  v38 = a2;
  v39 = v10;
  LODWORD(v40) = MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23B1358B0(5, (uint64_t)sub_23B1419E8, (uint64_t)&v37);
  if (v4)
    return;
  v14 = v13;
  if ((v13 & 0x100000000) == 0)
  {
    v15 = *a3 + 1;
    if (!__OFADD__(*a3, 1))
    {
LABEL_7:
      *a3 = v15;
      return;
    }
    goto LABEL_31;
  }
  v16 = v12;
  v17 = a1;
  v46 = sub_23AF21670(v17, 2);
  v19 = v18;

  if ((_BYTE)v19)
  {
    if (v19 == 1)
    {
      v45 = v19;
      MEMORY[0x24BDAC7A8](v20);
      v40 = a2;
      v41 = v46;
      v46 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)&v38);
      v19 = v45;
    }
  }
  else
  {
    v45 = v19;
    MEMORY[0x24BDAC7A8](v20);
    v40 = a2;
    LODWORD(v41) = v46;
    v21 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)&v38);
    if ((v21 & 0x100000000) != 0)
    {
      v15 = *a3 + 1;
      if (!__OFADD__(*a3, 1))
        goto LABEL_7;
      __break(1u);
      goto LABEL_28;
    }
    v46 = v21;
    v19 = v45;
  }
  v22 = v17;
  v44 = sub_23AAA43E4(v22, 3);
  v43 = v23;
  v42 = v22;

  v25 = v43;
  if (!(_BYTE)v43)
  {
    v45 = v19;
    MEMORY[0x24BDAC7A8](v24);
    v40 = a2;
    LODWORD(v41) = v44;
    v26 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)&v38);
    if ((v26 & 0x100000000) == 0)
    {
      v44 = v26;
      LOBYTE(v19) = v45;
      goto LABEL_20;
    }
LABEL_28:
    v15 = *a3 + 1;
    if (!__OFADD__(*a3, 1))
      goto LABEL_7;
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  if (v43 == 1)
  {
    MEMORY[0x24BDAC7A8](v24);
    v40 = a2;
    v41 = v44;
    v44 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)&v38);
  }
LABEL_20:
  v27 = (unint64_t)objc_msgSend(v42, sel_longAtIndex_, 5);
  if ((v27 & 0x8000000000000000) != 0)
  {
LABEL_33:
    LODWORD(v40) = 0;
    v39 = 3451;
    LOBYTE(v38) = 2;
LABEL_35:
    sub_23B1C7040();
    __break(1u);
    return;
  }
  v28 = MEMORY[0x24BDAC7A8](v27);
  v40 = a2;
  v41 = v28;
  v29 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)&v38);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v16;
  *(_DWORD *)(v30 + 24) = v14;
  *(_QWORD *)(v30 + 32) = v46;
  *(_BYTE *)(v30 + 40) = v19;
  *(_QWORD *)(v30 + 48) = v44;
  *(_BYTE *)(v30 + 56) = v25;
  v31 = v47;
  *(_QWORD *)(v30 + 64) = v29;
  *(_QWORD *)(v30 + 72) = v31;
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = sub_23B141790;
  v32[3] = v30;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v32;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_173_2;
  v33 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v34 = objc_msgSend(v48, sel_executeSwift_error_, v33, aBlock);
  _Block_release(v33);
  v35 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    goto LABEL_32;
  if (!v34)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  swift_release();
}

uint64_t sub_23B13D638(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  v15 = (void *)sub_23B1C7514();
  v16 = objc_msgSend(a1, sel_bindObjectParameter_, v15);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v17 = objc_msgSend(a1, sel_bindUnsignedIntegerParameter_, a3);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (!a5)
  {
LABEL_5:
    a4 = -(uint64_t)a4;
    goto LABEL_7;
  }
  if (a5 == 1)
  {
    if ((a4 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
    goto LABEL_5;
  }
  a4 = (unint64_t)(a4 != 0) << 63;
LABEL_7:
  v18 = objc_msgSend(a1, sel_bindLongParameter_, a4);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (!a7)
  {
LABEL_11:
    a6 = -(uint64_t)a6;
    goto LABEL_13;
  }
  if (a7 != 1)
  {
    a6 = (unint64_t)(a6 != 0) << 63;
    goto LABEL_13;
  }
  if ((a6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
LABEL_13:
  v19 = objc_msgSend(a1, sel_bindLongParameter_, a6);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v20 = (void *)sub_23B1C7514();
  v21 = objc_msgSend(a1, sel_bindObjectParameter_, v20);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v22 = objc_msgSend(a1, sel_bindLongParameter_, a9);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23B13D9C0(void *a1, uint64_t a2, _QWORD *a3, void *a4)
{
  uint64_t v4;
  id v9;
  id v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unsigned int v21;
  id v22;
  char isEscapingClosureAtFileLocation;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unsigned int v35;
  id v36;
  char v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _QWORD *v44;
  id aBlock;
  uint64_t v46;
  id (*v47)(uint64_t, void *);
  void *v48;
  uint64_t (*v49)();
  uint64_t v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v9 = objc_msgSend(a1, sel_longAtIndex_, 0);
  v10 = a1;
  v11 = sub_23AAA43E4(v10, 1);
  if (v4)
  {

    return;
  }
  v13 = v11;
  v14 = v12;

  v44 = a3;
  if (v14)
  {
    if (v14 != 1)
      goto LABEL_9;
    v16 = a4;
    MEMORY[0x24BDAC7A8](v15);
    v40 = a2;
    v41 = v13;
    v13 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)v39);
  }
  else
  {
    v16 = a4;
    MEMORY[0x24BDAC7A8](v15);
    v40 = a2;
    LODWORD(v41) = v13;
    v17 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)v39);
    if ((v17 & 0x100000000) != 0)
    {
      if (!__OFADD__(*v44, 1))
      {
        ++*v44;
        return;
      }
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
    }
    v13 = v17;
  }
  a4 = v16;
LABEL_9:
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v13;
  *(_BYTE *)(v18 + 24) = v14;
  *(_QWORD *)(v18 + 32) = v9;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_23B141668;
  *(_QWORD *)(v19 + 24) = v18;
  v43 = v18;
  v49 = sub_23AA956C8;
  v50 = v19;
  aBlock = (id)MEMORY[0x24BDAC760];
  v46 = 1107296256;
  v47 = sub_23AA9432C;
  v48 = &block_descriptor_133_1;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v42 = a4;
  v21 = objc_msgSend(a4, sel_executeSwift_error_, v20, &aBlock);
  _Block_release(v20);
  v22 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (!v21)
  {
    sub_23B1C587C();

    swift_willThrow();
    goto LABEL_15;
  }
  if ((objc_msgSend(v10, sel_isNullAtIndex_, 2) & 1) != 0)
  {
LABEL_15:
    swift_release();
    return;
  }
  sub_23AC39EE4(2);
  type metadata accessor for VFSDirectoryLister(0);
  v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_release();
    goto LABEL_15;
  }
  v25 = v24;
  v26 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v26);
  v39[0] = a2;
  v39[1] = v27;
  LODWORD(v40) = v28;
  swift_retain_n();
  v29 = sub_23B1358B0(5, (uint64_t)sub_23B1416C4, (uint64_t)&v38);
  v31 = v30;
  *(_QWORD *)(v25 + 24) = v29;
  *(_DWORD *)(v25 + 32) = v30;
  swift_release();
  if ((v31 & 0x100000000) == 0)
  {
    swift_release_n();
    if (!__OFADD__(*v44, 1))
    {
      ++*v44;
      goto LABEL_15;
    }
    goto LABEL_28;
  }
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v25;
  *(_QWORD *)(v32 + 24) = v9;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_23B141704;
  *(_QWORD *)(v33 + 24) = v32;
  v49 = sub_23AA956C8;
  v50 = v33;
  aBlock = (id)MEMORY[0x24BDAC760];
  v46 = 1107296256;
  v47 = sub_23AA9432C;
  v48 = &block_descriptor_143;
  v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v35 = objc_msgSend(v42, sel_executeSwift_error_, v34, &aBlock);
  _Block_release(v34);
  v36 = aBlock;
  v37 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v37 & 1) != 0)
    goto LABEL_29;
  if (!v35)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  swift_release();
  swift_release();
  swift_release_n();
}

void sub_23B13DF1C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unsigned __int8 v21;
  id v22;
  char v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char isEscapingClosureAtFileLocation;
  uint64_t v32;
  id v33;
  id v34;
  id aBlock;
  uint64_t v36;
  id (*v37)(uint64_t, void *);
  void *v38;
  uint64_t (*v39)();
  uint64_t v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v7 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = objc_msgSend(a1, sel_longAtIndex_, 0);
  v11 = a1;
  v12 = sub_23AAA43E4(v11, 1);
  v14 = v13;

  if (v3)
    return;
  v33 = a3;
  if (v14)
  {
    if (v14 == 1)
    {
      MEMORY[0x24BDAC7A8](v15);
      *(&v32 - 2) = a2;
      *(&v32 - 1) = v12;
      v12 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)(&v32 - 4));
    }
  }
  else
  {
    MEMORY[0x24BDAC7A8](v15);
    *(&v32 - 2) = a2;
    *((_DWORD *)&v32 - 2) = v12;
    v16 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)(&v32 - 4));
    if ((v16 & 0x100000000) != 0)
    {
      v24 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v25 = sub_23B1C5E40();
      v26 = sub_23B1C6A94();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_23AA66000, v25, v26, "item not found in fs throttle, removing row", v27, 2u);
        MEMORY[0x23B8614BC](v27, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v34;
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = sub_23B141640;
      *(_QWORD *)(v29 + 24) = v28;
      v39 = sub_23AA956C8;
      v40 = v29;
      aBlock = (id)MEMORY[0x24BDAC760];
      v36 = 1107296256;
      v37 = sub_23AA9432C;
      v38 = &block_descriptor_120;
      v30 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      aBlock = 0;
      v21 = objc_msgSend(v33, sel_executeSwift_error_, v30, &aBlock);
      _Block_release(v30);
      v22 = aBlock;
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        goto LABEL_8;
      __break(1u);
LABEL_16:
      __break(1u);
    }
    v12 = v16;
  }
  v17 = v34;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v12;
  *(_BYTE *)(v18 + 24) = v14;
  *(_QWORD *)(v18 + 32) = v17;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_23B1415D4;
  *(_QWORD *)(v19 + 24) = v18;
  v39 = sub_23AA956C8;
  v40 = v19;
  aBlock = (id)MEMORY[0x24BDAC760];
  v36 = 1107296256;
  v37 = sub_23AA9432C;
  v38 = &block_descriptor_108;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v21 = objc_msgSend(v33, sel_executeSwift_error_, v20, &aBlock);
  _Block_release(v20);
  v22 = aBlock;
  v23 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v23 & 1) != 0)
    goto LABEL_16;
LABEL_8:
  if ((v21 & 1) == 0)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  swift_release();
}

unint64_t sub_23B13E394(void *a1, uint64_t a2)
{
  id v4;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(a1, sel_bindLongParameter_, a2);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

void sub_23B13E448(void *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v4;
  void *v8;
  id v9;
  id v10;
  int v11;
  int v12;
  unsigned __int8 v13;
  id v14;
  unint64_t v15;
  char v16;
  uint64_t v20;
  uint64_t (*v21)(void *);
  uint64_t v22;
  uint64_t (*v23)(void *);
  uint64_t v24;
  id v25;
  char v26;
  char v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  char v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unsigned int v46;
  id v47;
  char v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  unsigned int v55;
  char isEscapingClosureAtFileLocation;
  id v57;
  unint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  unsigned int v70;
  char v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  void *v75;
  id v76;
  _BYTE v77[16];
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t (*v83)(void *);
  uint64_t v84;
  id v85;
  id v86;
  id aBlock;
  uint64_t v88;
  id (*v89)(uint64_t, void *);
  void *v90;
  uint64_t (*v91)(uint64_t);
  uint64_t v92;
  uint64_t v93;

  v8 = a1;
  v93 = *MEMORY[0x24BDAC8D0];
  v86 = objc_msgSend(a1, sel_longAtIndex_, 0);
  v9 = objc_msgSend(v8, sel_longAtIndex_, 1);
  v10 = v9;
  if (v9 == (id)1)
    v11 = 1;
  else
    v11 = 2;
  if (v9)
    v12 = v11;
  else
    v12 = 0;
  v13 = sub_23B06F1C0((uint64_t)objc_msgSend(v8, sel_longAtIndex_, 2));
  if (v12 != 2)
  {
    if (v10)
    {
      if (((v13 < 0x17u) & (0x400007u >> v13)) != 0)
      {
LABEL_10:
        v14 = v8;
        v15 = sub_23AF21670(v14, 3);
        if (v4)
        {

          return;
        }
        v20 = v15;
        v34 = v16;

        if (v34)
        {
          if (v34 == 1)
          {
            MEMORY[0x24BDAC7A8](v35);
            v78 = a2;
            v79 = v20;
            v20 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)v77);
          }
          v85 = a4;
LABEL_58:
          v52 = swift_allocObject();
          *(_QWORD *)(v52 + 16) = v20;
          *(_BYTE *)(v52 + 24) = v34;
          *(_QWORD *)(v52 + 32) = v86;
          v53 = swift_allocObject();
          *(_QWORD *)(v53 + 16) = sub_23B141508;
          *(_QWORD *)(v53 + 24) = v52;
          v91 = (uint64_t (*)(uint64_t))sub_23AA956C8;
          v92 = v53;
          aBlock = (id)MEMORY[0x24BDAC760];
          v88 = 1107296256;
          v89 = sub_23AA9432C;
          v90 = &block_descriptor_73_0;
          v54 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          aBlock = 0;
          v55 = objc_msgSend(v85, sel_executeSwift_error_, v54, &aBlock);
          _Block_release(v54);
          v47 = aBlock;
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            if (v55)
            {
              v21 = 0;
              v22 = 0;
              v23 = 0;
              v20 = (uint64_t)sub_23B141508;
              goto LABEL_25;
            }
LABEL_83:
            sub_23B1C587C();

            swift_willThrow();
            swift_release();
            return;
          }
          goto LABEL_92;
        }
        MEMORY[0x24BDAC7A8](v35);
        v78 = a2;
        LODWORD(v79) = v20;
        v51 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)v77);
        if ((v51 & 0x100000000) == 0)
        {
          v85 = a4;
          v20 = v51;
          goto LABEL_58;
        }
LABEL_68:
        v64 = *a3 + 1;
        if (__OFADD__(*a3, 1))
        {
          __break(1u);
          goto LABEL_71;
        }
        goto LABEL_82;
      }
    }
    else if (((v13 < 0x17u) & (0x400007u >> v13)) == 0)
    {
      goto LABEL_10;
    }
  }
  if (v13 != 70 && v12 != 2 && v13 == 20 && (v12 & 1) == 0)
  {
    v29 = v8;
    v30 = sub_23AF21670(v29, 3);
    if (v4)
    {

      return;
    }
    v36 = v30;
    v37 = v31;

    v85 = a4;
    if (v37)
    {
      if (v37 == 1)
      {
        MEMORY[0x24BDAC7A8](v38);
        v78 = a2;
        v79 = v36;
        v36 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)v77);
      }
    }
    else
    {
      MEMORY[0x24BDAC7A8](v38);
      v78 = a2;
      LODWORD(v79) = v36;
      v49 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)v77);
      if ((v49 & 0x100000000) != 0)
      {
        v64 = *a3 + 1;
        if (__OFADD__(*a3, 1))
        {
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
LABEL_82:
        *a3 = v64;
        return;
      }
      v36 = v49;
    }
    v57 = v29;
    v58 = sub_23AF21670(v57, 4);
    v60 = v59;

    if ((_BYTE)v60)
    {
      if (v60 != 1)
      {
        v63 = v85;
LABEL_78:
        v67 = swift_allocObject();
        *(_QWORD *)(v67 + 16) = v36;
        *(_BYTE *)(v67 + 24) = v37;
        *(_QWORD *)(v67 + 32) = v58;
        *(_BYTE *)(v67 + 40) = v60;
        *(_QWORD *)(v67 + 48) = v86;
        v68 = swift_allocObject();
        *(_QWORD *)(v68 + 16) = sub_23B1414D0;
        *(_QWORD *)(v68 + 24) = v67;
        v84 = v67;
        v91 = (uint64_t (*)(uint64_t))sub_23AA956C8;
        v92 = v68;
        aBlock = (id)MEMORY[0x24BDAC760];
        v88 = 1107296256;
        v89 = sub_23AA9432C;
        v90 = &block_descriptor_59_1;
        v69 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        aBlock = 0;
        v70 = objc_msgSend(v63, sel_executeSwift_error_, v69, &aBlock);
        _Block_release(v69);
        v47 = aBlock;
        v71 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v71 & 1) == 0)
        {
          if (v70)
          {
            v20 = 0;
            v23 = 0;
            v21 = sub_23B1414D0;
            v22 = v84;
            goto LABEL_25;
          }
          goto LABEL_83;
        }
        goto LABEL_93;
      }
      LODWORD(v84) = v60;
      MEMORY[0x24BDAC7A8](v61);
      v78 = a2;
      v79 = v58;
      v62 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)v77);
      v63 = v85;
      v58 = v62;
    }
    else
    {
      LODWORD(v84) = v60;
      MEMORY[0x24BDAC7A8](v61);
      v78 = a2;
      LODWORD(v79) = v58;
      v66 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)v77);
      if ((v66 & 0x100000000) != 0)
      {
        v64 = *a3 + 1;
        if (!__OFADD__(*a3, 1))
          goto LABEL_82;
        __break(1u);
        goto LABEL_91;
      }
      v58 = v66;
      v63 = v85;
    }
    LOBYTE(v60) = v84;
    goto LABEL_78;
  }
  if ((objc_msgSend(v8, sel_isNullAtIndex_, 4) & 1) != 0)
  {
    v85 = a4;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    goto LABEL_25;
  }
  v25 = v8;
  v20 = sub_23AF21670(v25, 4);
  v27 = v26;

  if (v4)
    return;
  if (v27)
  {
    if (v27 == 1)
    {
      MEMORY[0x24BDAC7A8](v28);
      v78 = a2;
      v79 = v20;
      v20 = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)v77);
    }
  }
  else
  {
    MEMORY[0x24BDAC7A8](v28);
    v78 = a2;
    LODWORD(v79) = v20;
    v51 = sub_23B135538(5, (uint64_t)sub_23B14196C, (uint64_t)v77);
    if ((v51 & 0x100000000) != 0)
    {
      v64 = *a3 + 1;
      if (!__OFADD__(*a3, 1))
        goto LABEL_82;
      __break(1u);
      goto LABEL_68;
    }
    v20 = v51;
  }
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v20;
  *(_BYTE *)(v43 + 24) = v27;
  *(_QWORD *)(v43 + 32) = v86;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = sub_23B1413E4;
  *(_QWORD *)(v44 + 24) = v43;
  v91 = sub_23AA698D4;
  v92 = v44;
  aBlock = (id)MEMORY[0x24BDAC760];
  v88 = 1107296256;
  v89 = sub_23AA9432C;
  v90 = &block_descriptor_36_4;
  v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v85 = a4;
  v46 = objc_msgSend(a4, sel_executeSwift_error_, v45, &aBlock);
  _Block_release(v45);
  v47 = aBlock;
  v48 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v48 & 1) != 0)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if (!v46)
    goto LABEL_83;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = sub_23B1413E4;
LABEL_25:
  if ((objc_msgSend(v8, sel_isNullAtIndex_, 5) & 1) != 0)
  {
    sub_23AAB7948(v20);
    v24 = (uint64_t)v21;
LABEL_35:
    sub_23AAB7948(v24);
    sub_23AAB7948((uint64_t)v23);
    return;
  }
  v83 = v21;
  v84 = v22;
  v32 = (void *)a2;
  v33 = sub_23AC39EE4(5);
  if (v4)
  {
LABEL_34:
    sub_23AAB7948(v20);
    v24 = (uint64_t)v83;
    goto LABEL_35;
  }
  v39 = v33;
  type metadata accessor for VFSStagedContext();
  v40 = swift_dynamicCastClass();
  if (!v40)
  {
    swift_release();
    goto LABEL_34;
  }
  v81 = v40;
  v82 = &v80;
  MEMORY[0x24BDAC7A8](v40);
  v78 = (uint64_t)v32;
  v79 = v41;
  swift_retain();
  v42 = sub_23B1356F8(5, (uint64_t)sub_23B141440, (uint64_t)v77);
  v80 = v39;
  a2 = v81;
  v82 = v77;
  *(_QWORD *)(v81 + 16) = v42;
  MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)&v77[-16] = v32;
  *(_DWORD *)&v77[-8] = v50;
  v51 = sub_23B135538(5, (uint64_t)sub_23B141458, (uint64_t)&v77[-32]);
  v8 = v32;
  a3 = (uint64_t *)v23;
LABEL_71:
  if ((v51 & 0x100000000) == 0)
    *(_DWORD *)(a2 + 32) = v51;
  MEMORY[0x24BDAC7A8](v51);
  *(_QWORD *)&v77[-16] = v8;
  *(_QWORD *)&v77[-8] = v65;
  *(_QWORD *)(a2 + 24) = sub_23B1356F8(5, (uint64_t)sub_23B141958, (uint64_t)&v77[-32]);
  v72 = swift_allocObject();
  v73 = v86;
  *(_QWORD *)(v72 + 16) = a2;
  *(_QWORD *)(v72 + 24) = v73;
  v74 = swift_allocObject();
  *(_QWORD *)(v74 + 16) = sub_23B141474;
  *(_QWORD *)(v74 + 24) = v72;
  v82 = (_BYTE *)v72;
  v91 = (uint64_t (*)(uint64_t))sub_23AA956C8;
  v92 = v74;
  aBlock = (id)MEMORY[0x24BDAC760];
  v88 = 1107296256;
  v89 = sub_23AA9432C;
  v90 = &block_descriptor_47_0;
  v75 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  LODWORD(v86) = objc_msgSend(v85, sel_executeSwift_error_, v75, &aBlock);
  _Block_release(v75);
  v76 = aBlock;
  LOBYTE(v72) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v72 & 1) != 0)
LABEL_95:
    __break(1u);
  if ((v86 & 1) == 0)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  swift_release_n();
  sub_23AAB7948(v20);
  sub_23AAB7948((uint64_t)v83);
  sub_23AAB7948((uint64_t)a3);
  swift_release();
}

uint64_t sub_23B13F160(void *a1, unint64_t a2, char a3, unint64_t a4, char a5, uint64_t a6)
{
  id v12;
  id v13;
  id v14;
  uint64_t v16;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  if (!a3)
  {
LABEL_5:
    a2 = -(uint64_t)a2;
    goto LABEL_7;
  }
  if (a3 == 1)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
    goto LABEL_5;
  }
  a2 = (unint64_t)(a2 != 0) << 63;
LABEL_7:
  v12 = objc_msgSend(a1, sel_bindLongParameter_, a2, 0, 0xE000000000000000);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (!a5)
  {
LABEL_11:
    a4 = -(uint64_t)a4;
    goto LABEL_13;
  }
  if (a5 != 1)
  {
    a4 = (unint64_t)(a4 != 0) << 63;
    goto LABEL_13;
  }
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
LABEL_13:
  v13 = objc_msgSend(a1, sel_bindLongParameter_, a4);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v14 = objc_msgSend(a1, sel_bindLongParameter_, a6);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_23B13F36C(void *a1, unint64_t a2, char a3, uint64_t a4)
{
  id v8;
  id v9;
  uint64_t v11;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  if (!a3)
    goto LABEL_5;
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  v8 = objc_msgSend(a1, sel_bindLongParameter_, a2, 0, 0xE000000000000000);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v9 = objc_msgSend(a1, sel_bindLongParameter_, a4);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_23B13F4C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v10;
  id v11;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  v10 = swift_retain();
  a7(v10);
  swift_release();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v11 = objc_msgSend(a1, sel_bindLongParameter_, a3);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B13F5F0()
{
  sub_23B14940C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RestoreUpgradeSchemaVFSFileTree(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2569E89A0);
}

uint64_t sub_23B13F624()
{
  sub_23B149430();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RestoreUpgradeSchemaFPFileTree(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2542DF270);
}

uint64_t sub_23B13F654()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23B13F688()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B13F7EC()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

unint64_t sub_23B13F958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);

  v34 = a2;
  v35 = a3;
  v5 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v32 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v42 = (char *)&v32 - v17;
  v18 = *(_QWORD *)(a1 + 16);
  v32 = a1;
  v33 = v3;
  if (v18)
  {
    v36 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v19 = a1 + v36;
    v20 = *(_QWORD *)(v6 + 72);
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v43 = MEMORY[0x24BEE4AF8];
    v38 = v6;
    v21 = v42;
    while (1)
    {
      v39(v21, v19, v5);
      v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v44(v21, 0, 1, v5);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      if (v22(v21, 1, v5) == 1)
        break;
      v41 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v41(v12, v21, v5);
      if (sub_23B1C5930() == 0x70756B636162 && v23 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        v24 = 1;
      }
      else
      {
        v25 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v25 & 1) != 0)
        {
          v24 = 1;
        }
        else
        {
          sub_23B1C5984();
          v24 = 0;
        }
        v6 = v38;
      }
      v21 = v42;
      v44(v16, v24, 1, v5);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      if (v22(v16, 1, v5) == 1)
      {
        sub_23AD2BAF8((uint64_t)v16);
      }
      else
      {
        v26 = v37;
        v27 = v41;
        v41(v37, v16, v5);
        v27(v40, v26, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v43 = sub_23AF98BB8(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
        v29 = *(_QWORD *)(v43 + 16);
        v28 = *(_QWORD *)(v43 + 24);
        if (v29 >= v28 >> 1)
          v43 = sub_23AF98BB8(v28 > 1, v29 + 1, 1, v43);
        v30 = v43;
        *(_QWORD *)(v43 + 16) = v29 + 1;
        v27((char *)(v30 + v36 + v29 * v20), v40, v5);
        v6 = v38;
        v21 = v42;
      }
      v19 += v20;
      if (!--v18)
        goto LABEL_20;
    }
  }
  else
  {
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v43 = MEMORY[0x24BEE4AF8];
    v21 = v42;
LABEL_20:
    v44(v21, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v43;
}

void sub_23B13FCF4()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  sub_23B1C7028();
  sub_23B1C704C();
  __break(1u);
}

void sub_23B13FDAC(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  id v41;
  char *v42;
  char *v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  id v48;
  void *v49;
  unsigned __int8 v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  unsigned __int8 v57;
  char *v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint8_t *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  void *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  id v91;
  char *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  void *v96;
  uint64_t v97;
  id v98;
  char *v99;
  _QWORD *v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  int v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  id v121[2];

  v103 = a1;
  v121[1] = *(id *)MEMORY[0x24BDAC8D0];
  v117 = sub_23B1C5E4C();
  v114 = *(_QWORD *)(v117 - 8);
  v5 = MEMORY[0x24BDAC7A8](v117);
  v104 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v106 = (char *)&v97 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v108 = (char *)&v97 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v111 = (char *)&v97 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v110 = (char *)&v97 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v115 = (char *)&v97 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v112 = (char *)&v97 - v17;
  v18 = sub_23B1C5A08();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v105 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v107 = (char *)&v97 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v109 = (char *)&v97 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v118 = (char *)&v97 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v97 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v97 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v97 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v97 - v37;
  v39 = a2 + OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v40((char *)&v97 - v37, a2 + OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_userURL, v18);
  v113 = v39;
  v119 = v18;
  v40(v36, v39, v18);
  v41 = objc_allocWithZone((Class)type metadata accessor for FPFSSQLBackupEngine());
  v42 = (char *)sub_23B0F1FA8(v38, v36);
  if (v42)
  {
    v102 = a2;
    v116 = a3;
    v43 = &v42[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL];
    v44 = v42;
    v45 = v119;
    v40(v33, (uint64_t)&v42[OBJC_IVAR____TtC9libfssync19FPFSSQLBackupEngine_backupManifestURL], v119);
    v40(v30, (uint64_t)v43, v45);
    type metadata accessor for SQLBackupManifest();
    swift_allocObject();
    v46 = sub_23ABDDE6C((uint64_t)v30);
    v98 = v44;
    v99 = v33;
    v100 = v46;
    swift_retain();
    sub_23B1C599C();
    sub_23B1C5978();
    v101 = *(void (**)(char *, uint64_t))(v19 + 8);
    v101(v38, v119);
    v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
    v49 = (void *)sub_23B1C5954();
    v121[0] = 0;
    v50 = objc_msgSend(v48, sel_removeItemAtURL_error_, v49, v121);

    if ((v50 & 1) != 0)
    {
      v51 = v121[0];
    }
    else
    {
      v52 = v121[0];
      v53 = (void *)sub_23B1C587C();

      swift_willThrow();
    }
    v54 = v102;
    v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
    sub_23B1C59E4();
    v56 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v57 = objc_msgSend(v55, sel_createFileAtPath_contents_attributes_, v56, 0, 0);

    v58 = v115;
    if ((v57 & 1) == 0)
    {
      v59 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v60 = sub_23B1C5E40();
      v61 = sub_23B1C6AA0();
      if (os_log_type_enabled(v60, v61))
      {
        v62 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v62 = 67109120;
        LODWORD(v121[0]) = MEMORY[0x23B85E7A4]();
        sub_23B1C6CBC();
        _os_log_impl(&dword_23AA66000, v60, v61, "Failed to save restore timestamp on disk: %d", v62, 8u);
        v63 = v62;
        v58 = v115;
        MEMORY[0x23B8614BC](v63, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v117);
    }
    v64 = sub_23B1C59E4();
    v66 = v65;
    v67 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_bridgeObjectRetain_n();
    v68 = sub_23B1C5E40();
    v69 = sub_23B1C6AB8();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc();
      v71 = (void *)swift_slowAlloc();
      v121[0] = v71;
      *(_DWORD *)v70 = 136315138;
      swift_bridgeObjectRetain();
      v120 = sub_23AABEC68(v64, v66, (uint64_t *)v121);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23AA66000, v68, v69, "Populating new columns with base path: %s", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v71, -1, -1);
      MEMORY[0x23B8614BC](v70, -1, -1);

      v72 = *(char **)(v114 + 8);
      v73 = v115;
      v54 = v102;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v72 = *(char **)(v114 + 8);
      v73 = v58;
    }
    v115 = v72;
    v74 = ((uint64_t (*)(char *, uint64_t))v72)(v73, v117);
    v75 = v99;
    v76 = v116;
    v77 = (uint64_t)v100;
    MEMORY[0x24BDAC7A8](v74);
    *(&v97 - 4) = v77;
    *(&v97 - 3) = v64;
    *(&v97 - 2) = v66;
    sub_23B135380(21, (uint64_t)sub_23B14107C, (uint64_t)(&v97 - 6));
    swift_bridgeObjectRelease();
    v78 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v79 = sub_23B1C5E40();
    v80 = sub_23B1C6AB8();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v81 = 0;
      _os_log_impl(&dword_23AA66000, v79, v80, "Creating indexes", v81, 2u);
      MEMORY[0x23B8614BC](v81, -1, -1);
    }

    ((void (*)(char *, uint64_t))v115)(v110, v117);
    sub_23B135380(21, (uint64_t)sub_23B141098, v77);
    sub_23B1367B0(*(_QWORD *)(v54 + OBJC_IVAR____TtC9libfssync20FPFSSQLRestoreEngine_fpDatabaseURLs), v77);
    v84 = v83;
    if (v82)
    {
      v85 = v82;
      swift_release();
      v86 = (void *)sub_23B1C5870();
      if (v84)
        v87 = (void *)sub_23B1C63BC();
      else
        v87 = 0;
      (*(void (**)(uint64_t, _QWORD, void *, void *))(v76 + 16))(v76, 0, v86, v87);
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v90 = (uint64_t)v105;
      sub_23B1C5978();
      sub_23B0F1810(v90);
      v101((char *)v90, v119);
      sub_23ABE0164();
      swift_release();
      if ((v103 & 1) != 0)
        sub_23B0F2660();
      v91 = (id)fpfs_current_or_default_log();
      v92 = v104;
      sub_23B1C5E58();
      v93 = sub_23B1C5E40();
      v94 = sub_23B1C6AB8();
      if (os_log_type_enabled(v93, v94))
      {
        v95 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v95 = 0;
        _os_log_impl(&dword_23AA66000, v93, v94, "Calling completion handler with success.", v95, 2u);
        MEMORY[0x23B8614BC](v95, -1, -1);
      }

      ((void (*)(char *, uint64_t))v115)(v92, v117);
      v96 = (void *)sub_23B1C63BC();
      (*(void (**)(uint64_t, uint64_t, _QWORD, void *))(v76 + 16))(v76, 1, 0, v96);

      swift_release();
    }
    v88 = v119;
    v89 = v101;
    v101(v118, v119);
    v89(v75, v88);
  }
  else
  {
    v47 = (void *)sub_23B1C63BC();
    (*(void (**)(uint64_t, uint64_t, _QWORD, void *))(a3 + 16))(a3, 1, 0, v47);

  }
}

void sub_23B14107C(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  sub_23ABE2824(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23B141098@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_23ABE2BB0(a1, v2, a2);
}

uint64_t sub_23B1410B0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B1410D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B14117C(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B139944(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD **)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t **)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B1411E8()
{
  return swift_deallocObject();
}

unint64_t sub_23B1411F8()
{
  unint64_t result;

  result = qword_2569E8D30;
  if (!qword_2569E8D30)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E75BC, &type metadata for RestoreError);
    atomic_store(result, (unint64_t *)&qword_2569E8D30);
  }
  return result;
}

uint64_t sub_23B14123C()
{
  return swift_deallocObject();
}

uint64_t sub_23B14124C(uint64_t a1)
{
  return sub_23B141888(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1360B4);
}

uint64_t sub_23B141258()
{
  return swift_deallocObject();
}

unint64_t sub_23B141268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542DD420;
  if (!qword_2542DD420)
  {
    v1 = sub_23B1C5A08();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_2542DD420);
  }
  return result;
}

uint64_t sub_23B1412B0(void *a1)
{
  void *v2;
  unsigned int v3;
  id v4;
  uint64_t result;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  aBlock[4] = sub_23B135348;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_24_4;
  v2 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v3 = objc_msgSend(a1, sel_executeSwift_error_, v2, aBlock);
  _Block_release(v2);
  v4 = aBlock[0];
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  if (!v3)
  {
    sub_23B1C587C();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_23B1413D4()
{
  return swift_deallocObject();
}

uint64_t sub_23B1413E4(void *a1)
{
  uint64_t v1;

  return sub_23B13F36C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B141430()
{
  return swift_deallocObject();
}

_QWORD *sub_23B141440@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23ABE3D08(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

unint64_t sub_23B141458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23ABE32D8(*(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_23B141474(void *a1)
{
  uint64_t v1;

  return sub_23B13F4C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 67, 0xD000000000000030, 0x800000023B21EAB0, (void (*)(uint64_t))sub_23AC39BEC);
}

uint64_t sub_23B1414B0()
{
  return swift_deallocObject();
}

uint64_t sub_23B1414C0()
{
  return swift_deallocObject();
}

uint64_t sub_23B1414D0(void *a1)
{
  uint64_t v1;

  return sub_23B13F160(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23B1414E8()
{
  return swift_deallocObject();
}

uint64_t sub_23B1414F8()
{
  return swift_deallocObject();
}

uint64_t sub_23B141508(void *a1)
{
  uint64_t v1;

  return sub_23B13F36C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B141554()
{
  return swift_deallocObject();
}

uint64_t sub_23B141564()
{
  return swift_deallocObject();
}

uint64_t sub_23B141574(uint64_t a1)
{
  uint64_t v1;

  return sub_23B135EB4(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_23B141584()
{
  return swift_deallocObject();
}

uint64_t sub_23B141594()
{
  return swift_deallocObject();
}

uint64_t sub_23B1415A4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B135F34(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_23B1415B4()
{
  return swift_deallocObject();
}

uint64_t sub_23B1415C4()
{
  return swift_deallocObject();
}

uint64_t sub_23B1415D4(void *a1)
{
  uint64_t v1;

  return sub_23B13F36C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B141620()
{
  return swift_deallocObject();
}

uint64_t sub_23B141630()
{
  return swift_deallocObject();
}

unint64_t sub_23B141640(void *a1)
{
  uint64_t v1;

  return sub_23B13E394(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23B141648()
{
  return swift_deallocObject();
}

uint64_t sub_23B141658()
{
  return swift_deallocObject();
}

uint64_t sub_23B141668(void *a1)
{
  uint64_t v1;

  return sub_23B13F36C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B1416B4()
{
  return swift_deallocObject();
}

void sub_23B1416C4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_23ABE3E44(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_DWORD *)(v2 + 32), a2);
}

uint64_t sub_23B1416E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B141704(void *a1)
{
  uint64_t v1;

  return sub_23B13F4C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), 75, 0xD000000000000038, 0x800000023B21EC90, (void (*)(uint64_t))sub_23AC39BD0);
}

uint64_t sub_23B141740()
{
  return swift_deallocObject();
}

uint64_t sub_23B141750()
{
  return swift_deallocObject();
}

uint64_t sub_23B141760(uint64_t a1)
{
  uint64_t v1;

  return sub_23B135FAC(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_23B141770()
{
  return swift_deallocObject();
}

uint64_t sub_23B141780()
{
  return swift_deallocObject();
}

uint64_t sub_23B141790(void *a1)
{
  uint64_t v1;

  return sub_23B13D638(a1, *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_23B1417CC()
{
  return swift_deallocObject();
}

uint64_t sub_23B1417DC()
{
  return swift_deallocObject();
}

uint64_t sub_23B1417EC(void *a1)
{
  uint64_t v1;

  return sub_23B13CC20(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(unsigned int *)(v1 + 28) | ((unint64_t)*(unsigned __int8 *)(v1 + 32) << 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_BYTE *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_23B14185C()
{
  return swift_deallocObject();
}

uint64_t sub_23B14186C()
{
  return swift_deallocObject();
}

uint64_t sub_23B14187C(uint64_t a1)
{
  return sub_23B141888(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B135E40);
}

uint64_t sub_23B141888(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned int *)(v2 + 48));
}

uint64_t sub_23B14189C()
{
  return swift_deallocObject();
}

uint64_t sub_23B1418AC()
{
  return swift_deallocObject();
}

uint64_t sub_23B1418BC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B136030(a1, *(_QWORD *)(v1 + 16), *(void (**)(__int128 *__return_ptr))(v1 + 24));
}

uint64_t sub_23B1418CC()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for RestoreError()
{
  return &type metadata for RestoreError;
}

_QWORD *sub_23B141958@<X0>(_QWORD *a1@<X8>)
{
  return sub_23B141440(a1);
}

unint64_t sub_23B14196C@<X0>(uint64_t a1@<X8>)
{
  return sub_23B141458(a1);
}

void sub_23B1419E8(void *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_23B1416C4(a1, a2);
}

uint64_t sub_23B1419FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0FB930(a1, a2, a3, a4, (uint64_t (*)(void))sub_23B126FF0);
}

uint64_t sub_23B141A08(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD, uint64_t))
{
  return a4(*a1, *a2, a2[1], a3);
}

uint64_t sub_23B141A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B0FB930(a1, a2, a3, a4, (uint64_t (*)(void))sub_23AD3B904);
}

unint64_t sub_23B141A48()
{
  return 0xD000000000000012;
}

void sub_23B141A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[98];

  v24[32] = a5;
  v24[31] = a4;
  v24[29] = a3;
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 560);
  v8 = *(_QWORD *)(*v5 + 576);
  v9 = type metadata accessor for SnapshotItem(255, v7, v8, a4);
  v10 = sub_23B1C6C98();
  v24[12] = *(_QWORD *)(v10 - 8);
  v24[13] = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v24[10] = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v24[15] = v9;
  v24[16] = (char *)v24 - v14;
  v24[14] = *(_QWORD *)(v9 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v24[8] = v16;
  v24[9] = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v24[11] = (char *)v24 - v17;
  v18 = *(_QWORD *)(v6 + 568);
  v19 = *(_QWORD *)(v6 + 584);
  v21 = type metadata accessor for ItemReconciliationHalf(0, v18, v19, v20);
  v22 = *(_QWORD *)(v21 - 8);
  v24[20] = v21;
  v24[21] = v22;
  MEMORY[0x24BDAC7A8](v21);
  v24[19] = (char *)v24 - v23;
  v24[27] = v8;
  v24[28] = v7;
  v24[66] = v7;
  v24[67] = v18;
  v24[68] = v8;
  v24[69] = v19;
  type metadata accessor for ItemReconciliation();
}

void sub_23B141BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9[23] = a1;
  v13 = sub_23B1C6C98();
  v9[17] = *(_QWORD *)(v13 - 8);
  v9[18] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&a9 - v14;
  v9[6] = v10;
  v9[7] = v11;
  swift_getAssociatedTypeWitness();
  v16 = sub_23B1C6C98();
  v9[26] = v16;
  v9[24] = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v9[25] = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v19);
  v9[30] = v12;
  v9[22] = v15;
  sub_23AB00114();
}

void sub_23B141CE8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  id v44;
  id v45;
  uint64_t v46;
  void (*v47)(_QWORD, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (*v80)(uint64_t, _QWORD, void (*)(uint64_t), _QWORD *);
  uint64_t v81;

  if (v21)
  {
    v28 = v21;
    sub_23B1455E8(v20[30], v20[29], 0, 0, v21, v20[31], v20[32]);

    return;
  }
  v20[3] = v22;
  v20[4] = v26;
  *v20 = v27;
  v20[1] = v25;
  v20[2] = v24;
  v20[5] = v23;
  v29 = v20[23];
  v30 = *(_QWORD *)(v29 - 8);
  v31 = v20[21];
  v32 = v20[22];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v29) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v20[17] + 8))(v32, v20[18]);
    v33 = v20[25];
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v20[3] + 56))(v33, 1, 1, v20[5]);
    v34 = v20[4];
    v35 = v20[26];
    v36 = v20[24];
LABEL_6:
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v33, v35);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v44 = sub_23AFA9F44(v34, 1, AssociatedTypeWitness, AssociatedConformanceWitness);
    v45 = (id)FPItemNotFoundError();

    ((void (*)(_QWORD, _QWORD, _QWORD, id))v20[31])(0, 0, 0, v45);
    return;
  }
  v38 = v20[19];
  v37 = v20[20];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v38, v32 + *(int *)(v29 + 52), v37);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v29);
  v36 = v20[24];
  v33 = v20[25];
  v35 = v20[26];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v38, v35);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v38, v37);
  v39 = v20[3];
  v40 = v20[5];
  v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v33, 1, v40);
  v34 = v20[4];
  if (v41 == 1)
    goto LABEL_6;
  v46 = v33;
  v47 = *(void (**)(_QWORD, uint64_t, uint64_t))(v39 + 32);
  v47(v20[2], v46, v40);
  v48 = *(_QWORD *)(v20[30] + 32);
  v49 = v20[16];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v48 + 240))(v34, 1);
  v20[26] = v47;
  v50 = v20[14];
  v51 = v20[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v49, 1, v51) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v20[12] + 8))(v49, v20[13]);
    v52 = swift_getAssociatedTypeWitness();
    v53 = swift_getAssociatedConformanceWitness();
    v54 = sub_23AFA9F44(v20[4], 1, v52, v53);
    v55 = (id)FPItemNotFoundError();

    ((void (*)(_QWORD, _QWORD, _QWORD, id))v20[31])(0, 0, 0, v55);
    (*(void (**)(_QWORD, _QWORD))(v39 + 8))(v20[2], v20[5]);
  }
  else
  {
    v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32);
    v57 = v20[11];
    v56(v57, v49, v51);
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    v59 = v20[10];
    v58(v59, v57, v51);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v59, 0, 1, v51);
    v60 = v20[33];
    v61 = v60 + *(_QWORD *)(*(_QWORD *)v60 + 592);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v20[12] + 40))(v61, v59, v20[13]);
    swift_endAccess();
    (*(void (**)(_QWORD))(*(_QWORD *)v48 + 264))(v20[4]);
    v62 = v58;
    v20[25] = v56;
    v63 = v60;
    sub_23AA724E8((uint64_t)(v20 + 35), (uint64_t)(v20 + 66), &qword_2542E5050);
    if (sub_23AAFCF2C((uint64_t)(v20 + 66)) == 1
      || (v64 = v20[94], swift_bridgeObjectRetain(), sub_23AAA5B2C((uint64_t)(v20 + 35)), !v64))
    {
      swift_bridgeObjectRelease();
      v64 = MEMORY[0x24BEE4AF8];
    }
    v65 = v20[30];
    v20[23] = *(_QWORD *)(*(_QWORD *)(v65 + 40) + 16);
    v20[24] = v64;
    v66 = v20[3];
    v67 = v20[1];
    v68 = v20[5];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 16))(v67, v20[2], v68);
    v69 = v20[9];
    v62(v69, v20[11], v20[15]);
    v70 = (*(unsigned __int8 *)(v66 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v71 = *(unsigned __int8 *)(v20[14] + 80);
    v72 = (*v20 + v71 + v70) & ~v71;
    v73 = (v20[8] + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = (_QWORD *)swift_allocObject();
    v75 = v20[6];
    v74[2] = v20[28];
    v74[3] = v75;
    v76 = v20[7];
    v74[4] = v20[27];
    v74[5] = v76;
    v77 = v20[31];
    v74[6] = v65;
    v74[7] = v77;
    v74[8] = v20[32];
    v74[9] = v63;
    ((void (*)(char *, uint64_t, uint64_t))v20[26])((char *)v74 + v70, v67, v68);
    v78 = (char *)v74 + v72;
    v79 = v20[15];
    ((void (*)(char *, uint64_t, uint64_t))v20[25])(v78, v69, v79);
    *(_QWORD *)((char *)v74 + v73) = v20[29];
    v80 = *(void (**)(uint64_t, _QWORD, void (*)(uint64_t), _QWORD *))(*(_QWORD *)v20[23] + 528);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v81 = v20[2];
    v80(v81, v20[24], sub_23B146A6C, v74);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(_QWORD, uint64_t))(v20[14] + 8))(v20[11], v79);
    (*(void (**)(uint64_t, uint64_t))(v20[3] + 8))(v81, v68);
  }
}

void sub_23B1422AC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  NSObject *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, _QWORD, char *, _QWORD *, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *);
  NSObject *v82;
  _QWORD *v83;
  void *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  unint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  void (**v130)(_QWORD, _QWORD, _QWORD);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t AssociatedTypeWitness;
  char *v139;
  uint64_t v140;
  char *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;

  v148 = a8;
  v123 = a7;
  v137 = a6;
  v147 = a5;
  v149 = a3;
  v150 = a2;
  v10 = *a2;
  v132 = sub_23B1C6B3C();
  v130 = *(void (***)(_QWORD, _QWORD, _QWORD))(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v139 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C6AE8();
  v131 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v127 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v129 = (char *)&v115 - v15;
  v128 = sub_23B1C60A4();
  v126 = *(_QWORD *)(v128 - 8);
  v16 = MEMORY[0x24BDAC7A8](v128);
  v125 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v115 - v18;
  v20 = *(_QWORD *)(v10 + 104);
  v146 = v10;
  v144 = *(_QWORD *)(v10 + 88);
  v145 = v20;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v136 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v135 = *(_QWORD *)(v136 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v141 = (char *)&v115 - v21;
  v22 = sub_23B1C5A08();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v122 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v115 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8D38);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (void **)((char *)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v30, &qword_2569E8D38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = *v30;
    v32 = swift_allocObject();
    v33 = v149;
    *(_QWORD *)(v32 + 16) = v149;
    *(_QWORD *)(v32 + 24) = a4;
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = v33;
    v34[3] = a4;
    v34[4] = v31;
    swift_retain_n();
    v35 = v31;
    v36 = type metadata accessor for Continuation();
    sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23B146638, v32, (uint64_t)sub_23AD9EF28, (uint64_t)v34, v36, MEMORY[0x24BEE0D00]);
    swift_release();
    swift_release();

  }
  else
  {
    v124 = a4;
    v37 = v30[1];
    v118 = *v30;
    v38 = v30[2];
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8D40);
    v40 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v40(v27, (char *)v30 + *(int *)(v39 + 80), v22);
    v133 = (uint64_t)v38;
    v41 = v38[2];
    v120 = v22;
    v119 = v23;
    v134 = v27;
    v142 = v37;
    if (v41 || v37[2])
    {
      v116 = v40;
      v143 = swift_allocObject();
      *(_BYTE *)(v143 + 16) = 1;
      v140 = swift_allocObject();
      *(_BYTE *)(v140 + 16) = 1;
      v42 = dispatch_group_create();
      v117 = sub_23AD40D68();
      sub_23B1C6068();
      v151 = MEMORY[0x24BEE4AF8];
      sub_23AD40DA4();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74C0);
      sub_23AD40DEC();
      v43 = v129;
      sub_23B1C6DE8();
      v44 = v126;
      v45 = v128;
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v125, v19, v128);
      v46 = v131;
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v127, v43, v12);
      ((void (**)(char *, _QWORD, uint64_t))v130)[13](v139, *MEMORY[0x24BEE5758], v132);
      v130 = (void (**)(_QWORD, _QWORD, _QWORD))sub_23B1C6B60();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v12);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      if (qword_2569E12C8 != -1)
        swift_once();
      v47 = qword_256A079B0;
      v48 = swift_allocObject();
      *(_QWORD *)(v48 + 16) = 0;
      v139 = (char *)swift_allocObject();
      *((_QWORD *)v139 + 2) = 0;
      v49 = v133;
      v50 = (uint64_t)v134;
      v52 = v142;
      v51 = v143;
      if (*(_QWORD *)(v133 + 16))
      {
        dispatch_group_enter(v42);
        v53 = (_QWORD *)swift_allocObject();
        v53[2] = v42;
        v53[3] = v48;
        v53[4] = v51;
        v54 = v42;
        swift_retain();
        swift_retain();
        sub_23AF00698(v50, MEMORY[0x24BEE4AF8], v49, (uint64_t)sub_23B146B80, (uint64_t)v53);
        swift_release();
      }
      v55 = v52[2];
      v56 = v124;
      v132 = v48;
      if (v55)
      {
        v131 = v47;
        v57 = v50;
        v58 = v119;
        swift_bridgeObjectRetain();
        do
        {
          dispatch_group_enter(v42);
          --v55;
        }
        while (v55);
        swift_bridgeObjectRelease();
        v125 = *(char **)(v150[4] + 16);
        v59 = v147;
        v129 = (char *)(v59 + *(_QWORD *)(*(_QWORD *)v59 + 536));
        v60 = *(_QWORD *)(v146 + 80);
        v61 = *(_QWORD *)(v146 + 96);
        v63 = type metadata accessor for SnapshotItem(0, v60, v61, v62);
        swift_retain();
        v64 = MEMORY[0x23B8613CC](&unk_23B1DD478, v63);
        v65 = v123;
        LODWORD(v128) = sub_23AF219A4(v63, v64);
        v66 = v65 + *(int *)(v63 + 48);
        v127 = *(char **)(v66 + *(int *)(type metadata accessor for ItemMetadata() + 100));
        v67 = *(uint64_t (**)(uint64_t))(*v150 + 272);
        v68 = swift_bridgeObjectRetain();
        v126 = v67(v68);
        v69 = v122;
        v70 = v120;
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v122, v57, v120);
        v71 = (*(unsigned __int8 *)(v58 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        v72 = (v121 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
        v73 = (v72 + 15) & 0xFFFFFFFFFFFFFFF8;
        v74 = (_QWORD *)swift_allocObject();
        v75 = v70;
        v76 = v74;
        v74[2] = v60;
        v77 = v150;
        v74[3] = v144;
        v74[4] = v61;
        v74[5] = v145;
        v74[6] = v77;
        v74[7] = v59;
        v78 = v131;
        v74[8] = v42;
        v74[9] = v78;
        v116((char *)v74 + v71, v69, v75);
        v79 = v132;
        *(_QWORD *)((char *)v76 + v72) = v132;
        v80 = v139;
        *(_QWORD *)((char *)v76 + v73) = v140;
        *(_QWORD *)((char *)v76 + ((v73 + 15) & 0xFFFFFFFFFFFFFFF8)) = v80;
        v48 = v79;
        v81 = *(void (**)(char *, _QWORD, char *, _QWORD *, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *))(*(_QWORD *)v125 + 520);
        swift_retain();
        swift_retain();
        v82 = v42;
        swift_retain();
        swift_retain();
        swift_retain();
        v83 = v142;
        swift_retain();
        v84 = (void *)v126;
        v81(v129, v128, v127, v83, v126, 1, sub_23B146C5C, v76);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();

        v56 = v124;
      }
      v85 = v136;
      v86 = v141;
      v87 = AssociatedTypeWitness;
      (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v141, v137, AssociatedTypeWitness);
      v88 = (*(unsigned __int8 *)(v85 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
      v89 = (v135 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
      v90 = (char *)swift_allocObject();
      v91 = v146;
      v92 = v144;
      *((_QWORD *)v90 + 2) = *(_QWORD *)(v146 + 80);
      *((_QWORD *)v90 + 3) = v92;
      v93 = v145;
      *((_QWORD *)v90 + 4) = *(_QWORD *)(v91 + 96);
      *((_QWORD *)v90 + 5) = v93;
      *((_QWORD *)v90 + 6) = v48;
      v94 = v148;
      v95 = v150;
      *((_QWORD *)v90 + 7) = v147;
      *((_QWORD *)v90 + 8) = v95;
      v96 = v149;
      *((_QWORD *)v90 + 9) = v94;
      *((_QWORD *)v90 + 10) = v96;
      v97 = v139;
      *((_QWORD *)v90 + 11) = v56;
      *((_QWORD *)v90 + 12) = v97;
      v98 = v133;
      *((_QWORD *)v90 + 13) = v143;
      *((_QWORD *)v90 + 14) = v98;
      v99 = v140;
      *((_QWORD *)v90 + 15) = v118;
      *((_QWORD *)v90 + 16) = v99;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(&v90[v88], v86, v87);
      *(_QWORD *)&v90[v89] = v142;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v100 = v130;
      sub_23AA81A30((uint64_t)"execute(on:continuation:result:completion:)", 43, 2, 0, v130, (uint64_t)sub_23B146DC4, (uint64_t)v90);

      swift_release();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v134, v120);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      v101 = swift_allocObject();
      v148 = v101;
      v102 = v149;
      v103 = v124;
      *(_QWORD *)(v101 + 16) = v149;
      *(_QWORD *)(v101 + 24) = v103;
      v104 = v136;
      v105 = AssociatedTypeWitness;
      (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v141, v137, AssociatedTypeWitness);
      v106 = (*(unsigned __int8 *)(v104 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
      v107 = (v135 + v106 + 7) & 0xFFFFFFFFFFFFFFF8;
      v108 = (char *)swift_allocObject();
      v109 = v146;
      v110 = v147;
      v111 = v144;
      *((_QWORD *)v108 + 2) = *(_QWORD *)(v146 + 80);
      *((_QWORD *)v108 + 3) = v111;
      v112 = v145;
      *((_QWORD *)v108 + 4) = *(_QWORD *)(v109 + 96);
      *((_QWORD *)v108 + 5) = v112;
      v113 = v150;
      *((_QWORD *)v108 + 6) = v118;
      *((_QWORD *)v108 + 7) = v113;
      *((_QWORD *)v108 + 8) = v110;
      *((_QWORD *)v108 + 9) = v102;
      *((_QWORD *)v108 + 10) = v103;
      (*(void (**)(char *, char *, uint64_t))(v104 + 32))(&v108[v106], v141, v105);
      *(_QWORD *)&v108[v107] = v142;
      *(_QWORD *)&v108[(v107 + 15) & 0xFFFFFFFFFFFFFFF8] = v133;
      v114 = type metadata accessor for Continuation();
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23B146638, v148, (uint64_t)sub_23B146F14, (uint64_t)v108, v114, MEMORY[0x24BEE0D00]);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v119 + 8))(v134, v120);
    }
  }
}

uint64_t sub_23B142E7C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, unint64_t, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;

  if (!a1)
    type metadata accessor for Mutation();
  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  sub_23B1C64F4();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75E0);
  MEMORY[0x23B85F02C](a7, v9);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C6218();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  a4(0, 0, 0xE000000000000000, 0);
  return swift_bridgeObjectRelease();
}

void sub_23B14322C(int a1, int a2, id a3, dispatch_group_t group, uint64_t a5, uint64_t a6)
{
  _BYTE *v8;
  void **v9;
  id v10;

  if (a3)
  {
    v8 = (_BYTE *)(a6 + 16);
    v9 = (void **)(a5 + 16);
    v10 = a3;
    sub_23B0DBBD0(group, v9, a3, v8);
  }
  dispatch_group_leave(group);
}

void sub_23B14328C(uint64_t a1, _QWORD *a2, uint64_t a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void **v23;
  void *v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  NSObject *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD v81[3];
  uint64_t v82;
  char v83[8];
  __int128 v84;
  __int128 v85;
  _QWORD v86[2];

  v78 = a8;
  v69 = a6;
  v77 = a5;
  v73 = a4;
  v67 = a3;
  v72 = *a2;
  v71 = sub_23B1C5E4C();
  v66 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = (_QWORD *)sub_23B1C5A08();
  v70 = *(v76 - 1);
  v14 = *(_QWORD *)(v70 + 64);
  MEMORY[0x24BDAC7A8](v76);
  v75 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StagedRemoteVersion(0);
  v68 = *(_QWORD *)(v15 - 8);
  v16 = *(_QWORD *)(v68 + 64);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v74 = (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v59 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2950);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (void **)((char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v22, &qword_2569E2950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = (void **)(a7 + 16);
    v24 = *v22;
    v25 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v26 = v24;
    v27 = sub_23B1C5E40();
    v28 = sub_23B1C6AA0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v29 = 138412290;
      swift_getErrorValue();
      v31 = sub_23B0D9CF0(v80);
      *(_QWORD *)&v81[0] = v31;
      sub_23B1C6CBC();
      *v30 = v31;

      _os_log_impl(&dword_23AA66000, v27, v28, "⚔️  Failed to fetch version: %@", v29, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v30, -1, -1);
      MEMORY[0x23B8614BC](v29, -1, -1);
    }
    else
    {

    }
    v37 = v73;
    v38 = v71;
    v39 = v66;

    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v38);
    v40 = v24;
    sub_23B0DAAE4(v37, v23, v24);
    dispatch_group_leave(v37);

  }
  else
  {
    v66 = a7;
    v63 = a9;
    sub_23AF04150((uint64_t)v22, (uint64_t)v19);
    v64 = swift_allocObject();
    *(_QWORD *)(v64 + 16) = 1;
    v71 = swift_allocObject();
    *(_BYTE *)(v71 + 16) = 0;
    v65 = a2;
    v32 = *(_QWORD *)(a2[4] + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_23B1CE680;
    v62 = v32;
    swift_retain();
    sub_23AAA5788((uint64_t *)v81);
    v85 = v81[0];
    v84 = *(_OWORD *)((char *)&v81[1] + 8);
    sub_23AA724E8((uint64_t)&v82, (uint64_t)v83, (uint64_t *)&unk_2542E7460);
    sub_23AA9F49C((uint64_t)&v85);
    sub_23AA9F49C((uint64_t)&v84);
    sub_23ABE5118((uint64_t)v83);
    v34 = (void *)sub_23B1C5AA4();
    v35 = (void *)sub_23B1C5AA4();
    sub_23AA724E8((uint64_t)v83, (uint64_t)v86, (uint64_t *)&unk_2542E7460);
    if (v86[1])
    {
      v36 = (void *)sub_23B1C63BC();
      sub_23ABE5088((uint64_t)v83);
    }
    else
    {
      v36 = 0;
    }
    v67 += *(_QWORD *)(*(_QWORD *)v67 + 536);
    v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v34, v35, v36);
    sub_23AC2452C((uint64_t)&v84);
    sub_23AC2452C((uint64_t)&v85);

    sub_23AAA5CC8((uint64_t *)v81);
    *(_QWORD *)(v33 + 32) = v41;
    v79 = v33;
    sub_23B1C671C();
    v61 = v79;
    sub_23AA907B0((uint64_t)v19, v74, type metadata accessor for StagedRemoteVersion);
    v60 = v19;
    v42 = v70;
    (*(void (**)(char *, uint64_t, _QWORD *))(v70 + 16))(v75, v69, v76);
    v43 = (*(unsigned __int8 *)(v68 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v44 = (v16 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    v46 = (*(unsigned __int8 *)(v42 + 80) + v45 + 8) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    v47 = (v14 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    v49 = swift_allocObject();
    v50 = v72;
    *(_QWORD *)(v49 + 16) = *(_QWORD *)(v72 + 80);
    *(_OWORD *)(v49 + 24) = *(_OWORD *)(v50 + 88);
    v51 = v73;
    *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 104);
    *(_QWORD *)(v49 + 48) = v51;
    *(_QWORD *)(v49 + 56) = v71;
    sub_23AF04150(v74, v49 + v43);
    v52 = v64;
    *(_QWORD *)(v49 + v44) = v64;
    v53 = v52;
    *(_QWORD *)(v49 + v45) = v77;
    (*(void (**)(unint64_t, char *, _QWORD *))(v42 + 32))(v49 + v46, v75, v76);
    *(_QWORD *)(v49 + v47) = v65;
    *(_QWORD *)(v49 + v48) = v66;
    *(_QWORD *)(v49 + ((v48 + 15) & 0xFFFFFFFFFFFFFFF8)) = v78;
    v54 = (_QWORD *)swift_allocObject();
    v55 = v71;
    v54[2] = v51;
    v54[3] = v55;
    v56 = v63;
    v54[4] = v53;
    v54[5] = v56;
    v76 = *(_QWORD **)(*(_QWORD *)v62 + 512);
    v57 = v51;
    swift_retain_n();
    swift_retain_n();
    v58 = v57;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    ((void (*)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, unint64_t, void *), uint64_t, void (*)(void *), _QWORD *, double, double))v76)(v67, v61, sub_23B147274, v49, sub_23B14739C, v54, 1024.0, 1024.0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_23AA937BC((uint64_t)v60, type metadata accessor for StagedRemoteVersion);
    swift_release();
    swift_release();
  }
}

uint64_t sub_23B143A5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _QWORD *a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  _QWORD *v43;
  id v44;
  os_log_t v45;
  _BYTE *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  _BYTE v71[12];
  int v72;
  _QWORD *v73;
  os_log_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  id v86;
  _BYTE *v87;
  uint64_t v88;
  void *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  _QWORD v98[5];
  char v99[8];
  char v100[8];
  __int128 v101;
  __int128 v102;
  _QWORD v103[2];

  v82 = a7;
  v81 = a6;
  v86 = a3;
  v91 = a14;
  v92 = a13;
  v18 = a11;
  v90 = a15;
  v88 = *a15;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v19);
  v78 = &v71[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = type metadata accessor for GSConflictInfo(0);
  v79 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v22 = &v71[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = type metadata accessor for StagedRemoteVersion(0);
  v80 = *(_QWORD *)(v23 - 8);
  v24 = *(_QWORD *)(v80 + 64);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v87 = &v71[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x24BDAC7A8](v25);
  v85 = &v71[-v27];
  MEMORY[0x24BDAC7A8](v26);
  v29 = &v71[-v28];
  v84 = sub_23B1C5E4C();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v31 = &v71[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v93 = a10 + 16;
  v94 = a11;
  v95 = a12;
  v89 = a9;
  sub_23AC45210(a9, (void (*)(void))sub_23B1473A8);
  if (a8)
  {
    v32 = a8;
    v33 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA907B0(a11, (uint64_t)v29, type metadata accessor for StagedRemoteVersion);
    v34 = a8;
    v35 = a8;
    v36 = sub_23B1C5E40();
    v37 = sub_23B1C6AA0();
    if (os_log_type_enabled(v36, (os_log_type_t)v37))
    {
      v72 = v37;
      v74 = v36;
      v75 = a11;
      v76 = v22;
      v38 = swift_slowAlloc();
      v73 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v38 = 138412546;
      sub_23AAA5788(v98);
      v102 = *(_OWORD *)v98;
      v101 = *(_OWORD *)&v98[3];
      sub_23AA724E8((uint64_t)v99, (uint64_t)v100, (uint64_t *)&unk_2542E7460);
      sub_23AA9F49C((uint64_t)&v102);
      sub_23AA9F49C((uint64_t)&v101);
      sub_23ABE5118((uint64_t)v100);
      v39 = (void *)sub_23B1C5AA4();
      v40 = (void *)sub_23B1C5AA4();
      sub_23AA724E8((uint64_t)v100, (uint64_t)v103, (uint64_t *)&unk_2542E7460);
      if (v103[1])
      {
        v41 = (void *)sub_23B1C63BC();
        sub_23ABE5088((uint64_t)v100);
      }
      else
      {
        v41 = 0;
      }
      v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v39, v40, v41);
      sub_23AC2452C((uint64_t)&v101);
      sub_23AC2452C((uint64_t)&v102);

      sub_23AAA5CC8(v98);
      v97 = v42;
      sub_23B1C6CBC();
      v43 = v73;
      *v73 = v42;
      sub_23AA937BC((uint64_t)v29, type metadata accessor for StagedRemoteVersion);
      *(_WORD *)(v38 + 12) = 2112;
      swift_getErrorValue();
      v44 = sub_23B0D9CF0(v96);
      v97 = v44;
      sub_23B1C6CBC();
      v43[1] = v44;

      v45 = v74;
      _os_log_impl(&dword_23AA66000, v74, (os_log_type_t)v72, "⚔️  Failed to fetch thumbnail for ConflictLoser %@ thumbnail: %@", (uint8_t *)v38, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v43, -1, -1);
      MEMORY[0x23B8614BC](v38, -1, -1);

      v22 = v76;
      v18 = v75;
    }
    else
    {

      sub_23AA937BC((uint64_t)v29, type metadata accessor for StagedRemoteVersion);
    }
    (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v31, v84);
  }
  v46 = v85;
  sub_23AA907B0(v18, (uint64_t)v85, type metadata accessor for StagedRemoteVersion);
  v84 = a17;
  v83 = a16;
  if (v86)
  {
    v47 = objc_msgSend(v86, "url");
    v48 = (uint64_t)v78;
    sub_23B1C59CC();

    v49 = sub_23B1C5A08();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
  }
  else
  {
    v50 = sub_23B1C5A08();
    v48 = (uint64_t)v78;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v78, 1, 1, v50);
  }
  v51 = v82;
  v52 = v81;
  v53 = v80;
  v54 = v79;
  v55 = v77;
  sub_23AF04150((uint64_t)v46, (uint64_t)v22);
  sub_23AA724E8(v48, (uint64_t)&v22[*(int *)(v55 + 20)], (uint64_t *)&unk_2542E6740);
  v56 = (uint64_t *)&v22[*(int *)(v55 + 24)];
  *v56 = v52;
  v56[1] = v51;
  __swift_instantiateConcreteTypeFromMangledName(qword_2569E8D48);
  v57 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_23B1CA760;
  sub_23AA907B0((uint64_t)v22, v58 + v57, type metadata accessor for GSConflictInfo);
  sub_23AAA3E2C(v52, v51);
  v59 = sub_23AAEA128(MEMORY[0x24BEE4AF8]);
  v60 = v87;
  sub_23AA907B0(v18, (uint64_t)v87, type metadata accessor for StagedRemoteVersion);
  v61 = (uint64_t)v22;
  v62 = (*(unsigned __int8 *)(v53 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v63 = (v24 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  v66 = swift_allocObject();
  v67 = v88;
  *(_QWORD *)(v66 + 16) = *(_QWORD *)(v88 + 80);
  *(_OWORD *)(v66 + 24) = *(_OWORD *)(v67 + 88);
  *(_QWORD *)(v66 + 40) = *(_QWORD *)(v67 + 104);
  sub_23AF04150((uint64_t)v60, v66 + v62);
  *(_QWORD *)(v66 + v63) = v90;
  v68 = v89;
  *(_QWORD *)(v66 + v64) = v89;
  *(_QWORD *)(v66 + v65) = v83;
  *(_QWORD *)(v66 + ((v65 + 15) & 0xFFFFFFFFFFFFFFF8)) = v84;
  swift_retain();
  v69 = v68;
  swift_retain();
  swift_retain();
  sub_23AF00698(v91, v58, v59, (uint64_t)sub_23B1474A4, v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_23AA937BC(v61, type metadata accessor for GSConflictInfo);
}

uint64_t sub_23B14423C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  NSObject *v19;
  int v20;
  uint8_t *v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  uint64_t result;
  id v27;
  NSObject *v28;
  int v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  objc_class *v34;
  os_log_t v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  os_log_t v39;
  _QWORD v40[2];
  int v41;
  _QWORD *v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[2];
  _BYTE v48[8];
  uint64_t v49;
  uint64_t v50[3];
  __int128 v51;
  _BYTE v52[16];
  _BYTE v53[16];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v7 = type metadata accessor for StagedRemoteVersion(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v40 - v11;
  v57 = sub_23B1C5E4C();
  v45 = *(_QWORD *)(v57 - 8);
  v13 = MEMORY[0x24BDAC7A8](v57);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v40 - v16;
  swift_beginAccess();
  if (*a1 == 1)
  {
    v18 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA907B0(a2, (uint64_t)v12, type metadata accessor for StagedRemoteVersion);
    v19 = sub_23B1C5E40();
    v20 = sub_23B1C6A88();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      LODWORD(v42) = v20;
      v44 = v3;
      v21 = (uint8_t *)swift_slowAlloc();
      v43 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)v21 = 138412290;
      sub_23AAA5788(v50);
      v47[0] = *(_OWORD *)v50;
      v56 = v51;
      sub_23AA724E8((uint64_t)v52, (uint64_t)&v55, (uint64_t *)&unk_2542E7460);
      sub_23AA9F49C((uint64_t)v47);
      sub_23AA9F49C((uint64_t)&v56);
      sub_23ABE5118((uint64_t)&v55);
      v22 = (void *)sub_23B1C5AA4();
      v23 = (void *)sub_23B1C5AA4();
      sub_23AA724E8((uint64_t)&v55, (uint64_t)v48, (uint64_t *)&unk_2542E7460);
      if (v49)
      {
        v24 = (void *)sub_23B1C63BC();
        sub_23ABE5088((uint64_t)&v55);
      }
      else
      {
        v24 = 0;
      }
      v34 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v22, v23, v24);
      sub_23AC2452C((uint64_t)&v56);
      sub_23AC2452C((uint64_t)v47);

      sub_23AAA5CC8(v50);
      *(_QWORD *)&v54 = v34;
      sub_23B1C6CBC();
      v35 = v43;
      v43->isa = v34;
      sub_23AA937BC((uint64_t)v12, type metadata accessor for StagedRemoteVersion);
      _os_log_impl(&dword_23AA66000, v19, (os_log_type_t)v42, "⚔️  Fetch thumbnail for %@ finished after global handler was called", v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v35, -1, -1);
      MEMORY[0x23B8614BC](v21, -1, -1);
    }
    else
    {
      sub_23AA937BC((uint64_t)v12, type metadata accessor for StagedRemoteVersion);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v57);
  }
  else
  {
    v25 = (_QWORD *)(a3 + 16);
    swift_beginAccess();
    if (*(_QWORD *)(a3 + 16) == 1)
    {
      result = swift_beginAccess();
      if (__OFSUB__(*v25, 1))
        __break(1u);
      else
        --*v25;
    }
    else
    {
      v27 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      sub_23AA907B0(a2, (uint64_t)v10, type metadata accessor for StagedRemoteVersion);
      swift_retain_n();
      v28 = sub_23B1C5E40();
      v29 = sub_23B1C6A88();
      if (os_log_type_enabled(v28, (os_log_type_t)v29))
      {
        v41 = v29;
        v43 = v28;
        v44 = v3;
        v30 = swift_slowAlloc();
        v42 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v30 = 138412546;
        sub_23AAA5788(v50);
        v54 = v51;
        v55 = *(_OWORD *)v50;
        sub_23AA724E8((uint64_t)v52, (uint64_t)v53, (uint64_t *)&unk_2542E7460);
        sub_23AA9F49C((uint64_t)&v55);
        sub_23AA9F49C((uint64_t)&v54);
        sub_23ABE5118((uint64_t)v53);
        v31 = (void *)sub_23B1C5AA4();
        v32 = (void *)sub_23B1C5AA4();
        sub_23AA724E8((uint64_t)v53, (uint64_t)&v56, (uint64_t *)&unk_2542E7460);
        if (*((_QWORD *)&v56 + 1))
        {
          v33 = (void *)sub_23B1C63BC();
          sub_23ABE5088((uint64_t)v53);
        }
        else
        {
          v33 = 0;
        }
        v40[1] = v30 + 4;
        v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v31, v32, v33);
        sub_23AC2452C((uint64_t)&v54);
        sub_23AC2452C((uint64_t)&v55);

        sub_23AAA5CC8(v50);
        *(_QWORD *)&v47[0] = v36;
        sub_23B1C6CBC();
        v37 = v42;
        *v42 = v36;
        sub_23AA937BC((uint64_t)v10, type metadata accessor for StagedRemoteVersion);
        *(_WORD *)(v30 + 12) = 2048;
        swift_beginAccess();
        v38 = *(_QWORD *)(a3 + 16);
        swift_release();
        v46 = v38;
        sub_23B1C6CBC();
        swift_release();
        v39 = v43;
        _os_log_impl(&dword_23AA66000, v43, (os_log_type_t)v41, "⚔️  Fetch thumbnail for %@ has an unbalanced fetch %ld", (uint8_t *)v30, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v37, -1, -1);
        MEMORY[0x23B8614BC](v30, -1, -1);

      }
      else
      {
        swift_release();
        sub_23AA937BC((uint64_t)v10, type metadata accessor for StagedRemoteVersion);

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v15, v57);
    }
  }
  return result;
}

void sub_23B144910(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  int v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  NSObject *v41;
  void (*v42)(uint64_t, void (*)(), _QWORD *);
  id v43;
  NSObject *v44;
  _BYTE v45[12];
  int v46;
  _QWORD *v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  id v57;
  _OWORD v58[3];
  uint64_t v59;
  _BYTE v60[16];
  __int128 v61;
  __int128 v62;
  _QWORD v63[2];

  v14 = type metadata accessor for StagedRemoteVersion(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_23B1C5E4C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = &v45[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3)
  {
    v52 = v19;
    v53 = v14;
    v55 = a6;
    v22 = a3;
    v23 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v54 = a4;
    sub_23AA907B0(a4, (uint64_t)v16, type metadata accessor for StagedRemoteVersion);
    v24 = a3;
    v25 = a3;
    v26 = sub_23B1C5E40();
    v27 = sub_23B1C6AA0();
    if (os_log_type_enabled(v26, (os_log_type_t)v27))
    {
      v46 = v27;
      v48 = v26;
      v49 = a5;
      v50 = a7;
      v51 = a8;
      v28 = swift_slowAlloc();
      v47 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138412546;
      sub_23AAA5788((uint64_t *)v58);
      v62 = v58[0];
      v61 = *(_OWORD *)((char *)&v58[1] + 8);
      sub_23AA724E8((uint64_t)&v59, (uint64_t)v60, (uint64_t *)&unk_2542E7460);
      sub_23AA9F49C((uint64_t)&v62);
      sub_23AA9F49C((uint64_t)&v61);
      sub_23ABE5118((uint64_t)v60);
      v29 = (void *)sub_23B1C5AA4();
      v30 = (void *)sub_23B1C5AA4();
      sub_23AA724E8((uint64_t)v60, (uint64_t)v63, (uint64_t *)&unk_2542E7460);
      if (v63[1])
      {
        v31 = (void *)sub_23B1C63BC();
        sub_23ABE5088((uint64_t)v60);
      }
      else
      {
        v31 = 0;
      }
      v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v29, v30, v31);
      sub_23AC2452C((uint64_t)&v61);
      sub_23AC2452C((uint64_t)&v62);

      sub_23AAA5CC8((uint64_t *)v58);
      v57 = v32;
      sub_23B1C6CBC();
      v33 = v47;
      *v47 = v32;
      sub_23AA937BC((uint64_t)v16, type metadata accessor for StagedRemoteVersion);
      *(_WORD *)(v28 + 12) = 2112;
      swift_getErrorValue();
      v34 = sub_23B0D9CF0(v56);
      v57 = v34;
      sub_23B1C6CBC();
      v33[1] = v34;

      v26 = v48;
      _os_log_impl(&dword_23AA66000, v48, (os_log_type_t)v46, "⚔️  Failed to update ConflictLoser %@ to GS: %@", (uint8_t *)v28, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v33, -1, -1);
      MEMORY[0x23B8614BC](v28, -1, -1);
      a8 = v51;
      a7 = v50;
      a5 = v49;
    }
    else
    {
      sub_23AA937BC((uint64_t)v16, type metadata accessor for StagedRemoteVersion);

    }
    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v21, v52);
    v35 = *(_QWORD *)(*(_QWORD *)(a5 + 40) + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
    v36 = sub_23B1C5A08();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_23B1CA760;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v37 + 16))(v39 + v38, v54 + *(int *)(v53 + 20), v36);
    v40 = (_QWORD *)swift_allocObject();
    v41 = v55;
    v40[2] = v55;
    v40[3] = a7;
    v40[4] = a3;
    v40[5] = a8;
    v42 = *(void (**)(uint64_t, void (*)(), _QWORD *))(*(_QWORD *)v35 + 856);
    v43 = a3;
    swift_retain();
    v44 = v41;
    swift_retain();
    swift_retain();
    v42(v39, sub_23B147584, v40);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    dispatch_group_leave(a6);
  }
}

void sub_23B144E38(NSObject *a1, uint64_t a2, id a3, uint64_t a4)
{
  void **v7;
  id v8;

  v7 = (void **)(a2 + 16);
  v8 = a3;
  sub_23B0DAAE4(a1, v7, a3);
  swift_beginAccess();
  *(_BYTE *)(a4 + 16) = 1;
  dispatch_group_leave(a1);
}

void sub_23B144EBC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v8;
  void **v9;
  id v10;
  NSObject *v11;

  v8 = (_BYTE *)(a3 + 16);
  v9 = (void **)(a5 + 16);
  swift_retain();
  v10 = a1;
  v11 = a2;
  sub_23B0DBDB4(v11, v8, a4, a1, v9, v11);
}

uint64_t sub_23B144F30(_BYTE *a1, uint64_t a2, void *a3, void **a4, NSObject *a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t result;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  void (*v21)(char *, uint64_t);
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  _QWORD *v30;
  void **v31;
  void *v32;
  _QWORD *v33;
  void **v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;

  v37 = a3;
  v36 = sub_23B1C5E4C();
  v9 = *(_QWORD **)(v36 - 8);
  v10 = MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - v12;
  v14 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  *a1 = 1;
  result = swift_beginAccess();
  if (*(uint64_t *)(a2 + 16) >= 1)
  {
    v16 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v17 = sub_23B1C5E40();
    v18 = sub_23B1C6A88();
    v19 = os_log_type_enabled(v17, v18);
    v34 = a4;
    if (v19)
    {
      v33 = v9;
      v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v20 = 134217984;
      swift_beginAccess();
      v39 = *(id *)(a2 + 16);
      v9 = v33;
      sub_23B1C6CBC();
      swift_release();
      _os_log_impl(&dword_23AA66000, v17, v18, "⚔️  Global fetch thumbnail is executed before %ld thumbnails fetch finished", v20, 0xCu);
      MEMORY[0x23B8614BC](v20, -1, -1);

    }
    else
    {

      swift_release();
    }
    v21 = (void (*)(char *, uint64_t))v9[1];
    v21(v13, v36);
    v22 = v37;
    if (v37)
    {
      v23 = v37;
      v24 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v25 = v22;
      v26 = sub_23B1C5E40();
      v27 = sub_23B1C6AA0();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        v33 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v28 = 138412290;
        swift_getErrorValue();
        v29 = sub_23B0D9CF0(v38);
        v39 = v29;
        v22 = v37;
        sub_23B1C6CBC();
        v30 = v33;
        *v33 = v29;

        _os_log_impl(&dword_23AA66000, v26, v27, "⚔️ Global fetch thumbnail failed: %@", v28, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v30, -1, -1);
        MEMORY[0x23B8614BC](v28, -1, -1);
      }
      else
      {

      }
      v31 = v34;

      v21(v35, v36);
      swift_beginAccess();
      v32 = *v31;
      *v31 = v22;

    }
    result = swift_beginAccess();
    if ((uint64_t)*v14 >= 1)
    {
      while (1)
      {
        dispatch_group_leave(a5);
        result = swift_beginAccess();
        if (__OFSUB__(*v14, 1))
          break;
        --*v14;
        result = swift_beginAccess();
        if ((uint64_t)*v14 <= 0)
          return result;
      }
      __break(1u);
    }
  }
  return result;
}

void sub_23B145358(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;

  v41 = a7;
  v42 = a8;
  v43 = a6;
  v44 = a2;
  v45 = a3;
  v16 = *a2;
  v17 = *(_QWORD *)(*a2 + 584);
  v18 = *(_QWORD *)(*a2 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v23 = (char *)&v35 - v22;
  swift_beginAccess();
  v24 = *(void **)(a1 + 16);
  if (v24)
  {
    v25 = v24;
    sub_23B1455E8(v45, a4, 0, 0, v24, a5, v43);

  }
  else
  {
    v40 = a11;
    v37 = a10;
    v38 = a13;
    v36 = a9;
    v26 = swift_allocObject();
    v39 = v26;
    v27 = v43;
    *(_QWORD *)(v26 + 16) = a5;
    *(_QWORD *)(v26 + 24) = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a12, AssociatedTypeWitness);
    v28 = (*(unsigned __int8 *)(v20 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v29 = (v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = (char *)swift_allocObject();
    *((_QWORD *)v30 + 2) = *(_QWORD *)(v16 + 560);
    *((_QWORD *)v30 + 3) = v18;
    *((_QWORD *)v30 + 4) = *(_QWORD *)(v16 + 576);
    *((_QWORD *)v30 + 5) = v17;
    v31 = v42;
    *((_QWORD *)v30 + 6) = v41;
    *((_QWORD *)v30 + 7) = a5;
    *((_QWORD *)v30 + 8) = v43;
    *((_QWORD *)v30 + 9) = v31;
    v32 = v37;
    *((_QWORD *)v30 + 10) = v36;
    *((_QWORD *)v30 + 11) = v32;
    v33 = v45;
    *((_QWORD *)v30 + 12) = v40;
    *((_QWORD *)v30 + 13) = v33;
    *((_QWORD *)v30 + 14) = v44;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v30[v28], v23, AssociatedTypeWitness);
    *(_QWORD *)&v30[v29] = v38;
    v34 = type metadata accessor for Continuation();
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23B146638, v39, (uint64_t)sub_23B14709C, (uint64_t)v30, v34, MEMORY[0x24BEE0D00]);
    swift_release();
    swift_release();
  }
}

uint64_t sub_23B1455E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a6;
  *(_QWORD *)(v14 + 24) = a7;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = v7;
  v15[4] = a6;
  v15[5] = a7;
  v15[6] = a3;
  v15[7] = a4;
  v15[8] = a5;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v16 = a5;
  v17 = type metadata accessor for Continuation();
  sub_23AD02DFC((uint64_t)"retry(on:result:message:error:completion:)", 42, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23B146638, v14, (uint64_t)sub_23B147604, (uint64_t)v15, v17, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

void sub_23B145714(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, void *))
{
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(a1 + 16);
  if (!v4)
  {
    swift_beginAccess();
    swift_beginAccess();
    type metadata accessor for Mutation();
  }
  v5 = v4;
  a2(0, 0, 0, v4);

}

void sub_23B145B2C()
{
  type metadata accessor for JobResult();
}

void sub_23B145B84()
{
  type metadata accessor for Conflict.PopulateConflicts();
}

uint64_t sub_23B145B9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(_QWORD, uint64_t, uint64_t);

  v4 = (uint64_t)v0 + *(_QWORD *)(*v0 + 536);
  v5 = v0[14];
  v6 = v0[15];
  v7 = v0[16];
  swift_allocObject();
  v8 = sub_23B126F70(v4, v5, v6, v7);
  sub_23AE181A4(v3, v8);
  swift_release();
  return v10(0, v2, v1);
}

void type metadata accessor for Conflict.PopulateConflicts()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23B145C38()
{
  return 0xD000000000000015;
}

uint64_t sub_23B145C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t (*)(void *), _QWORD *);
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];

  v6 = v5;
  v39 = a5;
  v40 = a3;
  v36 = a4;
  v37 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)&v33 - v8;
  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain_n();
  v14 = sub_23B1C5E40();
  v15 = sub_23B1C6A88();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v41 = AssociatedTypeWitness;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v35 = v9;
    v19 = v18;
    v34 = v10;
    *(_DWORD *)v17 = 136315138;
    v44[0] = v18;
    v33 = v17 + 4;
    swift_getAssociatedConformanceWitness();
    v20 = sub_23B1C7304();
    v43 = sub_23AABEC68(v20, v21, v44);
    sub_23B1C6CBC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v14, v15, "⚔️  Removing all remote versions for item %s ...", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v19, -1, -1);
    v22 = v17;
    AssociatedTypeWitness = v41;
    MEMORY[0x23B8614BC](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v23 = v37;
  v24 = v38;
  v25 = *(_QWORD **)(*(_QWORD *)(v37 + 32) + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v38, v6 + *(_QWORD *)(*(_QWORD *)v6 + 536), AssociatedTypeWitness);
  v26 = v25[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v27 = *(unsigned int *)(v26 + 8);
  v28 = (_QWORD *)swift_allocObject();
  v29 = v36;
  v28[2] = v23;
  v28[3] = v29;
  v30 = v40;
  v28[4] = v39;
  v28[5] = v6;
  v28[6] = v30;
  v31 = *(void (**)(char *, uint64_t, uint64_t (*)(void *), _QWORD *))(*v25 + 536);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v31(v24, v27, sub_23B146604, v28);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v24, AssociatedTypeWitness);
}

uint64_t sub_23B145FC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a3;
  *(_QWORD *)(v12 + 24) = a4;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a5;
  v13[4] = a6;
  v13[5] = a3;
  v13[6] = a4;
  v13[7] = a2;
  swift_retain_n();
  v14 = a1;
  v15 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23B146638, v12, (uint64_t)sub_23B146680, (uint64_t)v13, v15, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

void sub_23B1460D8(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_23B1C7340();
    sub_23B1C64F4();
    sub_23B1464DC();
  }
  type metadata accessor for Mutation();
}

void sub_23B14623C()
{
  sub_23B1C6758();
  type metadata accessor for ReconciliationMutation();
}

void sub_23B146260()
{
  sub_23B1C7310();
  swift_allocObject();
  sub_23B1C6728();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23B14633C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10 + *(_QWORD *)(*(_QWORD *)v10 + 536), v11);
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v9 + v12) = 0;
  swift_storeEnumTagMultiPayload();
  sub_23AD7D55C(a9);
  sub_23ACFFD18();
}

void sub_23B1463D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(_QWORD, _QWORD, unint64_t, void *))
{
  void *v14;
  id v15;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
    v15 = v14;
    a14(0, 0, 0, v14);

  }
  else
  {
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23B1C7340();
    sub_23B1C64F4();
    a14(0, 0, 0xE000000000000000, 0);
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x23B1464BCLL);
}

void sub_23B1464DC()
{
  type metadata accessor for JobResult();
}

uint64_t sub_23B146528()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v12)(_QWORD, uint64_t, uint64_t, uint64_t);

  v6 = (uint64_t)v0 + *(_QWORD *)(v5 + 536);
  v7 = v0[14];
  v8 = v0[15];
  v9 = v0[16];
  swift_allocObject();
  v10 = sub_23AF1AD34(v6, v7, v8, v9);
  sub_23AE181A4(v4, v10);
  swift_release();
  return v12(0, v3, v2, v1);
}

void type metadata accessor for RemoteVersion.CleanRemoteVersions()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B1465C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B146604(void *a1)
{
  uint64_t *v1;

  return sub_23B145FC0(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_23B146614()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B14663C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B146680()
{
  uint64_t v0;

  sub_23B1460D8(*(void **)(v0 + 16));
}

void sub_23B1466A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v8 = type metadata accessor for SnapshotItem(0, v1, v2, v7);
  v9 = (v5 + v6 + *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, AssociatedTypeWitness);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v0 + v9, v10);
  v11(v0 + v9 + *(int *)(v8 + 36), v10);
  v12 = v0 + v9 + *(int *)(v8 + 40);
  v13 = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B146854(uint64_t a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3 + *(int *)(a1 + 56), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v2 + v1[12];
  v7 = (int *)type metadata accessor for ItemMetadata();
  v8 = v6 + v7[7];
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(v6 + v7[33]);
  v14 = v13[1];
  if (v14 >> 60 != 15)
    sub_23AAAE53C(*v13, v14);
  swift_bridgeObjectRelease();
  v15 = v2 + v1[13];
  v16 = *(void **)(v15 + 16);
  if (v16 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v15 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAA12F0(*(_QWORD *)(v2 + v1[17]), *(_QWORD *)(v2 + v1[17] + 8));
  swift_release();
  return swift_deallocObject();
}

void sub_23B146A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v9 = *(_QWORD *)(type metadata accessor for SnapshotItem(0, v3, v4, v8) - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_23B1422AC(a1, *(_QWORD **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), v1 + v6, v1 + v10, *(_QWORD *)(v1 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B146B18()
{
  return swift_deallocObject();
}

uint64_t sub_23B146B28()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23B146B4C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B146B80(int a1, int a2, void *a3)
{
  uint64_t v3;

  sub_23B14322C(a1, a2, a3, *(dispatch_group_t *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_23B146B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B146C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23B14328C(a1, *(_QWORD **)(v1 + 48), *(_QWORD *)(v1 + 56), *(NSObject **)(v1 + 64), *(_QWORD *)(v1 + 72), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B146CDC()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23B146DC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23B145358(*(_QWORD *)(v0 + 48), *(uint64_t **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B146E4C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B146F14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_23B142E7C(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void (**)(_QWORD, _QWORD, unint64_t, _QWORD))(v0 + 72), *(_QWORD *)(v0 + 80), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23B146F98()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23B146FC4()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23B14709C()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  sub_23B145714(*(_QWORD *)(v0 + 48), *(void (**)(_QWORD, _QWORD, _QWORD, void *))(v0 + 56));
}

uint64_t sub_23B14712C()
{
  return swift_deallocObject();
}

uint64_t sub_23B14713C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id *v8;
  char *v9;
  void (*v10)(char *, uint64_t);

  v1 = type metadata accessor for StagedRemoteVersion(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  swift_release();
  v8 = (id *)(v0 + v3);

  v9 = (char *)v8 + *(int *)(v1 + 20);
  v10 = *(void (**)(char *, uint64_t))(v6 + 8);
  v10(v9, v5);
  swift_release();
  swift_release();
  v10((char *)(v0 + v7), v5);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B147274(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8)
{
  uint64_t v8;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v15 = *(_QWORD *)(type metadata accessor for StagedRemoteVersion(0) - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = (*(_QWORD *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + v18 + 8) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (*(_QWORD *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B143A5C(a1, a2, a3, a4, a5, a6, a7, a8, *(void **)(v8 + 48), *(_QWORD *)(v8 + 56), v8 + v16, *(_QWORD *)(v8 + v17), *(_QWORD *)(v8 + v18), v8 + v20, *(_QWORD **)(v8 + v21), *(_QWORD *)(v8 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v8 + ((((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B147390()
{
  return objectdestroy_56Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23B14739C(void *a1)
{
  uint64_t v1;

  sub_23B144EBC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23B1473A8()
{
  uint64_t v0;

  return sub_23B14423C(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23B1473C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for StagedRemoteVersion(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;

  v6 = v5 + *(int *)(v1 + 20);
  v7 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B1474A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for StagedRemoteVersion(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23B144910(a1, a2, a3, v3 + v8, *(_QWORD *)(v3 + v9), *(NSObject **)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B147530()
{
  return objectdestroy_56Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t objectdestroy_56Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  swift_release();
  return swift_deallocObject();
}

void sub_23B147584()
{
  uint64_t v0;

  sub_23B144E38(*(NSObject **)(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23B147590(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v3 + 16))(*a1, *a2, a2[1], a3);
}

uint64_t sub_23B1475C0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_23B147604()
{
  sub_23B145B2C();
}

void type metadata accessor for Conflict()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for RemoteVersion()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B147654(uint64_t a1)
{
  return sub_23B147A24(a1, (uint64_t *)&unk_2569E3148);
}

uint64_t sub_23B147660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5588);
    v2 = sub_23B1C70AC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v37[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    v17 = *(void **)&v37[0];
    type metadata accessor for NSFileProviderItemIdentifier(0);
    v19 = v17;
    v18;
    swift_dynamicCast();
    swift_dynamicCast();
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_23AAA159C(&v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_23AAA159C(v36, v37);
    sub_23AAA159C(v37, &v33);
    result = sub_23B1C6E6C();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_23AAA159C(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_23ACF19B8();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23B147A18(uint64_t a1)
{
  return sub_23B147A24(a1, &qword_2569E5608);
}

uint64_t sub_23B147A24(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F18);
    v4 = sub_23B1C70AC();
  }
  else
  {
    v4 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(63 - v5) >> 6;
  v9 = v4 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v7)
    {
      v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_28;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v8)
      goto LABEL_37;
    v17 = *(_QWORD *)(v28 + 8 * v16);
    v18 = v11 + 1;
    if (!v17)
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v8)
        goto LABEL_37;
      v17 = *(_QWORD *)(v28 + 8 * v18);
      if (!v17)
      {
        v18 = v11 + 3;
        if (v11 + 3 >= v8)
          goto LABEL_37;
        v17 = *(_QWORD *)(v28 + 8 * v18);
        if (!v17)
        {
          v18 = v11 + 4;
          if (v11 + 4 >= v8)
            goto LABEL_37;
          v17 = *(_QWORD *)(v28 + 8 * v18);
          if (!v17)
            break;
        }
      }
    }
LABEL_27:
    v7 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
    v11 = v18;
LABEL_28:
    v20 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v15);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E27E0);
    swift_dynamicCast();
    result = sub_23B1C6C44();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v23);
      }
      while (v27 == -1);
      v12 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = 8 * v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v13) = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v13) = v29;
    ++*(_QWORD *)(v4 + 16);
  }
  v19 = v11 + 5;
  if (v11 + 5 >= v8)
  {
LABEL_37:
    swift_release();
    sub_23ACF19B8();
    return v4;
  }
  v17 = *(_QWORD *)(v28 + 8 * v19);
  if (v17)
  {
    v18 = v11 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v8)
      goto LABEL_37;
    v17 = *(_QWORD *)(v28 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23B147D30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5588);
    v2 = sub_23B1C70AC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_23AAA15AC(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_23AAA159C(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_23AAA159C(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_23AAA159C(v36, v37);
    sub_23AAA159C(v37, &v33);
    result = sub_23B1C6E6C();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_23AAA159C(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_23ACF19B8();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_23B1480F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 *v6;
  __int128 *v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _QWORD v37[5];
  __int128 v38;
  uint64_t v39;
  __int128 v40[3];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF3A0);
    v2 = (_QWORD *)sub_23B1C70AC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v34 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v33 = (unint64_t)(63 - v3) >> 6;
  v6 = (__int128 *)v37;
  v7 = (__int128 *)&v39;
  result = swift_bridgeObjectRetain();
  v35 = 0;
  v9 = MEMORY[0x24BEE1768];
  v10 = MEMORY[0x24BEE1770];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v35 + 1;
  if (__OFADD__(v35, 1))
    goto LABEL_35;
  if (v19 >= v33)
    goto LABEL_32;
  v20 = *(_QWORD *)(v34 + 8 * v19);
  v21 = v35 + 1;
  if (!v20)
  {
    v21 = v35 + 2;
    if (v35 + 2 >= v33)
      goto LABEL_32;
    v20 = *(_QWORD *)(v34 + 8 * v21);
    if (!v20)
    {
      v21 = v35 + 3;
      if (v35 + 3 >= v33)
        goto LABEL_32;
      v20 = *(_QWORD *)(v34 + 8 * v21);
      if (!v20)
      {
        v21 = v35 + 4;
        if (v35 + 4 >= v33)
          goto LABEL_32;
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          v22 = v35 + 5;
          if (v35 + 5 < v33)
          {
            v20 = *(_QWORD *)(v34 + 8 * v22);
            if (v20)
            {
              v21 = v35 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v33)
                break;
              v20 = *(_QWORD *)(v34 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_23ACF19B8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v35 = v21;
  v36 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v35 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    v26 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * i);
    v37[3] = v9;
    v37[4] = v10;
    v37[0] = v26;
    sub_23ABD76F0(v6, (uint64_t)v7);
    sub_23ABD76F0(v7, (uint64_t)v40);
    sub_23ABD76F0(v40, (uint64_t)&v38);
    swift_bridgeObjectRetain();
    result = sub_23AAAF4C4(v25, v24);
    v27 = result;
    if ((v28 & 1) != 0)
    {
      v11 = v7;
      v12 = v1;
      v13 = v10;
      v14 = v9;
      v15 = v6;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v25;
      v16[1] = v24;
      v6 = v15;
      v9 = v14;
      v10 = v13;
      v1 = v12;
      v7 = v11;
      v17 = v2[7] + 40 * v27;
      __swift_destroy_boxed_opaque_existential_1(v17);
      result = sub_23ABD76F0(&v38, v17);
      v5 = v36;
      if (!v36)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v29 = (uint64_t *)(v2[6] + 16 * result);
    *v29 = v25;
    v29[1] = v24;
    result = sub_23ABD76F0(&v38, v2[7] + 40 * result);
    v30 = v2[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_34;
    v2[2] = v32;
    v5 = v36;
    if (!v36)
      goto LABEL_11;
LABEL_10:
    v36 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_23B148430(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t i;
  uint64_t *v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  char v29[40];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[3];
  __int128 v36[2];
  uint64_t v37;
  __int128 v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5578);
    v2 = (_QWORD *)sub_23B1C70AC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v12 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v12 >= v27)
    goto LABEL_32;
  v13 = *(_QWORD *)(v28 + 8 * v12);
  v14 = i + 1;
  if (!v13)
  {
    v14 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v14);
    if (!v13)
    {
      v14 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v14);
      if (!v13)
      {
        v14 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v14);
        if (!v13)
        {
          v15 = i + 5;
          if (i + 5 < v27)
          {
            v13 = *(_QWORD *)(v28 + 8 * v15);
            if (v13)
            {
              v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v14 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_36;
              if (v14 >= v27)
                break;
              v13 = *(_QWORD *)(v28 + 8 * v14);
              ++v15;
              if (v13)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_23ACF19B8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v13 - 1) & v13;
  v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; v11 = v10 | (i << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    sub_23AA77B28(*(_QWORD *)(a1 + 56) + 40 * v11, (uint64_t)v39);
    *(_QWORD *)&v38 = v18;
    *((_QWORD *)&v38 + 1) = v17;
    v35[2] = v38;
    v36[0] = v39[0];
    v36[1] = v39[1];
    v37 = v40;
    v30 = v18;
    v31 = v17;
    sub_23ABD76F0(v36, (uint64_t)v29);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF368);
    swift_dynamicCast();
    v20 = v30;
    v19 = v31;
    sub_23AAA159C(&v32, v34);
    sub_23AAA159C(v34, v35);
    sub_23AAA159C(v35, &v33);
    result = sub_23AAAF4C4(v20, v19);
    v21 = result;
    if ((v22 & 1) != 0)
    {
      v8 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v20;
      v8[1] = v19;
      v9 = (_OWORD *)(v2[7] + 32 * v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      result = (unint64_t)sub_23AAA159C(&v33, v9);
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v23 = (uint64_t *)(v2[6] + 16 * result);
    *v23 = v20;
    v23[1] = v19;
    result = (unint64_t)sub_23AAA159C(&v33, (_OWORD *)(v2[7] + 32 * result));
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23B1487A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  _OWORD v32[4];
  _OWORD v33[2];
  _OWORD v34[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2569E4100);
    v2 = sub_23B1C70AC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v30 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v31 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v31 << 6);
      goto LABEL_28;
    }
    v11 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v29)
      goto LABEL_37;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    v13 = v31 + 1;
    if (!v12)
    {
      v13 = v31 + 2;
      if (v31 + 2 >= v29)
        goto LABEL_37;
      v12 = *(_QWORD *)(v30 + 8 * v13);
      if (!v12)
      {
        v13 = v31 + 3;
        if (v31 + 3 >= v29)
          goto LABEL_37;
        v12 = *(_QWORD *)(v30 + 8 * v13);
        if (!v12)
        {
          v13 = v31 + 4;
          if (v31 + 4 >= v29)
            goto LABEL_37;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v31 = v13;
LABEL_28:
    v15 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v10);
    v17 = *v16;
    v18 = v16[1];
    *(_QWORD *)&v34[0] = v15;
    *(_QWORD *)&v33[0] = v17;
    *((_QWORD *)&v33[0] + 1) = v18;
    v19 = v15;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v20 = *(_QWORD *)&v34[0];
    sub_23AAA159C((_OWORD *)((char *)v34 + 8), v32);
    sub_23AAA159C(v32, v34);
    sub_23AAA159C(v34, v33);
    sub_23B1C63E0();
    sub_23B1C74A8();
    sub_23B1C64A0();
    v21 = sub_23B1C74E4();
    result = swift_bridgeObjectRelease();
    v22 = -1 << *(_BYTE *)(v2 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v6 + 8 * (v23 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v6 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v6 + 8 * v24);
      }
      while (v28 == -1);
      v8 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v20;
    result = (uint64_t)sub_23AAA159C(v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v31 + 5;
  if (v31 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_23ACF19B8();
    return v2;
  }
  v12 = *(_QWORD *)(v30 + 8 * v14);
  if (v12)
  {
    v13 = v31 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v29)
      goto LABEL_37;
    v12 = *(_QWORD *)(v30 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23B148B40(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23B1C6FBC();
    v9 = *(_QWORD *)(sub_23B1C5A08() - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4)
        break;
      v4 = 0;
      sub_23B1C6F98();
      sub_23B1C6FC8();
      sub_23B1C6FD4();
      sub_23B1C6FA4();
      v10 += v11;
      if (!--v6)
        return v13;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23B148C48(void (*a1)(_QWORD *__return_ptr, uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_23ADACF4C(0, v5, 0);
    v6 = v20;
    v8 = *(_QWORD *)(sub_23B1C5A08() - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v16 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      a1(v19, v9, &v18);
      if (v4)
        break;
      v4 = 0;
      v10 = v19[0];
      v11 = v19[1];
      v20 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_23ADACF4C(v12 > 1, v13 + 1, 1);
        v6 = v20;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      v14 = v6 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v11;
      v9 += v16;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t (*sub_23B148D70(_QWORD *a1, uint64_t a2, char a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_23B181EF4(v6, a2, a3);
  return sub_23B148DCC;
}

uint64_t (*sub_23B148DD0(_QWORD *a1, uint64_t a2, char a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_23B182050(v6, a2, a3);
  return sub_23B148DCC;
}

void (*sub_23B148E2C(_QWORD *a1, void *a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  v4[5] = sub_23B181F7C(v4, a2);
  return sub_23B148E84;
}

void sub_23B148E84(_QWORD *a1)
{
  void *v1;
  void *v2;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);

  free(v1);
}

uint64_t (*sub_23B148EB8(_QWORD *a1, uint64_t a2, char a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_23B1820D4(v6, a2, a3);
  return sub_23B148DCC;
}

void (*sub_23B148F14(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_23AA8EFC8(a2, (uint64_t)v6, &qword_2542DDDB0);
  v4[5] = sub_23B182158(v4, (uint64_t)v6);
  return sub_23B148FA0;
}

void sub_23B148FA0(_QWORD *a1)
{
  void *v1;
  void *v2;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  sub_23AA8A05C((uint64_t)v2, &qword_2542DDDB0);
  free(v2);
  free(v1);
}

uint64_t (*sub_23B148FE8(_QWORD *a1, uint64_t a2, char a3))()
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_23B182270(v6, a2, a3);
  return sub_23B148DCC;
}

void sub_23B149044(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

void sub_23B149074(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (*v7)(uint64_t, void *, id);
  id v8;
  id v9;

  v7 = *(void (**)(uint64_t, void *, id))(a1 + 32);
  swift_retain();
  v8 = a3;
  v9 = a4;
  v7(a2, a3, v9);
  swift_release();

}

uint64_t sub_23B1490F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23B149128(a1, a2, a3, a4, a5, qword_2542E5110, sub_23B14FF08, (void (*)(uint64_t, uint64_t))sub_23B0DA294);
}

uint64_t sub_23B14910C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23B149128(a1, a2, a3, a4, a5, &qword_2542E5108, sub_23B15060C, (void (*)(uint64_t, uint64_t))sub_23B0DA2C0);
}

uint64_t sub_23B149128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t), void (*a8)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v12;

  *(_BYTE *)(v8 + 112) = 0;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  *(_QWORD *)(v8 + 120) = 0;
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v8 + 136) = a1;
  *(_QWORD *)(v8 + 80) = a2;
  *(_QWORD *)(v8 + 88) = a3;
  *(_QWORD *)(v8 + 96) = a4;
  *(_QWORD *)(v8 + 104) = a5;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v8 + 144) = a7(a1);
  v12 = swift_retain_n();
  a8(v12, v12);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v8;
}

void sub_23B149254(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    v12 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6)
      goto LABEL_23;
    v13 = *(_QWORD *)(v2 + 8 * v12);
    ++v7;
    if (!v13)
    {
      v7 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_23;
      v13 = *(_QWORD *)(v2 + 8 * v7);
      if (!v13)
      {
        v7 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_23;
        v13 = *(_QWORD *)(v2 + 8 * v7);
        if (!v13)
        {
          v7 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_23;
          v13 = *(_QWORD *)(v2 + 8 * v7);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v13 - 1) & v13;
    v9 = __clz(__rbit64(v13)) + (v7 << 6);
LABEL_5:
    v10 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v9);
    sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
    v11 = v10;
    sub_23B1C6BA8();

  }
  v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return;
  }
  v13 = *(_QWORD *)(v2 + 8 * v14);
  if (v13)
  {
    v7 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v7 >= v6)
      goto LABEL_23;
    v13 = *(_QWORD *)(v2 + 8 * v7);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_23B1493E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

_QWORD *sub_23B14940C()
{
  return sub_23B149454((void (*)(_QWORD, _QWORD))sub_23ACFEA84, (void (*)(_QWORD, _QWORD))sub_23AAB7948, (void (*)(_QWORD, _QWORD))sub_23ACFEA84, (void (*)(_QWORD, _QWORD))sub_23ACFEA84);
}

_QWORD *sub_23B149430()
{
  return sub_23B149454((void (*)(_QWORD, _QWORD))sub_23AAB7948, (void (*)(_QWORD, _QWORD))sub_23ACFEA84, (void (*)(_QWORD, _QWORD))sub_23ACFEA84, (void (*)(_QWORD, _QWORD))sub_23ACFEA84);
}

_QWORD *sub_23B149454(void (*a1)(_QWORD, _QWORD), void (*a2)(_QWORD, _QWORD), void (*a3)(_QWORD, _QWORD), void (*a4)(_QWORD, _QWORD))
{
  _QWORD *v4;

  a1(v4[2], v4[3]);
  a2(v4[4], v4[5]);
  a3(v4[6], v4[7]);
  sub_23AAB7948(v4[8]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  a4(v4[15], v4[16]);
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_23B1494E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E3180);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23B1D1B90;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23B1D2330;
  v3 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 0xD000000000000011;
  *(_QWORD *)(v2 + 40) = 0x800000023B21FA90;
  v4 = v0[2];
  v5 = MEMORY[0x24BEE4568];
  *(_QWORD *)(v2 + 88) = MEMORY[0x24BEE4568];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E27E0);
  *(_QWORD *)(v1 + 56) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23B1D2330;
  *(_QWORD *)(v7 + 32) = 0x6F4370756B6F6F6CLL;
  *(_QWORD *)(v7 + 40) = 0xEB00000000746E75;
  v8 = *v0;
  *(_QWORD *)(v7 + 88) = v5;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v8;
  *(_QWORD *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 64) = v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23B1D2330;
  *(_QWORD *)(v9 + 32) = 0x6E756F436E616373;
  *(_QWORD *)(v9 + 40) = 0xE900000000000074;
  v10 = v0[1];
  *(_QWORD *)(v9 + 88) = v5;
  *(_QWORD *)(v9 + 56) = v3;
  *(_QWORD *)(v9 + 64) = v10;
  *(_QWORD *)(v1 + 120) = v6;
  *(_QWORD *)(v1 + 96) = v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23B1D2330;
  *(_QWORD *)(v11 + 56) = v3;
  *(_QWORD *)(v11 + 32) = 0x7461447465736572;
  *(_QWORD *)(v11 + 40) = 0xE900000000000065;
  v12 = (char *)v0 + *(int *)(type metadata accessor for VFSCounters(0) + 28);
  v13 = sub_23B1C5BDC();
  *(_QWORD *)(v11 + 88) = v13;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v11 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_0, v12, v13);
  *(_QWORD *)(v1 + 152) = v6;
  *(_QWORD *)(v1 + 128) = v11;
  return v1;
}

fp_task_tracker *sub_23B1496D0(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  swift_allocObject();
  return sub_23B152EB8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_23B149774@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADA99B0);
  if (!v1)
  {
    MEMORY[0x24BDAC7A8](result);
    result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC04A98);
    *a1 = 0;
  }
  return result;
}

void sub_23B1497F8(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  sub_23B149924(a1, a2, a3, (void (*)(id))MEMORY[0x24BEE4EF8]);
}

void sub_23B149804(void (*a1)(void **))
{
  void *v2[2];
  char v3;

  sub_23AD2C7F8();
  v2[0] = (void *)swift_allocError();
  v3 = 1;
  a1(v2);
  sub_23B1A0F60(v2[0], v2[1], v3);
}

uint64_t sub_23B149864(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_23B149870(a1, a2, a3, &qword_2542E21A0);
}

uint64_t sub_23B149870(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AD2C7F8();
  *v8 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  a1(v8);
  return sub_23AA8A05C((uint64_t)v8, a4);
}

void sub_23B149924(void (*a1)(id *), uint64_t a2, uint64_t a3, void (*a4)(id))
{
  id v6;
  char v7;

  sub_23AD2C7F8();
  v6 = (id)swift_allocError();
  v7 = 1;
  a1(&v6);
  sub_23ACF6618(v6, v7, a4);
}

void sub_23B149998(void (*a1)(id *))
{
  id v2[8];
  char v3;

  sub_23AD2C7F8();
  v2[0] = (id)swift_allocError();
  v3 = 1;
  a1(v2);
  sub_23AC26AC8(v2[0], (uint64_t)v2[1], (unint64_t)v2[2], (uint64_t)v2[3], (uint64_t)v2[4], (uint64_t)v2[5], (uint64_t)v2[6], v2[7], v3);
}

uint64_t sub_23B149A0C(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_23B149AA0(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAB54B4);
}

uint64_t sub_23B149A18(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_23B149A24(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))sub_23AAB538C);
}

uint64_t sub_23B149A24(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  uint64_t v7;
  unsigned __int8 v8;

  sub_23AD2C7F8();
  v7 = swift_allocError();
  v8 = 1;
  a1(&v7);
  return a4(v7, v8);
}

void sub_23B149A88(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  sub_23B149924(a1, a2, a3, (void (*)(id))MEMORY[0x24BEE4F70]);
}

uint64_t sub_23B149A94(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_23B149AA0(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1A0F8C);
}

uint64_t sub_23B149AA0(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD v7[4];
  unsigned __int8 v8;

  sub_23AD2C7F8();
  v7[0] = swift_allocError();
  v8 = 1;
  a1(v7);
  return a4(v7[0], v7[1], v7[2], v7[3], v8);
}

void sub_23B149B0C(void (*a1)(id *))
{
  id v2[2];
  unsigned __int8 v3;
  char v4;

  sub_23AD2C7F8();
  v2[0] = (id)swift_allocError();
  v4 = 1;
  a1(v2);
  sub_23AEB536C(v2[0], (uint64_t)v2[1], v3, v4);
}

uint64_t sub_23B149B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  _QWORD v8[2];

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_23B1C5A08();
    return sub_23B1C6EF0();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v8[0] = a1;
    v8[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    *(_QWORD *)(a3 + 24) = v8;
    return a4(a3);
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
      v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    else
      v6 = sub_23B1C6F80();
    return sub_23AABC754(v6, a3, a4);
  }
}

uint64_t sub_23B149C74()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  type metadata accessor for VFSCounters(0);
  sub_23B1C5B34();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_23B149E18(unint64_t a1, char a2)
{
  __CFString *v3;

  if ((a2 & 1) != 0)
    __asm { BR              X9 }
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v3 = resetReason2str_0(a1);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

uint64_t sub_23B149FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[15];
  int v26;

  v23 = a1;
  v24 = a2;
  v21 = sub_23B1C5570();
  v20 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v19 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  v5 = *(_DWORD *)(v2 + 56);
  if (v5 < 1)
    return result;
  v6 = 0;
  v22 = *(_QWORD *)(v2 + 24);
  while (1)
  {
    v7 = (_QWORD *)swift_allocObject();
    v8 = v23;
    v7[2] = v2;
    v7[3] = v8;
    v9 = v22;
    v7[4] = v24;
    v7[5] = v9;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_23B1A0A2C;
    *(_QWORD *)(v10 + 24) = v7;
    aBlock[4] = sub_23AA698D4;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23AA698B0;
    aBlock[3] = &block_descriptor_397;
    v11 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    swift_beginAccess();
    v12 = fpfs_fgetdirentries();
    swift_endAccess();
    _Block_release(v11);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v11 & 1) != 0)
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      MEMORY[0x24BDAC7A8](result);
      *(&v18 - 2) = (uint64_t)&v26;
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ADAB444, (uint64_t)(&v18 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    v26 = v12;
    if (v12 < 0)
      break;
    if (!v12)
    {
      *(_BYTE *)(v2 + 48) = 1;
      return result;
    }
    v13 = __OFADD__(v6, v12);
    v6 += v12;
    if (v13)
      goto LABEL_22;
    if (v6 >= v5)
      return result;
  }
  result = MEMORY[0x23B85E7A4](result);
  if (!(_DWORD)result)
    goto LABEL_23;
  if (MEMORY[0x23B85E7A4]() == 96)
  {
    sub_23AC42C18((uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    sub_23AA724E8((uint64_t)aBlock, v14, (uint64_t *)&unk_2542E0950);
  }
  else if (MEMORY[0x23B85E7A4]() == 9939394)
  {
    objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
  }
  else
  {
    MEMORY[0x23B85E7A4]();
    v15 = sub_23B1C5E64();
    if ((v15 & 0x100000000) != 0)
      LODWORD(aBlock[0]) = 22;
    else
      LODWORD(aBlock[0]) = v15;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    v16 = v19;
    v17 = v21;
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v17);
  }
  return swift_willThrow();
}

uint64_t sub_23B14A3BC(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t);
  void (*v20)(char *);
  _QWORD v22[3];
  void (*v23)(char *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v22[0] = a5;
  v23 = a3;
  v24 = a4;
  v7 = sub_23B1C5E4C();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5570();
  v22[2] = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v22[1] = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for VFSItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void (**)(uint64_t))(*(_QWORD *)a2 + 280);
  v27 = a2;
  v19(a1);
  v20 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_23AA8A05C((uint64_t)v14, &qword_2542E72C0);
  }
  else
  {
    sub_23AA94050((uint64_t)v14, (uint64_t)v18, type metadata accessor for VFSItem);
    v20(v18);
    sub_23AA937BC((uint64_t)v18, type metadata accessor for VFSItem);
  }
  return 0;
}

void sub_23B14A82C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;

  v2 = *(_DWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)(a1 + 144);
  v5 = *(_QWORD *)(a1 + 168);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1D8700;
  strcpy((char *)(inited + 32), "operationType");
  *(_WORD *)(inited + 46) = -4864;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD00000000000002ELL;
  *(_QWORD *)(inited + 56) = 0x800000023B21F9C0;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 80) = 0x657079546D657469;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  type metadata accessor for fpfs_item_type(0);
  *(_DWORD *)(inited + 96) = v2;
  *(_QWORD *)(inited + 120) = v8;
  strcpy((char *)(inited + 128), "documentSize");
  v9 = MEMORY[0x24BEE4008];
  *(_BYTE *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  *(_QWORD *)(inited + 144) = v3;
  *(_QWORD *)(inited + 168) = v9;
  strcpy((char *)(inited + 176), "physicalSize");
  *(_BYTE *)(inited + 189) = 0;
  *(_WORD *)(inited + 190) = -5120;
  *(_QWORD *)(inited + 192) = v5;
  *(_QWORD *)(inited + 216) = v9;
  strcpy((char *)(inited + 224), "childItemCount");
  *(_BYTE *)(inited + 239) = -18;
  v10 = MEMORY[0x24BEE44F0];
  *(_DWORD *)(inited + 240) = v4;
  *(_QWORD *)(inited + 264) = v10;
  *(_QWORD *)(inited + 272) = 0x6E756F436B6E696CLL;
  *(_QWORD *)(inited + 280) = 0xE900000000000074;
  *(_QWORD *)(inited + 312) = v10;
  *(_DWORD *)(inited + 288) = v4;
  v11 = sub_23AAE9EB4(inited);
  v12 = *(void **)(v1 + 64);
  if (v12)
  {
    v13 = v12;
    sub_23B147D30(v11);
    swift_bridgeObjectRelease();
    v14 = (void *)sub_23B1C61F4();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_23B1C5870();
    objc_msgSend(v13, sel_postReportWithCategory_type_payload_error_, 1, 1, v14, v15);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23B14AA50()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23AA96F18(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_23B1C63BC();
  v2 = objc_msgSend(v1, sel_fp_obfuscatedFilename);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  sub_23AB59228();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 3829820;
}

uint64_t sub_23B14ABA0(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  if (a2)
  {
    if (a2 == 1)
    {
      v12 = 0;
      if (a6 != 1 || a1 != a5)
        return v12 & 1;
LABEL_15:
      swift_bridgeObjectRetain();
      v13 = sub_23AAAE580(a3, a4);
      v15 = v14;
      swift_bridgeObjectRelease();
      if (v15)
      {
        if (v13 == 12565487 && v15 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRetain();
          v17 = sub_23B1C64B8();
          v18 = sub_23AA8A1BC(v17, a3, a4);
          v20 = v19;
          v22 = v21;
          v24 = v23;
          swift_bridgeObjectRelease();
          a3 = MEMORY[0x23B85ED8C](v18, v20, v22, v24);
          a4 = v25;
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
        v16 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          goto LABEL_20;
      }
      swift_bridgeObjectRetain();
LABEL_22:
      swift_bridgeObjectRetain();
      v26 = sub_23AAAE580(a7, a8);
      v28 = v27;
      swift_bridgeObjectRelease();
      if (v28)
      {
        if (v26 == 12565487 && v28 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        v29 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v29 & 1) != 0)
        {
LABEL_27:
          swift_bridgeObjectRetain();
          v30 = sub_23B1C64B8();
          v31 = sub_23AA8A1BC(v30, a7, a8);
          v33 = v32;
          v35 = v34;
          v37 = v36;
          swift_bridgeObjectRelease();
          v38 = MEMORY[0x23B85ED8C](v31, v33, v35, v37);
          a8 = v39;
          swift_bridgeObjectRelease();
          if (a3 != v38)
            goto LABEL_32;
LABEL_30:
          if (a4 == a8)
          {
            v12 = 1;
LABEL_33:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v12 & 1;
          }
LABEL_32:
          v12 = sub_23B1C7388();
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRetain();
      if (a3 != a7)
        goto LABEL_32;
      goto LABEL_30;
    }
    v12 = 0;
    if (a1)
    {
      if (a6 == 2 && a5 == 1)
        goto LABEL_15;
    }
    else if (a6 == 2 && !a5)
    {
      goto LABEL_15;
    }
  }
  else
  {
    v12 = 0;
    if (!a6 && (_DWORD)a1 == (_DWORD)a5)
      goto LABEL_15;
  }
  return v12 & 1;
}

void sub_23B14AE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v1);
  sub_23AA8EFC8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542E1600);
  v3 = (char *)sub_23B14AF00 + 4 * byte_23B1E76F0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23B14AF00()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3190);

  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_23B1C74B4();
  if (v2)
  {
    sub_23B1C74B4();
    if (v2 == 1)
      sub_23B1C74D8();
  }
  else
  {
    sub_23B1C74B4();
    sub_23B1C74CC();
  }
  v3 = v0 + *(int *)(v1 + 48);
  sub_23B1C74B4();
  return sub_23AA8A05C(v3, (uint64_t *)&unk_2542E4750);
}

void sub_23B14B2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v1);
  sub_23AA8EFC8(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2542E1608);
  v3 = (char *)sub_23B14B360 + 4 * byte_23B1E76F8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23B14B360()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31B0);
  v2 = (uint64_t)v0 + *(int *)(v1 + 48);

  v3 = *v0;
  sub_23B1C74B4();
  sub_23B1C63E0();
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  sub_23B1C74B4();

  return sub_23AA8A05C(v2, &qword_2542E4770);
}

void sub_23B14B63C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23B1C5A08();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

void sub_23B14B6DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  sub_23B1C74B4();
  sub_23B1C63E0();
  *(_QWORD *)(v1 - 88) = v2;
  v4 = v3;
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  sub_23B1C6C5C();

}

void sub_23B14C2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23B1C5A08();
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

void sub_23B14C368()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;

  v2 = *(void **)(v0 + 32);
  v3 = *(unsigned __int8 *)(v0 + 24);
  sub_23B1C74B4();
  if (v3)
  {
    sub_23B1C74B4();
    if (v3 == 1)
      sub_23B1C74D8();
  }
  else
  {
    sub_23B1C74B4();
    sub_23B1C74CC();
  }
  *(_QWORD *)(v1 - 88) = v2;
  sub_23B1C6C5C();

}

void sub_23B14CF98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[8];

  v29[5] = a2;
  v3 = sub_23B1C5A08();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v29[4] = (char *)v29 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v29[1] = (char *)v29 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v29[2] = (char *)v29 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v29[3] = (char *)v29 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  MEMORY[0x24BDAC7A8](v28);
  __asm { BR              X10 }
}

uint64_t sub_23B14D278()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  char v16;
  id v17;
  id v18;
  id v19;
  char v20;

  v2 = *(_QWORD *)(v1 - 104);
  if (!((v2 >> 58) & 0x3C | (v2 >> 1) & 3))
  {
    v4 = *(void **)(v0 + 16);
    v3 = *(void **)(v0 + 24);
    v6 = *(void **)(v2 + 16);
    v5 = *(void **)(v2 + 24);
    v7 = sub_23B1C63E0();
    v9 = v8;
    if (v7 == sub_23B1C63E0() && v9 == v10)
    {
      v11 = v4;
      v12 = v6;
      v13 = v3;
      v14 = v5;
      swift_bridgeObjectRelease_n();
LABEL_6:
      sub_23AA9F52C(0, &qword_2542E2030);
      v20 = sub_23B1C6C50();

      return v20 & 1;
    }
    v16 = sub_23B1C7388();
    *(_QWORD *)(v1 - 104) = v4;
    v17 = v6;
    v18 = v3;
    v19 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      goto LABEL_6;

  }
  return 0;
}

void sub_23B14E818(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[8];

  v29[5] = a2;
  v3 = sub_23B1C5A08();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v29[4] = (char *)v29 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v29[1] = (char *)v29 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v29[2] = (char *)v29 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v29[3] = (char *)v29 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  MEMORY[0x24BDAC7A8](v28);
  __asm { BR              X10 }
}

uint64_t sub_23B14EAF8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  id v8;
  id v9;
  char v10;

  v2 = *(_QWORD *)(v1 - 104);
  if ((v2 >> 58) & 0x3C | (v2 >> 1) & 3)
    return 0;
  v3 = *(void **)(v0 + 32);
  v4 = *(void **)(v2 + 32);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(unsigned __int8 *)(v2 + 24);
  if (*(_BYTE *)(v0 + 24))
  {
    if (*(_BYTE *)(v0 + 24) == 1)
    {
      if (v7 != 1 || v5 != v6)
        return 0;
    }
    else if (v5)
    {
      if (v7 != 2 || v6 != 1)
        return 0;
    }
    else if (v7 != 2 || v6)
    {
      return 0;
    }
LABEL_16:
    sub_23AA9F52C(0, &qword_2542E2030);
    v8 = v3;
    v9 = v4;
    v10 = sub_23B1C6C50();

    return v10 & 1;
  }
  if (!v7 && (_DWORD)v5 == (_DWORD)v6)
    goto LABEL_16;
  return 0;
}

uint64_t sub_23B14FF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  signed int v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  signed int v54;
  signed int v55;
  _QWORD v57[4];
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v2 = v1;
  v4 = sub_23B1C6020();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v67 = (_QWORD *)((char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_23B1C6B3C();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C6AE8();
  v63 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)v57 - v11;
  v61 = sub_23B1C60A4();
  v59 = *(_QWORD *)(v61 - 8);
  v12 = MEMORY[0x24BDAC7A8](v61);
  v14 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v57 - v15;
  v17 = sub_23B1C60E0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 96) = 0;
  *(_BYTE *)(v2 + 104) = 1;
  *(_QWORD *)(v2 + 112) = 0;
  *(_BYTE *)(v2 + 120) = 1;
  *(_QWORD *)(v2 + qword_2542EE1A0) = 0;
  v21 = (_QWORD *)(v2 + qword_2542EE198);
  *v21 = 0;
  v21[1] = 0;
  v22 = v2 + qword_2542EE0E0;
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  v23 = v2 + qword_2542EE180;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  v24 = v2 + qword_2542EE0D0;
  *(_QWORD *)v24 = 0;
  *(_BYTE *)(v24 + 8) = 1;
  v25 = v2 + qword_2542EE0F0;
  *(_QWORD *)v25 = 0;
  *(_BYTE *)(v25 + 8) = 1;
  v26 = v2 + qword_2542EE0F8;
  *(_QWORD *)v26 = 0;
  *(_BYTE *)(v26 + 8) = 1;
  v27 = v2 + qword_2542EE170;
  *(_QWORD *)v27 = 0;
  *(_BYTE *)(v27 + 8) = 1;
  v28 = v2 + qword_2542EE160;
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  *(_BYTE *)(v2 + qword_2542EE0C0) = 0;
  v29 = (_QWORD *)(v2 + qword_2542EE148);
  *v29 = 0;
  v29[1] = 0;
  v30 = (_QWORD *)(v2 + qword_2542EE150);
  *v30 = 0;
  v30[1] = 0;
  v31 = v2 + qword_2542EE140;
  *(_QWORD *)v31 = 0;
  *(_BYTE *)(v31 + 8) = 1;
  swift_retain();
  v32 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + qword_2542E7170) = sub_23AAEA574(MEMORY[0x24BEE4AF8]);
  sub_23B1C60B0();
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v33(v2 + qword_2542E7180, v20, v17);
  sub_23B1C60B0();
  v33(v2 + qword_2542E77C8, v20, v17);
  *(_QWORD *)(v2 + 88) = objc_msgSend(objc_allocWithZone((Class)FSVolume), sel_init);
  v34 = sub_23B1C59E4();
  v35 = (uint64_t *)(v2 + qword_2542E77D0);
  *v35 = v34;
  v35[1] = v36;
  v57[3] = sub_23AA9F52C(0, (unint64_t *)&qword_2542E5500);
  v70 = 0;
  v71 = 0xE000000000000000;
  sub_23B1C6EFC();
  v60 = a1;
  v37 = *(_QWORD *)(a1 + 16);
  v38 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v70 = v37;
  v71 = v38;
  sub_23B1C64F4();
  v57[1] = v71;
  v57[2] = v70;
  sub_23B1C6068();
  v70 = v32;
  sub_23AA7E38C((unint64_t *)&qword_2542E7500, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74C0);
  sub_23AAB5A28((unint64_t *)&qword_2542E74D0, (uint64_t *)&unk_2542E74C0, MEMORY[0x24BEE12C8]);
  v39 = v58;
  v40 = v8;
  sub_23B1C6DE8();
  v41 = v59;
  v42 = v61;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v14, v16, v61);
  v43 = v63;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v39, v40);
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v64, *MEMORY[0x24BEE5758], v66);
  v44 = sub_23B1C6B60();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v42);
  *(_QWORD *)(v2 + qword_2542E77D8) = v44;
  v45 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v46 = objc_msgSend(v45, sel_minimumDiskSpaceRequiredToBeGreedy);
  *(_QWORD *)(v2 + qword_2542EE0D8) = v46;
  objc_msgSend(v45, sel_relativeDiskSpaceRequiredToBeGreedy);
  *(_QWORD *)(v2 + qword_2542EE178) = v47;
  v48 = objc_msgSend(v45, sel_diskSpaceRequiredToReturnToGreedyState);
  *(_QWORD *)(v2 + qword_2542EE0C8) = v48;
  objc_msgSend(v45, sel_relativeDiskSpaceRequiredToReturnToGreedyState);
  *(_QWORD *)(v2 + qword_2542EE0E8) = v49;
  v50 = objc_msgSend(v45, sel_diskSpaceCheckInterval);
  v52 = v67;
  v51 = v68;
  *v67 = v50;
  v53 = v69;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v51 + 104))(v52, *MEMORY[0x24BEE5420], v69);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v51 + 32))(v2 + qword_2542EE100, v52, v53);
  v54 = objc_msgSend(v45, sel_minTimeBetweenSpeculativeDownloadsPurgeSession);
  *(_QWORD *)(v2 + qword_2542EE130) = 1000000000 * v54;
  v55 = objc_msgSend(v45, sel_minTimeToPreventDownloadsAfterReturningToGreedyState);
  *(_QWORD *)(v2 + qword_2542EE138) = 1000000000 * v55;
  *(_BYTE *)(v2 + qword_2542EE158) = 0;
  *(_QWORD *)(v2 + qword_2542EE188) = 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v2 + qword_2542EE190) = 0x7FFFFFFFFFFFFFFFLL;

  swift_release();
  *(_BYTE *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 1;
  *(_QWORD *)(v2 + 56) = 0;
  *(_BYTE *)(v2 + 64) = 1;
  *(_QWORD *)(v2 + 72) = 0;
  *(_BYTE *)(v2 + 80) = 1;
  *(_QWORD *)(v2 + 16) = v60;
  *(_QWORD *)(v2 + 24) = 0xD00000000000002BLL;
  *(_QWORD *)(v2 + 32) = 0x800000023B21FA20;
  return v2;
}

uint64_t sub_23B15060C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  signed int v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  signed int v53;
  signed int v54;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;

  v2 = v1;
  v4 = sub_23B1C6020();
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v65 = (_QWORD *)((char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_23B1C6B3C();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C6AE8();
  v61 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v60 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v56 - v11;
  v59 = sub_23B1C60A4();
  v57 = *(_QWORD *)(v59 - 8);
  v13 = MEMORY[0x24BDAC7A8](v59);
  v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v56 - v16;
  v18 = sub_23B1C60E0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 96) = 0;
  *(_BYTE *)(v2 + 104) = 1;
  *(_QWORD *)(v2 + 112) = 0;
  *(_BYTE *)(v2 + 120) = 1;
  *(_QWORD *)(v2 + qword_2542EE1A0) = 0;
  v22 = (_QWORD *)(v2 + qword_2542EE198);
  *v22 = 0;
  v22[1] = 0;
  v23 = v2 + qword_2542EE0E0;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  v24 = v2 + qword_2542EE180;
  *(_QWORD *)v24 = 0;
  *(_BYTE *)(v24 + 8) = 1;
  v25 = v2 + qword_2542EE0D0;
  *(_QWORD *)v25 = 0;
  *(_BYTE *)(v25 + 8) = 1;
  v26 = v2 + qword_2542EE0F0;
  *(_QWORD *)v26 = 0;
  *(_BYTE *)(v26 + 8) = 1;
  v27 = v2 + qword_2542EE0F8;
  *(_QWORD *)v27 = 0;
  *(_BYTE *)(v27 + 8) = 1;
  v28 = v2 + qword_2542EE170;
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  v29 = v2 + qword_2542EE160;
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  *(_BYTE *)(v2 + qword_2542EE0C0) = 0;
  v30 = (_QWORD *)(v2 + qword_2542EE148);
  *v30 = 0;
  v30[1] = 0;
  v31 = (_QWORD *)(v2 + qword_2542EE150);
  *v31 = 0;
  v31[1] = 0;
  v32 = v2 + qword_2542EE140;
  *(_QWORD *)v32 = 0;
  *(_BYTE *)(v32 + 8) = 1;
  *(_QWORD *)(v2 + qword_2542E7170) = sub_23AAF80A8(MEMORY[0x24BEE4AF8]);
  swift_retain();
  sub_23B1C60B0();
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
  v33(v2 + qword_2542E7180, v21, v18);
  sub_23B1C60B0();
  v33(v2 + qword_2542E77C8, v21, v18);
  *(_QWORD *)(v2 + 88) = objc_msgSend(objc_allocWithZone((Class)FSVolume), sel_init);
  v34 = sub_23B1C59E4();
  v35 = (uint64_t *)(v2 + qword_2542E77D0);
  *v35 = v34;
  v35[1] = v36;
  v56[2] = sub_23AA9F52C(0, (unint64_t *)&qword_2542E5500);
  v68 = 0;
  v69 = 0xE000000000000000;
  sub_23B1C6EFC();
  v58 = a1;
  v37 = *(_QWORD *)(a1 + 16);
  v38 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v68 = v37;
  v69 = v38;
  sub_23B1C64F4();
  v56[0] = v69;
  v56[1] = v68;
  sub_23B1C6068();
  v68 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&qword_2542E7500, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74C0);
  sub_23AAB5A28((unint64_t *)&qword_2542E74D0, (uint64_t *)&unk_2542E74C0, MEMORY[0x24BEE12C8]);
  v39 = v8;
  sub_23B1C6DE8();
  v40 = v57;
  v41 = v59;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v15, v17, v59);
  v42 = v61;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v12, v39);
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, *MEMORY[0x24BEE5758], v64);
  v43 = sub_23B1C6B60();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v39);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v41);
  *(_QWORD *)(v2 + qword_2542E77D8) = v43;
  v44 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v45 = objc_msgSend(v44, sel_minimumDiskSpaceRequiredToBeGreedy);
  *(_QWORD *)(v2 + qword_2542EE0D8) = v45;
  objc_msgSend(v44, sel_relativeDiskSpaceRequiredToBeGreedy);
  *(_QWORD *)(v2 + qword_2542EE178) = v46;
  v47 = objc_msgSend(v44, sel_diskSpaceRequiredToReturnToGreedyState);
  *(_QWORD *)(v2 + qword_2542EE0C8) = v47;
  objc_msgSend(v44, sel_relativeDiskSpaceRequiredToReturnToGreedyState);
  *(_QWORD *)(v2 + qword_2542EE0E8) = v48;
  v49 = objc_msgSend(v44, sel_diskSpaceCheckInterval);
  v51 = v65;
  v50 = v66;
  *v65 = v49;
  v52 = v67;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v50 + 104))(v51, *MEMORY[0x24BEE5420], v67);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v50 + 32))(v2 + qword_2542EE100, v51, v52);
  v53 = objc_msgSend(v44, sel_minTimeBetweenSpeculativeDownloadsPurgeSession);
  *(_QWORD *)(v2 + qword_2542EE130) = 1000000000 * v53;
  v54 = objc_msgSend(v44, sel_minTimeToPreventDownloadsAfterReturningToGreedyState);
  *(_QWORD *)(v2 + qword_2542EE138) = 1000000000 * v54;
  *(_BYTE *)(v2 + qword_2542EE158) = 0;
  *(_QWORD *)(v2 + qword_2542EE188) = 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v2 + qword_2542EE190) = 0x7FFFFFFFFFFFFFFFLL;

  swift_release();
  *(_BYTE *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 1;
  *(_QWORD *)(v2 + 56) = 0;
  *(_BYTE *)(v2 + 64) = 1;
  *(_QWORD *)(v2 + 72) = 0;
  *(_BYTE *)(v2 + 80) = 1;
  *(_QWORD *)(v2 + 16) = v58;
  *(_QWORD *)(v2 + 24) = 0xD00000000000002BLL;
  *(_QWORD *)(v2 + 32) = 0x800000023B21FA20;
  return v2;
}

void sub_23B150D14(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v10;
  uint64_t v11;
  useconds_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  char v28;
  id v29;
  char v30;
  int v31;
  char *v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD, _QWORD, _QWORD);
  useconds_t v44;
  _QWORD *v45;
  char v46;
  char v47;
  _QWORD v48[2];
  __int128 v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  __int128 v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;

  v7 = v6;
  v42 = a4;
  v43 = a3;
  v34[1] = a5;
  v57 = *MEMORY[0x24BDAC8D0];
  v37 = sub_23B1C5570();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v5;
  v40 = v5 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  v11 = swift_beginAccess();
  v39 = &v55;
  v38 = &v51;
  v12 = 1000;
  v34[0] = MEMORY[0x24BEE4AE0] + 8;
  while (1)
  {
    v46 = 0;
    v13 = *(_QWORD *)(a1 + 40);
    v14 = *(_QWORD *)(a1 + 48);
    v15 = *(unsigned int *)(v40 + 8);
    v16 = MEMORY[0x24BDAC7A8](v11);
    v34[-4] = &v46;
    v17 = v43;
    v34[-3] = v41;
    v34[-2] = v17;
    v34[-1] = v42;
    v18 = MEMORY[0x24BDAC7A8](v16);
    LODWORD(v34[-4]) = v15;
    HIDWORD(v34[-4]) = a2;
    LODWORD(v34[-3]) = 0;
    v34[-2] = sub_23B19F7B8;
    v34[-1] = &v34[-6];
    v23 = v39;
    *v39 = 0;
    v23[1] = 0;
    *(_QWORD *)&v53 = v19;
    *((_QWORD *)&v53 + 1) = v20;
    v54 = __PAIR64__(v22, v21);
    if (!v14)
    {
      LOBYTE(v48[0]) = 1;
      *(_QWORD *)&v49 = v19;
      *((_QWORD *)&v49 + 1) = v20;
      v50 = __PAIR64__(v22, v21);
      v26 = v38;
      *v38 = 0;
      v26[1] = 0;
      sub_23B0E1B48((uint64_t)&v49, v15, a2, 0, (uint64_t)v48, (uint64_t)sub_23B19F7B8, (uint64_t)&v34[-6]);
      v25 = v7;
      if (v7)
      {
        v7 = 0;
        goto LABEL_12;
      }
      if ((v48[0] & 1) == 0)
        return;
      __break(1u);
      goto LABEL_34;
    }
    v44 = v12;
    v45 = v34;
    MEMORY[0x24BDAC7A8](v18);
    v34[-4] = &v53;
    v34[-3] = sub_23AC42C54;
    v34[-2] = v24;
    if ((v14 & 0x1000000000000000) != 0)
      goto LABEL_17;
    if ((v14 & 0x2000000000000000) != 0)
    {
      v48[0] = v13;
      v48[1] = v14 & 0xFFFFFFFFFFFFFFLL;
      v55 = v48;
      v47 = 1;
      v49 = v53;
      v50 = v54;
      v51 = v48;
      v52 = v56;
      swift_bridgeObjectRetain();
      sub_23B0E1B48((uint64_t)&v49, v15, a2, 0, (uint64_t)&v47, (uint64_t)sub_23B19F7B8, (uint64_t)&v34[-6]);
      v25 = v7;
      if (v7)
        goto LABEL_11;
      if ((v47 & 1) == 0)
        goto LABEL_29;
      __break(1u);
LABEL_28:
      if ((v48[0] & 1) == 0)
      {
LABEL_29:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_34:
      __break(1u);
      return;
    }
    if ((v13 & 0x1000000000000000) == 0)
    {
LABEL_17:
      swift_bridgeObjectRetain();
      sub_23B1C6EF0();
      v25 = v7;
      if (!v7)
        goto LABEL_29;
      goto LABEL_11;
    }
    v55 = (_QWORD *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
    LOBYTE(v48[0]) = 1;
    v49 = v53;
    v50 = v54;
    v51 = v55;
    v52 = v56;
    swift_bridgeObjectRetain();
    sub_23B0E1B48((uint64_t)&v49, v15, a2, 0, (uint64_t)v48, (uint64_t)sub_23B19F7B8, (uint64_t)&v34[-6]);
    v25 = v7;
    if (!v7)
      goto LABEL_28;
LABEL_11:
    swift_bridgeObjectRelease();
    v7 = 0;
    v12 = v44;
LABEL_12:
    v27 = v25;
    LODWORD(v53) = sub_23B1C5498();
    sub_23AB6CD48();
    v28 = sub_23B1C575C();

    if ((v28 & 1) == 0)
      break;

    if ((v46 & 1) != 0)
    {
      v31 = 16;
      goto LABEL_23;
    }
    v11 = usleep(v12);
    if (2 * v12 >= 0xF4240)
      v12 = 1000000;
    else
      v12 *= 2;
  }
  v29 = v25;
  LODWORD(v53) = sub_23B1C54F8();
  v30 = sub_23B1C575C();

  if ((v30 & 1) == 0)
    return;

  if (v46 == 1)
  {
    v31 = 2;
LABEL_23:
    LODWORD(v53) = v31;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    v32 = v36;
    v33 = v37;
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v33);
    swift_willThrow();
    return;
  }
  v43(0, 0, 0, 0);
}

void sub_23B1512DC(uint64_t a1@<X0>, unsigned int a2@<W1>, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  char v53;
  useconds_t v54;
  int v55;
  void *v56;
  id v57;
  char v58;
  int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  char *v76;
  char *v77;
  unsigned int v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD, _QWORD, _QWORD);
  unsigned int v86;
  useconds_t v87;
  void *v88;
  uint64_t v89;
  _QWORD v90[2];
  char v91;
  __int128 v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  __int128 v96;
  unint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;

  v84 = a4;
  v85 = a3;
  v86 = a2;
  v82 = a1;
  v73 = a5;
  v100 = *MEMORY[0x24BDAC8D0];
  v72 = sub_23B1C5570();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v71 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v69 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v76 = (char *)&v66 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v68 = (uint64_t)&v66 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v77 = (char *)&v66 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v67 = (uint64_t)&v66 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v74 = (char *)&v66 - v18;
  v83 = v5;
  v81 = v5 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  v19 = swift_beginAccess();
  v80 = &v98;
  v75 = &v94;
  v87 = 1000;
  v20 = v86;
  while (1)
  {
    v91 = 0;
    v21 = *(_QWORD *)(v82 + 16);
    v22 = *(_QWORD *)(v82 + 24);
    v24 = *(_DWORD *)(v82 + 32);
    v23 = *(_DWORD *)(v82 + 36);
    v25 = *(_QWORD *)(v82 + 40);
    v26 = *(_QWORD *)(v82 + 48);
    v27 = MEMORY[0x24BDAC7A8](v19);
    *(&v66 - 4) = (uint64_t)&v91;
    v28 = v85;
    *(&v66 - 3) = v83;
    *(&v66 - 2) = (uint64_t)v28;
    *(&v66 - 1) = v84;
    v29 = MEMORY[0x24BDAC7A8](v27);
    *((_DWORD *)&v66 - 8) = v31;
    *((_DWORD *)&v66 - 7) = v20;
    *((_DWORD *)&v66 - 6) = 0;
    *(&v66 - 2) = (uint64_t)sub_23B1A01A4;
    *(&v66 - 1) = v30;
    v32 = v80;
    *v80 = 0;
    v32[1] = 0;
    *(_QWORD *)&v96 = v21;
    *((_QWORD *)&v96 + 1) = v22;
    v97 = __PAIR64__(v23, v24);
    v89 = v33;
    if (!v26)
    {
      v79 = v30;
      v78 = v31;
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
      v45 = *(_QWORD *)(v44 - 8);
      v46 = (uint64_t)v76;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v76, 1, 1, v44);
      *(_QWORD *)&v92 = v21;
      *((_QWORD *)&v92 + 1) = v22;
      v93 = __PAIR64__(v23, v24);
      v47 = v75;
      *v75 = 0;
      v47[1] = 0;
      v48 = v88;
      sub_23B0E1EBC((uint64_t)&v92, v78, v20, 0, v46, (uint64_t)sub_23B1A01A4, v79);
      v43 = v48;
      if (v48)
      {
        sub_23AA8A05C(v46, qword_2542E5250);
        goto LABEL_12;
      }
      v62 = v69;
      sub_23AA8EFC8(v46, v69, qword_2542E5250);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v62, 1, v44) != 1)
      {
        sub_23AA724E8(v62, v73, &qword_2542E72C0);
        sub_23AA8A05C(v46, qword_2542E5250);
        return;
      }
      __break(1u);
      goto LABEL_34;
    }
    MEMORY[0x24BDAC7A8](v29);
    *(&v66 - 4) = (uint64_t)&v96;
    *(&v66 - 3) = (uint64_t)sub_23B1A0238;
    *(&v66 - 2) = v36;
    v37 = (uint64_t)v77;
    if ((v26 & 0x1000000000000000) != 0)
      goto LABEL_17;
    if ((v26 & 0x2000000000000000) != 0)
    {
      v90[0] = v25;
      v90[1] = v26 & 0xFFFFFFFFFFFFFFLL;
      v98 = v90;
      v49 = v34;
      v50 = v35;
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
      v41 = *(_QWORD *)(v40 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v37, 1, 1, v40);
      v92 = v96;
      v93 = v97;
      v94 = v90;
      v95 = v99;
      swift_bridgeObjectRetain();
      v51 = v88;
      sub_23B0E1EBC((uint64_t)&v92, v50, v86, 0, v37, (uint64_t)sub_23B1A01A4, v49);
      v43 = v51;
      if (v51)
      {
LABEL_11:
        sub_23AA8A05C(v37, qword_2542E5250);
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      v63 = v37;
      v64 = v37;
      v37 = v68;
      sub_23AA8EFC8(v63, v68, qword_2542E5250);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v37, 1, v40) != 1)
        goto LABEL_29;
      __break(1u);
LABEL_28:
      v65 = v37;
      v64 = v37;
      v37 = v67;
      sub_23AA8EFC8(v65, v67, qword_2542E5250);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v37, 1, v40) != 1)
      {
LABEL_29:
        sub_23AA724E8(v37, v73, &qword_2542E72C0);
        sub_23AA8A05C(v64, qword_2542E5250);
LABEL_30:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_34:
      __break(1u);
      return;
    }
    if ((v25 & 0x1000000000000000) != 0)
    {
      v98 = (_QWORD *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
      v38 = v34;
      v39 = v35;
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
      v41 = *(_QWORD *)(v40 - 8);
      v37 = (uint64_t)v74;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v74, 1, 1, v40);
      v92 = v96;
      v93 = v97;
      v94 = (_QWORD *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
      v95 = v99;
      swift_bridgeObjectRetain();
      v42 = v88;
      sub_23B0E1EBC((uint64_t)&v92, v39, v86, 0, v37, (uint64_t)sub_23B1A01A4, v38);
      v43 = v42;
      if (!v42)
        goto LABEL_28;
      goto LABEL_11;
    }
LABEL_17:
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
    v56 = v88;
    sub_23B1C6EF0();
    v43 = v56;
    if (!v56)
      goto LABEL_30;
    swift_bridgeObjectRelease();
LABEL_12:
    v52 = v43;
    LODWORD(v96) = sub_23B1C5498();
    sub_23AB6CD48();
    v53 = sub_23B1C575C();

    if ((v53 & 1) == 0)
      break;

    if ((v91 & 1) != 0)
    {
      v59 = 16;
      goto LABEL_23;
    }
    v88 = 0;
    v54 = v87;
    v19 = usleep(v87);
    v55 = 2 * v54;
    if (2 * v54 >= 0xF4240)
      v55 = 1000000;
    v87 = v55;
  }
  v57 = v43;
  LODWORD(v96) = sub_23B1C54F8();
  v58 = sub_23B1C575C();

  if ((v58 & 1) == 0)
    return;

  if (v91 == 1)
  {
    v59 = 2;
LABEL_23:
    LODWORD(v96) = v59;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    v60 = v71;
    v61 = v72;
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v61);
    swift_willThrow();
    return;
  }
  v85(0, 0, 0, 0);
}

void sub_23B151B40(uint64_t a1@<X0>, unsigned int a2@<W1>, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  char v53;
  useconds_t v54;
  int v55;
  void *v56;
  id v57;
  char v58;
  int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  char *v76;
  char *v77;
  unsigned int v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD, _QWORD, _QWORD);
  unsigned int v86;
  useconds_t v87;
  void *v88;
  uint64_t v89;
  _QWORD v90[2];
  char v91;
  __int128 v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  __int128 v96;
  unint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;

  v84 = a4;
  v85 = a3;
  v86 = a2;
  v82 = a1;
  v73 = a5;
  v100 = *MEMORY[0x24BDAC8D0];
  v72 = sub_23B1C5570();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v71 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v69 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v76 = (char *)&v66 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v68 = (uint64_t)&v66 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v77 = (char *)&v66 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v67 = (uint64_t)&v66 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v74 = (char *)&v66 - v18;
  v83 = v5;
  v81 = v5 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  v19 = swift_beginAccess();
  v80 = &v98;
  v75 = &v94;
  v87 = 1000;
  v20 = v86;
  while (1)
  {
    v91 = 0;
    v21 = *(_QWORD *)(v82 + 16);
    v22 = *(_QWORD *)(v82 + 24);
    v24 = *(_DWORD *)(v82 + 32);
    v23 = *(_DWORD *)(v82 + 36);
    v25 = *(_QWORD *)(v82 + 40);
    v26 = *(_QWORD *)(v82 + 48);
    v27 = MEMORY[0x24BDAC7A8](v19);
    *(&v66 - 4) = (uint64_t)&v91;
    v28 = v85;
    *(&v66 - 3) = v83;
    *(&v66 - 2) = (uint64_t)v28;
    *(&v66 - 1) = v84;
    v29 = MEMORY[0x24BDAC7A8](v27);
    *((_DWORD *)&v66 - 8) = v31;
    *((_DWORD *)&v66 - 7) = v20;
    *((_DWORD *)&v66 - 6) = 0;
    *(&v66 - 2) = (uint64_t)sub_23B19F8A0;
    *(&v66 - 1) = v30;
    v32 = v80;
    *v80 = 0;
    v32[1] = 0;
    *(_QWORD *)&v96 = v21;
    *((_QWORD *)&v96 + 1) = v22;
    v97 = __PAIR64__(v23, v24);
    v89 = v33;
    if (!v26)
    {
      v79 = v30;
      v78 = v31;
      v44 = type metadata accessor for VFSItem(0);
      v45 = *(_QWORD *)(v44 - 8);
      v46 = (uint64_t)v76;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v76, 1, 1, v44);
      *(_QWORD *)&v92 = v21;
      *((_QWORD *)&v92 + 1) = v22;
      v93 = __PAIR64__(v23, v24);
      v47 = v75;
      *v75 = 0;
      v47[1] = 0;
      v48 = v88;
      sub_23B0E3628((uint64_t)&v92, v78, v20, 0, v46, (uint64_t)sub_23B19F8A0, v79);
      v43 = v48;
      if (v48)
      {
        sub_23AA8A05C(v46, &qword_2542E72C0);
        goto LABEL_12;
      }
      v62 = v69;
      sub_23AA8EFC8(v46, v69, &qword_2542E72C0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v62, 1, v44) != 1)
      {
        sub_23AA94050(v62, v73, type metadata accessor for VFSItem);
        sub_23AA8A05C(v46, &qword_2542E72C0);
        return;
      }
      __break(1u);
      goto LABEL_34;
    }
    MEMORY[0x24BDAC7A8](v29);
    *(&v66 - 4) = (uint64_t)&v96;
    *(&v66 - 3) = (uint64_t)sub_23B19F8C4;
    *(&v66 - 2) = v36;
    v37 = (uint64_t)v77;
    if ((v26 & 0x1000000000000000) != 0)
      goto LABEL_17;
    if ((v26 & 0x2000000000000000) != 0)
    {
      v90[0] = v25;
      v90[1] = v26 & 0xFFFFFFFFFFFFFFLL;
      v98 = v90;
      v49 = v34;
      v50 = v35;
      v40 = type metadata accessor for VFSItem(0);
      v41 = *(_QWORD *)(v40 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v37, 1, 1, v40);
      v92 = v96;
      v93 = v97;
      v94 = v90;
      v95 = v99;
      swift_bridgeObjectRetain();
      v51 = v88;
      sub_23B0E3628((uint64_t)&v92, v50, v86, 0, v37, (uint64_t)sub_23B19F8A0, v49);
      v43 = v51;
      if (v51)
      {
LABEL_11:
        sub_23AA8A05C(v37, &qword_2542E72C0);
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      v63 = v37;
      v64 = v37;
      v37 = v68;
      sub_23AA8EFC8(v63, v68, &qword_2542E72C0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v37, 1, v40) != 1)
        goto LABEL_29;
      __break(1u);
LABEL_28:
      v65 = v37;
      v64 = v37;
      v37 = v67;
      sub_23AA8EFC8(v65, v67, &qword_2542E72C0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v37, 1, v40) != 1)
      {
LABEL_29:
        sub_23AA94050(v37, v73, type metadata accessor for VFSItem);
        sub_23AA8A05C(v64, &qword_2542E72C0);
LABEL_30:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_34:
      __break(1u);
      return;
    }
    if ((v25 & 0x1000000000000000) != 0)
    {
      v98 = (_QWORD *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
      v38 = v34;
      v39 = v35;
      v40 = type metadata accessor for VFSItem(0);
      v41 = *(_QWORD *)(v40 - 8);
      v37 = (uint64_t)v74;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v74, 1, 1, v40);
      v92 = v96;
      v93 = v97;
      v94 = (_QWORD *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
      v95 = v99;
      swift_bridgeObjectRetain();
      v42 = v88;
      sub_23B0E3628((uint64_t)&v92, v39, v86, 0, v37, (uint64_t)sub_23B19F8A0, v38);
      v43 = v42;
      if (!v42)
        goto LABEL_28;
      goto LABEL_11;
    }
LABEL_17:
    type metadata accessor for VFSItem(0);
    swift_bridgeObjectRetain();
    v56 = v88;
    sub_23B1C6EF0();
    v43 = v56;
    if (!v56)
      goto LABEL_30;
    swift_bridgeObjectRelease();
LABEL_12:
    v52 = v43;
    LODWORD(v96) = sub_23B1C5498();
    sub_23AB6CD48();
    v53 = sub_23B1C575C();

    if ((v53 & 1) == 0)
      break;

    if ((v91 & 1) != 0)
    {
      v59 = 16;
      goto LABEL_23;
    }
    v88 = 0;
    v54 = v87;
    v19 = usleep(v87);
    v55 = 2 * v54;
    if (2 * v54 >= 0xF4240)
      v55 = 1000000;
    v87 = v55;
  }
  v57 = v43;
  LODWORD(v96) = sub_23B1C54F8();
  v58 = sub_23B1C575C();

  if ((v58 & 1) == 0)
    return;

  if (v91 == 1)
  {
    v59 = 2;
LABEL_23:
    LODWORD(v96) = v59;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    v60 = v71;
    v61 = v72;
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v61);
    swift_willThrow();
    return;
  }
  v85(0, 0, 0, 0);
}

uint64_t sub_23B152398(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8EE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B19CF78();
  sub_23B1C7538();
  v8[15] = 0;
  sub_23B1C72E0();
  if (!v1)
  {
    v8[14] = 1;
    sub_23B1C72E0();
    v8[13] = 2;
    sub_23B1C72E0();
    type metadata accessor for VFSCounters(0);
    v8[12] = 3;
    sub_23B1C5BDC();
    sub_23AA7E38C(&qword_2569E2418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23B1C72A4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23B15253C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v24 = a2;
  v3 = sub_23B1C5BDC();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8ED8);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for VFSCounters(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = 0;
  v12[1] = 0;
  v12[2] = 0;
  v13 = (char *)v12 + *(int *)(v10 + 28);
  sub_23B1C5BB8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B19CF78();
  v26 = v8;
  v14 = v27;
  sub_23B1C7520();
  if (!v14)
  {
    v27 = v13;
    v15 = v6;
    v16 = v5;
    v17 = v23;
    v18 = v24;
    v31 = 0;
    v19 = v25;
    *v12 = sub_23B1C71FC();
    v30 = 1;
    v12[1] = sub_23B1C71FC();
    v29 = 2;
    v12[2] = sub_23B1C71FC();
    v28 = 3;
    sub_23AA7E38C(&qword_2569E2468, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v21 = v26;
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v19);
    (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v27, v16, v17);
    sub_23AA907B0((uint64_t)v12, v18, type metadata accessor for VFSCounters);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23AA937BC((uint64_t)v12, type metadata accessor for VFSCounters);
}

uint64_t sub_23B1527E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B152820 + 4 * byte_23B1E7850[*v0]))(0x6F4370756B6F6F6CLL, 0xEB00000000746E75);
}

uint64_t sub_23B152820()
{
  return 0x6E756F436E616373;
}

unint64_t sub_23B152840()
{
  return 0xD000000000000011;
}

uint64_t sub_23B15285C()
{
  return 0x7461447465736572;
}

uint64_t sub_23B152878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B194DD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B15289C()
{
  sub_23B19CF78();
  return sub_23B1C7544();
}

uint64_t sub_23B1528C4()
{
  sub_23B19CF78();
  return sub_23B1C7550();
}

uint64_t sub_23B1528EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B15253C(a1, a2);
}

uint64_t sub_23B152900(_QWORD *a1)
{
  return sub_23B152398(a1);
}

uint64_t sub_23B152918()
{
  sub_23B1C74A8();
  sub_23B1C74D8();
  sub_23B1C64A0();
  return sub_23B1C74E4();
}

uint64_t sub_23B152978()
{
  sub_23B1C74D8();
  return sub_23B1C64A0();
}

uint64_t sub_23B1529B8()
{
  sub_23B1C74A8();
  sub_23B1C74D8();
  sub_23B1C64A0();
  return sub_23B1C74E4();
}

uint64_t sub_23B152A14(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2)
    return 0;
  if (a1[1] == a2[1] && a1[2] == a2[2])
    return 1;
  else
    return sub_23B1C7388();
}

uint64_t sub_23B152A5C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t *);
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v4 = result;
    swift_bridgeObjectRetain();
    v5 = a2 + 40;
    do
    {
      v6 = *(void (**)(uint64_t *))(v5 - 8);
      v7 = v4;
      swift_retain();
      v6(&v7);
      swift_release();
      v5 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B152AF0()
{
  return 0;
}

uint64_t sub_23B152AFC()
{
  return 1;
}

uint64_t sub_23B152B08()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)swift_retain();
  if (objc_sync_enter(v1))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v0);
  v2 = v0[20];
  swift_retain();
  if (objc_sync_exit(v0))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v0);
  swift_release();
  return v2;
}

uint64_t sub_23B152B94(uint64_t a1)
{
  void *v1;

  swift_retain();
  swift_retain();
  sub_23B0DA58C(v1, (uint64_t)v1, a1);
  return swift_release();
}

uint64_t (*sub_23B152BE8(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;

  a1[1] = v1;
  v3 = (void *)swift_retain();
  if (objc_sync_enter(v3))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v1);
  v4 = v1[20];
  swift_retain();
  if (objc_sync_exit(v1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v1);
  swift_release();
  *a1 = v4;
  return sub_23B152C90;
}

uint64_t sub_23B152C90(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = *a1;
  v3 = (void *)a1[1];
  if ((a2 & 1) != 0)
  {
    swift_retain_n();
    v4 = (void *)swift_retain();
    sub_23B0DA58C(v4, (uint64_t)v3, v2);
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_23B0DA58C(v3, (uint64_t)v3, v2);
  }
  return swift_release();
}

uint64_t (*sub_23B152D18())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_23B152D54()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 232), sel_hasPlannedRescan);
}

id sub_23B152D74(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 232), sel_setPlannedRescan_, a1 & 1);
}

NSObject *sub_23B152D8C()
{
  NSObject *result;

  result = FPCreateWorkloop("com.apple.fssync.fstree");
  qword_2542EDD38 = (uint64_t)result;
  return result;
}

uint64_t sub_23B152DB8()
{
  return sub_23B1C5F30();
}

uint64_t sub_23B152DE4()
{
  return sub_23B152E0C();
}

uint64_t sub_23B152DF8()
{
  return sub_23B152E0C();
}

uint64_t sub_23B152E0C()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23B1C5F54();
  swift_release();
  swift_release();
  return v1;
}

uint64_t (*sub_23B152E74())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

fp_task_tracker *sub_23B152EB8(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  char *v10;
  char *v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  fp_task_tracker *result;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  id v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  const void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  uint64_t v76;
  _QWORD *v77;
  id v78;
  uint64_t v79;
  signed int v80;
  uint64_t v81;
  _QWORD *v82;
  id v83;
  uint64_t v84;
  signed int v85;
  _QWORD *v86;
  id v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  void (*v99)(uint64_t, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t, uint64_t);
  double v106;
  double v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  id v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  id *v129;
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  double v133;
  uint64_t v134;
  void *v135;
  char *v136;
  char *v137;
  id v138;
  uint64_t v139;
  id v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  char *v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(char *, uint64_t, uint64_t, uint64_t);
  char *v175;
  uint64_t *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  id v182;
  id v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  id v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;

  v11 = v10;
  v185 = a5;
  v186 = a6;
  v190 = a4;
  v184 = a3;
  v188 = a1;
  v15 = sub_23B1C5E4C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v156 = (char *)&v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4360);
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v153 = (char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E54F0);
  MEMORY[0x24BDAC7A8](v19);
  v180 = (char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_23B1C6B30();
  v167 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v179 = (char *)&v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67D8);
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160);
  v158 = (char *)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4380);
  v157 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v177 = (char *)&v150 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4350);
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v161 = (char *)&v150 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4370);
  v165 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v164 = (char *)&v150 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23B1C5A08();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v191 = (uint64_t)&v150 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v29);
  v189 = (char *)&v150 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[152] = 3;
  swift_retain();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23B1C7088())
    sub_23AAF8534(MEMORY[0x24BEE4AF8]);
  else
    v31 = MEMORY[0x24BEE4B08];
  *((_QWORD *)v11 + 24) = v31;
  *((_QWORD *)v11 + 25) = sub_23AAF7E5C(MEMORY[0x24BEE4AF8]);
  type metadata accessor for TaskTracker();
  v32 = swift_allocObject();
  result = fp_task_tracker_create("vfstree");
  if (!result)
    goto LABEL_42;
  v151 = v16;
  v152 = v15;
  LODWORD(v183) = a10;
  *(_QWORD *)(v32 + 16) = result;
  *((_QWORD *)v11 + 28) = v32;
  *((_QWORD *)v11 + 35) = 0;
  v170 = v11 + 272;
  swift_unknownObjectWeakInit();
  v173 = qword_2542EDD30;
  *(_QWORD *)&v11[qword_2542EDD30] = 0;
  v174 = (void (*)(char *, uint64_t, uint64_t, uint64_t))qword_2542EDF20;
  *(_QWORD *)&v11[qword_2542EDF20] = 0;
  v34 = &v11[qword_2542E6A40];
  *(_OWORD *)v34 = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  *((_OWORD *)v34 + 2) = 0u;
  v176 = (uint64_t *)v34;
  *(_OWORD *)(v34 + 41) = 0u;
  v35 = &v11[qword_2542E6A38];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  v36 = &v11[qword_2542E6A60];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 1;
  v37 = &v11[qword_2542EDF28];
  type metadata accessor for VFSCounters(0);
  *((_QWORD *)v37 + 1) = 0;
  *((_QWORD *)v37 + 2) = 0;
  *(_QWORD *)v37 = 0;
  v175 = v37;
  sub_23B1C5BB8();
  v171 = qword_2542E6A68;
  *(_QWORD *)&v11[qword_2542E6A68] = 1;
  v38 = qword_2542E6A58;
  *(_QWORD *)&v11[v38] = sub_23AAF7F84(MEMORY[0x24BEE4AF8]);
  v39 = type metadata accessor for VFSLookupItemContinuation();
  sub_23B19427C(v39);
  v40 = type metadata accessor for VFSDirectoryLister(0);
  sub_23B19427C(v40);
  v41 = type metadata accessor for VFSStagedContext();
  sub_23B19427C(v41);
  v42 = type metadata accessor for VFSTrackingContinuation(0);
  sub_23B19427C(v42);
  *((_QWORD *)v11 + 22) = a8;
  *((_QWORD *)v11 + 23) = a9;
  v172 = v38;
  if (a7)
  {
    v43 = a7;
    v44 = a7;
  }
  else
  {
    v45 = qword_2542E6A70;
    swift_bridgeObjectRetain();
    if (v45 != -1)
      swift_once();
    v46 = (void *)qword_2542EDD38;
    v47 = objc_allocWithZone((Class)FSChangeMonitor);
    v48 = v46;
    v49 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(v47, sel_initWithLabel_workloop_, v49, v48);

    v43 = 0;
  }
  *((_QWORD *)v11 + 29) = v44;
  v182 = v43;
  *((_QWORD *)v11 + 27) = objc_msgSend(v44, sel_delegationQueue);
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  *((_QWORD *)v11 + 26) = v50;
  objc_msgSend(v50, sel_setUnderlyingQueue_, *((_QWORD *)v11 + 27));
  objc_msgSend(*((id *)v11 + 26), sel_setMaxConcurrentOperationCount_, 1);
  v194 = sub_23B1C59E4();
  v195 = v51;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v52 = a2;
  v53 = v194;
  v54 = v195;
  type metadata accessor for DocumentTrackingTombstoneSlayer();
  v55 = swift_allocObject();
  *(_WORD *)(v55 + 32) = 1;
  *(_BYTE *)(v55 + 34) = 0;
  *(_QWORD *)(v55 + 16) = v53;
  *(_QWORD *)(v55 + 24) = v54;
  sub_23AF43904();
  *((_QWORD *)v11 + 31) = v55;
  *((_QWORD *)v11 + 32) = sub_23AAF7F90(MEMORY[0x24BEE4AF8]);
  *((_QWORD *)v11 + 33) = dispatch_group_create();
  v56 = &v11[qword_2542E4660];
  swift_beginAccess();
  v193 = 0;
  v169 = v56;
  sub_23B1C5F30();
  swift_endAccess();
  v57 = &v11[qword_2542E6A30];
  swift_beginAccess();
  v193 = 0;
  v168 = v57;
  sub_23B1C5F30();
  swift_endAccess();
  v58 = v184;
  *((_QWORD *)v11 + 21) = v184;
  v59 = v52 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v60 = *(_DWORD *)(v59 + 8);
  v187 = v52;
  v61 = v52 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext;
  v62 = *(const void **)(v52 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
  v63 = *(unsigned int *)(v61 + 8);
  LODWORD(v54) = *(unsigned __int8 *)(v61 + 12);
  type metadata accessor for VFSLookupScope();
  swift_allocObject();
  v64 = v58;
  _Block_copy(v62);
  v65 = 0x100000000;
  if (!(_DWORD)v54)
    v65 = 0;
  v66 = v196;
  v67 = sub_23AFE11F0(v188, v60, (uint64_t)sub_23AFE01B4, 0, v62, v65 | v63, v183 & 1);
  v196 = v66;
  if (v66)
  {

    sub_23AAB7948(v185);
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    sub_23ACF1828((uint64_t)v170);
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4398);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v169, v68);
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E67E8);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v168, v69);
    swift_release();
    swift_release();
    sub_23B1943EC(*v176, v176[1]);
    sub_23AA937BC((uint64_t)v175, type metadata accessor for VFSCounters);
    sub_23AC23ABC(*(id *)&v11[v171]);
    swift_bridgeObjectRelease();
    type metadata accessor for VFSFileTree(0);
    swift_deallocPartialClassInstance();
    return (fp_task_tracker *)v11;
  }
  v183 = v64;
  *((_QWORD *)v11 + 20) = v67;
  *((_QWORD *)v11 + 30) = MEMORY[0x24BEE4AF8];
  v70 = v190;
  *(_QWORD *)&v11[qword_2542E6A48] = v190;
  v71 = &v11[qword_2542E6A50];
  v73 = v185;
  v72 = v186;
  *(_QWORD *)v71 = v185;
  *((_QWORD *)v71 + 1) = v72;
  v176 = (uint64_t *)v70;
  sub_23AAFA320(v73);
  swift_release();
  v74 = (char *)objc_opt_self();
  swift_retain();
  v75 = objc_msgSend(v74, sel_defaultStore);
  v76 = (int)objc_msgSend(v75, sel_softConcurrentOperationLimit);
  LODWORD(v73) = objc_msgSend(v75, sel_hardConcurrentOperationLimit);

  type metadata accessor for JobLimit();
  v77 = (_QWORD *)swift_allocObject();
  v188 = (uint64_t)v77;
  v77[2] = 0;
  v77[3] = v76;
  v77[4] = v76;
  v77[5] = (int)v73;
  v184 = v74;
  v78 = objc_msgSend(v74, (SEL)&selRef_initWithPhysicalLocation_rootURL_error_);
  v79 = (int)objc_msgSend(v78, sel_softConcurrentContentUpdateLimit);
  v80 = objc_msgSend(v78, sel_hardConcurrentContentUpdateLimit);

  v81 = v80;
  v82 = (_QWORD *)swift_allocObject();
  v82[2] = 0;
  v82[3] = v79;
  v82[4] = v79;
  v82[5] = v81;
  v83 = objc_msgSend(v74, (SEL)&selRef_initWithPhysicalLocation_rootURL_error_);
  v84 = (int)objc_msgSend(v83, sel_softConcurrentMetadataOnlyUpdateLimit);
  v85 = objc_msgSend(v83, sel_hardConcurrentMetadataOnlyUpdateLimit);

  v86 = (_QWORD *)swift_allocObject();
  v86[2] = 0;
  v86[3] = v84;
  v86[4] = v84;
  v86[5] = v85;
  v87 = objc_msgSend(v184, sel_defaultStore);
  v88 = (int)objc_msgSend(v87, sel_softConcurrentProvideFileLimit);
  LODWORD(v84) = objc_msgSend(v87, sel_hardConcurrentProvideFileLimit);

  v89 = (_QWORD *)swift_allocObject();
  v89[2] = 0;
  v89[3] = v88;
  v89[4] = v88;
  v89[5] = (int)v84;
  v90 = (char *)sub_23B149128(v187, v188, (uint64_t)v82, (uint64_t)v86, (uint64_t)v89, &qword_2542E5108, sub_23B15060C, (void (*)(uint64_t, uint64_t))sub_23B0DA2C0);
  v91 = *((_QWORD *)v90 + 20);
  v92 = sub_23AAF7D10(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  *(_QWORD *)(v91 + 72) = v92;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  v93 = *(char **)(v91 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  v94 = *((_QWORD *)v93 + 2);
  v184 = v90;
  if (v94)
  {
    v95 = &v93[(*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)];
    v188 = *(_QWORD *)(v27 + 72);
    v90 = *(char **)(v27 + 16);
    v175 = v93;
    swift_bridgeObjectRetain();
    v96 = v189;
    do
    {
      ((void (*)(char *, char *, uint64_t))v90)(v96, v95, v26);
      v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
      v97(v96, 0, 1, v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v96, 1, v26) == 1)
      {
        v90 = v184;
        goto LABEL_24;
      }
      v98 = v27;
      v99 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
      v27 = v191;
      v99(v191, v96, v26);
      v100 = sub_23B1C59E4();
      MEMORY[0x24BDAC7A8](v100);
      v101 = (uint64_t)v190;
      *(&v150 - 4) = v91;
      *(&v150 - 3) = v101;
      LOWORD(v192) = 256;
      v102 = v196;
      sub_23B0E2BDC(4294967294, v103, v104, 0x100000, 0, 0, (uint64_t)&v192, (uint64_t)sub_23B194490, (uint64_t)(&v150 - 6));
      if (v102)
      {

        v196 = 0;
      }
      else
      {
        v196 = 0;
        if ((BYTE1(v192) & 1) != 0)
        {
          __break(1u);
          goto LABEL_21;
        }
      }
      v27 = v98;
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v191, v26);
      v96 = v189;
      v95 += v188;
      --v94;
    }
    while (v94);
    v90 = v184;
    v97(v189, 1, 1, v26);
  }
  else
  {
LABEL_21:
    v105 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
    swift_bridgeObjectRetain();
    v105(v189, 1, 1, v26);
  }
LABEL_24:
  swift_release();
  swift_bridgeObjectRelease();
  result = (fp_task_tracker *)objc_msgSend(*((id *)v90 + 29), sel_latency);
  v107 = v106 * 5000.0;
  if (v107 <= 100.0)
    v107 = 100.0;
  if ((~*(_QWORD *)&v107 & 0x7FF0000000000000) != 0)
  {
    if (v107 > -9.22337204e18)
    {
      if (v107 < 9.22337204e18)
      {
        v108 = (uint64_t)v107;
        v109 = &v90[qword_2542E4660];
        swift_beginAccess();
        v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4398);
        v111 = v177;
        v189 = (char *)v110;
        v190 = v109;
        sub_23B1C5F3C();
        swift_endAccess();
        swift_beginAccess();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E67E8);
        v112 = v158;
        sub_23B1C5F3C();
        swift_endAccess();
        v113 = MEMORY[0x24BDB9EE8];
        v114 = sub_23AAB5A28(&qword_2542E4378, &qword_2542E4380, MEMORY[0x24BDB9EE8]);
        sub_23AAB5A28((unint64_t *)&unk_2542E67C8, (uint64_t *)&unk_2542E67D8, v113);
        v115 = v161;
        v116 = v178;
        v117 = v160;
        v188 = v114;
        sub_23B1C5F78();
        (*(void (**)(char *, uint64_t))(v159 + 8))(v112, v117);
        v175 = *(char **)(v157 + 8);
        ((void (*)(char *, uint64_t))v175)(v111, v116);
        v118 = v179;
        v191 = v108;
        sub_23B1C6B18();
        v192 = (id)*((_QWORD *)v90 + 27);
        v119 = v192;
        v120 = sub_23B1C6B00();
        v121 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56);
        v122 = v180;
        v172 = v120;
        v174 = v121;
        ((void (*)(char *, uint64_t, uint64_t))v121)(v180, 1, 1);
        v123 = sub_23AA9F52C(0, (unint64_t *)&qword_2542E5500);
        sub_23AAB5A28(&qword_2542E4348, &qword_2542E4350, MEMORY[0x24BDB9450]);
        v124 = sub_23ACF037C((unint64_t *)&qword_2542E7510, (unint64_t *)&qword_2542E5500, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
        v125 = v119;
        v126 = v164;
        v127 = v163;
        v173 = v123;
        v171 = v124;
        sub_23B1C5F90();
        v128 = (uint64_t)v122;
        v129 = (id *)v184;
        sub_23AA8A05C(v128, (uint64_t *)&unk_2542E54F0);

        v130 = *(void (**)(char *, uint64_t))(v167 + 8);
        v130(v118, v181);
        (*(void (**)(char *, uint64_t))(v162 + 8))(v115, v127);
        swift_allocObject();
        swift_weakInit();
        sub_23AAB5A28(&qword_2542E4368, &qword_2542E4370, MEMORY[0x24BDB9920]);
        v131 = v166;
        v132 = sub_23B1C5FA8();
        swift_release();
        (*(void (**)(char *, uint64_t))(v165 + 8))(v126, v131);
        *(id *)((char *)v129 + qword_2542EDD30) = (id)v132;
        swift_release();
        objc_msgSend(v129[29], sel_latency);
        if (v133 == 0.0)
        {
          v134 = 10 * v191;
          v135 = v183;
          if ((unsigned __int128)(v191 * (__int128)10) >> 64 == (10 * v191) >> 63)
          {
LABEL_33:
            swift_beginAccess();
            v136 = v177;
            sub_23B1C5F3C();
            swift_endAccess();
            v137 = v179;
            v190 = (id)v134;
            sub_23B1C6B18();
            v192 = v129[27];
            v138 = v192;
            v139 = (uint64_t)v180;
            v174(v180, 1, 1, v172);
            v140 = v138;
            v141 = v153;
            v142 = v178;
            sub_23B1C5F90();
            sub_23AA8A05C(v139, (uint64_t *)&unk_2542E54F0);

            v130(v137, v181);
            ((void (*)(char *, uint64_t))v175)(v136, v142);
            swift_allocObject();
            swift_weakInit();
            sub_23AAB5A28(&qword_2542E4358, &qword_2542E4360, MEMORY[0x24BDB9920]);
            v143 = v155;
            v144 = sub_23B1C5FA8();
            swift_release();
            v11 = v184;
            (*(void (**)(char *, uint64_t))(v154 + 8))(v141, v143);
            *(_QWORD *)&v11[qword_2542EDF20] = v144;
            swift_release();
            v145 = (id)fpfs_current_or_default_log();
            v146 = v156;
            sub_23B1C5E58();
            v147 = sub_23B1C5E40();
            v148 = sub_23B1C6A88();
            if (os_log_type_enabled(v147, v148))
            {
              v149 = swift_slowAlloc();
              *(_DWORD *)v149 = 134218240;
              v192 = (id)v191;
              sub_23B1C6CBC();
              *(_WORD *)(v149 + 12) = 2048;
              v192 = v190;
              v135 = v183;
              sub_23B1C6CBC();
              _os_log_impl(&dword_23AA66000, v147, v148, "idle stream timeouts: %ldms, long: %ldms", (uint8_t *)v149, 0x16u);
              MEMORY[0x23B8614BC](v149, -1, -1);
            }

            sub_23AAB7948(v185);
            swift_release();

            (*(void (**)(char *, uint64_t))(v151 + 8))(v146, v152);
            swift_release();
            return (fp_task_tracker *)v11;
          }
          __break(1u);
        }
        v134 = 60000;
        v135 = v183;
        goto LABEL_33;
      }
      goto LABEL_41;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23B154328(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v8;
  uint64_t v9;

  v1 = *a1;
  v2 = a1[1];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23B1C5F54();
    swift_release();
    swift_release();
    if (v1 == v9)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23B1C5F54();
      swift_release();
      swift_release();
      if (v2 == v9)
      {
        v5 = v4 + qword_2542E6A40;
        swift_beginAccess();
        if (*(_QWORD *)(v5 + 8) || objc_msgSend(*(id *)(v4 + 232), sel_hasBufferedEvents))
        {
          v6 = v4 + qword_2542E6A60;
          *(_QWORD *)v6 = v1;
          *(_QWORD *)(v6 + 8) = v2;
          *(_BYTE *)(v6 + 16) = 0;
        }
        else
        {
          v7 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v4 + 16);
          if (v7)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE800);
            __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
            v8 = swift_allocObject();
            *(_OWORD *)(v8 + 16) = xmmword_23B1CA760;
            swift_storeEnumTagMultiPayload();
            swift_retain();
            v7(v8, MEMORY[0x24BEE4AF8], 0, 0);
            sub_23AAB7948((uint64_t)v7);
            swift_bridgeObjectRelease();
          }
        }
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23B154524(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23B1C5F54();
    swift_release();
    swift_release();
    if (v1 == v8)
    {
      v4 = v3 + qword_2542E6A40;
      swift_beginAccess();
      if (*(_QWORD *)(v4 + 8) || objc_msgSend(*(id *)(v3 + 232), sel_hasBufferedEvents))
      {
        v5 = v3 + qword_2542E6A38;
        *(_QWORD *)v5 = v1;
        *(_BYTE *)(v5 + 8) = 0;
      }
      else
      {
        v6 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v3 + 16);
        if (v6)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE800);
          __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
          v7 = swift_allocObject();
          *(_OWORD *)(v7 + 16) = xmmword_23B1CA760;
          swift_storeEnumTagMultiPayload();
          swift_retain();
          v6(v7, MEMORY[0x24BEE4AF8], 0, 0);
          sub_23AAB7948((uint64_t)v6);
          swift_bridgeObjectRelease();
        }
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23B1546D0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)swift_retain();
  if (objc_sync_enter(v1))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v0);
  v2 = v0[20];
  swift_retain();
  if (objc_sync_exit(v0))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v0);
  swift_release();
  v3 = *(unsigned int *)(v2 + 16);
  swift_release();
  return v3;
}

void *sub_23B154768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t (*v5)(void);
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v1 = v0;
  v2 = qword_2542E6A68;
  v3 = *(void **)(v0 + qword_2542E6A68);
  v4 = v3;
  if (v3 == (void *)1)
  {
    v5 = *(uint64_t (**)(void))(v1 + qword_2542E6A50);
    if (v5)
    {
      v4 = (void *)v5();
      if (v4)
      {
        if (*(_QWORD *)(v1 + qword_2542E6A48))
          v6 = (void *)sub_23AB60CA8();
        else
          v6 = 0;
        v7 = swift_allocObject();
        *(_QWORD *)(v7 + 16) = v6;
        v13[4] = sub_23B1A0F34;
        v13[5] = v7;
        v13[0] = MEMORY[0x24BDAC760];
        v13[1] = 1107296256;
        v13[2] = sub_23B149074;
        v13[3] = &block_descriptor_448;
        v8 = _Block_copy(v13);
        v9 = v6;
        swift_release();
        objc_msgSend(v4, sel_setModifyDecoratedPayloadHook_forCategory_, v8, 1);
        _Block_release(v8);

      }
    }
    else
    {
      v4 = 0;
    }
    v10 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v4;
    v11 = v4;
    sub_23AC23ABC(v10);
  }
  sub_23AC2787C(v3);
  return v4;
}

void sub_23B1548BC(int a1, void *a2, id a3, void *a4)
{
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  if (!a4)
    goto LABEL_8;
  v6 = a4;
  if ((sub_23B0DC678((uint64_t)v6) & 1) == 0)
  {

LABEL_8:
    objc_msgSend(a3, sel_removeAllObjects);
    return;
  }
  v7 = (void *)sub_23B1C63BC();
  objc_msgSend(a3, sel___swift_setObject_forKeyedSubscript_, v7, sub_23B1C7400());

  swift_unknownObjectRelease();
  if (a2)
  {
    v8 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = objc_msgSend(v12, sel_fp_protectionClassBehindError);
      if (v9)
      {
        v10 = v9;
        sub_23B1C63E0();
        v11 = (void *)sub_23B1C63BC();
        swift_bridgeObjectRelease();
        objc_msgSend(a3, sel___swift_setObject_forKeyedSubscript_, v11, sub_23B1C7400());

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
  }

}

uint64_t sub_23B154AA0(unint64_t a1, char a2, _QWORD *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  id v21;
  uint64_t v22;
  uint64_t result;
  void (*v24)(uint64_t, uint64_t, _QWORD, _QWORD);
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  int v45;
  unint64_t v46;

  v5 = a2 & 1;
  v6 = sub_23B1C5DC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v44 - v14;
  if (qword_2569E1310 != -1)
    swift_once();
  v16 = (void *)qword_256A07A18;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v15, 1, 1, v6);
  v45 = v5;
  v17 = sub_23B149E18(a1, v5);
  v19 = v18;
  sub_23AA8EFC8((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_2542E67B8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6);
  v46 = a1;
  if (v20 == 1)
  {
    v21 = v16;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
  }
  swift_bridgeObjectRetain();
  sub_23B1C6BF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v22 = swift_allocObject();
  v44 = xmmword_23B1CA760;
  *(_OWORD *)(v22 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v22 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v22 + 32) = v17;
  *(_QWORD *)(v22 + 40) = v19;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  result = sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  v24 = (void (*)(uint64_t, uint64_t, _QWORD, _QWORD))a3[2];
  if (v24)
  {
    v25 = v45 != 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE800);
    v26 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70) - 8) + 80);
    v27 = (v26 + 32) & ~v26;
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = v44;
    v29 = v28 + v27;
    *(_BYTE *)v29 = 0;
    *(_QWORD *)(v29 + 8) = v46;
    *(_BYTE *)(v29 + 16) = v25;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE848);
    v30 = *(_QWORD *)(type metadata accessor for SyncState() - 8);
    v31 = *(_QWORD *)(v30 + 72);
    v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_23B1D2330;
    v34 = v33 + v32;
    swift_retain();
    *(_QWORD *)v34 = FSEventsGetCurrentEventId();
    *(_BYTE *)(v34 + 8) = 0;
    swift_storeEnumTagMultiPayload();
    v35 = (void *)swift_retain();
    if (objc_sync_enter(v35))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a3);
    v36 = a3[20];
    swift_retain();
    if (objc_sync_exit(a3))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a3);
    swift_release();
    v37 = v34 + v31;
    v38 = (void *)objc_opt_self();
    v39 = *(unsigned int *)(v36 + 16);
    swift_release();
    v40 = objc_msgSend(v38, sel_eventStreamUUIDForDevice_, v39);
    if (v40)
    {
      v41 = v40;
      sub_23B1C5C24();

      v42 = sub_23B1C5C54();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v37, 0, 1, v42);
    }
    else
    {
      v43 = sub_23B1C5C54();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v37, 1, 1, v43);
    }
    swift_storeEnumTagMultiPayload();
    v24(v28, v33, 0, 0);
    sub_23AAB7948((uint64_t)v24);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void (*sub_23B154F50())(uint64_t *, _QWORD)
{
  void (*result)(uint64_t *, _QWORD);
  _QWORD *v1;
  uint64_t v2;

  swift_getKeyPath();
  swift_getKeyPath();
  result = (void (*)(uint64_t *, _QWORD))sub_23B1C5F48();
  if (__OFADD__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v1;
    result(&v2, 0);
    swift_release();
    return (void (*)(uint64_t *, _QWORD))swift_release();
  }
  return result;
}

uint64_t sub_23B154FE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  int v34;
  uint64_t ObjectType;
  uint64_t v36;
  char v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  id v79[2];

  v4 = v3;
  v5 = v2;
  v79[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v78 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v72 - v17;
  v19 = (void *)swift_retain();
  if (objc_sync_enter(v19))
LABEL_40:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v5);
  v76 = v11;
  v77 = v10;
  v74 = v9;
  v20 = v5[20];
  swift_retain();
  if (objc_sync_exit(v5))
    goto LABEL_41;
  swift_release();
  v21 = (void *)objc_opt_self();
  v22 = *(unsigned int *)(v20 + 16);
  swift_release();
  v23 = objc_msgSend(v21, sel_eventStreamUUIDForDevice_, v22);
  if (v23)
  {
    v24 = v23;
    sub_23B1C5C24();

    v25 = sub_23B1C5C54();
    v26 = *(_QWORD *)(v25 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v18, 1, v25) != 1)
      goto LABEL_13;
  }
  else
  {
    v27 = sub_23B1C5C54();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v18, 1, 1, v27);
  }
  v75 = a2;
  v28 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain_n();
  v29 = sub_23B1C5E40();
  v30 = sub_23B1C6AA0();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v31 = 67109120;
    v32 = (void *)swift_retain();
    if (objc_sync_enter(v32))
      goto LABEL_40;
    v72 = v3;
    v73 = v18;
    v33 = v5[20];
    swift_retain();
    if (objc_sync_exit(v5))
      goto LABEL_41;
    swift_release();
    v34 = *(_DWORD *)(v33 + 16);
    swift_release();
    swift_release();
    LODWORD(v79[0]) = v34;
    sub_23B1C6CBC();
    swift_release();
    _os_log_impl(&dword_23AA66000, v29, v30, "Unable to retrieve FSEvent stream UUID for device %d", v31, 8u);
    MEMORY[0x23B8614BC](v31, -1, -1);

    v4 = v72;
    v18 = v73;
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v76 + 8))(v13, v77);
  a2 = v75;
LABEL_13:
  ObjectType = swift_getObjectType();
  v36 = sub_23AEBC9C0(ObjectType, a2);
  if (v4)
  {
LABEL_15:
    v40 = (uint64_t)v18;
    return sub_23AA8A05C(v40, (uint64_t *)&unk_2542E4320);
  }
  v38 = (id)v36;
  v39 = v37;
  sub_23AEBC8D8(ObjectType, a2, (uint64_t)v78);
  if ((v39 & 1) != 0)
  {
    v50 = (void *)v5[27];
    v51 = sub_23B1C60A4();
    v52 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v74, 1, 1, v51);
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = 0;
    *(_BYTE *)(v53 + 24) = 1;
    *(_QWORD *)(v53 + 32) = v5;
    swift_retain();
    v54 = v50;
    sub_23AA9086C(v54, v52, (void (*)())nullsub_1, 0, (uint64_t)sub_23B1A0704, v53);

    swift_release();
    sub_23AA8A05C(v52, &qword_2542DD460);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23B1C5F54();
    swift_release();
    swift_release();
    v38 = v79[0];
    goto LABEL_24;
  }
  v42 = sub_23B1C5C54();
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48);
  if (v43(v78, 1, v42) == 1)
  {
    v44 = (void *)v5[27];
    v45 = sub_23B1C60A4();
    v46 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v74, 1, 1, v45);
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = 1;
    *(_BYTE *)(v47 + 24) = 1;
    *(_QWORD *)(v47 + 32) = v5;
    swift_retain();
    v48 = v44;
    v49 = v48;
  }
  else
  {
    if (v43(v18, 1, v42) != 1)
      goto LABEL_24;
    v55 = (void *)v5[27];
    v56 = sub_23B1C60A4();
    v46 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = 2;
    *(_BYTE *)(v47 + 24) = 1;
    *(_QWORD *)(v47 + 32) = v5;
    swift_retain();
    v48 = v55;
    v49 = v48;
  }
  sub_23AA9086C(v48, v46, (void (*)())nullsub_1, 0, (uint64_t)sub_23B1A1E30, v47);

  swift_release();
  sub_23AA8A05C(v46, &qword_2542DD460);
LABEL_24:
  swift_getKeyPath();
  swift_getKeyPath();
  v79[0] = v38;
  swift_retain();
  sub_23B1C5F60();
  v57 = (void *)swift_retain();
  if (objc_sync_enter(v57))
    goto LABEL_40;
  v58 = v5[20];
  swift_retain();
  if (objc_sync_exit(v5))
LABEL_41:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v5);
  v73 = v18;
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23B1C5F54();
  swift_release();
  v59 = swift_release();
  v60 = *(_QWORD *)(v58 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  MEMORY[0x24BDAC7A8](v59);
  *(&v72 - 4) = v62;
  *(&v72 - 3) = v61;
  *(&v72 - 2) = (uint64_t)v78;
  *(&v72 - 1) = (uint64_t)v5;
  swift_bridgeObjectRetain();
  v63 = sub_23B148B40((void (*)(uint64_t *__return_ptr, uint64_t))sub_23B1A075C, (uint64_t)(&v72 - 6), v60);
  swift_release();
  swift_bridgeObjectRelease();
  v5[30] = v63;
  swift_bridgeObjectRelease();
  v64 = v5[30];
  if (v64 >> 62)
    goto LABEL_38;
  v65 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v65; v65 = sub_23B1C7088())
  {
    v66 = 4;
    while (1)
    {
      v67 = (v64 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x23B85F860](v66 - 4, v64)
          : *(id *)(v64 + 8 * v66);
      v68 = v67;
      v69 = v66 - 3;
      if (__OFADD__(v66 - 4, 1))
        break;
      v79[0] = 0;
      if (!objc_msgSend(v67, sel_activateWithError_, v79))
      {
        v71 = v79[0];
        swift_bridgeObjectRelease();
        sub_23B1C587C();

        swift_willThrow();
        sub_23AA8A05C((uint64_t)v78, (uint64_t *)&unk_2542E4320);
        v18 = v73;
        goto LABEL_15;
      }
      v70 = v79[0];

      ++v66;
      if (v69 == v65)
        goto LABEL_35;
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
LABEL_35:
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v78, (uint64_t *)&unk_2542E4320);
  v40 = (uint64_t)v73;
  return sub_23AA8A05C(v40, (uint64_t *)&unk_2542E4320);
}

void sub_23B1558A0()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 216);
  sub_23AC494B4(0, 0, (uint64_t)"stopEventAggregation()", 22, 2, (uint64_t)sub_23B1A06C8, v0);

}

uint64_t sub_23B15590C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  a1[35] = 0;
  swift_unknownObjectWeakAssign();
  v2 = a1[2];
  a1[2] = 0;
  a1[3] = 0;
  sub_23AAB7948(v2);
  v3 = a1[6];
  a1[6] = 0;
  a1[7] = 0;
  return sub_23AAB7948(v3);
}

void sub_23B155958()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 216);
  sub_23AC494B4(0, 0, (uint64_t)"cancel()", 8, 2, (uint64_t)sub_23B1A06B0, v0);

}

uint64_t sub_23B1559C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t i;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;

  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 192);
  swift_bridgeObjectRetain();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
    goto LABEL_41;
LABEL_2:
  v3 = MEMORY[0x24BEE4B08];
LABEL_3:
  *(_QWORD *)(a1 + 192) = v3;
  swift_bridgeObjectRelease();
  v4 = sub_23AAF7E5C(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  v25 = a1;
  *(_QWORD *)(a1 + 200) = v4;
  swift_bridgeObjectRelease();
  if ((v2 & 0xC000000000000001) != 0)
  {
    sub_23B1C6E18();
    sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
    sub_23ACF037C(&qword_2569E8F10, (unint64_t *)&unk_2569E1C88, 0x24BDD1570, MEMORY[0x24BEE5BD8]);
    sub_23B1C68FC();
    v2 = v27;
    v26 = v28;
    v5 = v29;
    v6 = v30;
    v7 = v31;
  }
  else
  {
    v6 = 0;
    v8 = -1 << *(_BYTE *)(v2 + 32);
    v26 = v2 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v2 + 56);
  }
  a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  v11 = (unint64_t)(v5 + 64) >> 6;
  while ((v2 & 0x8000000000000000) == 0)
  {
    if (v7)
    {
      v14 = (v7 - 1) & v7;
      v15 = __clz(__rbit64(v7)) | (v6 << 6);
      v13 = v6;
    }
    else
    {
      v16 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_41:
        if (sub_23B1C7088())
        {
          sub_23AAF8534(MEMORY[0x24BEE4AF8]);
          goto LABEL_3;
        }
        goto LABEL_2;
      }
      if (v16 >= v11)
        goto LABEL_32;
      v17 = *(_QWORD *)(v26 + 8 * v16);
      v13 = v6 + 1;
      if (!v17)
      {
        v13 = v6 + 2;
        if (v6 + 2 >= v11)
          goto LABEL_32;
        v17 = *(_QWORD *)(v26 + 8 * v13);
        if (!v17)
        {
          v13 = v6 + 3;
          if (v6 + 3 >= v11)
            goto LABEL_32;
          v17 = *(_QWORD *)(v26 + 8 * v13);
          if (!v17)
          {
            v13 = v6 + 4;
            if (v6 + 4 >= v11)
              goto LABEL_32;
            v17 = *(_QWORD *)(v26 + 8 * v13);
            if (!v17)
            {
              v18 = v6 + 5;
              while (v11 != v18)
              {
                v17 = *(_QWORD *)(v26 + 8 * v18++);
                if (v17)
                {
                  v13 = v18 - 1;
                  goto LABEL_28;
                }
              }
              goto LABEL_32;
            }
          }
        }
      }
LABEL_28:
      v14 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v13 << 6);
    }
    v12 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    if (!v12)
      goto LABEL_32;
LABEL_30:
    objc_msgSend(v12, sel_cancel);

    v6 = v13;
    v7 = v14;
  }
  if (sub_23B1C6E3C())
  {
    sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v32;
    swift_unknownObjectRelease();
    v13 = v6;
    v14 = v7;
    if (v32)
      goto LABEL_30;
  }
LABEL_32:
  sub_23ACF19B8();
  fp_task_tracker_cancel(*(void **)(*(_QWORD *)(v25 + 224) + 16));
  v19 = *(_QWORD *)(v25 + 240);
  if (!(v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_34;
LABEL_44:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 240) = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + qword_2542EDD30) = 0;
    swift_release();
    *(_QWORD *)(v25 + qword_2542EDF20) = 0;
    return swift_release();
  }
  swift_bridgeObjectRetain();
  result = sub_23B1C7088();
  v20 = result;
  if (!result)
    goto LABEL_44;
LABEL_34:
  if (v20 >= 1)
  {
    for (i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x23B85F860](i, v19);
      else
        v23 = *(id *)(v19 + 8 * i + 32);
      v24 = v23;
      objc_msgSend(v23, sel_dispose);

    }
    goto LABEL_44;
  }
  __break(1u);
  return result;
}

id sub_23B155DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = v0;
  fp_task_tracker_wait(*(_QWORD *)(*(_QWORD *)(v0 + 224) + 16));
  objc_msgSend(*(id *)(v0 + 208), sel_waitUntilAllOperationsAreFinished);
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  sub_23B149254(v2);
  swift_bridgeObjectRelease();
  v3 = *(id *)(v0 + 216);
  sub_23AC494B4(0, 0, (uint64_t)"close()", 7, 2, (uint64_t)nullsub_1, 0);

  return objc_msgSend(*(id *)(v1 + 232), sel_close);
}

uint64_t sub_23B155EB8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  int v37;
  BOOL v38;
  uint8_t *v39;
  int64_t v40;
  _QWORD *v41;
  unint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  _QWORD *v54;
  uint8_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int64_t v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  os_log_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  unint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t result;
  id v89;
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  void *v118;
  id v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  void *v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  int64_t v140;
  char *v141;
  _QWORD *v142;
  int64_t v143;
  int v144;
  int v145;
  char v146;
  int v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  int64_t v151;
  uint64_t v152;
  char v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD v158[2];
  uint64_t v159;
  int v160;
  os_log_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  _QWORD *v165;
  char *v166;
  uint8_t *v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  unint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  void *v179;
  unint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183[5];

  v2 = v1;
  v174 = a1;
  v183[3] = *MEMORY[0x24BDAC8D0];
  v163 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  v173 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v162 = (char *)v158 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v4);
  v164 = (char *)v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v177 = (char *)v158 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v178 = (uint64_t)v158 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v10);
  v175 = (char *)v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_23B1C5A08();
  v12 = *(_QWORD *)(v181 - 8);
  v13 = MEMORY[0x24BDAC7A8](v181);
  v176 = (char *)v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v158 - v15;
  v17 = (_QWORD *)sub_23B1C5E4C();
  v18 = *(v17 - 1);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v166 = (char *)v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v172 = (char *)v158 - v21;
  v22 = sub_23B1C60EC();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (_QWORD *)((char *)v158 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = (void *)v2[27];
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x24BEE5610], v22);
  v27 = v26;
  v28 = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v28 & 1) == 0)
  {
    __break(1u);
    goto LABEL_58;
  }
  v29 = (void *)swift_retain();
  if (objc_sync_enter(v29))
    goto LABEL_91;
  v170 = v18;
  v30 = v2[20];
  swift_retain();
  v31 = objc_sync_exit(v2);
  v32 = v172;
  if (v31)
    goto LABEL_92;
  swift_release();
  v33 = *(_QWORD *)(v30 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  swift_bridgeObjectRetain();
  swift_release();
  v34 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v35 = v174;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v36 = sub_23B1C5E40();
  v37 = sub_23B1C6A88();
  v38 = os_log_type_enabled(v36, (os_log_type_t)v37);
  v180 = v12;
  if (v38)
  {
    v160 = v37;
    v168 = v33;
    v161 = v36;
    v169 = v2;
    v39 = (uint8_t *)swift_slowAlloc();
    v159 = swift_slowAlloc();
    v183[0] = v159;
    v167 = v39;
    *(_DWORD *)v39 = 136315394;
    v40 = *(_QWORD *)(v35 + 16);
    v41 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v165 = v17;
    if (v40)
    {
      v182 = (_QWORD *)MEMORY[0x24BEE4AF8];
      sub_23AAB5A68(0, v40, 0);
      v42 = v35 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      v179 = *(void **)(v12 + 72);
      v43 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      do
      {
        v44 = v181;
        v43(v16, v42, v181);
        v45 = (void *)sub_23B1C5954();
        v46 = objc_msgSend(v45, sel_fp_shortDescription);

        v47 = sub_23B1C63E0();
        v49 = v48;

        (*(void (**)(char *, uint64_t))(v180 + 8))(v16, v44);
        v41 = v182;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23AAB5A68(0, v41[2] + 1, 1);
          v41 = v182;
        }
        v51 = v41[2];
        v50 = v41[3];
        if (v51 >= v50 >> 1)
        {
          sub_23AAB5A68(v50 > 1, v51 + 1, 1);
          v41 = v182;
        }
        v41[2] = v51 + 1;
        v52 = (char *)&v41[2 * v51];
        *((_QWORD *)v52 + 4) = v47;
        *((_QWORD *)v52 + 5) = v49;
        v42 += (unint64_t)v179;
        --v40;
      }
      while (v40);
      v12 = v180;
      v54 = v165;
      v35 = v174;
    }
    else
    {
      v54 = v17;
    }
    v55 = v167;
    v56 = MEMORY[0x23B85F02C](v41, MEMORY[0x24BEE0D00]);
    v58 = v57;
    swift_bridgeObjectRelease();
    v182 = (_QWORD *)sub_23AABEC68(v56, v58, v183);
    v158[1] = v183;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v55 + 6) = 2080;
    v59 = v168;
    v60 = *(_QWORD *)(v168 + 16);
    v61 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v60)
    {
      v182 = (_QWORD *)MEMORY[0x24BEE4AF8];
      sub_23AAB5A68(0, v60, 0);
      v62 = v59 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      v179 = *(void **)(v12 + 72);
      v63 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
      do
      {
        v64 = v181;
        v63(v16, v62, v181);
        v65 = (void *)sub_23B1C5954();
        v66 = objc_msgSend(v65, sel_fp_shortDescription);

        v67 = sub_23B1C63E0();
        v69 = v68;

        (*(void (**)(char *, uint64_t))(v180 + 8))(v16, v64);
        v61 = v182;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23AAB5A68(0, v61[2] + 1, 1);
          v61 = v182;
        }
        v71 = v61[2];
        v70 = v61[3];
        if (v71 >= v70 >> 1)
        {
          sub_23AAB5A68(v70 > 1, v71 + 1, 1);
          v61 = v182;
        }
        v61[2] = v71 + 1;
        v72 = (char *)&v61[2 * v71];
        *((_QWORD *)v72 + 4) = v67;
        *((_QWORD *)v72 + 5) = v69;
        v62 += (uint64_t)v179;
        --v60;
      }
      while (v60);
      v17 = v165;
      v35 = v174;
    }
    else
    {
      v17 = v54;
    }
    v73 = v170;
    v74 = v167;
    v75 = MEMORY[0x23B85F02C](v61, MEMORY[0x24BEE0D00]);
    v77 = v76;
    swift_bridgeObjectRelease();
    v182 = (_QWORD *)sub_23AABEC68(v75, v77, v183);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v78 = v161;
    _os_log_impl(&dword_23AA66000, v161, (os_log_type_t)v160, "starting to observe fsevent on %s (was %s)", v74, 0x16u);
    v79 = v159;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v79, -1, -1);
    MEMORY[0x23B8614BC](v74, -1, -1);

    v53 = *(void (**)(char *, char *, uint64_t))(v73 + 8);
    ((void (*)(char *, _QWORD *))v53)(v172, v17);
    v2 = v169;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v53 = *(void (**)(char *, char *, uint64_t))(v170 + 8);
    ((void (*)(char *, _QWORD *))v53)(v32, v17);
  }
  v80 = v181;
  v81 = (void *)swift_retain();
  if (objc_sync_enter(v81))
    goto LABEL_91;
  swift_retain();
  if (objc_sync_exit(v2))
    goto LABEL_92;
  swift_release();
  v82 = v171;
  v83 = sub_23AFE2C80(v35, 1);
  v85 = v84;
  v87 = v86;
  result = swift_release();
  if (v82)
    return result;
  if ((v85 & 1) != 0)
  {
    v171 = v87;
    v94 = (void *)swift_retain();
    if (!objc_sync_enter(v94))
    {
      LODWORD(v168) = v85;
      v95 = v2[20];
      swift_retain();
      if (!objc_sync_exit(v2))
      {
        v170 = v95;
        swift_release();
        swift_retain();
        swift_retain();
        sub_23B0DA58C(v2, (uint64_t)v2, v83);
        v179 = 0;
        v96 = *(_QWORD *)((char *)v2 + qword_2542E6A48);
        v97 = sub_23AAF7D10(MEMORY[0x24BEE4AF8]);
        swift_beginAccess();
        *(_QWORD *)(v83 + 72) = v97;
        swift_bridgeObjectRelease();
        v174 = v83;
        v172 = (char *)OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs;
        v98 = *(_QWORD *)(v83 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
        v99 = *(_QWORD *)(v98 + 16);
        v169 = v2;
        if (v99)
        {
          v100 = v180;
          v90 = (char *)(v98
                       + ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80)));
          v101 = (uint8_t *)v98;
          v102 = v80;
          v103 = *(_QWORD *)(v180 + 72);
          v53 = *(void (**)(char *, char *, uint64_t))(v180 + 16);
          v167 = v101;
          swift_bridgeObjectRetain();
          v104 = v175;
          do
          {
            v53(v104, v90, v102);
            v17 = *(_QWORD **)(v100 + 56);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v17)(v104, 0, 1, v102);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v104, 1, v102) == 1)
            {
              v2 = v169;
              goto LABEL_46;
            }
            (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v176, v104, v102);
            v105 = sub_23B1C59E4();
            v91 = v158;
            MEMORY[0x24BDAC7A8](v105);
            v158[-4] = v174;
            v158[-3] = v96;
            LOWORD(v182) = 256;
            v106 = v179;
            sub_23B0E2BDC(4294967294, v107, v108, 0x100000, 0, 0, (uint64_t)&v182, (uint64_t)sub_23B1A1F8C, (uint64_t)&v158[-6]);
            if (v106)
            {

              v179 = 0;
            }
            else
            {
              v179 = 0;
              if ((BYTE1(v182) & 1) != 0)
              {
                __break(1u);
                goto LABEL_41;
              }
            }
            v100 = v180;
            v102 = v181;
            (*(void (**)(char *, uint64_t))(v180 + 8))(v176, v181);
            v90 += v103;
            --v99;
            v104 = v175;
          }
          while (v99);
          v2 = v169;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v175, 1, 1, v102);
        }
        else
        {
          v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v180 + 56);
          swift_bridgeObjectRetain();
          v109(v175, 1, 1, v80);
        }
LABEL_46:
        swift_bridgeObjectRelease();
        v110 = sub_23B1C5C54();
        v180 = *(_QWORD *)(*(_QWORD *)(v110 - 8) + 56);
        v181 = v110;
        ((void (*)(uint64_t, uint64_t, uint64_t))v180)(v178, 1, 1);
        v28 = v2[30];
        v2[30] = MEMORY[0x24BEE4AF8];
        if (!(v28 >> 62))
        {
          v111 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v111)
          {
LABEL_48:
            if (v111 < 1)
              __break(1u);
            v112 = 0;
            v113 = v178;
            do
            {
              if ((v28 & 0xC000000000000001) != 0)
                v117 = (id)MEMORY[0x23B85F860](v112, v28);
              else
                v117 = *(id *)(v28 + 8 * v112 + 32);
              v118 = v117;
              v119 = objc_msgSend(v117, sel_eventStreamUUID);
              if (v119)
              {
                v114 = v119;
                v115 = (uint64_t)v177;
                sub_23B1C5C24();

                v116 = 0;
              }
              else
              {
                v116 = 1;
                v115 = (uint64_t)v177;
              }
              ++v112;
              sub_23AA8A05C(v113, (uint64_t *)&unk_2542E4320);
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v180)(v115, v116, 1, v181);
              sub_23AA724E8(v115, v113, (uint64_t *)&unk_2542E4320);
              objc_msgSend(v118, sel_dispose);

            }
            while (v111 != v112);
          }
LABEL_59:
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          swift_getKeyPath();
          v120 = v169;
          sub_23B1C5F54();
          swift_release();
          v121 = swift_release();
          v122 = *(_QWORD *)&v172[v174];
          MEMORY[0x24BDAC7A8](v121);
          v158[-4] = v124;
          v158[-3] = v123;
          v156 = v178;
          v157 = v120;
          swift_bridgeObjectRetain();
          v125 = v179;
          v126 = sub_23B148B40((void (*)(uint64_t *__return_ptr, uint64_t))sub_23B1A1E38, (uint64_t)&v158[-6], v122);
          v179 = v125;
          swift_bridgeObjectRelease();
          v120[30] = v126;
          swift_bridgeObjectRelease();
          v127 = v120[30];
          if (v127 >> 62)
            goto LABEL_88;
          v128 = *(_QWORD *)((v127 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v128)
            goto LABEL_61;
          while (1)
          {
LABEL_68:
            swift_bridgeObjectRelease();
            v134 = v169;
            if ((v168 & 0x100) != 0)
            {
              v135 = (void *)v169[27];
              v136 = sub_23B1C60A4();
              v137 = (uint64_t)v164;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v164, 1, 1, v136);
              v138 = swift_allocObject();
              *(_QWORD *)(v138 + 16) = 4;
              *(_BYTE *)(v138 + 24) = 1;
              *(_QWORD *)(v138 + 32) = v134;
              swift_retain();
              v139 = v135;
              sub_23AA9086C(v139, v137, (void (*)())nullsub_1, 0, (uint64_t)sub_23B1A1E30, v138);

              swift_release();
              sub_23AA8A05C(v137, &qword_2542DD460);
            }
            v127 = v171;
            v140 = *(_QWORD *)(v171 + 16);
            if (!v140 || !v134[2])
              break;
            v177 = (char *)v134[2];
            v141 = (char *)v134[3];
            v182 = (_QWORD *)MEMORY[0x24BEE4AF8];
            v176 = v141;
            swift_retain();
            sub_23ADACE48(0, v140, 0);
            v142 = v182;
            v143 = sub_23B191CC4(v127);
            v145 = v144;
            v147 = v146 & 1;
            v180 = v127 + 56;
            v148 = (uint64_t)v162;
            while ((v143 & 0x8000000000000000) == 0 && v143 < 1 << *(_BYTE *)(v127 + 32))
            {
              if (((*(_QWORD *)(v180 + (((unint64_t)v143 >> 3) & 0xFFFFFFFFFFFFF8)) >> v143) & 1) == 0)
                goto LABEL_86;
              if (*(_DWORD *)(v127 + 36) != v145)
                goto LABEL_87;
              LODWORD(v181) = v147;
              *(_QWORD *)v148 = *(_QWORD *)(*(_QWORD *)(v127 + 48) + 8 * v143);
              *(_BYTE *)(v148 + 8) = 1;
              *(_QWORD *)(v148 + 16) = 4;
              *(_BYTE *)(v148 + 24) = 1;
              swift_storeEnumTagMultiPayload();
              v182 = v142;
              v150 = v142[2];
              v149 = v142[3];
              if (v150 >= v149 >> 1)
              {
                sub_23ADACE48(v149 > 1, v150 + 1, 1);
                v142 = v182;
              }
              v142[2] = v150 + 1;
              sub_23AA724E8(v148, (uint64_t)v142+ ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(_QWORD *)(v173 + 72) * v150, qword_2542DDA70);
              v151 = sub_23B191D68(v143, v145, v181 & 1, v127);
              v143 = v151;
              v145 = v152;
              v147 = v153 & 1;
              if (!--v140)
              {
                sub_23AB3D0AC(v151, v152, v147);
                swift_bridgeObjectRelease();
                v155 = (uint64_t)v177;
                ((void (*)(_QWORD *, _QWORD, _QWORD, _QWORD))v177)(v142, MEMORY[0x24BEE4AF8], 0, 0);
                swift_release();
                sub_23AAB7948(v155);
                swift_release();
                swift_release();
                return sub_23AA8A05C(v178, (uint64_t *)&unk_2542E4320);
              }
            }
            while (1)
            {
              __break(1u);
LABEL_86:
              __break(1u);
LABEL_87:
              __break(1u);
LABEL_88:
              swift_bridgeObjectRetain();
              v128 = sub_23B1C7088();
              if (!v128)
                break;
LABEL_61:
              v129 = 4;
              while (1)
              {
                v130 = (v127 & 0xC000000000000001) != 0
                     ? (id)MEMORY[0x23B85F860](v129 - 4, v127)
                     : *(id *)(v127 + 8 * v129);
                v131 = v130;
                v132 = v129 - 3;
                if (__OFADD__(v129 - 4, 1))
                  break;
                v182 = 0;
                if (!objc_msgSend(v130, sel_activateWithError_, &v182))
                {
                  v154 = v182;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_23B1C587C();

                  swift_willThrow();
                  swift_release();
                  swift_release();

                  return sub_23AA8A05C(v178, (uint64_t *)&unk_2542E4320);
                }
                v133 = v182;

                ++v129;
                if (v132 == v128)
                  goto LABEL_68;
              }
              __break(1u);
            }
          }
          sub_23AA8A05C(v178, (uint64_t *)&unk_2542E4320);
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release();
        }
LABEL_58:
        swift_bridgeObjectRetain();
        v111 = sub_23B1C7088();
        swift_bridgeObjectRelease();
        if (v111)
          goto LABEL_48;
        goto LABEL_59;
      }
LABEL_92:
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v2);
    }
LABEL_91:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v2);
  }
  swift_bridgeObjectRelease();
  v89 = (id)fpfs_current_or_default_log();
  v90 = v166;
  sub_23B1C5E58();
  v91 = sub_23B1C5E40();
  v92 = sub_23B1C6A94();
  if (os_log_type_enabled(v91, v92))
  {
    v93 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v93 = 0;
    _os_log_impl(&dword_23AA66000, v91, v92, "roots haven't changed", v93, 2u);
    MEMORY[0x23B8614BC](v93, -1, -1);
    swift_release();

  }
  else
  {
LABEL_41:

    swift_release();
  }
  return ((uint64_t (*)(char *, _QWORD *))v53)(v90, v17);
}

uint64_t sub_23B15708C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_23AA7BAC4(a1, a2, a3, 0, a5, a6, a7);
}

uint64_t sub_23B157094(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  void *v5;
  char v6;
  uint64_t result;
  void (*v8)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v1;
  v5 = (void *)swift_retain();
  if (objc_sync_enter(v5))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v3);
  swift_retain();
  if (objc_sync_exit(v3))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v3);
  swift_release();
  v6 = sub_23AABB244(a1 & 1);
  result = swift_release();
  if (!v2 && (v6 & 1) != 0)
  {
    v8 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))v3[2];
    if (v8)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE800);
      v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70) - 8) + 80);
      v10 = (v9 + 32) & ~v9;
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_23B1CA760;
      v12 = v11 + v10;
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
      v14 = v12 + *(int *)(v13 + 48);
      v15 = *(int *)(v13 + 64);
      *(_QWORD *)v12 = 1;
      *(_BYTE *)(v12 + 8) = 2;
      v16 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
      *(_QWORD *)(v12 + v15) = 0;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v8(v11, MEMORY[0x24BEE4AF8], 0, 0);
      sub_23AAB7948((uint64_t)v8);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_23B157264@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  void *v9;
  int v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  int v30;
  void *v31;
  uint64_t v32;
  _QWORD v33[5];
  uint64_t v34;
  int v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[6];

  v5 = v4;
  v7 = a1;
  if (a2)
  {
    if (a2 != 1)
    {
      v9 = (void *)swift_retain();
      v10 = objc_sync_enter(v9);
      if (v7)
      {
        if (!v10)
        {
          swift_retain();
          if (objc_sync_exit(v5))
            goto LABEL_34;
          swift_release();
          v11 = sub_23AABB244(1);
          swift_release();
          if ((v11 & 1) != 0)
          {
            v19 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))v5[2];
            if (v19)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE800);
              v20 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70) - 8)
                                       + 80);
              v21 = (v20 + 32) & ~v20;
              v22 = swift_allocObject();
              *(_OWORD *)(v22 + 16) = xmmword_23B1CA760;
              v23 = v22 + v21;
              v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
              v25 = v23 + *(int *)(v24 + 48);
              v26 = *(int *)(v24 + 64);
              *(_QWORD *)v23 = 1;
              *(_BYTE *)(v23 + 8) = 2;
              v27 = type metadata accessor for VFSItem(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v25, 1, 1, v27);
              *(_QWORD *)(v23 + v26) = 0;
              swift_storeEnumTagMultiPayload();
              swift_retain();
              v19(v22, MEMORY[0x24BEE4AF8], 0, 0);
              sub_23AAB7948((uint64_t)v19);
              swift_bridgeObjectRelease();
            }
          }
          v28 = (void *)swift_retain();
          if (!objc_sync_enter(v28))
          {
            v29 = v5[20];
            swift_retain();
            if (objc_sync_exit(v5))
              goto LABEL_34;
            swift_release();
            v7 = *(_QWORD *)(v29 + 40);
            v30 = *(unsigned __int8 *)(v29 + 48);
            swift_release();
            if (v30)
              v7 = 0;
            v31 = (void *)swift_retain();
            if (!objc_sync_enter(v31))
            {
              v32 = v5[20];
              swift_retain();
              if (!objc_sync_exit(v5))
              {
                swift_release();
                v18 = *(_QWORD *)(v32 + 24);
                result = swift_release();
                v12 = 0;
                v16 = 0;
                v17 = 0;
                v15 = 0;
                goto LABEL_32;
              }
LABEL_34:
              sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v5);
            }
          }
        }
LABEL_33:
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v5);
      }
      if (v10)
        goto LABEL_33;
      v13 = v5[20];
      swift_retain();
      if (objc_sync_exit(v5))
        goto LABEL_34;
      swift_release();
      v7 = *(_QWORD *)(v13 + 24);
      swift_release();
    }
    v12 = 0;
  }
  else
  {
    v12 = a1;
    v7 = 0;
  }
  result = sub_23AA724E8(a3, (uint64_t)&v34, (uint64_t *)&unk_2542E4948);
  v15 = v39;
  if (v39)
  {
    v16 = v35;
    v17 = v38;
    if (!v7)
      v7 = v34;
    memset(v40, 0, sizeof(v40));
    sub_23B157264(v33, v36, v37, v40);
    sub_23AC03E50((uint64_t)v33);
    v18 = v33[0];
    if (v7)
    {
      result = swift_bridgeObjectRetain();
      goto LABEL_32;
    }
    result = swift_bridgeObjectRetain();
    if (v12)
    {
      v7 = 0;
      goto LABEL_32;
    }
LABEL_35:
    sub_23AFF0D24((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 123, 2, 530, (void (*)(uint64_t))sub_23AD07D8C);
  }
  v16 = 0;
  v18 = 0;
  v17 = 0;
  v15 = 0;
  if (!v7 && !v12)
    goto LABEL_35;
LABEL_32:
  *(_QWORD *)a4 = v7;
  *(_QWORD *)(a4 + 8) = v18;
  *(_DWORD *)(a4 + 16) = v12;
  *(_DWORD *)(a4 + 20) = v16;
  *(_QWORD *)(a4 + 24) = v17;
  *(_QWORD *)(a4 + 32) = v15;
  return result;
}

void sub_23B157604(uint64_t a1, char a2, int a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v8;
  uint64_t flock_type;
  void (*v10)(uint64_t *, uint64_t, _QWORD);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  NSObject *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)();
  void *v28;
  uint64_t (*v29)();
  uint64_t v30;

  v4 = v3;
  swift_beginAccess();
  if (*(_QWORD *)(v3[32] + 16) && (sub_23AA97254(a1, a2), (v8 & 1) != 0))
  {
    sub_23B1A0F00((uint64_t)&aBlock);
  }
  else
  {
    flock_type = fpfs_get_flock_type();
    v10 = (void (*)(uint64_t *, uint64_t, _QWORD))v3[6];
    if (v10)
    {
      v11 = flock_type;
      aBlock = a1;
      LOBYTE(v26) = a2;
      swift_retain();
      v10(&aBlock, v11, 0);
      sub_23AAB7948((uint64_t)v10);
    }
    v12 = (void *)v3[27];
    v13 = swift_allocObject();
    swift_weakInit();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = a1;
    *(_BYTE *)(v14 + 32) = a2;
    v29 = sub_23B1A0EF4;
    v30 = v14;
    aBlock = MEMORY[0x24BDAC760];
    v26 = 1107296256;
    v27 = sub_23AA698FC;
    v28 = &block_descriptor_436;
    v15 = _Block_copy(&aBlock);
    v16 = v12;
    swift_release();
    v17 = fpfs_set_unlock_handler(a3, v16, v15);
    _Block_release(v15);

    if (v17)
    {
      v18 = v4[33];
      v19 = v17;
      dispatch_group_enter(v18);
      swift_beginAccess();
      v20 = v19;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v24 = v4[32];
      v4[32] = 0x8000000000000000;
      sub_23AD273C8((uint64_t)v20, a1, a2, isUniquelyReferenced_nonNull_native);
      v4[32] = v24;
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_23B1A0F00((uint64_t)&aBlock);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      swift_allocError();
      sub_23AA724E8((uint64_t)&aBlock, v22, (uint64_t *)&unk_2542E0950);
      swift_willThrow();

      return;
    }
    sub_23B19F4AC((uint64_t)&aBlock);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
  swift_allocError();
  sub_23AA724E8((uint64_t)&aBlock, v23, (uint64_t *)&unk_2542E0950);
  swift_willThrow();
}

uint64_t sub_23B1578E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;
  uint64_t v6;
  void *v7;
  void (*v8)(uint64_t *, uint64_t, uint64_t);
  uint64_t v9;
  char v10;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    swift_beginAccess();
    v7 = (void *)sub_23B1833E4(a2, a3);
    swift_endAccess();
    if (v7)
    {
      dispatch_group_leave(*(dispatch_group_t *)(v6 + 264));
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
      sub_23B1C6BA8();

    }
    v8 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
    if (v8)
    {
      v9 = a2;
      v10 = a3;
      swift_retain();
      v8(&v9, 3, 1);
      sub_23AAB7948((uint64_t)v8);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23B1579DC@<X0>(int a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[6];
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  v5 = v4;
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = a2[3];
  v34 = a2[4];
  v35 = v13;
  v14 = (_QWORD *)((char *)v5 + qword_2542EDF28);
  swift_beginAccess();
  if (*v14 == -1)
  {
    __break(1u);
LABEL_6:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v5);
  }
  ++*v14;
  v15 = (void *)swift_retain();
  if (objc_sync_enter(v15))
    goto LABEL_6;
  v32 = v11;
  v33 = a1;
  v16 = a3;
  v17 = v5[20];
  swift_retain();
  if (objc_sync_exit(v5))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v5);
  swift_release();
  v18 = type metadata accessor for VFSFileTree(0);
  v19 = MEMORY[0x23B8615C4](v5 + 34);
  v23[2] = v18;
  v23[3] = v17;
  v23[4] = MEMORY[0x24BDAC7A8](v19);
  v23[5] = v20;
  v24 = 2;
  v25 = v16;
  v26 = v33;
  v27 = v10;
  v28 = v32;
  v29 = v12;
  v30 = v35;
  v31 = v34;
  sub_23AC3A9A8(a2, v21, 0x208000u, 0, (uint64_t)sub_23B1944AC, (uint64_t)v23, a4);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23B157BAC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v6 = v4;
  v39 = *MEMORY[0x24BDAC8D0];
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v31 - v15;
  v17 = (_QWORD *)(v6 + qword_2542EDF28);
  swift_beginAccess();
  if (*v17 == -1)
    __break(1u);
  ++*v17;
  v18 = (void *)swift_retain();
  if (objc_sync_enter(v18))
    goto LABEL_13;
  v35 = a1;
  v32 = v14;
  v33 = a4;
  v19 = *(_QWORD *)(v6 + 160);
  swift_retain();
  if (objc_sync_exit((id)v6))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v6);
  swift_release();
  v20 = type metadata accessor for VFSFileTree(0);
  v21 = MEMORY[0x23B8615C4](v6 + 272);
  v6 = *(unsigned int *)(v19 + 16);
  v22 = MEMORY[0x24BDAC7A8](v21);
  *(&v31 - 10) = v20;
  *(&v31 - 9) = v19;
  v34 = v22;
  *(&v31 - 8) = v22;
  *(&v31 - 7) = v23;
  *((_BYTE *)&v31 - 48) = a2;
  *(&v31 - 5) = a3;
  *(&v31 - 4) = 0;
  *((_BYTE *)&v31 - 24) = -1;
  *(&v31 - 2) = 0;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v16, 1, 1, v24);
  v36 = v35;
  v37 = 0u;
  v38 = 0u;
  sub_23B0E1EBC((uint64_t)&v36, v6, 2129920, 0, (uint64_t)v16, (uint64_t)sub_23ADA9338, (uint64_t)(&v31 - 12));
  if (!v5)
  {
    v30 = (uint64_t)v32;
    sub_23AA8EFC8((uint64_t)v16, (uint64_t)v32, qword_2542E5250);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v30, 1, v24) != 1)
    {
      sub_23AA724E8(v30, v33, &qword_2542E72C0);
      sub_23AA8A05C((uint64_t)v16, qword_2542E5250);
      swift_release();
      return swift_unknownObjectRelease();
    }
    __break(1u);
LABEL_13:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v6);
  }
  sub_23AA8A05C((uint64_t)v16, qword_2542E5250);
  v26 = v5;
  LODWORD(v36) = sub_23B1C54F8();
  sub_23AB6CD48();
  v27 = sub_23B1C575C();

  if ((v27 & 1) != 0)
  {
    v28 = type metadata accessor for VFSItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v33, 1, 1, v28);

  }
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23B157F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  void *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;

  v38 = a4;
  v39 = a1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v35 - v16;
  v18 = (_QWORD *)((char *)v6 + qword_2542EDF28);
  swift_beginAccess();
  if (*v18 == -1)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v6);
  }
  ++*v18;
  v19 = (void *)swift_retain();
  if (objc_sync_enter(v19))
    goto LABEL_13;
  v20 = a5;
  v35 = v15;
  v36 = a6;
  v37 = v7;
  v21 = v6[20];
  swift_retain();
  if (objc_sync_exit(v6))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v6);
  swift_release();
  v22 = type metadata accessor for VFSFileTree(0);
  v23 = MEMORY[0x23B8615C4](v6 + 34);
  v24 = MEMORY[0x24BDAC7A8](v23);
  *(&v35 - 6) = (char *)v22;
  *(&v35 - 5) = (char *)v21;
  *(&v35 - 4) = (char *)v24;
  *(&v35 - 3) = (char *)v25;
  LOBYTE(v33) = a3;
  v34 = v38;
  v6 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v26 = *(v6 - 1);
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v26 + 56))(v17, 1, 1, v6);
  swift_bridgeObjectRetain();
  v27 = v37;
  sub_23B0E2EA0(4294967294, v39, a2, v20, 0, 0, (uint64_t)v17, (uint64_t)sub_23ACFC288, (uint64_t)(&v35 - 8));
  if (!v27)
  {
    v32 = (uint64_t)v35;
    sub_23AA8EFC8((uint64_t)v17, (uint64_t)v35, qword_2542E5250);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v26 + 48))(v32, 1, v6) != 1)
    {
      sub_23AA724E8(v32, v36, &qword_2542E72C0);
      sub_23AA8A05C((uint64_t)v17, qword_2542E5250);
      swift_release();
      return swift_unknownObjectRelease();
    }
    goto LABEL_12;
  }
  sub_23AA8A05C((uint64_t)v17, qword_2542E5250);
  v28 = v27;
  v40 = sub_23B1C54F8();
  sub_23AB6CD48();
  v29 = sub_23B1C575C();

  if ((v29 & 1) != 0)
  {
    v30 = type metadata accessor for VFSItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v36, 1, 1, v30);

  }
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23B15825C@<X0>(char a1@<W1>, uint64_t a2@<X2>, unsigned int a3@<W3>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  int v39;

  v6 = v4;
  v38 = a3;
  v36 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - v12;
  v14 = sub_23B1C59E4();
  v37 = v15;
  v16 = (_QWORD *)((char *)v4 + qword_2542EDF28);
  swift_beginAccess();
  if (*v16 == -1)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v6);
  }
  ++*v16;
  v17 = (void *)swift_retain();
  if (objc_sync_enter(v17))
    goto LABEL_13;
  v18 = v5;
  v34 = a4;
  v19 = v6[20];
  swift_retain();
  if (objc_sync_exit(v6))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v6);
  swift_release();
  v20 = type metadata accessor for VFSFileTree(0);
  v21 = MEMORY[0x23B8615C4](v6 + 34);
  v22 = MEMORY[0x24BDAC7A8](v21);
  *(&v33 - 6) = v20;
  *(&v33 - 5) = v19;
  v35 = v22;
  *(&v33 - 4) = v22;
  *(&v33 - 3) = v23;
  LOBYTE(v31) = a1;
  v32 = v36;
  v6 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v24 = *(v6 - 1);
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v24 + 56))(v13, 1, 1, v6);
  v25 = v37;
  swift_bridgeObjectRetain();
  sub_23B0E2EA0(4294967294, v14, v25, v38, 0, 0, (uint64_t)v13, (uint64_t)sub_23ACFC288, (uint64_t)(&v33 - 8));
  if (!v18)
  {
    v30 = v33;
    sub_23AA8EFC8((uint64_t)v13, v33, qword_2542E5250);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v24 + 48))(v30, 1, v6) != 1)
    {
      sub_23AA724E8(v30, v34, &qword_2542E72C0);
      sub_23AA8A05C((uint64_t)v13, qword_2542E5250);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_unknownObjectRelease();
    }
    goto LABEL_12;
  }
  sub_23AA8A05C((uint64_t)v13, qword_2542E5250);
  v26 = v18;
  v39 = sub_23B1C54F8();
  sub_23AB6CD48();
  v27 = sub_23B1C575C();

  if ((v27 & 1) != 0)
  {
    v28 = type metadata accessor for VFSItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v34, 1, 1, v28);

  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23B1585C4(uint64_t a1, _QWORD *a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[3];
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *);
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;

  v53 = a7;
  v54 = a6;
  v56 = a4;
  v57 = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v42[1] = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v15);
  v43 = sub_23B1C5BDC();
  v16 = MEMORY[0x24BDAC7A8](v43);
  MEMORY[0x24BDAC7A8](v16);
  v42[2] = (char *)v42 - v17;
  v46 = sub_23B1C5570();
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v44 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23B1C5E4C();
  v49 = *(_QWORD *)(v50 - 8);
  v19 = MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v47 = (char *)v42 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21A0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v51 = (char *)v42 - v27;
  v52 = v26;
  if (a1 && (type metadata accessor for VFSLookupItemContinuation(), (v28 = swift_dynamicCastClass()) != 0))
  {
    v55 = v28;
    swift_retain();
  }
  else
  {
    type metadata accessor for VFSLookupItemContinuation();
    v29 = swift_allocObject();
    v55 = sub_23AB6E160(v29);
    swift_release();
  }
  v30 = v56;
  sub_23B157264(v57, v56, a5, (uint64_t)&v58);
  if (v30 != 2 || v57 != 1 || v58)
    goto LABEL_12;
  v31 = (void *)swift_retain();
  if (objc_sync_enter(v31))
    goto LABEL_16;
  v32 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    goto LABEL_17;
  swift_release();
  v33 = *(_BYTE *)(v32 + 49);
  swift_release();
  if ((v33 & 1) == 0)
  {
LABEL_12:
    v36 = (void *)swift_retain();
    if (!objc_sync_enter(v36))
    {
      v37 = a2[20];
      swift_retain();
      if (!objc_sync_exit(a2))
      {
        swift_release();
        v38 = *(unsigned int *)(v37 + 16);
        v39 = swift_release();
        MEMORY[0x24BDAC7A8](v39);
        v42[-4] = a2;
        v42[-3] = a8;
        v42[-2] = v57;
        LOBYTE(v42[-1]) = v56;
        sub_23AC3A9A8(&v58, v38, 0x208000u, 0, (uint64_t)sub_23B1A0690, (uint64_t)&v42[-6], (uint64_t)v25);
        sub_23AC03E50((uint64_t)&v58);
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E0AF8);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        v54(v25);
        swift_release();
        v40 = (uint64_t)v25;
        return sub_23AA8A05C(v40, &qword_2542E21A0);
      }
LABEL_17:
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
    }
LABEL_16:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  }
  sub_23AC03E50((uint64_t)&v58);
  v34 = type metadata accessor for VFSItem(0);
  v35 = v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v51, 1, 1, v34);
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E0AF8);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v54(v35);
  swift_release();
  v40 = (uint64_t)v35;
  return sub_23AA8A05C(v40, &qword_2542E21A0);
}

uint64_t sub_23B159638@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  swift_retain();
  if (objc_sync_enter(a2))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  swift_retain();
  if (objc_sync_exit(a2))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  swift_release();
  type metadata accessor for VFSFileTree(0);
  MEMORY[0x23B8615C4](a2 + 272);
  sub_23AABD714(a1, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_23B159770(uint64_t a1, char a2, unint64_t a3, char a4, void (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id *v22;
  char v23;
  uint64_t (*v24)();
  uint64_t (*v25)();
  _QWORD *v26;
  uint64_t inited;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  void (*v46)(_QWORD, _QWORD);
  id v47[4];
  id v48;
  _QWORD aBlock[7];

  v7 = v6;
  v46 = a5;
  v13 = sub_23B1C60EC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (void *)v7[27];
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v18 = v17;
  LOBYTE(v17) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v33 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (!v33)
      goto LABEL_18;
    goto LABEL_4;
  }
  if (a3 >> 62)
    goto LABEL_17;
  if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    v46(0, 0);
    return;
  }
LABEL_4:
  if ((a4 & 1) != 0)
    goto LABEL_18;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
  if (v7[23])
  {
    v20 = (void *)sub_23B1C63BC();
    objc_msgSend(v19, sel_setPurposeIdentifier_, v20);

  }
  swift_beginAccess();
  v21 = v19;
  sub_23ADE21E0(v47, v21);
  swift_endAccess();

  if (a2 == -1)
    goto LABEL_22;
  v22 = (id *)(v7 + 25);
  swift_beginAccess();
  if (*(_QWORD *)(v7[25] + 16))
  {
    sub_23AA97254(a1, a2);
    if ((v23 & 1) != 0)
    {
      v24 = sub_23B152D18();
      v25 = sub_23B148FE8(v47, a1, a2);
      if (*v26)
      {
        sub_23ADE21E0(&v48, v21);
        ((void (*)(id *, _QWORD))v25)(v47, 0);
        ((void (*)(_QWORD *, _QWORD))v24)(aBlock, 0);

      }
      else
      {
        ((void (*)(id *, _QWORD))v25)(v47, 0);
        ((void (*)(_QWORD *, _QWORD))v24)(aBlock, 0);
      }
      goto LABEL_22;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CE680;
  *(_QWORD *)(inited + 32) = v21;
  aBlock[0] = inited;
  sub_23B1C671C();
  v28 = aBlock[0];
  if (aBlock[0] >> 62)
  {
    v34 = v21;
    swift_bridgeObjectRetain();
    v35 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (v35)
      goto LABEL_14;
LABEL_20:
    v32 = MEMORY[0x24BEE4B08];
    goto LABEL_21;
  }
  v29 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  v30 = v21;
  if (!v29)
    goto LABEL_20;
LABEL_14:
  sub_23AAF8534(v28);
  v32 = v31;
LABEL_21:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47[0] = *v22;
  *v22 = (id)0x8000000000000000;
  sub_23AD27510(v32, a1, a2, isUniquelyReferenced_nonNull_native);
  *v22 = v47[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_22:
  v37 = (id)fpfs_current_log();
  sub_23AA9F52C(0, &qword_2569E6F90);
  v38 = (void *)sub_23B1C66F8();
  v39 = (void *)v7[26];
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v37;
  *(_QWORD *)(v40 + 24) = v7;
  *(_QWORD *)(v40 + 32) = v21;
  *(_QWORD *)(v40 + 40) = a1;
  *(_BYTE *)(v40 + 48) = a2;
  *(_QWORD *)(v40 + 56) = v46;
  *(_QWORD *)(v40 + 64) = a6;
  aBlock[4] = sub_23B1A0A58;
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AC46D44;
  aBlock[3] = &block_descriptor_429;
  v41 = _Block_copy(aBlock);
  v42 = v21;
  v43 = v39;
  v44 = v37;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v42, sel_coordinateAccessWithIntents_queue_byAccessor_, v38, v43, v41);
  _Block_release(v41);

}

void sub_23B159C00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, char a6, void (*a7)(void *, uint64_t))
{
  int v12;
  id v13;
  void *v14;
  uint64_t (*v15)();
  uint64_t (*v16)();
  _QWORD *v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  id v30;
  uint64_t v32;
  _QWORD v33[4];
  _BYTE v34[32];

  v12 = ~a6;
  v13 = (id)fpfs_adopt_log();
  swift_beginAccess();
  v14 = (void *)sub_23B18DCD0(a4);
  swift_endAccess();

  if (v12)
  {
    v15 = sub_23B152D18();
    v16 = sub_23B148FE8(v33, a5, a6);
    if (*v17)
    {
      v18 = (void *)sub_23B18DCD0(a4);
      ((void (*)(_QWORD *, _QWORD))v16)(v33, 0);
      ((void (*)(_BYTE *, _QWORD))v15)(v34, 0);

    }
    else
    {
      ((void (*)(_QWORD *, _QWORD))v16)(v33, 0);
      ((void (*)(_BYTE *, _QWORD))v15)(v34, 0);
    }
    v19 = (uint64_t *)(a3 + 200);
    swift_beginAccess();
    v20 = *(_QWORD *)(a3 + 200);
    if (*(_QWORD *)(v20 + 16))
    {
      v21 = sub_23AA97254(a5, a6);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
        if ((v23 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v24 = sub_23B1C6E24();
          swift_bridgeObjectRelease();
          if (v24)
            goto LABEL_16;
        }
        else if (*(_QWORD *)(v23 + 16))
        {
          goto LABEL_16;
        }
        swift_beginAccess();
        v25 = sub_23AA97254(a5, a6);
        if ((v26 & 1) != 0)
        {
          v27 = v25;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v29 = *v19;
          v32 = *v19;
          *v19 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23B18BD70(&qword_2569E1C78);
            v29 = v32;
          }
          sub_23B186414(v27, v29);
          *v19 = v29;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
      }
    }
  }
LABEL_16:
  a7(a4, a1);
  v30 = (id)fpfs_adopt_log();

}

uint64_t sub_23B159E64(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t *__return_ptr, _BYTE *, char *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v23;
  uint64_t v24;
  uint64_t v26;
  void (*v27)(uint64_t *__return_ptr, _BYTE *, char *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v9 = sub_23B1C5A08();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  if (!a1)
    return 2;
  v16 = (void *)swift_retain();
  if (objc_sync_enter(v16))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  v28 = a4;
  v17 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  v30 = v4;
  swift_release();
  v18 = *(_QWORD *)(v17 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  swift_bridgeObjectRetain();
  swift_release();
  v19 = *(_QWORD *)(v18 + 16);
  v29 = v18;
  if (v19)
  {
    v27 = a3;
    v20 = v18 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v31 = *(_QWORD *)(v10 + 72);
    v32 = v21;
    v21(v15, v20, v9);
    while (1)
    {
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v22(v15, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
      sub_23B1C59E4();
      sub_23B1C6458();
      swift_bridgeObjectRelease();
      v23 = (_BYTE *)fpfs_path_relative_to();
      swift_release();
      if (v23 && *v23)
      {
        swift_bridgeObjectRelease();
        v24 = v30;
        v27(&v34, v23, v12);
        if (v24)
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        return v34;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v20 += v31;
      if (!--v19)
        goto LABEL_15;
      v32(v15, v20, v9);
    }
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
LABEL_15:
    v22(v15, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  return 2;
}

uint64_t sub_23B15A13C(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t *__return_ptr, _BYTE *, char *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v23;
  uint64_t v24;
  uint64_t v26;
  void (*v27)(uint64_t *__return_ptr, _BYTE *, char *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v9 = sub_23B1C5A08();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  if (!a1)
    return 0;
  v16 = (void *)swift_retain();
  if (objc_sync_enter(v16))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  v28 = a4;
  v17 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  v30 = v4;
  swift_release();
  v18 = *(_QWORD *)(v17 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  swift_bridgeObjectRetain();
  swift_release();
  v19 = *(_QWORD *)(v18 + 16);
  v29 = v18;
  if (v19)
  {
    v27 = a3;
    v20 = v18 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v31 = *(_QWORD *)(v10 + 72);
    v32 = v21;
    v21(v15, v20, v9);
    while (1)
    {
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v22(v15, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
      sub_23B1C59E4();
      sub_23B1C6458();
      swift_bridgeObjectRelease();
      v23 = (_BYTE *)fpfs_path_relative_to();
      swift_release();
      if (v23 && *v23)
      {
        swift_bridgeObjectRelease();
        v24 = v30;
        v27(&v34, v23, v12);
        if (v24)
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        return v34;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v20 += v31;
      if (!--v19)
        goto LABEL_15;
      v32(v15, v20, v9);
    }
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
LABEL_15:
    v22(v15, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B15A434@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = fpfs_pkg_system_relative_lookup();
  *a1 = 0;
  return result;
}

uint64_t sub_23B15A4A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = fpfs_pkg_system_relative_lookup();
  *a1 = 0;
  return result;
}

uint64_t sub_23B15A590(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v20;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v4 + 216);
  v13 = *(_QWORD *)(v4 + 224);
  v14 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v4;
  *(_QWORD *)(v16 + 24) = a1;
  *(_BYTE *)(v16 + 32) = a2;
  *(_QWORD *)(v16 + 40) = a3;
  *(_QWORD *)(v16 + 48) = a4;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_23AA956C8;
  v17[3] = v15;
  v17[4] = v13;
  swift_retain_n();
  v18 = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA9086C(v18, (uint64_t)v11, sub_23AC279F4, v17, (uint64_t)sub_23B1A05F8, v16);

  swift_release();
  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v11, &qword_2542DD460);
}

void sub_23B15A724(uint64_t a1, uint64_t a2, char a3, void (*a4)(_QWORD))
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 200);
  if (!*(_QWORD *)(v8 + 16) || (v9 = sub_23AA97254(a2, a3), (v10 & 1) == 0))
  {
LABEL_33:
    a4(0);
    return;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  v27 = a4;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23B1C6E18();
    sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
    sub_23ACF037C(&qword_2569E8F10, (unint64_t *)&unk_2569E1C88, 0x24BDD1570, MEMORY[0x24BEE5BD8]);
    sub_23B1C68FC();
    v11 = v30;
    v28 = v31;
    v12 = v32;
    v13 = v33;
    v14 = v34;
  }
  else
  {
    v15 = -1 << *(_BYTE *)(v11 + 32);
    v28 = v11 + 56;
    v12 = ~v15;
    v16 = -v15;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v14 = v17 & *(_QWORD *)(v11 + 56);
    swift_bridgeObjectRetain();
    v13 = 0;
  }
  v26 = v12;
  v18 = (unint64_t)(v12 + 64) >> 6;
  if (v11 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v14)
    {
      v19 = (v14 - 1) & v14;
      v20 = __clz(__rbit64(v14)) | (v13 << 6);
      v21 = v13;
      goto LABEL_29;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v23 >= v18)
      goto LABEL_32;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    v21 = v13 + 1;
    if (!v24)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v18)
        goto LABEL_32;
      v24 = *(_QWORD *)(v28 + 8 * v21);
      if (!v24)
      {
        v21 = v13 + 3;
        if (v13 + 3 >= v18)
          goto LABEL_32;
        v24 = *(_QWORD *)(v28 + 8 * v21);
        if (!v24)
        {
          v21 = v13 + 4;
          if (v13 + 4 >= v18)
            goto LABEL_32;
          v24 = *(_QWORD *)(v28 + 8 * v21);
          if (!v24)
          {
            v25 = v13 + 5;
            while (v18 != v25)
            {
              v24 = *(_QWORD *)(v28 + 8 * v25++);
              if (v24)
              {
                v21 = v25 - 1;
                goto LABEL_28;
              }
            }
LABEL_32:
            sub_23ACF19B8();
            a4 = v27;
            goto LABEL_33;
          }
        }
      }
    }
LABEL_28:
    v19 = (v24 - 1) & v24;
    v20 = __clz(__rbit64(v24)) + (v21 << 6);
LABEL_29:
    v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v20);
    if (!v22)
      goto LABEL_32;
    while (1)
    {
      objc_msgSend(v22, sel_cancel, v26);

      v13 = v21;
      v14 = v19;
      if ((v11 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      if (sub_23B1C6E3C())
      {
        sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v22 = v29;
        swift_unknownObjectRelease();
        v21 = v13;
        v19 = v14;
        if (v29)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_23B15AA2C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23B191FD4(a1, a2, a3, a6, a7, a8, a9);
}

void sub_23B15AA40(void (*a1)(uint64_t a1@<X0>, uint64_t a2@<X8>), uint64_t a2, int a3, void (*a4)(uint64_t, uint64_t), void (*a5)(_QWORD, _QWORD, _QWORD), uint64_t a6, uint64_t (*a7)(uint64_t), void (**a8)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  char *v49;
  _BOOL4 v50;
  _BOOL4 v51;
  unint64_t v52;
  unint64_t v53;
  BOOL v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(uint64_t@<X0>, uint64_t@<X8>);
  void (*v64)(_QWORD, _QWORD, _QWORD);
  int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(_QWORD, _QWORD, _QWORD);
  uint64_t v70;
  void (**v71)(char *, uint64_t);
  void (*v72)(_QWORD, _QWORD, _QWORD);
  uint64_t v73;
  _QWORD *v74;
  __int128 v75;
  unsigned int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  id v105;
  int v106;
  void *v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  void (*v128)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char v139;
  char *v140;
  char v141;
  uint64_t v142;
  char *v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  void *v148;
  char *v149;
  __int128 v150;
  void (**v151)(_QWORD, _QWORD, _QWORD);
  void (**v152)(_QWORD, _QWORD, _QWORD);
  void (*v153[2])(_QWORD, _QWORD, _QWORD);
  void (*v154)(uint64_t, uint64_t);
  _BOOL4 v155;
  _QWORD *v156;
  _BOOL4 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  __int128 v162;
  uint64_t v163;
  char *v164;
  uint64_t (*v165)(uint64_t);
  void (**v166)(_QWORD, _QWORD, _QWORD);
  char *v167;
  char *v168;
  _QWORD *v169;
  uint64_t *v170;
  char *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  int64_t v181;
  int v182;
  void (*v183)(uint64_t@<X0>, uint64_t@<X8>);
  unint64_t v184;
  uint64_t v185;
  char *v186;
  void (**v187)(char *, uint64_t);
  void (**v188)(_QWORD, _QWORD, _QWORD);
  char *v189;
  _QWORD v190[3];
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  char *v198;
  __int128 v199;
  unint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  _QWORD v205[5];
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  _BYTE v209[16];
  _BYTE v210[104];
  _QWORD v211[5];

  v165 = a7;
  v166 = a8;
  v158 = a6;
  v211[2] = *MEMORY[0x24BDAC8D0];
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v163 = (uint64_t)v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v164 = (char *)v153 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v160 = (uint64_t)v153 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v167 = (char *)v153 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v159 = (uint64_t)v153 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v161 = (char *)v153 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v177 = *(_QWORD *)(v25 - 8);
  v178 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v176 = (uint64_t)v153 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for VFSItem(0);
  v173 = *(_QWORD *)(v27 - 8);
  v174 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v175 = (char *)v153 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23B1C5570();
  v187 = *(void (***)(char *, uint64_t))(v29 - 8);
  v188 = (void (**)(_QWORD, _QWORD, _QWORD))v29;
  MEMORY[0x24BDAC7A8](v29);
  v186 = (char *)v153 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23B1C5E4C();
  v184 = *(_QWORD *)(v31 - 8);
  v185 = v31;
  MEMORY[0x24BDAC7A8](v31);
  v189 = (char *)v153 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23B1C5A08();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v153 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v210, 0, 96);
  v179 = a2;
  v37 = a2;
  v38 = a1;
  v182 = a3;
  sub_23B157264(v37, a3, (uint64_t)v210, (uint64_t)v205);
  sub_23AC03E50((uint64_t)v205);
  v39 = v205[0];
  if (!v205[0])
  {
    a4(0, 0);
    return;
  }
  v153[1] = a5;
  v154 = a4;
  v183 = a1;
  v153[0] = (void (*)(_QWORD, _QWORD, _QWORD))v205[0];
  if (v158)
  {
    type metadata accessor for VFSDirectoryLister(0);
    v40 = swift_dynamicCastClass();
    if (v40)
    {
      a1 = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v40;
      swift_beginAccess();
      if (*((_QWORD *)a1 + 3) == v39)
      {
        swift_retain();
        goto LABEL_6;
      }
      if (v182 != 2 || v179)
      {
        swift_retain_n();
        sub_23AFF4A78((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 123, 2, 858, v179, v182, (uint64_t)a1);
      }
      swift_retain();
      swift_retain();
      if (objc_sync_enter(v38))
        goto LABEL_129;
      swift_retain();
      if (objc_sync_exit(v38))
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v38);
      swift_release();
      if (qword_2542E5360 == -1)
      {
LABEL_79:
        v191 = xmmword_2542EDE40;
        *(_QWORD *)&v199 = 47;
        *((_QWORD *)&v199 + 1) = 0xE100000000000000;
        v203 = 58;
        v204 = 0xE100000000000000;
        v151 = (void (**)(_QWORD, _QWORD, _QWORD))sub_23AAA420C();
        v152 = v151;
        *(_QWORD *)&v150 = MEMORY[0x24BEE0D00];
        *((_QWORD *)&v150 + 1) = v151;
        sub_23B1C6CF8();
        sub_23B1C5984();
        swift_bridgeObjectRelease();
        sub_23AABACB8((uint64_t)v36);
        (*(void (**)(char *, unint64_t))(v34 + 8))(v36, v33);
        swift_release();
        v100 = *((_QWORD *)a1 + 3);
        v38 = v183;
        v101 = (void *)swift_retain();
        if (objc_sync_enter(v101))
          goto LABEL_129;
        v102 = *((_QWORD *)v38 + 20);
        swift_retain();
        if (objc_sync_exit(v38))
          goto LABEL_130;
        swift_release();
        v103 = *(_QWORD *)(v102 + 40);
        v104 = *(_BYTE *)(v102 + 48);
        swift_release();
        if ((v104 & 1) != 0 || v100 != v103)
        {
          v121 = (id)fpfs_current_or_default_log();
          v122 = (uint64_t)v189;
          sub_23B1C5E58();
          swift_retain_n();
          swift_retain();
          v123 = sub_23B1C5E40();
          v124 = sub_23B1C6AA0();
          if (os_log_type_enabled(v123, v124))
          {
            v125 = swift_slowAlloc();
            v126 = swift_slowAlloc();
            *(_QWORD *)&v191 = v126;
            *(_DWORD *)v125 = 134218754;
            *(_QWORD *)&v199 = *((_QWORD *)a1 + 3);
            sub_23B1C6CBC();
            swift_release();
            *(_WORD *)(v125 + 12) = 2048;
            v127 = (void *)swift_retain();
            if (objc_sync_enter(v127))
              goto LABEL_129;
            v128 = v38;
            v129 = *((_QWORD *)v38 + 20);
            swift_retain();
            if (objc_sync_exit(v128))
              sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v128);
            swift_release();
            v130 = *(_QWORD *)(v129 + 40);
            v131 = *(unsigned __int8 *)(v129 + 48);
            swift_release();
            swift_release();
            if (v131)
              v132 = 0;
            else
              v132 = v130;
            *(_QWORD *)&v199 = v132;
            sub_23B1C6CBC();
            swift_release();
            *(_WORD *)(v125 + 22) = 2048;
            *(void (**)(_QWORD, _QWORD, _QWORD))&v199 = v153[0];
            sub_23B1C6CBC();
            *(_WORD *)(v125 + 32) = 2080;
            v133 = sub_23AA96F18(0, 2);
            *(_QWORD *)&v199 = sub_23AABEC68(v133, v134, (uint64_t *)&v191);
            sub_23B1C6CBC();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23AA66000, v123, v124, "ESTALE: root/trash changed during enumeration. %llu, %llu, %llu, %s", (uint8_t *)v125, 0x2Au);
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v126, -1, -1);
            MEMORY[0x23B8614BC](v125, -1, -1);

            (*(void (**)(char *, uint64_t))(v184 + 8))(v189, v185);
          }
          else
          {

            swift_release();
            swift_release_n();
            (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v122, v185);
          }
          LODWORD(v191) = 70;
          sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
          sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
          v135 = v186;
          v136 = (uint64_t)v188;
          sub_23B1C5864();
          v137 = sub_23B1C5558();
          v187[1](v135, v136);
          swift_willThrow();
          v49 = (char *)v137;
          swift_release();
          goto LABEL_111;
        }
        v153[0] = *((void (**)(_QWORD, _QWORD, _QWORD))a1 + 3);
LABEL_6:
        v41 = sub_23B154768();
        if (v41)
        {
          v42 = v41;
          if (*((_QWORD *)a1 + 8))
          {
            swift_release();

            goto LABEL_91;
          }
          *((_QWORD *)a1 + 8) = v41;
        }
LABEL_90:
        swift_release();
LABEL_91:
        v105 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
        v106 = objc_msgSend(v105, sel_vfsDirectoryListerLimit);

        v107 = (void *)swift_retain();
        if (!objc_sync_enter(v107))
        {
          v108 = *((_QWORD *)v38 + 20);
          swift_retain();
          v109 = objc_sync_exit(v38);
          v110 = v158;
          if (!v109)
          {
            swift_release();
            v111 = MEMORY[0x23B8615C4]((char *)v38 + 272);
            v188 = (void (**)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v38 + 35);
            v189 = (char *)v111;
            v112 = *((_QWORD *)v38 + 17);
            v113 = *(_QWORD *)(v112 + 16);
            v114 = *(_QWORD *)(v112 + 24);
            if (v110)
            {
              type metadata accessor for VFSDirectoryLister(0);
              v115 = swift_dynamicCastClass();
              if (v115)
                swift_retain();
            }
            else
            {
              v115 = 0;
            }
            v116 = *((_QWORD *)v38 + 22);
            v117 = *((_QWORD *)v38 + 23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v118 = sub_23B154768();
            type metadata accessor for VFSDirectoryLister(0);
            swift_allocObject();
            v119 = sub_23AEB9108(v153[0], v106, v108, (uint64_t)v189, (uint64_t)v188, v113, v114, v115, v116, v117, v118);
            LOBYTE(v191) = 0;
            MEMORY[0x24BDAC7A8](v119);
            *(_QWORD *)&v150 = &v191;
            *((_QWORD *)&v150 + 1) = v165;
            v151 = v166;
            sub_23B149FCC((uint64_t)sub_23B1A09EC, (uint64_t)&v153[-6]);
            if ((*(_BYTE *)(v119 + 48) & 1) != 0)
            {
              v120 = 0;
            }
            else
            {
              swift_retain();
              v120 = v119;
            }
            v154(v120, 0);
            swift_release();
LABEL_101:
            swift_release();
            return;
          }
LABEL_130:
          sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v38);
        }
LABEL_129:
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v38);
      }
LABEL_123:
      swift_once();
      goto LABEL_79;
    }
  }
  v43 = (void *)swift_retain();
  if (objc_sync_enter(v43))
    goto LABEL_129;
  v44 = *((_QWORD *)a1 + 20);
  swift_retain();
  if (objc_sync_exit(a1))
    goto LABEL_130;
  swift_release();
  swift_beginAccess();
  v36 = *(char **)(v44 + 72);
  swift_bridgeObjectRetain();
  swift_release();
  v45 = *((_QWORD *)v36 + 8);
  v180 = v36 + 64;
  v46 = 1 << v36[32];
  v47 = -1;
  if (v46 < 64)
    v47 = ~(-1 << v46);
  v33 = v47 & v45;
  v171 = (char *)a1 + 272;
  v172 = (_QWORD *)((char *)a1 + qword_2542EDF28);
  swift_beginAccess();
  v48 = 0;
  v49 = 0;
  v181 = (unint64_t)(v46 + 63) >> 6;
  v50 = v182 == 2;
  v51 = v179 == 1 && v182 == 2;
  v157 = v51;
  if (v179)
    v50 = 0;
  v155 = v50;
  v169 = (_QWORD *)&v192 + 1;
  v170 = &v208;
  v156 = &v201;
  v162 = xmmword_23B1CA760;
  v168 = v36;
  while (1)
  {
    do
    {
      while (1)
      {
        if (v33)
        {
          v52 = __clz(__rbit64(v33));
          v33 &= v33 - 1;
          v53 = v52 | (v48 << 6);
        }
        else
        {
          v54 = __OFADD__(v48++, 1);
          v38 = v183;
          if (v54)
            goto LABEL_121;
          if (v48 >= v181)
            goto LABEL_90;
          v55 = *(_QWORD *)&v180[8 * v48];
          if (!v55)
          {
            v56 = v48 + 1;
            if (v48 + 1 >= v181)
              goto LABEL_90;
            v55 = *(_QWORD *)&v180[8 * v56];
            if (!v55)
            {
              v56 = v48 + 2;
              if (v48 + 2 >= v181)
                goto LABEL_90;
              v55 = *(_QWORD *)&v180[8 * v56];
              if (!v55)
              {
                v56 = v48 + 3;
                if (v48 + 3 >= v181)
                  goto LABEL_90;
                v55 = *(_QWORD *)&v180[8 * v56];
                if (!v55)
                {
                  while (1)
                  {
                    v48 = v56 + 1;
                    if (__OFADD__(v56, 1))
                      goto LABEL_122;
                    if (v48 >= v181)
                      goto LABEL_90;
                    v55 = *(_QWORD *)&v180[8 * v48];
                    ++v56;
                    if (v55)
                      goto LABEL_33;
                  }
                }
              }
            }
            v48 = v56;
          }
LABEL_33:
          v33 = (v55 - 1) & v55;
          v53 = __clz(__rbit64(v55)) + (v48 << 6);
        }
        v57 = *((_QWORD *)v36 + 6) + 16 * v53;
        v58 = *(_QWORD *)v57;
        v59 = *(_BYTE *)(v57 + 8);
        v60 = *((_QWORD *)v36 + 7) + 32 * v53;
        v61 = *(_QWORD *)v60;
        a1 = *(void (**)(uint64_t@<X0>, uint64_t@<X8>))(v60 + 24);
        if (!*(_BYTE *)(v60 + 8))
          break;
        if (*(_BYTE *)(v60 + 8) == 1)
        {
          if (v182 == 1 && v61 == v179)
            goto LABEL_46;
        }
        else if (v61)
        {
          if (v157)
            goto LABEL_46;
        }
        else if (v155)
        {
          goto LABEL_46;
        }
      }
    }
    while ((_BYTE)v182 || (_DWORD)v61 != (_DWORD)v179);
LABEL_46:
    v189 = v49;
    v184 = v33;
    v185 = v48;
    swift_bridgeObjectRetain();
    v62 = v59;
    v63 = v183;
    sub_23B157264(v58, v62, (uint64_t)v210, (uint64_t)&v206);
    v33 = *((_QWORD *)&v206 + 1);
    v64 = (void (*)(_QWORD, _QWORD, _QWORD))v206;
    v65 = HIDWORD(v207);
    swift_bridgeObjectRelease();
    if (*v172 == -1)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
      goto LABEL_123;
    }
    ++*v172;
    v66 = objc_sync_enter(v63);
    if ((_DWORD)v66)
    {
      MEMORY[0x24BDAC7A8](v66);
      v151 = (void (**)(_QWORD, _QWORD, _QWORD))v63;
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ABD7708, (uint64_t)&v150, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
    }
    v67 = (char *)*((_QWORD *)v63 + 20);
    swift_retain();
    v68 = objc_sync_exit(v63);
    a1 = sub_23B1944AC;
    if ((_DWORD)v68)
    {
      MEMORY[0x24BDAC7A8](v68);
      v151 = (void (**)(_QWORD, _QWORD, _QWORD))v63;
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ABD7710, (uint64_t)&v150, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
    }
    v69 = (void (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for VFSFileTree(0);
    v70 = MEMORY[0x23B8615C4](v171);
    v188 = v153;
    v34 = *((unsigned int *)v67 + 4);
    v71 = (void (**)(char *, uint64_t))MEMORY[0x24BDAC7A8](v70);
    v153[-12] = v69;
    v153[-11] = (void (*)(_QWORD, _QWORD, _QWORD))v67;
    v186 = v67;
    v187 = v71;
    v153[-10] = (void (*)(_QWORD, _QWORD, _QWORD))v71;
    v153[-9] = v72;
    LOBYTE(v153[-8]) = 2;
    v153[-7] = (void (*)(_QWORD, _QWORD, _QWORD))1;
    LOBYTE(v153[-6]) = 1;
    v153[-5] = v64;
    HIDWORD(v150) = v65;
    MEMORY[0x24BDAC7A8](v71);
    LODWORD(v150) = v34;
    *(_QWORD *)((char *)&v150 + 4) = 2129920;
    v151 = (void (**)(_QWORD, _QWORD, _QWORD))sub_23B1944AC;
    v152 = &v153[-14];
    v74 = v169;
    v73 = (uint64_t)v170;
    *v169 = 0;
    v74[1] = 0;
    v75 = v206;
    v191 = v206;
    v76 = v207;
    v77 = HIDWORD(v207);
    *(_QWORD *)&v192 = v207;
    sub_23AA724E8(v73, (uint64_t)v209, qword_2542E72C8);
    v78 = sub_23AA724E8((uint64_t)v209, (uint64_t)v211, qword_2542E72C8);
    if (v211[1])
      break;
    *((_QWORD *)&v192 + 1) = 0;
    a1 = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v177;
    v86 = v178;
    v87 = (uint64_t)v164;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v177 + 56))(v164, 1, 1, v178);
    v199 = v75;
    v200 = __PAIR64__(v77, v76);
    v88 = v156;
    *v156 = 0;
    v88[1] = 0;
    v89 = v87;
    v49 = v189;
    sub_23B0E1EBC((uint64_t)&v199, v34, 2129920, 0, v87, (uint64_t)sub_23B1944AC, (uint64_t)&v153[-14]);
    if (v49)
    {
      sub_23AA8A05C(v87, qword_2542E5250);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_111;
    }
    v90 = v87;
    v91 = v163;
    sub_23AA8EFC8(v90, v163, qword_2542E5250);
    v92 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))a1 + 6))(v91, 1, v86);
    v36 = v168;
    if (v92 == 1)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
    }
    v93 = v91;
    v94 = v176;
    sub_23AA724E8(v93, v176, &qword_2542E72C0);
    sub_23AA8A05C(v89, qword_2542E5250);
    swift_release();
    swift_unknownObjectRelease();
    v95 = (uint64_t)v175;
    v96 = v173;
LABEL_63:
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v94, 1, v174) == 1)
    {
      sub_23AA8A05C(v94, &qword_2542E72C0);
    }
    else
    {
      sub_23AA94050(v94, v95, type metadata accessor for VFSItem);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E68E0);
      v98 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
      v99 = swift_allocObject();
      *(_OWORD *)(v99 + 16) = v162;
      sub_23AA907B0(v95, v99 + v98, type metadata accessor for VFSItem);
      LOBYTE(v98) = v165(v99);
      swift_bridgeObjectRelease();
      if ((v98 & 1) != 0)
      {
        v154(0, 0);
        sub_23AA937BC(v95, type metadata accessor for VFSItem);
        goto LABEL_101;
      }
      sub_23AA937BC(v95, type metadata accessor for VFSItem);
    }
    v33 = v184;
    v48 = v185;
  }
  MEMORY[0x24BDAC7A8](v78);
  *(_QWORD *)&v150 = &v191;
  *((_QWORD *)&v150 + 1) = sub_23B1A0238;
  v151 = &v153[-6];
  v49 = v189;
  v81 = (uint64_t)v167;
  v83 = v177;
  v82 = v178;
  if ((v80 & 0x1000000000000000) != 0)
    goto LABEL_70;
  if ((v80 & 0x2000000000000000) == 0)
  {
    if ((v79 & 0x1000000000000000) != 0)
    {
      v84 = (v80 & 0xFFFFFFFFFFFFFFFLL) + 32;
      *((_QWORD *)&v192 + 1) = v84;
      v81 = (uint64_t)v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v177 + 56))(v161, 1, 1, v178);
      v199 = v191;
      v200 = v192;
      v201 = (_QWORD *)v84;
      v202 = v193;
      sub_23B0E1EBC((uint64_t)&v199, v34, 2129920, 0, v81, (uint64_t)sub_23B1944AC, (uint64_t)&v153[-14]);
      if (v49)
        goto LABEL_80;
      v85 = v159;
      a1 = (void (*)(uint64_t@<X0>, uint64_t@<X8>))qword_2542E5250;
      sub_23AA8EFC8(v81, v159, qword_2542E5250);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v85, 1, v82) == 1)
        goto LABEL_126;
LABEL_61:
      v97 = v85;
      v94 = v176;
      sub_23AA724E8(v97, v176, &qword_2542E72C0);
      sub_23AA8A05C(v81, qword_2542E5250);
LABEL_62:
      swift_release();
      swift_unknownObjectRelease();
      sub_23AC03E50((uint64_t)&v206);
      v95 = (uint64_t)v175;
      v96 = v173;
      v36 = v168;
      goto LABEL_63;
    }
LABEL_70:
    v94 = v176;
    sub_23B1C6EF0();
    if (v49)
      goto LABEL_81;
    goto LABEL_62;
  }
  v190[0] = v79;
  v190[1] = v80 & 0xFFFFFFFFFFFFFFLL;
  *((_QWORD *)&v192 + 1) = v190;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v177 + 56))(v167, 1, 1, v178);
  v199 = v191;
  v200 = v192;
  v201 = v190;
  v202 = v193;
  sub_23B0E1EBC((uint64_t)&v199, v34, 2129920, 0, v81, (uint64_t)sub_23B1944AC, (uint64_t)&v153[-14]);
  if (!v49)
  {
    v85 = v160;
    a1 = (void (*)(uint64_t@<X0>, uint64_t@<X8>))qword_2542E5250;
    sub_23AA8EFC8(v81, v160, qword_2542E5250);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v85, 1, v82) == 1)
      goto LABEL_125;
    goto LABEL_61;
  }
LABEL_80:
  sub_23AA8A05C(v81, qword_2542E5250);
LABEL_81:
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_23AC03E50((uint64_t)&v206);
LABEL_111:
  v138 = v49;
  LODWORD(v191) = sub_23B1C5534();
  sub_23AB6CD48();
  v139 = sub_23B1C575C();

  if ((v139 & 1) != 0)
  {

    v154(0, 0);
  }
  else
  {
    v140 = v49;
    LODWORD(v191) = sub_23B1C551C();
    v141 = sub_23B1C575C();

    if ((v141 & 1) != 0)
    {

      sub_23B1A09B8((uint64_t)&v191);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      v49 = (char *)swift_allocError();
      sub_23AA724E8((uint64_t)&v191, v142, (uint64_t *)&unk_2542E0950);
      v154((uint64_t)v49, 1);
    }
    else
    {
      v143 = v49;
      LODWORD(v191) = sub_23B1C54F8();
      v144 = sub_23B1C575C();

      if ((v144 & 1) != 0)
      {
        *(_QWORD *)&v191 = v179;
        BYTE8(v191) = v182;
        v192 = 0u;
        v193 = 0u;
        v194 = 0u;
        v195 = 0u;
        v196 = 0u;
        v197 = 0u;
        v198 = v49;
        sub_23AAFC630((uint64_t)&v191);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        v145 = swift_allocError();
        sub_23AA724E8((uint64_t)&v191, v146, (uint64_t *)&unk_2542E0950);
        v147 = v49;
        v154(v145, 1);
        v148 = (void *)v145;
      }
      else
      {
        v149 = v49;
        v154((uint64_t)v49, 1);
        v148 = v49;
      }

    }
  }
}

void sub_23B15BFB4(uint64_t a1, _BYTE *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  void *v7;

  v7 = (void *)MEMORY[0x23B8601A8]();
  sub_23B15C030(a2, a1, a3);
  objc_autoreleasePoolPop(v7);
  if (v3)
    __break(1u);
}

uint64_t sub_23B15C030(_BYTE *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  char *v14;
  char v15;
  uint64_t (*v16)(uint64_t);
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);

  v6 = type metadata accessor for VFSItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    v21 = a3;
    v11 = *(_QWORD *)a2;
    v12 = *(unsigned __int8 *)(a2 + 8);
    sub_23AA907B0(a2, (uint64_t)v10, type metadata accessor for VFSItem);
    if (v12 == 2 && v11 == 1)
    {
      return sub_23AA937BC((uint64_t)v10, type metadata accessor for VFSItem);
    }
    else
    {
      v14 = &v10[*(int *)(v6 + 28)];
      v15 = v14[*(int *)(type metadata accessor for ItemMetadata() + 72)];
      result = sub_23AA937BC((uint64_t)v10, type metadata accessor for VFSItem);
      v16 = v21;
      if ((v15 & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E68E0);
        v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_23B1CA760;
        sub_23AA907B0(a2, v18 + v17, type metadata accessor for VFSItem);
        v19 = v16(v18);
        result = swift_bridgeObjectRelease();
        if ((v19 & 1) != 0)
          *a1 = 1;
      }
    }
  }
  return result;
}

uint64_t sub_23B15C1A8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, char *a6@<X8>)
{
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[5];
  _OWORD v60[6];

  v49 = a4;
  v47 = a3;
  v51 = (char *)a1;
  v52 = a6;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23B1C5A08();
  v11 = *(_QWORD *)(v50 - 8);
  v12 = MEMORY[0x24BDAC7A8](v50);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v45 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for VFSItem(0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v60, 0, sizeof(v60));
  sub_23B157264((uint64_t)v51, a2, (uint64_t)v60, (uint64_t)v59);
  sub_23AC03E50((uint64_t)v59);
  sub_23B157BAC(v59[0], 0, a5, (uint64_t)v19);
  v46 = v6;
  v24 = (uint64_t)v23;
  v51 = v16;
  v25 = v11;
  v26 = v50;
  v27 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    v28 = &qword_2542E72C0;
LABEL_10:
    sub_23AA8A05C((uint64_t)v19, v28);
    goto LABEL_11;
  }
  v29 = v24;
  sub_23AA94050((uint64_t)v19, v24, type metadata accessor for VFSItem);
  if ((a5 & 1) != 0
    || (v30 = v24 + *(int *)(v20 + 28), *(_BYTE *)(v30 + *(int *)(type metadata accessor for ItemMetadata() + 64)) != 1))
  {
    v31 = v46;
    v32 = (void *)swift_retain();
    if (objc_sync_enter(v32))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v31);
    swift_retain();
    v33 = objc_sync_exit(v31);
    v34 = v49;
    if (v33)
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v31);
    v35 = v26;
    swift_release();
    v36 = v48;
    sub_23AC380C8(v48);
    v19 = v36;
    swift_release();
    v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v36, 1, v26);
    v38 = (uint64_t)v51;
    if (v37 != 1)
    {
      v41 = v14;
      v42 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      v42(v51, v19, v35);
      v57 = v47;
      v58 = v34;
      v55 = 47;
      v56 = 0xE100000000000000;
      v53 = 58;
      v54 = 0xE100000000000000;
      sub_23AAA420C();
      sub_23B1C6CF8();
      sub_23B1C5978();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v38, v35);
      v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2370);
      v44 = (uint64_t)&v27[*(int *)(v43 + 48)];
      v42(v27, v41, v35);
      sub_23AA94050(v29, v44, type metadata accessor for VFSItem);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v27, 0, 1, v43);
    }
    sub_23AA937BC(v29, type metadata accessor for VFSItem);
    v28 = (uint64_t *)&unk_2542E6740;
    goto LABEL_10;
  }
  sub_23AA937BC(v24, type metadata accessor for VFSItem);
LABEL_11:
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2370);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v27, 1, 1, v39);
}

uint64_t sub_23B15C65C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  void *v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char *v47;
  id v48;
  char *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(uint64_t *);
  uint64_t *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, char *, uint64_t);
  uint64_t (**v79)(void *, char);
  _QWORD v80[2];
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  void (*v97)(uint64_t *);
  uint64_t v98;
  uint64_t v99;
  char v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;

  v90 = a5;
  v89 = a4;
  v97 = a2;
  v98 = a3;
  v96 = (uint64_t *)a1;
  v5 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_23B1C5474();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v84 = (char *)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_23B1C5A08();
  v92 = *(_QWORD *)(v88 - 8);
  v11 = *(_QWORD *)(v92 + 64);
  v12 = MEMORY[0x24BDAC7A8](v88);
  v83 = (char *)v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v81 = (char *)v80 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v91 = (char *)v80 - v15;
  v16 = type metadata accessor for VFSItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v95 = (uint64_t)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_23B1C5E4C();
  v93 = *(_QWORD *)(v94 - 8);
  v19 = MEMORY[0x24BDAC7A8](v94);
  v82 = (char *)v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v80 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F00);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (_QWORD *)((char *)v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (void **)((char *)v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8((uint64_t)v96, (uint64_t)v28, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = *v28;
    *v25 = (uint64_t)*v28;
    swift_storeEnumTagMultiPayload();
    v30 = v29;
    v97(v25);

    return sub_23AA8A05C((uint64_t)v25, &qword_2569E8F00);
  }
  v80[1] = v23;
  v96 = v25;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48))(v28, 1, v16) == 1)
  {
    v31 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v32 = sub_23B1C5E40();
    v33 = sub_23B1C6AA0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v99 = v35;
      *(_DWORD *)v34 = 136315138;
      v36 = v89;
      v37 = v90;
      v38 = sub_23AA96F18(v89, v90);
      v108 = sub_23AABEC68(v38, v39, &v99);
      sub_23B1C6CBC();
      v40 = v36;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v32, v33, "⚔️  Item %s not found, can not update conflict losers for this item...", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v35, -1, -1);
      MEMORY[0x23B8614BC](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v93 + 8))(v22, v94);
      v41 = v97;
      v25 = v96;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v93 + 8))(v22, v94);
      v41 = v97;
      v25 = v96;
      v37 = v90;
      v40 = v89;
    }
    v99 = v40;
    v100 = v37;
    v101 = 0u;
    v102 = 0u;
    v103 = 0u;
    v104 = 0u;
    v105 = 0u;
    v106 = 0u;
    v107 = 0;
    sub_23AAFC630((uint64_t)&v99);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v62 = swift_allocError();
    sub_23AA724E8((uint64_t)&v99, v63, (uint64_t *)&unk_2542E0950);
    *v25 = v62;
    swift_storeEnumTagMultiPayload();
    v41(v25);
    return sub_23AA8A05C((uint64_t)v25, &qword_2569E8F00);
  }
  v42 = v95;
  sub_23AA94050((uint64_t)v28, v95, type metadata accessor for VFSItem);
  if (qword_2569E12C8 != -1)
    swift_once();
  v43 = qword_256A079B0;
  sub_23AC380C8(v10);
  v44 = v92;
  v45 = v88;
  v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48))(v10, 1, v88);
  v47 = v91;
  if (v46 == 1)
  {
    sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6740);
    v48 = (id)fpfs_current_or_default_log();
    v49 = v82;
    sub_23B1C5E58();
    v50 = sub_23B1C5E40();
    v51 = sub_23B1C6AA0();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v99 = v53;
      *(_DWORD *)v52 = 136315138;
      v54 = sub_23AA96F18(v89, v90);
      v108 = sub_23AABEC68(v54, v55, &v99);
      v42 = v95;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v50, v51, "⚔️  Impossible to fetch URL for Item %s, can not update conflict losers for this item...", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v53, -1, -1);
      MEMORY[0x23B8614BC](v52, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v93 + 8))(v49, v94);
    v56 = v97;
    v57 = v96;
    sub_23B1C536C();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    v58 = v84;
    v59 = v87;
    sub_23B1C5864();
    v60 = sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v59);
    *v57 = v60;
    swift_storeEnumTagMultiPayload();
    v56(v57);
    sub_23AA8A05C((uint64_t)v57, &qword_2569E8F00);
    v61 = v42;
  }
  else
  {
    v96 = (uint64_t *)v43;
    v65 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
    v65(v91, v10, v45);
    v66 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
    v67 = v81;
    v66(v81, v47, v45);
    v68 = *(unsigned __int8 *)(v44 + 80);
    v94 = ~v68;
    v69 = swift_allocObject();
    v70 = v98;
    *(_QWORD *)(v69 + 16) = v97;
    *(_QWORD *)(v69 + 24) = v70;
    v97 = (void (*)(uint64_t *))v65;
    v65((char *)(v69 + ((v68 + 32) & ~v68)), v67, v45);
    v71 = qword_2569E12D0;
    swift_retain();
    if (v71 != -1)
      swift_once();
    v98 = qword_2569E6F80;
    v72 = (id)fpfs_current_log();
    v73 = v83;
    v74 = v91;
    v66(v83, v91, v45);
    v75 = (v68 + 24) & v94;
    v76 = v45;
    v77 = swift_allocObject();
    v78 = (void (*)(uint64_t, char *, uint64_t))v97;
    *(_QWORD *)(v77 + 16) = v96;
    v78(v77 + v75, v73, v76);
    v79 = (uint64_t (**)(void *, char))(v77 + ((v11 + v75 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v79 = sub_23B1A04E8;
    v79[1] = (uint64_t (*)(void *, char))v69;
    swift_retain();
    swift_retain();
    sub_23AA814FC(v72, (uint64_t)"listConflicts(for:completionHandler:)", 37, 2, (uint64_t)sub_23AF04290, v77);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v92 + 8))(v74, v76);
    v61 = v95;
  }
  return sub_23AA937BC(v61, type metadata accessor for VFSItem);
}

uint64_t sub_23B15D060(void *a1, char a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F00);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) != 0)
  {
    *v11 = a1;
    swift_storeEnumTagMultiPayload();
    v14 = a1;
  }
  else
  {
    v12 = (char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F08) + 48);
    *v11 = a1;
    v13 = sub_23B1C5A08();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a5, v13);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  a3(v11);
  return sub_23AA8A05C((uint64_t)v11, &qword_2569E8F00);
}

uint64_t sub_23B15D170(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v22;

  v6 = v5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(v6 + 216);
  v16 = *(_QWORD *)(v6 + 224);
  v17 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 1, 1, v17);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v6;
  *(_QWORD *)(v18 + 24) = a1;
  *(_BYTE *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = a4;
  *(_QWORD *)(v18 + 48) = a5;
  *(_QWORD *)(v18 + 56) = a3;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = v16;
  swift_retain_n();
  v20 = v15;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23AA9086C(v20, (uint64_t)v14, (void (*)())sub_23B1A03D4, v19, (uint64_t)sub_23B1A03BC, v18);

  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v14, &qword_2542DD460);
}

uint64_t sub_23B15D2E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  *(_QWORD *)(v12 + 32) = a2;
  *(_BYTE *)(v12 + 40) = a3;
  *(_QWORD *)(v12 + 48) = a6;
  *(_QWORD *)(v12 + 56) = a1;
  memset(v15, 0, sizeof(v15));
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B1A042C;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = a2;
  *(_BYTE *)(v13 + 40) = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23AA7BAC4(a2, a3, (uint64_t)v15, 0, 0, (uint64_t)sub_23B1A0464, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_23B15D3E8(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int EnumCaseMultiPayload;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  unint64_t v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 *v52;
  unint64_t v53;
  __int128 v54;
  __int128 v55;
  id v56;
  char v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  void (*v85)(_QWORD *);
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;

  v82 = a7;
  v86 = a6;
  v79 = a5;
  v78 = a4;
  v85 = a2;
  v9 = sub_23B1C5E4C();
  v80 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v84 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5A08();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8D38);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char **)((char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F00);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v20, &qword_2569E8F00);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v22 = *(_QWORD **)v20;
  if (EnumCaseMultiPayload == 1)
  {
    *v17 = v22;
    swift_storeEnumTagMultiPayload();
    v23 = v22;
    v85(v17);

    return sub_23AA8A05C((uint64_t)v17, &qword_2569E8D38);
  }
  else
  {
    v87 = v15;
    v83 = v17;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F08);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, &v20[*(int *)(v25 + 48)], v11);
    v26 = (id)fpfs_current_or_default_log();
    v27 = v84;
    sub_23B1C5E58();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v28 = sub_23B1C5E40();
    v29 = sub_23B1C6A88();
    v30 = os_log_type_enabled(v28, v29);
    v88 = v22;
    v77 = a3;
    v76 = v12;
    v75 = v14;
    if (v30)
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      *(_QWORD *)&v90 = v32;
      *(_DWORD *)v31 = 136315650;
      v33 = sub_23AA96F18(v78, v79);
      v89 = sub_23AABEC68(v33, v34, (uint64_t *)&v90);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      v35 = sub_23B1C6218();
      v37 = v36;
      swift_bridgeObjectRelease();
      v89 = sub_23AABEC68(v35, v37, (uint64_t *)&v90);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2080;
      v38 = v29;
      v39 = v86;
      swift_bridgeObjectRetain();
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75E0);
      v41 = MEMORY[0x23B85F02C](v39, v40);
      v43 = v42;
      swift_bridgeObjectRelease();
      v44 = v41;
      v22 = v88;
      v89 = sub_23AABEC68(v44, v43, (uint64_t *)&v90);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v28, v38, "⚔️  conflicts for %s: existing - %s new %s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v32, -1, -1);
      MEMORY[0x23B8614BC](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v84, v81);
    }
    else
    {

      v39 = v86;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v27, v81);
    }
    v45 = v83;
    v81 = v11;
    v46 = *(void **)(v82 + qword_2542E6A48);
    v47 = *(_QWORD *)(v39 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = v46;
    v48 = (void *)result;
    if (v47)
    {
      v49 = 0;
      v50 = v39 + 32;
      v80 = v47 - 1;
      v84 = (char *)MEMORY[0x24BEE4AF8];
      v82 = v39 + 32;
      do
      {
        if (v49 <= v47)
          v51 = v47;
        else
          v51 = v49;
        v52 = (__int128 *)(v50 + (v49 << 6));
        v53 = v49;
        while (1)
        {
          if (v51 == v53)
          {
            __break(1u);
            return result;
          }
          v54 = v52[1];
          v90 = *v52;
          v91 = v54;
          v55 = v52[3];
          v92 = v52[2];
          v93 = v55;
          v49 = v53 + 1;
          sub_23AC244C0((uint64_t *)&v90);
          v56 = v48;
          sub_23AC244C0((uint64_t *)&v90);
          v57 = sub_23B192294((uint64_t)v22, &v90, (uint64_t)v46);

          sub_23AAA5CC8((uint64_t *)&v90);
          if ((v57 & 1) == 0)
            break;
          result = (uint64_t)sub_23AAA5CC8((uint64_t *)&v90);
          v52 += 4;
          ++v53;
          v22 = v88;
          if (v47 == v49)
          {
            v45 = v83;
            goto LABEL_23;
          }
        }
        v58 = v84;
        result = swift_isUniquelyReferenced_nonNull_native();
        v89 = (uint64_t)v58;
        if ((result & 1) == 0)
        {
          result = sub_23ADACC90(0, *((_QWORD *)v58 + 2) + 1, 1);
          v58 = (char *)v89;
        }
        v45 = v83;
        v60 = *((_QWORD *)v58 + 2);
        v59 = *((_QWORD *)v58 + 3);
        if (v60 >= v59 >> 1)
        {
          result = sub_23ADACC90(v59 > 1, v60 + 1, 1);
          v58 = (char *)v89;
        }
        *((_QWORD *)v58 + 2) = v60 + 1;
        v84 = v58;
        v61 = &v58[64 * v60];
        v62 = v90;
        v63 = v91;
        v64 = v93;
        *((_OWORD *)v61 + 4) = v92;
        *((_OWORD *)v61 + 5) = v64;
        *((_OWORD *)v61 + 2) = v62;
        *((_OWORD *)v61 + 3) = v63;
        v22 = v88;
        v50 = v82;
      }
      while (v80 != v53);
    }
    else
    {
      v84 = (char *)MEMORY[0x24BEE4AF8];
    }
LABEL_23:
    v65 = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66 = v48;
    v67 = sub_23B1959F0((uint64_t)v22, v65, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v68 = (char *)v45 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E8D40) + 80);
    v69 = v22[2];
    swift_bridgeObjectRelease();
    v70 = v84;
    *v45 = v69;
    v45[1] = v70;
    v45[2] = v67;
    v71 = v76;
    v72 = v68;
    v73 = v75;
    v74 = v81;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v72, v75, v81);
    swift_storeEnumTagMultiPayload();
    v85(v45);
    sub_23AA8A05C((uint64_t)v45, &qword_2569E8D38);
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v73, v74);
  }
}

uint64_t sub_23B15DAEC(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v23;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v5 + 216;
  v15 = *(void **)(v5 + 216);
  v14 = *(_QWORD *)(v16 + 8);
  v17 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a5;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_BYTE *)(v19 + 24) = a2;
  *(_DWORD *)(v19 + 28) = a3;
  *(_QWORD *)(v19 + 32) = a4;
  *(_QWORD *)(v19 + 40) = a5;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = sub_23AA956C8;
  v20[3] = v18;
  v20[4] = v14;
  swift_retain_n();
  v21 = v15;
  swift_retain();
  swift_retain();
  sub_23AA9086C(v21, (uint64_t)v13, sub_23AC279F4, v20, (uint64_t)sub_23B1A0370, v19);

  swift_release();
  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v13, &qword_2542DD460);
}

uint64_t sub_23B15DC80(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(_QWORD), void *a5)
{
  uint64_t inited;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
    return a4(0);
  type metadata accessor for GSRemoteVersionsManager();
  inited = swift_initStackObject();
  v11 = objc_msgSend(objc_allocWithZone((Class)FPGSStorageManager), sel_init);
  *(_QWORD *)(inited + 16) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55F0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_23B1D2330;
  *(_QWORD *)(v12 + 32) = sub_23B1C63E0();
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = sub_23B1C63E0();
  *(_QWORD *)(v12 + 56) = v14;
  sub_23ADA6014(a1, a3, v12, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_23B15DD88(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v22;
  id v23;

  HIDWORD(v22) = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v6 + 224);
  v23 = *(id *)(v6 + 216);
  v16 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a5;
  *(_QWORD *)(v17 + 24) = a6;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_BYTE *)(v18 + 24) = a2;
  *(_DWORD *)(v18 + 28) = HIDWORD(v22);
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = v6;
  *(_QWORD *)(v18 + 48) = a5;
  *(_QWORD *)(v18 + 56) = a6;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = sub_23AAB5414;
  v19[3] = v17;
  v19[4] = v15;
  swift_retain_n();
  v20 = v23;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA9086C(v20, (uint64_t)v14, (void (*)())sub_23B1A1F70, v19, (uint64_t)sub_23B1A0330, v18);

  swift_release();
  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v14, &qword_2542DD460);
}

uint64_t sub_23B15DF44(uint64_t a1, unsigned __int8 a2, unint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(_QWORD, _QWORD), uint64_t a7)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t i;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD);
  unint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  _QWORD v59[2];
  unint64_t v60;
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD);
  uint64_t v63;
  __int128 v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v13 = a2;
  v14 = sub_23B1C5E4C();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v13)
    return ((uint64_t (*)(_QWORD, _QWORD))a6)(0, 0);
  v68 = v15;
  v69 = v18;
  v67 = v16;
  if (qword_2569E12C8 != -1)
    goto LABEL_40;
LABEL_4:
  v20 = *(_QWORD *)(qword_256A079B0 + 16);
  sub_23B1C63E0();
  swift_retain();
  v21 = a1;
  a1 = 0;
  v22 = (unint64_t)sub_23ADA5F2C(v21, a3);
  result = swift_bridgeObjectRelease();
  v79 = MEMORY[0x24BEE4AF8];
  v80 = MEMORY[0x24BEE4AF8];
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_23B1C7088();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v62 = a6;
  v61 = a7;
  v60 = a4;
  v59[1] = v20;
  if (!v23)
  {
    swift_bridgeObjectRelease();
    v72 = MEMORY[0x24BEE4AF8];
    v27 = *(_QWORD *)(a4 + 16);
    if (!v27)
      goto LABEL_37;
    goto LABEL_17;
  }
  if (v23 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v23; ++i)
  {
    if ((v22 & 0xC000000000000001) != 0)
      v25 = (id)MEMORY[0x23B85F860](i, v22);
    else
      v25 = *(id *)(v22 + 8 * i + 32);
    v26 = v25;
    if (objc_msgSend(v25, sel_isSavedConflictResolved))
    {
      sub_23B1C6F98();
      sub_23B1C6FC8();
      sub_23B1C6FD4();
      sub_23B1C6FA4();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v72 = v79;
  a6 = v62;
  a4 = v60;
  v27 = *(_QWORD *)(v60 + 16);
  if (v27)
  {
LABEL_17:
    v28 = (void *)objc_opt_self();
    v70 = *(_QWORD *)(a5 + qword_2542E6A48);
    v71 = v28;
    swift_bridgeObjectRetain();
    v29 = (uint64_t *)(a4 + 48);
    *(_QWORD *)&v30 = 136315138;
    v64 = v30;
    v63 = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      v76 = v27;
      v31 = *(v29 - 2);
      a4 = *(v29 - 1);
      v33 = *v29;
      v32 = v29[1];
      v35 = v29[2];
      v34 = v29[3];
      a5 = v29[5];
      sub_23AAAE668(v31, a4);
      v75 = v33;
      a7 = v31;
      swift_bridgeObjectRetain();
      sub_23AAAE668(v32, v35);
      swift_bridgeObjectRetain();
      v74 = v34;
      swift_bridgeObjectRetain();
      sub_23AAAE668(v31, a4);
      sub_23AAAE668(v32, v35);
      swift_bridgeObjectRetain();
      v36 = (void *)sub_23B1C5AA4();
      v77 = v35;
      v78 = v32;
      v37 = (void *)sub_23B1C5AA4();
      if (a5)
      {
        v38 = (void *)sub_23B1C63BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v38 = 0;
      }
      v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v36, v37, v38);
      sub_23AAAE53C(v78, v77);
      sub_23AAAE53C(v31, a4);

      v40 = v39;
      v41 = objc_msgSend(v71, sel_etagForVersion_providerDomainID_, v40, v70);
      v42 = sub_23B1C63E0();
      a6 = v43;

      swift_bridgeObjectRetain();
      v44 = swift_retain();
      a3 = sub_23B192E50(v44, v42, (uint64_t)a6);
      swift_release();
      swift_bridgeObjectRelease();
      if (a3 >> 62)
      {
        if (!sub_23B1C7088())
        {
LABEL_30:
          swift_bridgeObjectRelease();
          v58 = (id)swift_bridgeObjectRelease();
          goto LABEL_31;
        }
      }
      else if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_30;
      }
      if ((a3 & 0xC000000000000001) != 0)
      {
        MEMORY[0x23B85F860](0, a3);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        if (!v45)
        {
          __break(1u);
LABEL_40:
          swift_once();
          goto LABEL_4;
        }
      }
      v73 = a1;
      v46 = (id)fpfs_current_or_default_log();
      v47 = v69;
      sub_23B1C5E58();
      swift_bridgeObjectRetain();
      v48 = sub_23B1C5E40();
      v49 = sub_23B1C6A94();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc();
        v66 = a7;
        v51 = v50;
        v52 = swift_slowAlloc();
        v65 = v40;
        v53 = a4;
        v54 = v42;
        v55 = v52;
        v79 = v52;
        *(_DWORD *)v51 = v64;
        swift_bridgeObjectRetain();
        v56 = v54;
        a4 = v53;
        v40 = v65;
        *(_QWORD *)(v51 + 4) = sub_23AABEC68(v56, (unint64_t)a6, &v79);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23AA66000, v48, v49, "⚔️  marking loser %s as resolved", (uint8_t *)v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v55, -1, -1);
        v57 = v51;
        a7 = v66;
        MEMORY[0x23B8614BC](v57, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v68);
      v58 = objc_msgSend(v40, sel_setConflictResolved_, 1);
      a1 = v73;
LABEL_31:
      MEMORY[0x23B85F008](v58);
      if (*(_QWORD *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23B1C6740();
      v29 += 8;
      sub_23B1C6788();
      sub_23B1C671C();

      sub_23AAAE53C(a7, a4);
      swift_bridgeObjectRelease();
      sub_23AAAE53C(v78, v77);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = v76 - 1;
      if (v76 == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        v62(v80, 0);
        goto LABEL_38;
      }
    }
  }
LABEL_37:
  swift_release();
  a6(MEMORY[0x24BEE4AF8], 0);
LABEL_38:
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23B15E66C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_23B193EB8(a1, a2, a5, a8, a9, a10);
}

uint64_t sub_23B15E67C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, void *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v30;
  int v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(uint64_t *);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  void *v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t *);
  uint64_t v99;
  unint64_t v100;
  char v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _QWORD v106[6];
  _QWORD v107[12];
  _OWORD v108[4];
  __int128 v109;
  __int128 v110;
  _OWORD v111[7];

  v97 = a7;
  v98 = a2;
  v99 = a3;
  sub_23AA724E8(a1, (uint64_t)v107, (uint64_t *)&unk_2542E4948);
  v94 = v107[1];
  v95 = (id)v107[0];
  v92 = (void *)v107[3];
  v93 = v107[2];
  v90 = v107[5];
  v91 = (void (*)(char *, uint64_t))v107[4];
  v88 = v107[7];
  v89 = v107[6];
  v86 = v107[9];
  v87 = v107[8];
  v84 = v107[11];
  v85 = v107[10];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v11);
  v79 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F28);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = sub_23B1C5A08();
  v81 = *(_QWORD *)(v83 - 8);
  v16 = MEMORY[0x24BDAC7A8](v83);
  v80 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v82 = (char *)&v75 - v18;
  v78 = type metadata accessor for VFSItem(0);
  v75 = *(_QWORD *)(v78 - 8);
  v19 = *(_QWORD *)(v75 + 64);
  v20 = MEMORY[0x24BDAC7A8](v78);
  v76 = (uint64_t)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v77 = (uint64_t)&v75 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v75 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v96 = (uint64_t)&v75 - v26;
  sub_23AA724E8(a1, (uint64_t)v108, (uint64_t *)&unk_2542E4948);
  if (!(_QWORD)v109)
  {
    v100 = a4;
    v101 = a5;
    *(_QWORD *)&v102 = v95;
    *((_QWORD *)&v102 + 1) = v94;
    *(_QWORD *)&v103 = v93;
    *((_QWORD *)&v103 + 1) = v92;
    *(_QWORD *)&v104 = v91;
    *((_QWORD *)&v104 + 1) = v90;
    *(_QWORD *)&v105 = v89;
    *((_QWORD *)&v105 + 1) = v88;
    v106[0] = v87;
    v106[1] = v86;
    v106[2] = v85;
    v106[3] = v84;
    v106[4] = 0;
    sub_23AAFC630((uint64_t)&v100);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v27 = swift_allocError();
    sub_23AA724E8((uint64_t)&v100, v28, (uint64_t *)&unk_2542E0950);
    *v15 = v27;
    swift_storeEnumTagMultiPayload();
    v98(v15);
    return sub_23AA8A05C((uint64_t)v15, &qword_2569E8F28);
  }
  v95 = v13;
  v111[2] = v108[2];
  v111[3] = v108[3];
  v111[4] = v109;
  v111[5] = v110;
  v111[0] = v108[0];
  v111[1] = v108[1];
  sub_23B164364(a4, a5, (uint64_t)v111, 8, v97, (uint64_t)v25);
  v94 = a4;
  LODWORD(v93) = a5;
  sub_23AA907B0((uint64_t)v25, v96, type metadata accessor for VFSItem);
  v30 = (void *)swift_retain();
  if (objc_sync_enter(v30))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a6);
  swift_retain();
  v31 = objc_sync_exit(a6);
  v32 = v80;
  if (v31)
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a6);
  v92 = a6;
  swift_release();
  v33 = v79;
  sub_23AC380C8(v79);
  swift_release();
  v34 = v81;
  v35 = v83;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v33, 1, v83) == 1)
  {
    sub_23AA8A05C((uint64_t)v33, (uint64_t *)&unk_2542E6740);
    v100 = v94;
    v101 = v93;
    v102 = 0u;
    v103 = 0u;
    v104 = 0u;
    v105 = 0u;
    memset(v106, 0, 40);
    sub_23AAFC630((uint64_t)&v100);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v36 = swift_allocError();
    sub_23AA724E8((uint64_t)&v100, v37, (uint64_t *)&unk_2542E0950);
    *v15 = v36;
    swift_storeEnumTagMultiPayload();
    v98(v15);
    sub_23AA8A05C((uint64_t)v15, &qword_2569E8F28);
    sub_23AA937BC((uint64_t)v25, type metadata accessor for VFSItem);
    v38 = v96;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v32, v33, v35);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v82, v32, v35);
    v39 = v32;
    v41 = *((_QWORD *)v25 + 4);
    v40 = *((_QWORD *)v25 + 5);
    swift_bridgeObjectRetain();
    sub_23AA92930(0x6F632D6863746566, 0xED0000746E65746ELL, v41, v40);
    swift_bridgeObjectRelease();
    v42 = *(void (**)(char *, uint64_t))(v34 + 8);
    v42(v39, v35);
    sub_23AA937BC((uint64_t)v25, type metadata accessor for VFSItem);
    v44 = v77;
    v43 = v78;
    v45 = *(unsigned __int8 *)(v96 + *(int *)(v78 + 28));
    sub_23AA907B0(v96, v77, type metadata accessor for VFSItem);
    v91 = v42;
    if (v45 == 1)
    {
      sub_23AA937BC(v44, type metadata accessor for VFSItem);
      v46 = v98;
    }
    else
    {
      v47 = v44 + *(int *)(v43 + 28);
      LODWORD(v47) = *(unsigned __int8 *)(v47 + *(int *)(type metadata accessor for ItemMetadata() + 80));
      sub_23AA937BC(v44, type metadata accessor for VFSItem);
      v46 = v98;
      v48 = v99;
      if ((_DWORD)v47 != 1)
      {
        v62 = (void *)objc_opt_self();
        v63 = (void *)sub_23B1C5954();
        v64 = objc_msgSend(v62, sel_readingIntentWithURL_options_, v63, 1);
        v95 = v64;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
        v65 = swift_allocObject();
        *(_OWORD *)(v65 + 16) = xmmword_23B1CE680;
        *(_QWORD *)(v65 + 32) = v64;
        v100 = v65;
        sub_23B1C671C();
        v66 = v100;
        v67 = v76;
        sub_23AA907B0(v96, v76, type metadata accessor for VFSItem);
        v68 = (*(unsigned __int8 *)(v75 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        v69 = v48;
        v70 = (v19 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
        v71 = swift_allocObject();
        *(_QWORD *)(v71 + 16) = v46;
        *(_QWORD *)(v71 + 24) = v69;
        v72 = v94;
        *(_QWORD *)(v71 + 32) = v94;
        v73 = v93;
        *(_BYTE *)(v71 + 40) = v93;
        sub_23AA94050(v67, v71 + v68, type metadata accessor for VFSItem);
        *(_QWORD *)(v71 + v70) = v92;
        *(_QWORD *)(v71 + ((v70 + 15) & 0xFFFFFFFFFFFFFFF8)) = v97;
        swift_retain();
        v74 = v95;
        swift_retain();
        sub_23B159770(v72, v73, v66, 0, (void (*)(_QWORD, _QWORD))sub_23B1A1350, v71);

        swift_bridgeObjectRelease();
        swift_release();
        v91(v82, v83);
        v38 = v96;
        return sub_23AA937BC(v38, type metadata accessor for VFSItem);
      }
    }
    v49 = *(int *)(v43 + 36);
    v50 = v96;
    v51 = (uint64_t *)(v96 + v49);
    v52 = *v51;
    v53 = *((unsigned int *)v51 + 2);
    v54 = v51[2];
    v55 = *((unsigned __int8 *)v51 + 24);
    v56 = *(_QWORD *)(v96 + 16);
    v57 = *(unsigned __int8 *)(v96 + 24);
    v58 = *(_QWORD *)(v96 + 32);
    v59 = *(_QWORD *)(v96 + 40);
    v100 = v94;
    v101 = v93;
    *(_QWORD *)&v102 = v52;
    *((_QWORD *)&v102 + 1) = v53;
    *(_QWORD *)&v103 = v54;
    *((_QWORD *)&v103 + 1) = v55;
    *(_QWORD *)&v104 = 0;
    *((_QWORD *)&v104 + 1) = v56;
    *(_QWORD *)&v105 = v57;
    *((_QWORD *)&v105 + 1) = v58;
    v106[0] = v59;
    memset(&v106[1], 0, 32);
    sub_23AAFC630((uint64_t)&v100);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v60 = swift_allocError();
    sub_23AA724E8((uint64_t)&v100, v61, (uint64_t *)&unk_2542E0950);
    *v15 = v60;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v46(v15);
    sub_23AA8A05C((uint64_t)v15, &qword_2569E8F28);
    v91(v82, v83);
    v38 = v50;
  }
  return sub_23AA937BC(v38, type metadata accessor for VFSItem);
}

uint64_t sub_23B15EFD8(uint64_t a1, void *a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, int a6, uint64_t a7, _QWORD *a8, unint64_t a9)
{
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  BOOL v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t *);
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t ObjectType;
  unint64_t v86;
  NSObject *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  unsigned int v99;
  unsigned int v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  id v106;
  char v107;
  unsigned int *v108;
  uint64_t v109;
  id v110;
  char v111;
  unint64_t v112;
  NSObject *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  id v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  void (*v145)(uint64_t *);
  _QWORD *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  unint64_t v153;
  NSObject *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  _QWORD v164[2];
  int v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  v146 = a8;
  LODWORD(v148) = a6;
  v147 = a5;
  v149 = a4;
  v169 = *MEMORY[0x24BDAC8D0];
  v12 = (int *)type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C5E4C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F28);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    v22 = a7;
    v23 = a2;
    LODWORD(v151) = sub_23B1C54F8();
    sub_23AB6CD48();
    v24 = sub_23B1C575C();

    if ((v24 & 1) != 0)
    {
      v25 = v22 + v12[9];
      v26 = *(_QWORD *)v25;
      v27 = *(unsigned int *)(v25 + 8);
      v28 = *(_QWORD *)(v25 + 16);
      v29 = *(unsigned __int8 *)(v25 + 24);
      v30 = *(_QWORD *)(v22 + 16);
      v31 = *(unsigned __int8 *)(v22 + 24);
      v32 = *(_QWORD *)(v22 + 32);
      v33 = *(_QWORD *)(v22 + 40);
      v151 = (_QWORD *)v147;
      LOBYTE(v152) = (_BYTE)v148;
      v153 = v26;
      v154 = v27;
      v155 = v28;
      v156 = v29;
      v157 = 0;
      v158 = v30;
      v159 = v31;
      v160 = v32;
      v161 = v33;
      v162 = 0uLL;
      *(_QWORD *)&v163 = 0;
      *((_QWORD *)&v163 + 1) = a2;
      sub_23AAFC630((uint64_t)&v151);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      v34 = swift_allocError();
      sub_23AA724E8((uint64_t)&v151, v35, (uint64_t *)&unk_2542E0950);
      *v21 = v34;
      swift_storeEnumTagMultiPayload();
      v36 = a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      *v21 = (uint64_t)a2;
      swift_storeEnumTagMultiPayload();
      v44 = a2;
    }
    a3(v21);
LABEL_41:
    v84 = (uint64_t)v21;
    return sub_23AA8A05C(v84, &qword_2569E8F28);
  }
  v137 = v14;
  v136 = v18;
  v138 = v16;
  v143 = (uint64_t *)((char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v142 = v19;
  v145 = a3;
  v37 = v146[17];
  v38 = a7 + v12[9];
  v39 = *(_QWORD *)v38;
  v40 = a7 + v12[14];
  v41 = *(_DWORD *)v40;
  v139 = v40;
  if (*(_BYTE *)(v40 + 4))
    v41 = 0;
  v42 = *(_DWORD *)(v38 + 8);
  v164[0] = v39;
  v164[1] = 0;
  v165 = v41;
  v166 = v42;
  v167 = 0;
  v168 = 0;
  v141 = v12;
  v43 = v12[7];
  v144 = a7;
  (*(void (**)(_QWORD **__return_ptr, _QWORD *, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, _QWORD))(*(_QWORD *)v37 + 352))(&v151, v164, a7 + v43, 0, 0, 1, (a9 >> 6) & 1, 0);
  v130 = v37;
  v132 = (uint64_t)v151;
  v134 = v152;
  v133 = v153;
  v128 = v154;
  v127 = v155;
  LODWORD(v126) = v156;
  v45 = v158;
  v125 = v157;
  LODWORD(v135) = v159;
  v129 = v160;
  LODWORD(v131) = v161;
  v46 = *(_QWORD *)(v38 + 16);
  v140 = v38;
  v47 = *(_BYTE *)(v38 + 24);
  swift_bridgeObjectRelease_n();
  v48 = v45;
  v49 = v45 == v39;
  v50 = v141;
  v51 = v15;
  v52 = v138;
  v53 = (uint64_t)v137;
  if (!v49 || (_DWORD)v135 != v42)
    goto LABEL_14;
  if ((v131 & 1) == 0)
  {
    if (v129 == v46)
      v77 = v47;
    else
      v77 = 1;
    if ((v77 & 1) == 0)
      goto LABEL_23;
LABEL_14:
    v54 = (id)fpfs_current_or_default_log();
    v55 = v136;
    sub_23B1C5E58();
    sub_23AA907B0(v144, v53, type metadata accessor for VFSItem);
    v56 = sub_23B1C5E40();
    v57 = sub_23B1C6AA0();
    v58 = v57;
    v128 = v56;
    if (os_log_type_enabled(v56, v57))
    {
      v59 = swift_slowAlloc();
      LODWORD(v127) = v58;
      v60 = v59;
      v61 = swift_slowAlloc();
      v151 = (_QWORD *)v61;
      *(_DWORD *)v60 = 136446466;
      v126 = v60 + 4;
      v62 = sub_23AC3AED8(v48, v135, v129, v131);
      v150 = sub_23AABEC68(v62, v63, (uint64_t *)&v151);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2082;
      v135 = v60 + 14;
      v64 = v53 + v50[9];
      v65 = *(_QWORD *)v64;
      v66 = *(_DWORD *)(v64 + 8);
      v131 = *(_QWORD *)(v64 + 16);
      LODWORD(v129) = *(unsigned __int8 *)(v64 + 24);
      swift_bridgeObjectRelease_n();
      v67 = sub_23AC3AED8(v65, v66, v131, v129);
      v150 = sub_23AABEC68(v67, v68, (uint64_t *)&v151);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA937BC(v53, type metadata accessor for VFSItem);
      v69 = v128;
      _os_log_impl(&dword_23AA66000, v128, (os_log_type_t)v127, "Failed to capture a stable version of item: %{public}s != %{public}s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v61, -1, -1);
      MEMORY[0x23B8614BC](v60, -1, -1);

    }
    else
    {
      sub_23AA937BC(v53, type metadata accessor for VFSItem);

    }
    v70 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v55, v51);
    v71 = v130;
    v72 = v145;
    v73 = (char)v148;
    v74 = v147;
    v75 = v140;
    v76 = v132;
    if (v132)
    {
      MEMORY[0x24BDAC7A8](v70);
      *(&v125 - 4) = v71;
      *((_DWORD *)&v125 - 6) = 0;
      *(&v125 - 2) = v76;
      sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
      *(_BYTE *)(v71 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(_QWORD *)(v71 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        MEMORY[0x23B85F548](1, ObjectType);
        swift_unknownObjectRelease();
      }
    }
    v86 = *(_QWORD *)v75;
    v87 = *(unsigned int *)(v75 + 8);
    v88 = *(_QWORD *)(v75 + 16);
    v89 = *(unsigned __int8 *)(v75 + 24);
    v90 = *(_QWORD *)(v144 + 16);
    v91 = *(unsigned __int8 *)(v144 + 24);
    v92 = *(_QWORD *)(v144 + 32);
    v93 = *(_QWORD *)(v144 + 40);
    v151 = (_QWORD *)v74;
    LOBYTE(v152) = v73;
    v153 = v86;
    v154 = v87;
    v155 = v88;
    v156 = v89;
    v157 = 0;
    v158 = v90;
    v159 = v91;
    v160 = v92;
    v161 = v93;
    v162 = 0u;
    v163 = 0u;
    sub_23AAFC630((uint64_t)&v151);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v94 = (id)swift_allocError();
    sub_23AA724E8((uint64_t)&v151, v95, (uint64_t *)&unk_2542E0950);
    swift_bridgeObjectRetain();
    swift_willThrow();
    v96 = (_QWORD *)v74;
    sub_23AAA3E18(v134, v133);
    v97 = v94;
    LODWORD(v151) = sub_23B1C5504();
    sub_23AB6CD48();
    LOBYTE(v93) = sub_23B1C575C();

    v21 = v143;
    if ((v93 & 1) != 0)
    {
      v148 = 0;

      v98 = *(_QWORD *)v75;
      if (*(_BYTE *)(v139 + 4))
        v99 = 0;
      else
        v99 = *(_DWORD *)v139;
      v140 = v75;
      v100 = *(_DWORD *)(v75 + 8);
      v96 = v146;
      v101 = (void *)swift_retain();
      if (!objc_sync_enter(v101))
      {
        v102 = v96[20];
        swift_retain();
        if (objc_sync_exit(v96))
          sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v96);
        swift_release();
        v103 = *(unsigned int *)(v102 + 16);
        v104 = swift_release();
        MEMORY[0x24BDAC7A8](v104);
        *(&v125 - 4) = (uint64_t)v96;
        *(&v125 - 3) = v74;
        v96 = (_QWORD *)v74;
        *((_BYTE *)&v125 - 16) = v73;
        LOBYTE(v150) = 1;
        v151 = (_QWORD *)v98;
        v152 = 0;
        v153 = __PAIR64__(v100, v99);
        v154 = 0;
        v155 = 0;
        v105 = v148;
        sub_23B0E3D48((uint64_t)&v151, v103, 2097153, 0, (uint64_t)&v150, (uint64_t)sub_23B19F8F4, (uint64_t)(&v125 - 6));
        if (v105)
        {
          v94 = v105;
          v72 = v145;
          v75 = v140;
LABEL_37:
          v110 = v94;
          LODWORD(v151) = sub_23B1C54F8();
          v111 = sub_23B1C575C();

          if ((v111 & 1) != 0)
          {
            v112 = *(_QWORD *)v75;
            v113 = *(unsigned int *)(v75 + 8);
            v114 = *(_QWORD *)(v75 + 16);
            v115 = *(unsigned __int8 *)(v75 + 24);
            v116 = *(_QWORD *)(v144 + 16);
            v117 = *(unsigned __int8 *)(v144 + 24);
            v118 = *(_QWORD *)(v144 + 32);
            v119 = *(_QWORD *)(v144 + 40);
            v151 = v96;
            LOBYTE(v152) = v73;
            v153 = v112;
            v154 = v113;
            v155 = v114;
            v156 = v115;
            v157 = 0;
            v158 = v116;
            v159 = v117;
            v160 = v118;
            v161 = v119;
            v162 = 0uLL;
            *(_QWORD *)&v163 = 0;
            *((_QWORD *)&v163 + 1) = v94;
            sub_23AAFC630((uint64_t)&v151);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
            sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
            v120 = swift_allocError();
            sub_23AA724E8((uint64_t)&v151, v121, (uint64_t *)&unk_2542E0950);
            *v21 = v120;
            swift_storeEnumTagMultiPayload();
            v122 = v94;
            swift_bridgeObjectRetain();
          }
          else
          {
            *v21 = (uint64_t)v94;
            swift_storeEnumTagMultiPayload();
            v123 = v94;
          }
          v72(v21);

          goto LABEL_41;
        }
        __break(1u);
      }
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v96);
    }
    v106 = v94;
    LODWORD(v151) = sub_23B1C54B0();
    v107 = sub_23B1C575C();

    if ((v107 & 1) != 0)
    {
      v108 = (unsigned int *)(v144 + v141[11]);
      if ((v108[1] & 1) == 0)
      {
        v109 = *v108;

        v94 = objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, v109);
        swift_willThrow();
      }
    }
    goto LABEL_37;
  }
  if ((v47 & 1) == 0)
    goto LABEL_14;
LABEL_23:
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F30);
  v79 = v143;
  v80 = (uint64_t)v143 + *(int *)(v78 + 48);
  v81 = v134;
  *v143 = v132;
  v79[1] = v81;
  v82 = v133;
  v83 = v128;
  v79[2] = v133;
  v79[3] = (uint64_t)v83;
  v79[4] = v127;
  *((_BYTE *)v79 + 40) = v126;
  v79[6] = v125;
  sub_23AA907B0(v144, v80, type metadata accessor for VFSItem);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v79, 0, 1, v78);
  swift_storeEnumTagMultiPayload();
  sub_23AAA3E2C(v81, v82);
  v145(v79);
  sub_23AAA3E18(v81, v82);
  v84 = (uint64_t)v79;
  return sub_23AA8A05C(v84, &qword_2569E8F28);
}

uint64_t sub_23B15FCE8(uint64_t a1, char a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v28 = a4;
  v29 = a5;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v7 + 224);
  v30 = *(id *)(v7 + 216);
  v17 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v15, 1, 1, v17);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a6;
  *(_QWORD *)(v18 + 24) = a7;
  v19 = swift_allocObject();
  v20 = a3[3];
  *(_OWORD *)(v19 + 72) = a3[2];
  *(_OWORD *)(v19 + 88) = v20;
  v21 = a3[5];
  *(_OWORD *)(v19 + 104) = a3[4];
  *(_OWORD *)(v19 + 120) = v21;
  v22 = a3[1];
  *(_OWORD *)(v19 + 40) = *a3;
  *(_QWORD *)(v19 + 16) = v7;
  *(_QWORD *)(v19 + 24) = a1;
  *(_BYTE *)(v19 + 32) = a2;
  *(_OWORD *)(v19 + 56) = v22;
  v23 = v29;
  *(_QWORD *)(v19 + 136) = v28;
  *(_QWORD *)(v19 + 144) = v23;
  *(_QWORD *)(v19 + 152) = a6;
  *(_QWORD *)(v19 + 160) = a7;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = sub_23AAB5414;
  v24[3] = v18;
  v24[4] = v16;
  swift_retain_n();
  v25 = v30;
  swift_retain();
  sub_23B19DD20((uint64_t)a3);
  swift_retain();
  swift_retain();
  sub_23AA9086C(v25, (uint64_t)v15, sub_23B1A02BC, v24, (uint64_t)sub_23B1A02A0, v19);

  swift_release();
  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v15, &qword_2542DD460);
}

uint64_t sub_23B15FEC8(_QWORD *a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, _QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[8];
  uint64_t v26;
  uint64_t v27[5];
  _QWORD v28[4];
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  v11 = *a4;
  v12 = *((unsigned int *)a4 + 2);
  v13 = a4[2];
  v14 = *((unsigned __int8 *)a4 + 48);
  v15 = a4[7];
  v16 = a4[8];
  v17 = a4[11];
  v18 = a4[3] & 1;
  v26 = MEMORY[0x24BEE4AF8];
  v28[0] = v11;
  v28[1] = v12;
  v28[2] = v13;
  v28[3] = v18;
  v29 = *((_OWORD *)a4 + 2);
  v30 = v14;
  v31 = v15;
  v32 = v16;
  v33 = *(_OWORD *)(a4 + 9);
  v34 = v17;
  sub_23B157264(a2, a3, (uint64_t)v28, (uint64_t)v27);
  v19 = (void *)swift_retain();
  if (objc_sync_enter(v19))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  v20 = a1[20];
  swift_retain();
  if (objc_sync_exit(a1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  swift_release();
  v21 = *(unsigned int *)(v20 + 16);
  v22 = swift_release();
  MEMORY[0x24BDAC7A8](v22);
  v25[2] = a5;
  v25[3] = a6;
  v25[4] = &v26;
  sub_23AC3A86C(v27, v21, 0x200000, 0, (uint64_t)sub_23B1A02E0, (uint64_t)v25);
  sub_23AC03E50((uint64_t)v27);
  v23 = swift_bridgeObjectRetain();
  a7(v23, 0);
  return swift_bridgeObjectRelease_n();
}

void sub_23B1600A4(int a1, off_t a2, off_t a3, off_t *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  off_t v11;
  off_t v12;
  off_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  char v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  off_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t (*v37)();
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD v42[34];
  off_t v43;

  v9 = sub_23B1C5570();
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = lseek(a1, a2 & ~(a2 >> 63), 4);
  v43 = v11;
  if (v11 < 0)
  {
    v4 = -1;
LABEL_13:
    v19 = MEMORY[0x23B85E7A4]();
    if ((_DWORD)v19)
    {
      if (MEMORY[0x23B85E7A4]() == 96)
      {
        sub_23AC42C18((uint64_t)v42);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        v20 = (id)swift_allocError();
        sub_23AA724E8((uint64_t)v42, v21, (uint64_t *)&unk_2542E0950);
      }
      else if (MEMORY[0x23B85E7A4]() == 9939394)
      {
        v20 = objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
      }
      else
      {
        MEMORY[0x23B85E7A4]();
        v24 = sub_23B1C5E64();
        if ((v24 & 0x100000000) != 0)
          v42[0] = 22;
        else
          v42[0] = v24;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v25 = v39;
        v26 = v41;
        sub_23B1C5864();
        v20 = (id)sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v26);
      }
      swift_willThrow();
      v27 = v20;
      v42[0] = sub_23B1C54A4();
      sub_23AB6CD48();
      v28 = sub_23B1C575C();

      if ((v28 & 1) != 0)
      {

        v12 = a2;
        if (a2 != v4)
          goto LABEL_31;
      }
      return;
    }
    MEMORY[0x24BDAC7A8](v19);
    v36 = &v38 - 4;
    *(&v38 - 2) = (uint64_t)&v43;
    v37 = sub_23AC42E94;
LABEL_48:
    sub_23AFF56B8((uint64_t (*)(uint64_t))v37, (uint64_t)v36, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
  }
  v12 = v11;
  while (1)
  {
    v13 = lseek(a1, v12, 3);
    v43 = v13;
    if (v13 < 0)
    {
      v22 = MEMORY[0x23B85E7A4]();
      if ((_DWORD)v22)
      {
        if (MEMORY[0x23B85E7A4]() == 96)
        {
          sub_23AC42C18((uint64_t)v42);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
          sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
          swift_allocError();
          sub_23AA724E8((uint64_t)v42, v23, (uint64_t *)&unk_2542E0950);
        }
        else if (MEMORY[0x23B85E7A4]() == 9939394)
        {
          objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
        }
        else
        {
          MEMORY[0x23B85E7A4]();
          v33 = sub_23B1C5E64();
          if ((v33 & 0x100000000) != 0)
            v42[0] = 22;
          else
            v42[0] = v33;
          sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
          sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
          v34 = v39;
          v35 = v41;
          sub_23B1C5864();
          sub_23B1C5558();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v35);
        }
        swift_willThrow();
        return;
      }
      MEMORY[0x24BDAC7A8](v22);
      v36 = &v38 - 4;
      *(&v38 - 2) = (uint64_t)&v43;
      v37 = sub_23AC42C4C;
      goto LABEL_48;
    }
    a2 = v13;
    if (v13 >= a3)
      break;
    if (v13 < (unint64_t)v12)
    {
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v14 = (_QWORD *)*a4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = (off_t)v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_23AF9A4EC(0, v14[2] + 1, 1, v14);
      *a4 = (off_t)v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
      v14 = sub_23AF9A4EC((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
    v14[2] = v17 + 1;
    v18 = &v14[2 * v17];
    v18[4] = v12;
    v18[5] = a2;
    *a4 = (off_t)v14;
    v12 = lseek(a1, a2, 4);
    v43 = v12;
    v4 = a2;
    if (v12 < 0)
      goto LABEL_13;
  }
  v4 = v13;
  if (v12 == v13)
    return;
LABEL_31:
  if (((v4 | v12) & 0x8000000000000000) == 0)
  {
    if (v4 < v12)
      goto LABEL_44;
    a2 = *a4;
    v29 = swift_isUniquelyReferenced_nonNull_native();
    *a4 = a2;
    if ((v29 & 1) == 0)
    {
LABEL_45:
      a2 = (off_t)sub_23AF9A4EC(0, *(_QWORD *)(a2 + 16) + 1, 1, (_QWORD *)a2);
      *a4 = a2;
    }
    v31 = *(_QWORD *)(a2 + 16);
    v30 = *(_QWORD *)(a2 + 24);
    if (v31 >= v30 >> 1)
      a2 = (off_t)sub_23AF9A4EC((_QWORD *)(v30 > 1), v31 + 1, 1, (_QWORD *)a2);
    *(_QWORD *)(a2 + 16) = v31 + 1;
    v32 = a2 + 16 * v31;
    *(_QWORD *)(v32 + 32) = v12;
    *(_QWORD *)(v32 + 40) = v4;
    *a4 = a2;
  }
}

uint64_t sub_23B160668(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(void);
  uint64_t v75;
  void (*v76)(void);
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  int *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(void);
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(void);
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  void (*v109)(_QWORD *);
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(uint64_t, char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  void *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t);
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, char *, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  char *v173;
  void (*v174)(void);
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  int *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(uint64_t *);
  uint64_t v188;
  void (*v189)(_QWORD *);
  unint64_t v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  uint64_t v197;

  v169 = a8;
  v170 = a7;
  v181 = a6;
  v184 = a5;
  v187 = a2;
  v167 = sub_23B1C5DC8();
  v166 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v162 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v165 = (uint64_t)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v177 = (uint64_t)&v151 - v15;
  v161 = type metadata accessor for Signpost(0);
  v163 = *(_QWORD *)(v161 - 8);
  v16 = MEMORY[0x24BDAC7A8](v161);
  v168 = (uint64_t)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v182 = (uint64_t)&v151 - v18;
  v183 = (int *)type metadata accessor for ItemMetadata();
  v19 = MEMORY[0x24BDAC7A8](v183);
  v160 = (uint64_t)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v174 = (void (*)(void))((char *)&v151 - v21);
  v175 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v175);
  v176 = (uint64_t *)((char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2380);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2370);
  v26 = *(_QWORD *)(v188 - 8);
  v27 = MEMORY[0x24BDAC7A8](v188);
  v179 = (char *)&v151 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v159 = (char *)&v151 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v173 = (char *)&v151 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v180 = (char *)&v151 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v185 = (uint64_t)&v151 - v35;
  v36 = sub_23B1C5570();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v151 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (uint64_t *)((char *)&v151 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for VFSStagedContext();
  v186 = a1;
  v43 = swift_dynamicCastClass();
  if (!v43)
  {
    LODWORD(v189) = 22;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    v55 = sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    *v42 = v55;
    swift_storeEnumTagMultiPayload();
    v187(v42);
    return sub_23AA8A05C((uint64_t)v42, qword_2542E3690);
  }
  v44 = v43;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = 0;
  v46 = (_QWORD *)swift_allocObject();
  v46[2] = a4;
  v46[3] = v44;
  v171 = v44;
  v46[4] = v187;
  v46[5] = a3;
  v47 = v184;
  sub_23AA724E8((uint64_t)v184, (uint64_t)(v46 + 6), qword_2542E48C0);
  v172 = v46;
  v46[13] = v45;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v178 = swift_allocBox();
  v49 = v48;
  sub_23AA8EFC8(v181, v48, (uint64_t *)&unk_2542E1DF0);
  if (*(_BYTE *)(v49 + 8) != 2 || *(_QWORD *)v49)
  {
    swift_retain_n();
    sub_23AC25990(v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v51 = *(_QWORD *)(v49 + 16);
    v50 = *(_QWORD *)(v49 + 24);
    swift_retain_n();
    sub_23AC25990(v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    v52 = qword_2542E5360;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v52 != -1)
      swift_once();
    v53 = sub_23B070090(v51, v50, xmmword_2542EDE40, *((unint64_t *)&xmmword_2542EDE40 + 1));
    swift_bridgeObjectRelease();
    if (v53)
    {
      if (qword_2542DE278 != -1)
        swift_once();
      v54 = unk_2542EDC70;
      *(_QWORD *)(v49 + 16) = qword_2542EDC68;
      *(_QWORD *)(v49 + 24) = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  v158 = a3;
  v57 = *(_QWORD *)v49;
  v58 = *(_QWORD *)(v49 + 16);
  v59 = *(_QWORD *)(v49 + 24);
  v60 = *(_BYTE *)(v49 + 8);
  swift_bridgeObjectRetain();
  sub_23B15C1A8(v57, v60, v58, v59, 3, v25);
  swift_bridgeObjectRelease();
  v61 = v188;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v188) != 1)
  {
    v154 = v45;
    v157 = a4;
    v66 = *(int *)(v61 + 48);
    v67 = v185;
    v68 = v185 + v66;
    v69 = (uint64_t)&v25[v66];
    v70 = sub_23B1C5A08();
    v71 = v61;
    v72 = *(_QWORD *)(v70 - 8);
    v152 = *(void (**)(uint64_t, char *, uint64_t))(v72 + 32);
    v152(v67, v25, v70);
    sub_23AA94050(v69, v68, type metadata accessor for VFSItem);
    v73 = (uint64_t)&v180[*(int *)(v71 + 48)];
    v153 = v72;
    v74 = *(void (**)(void))(v72 + 16);
    v74();
    sub_23AA907B0(v68, v73, type metadata accessor for VFSItem);
    v75 = type metadata accessor for VFSItem(0);
    v76 = v174;
    sub_23AA907B0(v73 + *(int *)(v75 + 28), (uint64_t)v174, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA937BC(v73, type metadata accessor for VFSItem);
    v77 = *((unsigned __int8 *)v76 + v183[16]);
    v78 = (uint64_t)v76;
    v79 = v188;
    sub_23AA937BC(v78, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v80 = (uint64_t)v173;
    v81 = (uint64_t)&v173[*(int *)(v79 + 48)];
    v174 = v74;
    ((void (*)(char *, uint64_t, uint64_t))v74)(v173, v67, v70);
    v181 = v68;
    sub_23AA907B0(v68, v81, type metadata accessor for VFSItem);
    v156 = v75;
    if (v77 == 1)
    {
      sub_23AA8A05C(v80, (uint64_t *)&unk_2542E2370);
      v82 = *(void (**)(char *, uint64_t))(v153 + 8);
      v82(v180, v70);
      v83 = v183;
      v84 = v179;
      v85 = v67;
      v86 = v79;
      v87 = v181;
      v88 = v174;
    }
    else
    {
      v89 = v153;
      v90 = v159;
      v91 = (uint64_t)&v159[*(int *)(v79 + 48)];
      v152((uint64_t)v159, (char *)v80, v70);
      sub_23AA94050(v81, v91, type metadata accessor for VFSItem);
      v92 = v91 + *(int *)(v75 + 28);
      v93 = v160;
      sub_23AA907B0(v92, v160, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      sub_23AA937BC(v91, type metadata accessor for VFSItem);
      v83 = v183;
      v94 = *(unsigned __int8 *)(v93 + v183[17]);
      sub_23AA937BC(v93, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      if (v94 == 2)
      {
        v82 = *(void (**)(char *, uint64_t))(v89 + 8);
        v82(v90, v70);
        v82(v180, v70);
        v84 = v179;
        v86 = v188;
        v87 = v181;
        v88 = v174;
        v85 = v185;
        goto LABEL_20;
      }
      v82 = *(void (**)(char *, uint64_t))(v89 + 8);
      v82(v90, v70);
      v82(v180, v70);
      v84 = v179;
      v86 = v188;
      v87 = v181;
      v88 = v174;
      v85 = v185;
      if ((v94 & 1) == 0)
        goto LABEL_20;
    }
    v95 = (uint64_t)&v84[*(int *)(v86 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v88)(v84, v85, v70);
    sub_23AA907B0(v87, v95, type metadata accessor for VFSItem);
    v96 = *(_BYTE *)(v95 + *(int *)(v156 + 28) + v83[20]);
    sub_23AA937BC(v95, type metadata accessor for VFSItem);
    v82(v84, v70);
    if ((v96 & 1) == 0)
    {
      v147 = *(_BYTE *)(v49 + 8);
      v189 = *(void (**)(_QWORD *))v49;
      LOBYTE(v190) = v147;
      v191 = 0u;
      v192 = 0u;
      v193 = 0u;
      v194 = 0u;
      v195 = 0u;
      v196 = 0u;
      v197 = 0;
      sub_23AAFC630((uint64_t)&v189);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      v148 = swift_allocError();
      sub_23AA724E8((uint64_t)&v189, v149, (uint64_t *)&unk_2542E0950);
      v150 = (uint64_t)v176;
      *v176 = v148;
      swift_storeEnumTagMultiPayload();
      sub_23B1619C8(v150, v157, v171, v187, v158, v184, v154);
      swift_release();
      swift_release();
      sub_23AA8A05C(v150, (uint64_t *)&unk_2542E21B0);
      sub_23AA8A05C(v85, (uint64_t *)&unk_2542E2370);
      goto LABEL_30;
    }
LABEL_20:
    v155 = v70;
    v97 = (uint64_t)&v84[*(int *)(v86 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v88)(v84, v85, v70);
    sub_23AA907B0(v87, v97, type metadata accessor for VFSItem);
    v98 = *(_QWORD *)v97;
    v99 = v88;
    v100 = *(_BYTE *)(v97 + 8);
    sub_23AA937BC(v97, type metadata accessor for VFSItem);
    *(_QWORD *)v49 = v98;
    *(_BYTE *)(v49 + 8) = v100;
    v101 = v155;
    v82(v84, v155);
    v102 = v86;
    if (qword_2569E1310 != -1)
      swift_once();
    v184 = (_QWORD *)qword_256A07A18;
    v103 = v166;
    v104 = v177;
    v105 = v167;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v166 + 56))(v177, 1, 1, v167);
    v189 = 0;
    v190 = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v189 = (void (*)(_QWORD *))0xD000000000000010;
    v190 = 0x800000023B21F8B0;
    v106 = (uint64_t)&v84[*(int *)(v102 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v99)(v84, v185, v101);
    sub_23AA907B0(v181, v106, type metadata accessor for VFSItem);
    sub_23B1C59E4();
    v187 = (void (*)(uint64_t *))v82;
    v82(v84, v101);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v107 = v103;
    sub_23AA937BC(v106, type metadata accessor for VFSItem);
    v109 = v189;
    v108 = v190;
    v110 = v165;
    sub_23AA8EFC8(v104, v165, (uint64_t *)&unk_2542E67B8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v110, 1, v105) == 1)
    {
      v111 = v184;
      v112 = v184;
      v113 = v162;
      sub_23B1C5DB0();
      sub_23AA8A05C(v110, (uint64_t *)&unk_2542E67B8);
      v114 = v161;
    }
    else
    {
      v113 = v162;
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v162, v110, v105);
      v114 = v161;
      v111 = v184;
    }
    v115 = *(void (**)(uint64_t, char *, uint64_t))(v103 + 16);
    v116 = v182;
    v115(v182, v113, v105);
    *(_QWORD *)(v116 + *(int *)(v114 + 20)) = v111;
    v117 = v116 + *(int *)(v114 + 24);
    *(_QWORD *)v117 = "Coordination: Acquiring for Creation";
    *(_QWORD *)(v117 + 8) = 36;
    *(_BYTE *)(v117 + 16) = 2;
    v118 = v111;
    swift_bridgeObjectRetain();
    sub_23B1C6BE4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
    v119 = swift_allocObject();
    *(_OWORD *)(v119 + 16) = xmmword_23B1CA760;
    *(_QWORD *)(v119 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v119 + 64) = sub_23AAA0D14();
    *(_QWORD *)(v119 + 32) = v109;
    *(_QWORD *)(v119 + 40) = v108;
    sub_23B1C5D98();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v113, v105);
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v177, (uint64_t *)&unk_2542E67B8);
    v120 = (void *)objc_opt_self();
    v121 = v179;
    v122 = (uint64_t)&v179[*(int *)(v188 + 48)];
    v123 = v185;
    v124 = v155;
    ((void (*)(char *, uint64_t, uint64_t))v174)(v179, v185, v155);
    v125 = v181;
    sub_23AA907B0(v181, v122, type metadata accessor for VFSItem);
    v126 = sub_23B1C5954();
    sub_23AA937BC(v122, type metadata accessor for VFSItem);
    v127 = (void (*)(char *, uint64_t))v187;
    ((void (*)(char *, uint64_t))v187)(v121, v124);
    v184 = objc_msgSend(v120, sel_writingIntentWithURL_options_, v126, 8);

    v129 = MEMORY[0x24BDAC7A8](v128);
    MEMORY[0x24BDAC7A8](v129);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74E0);
    sub_23B1C59B4();
    v130 = (char)v189;
    v131 = (uint64_t)&v121[*(int *)(v188 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v174)(v121, v123, v124);
    sub_23AA907B0(v125, v131, type metadata accessor for VFSItem);
    LOBYTE(v126) = *(_BYTE *)(v131 + *(int *)(v156 + 28) + v183[20]);
    sub_23AA937BC(v131, type metadata accessor for VFSItem);
    v127(v121, v124);
    if ((v126 & 1) != 0)
    {
      v187 = (void (*)(uint64_t *))MEMORY[0x24BEE4AF8];
      v132 = v164;
      v133 = v163;
      v134 = v184;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
      v135 = swift_allocObject();
      *(_OWORD *)(v135 + 16) = xmmword_23B1CE680;
      v134 = v184;
      *(_QWORD *)(v135 + 32) = v184;
      v189 = (void (*)(_QWORD *))v135;
      sub_23B1C671C();
      v187 = v189;
      v136 = v134;
      v132 = v164;
      v133 = v163;
    }
    LODWORD(v188) = v130 & 1;
    v137 = v168;
    sub_23AA907B0(v182, v168, type metadata accessor for Signpost);
    v138 = (*(unsigned __int8 *)(v133 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
    v139 = (v132 + v138 + 7) & 0xFFFFFFFFFFFFFFF8;
    v140 = (v139 + 15) & 0xFFFFFFFFFFFFFFF8;
    v141 = (_QWORD *)swift_allocObject();
    v142 = v178;
    v141[2] = v157;
    v141[3] = v142;
    v143 = v172;
    v141[4] = sub_23B19FF48;
    v141[5] = v143;
    v144 = v154;
    v141[6] = v134;
    v141[7] = v144;
    sub_23AA94050(v137, (uint64_t)v141 + v138, type metadata accessor for Signpost);
    *(_QWORD *)((char *)v141 + v139) = v171;
    v145 = v170;
    sub_23AA724E8(v170, (uint64_t)v141 + v140, &qword_2542E5050);
    *(_QWORD *)((char *)v141 + ((v140 + 255) & 0xFFFFFFFFFFFFFFF8)) = v169;
    swift_retain();
    swift_retain();
    swift_retain();
    v146 = v134;
    swift_retain();
    swift_retain();
    sub_23AC24890(v145);
    sub_23B159770(0, 255, (unint64_t)v187, v188, (void (*)(_QWORD, _QWORD))sub_23B1A00E0, (uint64_t)v141);
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_23AA937BC(v182, type metadata accessor for Signpost);
    sub_23AA8A05C(v185, (uint64_t *)&unk_2542E2370);
    swift_release();
    return swift_release();
  }
  sub_23AA8A05C((uint64_t)v25, &qword_2542E2380);
  v62 = *(_BYTE *)(v49 + 8);
  v189 = *(void (**)(_QWORD *))v49;
  LOBYTE(v190) = v62;
  v191 = 0u;
  v192 = 0u;
  v193 = 0u;
  v194 = 0u;
  v195 = 0u;
  v196 = 0u;
  v197 = 0;
  sub_23AAFC630((uint64_t)&v189);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
  v63 = swift_allocError();
  sub_23AA724E8((uint64_t)&v189, v64, (uint64_t *)&unk_2542E0950);
  v65 = (uint64_t)v176;
  *v176 = v63;
  swift_storeEnumTagMultiPayload();
  sub_23B1619C8(v65, a4, v171, v187, v158, v184, v45);
  swift_release();
  swift_release();
  sub_23AA8A05C(v65, (uint64_t *)&unk_2542E21B0);
LABEL_30:
  swift_release();
  return swift_release();
}

uint64_t sub_23B1619C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t *v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(_QWORD *);
  uint64_t v28;
  int v29;
  uint64_t v30;

  v24 = a7;
  v25 = a6;
  v26 = a5;
  v27 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(_QWORD *)(a2 + 136);
  v20 = *(_QWORD *)(a3 + 16);
  v28 = v19;
  v29 = 1;
  v30 = v20;
  swift_retain();
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
  *(_BYTE *)(v19 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
  if (*(_QWORD *)(v19 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    MEMORY[0x23B85F548](1, ObjectType);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  sub_23AA8EFC8(a1, (uint64_t)v15, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v18 = *v15;
  }
  else
  {
    v22 = (uint64_t *)(v24 + 16);
    sub_23AA724E8((uint64_t)v15, (uint64_t)v12, &qword_2542E72C0);
    sub_23B161C14((uint64_t)v12, v25, a2, v22, (uint64_t)v18);
    sub_23AA8A05C((uint64_t)v12, &qword_2542E72C0);
  }
  swift_storeEnumTagMultiPayload();
  v27(v18);
  return sub_23AA8A05C((uint64_t)v18, qword_2542E3690);
}

uint64_t sub_23B161C14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];
  _QWORD v23[7];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_23AA724E8((uint64_t)a2, (uint64_t)v23, qword_2542E48C0);
  if (v23[2] >> 60 != 11 && v23[0])
  {
    v14 = *(_QWORD *)(a3 + 136);
    MEMORY[0x24BDAC7A8](v13);
    *(_QWORD *)&v22[-32] = v14;
    *(_DWORD *)&v22[-24] = 0;
    *(_QWORD *)&v22[-16] = v15;
    sub_23AC25990(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
    *(_BYTE *)(v14 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v14 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_unknownObjectRelease();
    }
    sub_23AC25990(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEE4C);
  }
  sub_23AA8EFC8(a1, (uint64_t)v12, &qword_2542E72C0);
  swift_beginAccess();
  v17 = type metadata accessor for VFSItem(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17) == 1)
  {
    sub_23AA8A05C((uint64_t)v12, &qword_2542E72C0);
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a5, 1, 1, v18);
  }
  else
  {
    v19 = *a4;
    sub_23AA94050((uint64_t)v12, a5, type metadata accessor for VFSItem);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34B8);
    *(_QWORD *)(a5 + *(int *)(v20 + 36)) = v19;
    *(_BYTE *)(a5 + *(int *)(v20 + 40)) = 0;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 0, 1, v20);
  }
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34C8);
  *(_QWORD *)(a5 + *(int *)(result + 48)) = 0;
  return result;
}

uint64_t sub_23B161E8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  void *v71;
  uint64_t *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  int v89;
  id v90;
  id v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  id v98;
  void *v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t);
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t *);
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  uint64_t v175;

  v141 = a8;
  v159 = a7;
  v163 = a6;
  v164 = a5;
  v166 = a3;
  v156 = a2;
  v152 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v152);
  v127 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C5570();
  v129 = *(_QWORD *)(v12 - 8);
  v130 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v128 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v131 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v139 = (char *)&v121 - v17;
  v18 = type metadata accessor for VFSItem(0);
  v135 = *(_QWORD *)(v18 - 8);
  v136 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v133 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v134 = (char *)&v121 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v137 = *(_QWORD *)(v22 - 8);
  v138 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v132 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v145 = (uint64_t)&v121 - v25;
  v26 = sub_23B1C60EC();
  v143 = *(_QWORD *)(v26 - 8);
  v144 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v142 = (void (**)(uint64_t, uint64_t))((char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_23B1C5DC8();
  v149 = *(_QWORD *)(v28 - 8);
  v150 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v148 = (char *)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v147 = (uint64_t)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v157 = (uint64_t)&v121 - v33;
  v155 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v155);
  v154 = (char *)&v121 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23B1C5A08();
  v160 = *(char **)(v35 - 8);
  v161 = v35;
  MEMORY[0x24BDAC7A8](v35);
  v158 = (uint64_t)&v121 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v162);
  v165 = (uint64_t *)((char *)&v121 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2380);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v121 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2370);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v140 = (char *)&v121 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v151 = (char *)&v121 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v146 = (char *)&v121 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v121 - v49;
  v153 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v51 = swift_projectBox();
  swift_beginAccess();
  v52 = *(_QWORD *)v51;
  v53 = *(_QWORD *)(v51 + 16);
  v54 = *(_QWORD *)(v51 + 24);
  v55 = *(_BYTE *)(v51 + 8);
  swift_bridgeObjectRetain();
  sub_23B15C1A8(v52, v55, v53, v54, 1, v40);
  v56 = v41;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) == 1)
  {
    sub_23AA8A05C((uint64_t)v40, &qword_2542E2380);
    swift_beginAccess();
    v57 = *(_BYTE *)(v51 + 8);
    v167 = *(_QWORD *)v51;
    v168 = v57;
    v169 = 0u;
    v170 = 0u;
    v171 = 0u;
    v172 = 0u;
    v173 = 0u;
    v174 = 0u;
    v175 = 0;
    sub_23AAFC630((uint64_t)&v167);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v58 = swift_allocError();
    sub_23AA724E8((uint64_t)&v167, v59, (uint64_t *)&unk_2542E0950);
    v60 = v165;
    *v165 = v58;
    swift_storeEnumTagMultiPayload();
    v164(v60);
    v61 = (uint64_t *)&unk_2542E21B0;
    v62 = (uint64_t)v60;
    return sub_23AA8A05C(v62, v61);
  }
  v126 = v51;
  v63 = *(int *)(v41 + 48);
  v64 = (uint64_t)&v50[v63];
  v65 = (uint64_t)&v40[v63];
  v66 = v160;
  v67 = v161;
  (*((void (**)(char *, char *, uint64_t))v160 + 4))(v50, v40, v161);
  sub_23AA94050(v65, v64, type metadata accessor for VFSItem);
  v68 = objc_msgSend(v159, sel_URL);
  v69 = v158;
  sub_23B1C59CC();

  sub_23AA7E38C(&qword_2542E21F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  LOBYTE(v68) = sub_23B1C63A4();
  v70 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v66 + 1);
  v70(v69, v67);
  if ((v68 & 1) == 0)
  {
    v75 = v126;
    swift_beginAccess();
    v76 = *(_BYTE *)(v75 + 8);
    v167 = *(_QWORD *)v75;
    v168 = v76;
    v169 = 0u;
    v170 = 0u;
    v171 = 0u;
    v172 = 0u;
    v173 = 0u;
    v174 = 0u;
    v175 = 0;
    sub_23AAFC630((uint64_t)&v167);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v77 = swift_allocError();
    sub_23AA724E8((uint64_t)&v167, v78, (uint64_t *)&unk_2542E0950);
    v79 = v165;
    *v165 = v77;
    swift_storeEnumTagMultiPayload();
    v164(v79);
    v74 = (uint64_t)v79;
    goto LABEL_7;
  }
  v71 = v156;
  if (v156)
  {
    v72 = v165;
    *v165 = (uint64_t)v156;
    swift_storeEnumTagMultiPayload();
    v73 = v71;
    v164(v72);
    v74 = (uint64_t)v72;
LABEL_7:
    sub_23AA8A05C(v74, (uint64_t *)&unk_2542E21B0);
    v61 = (uint64_t *)&unk_2542E2370;
    v62 = (uint64_t)v50;
    return sub_23AA8A05C(v62, v61);
  }
  if (qword_2569E1310 != -1)
    swift_once();
  v122 = (id)qword_256A07A18;
  v81 = v149;
  v82 = v150;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v149 + 56))(v157, 1, 1, v150);
  v83 = v146;
  v84 = (uint64_t)&v146[*(int *)(v56 + 48)];
  v159 = (id)*((_QWORD *)v160 + 2);
  ((void (*)(char *, char *, uint64_t))v159)(v146, v50, v67);
  v158 = v84;
  v85 = v84;
  v86 = v81;
  sub_23AA907B0(v64, v85, type metadata accessor for VFSItem);
  v123 = sub_23B1C59E4();
  v156 = v87;
  v70((uint64_t)v83, v67);
  v88 = v147;
  sub_23AA8EFC8(v157, v147, (uint64_t *)&unk_2542E67B8);
  v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v88, 1, v82);
  v160 = v50;
  v124 = v64;
  v125 = v56;
  v121 = v70;
  if (v89 == 1)
  {
    v90 = v122;
    v91 = v122;
    v92 = v148;
    sub_23B1C5DB0();
    sub_23AA8A05C(v88, (uint64_t *)&unk_2542E67B8);
    v93 = v82;
    v94 = v86;
  }
  else
  {
    v92 = v148;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v148, v88, v82);
    v93 = v82;
    v94 = v86;
    v90 = v122;
  }
  v95 = v154;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v154, v92, v93);
  v96 = v155;
  v149 = *(int *)(v155 + 20);
  *(_QWORD *)&v95[v149] = v90;
  v97 = &v95[*(int *)(v96 + 24)];
  *(_QWORD *)v97 = "FS creation [under coordination]";
  *((_QWORD *)v97 + 1) = 32;
  v150 = (uint64_t)v97;
  v97[16] = 2;
  v98 = v90;
  v99 = v156;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v100 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v100 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v100 + 32) = v123;
  *(_QWORD *)(v100 + 40) = v99;
  v120 = v100;
  LOBYTE(v119) = 2;
  v118 = 2;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v93);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v157, (uint64_t *)&unk_2542E67B8);
  sub_23AA937BC(v158, type metadata accessor for VFSItem);
  v101 = (void (*)(uint64_t, uint64_t))v126;
  swift_beginAccess();
  v102 = v152;
  v103 = (uint64_t)v160;
  v104 = v166;
  v105 = (uint64_t)v151;
  if (*((_BYTE *)v101 + *(int *)(v153 + 40) + *(int *)(v152 + 84)))
  {
    v106 = *(void **)(v166 + 216);
    v108 = v142;
    v107 = v143;
    *v142 = v106;
    v109 = v144;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v107 + 104))(v108, *MEMORY[0x24BEE5610], v144);
    v110 = v106;
    LOBYTE(v106) = sub_23B1C6104();
    (*(void (**)(_QWORD *, uint64_t))(v107 + 8))(v108, v109);
    if ((v106 & 1) == 0)
    {
      __break(1u);
      __break(1u);
      __break(1u);
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v104);
    }
    v111 = v104 + qword_2542E6A58;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v111 + 16))
    {
      v112 = (_QWORD *)(v141 + 16);
      swift_beginAccess();
      if ((*v112 & 0x10000) == 0)
        *v112 |= 0x10000uLL;
      swift_beginAccess();
      *((_BYTE *)v101 + *(int *)(v153 + 40) + *(int *)(v102 + 84)) = 0;
    }
  }
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  v113 = v105 + *(int *)(v125 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v159)(v105, v103, v161);
  v114 = sub_23AA907B0(v124, v113, type metadata accessor for VFSItem);
  MEMORY[0x24BDAC7A8](v114);
  *(&v121 - 6) = (void (*)(uint64_t, uint64_t))v104;
  *(&v121 - 5) = v101;
  v118 = a10;
  v119 = v105;
  v120 = a11;
  v115 = v145;
  sub_23B1512DC(a10, 0x200000u, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23B1A0178, (uint64_t)(&v121 - 8), v145);
  sub_23AA8A05C(v105, (uint64_t *)&unk_2542E2370);
  v116 = v165;
  sub_23AA8EFC8(v115, (uint64_t)v165, &qword_2542E72C0);
  swift_storeEnumTagMultiPayload();
  v164(v116);
  sub_23AA8A05C((uint64_t)v116, (uint64_t *)&unk_2542E21B0);
  sub_23AA8A05C(v115, &qword_2542E72C0);
  sub_23B1C6BD8();
  v117 = (uint64_t)v154;
  sub_23B1C5DA4();
  sub_23AA937BC(v117, type metadata accessor for Signpost);
  v61 = (uint64_t *)&unk_2542E2370;
  v62 = v103;
  return sub_23AA8A05C(v62, v61);
}

uint64_t sub_23B1631F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _DWORD v105[98];
  _QWORD v106[5];
  _BYTE v107[272];

  v102 = a5;
  v103 = a7;
  v101 = a6;
  v97 = a1;
  v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2370);
  MEMORY[0x24BDAC7A8](v94);
  v95 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v15);
  v100 = (uint64_t)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5570();
  v92 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ItemMetadata();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v99 = (uint64_t)&v86 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v31 = (char *)&v86 - v30;
  if (!a3)
  {
    sub_23B19E560((uint64_t)v105);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    sub_23AA724E8((uint64_t)v105, v47, (uint64_t *)&unk_2542E0950);
    return swift_willThrow();
  }
  v96 = v26;
  v89 = v29;
  v90 = v28;
  v93 = v27;
  v91 = a8;
  v104 = v9;
  v32 = a4[17];
  v98 = a2;
  v33 = *(_QWORD *)(a2 + 8);
  v34 = v32 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  if (v33 != *(_QWORD *)(v34 + 32))
  {
    v48 = (void *)swift_retain();
    v39 = (uint64_t)a4;
    if (objc_sync_enter(v48))
      goto LABEL_35;
    v49 = a4[20];
    swift_retain();
    if (objc_sync_exit(a4))
LABEL_36:
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v39);
    swift_release();
    v50 = *(_QWORD **)(v49 + 32);
    swift_bridgeObjectRetain();
    swift_release();
    v51 = sub_23B1AD014(v98, v50);
    swift_bridgeObjectRelease();
    v45 = v104;
    if ((v51 & 1) != 0)
      goto LABEL_17;
    v105[0] = 2;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v19, v17);
    return swift_willThrow();
  }
  v35 = v102;
  swift_beginAccess();
  v36 = v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0) + 40);
  if (*(_BYTE *)(v36 + *(int *)(v96 + 60)))
    v37 = 0x1FBF18F07;
  else
    v37 = 0x1EBF18F07;
  sub_23AA907B0(v36, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v38 = (void *)swift_retain();
  v39 = (uint64_t)a4;
  if (objc_sync_enter(v38))
LABEL_35:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v39);
  v40 = a4[20];
  swift_retain();
  v41 = objc_sync_exit(a4);
  v42 = v103;
  v43 = v101;
  if (v41)
    goto LABEL_36;
  swift_release();
  v44 = v104;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v32 + 408))(v106, v43, v97, v98, v42, v31, v37, v40, a9);
  v45 = v44;
  if (v44)
  {
    sub_23AA937BC((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    return swift_release();
  }
  swift_release();
  sub_23AC03E50((uint64_t)v106);
  sub_23AA937BC((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
LABEL_17:
  v52 = v102;
  swift_beginAccess();
  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v54 = v52 + *(int *)(v53 + 40);
  v55 = v99;
  sub_23AA907B0(v54, v99, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v56 = v96;
  v57 = *(int *)(v96 + 108);
  v58 = v98;
  if ((*(_BYTE *)(v54 + v57) & 1) != 0 || (v59 = *(_DWORD *)(v98 + 40), v59 == 3))
  {
    *(_BYTE *)(v55 + v57) = 1;
    v60 = v101;
  }
  else
  {
    swift_beginAccess();
    v60 = v101;
    if (*(_BYTE *)(v52 + *(int *)(v53 + 40)))
    {
      *(_BYTE *)(v55 + *(int *)(v96 + 108)) = 0;
      goto LABEL_21;
    }
    v56 = v96;
    *(_BYTE *)(v55 + *(int *)(v96 + 108)) = v59 == 2;
    if (v59 != 2)
      goto LABEL_21;
  }
  *(_QWORD *)(v55 + *(int *)(v56 + 100)) = *(_QWORD *)(v58 + 56);
  *(_QWORD *)(v55 + *(int *)(v56 + 104)) = *(_QWORD *)(v58 + 168);
LABEL_21:
  swift_beginAccess();
  v61 = *(unsigned __int8 *)(v52 + *(int *)(v53 + 40));
  v62 = *(_QWORD *)(v60 + 16);
  v104 = v45;
  v88 = (_QWORD *)v39;
  if ((v61 - 1) > 1)
  {
    v63 = *(unsigned int *)(v60 + 32);
    LODWORD(v101) = *(_DWORD *)(v60 + 32) == 0;
    if (!(_DWORD)v63)
      v63 = v62;
    v98 = v63;
  }
  else
  {
    LODWORD(v101) = 1;
    v98 = v62;
  }
  swift_beginAccess();
  v97 = *(_QWORD *)v52;
  LODWORD(v96) = *(unsigned __int8 *)(v52 + 8);
  v64 = *(unsigned int *)(v60 + 36);
  v65 = v90;
  sub_23AA907B0(v55, v90, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v66 = v89;
  sub_23AA907B0(v65, v89, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v92 = sub_23AA9BD7C(v62, v64, v66);
  LODWORD(v89) = v67;
  v87 = v68;
  v70 = v69;
  sub_23AA937BC(v65, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  swift_beginAccess();
  v71 = *(_QWORD *)(v52 + 24);
  v90 = *(_QWORD *)(v52 + 16);
  sub_23AA907B0(v55, v93, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v72 = v95;
  v73 = *(int *)(v94 + 48);
  v74 = (uint64_t)&v95[v73];
  v75 = v103;
  v76 = v103 + v73;
  v77 = sub_23B1C5A08();
  v78 = *(_QWORD *)(v77 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v72, v75, v77);
  sub_23AA907B0(v76, v74, type metadata accessor for VFSItem);
  v79 = v100;
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v100, v72, v77);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v77);
  v80 = v88;
  swift_retain();
  swift_bridgeObjectRetain();
  if (objc_sync_enter(v80))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v80);
  v81 = v80[20];
  swift_retain();
  v82 = objc_sync_exit(v80);
  v83 = v91;
  if (v82)
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v80);
  swift_release();
  sub_23AAF8E48((uint64_t)v105);
  sub_23AA724E8((uint64_t)v105, (uint64_t)v107, &qword_2542E5050);
  v107[268] = 1;
  v84 = v104;
  sub_23AA8F900(v98, v101, v97, v96, v92, v89, v87, v70 & 1, v83, v90, v71, v93, 0x100000000, 0, v100, 0x100000000, v81, (uint64_t)v107);
  sub_23AA937BC(v99, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  result = sub_23AA937BC(v74, type metadata accessor for VFSItem);
  if (!v84)
  {
    v85 = type metadata accessor for VFSItem(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v83, 0, 1, v85);
  }
  return result;
}

uint64_t sub_23B163A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;

  v6 = v5;
  v31 = a5;
  v32 = a4;
  v36 = a3;
  v34 = (_QWORD *)a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v6 + 224);
  v35 = *(id *)(v6 + 216);
  v17 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a5;
  sub_23AA8EFC8(a2, (uint64_t)v13, (uint64_t *)&unk_2542E1DF0);
  v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 63) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  sub_23AA724E8((uint64_t)v13, v23 + v19, (uint64_t *)&unk_2542E1DF0);
  *(_QWORD *)(v23 + v20) = v6;
  v24 = v34;
  sub_23AA724E8((uint64_t)v34, v23 + v21, qword_2542E48C0);
  v25 = v36;
  sub_23AA724E8(v36, v23 + v22, &qword_2542E5050);
  v26 = (_QWORD *)(v23 + ((v22 + 255) & 0xFFFFFFFFFFFFFFF8));
  v27 = v31;
  *v26 = v32;
  v26[1] = v27;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = sub_23AAB5414;
  v28[3] = v18;
  v28[4] = v33;
  swift_retain_n();
  v29 = v35;
  swift_retain();
  sub_23AC25990(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  sub_23AC24890(v25);
  swift_retain();
  swift_retain();
  sub_23AA9086C(v29, (uint64_t)v16, (void (*)())sub_23B1A1F68, v28, (uint64_t)sub_23B19FBFC, v23);

  swift_release();
  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v16, &qword_2542DD460);
}

uint64_t sub_23B163D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _QWORD), uint64_t a6)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, _QWORD);
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v45 = a6;
  v46 = a5;
  v43 = a4;
  v42 = a3;
  v40 = a2;
  v41 = a1;
  v54 = *MEMORY[0x24BDAC8D0];
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  MEMORY[0x24BDAC7A8](v38);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v39);
  v44 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5DC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - v17;
  v19 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569E1310 != -1)
    swift_once();
  v22 = (void *)qword_256A07A18;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  sub_23AA8EFC8((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    v23 = v22;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v21, v12, v9);
  v37 = *(int *)(v19 + 20);
  *(_QWORD *)&v21[v37] = v22;
  v24 = &v21[*(int *)(v19 + 24)];
  *(_QWORD *)v24 = "FS stage creation";
  *((_QWORD *)v24 + 1) = 17;
  v24[16] = 2;
  v25 = v22;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E67B8);
  v26 = v38;
  v27 = v41;
  v28 = v41 + *(int *)(v38 + 40);
  v29 = v44;
  sub_23AA907B0(v28, v44, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v30 = v39;
  v51 = *(_BYTE *)(v28 + *(int *)(v39 + 108));
  v31 = v51;
  sub_23AA8EFC8(v27, (uint64_t)v7, (uint64_t *)&unk_2542E1DF0);
  if ((v31 & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E1DF0);
    v32 = 1;
  }
  else
  {
    v33 = v7[*(int *)(v26 + 40)];
    sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E1DF0);
    if (v33 == 1)
    {
      v34 = *(_QWORD *)(v27 + 24);
      v52 = *(_QWORD *)(v27 + 16);
      v53 = v34;
      v49 = 47;
      v50 = 0xE100000000000000;
      v47 = 58;
      v48 = 0xE100000000000000;
      sub_23AAA420C();
      sub_23B1C6CF8();
      sub_23B1C6458();
      swift_bridgeObjectRelease();
      fpfs_pkg_system_lookup();
      swift_release();
      v32 = v51;
    }
    else
    {
      v32 = 0;
    }
  }
  *(_BYTE *)(v29 + *(int *)(v30 + 112)) = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(**(_QWORD **)(v40 + 136) + 360))(v42, v29, v43, *(_QWORD *)(v27 + 16), *(_QWORD *)(v27 + 24), 1);
  v35 = swift_retain();
  v46(v35, 0);
  swift_release_n();
  sub_23AA937BC(v29, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  return sub_23AA937BC((uint64_t)v21, type metadata accessor for Signpost);
}

uint64_t sub_23B164364@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  id v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t *v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD v148[12];
  uint64_t v149;

  v149 = a5;
  v122 = a4;
  v114 = a2;
  v126 = a1;
  v106 = a6;
  v7 = *(_QWORD *)a3;
  v116 = *(unsigned int *)(a3 + 8);
  v117 = *(_QWORD *)(a3 + 16);
  v115 = *(unsigned __int8 *)(a3 + 24);
  v118 = *(_QWORD *)(a3 + 32);
  v119 = *(_QWORD *)(a3 + 40);
  v120 = *(unsigned __int8 *)(a3 + 48);
  v121 = *(_QWORD *)(a3 + 56);
  v127 = *(_QWORD *)(a3 + 64);
  v123 = *(_QWORD *)(a3 + 72);
  v124 = *(_QWORD *)(a3 + 80);
  v125 = *(_QWORD *)(a3 + 88);
  v130 = type metadata accessor for VFSItem(0);
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v109 = (uint64_t *)((char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v105 = (uint64_t *)((char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v107 = (char *)&v97 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2380);
  MEMORY[0x24BDAC7A8](v13);
  v113 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2388);
  MEMORY[0x24BDAC7A8](v128);
  v108 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_23B1C5A08();
  v112 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v111 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v97 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v97 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v97 - v28;
  v30 = (uint64_t)v131;
  result = sub_23B157BAC(v7, 0, v149, (uint64_t)&v97 - v28);
  if (v30)
    return result;
  v98 = v18;
  v99 = v17;
  v97 = v24;
  v103 = v21;
  v101 = v7;
  v32 = v129;
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 48);
  v34 = v130;
  v35 = v33(v29, 1, v130);
  v36 = v149;
  v102 = a3;
  v37 = v128;
  v38 = (uint64_t)v27;
  if (v35)
    goto LABEL_3;
  v56 = *(_QWORD *)v29;
  if (v29[8])
  {
    if (v29[8] == 1)
    {
      if (v114 != 1 || v56 != v126)
      {
LABEL_3:
        sub_23AA8A05C((uint64_t)v29, &qword_2542E72C0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v29, 1, 1, v34);
      }
    }
    else if (v56)
    {
      if (v114 != 2 || v126 != 1)
        goto LABEL_3;
    }
    else if (v114 != 2 || v126)
    {
      goto LABEL_3;
    }
  }
  else if ((_BYTE)v114 || (_DWORD)v56 != (_DWORD)v126)
  {
    goto LABEL_3;
  }
  v100 = 0;
  sub_23AA8EFC8((uint64_t)v29, (uint64_t)v27, &qword_2542E72C0);
  v39 = v33(v27, 1, v34);
  sub_23AA8A05C(v38, &qword_2542E72C0);
  v131 = v29;
  v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v33;
  if (v39 == 1)
  {
    v40 = v113;
    sub_23B15C1A8(*(_QWORD *)(v102 + 40), *(_BYTE *)(v102 + 48), *(_QWORD *)(v102 + 56), *(_QWORD *)(v102 + 64), v36, v113);
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2370);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41) == 1)
    {
      sub_23AA8A05C((uint64_t)v40, &qword_2542E2380);
      goto LABEL_7;
    }
    v57 = (uint64_t)&v40[*(int *)(v41 + 48)];
    v58 = v108;
    v59 = (uint64_t)&v108[*(int *)(v37 + 48)];
    v60 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
    v61 = v40;
    v62 = v110;
    v60(v108, v61, v110);
    sub_23AA94050(v57, v59, type metadata accessor for VFSItem);
    v63 = (uint64_t)&v58[*(int *)(v37 + 48)];
    v64 = v62;
    v65 = v132;
    v60(v111, v58, v64);
    sub_23AA937BC(v63, type metadata accessor for VFSItem);
    v113 = (char *)sub_23B1C59E4();
    v128 = v66;
    v67 = (uint64_t *)((char *)v65 + qword_2542EDF28);
    swift_beginAccess();
    if (*v67 == -1)
    {
      __break(1u);
    }
    else
    {
      ++*v67;
      v68 = (void *)swift_retain();
      v69 = objc_sync_enter(v68);
      v70 = v98;
      if (v69)
        goto LABEL_60;
      v71 = v65[20];
      swift_retain();
      v72 = objc_sync_exit(v65);
      v48 = (uint64_t)v103;
      if (v72)
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v65);
      swift_release();
      v73 = type metadata accessor for VFSFileTree(0);
      v74 = MEMORY[0x23B8615C4](v65 + 34);
      v75 = MEMORY[0x24BDAC7A8](v74);
      *(&v97 - 6) = (char *)v73;
      *(&v97 - 5) = (char *)v71;
      *(&v97 - 4) = (char *)v75;
      *(&v97 - 3) = (char *)v76;
      LOBYTE(v95) = 2;
      v96 = v149;
      v77 = (uint64_t)v107;
      v78 = v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v107, 1, 1, v99);
      v79 = v128;
      swift_bridgeObjectRetain();
      v80 = v79;
      v81 = v100;
      sub_23B0E2EA0(4294967294, (uint64_t)v113, v80, 2129920, 0, 0, v77, (uint64_t)sub_23ACFC288, (uint64_t)(&v97 - 8));
      if (v81)
      {
        sub_23AA8A05C(v77, qword_2542E5250);
        v82 = v81;
        LODWORD(v133) = sub_23B1C54F8();
        sub_23AB6CD48();
        v83 = sub_23B1C575C();

        v45 = v127;
        v84 = v126;
        if ((v83 & 1) == 0)
        {
          swift_release();
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v110);
          swift_bridgeObjectRelease();
          return sub_23AA8A05C((uint64_t)v131, &qword_2542E72C0);
        }
        v85 = (uint64_t)v97;
        v86 = v130;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56))(v97, 1, 1, v130);
        v87 = v85;

        swift_release();
        swift_unknownObjectRelease();
        v100 = 0;
        v46 = v122;
LABEL_36:
        (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v110);
        swift_bridgeObjectRelease();
        v90 = v87;
        v91 = (uint64_t)v131;
        sub_23AA8A660(v90, (uint64_t)v131, &qword_2542E72C0);
        v92 = v104(v91, 1, v86);
        v42 = v125;
        v43 = v124;
        v44 = v123;
        if (!v92)
        {
          v94 = *(_QWORD *)v131;
          if (v131[8])
          {
            if (v131[8] == 1)
            {
              if (v114 == 1 && v94 == v84)
                goto LABEL_38;
            }
            else if (v94)
            {
              if (v114 == 2 && v84 == 1)
                goto LABEL_38;
            }
            else if (v114 == 2 && !v84)
            {
              goto LABEL_38;
            }
          }
          else if (!(_BYTE)v114 && (_DWORD)v94 == (_DWORD)v84)
          {
            goto LABEL_38;
          }
        }
        v93 = (uint64_t)v131;
        sub_23AA8A05C((uint64_t)v131, &qword_2542E72C0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v93, 1, 1, v130);
LABEL_38:
        v47 = v115;
        goto LABEL_8;
      }
      v132 = (uint64_t *)&v97;
      v100 = 0;
      v65 = v105;
      sub_23AA8EFC8(v77, (uint64_t)v105, qword_2542E5250);
      v88 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v70 + 48))(v65, 1, v78);
      v45 = v127;
      v46 = v122;
      v84 = v126;
      if (v88 != 1)
      {
        v89 = (uint64_t)v65;
        v87 = (uint64_t)v97;
        sub_23AA724E8(v89, (uint64_t)v97, &qword_2542E72C0);
        sub_23AA8A05C(v77, qword_2542E5250);
        swift_release();
        swift_unknownObjectRelease();
        v86 = v130;
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_60:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v65);
  }
LABEL_7:
  v42 = v125;
  v43 = v124;
  v44 = v123;
  v45 = v127;
  v46 = v122;
  v47 = v115;
  v48 = (uint64_t)v103;
LABEL_8:
  v49 = v47 & 1;
  v50 = (uint64_t)v131;
  sub_23AA8EFC8((uint64_t)v131, v48, &qword_2542E72C0);
  if (v104(v48, 1, v130) == 1)
  {
    sub_23AA8A05C(v48, &qword_2542E72C0);
    v133 = v126;
    v134 = v114;
    v135 = v101;
    v136 = v116;
    v137 = v117;
    v138 = v49;
    v139 = v118;
    v140 = v119;
    v141 = v120;
    v142 = v121;
    v143 = v45;
    v144 = v44;
    v145 = v43;
    v146 = v42;
    v147 = 0;
    sub_23AAFC630((uint64_t)&v133);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    sub_23AA724E8((uint64_t)&v133, v51, (uint64_t *)&unk_2542E0950);
    sub_23B19DD20(v102);
    swift_willThrow();
    v52 = v50;
  }
  else
  {
    v53 = v48;
    v54 = v109;
    sub_23AA94050(v53, (uint64_t)v109, type metadata accessor for VFSItem);
    v148[0] = v101;
    v148[1] = v116;
    v148[2] = v117;
    v148[3] = v49;
    v148[4] = v118;
    v148[5] = v119;
    v148[6] = v120;
    v148[7] = v121;
    v148[8] = v45;
    v148[9] = v44;
    v148[10] = v43;
    v148[11] = v42;
    v55 = v100;
    sub_23B195C08(v148, v54, v46, v149);
    if (v55)
      sub_23AA937BC((uint64_t)v54, type metadata accessor for VFSItem);
    else
      sub_23AA94050((uint64_t)v54, v106, type metadata accessor for VFSItem);
    v52 = (uint64_t)v131;
  }
  return sub_23AA8A05C(v52, &qword_2542E72C0);
}

uint64_t sub_23B165070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t *v23;
  unsigned __int8 *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  unsigned __int8 v38;
  int v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _BOOL4 v45;
  uint64_t v46;
  _BYTE v48[12];
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _BYTE *v63;
  BOOL v64;
  _BYTE v65[248];
  _QWORD v66[5];
  _QWORD v67[4];
  uint64_t v68;
  _DWORD v69[8];
  uint64_t v70;
  _BYTE v71[256];
  _BYTE *v72;

  v62 = a6;
  v60 = a4;
  sub_23AA724E8(a3, (uint64_t)v66, (uint64_t *)&unk_2542E3318);
  v51 = v66[2];
  v52 = v66[0];
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v10);
  v72 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (int *)type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for ItemMetadata();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v63 = &v48[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = &v48[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v22 = &v48[-v21];
  v23 = (uint64_t *)(a1 + 16);
  v24 = (unsigned __int8 *)(a1 + 24);
  if ((a5 & 2) != 0)
  {
    v23 = (uint64_t *)a2;
    v24 = (unsigned __int8 *)(a2 + 8);
  }
  v59 = *v24;
  v58 = *v23;
  sub_23AA724E8(a3, (uint64_t)v69, (uint64_t *)&unk_2542E3318);
  v53 = v70;
  v56 = v69[4];
  v57 = a5;
  if (*(_BYTE *)(a1 + v12[7]) == 2 && (a5 & 8) != 0)
  {
    sub_23AA724E8(a3, (uint64_t)v67, (uint64_t *)&unk_2542E3318);
    if (v68 == 1)
    {
      v55 = *(_QWORD *)a1;
      v54 = *(unsigned __int8 *)(a1 + 8);
LABEL_8:
      sub_23AA907B0(a1, (uint64_t)v14, type metadata accessor for VFSItem);
      v25 = &v14[v12[9]];
      v52 = *(_QWORD *)v25;
      LODWORD(v51) = *((_DWORD *)v25 + 2);
      v50 = *((_QWORD *)v25 + 2);
      v49 = v25[24];
      swift_bridgeObjectRetain();
      sub_23AA937BC((uint64_t)v14, type metadata accessor for VFSItem);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_11;
    }
    v54 = 1;
    v55 = v67[0];
  }
  else
  {
    v55 = *(_QWORD *)a1;
    v54 = *(unsigned __int8 *)(a1 + 8);
    sub_23AA724E8(a3, (uint64_t)v67, (uint64_t *)&unk_2542E3318);
    if (v68 == 1)
      goto LABEL_8;
  }
  v26 = HIDWORD(v51);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  sub_23AA907B0(a2 + *(int *)(v27 + 40), (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA907B0((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v52 = sub_23AA9BD7C(v52, v26, (uint64_t)v20);
  LODWORD(v51) = v28;
  v50 = v29;
  LOBYTE(v26) = v30;
  sub_23AA937BC((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v49 = v26 & 1;
  sub_23AA907B0(a1, (uint64_t)v14, type metadata accessor for VFSItem);
  sub_23AA937BC((uint64_t)v14, type metadata accessor for VFSItem);
LABEL_11:
  v31 = (uint64_t *)(a2 + 16);
  v32 = (uint64_t *)(a2 + 24);
  if ((v57 & 1) == 0)
  {
    v32 = (uint64_t *)(a1 + 40);
    v31 = (uint64_t *)(a1 + 32);
  }
  v33 = *v32;
  v34 = *v31;
  swift_bridgeObjectRetain();
  v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  sub_23AA907B0(a2 + *(int *)(v35 + 40), (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v36 = (unsigned int *)(a1 + v12[11]);
  v37 = *v36;
  v38 = *((_BYTE *)v36 + 4);
  v39 = *(_DWORD *)(a1 + v12[10]);
  sub_23AA8EFC8(v60, (uint64_t)v72, (uint64_t *)&unk_2542E6740);
  v40 = v61;
  v41 = (void *)swift_retain();
  if (objc_sync_enter(v41))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v40);
  v60 = v33;
  v42 = v40[20];
  swift_retain();
  if (objc_sync_exit(v40))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v40);
  v43 = v56;
  v45 = v53 == 1 || (_DWORD)v56 == 0;
  swift_release();
  sub_23AAF8E48((uint64_t)v65);
  sub_23AA724E8((uint64_t)v65, (uint64_t)v71, &qword_2542E5050);
  v64 = v45;
  if (v45)
    v46 = 0;
  else
    v46 = v43;
  return sub_23AA8F900(v55, v54, v58, v59, v52, v51, v50, v49, v62, v34, v60, (uint64_t)v63, v37 | ((unint64_t)v38 << 32), v39, (uint64_t)v72, v46 | ((unint64_t)v45 << 32), v42, (uint64_t)v71);
}

uint64_t sub_23B165560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, unsigned int a7, unint64_t a8, uint64_t a9, void (*a10)(_QWORD), uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  _OWORD *v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(_QWORD);
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  char *v112;
  uint64_t *v113;
  uint64_t v114;
  void *v115;
  unint64_t v116;
  uint64_t v117;
  void (*v118)(void);
  unint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  BOOL v139;
  void (*v140)(unint64_t);
  unint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  char *v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  double v164;
  id v165;
  char *v166;
  uint64_t v167;
  NSObject *v168;
  os_log_type_t v169;
  uint64_t v170;
  uint8_t *v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  void *v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  void (*v180)(void);
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char v187;
  _QWORD *v188;
  void (*v189)(_QWORD *);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unsigned int v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(unint64_t);
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  void *v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  void (*v213)(uint64_t);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  void (*v224)(void);
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  unsigned __int8 *v229;
  int v230;
  uint64_t v231;
  char **v232;
  unint64_t *v233;
  unint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  char *v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  char v270;
  uint64_t *v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  id v287;
  uint64_t v288;
  uint64_t v289;
  void (*v290)(char *, uint64_t, uint64_t);
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  void (*v296)(char *, uint64_t, uint64_t);
  uint64_t v297;
  NSObject *v298;
  os_log_type_t v299;
  int v300;
  _BOOL4 v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void *v309;
  void (*v310)(char *, uint64_t, uint64_t);
  id v311;
  uint64_t v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  void (*v316)(char *, uint64_t);
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  unint64_t v324;
  os_log_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  void (*v331)(char *, uint64_t, uint64_t);
  uint64_t v332;
  char *v333;
  uint64_t v334;
  void (*v335)(char *, uint64_t);
  void *v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  char v340;
  void *v341;
  void *v342;
  id v343;
  void *v344;
  uint64_t v345;
  uint64_t v346;
  id v347;
  void *v348;
  void *v349;
  id v350;
  char v351;
  void *v352;
  char *v353;
  uint64_t v354;
  void *v355;
  id v356;
  void *v357;
  void *v358;
  void *v359;
  char *v360;
  uint64_t v361;
  void *v362;
  id v363;
  uint64_t v364;
  void *v365;
  void *v366;
  char *v367;
  uint64_t v368;
  void *v369;
  id v370;
  uint64_t v371;
  void *v372;
  unint64_t v373;
  void *v374;
  id v375;
  char *v376;
  char *v377;
  uint64_t v378;
  void (*v379)(void);
  uint64_t v380;
  void (*v381)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v382;
  id v383;
  char *v384;
  uint64_t v385;
  void (*v386)(void);
  uint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  char v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  char *v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  unsigned int v406;
  void (*v407)(char *, uint64_t);
  void *v408;
  id v409;
  unint64_t v410;
  uint64_t v411;
  unint64_t v412;
  unint64_t v413;
  uint64_t v414;
  unint64_t v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  unint64_t v420;
  void (*v421)(_QWORD);
  uint64_t v422;
  _BYTE *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t *v426;
  _OWORD *v427;
  unint64_t v428;
  _QWORD *v429;
  void *v430;
  uint64_t v431;
  char *v432;
  char *v433;
  char *v434;
  uint64_t v435;
  char *v436;
  char *v437;
  char *v438;
  char *v439;
  char *v440;
  char *v441;
  char *v442;
  uint64_t v443;
  uint64_t v444;
  char *v445;
  char *v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  char *v453;
  uint64_t v454;
  os_log_t v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  int v461;
  _BYTE *v462;
  uint64_t v463;
  uint64_t v464;
  char *v465;
  uint64_t v466;
  char *v467;
  uint64_t v468;
  void (*v469)(void);
  void (*v470)(char *, uint64_t, uint64_t);
  char *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  char *v478;
  __int128 v479;
  __int128 v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  char *v485;
  uint64_t v486;
  unint64_t v487;
  unint64_t v488;
  uint64_t v489;
  uint64_t v490;
  unsigned int v491;
  uint64_t v492;
  unint64_t v493;
  void (*v494)(_QWORD);
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  char v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  _QWORD v508[4];
  __int128 v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  __int128 v513;
  uint64_t v514;

  v493 = a8;
  v491 = a7;
  v489 = a6;
  v488 = a4;
  v494 = a10;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v450 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v478 = (char *)&v425 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v459 = (uint64_t)&v425 - v21;
  v451 = v22;
  MEMORY[0x24BDAC7A8](v20);
  v446 = (char *)&v425 - v23;
  v466 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2370);
  v455 = *(os_log_t *)(v466 - 8);
  v24 = MEMORY[0x24BDAC7A8](v466);
  v441 = (char *)&v425 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v440 = (char *)&v425 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v444 = (uint64_t)&v425 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v439 = (char *)&v425 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v443 = (uint64_t)&v425 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v438 = (char *)&v425 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v454 = (uint64_t)&v425 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v448 = *(_QWORD *)(v37 - 8);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v458 = (uint64_t)&v425 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v449 = v39;
  MEMORY[0x24BDAC7A8](v38);
  v468 = (uint64_t)&v425 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2380);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v453 = (char *)&v425 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v442 = (char *)&v425 - v44;
  v435 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2388);
  MEMORY[0x24BDAC7A8](v435);
  v434 = (char *)&v425 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v47 = MEMORY[0x24BDAC7A8](v46);
  v437 = (char *)&v425 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v447 = (char *)&v425 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v425 - v51;
  v53 = sub_23B1C5E4C();
  v463 = *(_QWORD *)(v53 - 8);
  v464 = v53;
  v54 = MEMORY[0x24BDAC7A8](v53);
  v452 = (char *)&v425 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54);
  v467 = (char *)&v425 - v56;
  v486 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  MEMORY[0x24BDAC7A8](v486);
  v487 = (unint64_t)&v425 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v475 = type metadata accessor for VFSItem(0);
  v481 = *(_QWORD *)(v475 - 8);
  v58 = MEMORY[0x24BDAC7A8](v475);
  v477 = (uint64_t)&v425 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = MEMORY[0x24BDAC7A8](v58);
  v470 = (char *)&v425 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v457 = (uint64_t)&v425 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v469 = (void (*)(void))((char *)&v425 - v65);
  v66 = MEMORY[0x24BDAC7A8](v64);
  v483 = (uint64_t)&v425 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v70 = (char *)&v425 - v69;
  v482 = v71;
  MEMORY[0x24BDAC7A8](v68);
  v492 = (uint64_t)&v425 - v72;
  v73 = sub_23B1C5A08();
  v74 = *(_QWORD *)(v73 - 8);
  v473 = v73;
  v474 = v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  v433 = (char *)&v425 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = MEMORY[0x24BDAC7A8](v75);
  v432 = (char *)&v425 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  v436 = (char *)&v425 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  v465 = (char *)&v425 - v82;
  v83 = MEMORY[0x24BDAC7A8](v81);
  v456 = (char *)&v425 - v84;
  MEMORY[0x24BDAC7A8](v83);
  v471 = (char *)&v425 - v85;
  v86 = swift_allocObject();
  *(_QWORD *)&v480 = a1;
  *(_QWORD *)(v86 + 16) = a1;
  *(_QWORD *)(v86 + 24) = a2;
  v472 = v17;
  v87 = *(int *)(v17 + 40);
  v484 = a3;
  v88 = (_BYTE *)(a3 + v87);
  v476 = type metadata accessor for ItemMetadata();
  v89 = *(int *)(v476 + 108);
  v462 = v88;
  v461 = v88[v89];
  type metadata accessor for VFSStagedContext();
  v90 = swift_dynamicCastClass();
  if (v90)
  {
    v495 = v90;
    swift_retain();
  }
  else
  {
    v495 = 0;
  }
  v445 = v52;
  v460 = a9;
  v91 = (uint64_t *)(a9 + 16);
  v92 = (_OWORD *)swift_allocObject();
  v93 = a5[3];
  v92[3] = a5[2];
  v92[4] = v93;
  v94 = a5[5];
  v92[5] = a5[4];
  v92[6] = v94;
  v95 = a5[1];
  v92[1] = *a5;
  v92[2] = v95;
  if ((v493 & 0x40) != 0)
  {
    swift_beginAccess();
    if ((*v91 & 0x1000) == 0)
      *v91 |= 0x1000uLL;
  }
  swift_beginAccess();
  v490 = a11;
  v96 = *v91;
  *(_QWORD *)&v479 = a2;
  swift_retain();
  sub_23B19DD20((uint64_t)a5);
  v97 = v489;
  v98 = v96;
  LOBYTE(v96) = v491;
  v99 = v494;
  sub_23B164364(v489, v491, (uint64_t)a5, a11 & 0xFFFFFFFFFFFFFFEFLL, v98, (uint64_t)v70);
  v430 = 0;
  v426 = (uint64_t *)(a9 + 16);
  v429 = (_QWORD *)a12;
  v427 = v92 + 1;
  v100 = v492;
  sub_23AA94050((uint64_t)v70, v492, type metadata accessor for VFSItem);
  v101 = v483;
  sub_23AA907B0(v100, v483, type metadata accessor for VFSItem);
  v102 = (*(unsigned __int8 *)(v481 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v481 + 80);
  v425 = *(unsigned __int8 *)(v481 + 80);
  v485 = (char *)v92;
  v428 = (v102 + v482 + 7) & 0xFFFFFFFFFFFFFFF8;
  v431 = v86;
  v103 = (v102 + v482 + 23) & 0xFFFFFFFFFFFFFFF8;
  v104 = (v103 + 15) & 0xFFFFFFFFFFFFFFF8;
  v105 = (_QWORD *)swift_allocObject();
  v105[2] = v495;
  v105[3] = v99;
  v106 = v429;
  sub_23AA724E8((uint64_t)v429, (uint64_t)(v105 + 4), qword_2542E48C0);
  v105[11] = v493;
  sub_23AA94050(v101, (uint64_t)v105 + v102, type metadata accessor for VFSItem);
  v107 = (char *)v105 + v428;
  v108 = v485;
  *(_QWORD *)v107 = v97;
  v107[8] = v96;
  *(_QWORD *)((char *)v105 + v103) = v108;
  v109 = v431;
  v110 = (_QWORD *)((char *)v105 + v104);
  v111 = v479;
  *v110 = v480;
  v110[1] = v111;
  *(_QWORD *)(v109 + 16) = sub_23B19EC50;
  *(_QWORD *)(v109 + 24) = v105;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AC25990(v106, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  v112 = v108;
  swift_retain();
  swift_release();
  if ((v490 & 1) != 0)
  {
    v114 = v484;
    v115 = v430;
    sub_23AA92930(0x742D657461647075, 0xED00007465677261, *(_QWORD *)(v484 + 16), *(_QWORD *)(v484 + 24));
    if (v115)
    {
      v113 = (uint64_t *)v492;
      goto LABEL_19;
    }
    v113 = (uint64_t *)v492;
    v120 = *(_QWORD *)(v492 + 32);
    v119 = *(_QWORD *)(v492 + 40);
    swift_bridgeObjectRetain();
    sub_23AA92930(0x732D657461647075, 0xED0000656372756FLL, v120, v119);
    swift_bridgeObjectRelease();
  }
  else
  {
    v113 = (uint64_t *)v492;
    v114 = v484;
    v115 = v430;
  }
  v117 = v113[4];
  v116 = v113[5];
  swift_bridgeObjectRetain();
  sub_23AA92930(0x657461647075, 0xE600000000000000, v117, v116);
  if (!v115)
  {
    swift_bridgeObjectRelease();
    v118 = v469;
    sub_23AA907B0((uint64_t)v113, (uint64_t)v469, type metadata accessor for VFSItem);
    if ((v490 & 0x10) != 0)
    {
      v121 = *(_DWORD *)((char *)v118 + *(int *)(v475 + 36) + 8);
      swift_bridgeObjectRetain();
      sub_23AA937BC((uint64_t)v118, type metadata accessor for VFSItem);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (!v121)
      {
        swift_beginAccess();
        *((_DWORD *)v112 + 6) = 0;
        *((_QWORD *)v112 + 4) = 0;
        v112[40] = 1;
      }
    }
    else
    {
      sub_23AA937BC((uint64_t)v118, type metadata accessor for VFSItem);
    }
    swift_beginAccess();
    v122 = *((unsigned int *)v112 + 6);
    v123 = *((_QWORD *)v112 + 4);
    v124 = v112[40];
    v125 = v112[64];
    v126 = *((_QWORD *)v112 + 9);
    v127 = *((_QWORD *)v112 + 10);
    v128 = *((_QWORD *)v112 + 13);
    v508[0] = *((_QWORD *)v112 + 2);
    v508[1] = v122;
    v508[2] = v123;
    v508[3] = v124;
    v480 = *((_OWORD *)v112 + 3);
    v509 = v480;
    v510 = v125;
    v511 = v126;
    v512 = v127;
    v479 = *(_OWORD *)(v112 + 88);
    v513 = v479;
    v514 = v128;
    v129 = v426;
    swift_beginAccess();
    v130 = *v129;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23B195C08(v508, v113, v490, v130);
    *(_QWORD *)&v480 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v157 = (uint64_t)v494;
    v158 = (id)v491;
    v159 = v475;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  v132 = v477;
  v131 = (uint64_t)v478;
  sub_23AA907B0((uint64_t)v113, v477, type metadata accessor for VFSItem);
  sub_23AA8EFC8(v114, v131, (uint64_t *)&unk_2542E1DF0);
  if ((v490 & 0x10) == 0)
  {
    sub_23AA8A05C(v131, (uint64_t *)&unk_2542E1DF0);
    sub_23AA937BC(v132, type metadata accessor for VFSItem);
LABEL_22:
    v140 = *(void (**)(unint64_t))(v109 + 16);
    v141 = v487;
    *(_QWORD *)v487 = v115;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v142 = v115;
    v140(v141);
    swift_release();

    swift_release();
    v143 = v141;
    goto LABEL_23;
  }
  *(_QWORD *)&v480 = 0;
  v133 = v475;
  v134 = v132 + *(int *)(v475 + 28);
  v135 = v132;
  v136 = v476;
  v137 = v109;
  v138 = *(unsigned __int8 *)(v134 + *(int *)(v476 + 80));
  sub_23AA937BC(v135, type metadata accessor for VFSItem);
  LODWORD(v136) = *(unsigned __int8 *)(v131 + *(int *)(v472 + 40) + *(int *)(v136 + 80));
  sub_23AA8A05C(v131, (uint64_t *)&unk_2542E1DF0);
  v139 = v138 == (_DWORD)v136;
  v109 = v137;
  if (!v139)
    goto LABEL_22;

  v146 = (char *)v113 + *(int *)(v133 + 36);
  v147 = *(_QWORD *)v146;
  v148 = *((_DWORD *)v146 + 2);
  v149 = *((_QWORD *)v146 + 2);
  v150 = v146[24];
  v151 = v113[2];
  v152 = *(_BYTE *)(v492 + 24);
  v153 = *(_QWORD *)(v492 + 32);
  v154 = *(_QWORD *)(v492 + 40);
  swift_beginAccess();
  v155 = *((_QWORD *)v485 + 11);
  v478 = (char *)*((_QWORD *)v485 + 6);
  *(_QWORD *)&v479 = v155;
  *((_QWORD *)v485 + 2) = v147;
  *((_DWORD *)v485 + 6) = v148;
  v109 = v431;
  *((_QWORD *)v485 + 4) = v149;
  v485[40] = v150;
  v156 = v485;
  *((_QWORD *)v485 + 6) = 0;
  *((_QWORD *)v156 + 7) = v151;
  v156[64] = v152;
  v113 = (uint64_t *)v492;
  *((_QWORD *)v156 + 9) = v153;
  *((_QWORD *)v156 + 10) = v154;
  *((_QWORD *)v156 + 11) = 0;
  *((_QWORD *)v156 + 12) = 0;
  v112 = v156;
  *((_QWORD *)v156 + 13) = 0;
  v159 = v133;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v157 = (uint64_t)v494;
  v158 = (id)v491;
LABEL_27:
  swift_bridgeObjectRelease();
  v160 = *(int *)(v159 + 28);
  v161 = v474;
  v162 = (uint64_t)v470;
  if ((v490 & 0x10000000000) == 0 || qword_23B1E7D18[*((char *)v113 + v160)] == qword_23B1E7D18[(char)*v462])
  {
LABEL_29:
    v163 = (uint64_t)v113 + v160;
    sub_23B1C5B94();
    if ((~*(_QWORD *)&v164 & 0x7FF0000000000000) != 0)
    {
      if (v164 > -9.22337204e18)
      {
        if (v164 < 9.22337204e18)
        {
          if (fpfs_is_busy_date())
          {
            v165 = (id)fpfs_current_or_default_log();
            v166 = v467;
            sub_23B1C5E58();
            v167 = v457;
            sub_23AA907B0((uint64_t)v113, v457, type metadata accessor for VFSItem);
            v168 = sub_23B1C5E40();
            v169 = sub_23B1C6A94();
            if (os_log_type_enabled(v168, v169))
            {
              v170 = v167;
              v171 = (uint8_t *)swift_slowAlloc();
              v172 = swift_slowAlloc();
              v497 = v172;
              *(_DWORD *)v171 = 136446210;
              v173 = sub_23AC3E1F8();
              v506 = sub_23AABEC68(v173, v174, &v497);
              sub_23B1C6CBC();
              swift_bridgeObjectRelease();
              sub_23AA937BC(v170, type metadata accessor for VFSItem);
              _os_log_impl(&dword_23AA66000, v168, v169, "🏗 denying update on busy file %{public}s", v171, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B8614BC](v172, -1, -1);
              MEMORY[0x23B8614BC](v171, -1, -1);

              (*(void (**)(char *, uint64_t))(v463 + 8))(v467, v464);
            }
            else
            {
              sub_23AA937BC(v167, type metadata accessor for VFSItem);

              (*(void (**)(char *, uint64_t))(v463 + 8))(v166, v464);
            }
            v188 = (_QWORD *)v487;
            v189 = *(void (**)(_QWORD *))(v109 + 16);
            sub_23B19F4AC((uint64_t)&v497);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
            sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
            v190 = swift_allocError();
            sub_23AA724E8((uint64_t)&v497, v191, (uint64_t *)&unk_2542E0950);
            *v188 = v190;
            swift_storeEnumTagMultiPayload();
            swift_retain();
            v189(v188);
            swift_release();
            swift_release();
            sub_23AA8A05C((uint64_t)v188, qword_2542E3690);
            v144 = v492;
            goto LABEL_24;
          }
          sub_23AA907B0((uint64_t)v113, v162, type metadata accessor for VFSItem);
          v175 = (void *)swift_retain();
          v176 = objc_sync_enter(v175);
          if (v158 != 2 || v489)
          {
            if (v176)
              goto LABEL_164;
            swift_retain();
            if (objc_sync_exit((id)v157))
              goto LABEL_165;
            swift_release();
            v181 = v445;
            v182 = (uint64_t)v470;
            sub_23AC380C8(v445);
            swift_release();
            v177 = v473;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v181, 1, v473) == 1)
            {
              __break(1u);
              goto LABEL_161;
            }
            sub_23AA937BC(v182, type metadata accessor for VFSItem);
            v180 = *(void (**)(void))(v161 + 32);
            v179 = v456;
            v180();
          }
          else
          {
            v177 = v473;
            if (v176)
              goto LABEL_164;
            v178 = *(_QWORD *)(v157 + 160);
            swift_retain();
            if (objc_sync_exit((id)v157))
              goto LABEL_165;
            swift_release();
            sub_23AA937BC(v162, type metadata accessor for VFSItem);
            v179 = v456;
            (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v456, v178 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v177);
            swift_release();
            v180 = *(void (**)(void))(v161 + 32);
          }
          v469 = v180;
          ((void (*)(char *, char *, uint64_t))v180)(v471, v179, v177);
          v183 = v495;
          if (v495)
            v461 = *(unsigned __int8 *)(v495 + 56);
          v477 = swift_allocBox();
          v184 = *(char **)(v161 + 16);
          v467 = v185;
          v470 = v184;
          ((void (*)(char *, char *, uint64_t))v184)(v185, v471, v177);
          v507 = MEMORY[0x24BEE4AF8];
          v478 = (char *)swift_allocObject();
          *((_QWORD *)v478 + 2) = 0;
          *(_QWORD *)&v479 = swift_allocObject();
          *(_QWORD *)(v479 + 16) = 0;
          v462 = (_BYTE *)v163;
          if ((v493 & 0x10) == 0)
          {
            if ((sub_23B1962B8((uint64_t)v113, v484, v490) & 1) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v481 + 56))(v468, 1, 1, v475);
              LODWORD(v196) = 0;
              LODWORD(v457) = 0;
              v197 = (uint64_t)v446;
              v162 = (uint64_t)v447;
              v112 = v478;
              goto LABEL_126;
            }
            LODWORD(v457) = 1;
            v186 = v484;
            v187 = v490;
LABEL_77:
            v228 = v113 + 2;
            v229 = (unsigned __int8 *)(v113 + 3);
            if ((v187 & 2) != 0)
            {
              v228 = (uint64_t *)v186;
              v229 = (unsigned __int8 *)(v186 + 8);
            }
            v230 = *v229;
            v231 = *v228;
            v232 = (char **)(v186 + 16);
            v233 = (unint64_t *)(v186 + 24);
            if ((v187 & 1) == 0)
            {
              v233 = (unint64_t *)(v113 + 5);
              v232 = (char **)(v113 + 4);
            }
            v234 = *v233;
            v235 = *v232;
            swift_bridgeObjectRetain();
            LODWORD(v456) = v230;
            if (v230 != 2)
            {
              v236 = v231;
              goto LABEL_108;
            }
            v236 = v231;
            if (v231)
              goto LABEL_108;
            v445 = v235;
            v237 = qword_2542E5360;
            swift_bridgeObjectRetain();
            if (v237 != -1)
              swift_once();
            v238 = (char *)qword_2542EDE40;
            v239 = *(_QWORD *)algn_2542EDE48;
            swift_bridgeObjectRetain();
            v240 = sub_23AAAE580((uint64_t)v445, v234);
            v242 = v241;
            swift_bridgeObjectRelease();
            v488 = v234;
            if (v242)
            {
              if (v240 == 12565487 && v242 == 0xA300000000000000)
              {
                swift_bridgeObjectRelease();
LABEL_91:
                swift_bridgeObjectRetain();
                v244 = v445;
                v245 = sub_23B1C64B8();
                v246 = sub_23AA8A1BC(v245, (uint64_t)v244, v234);
                v248 = v247;
                v250 = v249;
                v252 = v251;
                swift_bridgeObjectRelease();
                v253 = v248;
                v236 = 0;
                v442 = (char *)MEMORY[0x23B85ED8C](v246, v253, v250, v252);
                v234 = v254;
                swift_bridgeObjectRelease();
                goto LABEL_93;
              }
              v243 = sub_23B1C7388();
              swift_bridgeObjectRelease();
              if ((v243 & 1) != 0)
                goto LABEL_91;
            }
            swift_bridgeObjectRetain();
            v442 = v445;
LABEL_93:
            swift_bridgeObjectRetain();
            v255 = sub_23AAAE580((uint64_t)v238, v239);
            v257 = v256;
            swift_bridgeObjectRelease();
            if (v257)
            {
              if (v255 == 12565487 && v257 == 0xA300000000000000)
              {
                swift_bridgeObjectRelease();
LABEL_98:
                swift_bridgeObjectRetain();
                v259 = sub_23B1C64B8();
                v260 = sub_23AA8A1BC(v259, (uint64_t)v238, v239);
                v262 = v261;
                v263 = v236;
                v265 = v264;
                v267 = v266;
                swift_bridgeObjectRelease();
                v268 = v265;
                v236 = v263;
                v238 = (char *)MEMORY[0x23B85ED8C](v260, v262, v268, v267);
                v239 = v269;
                swift_bridgeObjectRelease();
LABEL_100:
                v113 = (uint64_t *)v492;
                if (v442 == v238 && v234 == v239)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  v109 = v431;
                }
                else
                {
                  v270 = sub_23B1C7388();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v109 = v431;
                  if ((v270 & 1) == 0)
                  {
                    v234 = v488;
                    v235 = v445;
                    goto LABEL_108;
                  }
                }
                if (qword_2542DE278 != -1)
                  swift_once();
                v235 = (char *)qword_2542EDC68;
                v234 = unk_2542EDC70;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_108:
                v271 = v426;
                swift_beginAccess();
                v272 = *v271;
                v273 = v453;
                v274 = v236;
                v275 = v236;
                v276 = (char)v456;
                sub_23B15C1A8(v274, (char)v456, (uint64_t)v235, v234, v272, v453);
                v277 = v466;
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v455[6].isa)(v273, 1, v466) == 1)
                {
                  swift_bridgeObjectRelease();
                  sub_23AA8A05C((uint64_t)v273, &qword_2542E2380);
                  v494 = *(void (**)(_QWORD))(v109 + 16);
                  v497 = v275;
                  v498 = v276;
                  v499 = 0u;
                  v500 = 0u;
                  v501 = 0u;
                  v502 = 0u;
                  v503 = 0u;
                  v504 = 0u;
                  v505 = 0;
                  sub_23AAFC630((uint64_t)&v497);
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
                  sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
                  v278 = swift_allocError();
                  sub_23AA724E8((uint64_t)&v497, v279, (uint64_t *)&unk_2542E0950);
                  v280 = v487;
                  *(_QWORD *)v487 = v278;
                  swift_storeEnumTagMultiPayload();
                  swift_retain();
                  v494(v280);
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  sub_23AA8A05C(v280, qword_2542E3690);
                  v217 = (uint64_t)v113;
                  goto LABEL_110;
                }
                v488 = v234;
                v281 = *(int *)(v277 + 48);
                v282 = v454;
                v283 = v454 + v281;
                v284 = v277;
                v285 = (uint64_t)&v273[v281];
                v286 = v473;
                ((void (*)(uint64_t, char *, uint64_t))v469)(v454, v273, v473);
                sub_23AA94050(v285, v283, type metadata accessor for VFSItem);
                v287 = (id)fpfs_current_or_default_log();
                sub_23B1C5E58();
                v288 = (uint64_t)v438;
                v289 = (uint64_t)&v438[*(int *)(v284 + 48)];
                v290 = (void (*)(char *, uint64_t, uint64_t))v470;
                ((void (*)(char *, uint64_t, uint64_t))v470)(v438, v282, v286);
                sub_23AA907B0(v283, v289, type metadata accessor for VFSItem);
                v291 = v443;
                sub_23AA724E8(v288, v443, (uint64_t *)&unk_2542E2370);
                v292 = *(int *)(v284 + 48);
                v293 = (uint64_t)v439;
                v294 = (uint64_t)&v439[v292];
                v295 = v282;
                v296 = v290;
                v290(v439, v295, v286);
                v487 = v283;
                sub_23AA907B0(v283, v294, type metadata accessor for VFSItem);
                v297 = v444;
                sub_23AA724E8(v293, v444, (uint64_t *)&unk_2542E2370);
                v298 = sub_23B1C5E40();
                v299 = sub_23B1C6A94();
                v300 = v299;
                v301 = os_log_type_enabled(v298, v299);
                v302 = v474;
                if (v301)
                {
                  v303 = swift_slowAlloc();
                  v486 = swift_slowAlloc();
                  v497 = v486;
                  *(_DWORD *)v303 = 136315394;
                  v453 = (char *)(v303 + 4);
                  v304 = *(int *)(v466 + 48);
                  v455 = v298;
                  v305 = v440;
                  v306 = (uint64_t)&v440[v304];
                  LODWORD(v456) = v300;
                  v307 = v291 + v304;
                  v308 = v473;
                  v296(v440, v291, v473);
                  sub_23AA907B0(v307, v306, type metadata accessor for VFSItem);
                  v309 = (void *)sub_23B1C5954();
                  v310 = v296;
                  v311 = objc_msgSend(v309, sel_fp_shortDescription);

                  v312 = sub_23B1C63E0();
                  v314 = v313;

                  v315 = v297;
                  v316 = *(void (**)(char *, uint64_t))(v474 + 8);
                  v316(v305, v308);
                  sub_23AA937BC(v306, type metadata accessor for VFSItem);
                  v496 = sub_23AABEC68(v312, v314, &v497);
                  sub_23B1C6CBC();
                  swift_bridgeObjectRelease();
                  sub_23AA8A05C(v443, (uint64_t *)&unk_2542E2370);
                  *(_WORD *)(v303 + 12) = 2080;
                  v453 = (char *)(v303 + 14);
                  v317 = *(int *)(v466 + 48);
                  v318 = (uint64_t)&v305[v317];
                  v319 = v315;
                  v320 = v315 + v317;
                  v310(v305, v319, v308);
                  sub_23AA907B0(v320, v318, type metadata accessor for VFSItem);
                  v321 = v483;
                  sub_23AA94050(v318, v483, type metadata accessor for VFSItem);
                  v316(v305, v308);
                  v322 = sub_23AC3E1F8();
                  v324 = v323;
                  sub_23AA937BC(v321, type metadata accessor for VFSItem);
                  v496 = sub_23AABEC68(v322, v324, &v497);
                  sub_23B1C6CBC();
                  swift_bridgeObjectRelease();
                  sub_23AA8A05C(v444, (uint64_t *)&unk_2542E2370);
                  v325 = v455;
                  _os_log_impl(&dword_23AA66000, v455, (os_log_type_t)v456, "FSTree update to new url %s new parent %s", (uint8_t *)v303, 0x16u);
                  v326 = v486;
                  swift_arrayDestroy();
                  MEMORY[0x23B8614BC](v326, -1, -1);
                  v327 = v303;
                  v302 = v474;
                  MEMORY[0x23B8614BC](v327, -1, -1);

                  (*(void (**)(char *, uint64_t))(v463 + 8))(v452, v464);
                }
                else
                {
                  sub_23AA8A05C(v291, (uint64_t *)&unk_2542E2370);
                  sub_23AA8A05C(v297, (uint64_t *)&unk_2542E2370);

                  (*(void (**)(char *, uint64_t))(v463 + 8))(v452, v464);
                  v305 = v440;
                  v308 = v473;
                }
                v328 = v466;
                v329 = (uint64_t)&v305[*(int *)(v466 + 48)];
                v330 = v454;
                v331 = (void (*)(char *, uint64_t, uint64_t))v470;
                ((void (*)(char *, uint64_t, uint64_t))v470)(v305, v454, v308);
                v332 = v487;
                sub_23AA907B0(v487, v329, type metadata accessor for VFSItem);
                (*(void (**)(char *, char *, uint64_t))(v302 + 40))(v467, v305, v308);
                sub_23AA937BC(v329, type metadata accessor for VFSItem);
                v333 = v441;
                v334 = (uint64_t)&v441[*(int *)(v328 + 48)];
                v331(v441, v330, v308);
                sub_23AA907B0(v332, v334, type metadata accessor for VFSItem);
                sub_23B1C59E4();
                v335 = *(void (**)(char *, uint64_t))(v302 + 8);
                v335(v333, v308);
                v157 = (uint64_t)v494;
                v336 = (void *)swift_retain();
                if (objc_sync_enter(v336))
LABEL_164:
                  sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v157);
                v337 = *(_QWORD *)(v157 + 160);
                swift_retain();
                if (!objc_sync_exit((id)v157))
                {
                  swift_release();
                  v338 = v465;
                  v339 = v473;
                  ((void (*)(char *, uint64_t, uint64_t))v470)(v465, v337 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, v473);
                  swift_release();
                  sub_23B1C59E4();
                  v335(v338, v339);
                  v340 = sub_23B1C656C();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_23AA937BC(v334, type metadata accessor for VFSItem);
                  v341 = (void *)objc_opt_self();
                  v342 = (void *)sub_23B1C5954();
                  v162 = (uint64_t)v447;
                  if ((v340 & 1) != 0)
                  {
                    v343 = objc_msgSend(v341, sel_writingIntentWithURL_options_, v342, 3);

                    v112 = v478;
                    v344 = (void *)*((_QWORD *)v478 + 2);
                    *((_QWORD *)v478 + 2) = v343;

                    v161 = v474;
                    v345 = v468;
                    if (*v462)
                    {
                      v346 = 1;
                    }
                    else
                    {
                      sub_23AA907B0(v492, v468, type metadata accessor for VFSItem);
                      v346 = 0;
                    }
                    v157 = (uint64_t)v494;
                  }
                  else
                  {
                    v347 = objc_msgSend(v341, sel_writingIntentWithURL_options_, v342, 2);

                    v112 = v478;
                    v348 = (void *)*((_QWORD *)v478 + 2);
                    *((_QWORD *)v478 + 2) = v347;

                    v346 = 1;
                    v157 = (uint64_t)v494;
                    v161 = v474;
                    v345 = v468;
                  }
                  v197 = (uint64_t)v446;
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v481 + 56))(v345, v346, 1, v475);
                  v349 = (void *)*((_QWORD *)v112 + 2);
                  if (v349)
                  {
                    v350 = v349;
                    MEMORY[0x23B85F008]();
                    if (*(_QWORD *)((v507 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v507 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
                      sub_23B1C6740();
                    sub_23B1C6788();
                    sub_23B1C671C();
                    swift_bridgeObjectRelease();

                    sub_23AA8A05C(v454, (uint64_t *)&unk_2542E2370);
                    LODWORD(v196) = 1;
                    v163 = (uint64_t)v462;
LABEL_126:
                    sub_23AA8EFC8(v484, v197, (uint64_t *)&unk_2542E1DF0);
                    if ((v490 & 0x10) != 0)
                    {
                      v351 = *(_BYTE *)(v197 + *(int *)(v472 + 40) + *(int *)(v476 + 80));
                      sub_23AA8A05C(v197, (uint64_t *)&unk_2542E1DF0);
                      if ((v351 & 1) == 0)
                      {
LABEL_135:
                        v366 = (void *)objc_opt_self();
                        v367 = v465;
                        v368 = v473;
                        ((void (*)(char *, char *, uint64_t))v470)(v465, v467, v473);
                        v369 = (void *)sub_23B1C5954();
                        (*(void (**)(char *, uint64_t))(v161 + 8))(v367, v368);
                        v370 = objc_msgSend(v366, sel_writingIntentWithURL_options_, v369, 0x80000000);

                        v371 = v479;
                        v372 = *(void **)(v479 + 16);
                        *(_QWORD *)(v479 + 16) = v370;

                        v358 = *(void **)(v371 + 16);
                        if (v358)
                          goto LABEL_136;
                        goto LABEL_163;
                      }
                    }
                    else
                    {
                      sub_23AA8A05C(v197, (uint64_t *)&unk_2542E1DF0);
                    }
                    if ((sub_23B196840(v490, v484, v163) & 1) != 0)
                    {
                      v352 = (void *)objc_opt_self();
                      v353 = v465;
                      v354 = v473;
                      ((void (*)(char *, char *, uint64_t))v470)(v465, v467, v473);
                      v355 = (void *)sub_23B1C5954();
                      (*(void (**)(char *, uint64_t))(v161 + 8))(v353, v354);
                      v356 = objc_msgSend(v352, sel_writingIntentWithURL_options_, v355, 4);

                      v196 = v479;
                      v357 = *(void **)(v479 + 16);
                      *(_QWORD *)(v479 + 16) = v356;

                      v358 = *(void **)(v196 + 16);
                      if (v358)
                        goto LABEL_136;
                      __break(1u);
                    }
                    if (!(_DWORD)v196)
                      goto LABEL_138;
                    v359 = (void *)objc_opt_self();
                    v360 = v465;
                    v361 = v473;
                    ((void (*)(char *, char *, uint64_t))v470)(v465, v467, v473);
                    v362 = (void *)sub_23B1C5954();
                    (*(void (**)(char *, uint64_t))(v161 + 8))(v360, v361);
                    v363 = objc_msgSend(v359, sel_writingIntentWithURL_options_, v362, 16);

                    v364 = v479;
                    v365 = *(void **)(v479 + 16);
                    *(_QWORD *)(v479 + 16) = v363;

                    v358 = *(void **)(v364 + 16);
                    if (v358)
                    {
LABEL_136:
                      v158 = v358;
                      MEMORY[0x23B85F008]();
                      if (*(_QWORD *)((v507 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v507 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                      {
LABEL_137:
                        sub_23B1C6788();
                        sub_23B1C671C();

LABEL_138:
                        v488 = a13;
                        v486 = ~v425;
                        v373 = v493;
                        v487 = v493 & 0x10;
                        v374 = *(void **)(v479 + 16);
                        if (v374)
                        {
                          v375 = objc_msgSend(v374, sel_URL);
                          v376 = v465;
                          sub_23B1C59CC();

                          v377 = v376;
                          v378 = v473;
                          v379 = v469;
                          ((void (*)(uint64_t, char *, uint64_t))v469)(v162, v377, v473);
                          v380 = v474;
                          v381 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v474 + 56);
                          v381(v162, 0, 1, v378);
                          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v380 + 48))(v162, 1, v378) != 1)
                          {
                            v389 = v436;
                            v390 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v436, v162, v378);
                            v391 = MEMORY[0x24BDAC7A8](v390);
                            *((_BYTE *)&v425 - 16) = 1;
                            *(&v425 - 1) = (uint64_t)v389;
                            MEMORY[0x24BDAC7A8](v391);
                            *(&v425 - 4) = v392;
                            *(&v425 - 3) = (uint64_t)sub_23B1A1E50;
                            *(&v425 - 2) = v393;
                            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74E0);
                            v394 = v480;
                            sub_23B1C59B4();
                            *(_QWORD *)&v480 = v394;
                            v378 = v473;
                            v395 = v497;
                            v396 = v389;
                            v112 = v478;
                            (*(void (**)(char *, uint64_t))(v380 + 8))(v396, v473);
                            v382 = (void *)*((_QWORD *)v112 + 2);
                            if (v382)
                            {
                              if ((v395 & 1) != 0)
                              {
                                v388 = 1;
                                goto LABEL_148;
                              }
                              v373 = v493;
                              goto LABEL_143;
                            }
                            v406 = v395 & 1;
                            v373 = v493;
LABEL_152:
                            v400 = v449;
                            v408 = *(void **)(v479 + 16);
                            *((_QWORD *)v112 + 2) = v408;
                            v409 = v408;
                            v397 = v492;
                            v398 = v450;
                            v399 = v451;
                            goto LABEL_153;
                          }
                          v373 = v493;
                        }
                        else
                        {
                          v378 = v473;
                          v381 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v474 + 56);
                          v381(v162, 1, 1, v473);
                        }
                        sub_23AA8A05C(v162, (uint64_t *)&unk_2542E6740);
                        v382 = (void *)*((_QWORD *)v112 + 2);
                        if (v382)
                        {
LABEL_143:
                          v383 = objc_msgSend(v382, sel_URL);
                          v384 = v465;
                          sub_23B1C59CC();

                          v385 = (uint64_t)v437;
                          v386 = v469;
                          ((void (*)(char *, char *, uint64_t))v469)(v437, v384, v378);
                          v381(v385, 0, 1, v378);
                          v387 = v474;
                          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v474 + 48))(v385, 1, v378) == 1)
                          {
                            sub_23AA8A05C(v385, (uint64_t *)&unk_2542E6740);
                            v388 = (v373 >> 2) & 1;
LABEL_148:
                            v481 = v388;
                            v397 = v492;
                            v398 = v450;
                            v399 = v451;
                            v400 = v449;
LABEL_154:
                            *(_QWORD *)&v480 = v507;
                            sub_23AA8EFC8(v468, v458, &qword_2542E72C0);
                            sub_23AA8EFC8(v484, v459, (uint64_t *)&unk_2542E1DF0);
                            sub_23AA907B0(v397, v483, type metadata accessor for VFSItem);
                            v410 = (*(unsigned __int8 *)(v448 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v448 + 80);
                            v411 = v410 + v400;
                            v412 = (v410 + v400 + 9) & 0xFFFFFFFFFFFFFFF8;
                            v413 = (*(unsigned __int8 *)(v398 + 80) + v412 + 8) & ~(unint64_t)*(unsigned __int8 *)(v398 + 80);
                            v414 = v413 + v399;
                            v415 = (v413 + v399) & 0xFFFFFFFFFFFFFFF8;
                            v416 = (v415 + 23) & 0xFFFFFFFFFFFFFFF8;
                            v417 = (v425 + v416 + 248) & v486;
                            v418 = swift_allocObject();
                            v486 = v415 + v418;
                            v419 = v479;
                            *(_QWORD *)(v418 + 16) = v431;
                            *(_QWORD *)(v418 + 24) = v419;
                            v420 = v493;
                            *(_QWORD *)(v418 + 32) = v477;
                            *(_QWORD *)(v418 + 40) = v420;
                            v421 = v494;
                            *(_QWORD *)(v418 + 48) = v460;
                            *(_QWORD *)(v418 + 56) = v421;
                            *(_QWORD *)(v418 + 64) = v489;
                            *(_BYTE *)(v418 + 72) = v491;
                            v422 = v490;
                            *(_QWORD *)(v418 + 80) = v485;
                            *(_QWORD *)(v418 + 88) = v422;
                            sub_23AA724E8(v458, v418 + v410, &qword_2542E72C0);
                            v423 = (_BYTE *)(v418 + v411);
                            *v423 = v457 & 1;
                            v423[1] = v487 >> 4;
                            *(_QWORD *)(v418 + v412) = v478;
                            sub_23AA724E8(v459, v418 + v413, (uint64_t *)&unk_2542E1DF0);
                            *(_BYTE *)(v418 + v414) = v461;
                            *(_QWORD *)(v486 + 8) = v495;
                            v424 = v488;
                            sub_23AA724E8(v488, v418 + v416, &qword_2542E5050);
                            sub_23AA94050(v483, v418 + v417, type metadata accessor for VFSItem);
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            sub_23AC24890(v424);
                            sub_23B159770(v489, v491, v480, v481, (void (*)(_QWORD, _QWORD))sub_23B19F370, v418);
                            swift_release();
                            swift_bridgeObjectRelease();
                            swift_release();
                            sub_23AA8A05C(v468, &qword_2542E72C0);
                            sub_23AA937BC(v492, type metadata accessor for VFSItem);
                            (*(void (**)(char *, uint64_t))(v474 + 8))(v471, v473);
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            return swift_release();
                          }
                          v401 = v432;
                          ((void (*)(char *, uint64_t, uint64_t))v386)(v432, v385, v378);
                          v402 = v433;
                          v403 = ((uint64_t (*)(char *, char *, uint64_t))v470)(v433, v401, v378);
                          v404 = MEMORY[0x24BDAC7A8](v403);
                          *((_BYTE *)&v425 - 16) = 1;
                          *(&v425 - 1) = (uint64_t)v402;
                          MEMORY[0x24BDAC7A8](v404);
                          *(&v425 - 4) = (uint64_t)v494;
                          *(&v425 - 3) = (uint64_t)sub_23B1A1E50;
                          *(&v425 - 2) = v405;
                          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74E0);
                          sub_23B1C59B4();
                          v406 = v497 & 1;
                          v407 = *(void (**)(char *, uint64_t))(v387 + 8);
                          v407(v402, v473);
                          v407(v401, v473);
                          v397 = v492;
                          v398 = v450;
                          v399 = v451;
                          v400 = v449;
LABEL_153:
                          v481 = (v373 >> 2) & 1 | v406;
                          goto LABEL_154;
                        }
                        v406 = 0;
                        goto LABEL_152;
                      }
LABEL_159:
                      sub_23B1C6740();
                      goto LABEL_137;
                    }
                    __break(1u);
                    goto LABEL_135;
                  }
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
                  goto LABEL_164;
                }
LABEL_165:
                sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v157);
              }
              v258 = sub_23B1C7388();
              swift_bridgeObjectRelease();
              if ((v258 & 1) != 0)
                goto LABEL_98;
            }
            swift_bridgeObjectRetain();
            goto LABEL_100;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7D00);
          v192 = swift_dynamicCastClass();
          if (!v192)
          {
LABEL_76:
            v495 = v183;
            v186 = v484;
            v187 = v490;
            LODWORD(v457) = sub_23B1962B8((uint64_t)v113, v484, v490);
            goto LABEL_77;
          }
          v193 = v192;
          swift_beginAccess();
          v194 = *(_QWORD *)(v193 + 16);
          v195 = *(unsigned __int8 *)(v193 + 24);
          if (v195 <= 1)
          {
            if (v195 != 1)
            {
              swift_retain_n();
              sub_23AFF505C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 123, 2, 1799, v193);
            }
            swift_retain();
            goto LABEL_72;
          }
          if (v195 != 2)
          {
            swift_retain();
            sub_23AFF4DEC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 123, 2, 1797);
          }
          swift_retain();
          v202 = (void *)swift_retain();
          v203 = objc_sync_enter(v202);
          if (v194)
          {
            if (v203)
              goto LABEL_164;
            v204 = *(_QWORD *)(v157 + 160);
            swift_retain();
            if (objc_sync_exit((id)v157))
              goto LABEL_165;
            swift_release();
            v194 = *(_QWORD *)(v204 + 40);
            v157 = *(unsigned __int8 *)(v204 + 48);
            v203 = swift_release();
            if ((v157 & 1) == 0)
              goto LABEL_72;
            __break(1u);
          }
          if (v203)
            goto LABEL_164;
          v205 = *(_QWORD *)(v157 + 160);
          swift_retain();
          if (objc_sync_exit((id)v157))
            goto LABEL_165;
          swift_release();
          v194 = *(_QWORD *)(v205 + 24);
          swift_release();
LABEL_72:
          v206 = *(_QWORD *)(v193 + 40);
          if (v206)
          {
            v207 = *(_QWORD *)(v193 + 32);
            v208 = v426;
            swift_beginAccess();
            v209 = *v208;
            swift_bridgeObjectRetain();
            v210 = v442;
            sub_23B15C1A8(v194, 1, v207, v206, v209, v442);
            v211 = v210;
            swift_bridgeObjectRelease();
            v212 = v466;
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v455[6].isa)(v210, 1, v466) == 1)
            {
              sub_23AA8A05C((uint64_t)v210, &qword_2542E2380);
              swift_bridgeObjectRelease();
              v213 = *(void (**)(uint64_t))(v109 + 16);
              v497 = v194;
              v498 = 1;
              v499 = 0u;
              v500 = 0u;
              v501 = 0u;
              v502 = 0u;
              v503 = 0u;
              v504 = 0u;
              v505 = 0;
              sub_23AAFC630((uint64_t)&v497);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
              sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
              v214 = swift_allocError();
              sub_23AA724E8((uint64_t)&v497, v215, (uint64_t *)&unk_2542E0950);
              v216 = v487;
              *(_QWORD *)v487 = v214;
              swift_storeEnumTagMultiPayload();
              swift_retain();
              v213(v216);
              swift_release();
              swift_release();
              swift_release();
              sub_23AA8A05C(v216, qword_2542E3690);
              v217 = v492;
LABEL_110:
              sub_23AA937BC(v217, type metadata accessor for VFSItem);
              (*(void (**)(char *, uint64_t))(v474 + 8))(v471, v473);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              return swift_release();
            }
            v218 = (uint64_t)&v210[*(int *)(v212 + 48)];
            v219 = v434;
            v220 = v435;
            v221 = (uint64_t)&v434[*(int *)(v435 + 48)];
            v222 = v211;
            v223 = v473;
            v224 = v469;
            ((void (*)(char *, char *, uint64_t))v469)(v434, v222, v473);
            sub_23AA94050(v218, v221, type metadata accessor for VFSItem);
            swift_release();
            v225 = v471;
            (*(void (**)(char *, uint64_t))(v474 + 8))(v471, v223);
            v226 = *(int *)(v220 + 48);
            v183 = v495;
            v227 = (uint64_t)&v219[v226];
            ((void (*)(char *, char *, uint64_t))v224)(v225, v219, v223);
            sub_23AA937BC(v227, type metadata accessor for VFSItem);
            v113 = (uint64_t *)v492;
            goto LABEL_76;
          }
LABEL_161:
          __break(1u);
          goto LABEL_162;
        }
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_158;
  }
  if (*((_BYTE *)v113 + v160) == 3)
  {
    if (!*v462)
      goto LABEL_29;
  }
  else if (!*((_BYTE *)v113 + v160) && *v462 == 3)
  {
    goto LABEL_29;
  }
  v198 = *(void (**)(unint64_t))(v109 + 16);
  sub_23AEB2D50((uint64_t)&v497);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
  v199 = swift_allocError();
  sub_23AA724E8((uint64_t)&v497, v200, (uint64_t *)&unk_2542E0950);
  v201 = v487;
  *(_QWORD *)v487 = v199;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v198(v201);
  swift_release();
  swift_release();
  v143 = v201;
LABEL_23:
  sub_23AA8A05C(v143, qword_2542E3690);
  v144 = (uint64_t)v113;
LABEL_24:
  sub_23AA937BC(v144, type metadata accessor for VFSItem);
  swift_release();
  return swift_release();
}

uint64_t sub_23B16806C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, char a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[2];
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51[5];
  _QWORD v52[7];
  _QWORD v53[4];
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;

  v47 = a8;
  v46 = a7;
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v45[1] = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v45 - v21;
  if (a2)
  {
    v49 = a6;
    v48 = a11;
    v50 = a3;
    v23 = a3[17];
    MEMORY[0x24BDAC7A8](v20);
    v45[-4] = v23;
    LODWORD(v45[-3]) = 1;
    v45[-2] = v24;
    swift_retain_n();
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
    *(_BYTE *)(v23 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v23 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_release_n();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release_n();
    }
    a3 = v50;
    a6 = v49;
    sub_23AA8EFC8(a1, (uint64_t)v22, qword_2542E3690);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      sub_23AA8A05C((uint64_t)v22, qword_2542E3690);
    }
    else
    {
      sub_23AA8A05C((uint64_t)v22, qword_2542E3690);
      v26 = sub_23AA724E8((uint64_t)a4, (uint64_t)v52, qword_2542E48C0);
      if (v52[2] >> 60 != 11 && v52[0])
      {
        MEMORY[0x24BDAC7A8](v26);
        v45[-4] = v23;
        LODWORD(v45[-3]) = 0;
        v45[-2] = v27;
        sub_23AC25990(a4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
        sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
        *(_BYTE *)(v23 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
        if (*(_QWORD *)(v23 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
        {
          v43 = swift_getObjectType();
          swift_unknownObjectRetain();
          MEMORY[0x23B85F548](1, v43);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
        sub_23AC25990(a4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEE4C);
        a3 = v50;
        a6 = v49;
        v28 = a10;
        if ((a5 & 0x40) == 0)
          return v28(a1);
        goto LABEL_12;
      }
      swift_release();
    }
  }
  v28 = a10;
  if ((a5 & 0x40) == 0)
    return v28(a1);
LABEL_12:
  v29 = a6 + *(int *)(type metadata accessor for VFSItem(0) + 28);
  v30 = type metadata accessor for ItemMetadata();
  if (*(_BYTE *)(v29 + *(int *)(v30 + 92)) == 1 && *(_BYTE *)(v29 + *(int *)(v30 + 96)) == 1)
  {
    v50 = a3;
    swift_beginAccess();
    v31 = *(unsigned int *)(a9 + 24);
    v32 = *(_QWORD *)(a9 + 32);
    v33 = *(unsigned __int8 *)(a9 + 40);
    v34 = *(unsigned __int8 *)(a9 + 64);
    v35 = *(_QWORD *)(a9 + 72);
    v36 = *(_QWORD *)(a9 + 80);
    v37 = *(_QWORD *)(a9 + 104);
    v53[0] = *(_QWORD *)(a9 + 16);
    v53[1] = v31;
    v53[2] = v32;
    v53[3] = v33;
    v54 = *(_OWORD *)(a9 + 48);
    v55 = v34;
    v56 = v35;
    v57 = v36;
    v58 = *(_OWORD *)(a9 + 88);
    v59 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23B157264(v46, v47, (uint64_t)v53, (uint64_t)v51);
    v38 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = (void *)swift_retain();
    if (objc_sync_enter(v39))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v38);
    v40 = v38[20];
    swift_retain();
    if (objc_sync_exit(v38))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v38);
    swift_release();
    v41 = *(unsigned int *)(v40 + 16);
    v42 = swift_release();
    MEMORY[0x24BDAC7A8](v42);
    v45[-2] = a1;
    sub_23AC3A86C(v51, v41, 0x200000, 2, (uint64_t)sub_23B19F988, (uint64_t)&v45[-4]);
    sub_23AC03E50((uint64_t)v51);
  }
  return v28(a1);
}

uint64_t sub_23B168624(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  int EnumCaseMultiPayload;
  _DWORD v10[4];
  int v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19F9A0);
  if (!v2)
  {
    sub_23AA8EFC8(a2, (uint64_t)v7, qword_2542E3690);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_23AA8A05C((uint64_t)v7, qword_2542E3690);
    if (EnumCaseMultiPayload != 1)
    {
      MEMORY[0x24BDAC7A8](result);
      v10[-4] = a1;
      return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1A1F50);
    }
  }
  return result;
}

uint64_t sub_23B168738(const char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t a7, _QWORD *a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,_QWORD *a21)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t *);
  id v119;
  _OWORD *v121;
  uint64_t v122;
  void *v123;
  id v124;
  char *v125;
  uint64_t v126;
  void (*v127)(uint64_t, char *, uint64_t);
  uint64_t v128;
  char *v129;
  uint64_t v130;
  int v131;
  _QWORD *v132;
  char v133;
  uint64_t v134;
  _OWORD *v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  _OWORD *v142;
  uint64_t v143;
  id v144;
  id v145;
  char *v146;
  char v147;
  uint64_t v148;
  char *v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, uint64_t);
  _QWORD *v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  char *v180;
  uint64_t v181;
  void (*v182)(uint64_t *);
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t *v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  char *v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  void *v202;
  uint64_t v203;
  id v204;
  void (*v205)(uint64_t *);
  uint64_t *v206;
  id v207;
  void (*v208)(uint64_t *);
  uint64_t *v209;
  id v210;
  uint64_t v211;
  char v212;
  uint64_t v213;
  id *v214;
  char *v215;
  id v216;
  uint64_t v217;
  char *v218;
  void *v219;
  void *v220;
  id v221;
  id v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  char *v226;
  void *v227;
  void *v228;
  void *v229;
  const char *v230;
  id v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  id v236;
  unint64_t v237;
  _QWORD *v238;
  void (*v239)(char *, uint64_t);
  void (*v240)(char *, uint64_t);
  uint64_t v241;
  size_t v242;
  BOOL v243;
  size_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  uint64_t *v249;
  unsigned __int8 *v250;
  uint64_t v251;
  int *v252;
  uint64_t v253;
  void *v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  id v258;
  char *v259;
  char v260;
  uint64_t v261;
  char v262;
  char *v263;
  char *v264;
  unint64_t v265;
  uint64_t v266;
  void *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char v272;
  char isUniquelyReferenced_nonNull_native;
  char v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  void (*v285)(char *, char *, uint64_t);
  uint64_t v286;
  void (*v287)(uint64_t, _QWORD, uint64_t, uint64_t);
  unsigned int (*v288)(uint64_t, uint64_t, uint64_t);
  char v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  id v301;
  void (*v302)(uint64_t *);
  uint64_t v303;
  uint64_t *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  int *v316;
  uint64_t *v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  int v324;
  uint64_t v325;
  int v326;
  char *v327;
  uint64_t v328;
  char v329;
  char *v330;
  uint64_t v331;
  BOOL v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  id v336;
  int v337;
  void *v338;
  int v339;
  uint64_t v340;
  uint64_t v341;
  int v342;
  uint64_t *v343;
  id v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  char *v350;
  int v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  _QWORD *v356;
  uint64_t v357;
  int v358;
  uint64_t v359;
  uint64_t v360;
  void (*v361)(uint64_t, uint64_t, uint64_t);
  id v362;
  uint64_t v363;
  uint64_t v364;
  void (*v365)(uint64_t, uint64_t);
  void (*v366)(uint64_t *);
  char *v367;
  uint64_t v368;
  uint64_t *v369;
  void (*v370)(uint64_t *);
  char *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  id v383;
  id v384;
  uint64_t v385;
  char v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  id v395;
  id v396;
  uint64_t ObjectType;
  void (*v398)(uint64_t *);
  uint64_t v399;
  uint64_t *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  int *v405;
  uint64_t *v406;
  _QWORD *v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t *v410;
  uint64_t v411;
  uint64_t v412;
  unint64_t v413;
  uint64_t v414;
  unint64_t v415;
  id v416;
  uint64_t v417;
  unint64_t v418;
  void (*v419)(char *, uint64_t);
  void (*v420)(uint64_t *);
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t *v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  unint64_t v428;
  uint64_t v429;
  char *v430;
  uint64_t v431;
  unint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  char v439;
  uint64_t v440;
  void *v441;
  uint64_t v442;
  int v443;
  char *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  void *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  char v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  void (*v463)(char *, uint64_t, uint64_t);
  int v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  char v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  unsigned int (*v472)(uint64_t, uint64_t, uint64_t);
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  id v476;
  void (*v477)(char *, uint64_t);
  uint64_t v478;
  void (*v479)(char *, uint64_t);
  id v480;
  uint64_t v481;
  void (*v482)(char *, char *, uint64_t);
  NSObject *v483;
  os_log_type_t v484;
  uint64_t v485;
  char *v486;
  void *v487;
  id v488;
  uint64_t v489;
  unint64_t v490;
  unint64_t v491;
  uint64_t v492;
  void (*v493)(char *, uint64_t);
  char *v494;
  void *v495;
  id v496;
  uint64_t v497;
  unint64_t v498;
  unint64_t v499;
  char *v500;
  uint64_t v501;
  void (*v502)(char *, uint64_t);
  uint64_t v503;
  uint64_t v504;
  int v505;
  id v506;
  NSObject *v507;
  os_log_type_t v508;
  uint8_t *v509;
  uint64_t v510;
  int v511;
  id v512;
  NSObject *v513;
  os_log_type_t v514;
  uint8_t *v515;
  _QWORD *v516;
  uint64_t v517;
  _QWORD *v518;
  unint64_t v519;
  uint64_t v520;
  id v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t (*v525)(uint64_t, uint64_t, uint64_t);
  uint64_t v526;
  uint64_t *v527;
  _QWORD *v528;
  uint64_t v529;
  char *v530;
  char *v531;
  uint64_t v532;
  void (*v533)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v534;
  char *v535;
  uint64_t v536;
  uint64_t *v537;
  uint64_t v538;
  char *v539;
  char *v540;
  uint64_t v541;
  uint64_t v542;
  char *v543;
  char *v544;
  char *v545;
  char *v546;
  char *v547;
  char *v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  char *v560;
  void (*v561)(uint64_t, uint64_t);
  unint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  char *v566;
  char *v567;
  char *v568;
  uint64_t v569;
  char *v570;
  char *v571;
  uint64_t v572;
  uint64_t v573;
  _QWORD *v574;
  char *v575;
  uint64_t v576;
  char *v577;
  _QWORD *v578;
  uint64_t v579;
  uint64_t v580;
  _QWORD *v581;
  _QWORD *v582;
  char *v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  char *v588;
  uint64_t v589;
  _QWORD *v590;
  char *v591;
  int *v592;
  uint64_t v593;
  char *v594;
  char *v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  char *v601;
  uint64_t *v602;
  uint64_t v603;
  _QWORD *v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  void (*v608)(char *, uint64_t);
  id v609;
  uint64_t v610;
  __int128 v611;
  __int128 v612;
  __int128 v613;
  __int128 v614;
  __int128 v615;
  __int128 v616;
  _QWORD v617[3];
  int v618;
  uint64_t v619[5];
  char *v620;
  uint64_t v621;
  uint64_t v622;
  unint64_t v623;
  __int128 v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  __int128 v628;
  uint64_t v629;
  uint64_t v630[5];
  _QWORD v631[5];
  uint64_t v632;
  unint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  _OWORD v644[7];

  v604 = a8;
  v600 = a7;
  v602 = a6;
  v609 = a5;
  v599 = a4;
  v583 = (char *)a1;
  v586 = sub_23B1C5474();
  v585 = *(_QWORD *)(v586 - 8);
  MEMORY[0x24BDAC7A8](v586);
  v588 = (char *)&v520 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v580 = (uint64_t)&v520 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v591 = (char *)&v520 - v27;
  v603 = sub_23B1C545C();
  v597 = *(_QWORD *)(v603 - 8);
  MEMORY[0x24BDAC7A8](v603);
  v601 = (char *)&v520 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23B1C5570();
  v572 = *(_QWORD *)(v29 - 8);
  v573 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v566 = (char *)&v520 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v592 = (int *)type metadata accessor for ItemMetadata();
  v31 = MEMORY[0x24BDAC7A8](v592);
  v567 = (char *)&v520 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v568 = (char *)&v520 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v569 = (uint64_t)&v520 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6760);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v550 = (uint64_t)&v520 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v553 = (uint64_t)&v520 - v39;
  v40 = sub_23B1C5E4C();
  v541 = *(_QWORD *)(v40 - 8);
  v542 = v40;
  v41 = MEMORY[0x24BDAC7A8](v40);
  v539 = (char *)&v520 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v540 = (char *)&v520 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v545 = (char *)&v520 - v45;
  v556 = type metadata accessor for VFSDetachedRootBookmark();
  v46 = MEMORY[0x24BDAC7A8](v556);
  v562 = (unint64_t)&v520 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v558 = (uint64_t)&v520 - v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2380);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v548 = (char *)&v520 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50);
  v570 = (char *)&v520 - v52;
  v584 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v53 = MEMORY[0x24BDAC7A8](v584);
  v560 = (char *)&v520 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v564 = (uint64_t)&v520 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v575 = (char *)&v520 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v555 = (uint64_t)&v520 - v60;
  MEMORY[0x24BDAC7A8](v59);
  v574 = (uint64_t *)((char *)&v520 - v61);
  v62 = sub_23B1C60EC();
  v576 = *(_QWORD *)(v62 - 8);
  v577 = (char *)v62;
  MEMORY[0x24BDAC7A8](v62);
  v582 = (uint64_t *)((char *)&v520 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  v589 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v596 = *(_QWORD *)(v589 - 8);
  v64 = MEMORY[0x24BDAC7A8](v589);
  v590 = (uint64_t *)((char *)&v520 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v64);
  v581 = (uint64_t *)((char *)&v520 - v66);
  v605 = type metadata accessor for VFSItem(0);
  v593 = *(_QWORD *)(v605 - 8);
  v67 = MEMORY[0x24BDAC7A8](v605);
  v563 = (uint64_t)&v520 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = MEMORY[0x24BDAC7A8](v67);
  v565 = (uint64_t)&v520 - v70;
  v71 = MEMORY[0x24BDAC7A8](v69);
  v587 = (uint64_t)&v520 - v72;
  v73 = MEMORY[0x24BDAC7A8](v71);
  v557 = (uint64_t)&v520 - v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  v552 = (uint64_t)&v520 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  v578 = (uint64_t *)((char *)&v520 - v78);
  MEMORY[0x24BDAC7A8](v77);
  v608 = (void (*)(char *, uint64_t))((char *)&v520 - v79);
  v549 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v554 = *(_QWORD *)(v549 - 8);
  v80 = MEMORY[0x24BDAC7A8](v549);
  v559 = (char *)&v520 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = MEMORY[0x24BDAC7A8](v80);
  v551 = (uint64_t)&v520 - v83;
  v84 = MEMORY[0x24BDAC7A8](v82);
  v547 = (char *)&v520 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v561 = (void (*)(uint64_t, uint64_t))((char *)&v520 - v87);
  v88 = MEMORY[0x24BDAC7A8](v86);
  v571 = (char *)&v520 - v89;
  MEMORY[0x24BDAC7A8](v88);
  v598 = (uint64_t)&v520 - v90;
  v607 = sub_23B1C5A08();
  v606 = *(_QWORD *)(v607 - 8);
  v91 = MEMORY[0x24BDAC7A8](v607);
  v595 = (char *)&v520 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = MEMORY[0x24BDAC7A8](v91);
  v544 = (char *)&v520 - v94;
  v95 = MEMORY[0x24BDAC7A8](v93);
  v543 = (char *)&v520 - v96;
  v97 = MEMORY[0x24BDAC7A8](v95);
  v546 = (char *)&v520 - v98;
  v99 = MEMORY[0x24BDAC7A8](v97);
  v101 = (char *)&v520 - v100;
  v102 = MEMORY[0x24BDAC7A8](v99);
  v104 = (char *)&v520 - v103;
  v105 = MEMORY[0x24BDAC7A8](v102);
  v107 = (char *)&v520 - v106;
  v108 = MEMORY[0x24BDAC7A8](v105);
  v110 = (char *)&v520 - v109;
  MEMORY[0x24BDAC7A8](v108);
  v112 = (char *)&v520 - v111;
  v113 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  MEMORY[0x24BDAC7A8](v113);
  v115 = (uint64_t *)((char *)&v520 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0));
  v610 = a3;
  v116 = a3 + 16;
  v117 = swift_projectBox();
  if (a2)
  {
    swift_beginAccess();
    v118 = *(void (**)(uint64_t *))(v610 + 16);
    *v115 = (uint64_t)a2;
    swift_storeEnumTagMultiPayload();
    v119 = a2;
    swift_retain();
    v118(v115);
    swift_release();
    return sub_23AA8A05C((uint64_t)v115, qword_2542E3690);
  }
  v535 = v110;
  v536 = v116;
  v529 = (uint64_t)v101;
  v530 = v104;
  v531 = v107;
  v537 = v115;
  v538 = v117;
  v579 = v113;
  v594 = v112;
  v532 = a11;
  v121 = (_OWORD *)(a11 + 16);
  v122 = v599;
  swift_beginAccess();
  v123 = *(void **)(v122 + 16);
  if (v123)
  {
    v124 = objc_msgSend(v123, sel_URL);
    v125 = v535;
    sub_23B1C59CC();

    v126 = v606;
    v127 = *(void (**)(uint64_t, char *, uint64_t))(v606 + 32);
    v128 = v598;
    v129 = v125;
    v130 = v607;
    v127(v598, v129, v607);
    v533 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56);
    v533(v128, 0, 1, v130);
    v131 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v128, 1, v130);
    v132 = v604;
    v133 = (char)v602;
    v134 = v600;
    if (v131 != 1)
    {
      v127((uint64_t)v594, (char *)v128, v130);
      goto LABEL_9;
    }
    v135 = (_OWORD *)(a11 + 16);
  }
  else
  {
    v135 = (_OWORD *)(a11 + 16);
    v126 = v606;
    v128 = v598;
    v130 = v607;
    v533 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v606 + 56);
    v533(v598, 1, 1, v607);
    v132 = v604;
    v133 = (char)v602;
    v134 = v600;
  }
  v136 = v538;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v594, v136, v130);
  sub_23AA8A05C(v128, (uint64_t *)&unk_2542E6740);
  v121 = v135;
LABEL_9:
  LODWORD(v600) = a10;
  v599 = a9;
  v137 = (uint64_t *)(v134 + 16);
  v138 = (uint64_t)v608;
  if ((v133 & 0x40) != 0)
  {
    swift_beginAccess();
    if ((*v137 & 0x1000) == 0)
      *v137 |= 0x1000uLL;
  }
  v598 = a17;
  swift_beginAccess();
  v139 = v121[3];
  v644[2] = v121[2];
  v644[3] = v139;
  v140 = v121[5];
  v644[4] = v121[4];
  v644[5] = v140;
  v141 = v121[1];
  v644[0] = *v121;
  v644[1] = v141;
  swift_beginAccess();
  v142 = v121;
  v143 = *v137;
  sub_23B19DD20((uint64_t)v644);
  sub_23B164364(v599, v600, (uint64_t)v644, a12, v143, v138);
  v609 = 0;
  v534 = a12;
  v527 = v137;
  v528 = v142;
  sub_23B19DD70((uint64_t)v644);
  v169 = v581;
  sub_23AA8EFC8(a13, (uint64_t)v581, &qword_2542E72C0);
  v170 = v605;
  v171 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v593 + 48))(v169, 1, v605);
  if (v171 == 1)
  {
    v172 = sub_23AA8A05C((uint64_t)v169, &qword_2542E72C0);
    v173 = v582;
    goto LABEL_33;
  }
  v211 = (uint64_t)v578;
  sub_23AA94050((uint64_t)v169, (uint64_t)v578, type metadata accessor for VFSItem);
  sub_23B1C5BDC();
  sub_23AA7E38C(&qword_2569E24B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v130 = v607;
  v212 = sub_23B1C63A4();
  v170 = v605;
  v172 = sub_23AA937BC(v211, type metadata accessor for VFSItem);
  v173 = v582;
  if ((v212 & 1) != 0)
  {
LABEL_33:
    if ((a14 & 1) != 0)
      goto LABEL_36;
  }
  if ((a15 & 1) == 0)
  {
    v213 = (uint64_t)v608;
    goto LABEL_52;
  }
LABEL_36:
  v214 = (id *)(a16 + 16);
  v213 = (uint64_t)v608;
  if (v583)
  {
    swift_beginAccess();
    v215 = v535;
    if (!*v214)
    {
LABEL_189:
      __break(1u);
      goto LABEL_190;
    }
    v216 = objc_msgSend(*v214, sel_URL);
    sub_23B1C59CC();

    v217 = sub_23B1C5954();
    v218 = v215;
    v219 = (void *)v217;
    (*(void (**)(char *, uint64_t))(v606 + 8))(v218, v130);
    v220 = (void *)sub_23B1C5954();
    objc_msgSend(v583, sel_itemAtURL_willMoveToURL_, v219, v220);

  }
  MEMORY[0x24BDAC7A8](v172);
  v518 = (_QWORD *)(a16 + 16);
  v519 = (unint64_t)v594;
  v221 = v609;
  v158 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19F648);
  v609 = v221;
  if (!v221)
  {
    if (v583)
    {
      swift_beginAccess();
      if (!*v214)
      {
LABEL_190:
        __break(1u);
        goto LABEL_191;
      }
      v225 = objc_msgSend(*v214, sel_URL);
      v226 = v535;
      sub_23B1C59CC();

      v227 = (void *)sub_23B1C5954();
      (*(void (**)(char *, uint64_t))(v606 + 8))(v226, v130);
      v228 = (void *)sub_23B1C5954();
      objc_msgSend(v583, sel_itemAtURL_didMoveToURL_, v227, v228);

    }
    if ((v602 & 8) != 0)
    {
      v232 = (uint64_t *)(v598 + v592[14] + *(int *)(v584 + 40));
      v233 = v232[1];
      if (!v233)
        goto LABEL_194;
      v234 = *v232;
      v235 = (void *)sub_23B1C5954();
      v583 = (char *)objc_msgSend(v235, sel_fileSystemRepresentation);
      v236 = v235;
      v620 = (char *)v234;
      v621 = v233;
      *(_QWORD *)&v611 = 47;
      *((_QWORD *)&v611 + 1) = 0xE100000000000000;
      v632 = 58;
      v633 = 0xE100000000000000;
      v237 = sub_23AAA420C();
      v238 = (_QWORD *)MEMORY[0x24BEE0D00];
      v582 = (_QWORD *)sub_23B1C6CF8();
      v240 = v239;
      v620 = (char *)v234;
      v621 = v233;
      *(_QWORD *)&v611 = 47;
      *((_QWORD *)&v611 + 1) = 0xE100000000000000;
      v632 = 58;
      v633 = 0xE100000000000000;
      v518 = (_QWORD *)v237;
      v519 = v237;
      v516 = v238;
      v517 = v237;
      sub_23B1C6CF8();
      v241 = sub_23B1C6458();
      swift_bridgeObjectRelease();
      v242 = strlen((const char *)(v241 + 32));
      swift_release();
      v243 = __OFADD__(v242, 1);
      v244 = v242 + 1;
      if (v243)
      {
        __break(1u);
        goto LABEL_185;
      }
      v245 = sub_23B1C6458();
      swift_bridgeObjectRelease();
      setxattr(v583, "com.apple.fileprovider.before-bounce#P", (const void *)(v245 + 32), v244, 0, 3);
      swift_release();
      v132 = v604;
      v213 = (uint64_t)v608;
    }
    else
    {
      v229 = (void *)sub_23B1C5954();
      v230 = (const char *)objc_msgSend(v229, sel_fileSystemRepresentation);
      v231 = v229;
      removexattr(v230, "com.apple.fileprovider.before-bounce#P", 1);
    }
    v170 = v605;
    sub_23AF43EA8();
LABEL_52:
    v246 = v584;
    v617[0] = a12;
    v247 = swift_allocObject();
    *(_QWORD *)(v247 + 16) = 0;
    v248 = (_QWORD *)(v247 + 16);
    v249 = (uint64_t *)(v213 + 16);
    v250 = (unsigned __int8 *)(v213 + 24);
    if ((a12 & 2) != 0)
    {
      v249 = (uint64_t *)v598;
      v250 = (unsigned __int8 *)(v598 + 8);
    }
    LODWORD(v535) = *v250;
    v251 = *v249;
    v252 = v592;
    v253 = v592[21];
    v582 = (_QWORD *)(v598 + *(int *)(v246 + 40));
    v526 = v253;
    if (sub_23B1A75EC(*((unsigned __int8 *)v582 + v253), (uint64_t)&unk_250BDEEA0))
      goto LABEL_68;
    v578 = (_QWORD *)v251;
    v254 = (void *)v132[27];
    *v173 = v254;
    v255 = v173;
    v257 = v576;
    v256 = (uint64_t)v577;
    (*(void (**)(_QWORD *, _QWORD, char *))(v576 + 104))(v255, *MEMORY[0x24BEE5610], v577);
    v258 = v254;
    LOBYTE(v254) = sub_23B1C6104();
    (*(void (**)(_QWORD *, uint64_t))(v257 + 8))(v255, v256);
    if ((v254 & 1) == 0)
    {
      __break(1u);
      goto LABEL_177;
    }
    v259 = (char *)v132 + qword_2542E6A58;
    swift_beginAccess();
    v252 = v592;
    v251 = (uint64_t)v578;
    if (!*(_QWORD *)(*(_QWORD *)v259 + 16) && *((_BYTE *)v608 + *(int *)(v170 + 28) + v592[16]) != 1)
    {
LABEL_68:
      v581 = (_QWORD *)(v247 + 16);
      v583 = (char *)v247;
      v263 = (char *)v608 + *(int *)(v170 + 28);
      v264 = &v263[v252[36]];
      if (v264[4] == 1)
      {
        v265 = v617[0];
        v266 = v610;
      }
      else
      {
        v265 = v617[0];
        v266 = v610;
        if (*(_DWORD *)v264 >= 2u && (v617[0] & 0x10000) != 0 && *((_BYTE *)v582 + v526))
        {
          v265 = v617[0] & 0xFFFFFFFFFFFEFFFFLL;
          v617[0] &= ~0x10000uLL;
        }
      }
      if (v263[v252[18]] != 1)
      {
        v281 = (uint64_t)v608;
        goto LABEL_92;
      }
      if ((v265 & 3) == 0)
      {
        v282 = (uint64_t)v575;
        v281 = (uint64_t)v608;
        goto LABEL_86;
      }
      v267 = (void *)swift_retain();
      if (objc_sync_enter(v267))
LABEL_191:
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v132);
      v577 = v263;
      v268 = v132[20];
      swift_retain();
      if (!objc_sync_exit(v132))
      {
        swift_release();
        v578 = *(_QWORD **)v608;
        v269 = v598;
        v270 = *(_QWORD *)(v598 + 16);
        v271 = *(_QWORD *)(v598 + 24);
        v272 = *((_BYTE *)v608 + 8);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v611 = *(_QWORD *)(v268 + 72);
        *(_QWORD *)(v268 + 72) = 0x8000000000000000;
        v274 = (char)v535;
        sub_23AD270D4(v251, (char)v535, v270, v271, (uint64_t)v578, v272, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v268 + 72) = v611;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
        v275 = *(_QWORD *)(v269 + 16);
        v276 = *(_QWORD *)(v269 + 24);
        v277 = v570;
        v578 = (_QWORD *)v251;
        sub_23B15C1A8(v251, v274, v275, v276, 1, v570);
        v278 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2370);
        v279 = *(char **)(*(_QWORD *)(v278 - 8) + 48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v279)(v277, 1, v278) == 1)
        {
          sub_23AA8A05C((uint64_t)v277, &qword_2542E2380);
          v280 = (uint64_t)v571;
          v533((uint64_t)v571, 1, 1, v607);
LABEL_83:
          sub_23AA8A05C(v280, (uint64_t *)&unk_2542E6740);
          v252 = v592;
          v263 = v577;
          v281 = (uint64_t)v608;
          goto LABEL_84;
        }
        v283 = (uint64_t)&v277[*(int *)(v278 + 48)];
        v284 = v606;
        v285 = *(void (**)(char *, char *, uint64_t))(v606 + 32);
        v280 = (uint64_t)v571;
        v286 = v607;
        v285(v571, v277, v607);
        v287 = v533;
        v533(v280, 0, 1, v286);
        sub_23AA937BC(v283, type metadata accessor for VFSItem);
        v288 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v284 + 48);
        if (v288(v280, 1, v286) == 1)
          goto LABEL_83;
        v570 = v279;
        v571 = (char *)v285;
        v525 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v288;
        v285(v531, (char *)v280, v286);
        v353 = v530;
        sub_23B1C599C();
        v354 = v529;
        v576 = *(_QWORD *)(v284 + 16);
        ((void (*)(uint64_t, char *, uint64_t))v576)(v529, v353, v286);
        v355 = *(_QWORD *)(v598 + 24);
        v574 = *(_QWORD **)(v598 + 16);
        v356 = v604;
        swift_retain();
        swift_bridgeObjectRetain();
        if (objc_sync_enter(v356))
          sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v356);
        v357 = v356[20];
        swift_retain();
        v358 = objc_sync_exit(v356);
        v360 = (uint64_t)v561;
        v359 = v562;
        if (v358)
          sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v356);
        swift_release();
        v361 = (void (*)(uint64_t, uint64_t, uint64_t))v576;
        ((void (*)(uint64_t, uint64_t, uint64_t))v576)(v360, v357 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v286);
        swift_release();
        v287(v360, 0, 1, v286);
        v361(v359, v354, v286);
        v362 = v609;
        v363 = sub_23B1C58DC();
        v609 = v362;
        if (v362)
        {
          swift_bridgeObjectRelease();
          sub_23AA8A05C(v360, (uint64_t *)&unk_2542E6740);
          v223 = v606;
          v365 = *(void (**)(uint64_t, uint64_t))(v606 + 8);
          v365(v354, v286);
          v365(v359, v286);
          v365((uint64_t)v530, v286);
          v365((uint64_t)v531, v286);
          swift_release();
          sub_23AA937BC((uint64_t)v608, type metadata accessor for VFSItem);
          v222 = 0;
          v130 = v286;
          v132 = v604;
          goto LABEL_42;
        }
        v403 = v363;
        v404 = v364;
        sub_23AA8A05C(v360, (uint64_t *)&unk_2542E6740);
        v561 = *(void (**)(uint64_t, uint64_t))(v606 + 8);
        v561(v354, v286);
        v405 = (int *)v556;
        v406 = (uint64_t *)(v359 + *(int *)(v556 + 24));
        *v406 = v403;
        v406[1] = v404;
        v407 = (_QWORD *)(v359 + v405[5]);
        *v407 = v574;
        v407[1] = v355;
        *(_BYTE *)(v359 + v405[7]) = 1;
        v408 = v558;
        sub_23AA94050(v359, v558, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
        v409 = v405[6];
        v410 = (uint64_t *)(v408 + v405[5]);
        v411 = *v410;
        v412 = v410[1];
        v414 = *(_QWORD *)(v408 + v409);
        v413 = *(_QWORD *)(v408 + v409 + 8);
        sub_23B1C57B0();
        swift_allocObject();
        swift_bridgeObjectRetain();
        sub_23AAAE668(v414, v413);
        sub_23B1C57A4();
        sub_23B1C578C();
        v620 = (char *)v411;
        v621 = v412;
        v622 = v414;
        v415 = v413;
        v623 = v413;
        sub_23AC348D8();
        v416 = v609;
        v417 = sub_23B1C5798();
        v609 = v416;
        if (v416)
        {
          swift_bridgeObjectRelease();
          swift_release();
          sub_23AAAE53C(v414, v413);
          sub_23AA937BC(v408, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
          v419 = (void (*)(char *, uint64_t))v561;
          v561((uint64_t)v530, v286);
          v419(v531, v286);
          swift_release();
          sub_23AA937BC((uint64_t)v608, type metadata accessor for VFSItem);
          v222 = 0;
          v130 = v286;
          v132 = v604;
          goto LABEL_41;
        }
        v428 = v418;
        v574 = (_QWORD *)v417;
        swift_bridgeObjectRelease();
        swift_release();
        sub_23AAAE53C(v414, v415);
        v281 = (uint64_t)v608;
        v429 = *(_QWORD *)v608;
        v430 = (char *)v608 + *(int *)(v605 + 36);
        v431 = *(_QWORD *)v430;
        v432 = *((unsigned int *)v430 + 2);
        v433 = *((_QWORD *)v430 + 2);
        v434 = v430[24];
        v435 = *((_QWORD *)v608 + 2);
        v436 = *((unsigned __int8 *)v608 + 24);
        v437 = *((_QWORD *)v608 + 4);
        v438 = *((_QWORD *)v608 + 5);
        v632 = v431;
        v633 = v432;
        v634 = v433;
        v635 = v434;
        v636 = 0;
        v637 = v435;
        v638 = v436;
        v639 = v437;
        v439 = *((_BYTE *)v608 + 8);
        v640 = v438;
        v641 = 0;
        v642 = 0;
        v643 = 0;
        swift_bridgeObjectRetain();
        v132 = v604;
        sub_23B157264(v429, v439, (uint64_t)&v632, (uint64_t)v619);
        v440 = v619[0];
        v529 = v619[1];
        v523 = v619[3];
        v524 = v619[2];
        v522 = v619[4];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v441 = (void *)swift_retain();
        if (objc_sync_enter(v441))
          goto LABEL_191;
        v442 = v132[20];
        swift_retain();
        v443 = objc_sync_exit(v132);
        v252 = v592;
        v444 = v548;
        if (!v443)
        {
          swift_release();
          v445 = *(unsigned int *)(v442 + 16);
          v446 = swift_release();
          MEMORY[0x24BDAC7A8](v446);
          v518 = v574;
          v519 = v428;
          v447 = v445;
          v222 = v609;
          sub_23AC3A86C(v619, v447, 0x100000, 0, (uint64_t)sub_23B19F5F4, (uint64_t)&v516);
          if (v222)
          {

            v222 = 0;
          }
          v556 = v440;
          v448 = *(void **)((char *)v132 + qword_2542E6A48);
          v562 = v428;
          if (v448)
          {
            v449 = *(_QWORD *)(v281 + 16);
            v450 = v281;
            v451 = *(_QWORD *)(v281 + 32);
            v452 = *(_QWORD *)(v450 + 40);
            v453 = *(_BYTE *)(v450 + 24);
            v521 = v448;
            swift_bridgeObjectRetain();
            sub_23B15C1A8(v449, v453, v451, v452, 1, v444);
            swift_bridgeObjectRelease();
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v570)(v444, 1, v278) == 1)
            {
              sub_23AA8A05C((uint64_t)v444, &qword_2542E2380);
              v454 = (uint64_t)v547;
              v533((uint64_t)v547, 1, 1, v607);
              v252 = v592;
              v455 = v554;
              v456 = v555;
              v457 = (uint64_t)v578;
            }
            else
            {
              v461 = (uint64_t)&v444[*(int *)(v278 + 48)];
              v454 = (uint64_t)v547;
              v462 = v607;
              v463 = (void (*)(char *, uint64_t, uint64_t))v571;
              ((void (*)(char *, char *, uint64_t))v571)(v547, v444, v607);
              v533(v454, 0, 1, v462);
              sub_23AA937BC(v461, type metadata accessor for VFSItem);
              v464 = v525(v454, 1, v462);
              v252 = v592;
              v455 = v554;
              v456 = v555;
              v457 = (uint64_t)v578;
              if (v464 != 1)
              {
                v463(v546, v454, v607);
                v465 = sub_23B1C59E4();
                v467 = v466;
                LOBYTE(v620) = 2;
                swift_bridgeObjectRetain();
                v158 = sub_23B0E1840(4294967294, v465, v467, 0x200000, 0, 0, (uint64_t)&v620, (uint64_t)sub_23AB644B4, 0);
                goto LABEL_162;
              }
            }
            v609 = v222;

            sub_23AA8A05C(v454, (uint64_t *)&unk_2542E6740);
            v281 = (uint64_t)v608;
            v459 = v557;
            v460 = v549;
            goto LABEL_165;
          }
          v609 = v222;
          goto LABEL_157;
        }
      }
LABEL_192:
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v132);
    }
    v260 = v617[0];
    v261 = (uint64_t)v574;
    sub_23AA8EFC8(v598, (uint64_t)v574, (uint64_t *)&unk_2542E1DF0);
    if ((v260 & 0x10) != 0)
    {
      v262 = *(_BYTE *)(v261 + *(int *)(v584 + 40) + v252[20]);
      sub_23AA8A05C(v261, (uint64_t *)&unk_2542E1DF0);
      if ((v262 & 1) == 0)
      {
LABEL_64:
        if ((*v248 & 0x10000) == 0)
          *v248 |= 0x10000uLL;
        if ((v617[0] & 0x10000) != 0)
          v617[0] &= ~0x10000uLL;
        goto LABEL_68;
      }
    }
    else
    {
      sub_23AA8A05C(v261, (uint64_t *)&unk_2542E1DF0);
    }
    if ((v617[0] & 0x10000) == 0
      && ((v617[0] & 8) == 0 || (*((_BYTE *)v608 + *(int *)(v170 + 28) + v252[20]) & 1) != 0))
    {
      goto LABEL_68;
    }
    goto LABEL_64;
  }
  sub_23AA937BC(v213, type metadata accessor for VFSItem);
  v222 = 0;
LABEL_41:
  v223 = v606;
LABEL_42:
  v224 = v603;
  v144 = v609;
  while (1)
  {
    v145 = v144;
    v146 = v601;
    sub_23B1C5390();
    sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
    v147 = sub_23B1C575C();
    (*(void (**)(char *, uint64_t))(v597 + 8))(v146, v224);
    if ((v147 & 1) != 0)
    {

      v148 = v596;
      v149 = v595;
    }
    else
    {
      LODWORD(v611) = sub_23B1C54D4();
      sub_23AB6CD48();
      v150 = sub_23B1C575C();

      v148 = v596;
      v149 = v595;
      if ((v150 & 1) == 0)
      {
        swift_beginAccess();
        v205 = *(void (**)(uint64_t *))(v610 + 16);
        v206 = v537;
        *v537 = (uint64_t)v144;
        swift_storeEnumTagMultiPayload();
        v207 = v144;
        swift_retain();
        v205(v206);
        swift_release();

        sub_23AA8A05C((uint64_t)v206, qword_2542E3690);
        return (*(uint64_t (**)(char *, uint64_t))(v223 + 8))(v594, v130);
      }
    }
    v151 = v538;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v223 + 16))(v149, v151, v130);
    v152 = sub_23B1C59E4();
    v153 = v223;
    v155 = v154;
    v156 = *(void (**)(char *, uint64_t))(v153 + 8);
    v156(v149, v130);
    v157 = (_QWORD *)((char *)v132 + qword_2542EDF28);
    v158 = swift_beginAccess();
    if (*v157 != -1)
      break;
    __break(1u);
LABEL_162:
    v609 = v222;
    v468 = (char)v620;
    if (v620 == 2)
    {
      __break(1u);
LABEL_194:
      MEMORY[0x24BDAC7A8](v158);
      v518 = (_QWORD *)v598;
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B19F660, (uint64_t)&v516, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 123, 2, 1920);
    }
    swift_bridgeObjectRelease();
    if ((v468 & 1) != 0)
    {
      v480 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v481 = v607;
      v482 = (void (*)(char *, char *, uint64_t))v576;
      ((void (*)(char *, char *, uint64_t))v576)(v543, v546, v607);
      v482(v544, v531, v481);
      v483 = sub_23B1C5E40();
      v484 = sub_23B1C6A88();
      v247 = (uint64_t)v483;
      LODWORD(v576) = v484;
      if (os_log_type_enabled(v483, v484))
      {
        v485 = swift_slowAlloc();
        v571 = (char *)swift_slowAlloc();
        v620 = v571;
        *(_DWORD *)v485 = 136315394;
        v486 = v543;
        v487 = (void *)sub_23B1C5954();
        v488 = objc_msgSend(v487, sel_fp_shortDescription);

        v489 = sub_23B1C63E0();
        v491 = v490;

        *(_QWORD *)&v611 = sub_23AABEC68(v489, v491, (uint64_t *)&v620);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        v492 = v607;
        v493 = (void (*)(char *, uint64_t))v561;
        v561((uint64_t)v486, v607);
        *(_WORD *)(v485 + 12) = 2080;
        v570 = (char *)(v485 + 14);
        v494 = v544;
        v495 = (void *)sub_23B1C5954();
        v496 = objc_msgSend(v495, sel_fp_shortDescription);

        v497 = sub_23B1C63E0();
        v499 = v498;

        *(_QWORD *)&v611 = sub_23AABEC68(v497, v499, (uint64_t *)&v620);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        v493(v494, v492);
        _os_log_impl(&dword_23AA66000, (os_log_t)v247, (os_log_type_t)v576, "attempting rename of relocation symlink from %s to %s", (uint8_t *)v485, 0x16u);
        v500 = v571;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v500, -1, -1);
        MEMORY[0x23B8614BC](v485, -1, -1);
      }
      else
      {
LABEL_177:
        v501 = v607;
        v502 = (void (*)(char *, uint64_t))v561;
        v561((uint64_t)v543, v607);
        v502(v544, v501);
      }

      v240 = *(void (**)(char *, uint64_t))(v541 + 8);
      v240(v545, v542);
      sub_23B1C59E4();
      sub_23B1C59E4();
      v503 = sub_23B1C6458();
      swift_bridgeObjectRelease();
      v504 = sub_23B1C6458();
      swift_bridgeObjectRelease();
      v505 = renameatx_np(-2, (const char *)(v503 + 32), -2, (const char *)(v504 + 32), 4u);
      swift_release();
      swift_release();
      if ((v505 & 0x80000000) == 0)
        goto LABEL_182;
      v506 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v507 = sub_23B1C5E40();
      v508 = sub_23B1C6AA0();
      if (os_log_type_enabled(v507, v508))
      {
        v509 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v509 = 67109120;
        LODWORD(v620) = MEMORY[0x23B85E7A4]();
        sub_23B1C6CBC();
        _os_log_impl(&dword_23AA66000, v507, v508, "rename of relocation symlink failed with %{darwin.errno}d, attempting unlink", v509, 8u);
        MEMORY[0x23B8614BC](v509, -1, -1);
      }

      v240(v540, v542);
      sub_23B1C59E4();
      v510 = sub_23B1C6458();
      swift_bridgeObjectRelease();
      v511 = unlink((const char *)(v510 + 32));
      swift_release();
      if (v511 < 0)
      {
LABEL_185:
        v512 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v513 = sub_23B1C5E40();
        v514 = sub_23B1C6AA0();
        if (os_log_type_enabled(v513, v514))
        {
          v515 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v515 = 67109120;
          LODWORD(v620) = MEMORY[0x23B85E7A4]();
          sub_23B1C6CBC();
          _os_log_impl(&dword_23AA66000, v513, v514, "unlink of relocation symlink failed with %{darwin.errno}d", v515, 8u);
          MEMORY[0x23B8614BC](v515, -1, -1);
        }

        v240(v539, v542);
        v561((uint64_t)v546, v607);
      }
      else
      {
LABEL_182:
        v561((uint64_t)v546, v607);

      }
      v132 = v604;
      v281 = (uint64_t)v608;
      v252 = v592;
LABEL_157:
      v458 = v554;
      v456 = v555;
      v459 = v557;
      v460 = v549;
      v457 = (uint64_t)v578;
    }
    else
    {
      v132 = v604;
      v281 = (uint64_t)v608;
      v252 = v592;
      v455 = v554;
      v456 = v555;
      v460 = v549;
      v457 = (uint64_t)v578;
      v561((uint64_t)v546, v607);

      v459 = v557;
LABEL_165:
      v458 = v455;
    }
    sub_23AA907B0(v281, v459, type metadata accessor for VFSItem);
    v470 = *(_QWORD *)(v598 + 16);
    v469 = *(_QWORD *)(v598 + 24);
    sub_23AA907B0((uint64_t)v577, v456 + *(int *)(v584 + 40), (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    *(_QWORD *)v456 = v457;
    *(_BYTE *)(v456 + 8) = (_BYTE)v535;
    *(_QWORD *)(v456 + 16) = v470;
    *(_QWORD *)(v456 + 24) = v469;
    v471 = v550;
    sub_23AA8EFC8(v281 + *(int *)(v605 + 48), v550, &qword_2542E6760);
    v472 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v458 + 48);
    if (v472(v471, 1, v460) != 1)
      sub_23AA724E8(v471, v553, (uint64_t *)&unk_2542E6740);
    v473 = v553;
    (*(void (**)(void))(v554 + 56))();
    if (v472(v473, 1, v460) == 1)
    {
      v474 = v551;
      v533(v551, 1, 1, v607);
      swift_bridgeObjectRetain();
      sub_23AA8A05C(v473, &qword_2542E6760);
    }
    else
    {
      v474 = v551;
      sub_23AA724E8(v473, v551, (uint64_t *)&unk_2542E6740);
      swift_bridgeObjectRetain();
    }
    v223 = v606;
    v631[0] = v556;
    v631[1] = v529;
    v631[2] = v524;
    v631[3] = v523;
    v631[4] = v522;
    v475 = v555;
    v476 = v609;
    sub_23B165070(v557, v555, (uint64_t)v631, v474, 3, v552);
    v609 = v476;
    v263 = v577;
    if (v476)
    {
      sub_23AAAE53C((uint64_t)v574, v562);
      sub_23AC03E50((uint64_t)v619);
      sub_23AA8A05C(v474, (uint64_t *)&unk_2542E6740);
      sub_23AA8A05C(v475, (uint64_t *)&unk_2542E1DF0);
      sub_23AA937BC(v557, type metadata accessor for VFSItem);
      sub_23AA937BC(v558, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
      v130 = v607;
      v477 = (void (*)(char *, uint64_t))v561;
      v561((uint64_t)v530, v607);
      v477(v531, v130);
      swift_release();
      sub_23AA937BC(v281, type metadata accessor for VFSItem);
      v222 = 0;
LABEL_118:
      v224 = v603;
      v144 = v609;
    }
    else
    {
      sub_23AAAE53C((uint64_t)v574, v562);
      sub_23AC03E50((uint64_t)v619);
      sub_23AA8A05C(v474, (uint64_t *)&unk_2542E6740);
      sub_23AA8A05C(v475, (uint64_t *)&unk_2542E1DF0);
      sub_23AA937BC(v557, type metadata accessor for VFSItem);
      sub_23AA937BC(v558, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
      v478 = v607;
      v479 = (void (*)(char *, uint64_t))v561;
      v561((uint64_t)v530, v607);
      v479(v531, v478);
      sub_23ADF23AC(v552, v281);
LABEL_84:
      v266 = v610;
      v282 = (uint64_t)v575;
      if ((v617[0] & 3) != 0)
        v617[0] &= 0xFFFFFFFFFFFFFFFCLL;
LABEL_86:
      sub_23AA8EFC8(v598, v282, (uint64_t *)&unk_2542E1DF0);
      if ((v534 & 0x100000000000) != 0)
      {
        v289 = *(_BYTE *)(v282 + *(int *)(v584 + 40) + v252[15]);
        sub_23AA8A05C(v282, (uint64_t *)&unk_2542E1DF0);
        v265 = v617[0];
        if ((v289 & 1) == 0 && (v617[0] & 0x100000000000) != 0)
        {
          v265 = v617[0] & 0xFFFFEFFFFFFFFFFFLL;
          v617[0] &= ~0x100000000000uLL;
        }
        v266 = v610;
      }
      else
      {
        sub_23AA8A05C(v282, (uint64_t *)&unk_2542E1DF0);
        v265 = v617[0];
      }
LABEL_92:
      if (!v265)
      {
        swift_beginAccess();
        v302 = *(void (**)(uint64_t *))(v266 + 16);
        v303 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34C8) + 48);
        v304 = v537;
        sub_23AA907B0(v281, (uint64_t)v537, type metadata accessor for VFSItem);
        v305 = *((_QWORD *)v583 + 2);
        v306 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34B8);
        *(uint64_t *)((char *)v304 + *(int *)(v306 + 36)) = v305;
        *((_BYTE *)v304 + *(int *)(v306 + 40)) = 0;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v306 - 8) + 56))(v304, 0, 1, v306);
        *(uint64_t *)((char *)v304 + v303) = 0;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        v302(v304);
        swift_release();
        sub_23AA8A05C((uint64_t)v304, qword_2542E3690);
        (*(void (**)(char *, uint64_t))(v606 + 8))(v594, v607);
        swift_release();
        v307 = v281;
        return sub_23AA937BC(v307, type metadata accessor for VFSItem);
      }
      if ((v265 & 0x10) != 0)
      {
        v576 = a20;
        v578 = (_QWORD *)a19;
        swift_beginAccess();
        v308 = *(_QWORD *)(v532 + 16);
        v309 = *(unsigned int *)(v532 + 24);
        v310 = *(_QWORD *)(v532 + 32);
        v311 = *(unsigned __int8 *)(v532 + 40);
        v312 = *(unsigned __int8 *)(v532 + 64);
        v577 = v263;
        v313 = *(_QWORD *)(v532 + 72);
        v314 = *(_QWORD *)(v532 + 80);
        v315 = *(_QWORD *)(v532 + 104);
        v620 = (char *)v308;
        v621 = v309;
        v622 = v310;
        v623 = v311;
        v624 = *(_OWORD *)(v532 + 48);
        v625 = v312;
        v626 = v313;
        v628 = *(_OWORD *)(v532 + 88);
        v627 = v314;
        v629 = v315;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v132 = v604;
        sub_23B157264(v599, v600, (uint64_t)&v620, (uint64_t)v630);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v316 = v592;
        if (v577[v592[27]] == (a18 & 1))
        {
          v338 = (void *)swift_retain();
          v339 = objc_sync_enter(v338);
          v340 = (uint64_t)v608;
          if (v339)
            goto LABEL_191;
          v341 = v132[20];
          swift_retain();
          v342 = objc_sync_exit(v132);
          v343 = v602;
          v344 = v609;
          v345 = v599;
          if (v342)
            goto LABEL_192;
          swift_release();
          v346 = *(unsigned int *)(v341 + 16);
          v347 = swift_release();
          MEMORY[0x24BDAC7A8](v347);
          *(&v520 - 14) = v340;
          *(&v520 - 13) = (uint64_t)v617;
          *(&v520 - 12) = v598;
          *(&v520 - 11) = (uint64_t)v132;
          v348 = v576;
          *(&v520 - 10) = (uint64_t)v581;
          *(&v520 - 9) = v348;
          v349 = v528;
          *(&v520 - 8) = (uint64_t)v343;
          *(&v520 - 7) = (uint64_t)v349;
          v350 = v594;
          *(&v520 - 6) = (uint64_t)v594;
          *(&v520 - 5) = (uint64_t)a21;
          v516 = v578;
          v517 = v345;
          v351 = v600;
          LOBYTE(v518) = v600;
          sub_23AC3A86C(v630, v346, 2097153, 2, (uint64_t)sub_23B19F594, (uint64_t)(&v520 - 16));
          v352 = v340;
          if (!v344)
          {
            sub_23AC03E50((uint64_t)v630);
            v615 = 0u;
            v616 = 0u;
            v613 = 0u;
            v614 = 0u;
            v612 = 0u;
            v611 = 0u;
            v374 = v527;
            swift_beginAccess();
            v375 = *v374;
            v376 = swift_allocObject();
            *(_QWORD *)(v376 + 16) = v610;
            *(_QWORD *)(v376 + 24) = v345;
            *(_BYTE *)(v376 + 32) = v351;
            *(_QWORD *)(v376 + 40) = v583;
            swift_retain();
            swift_retain();
            sub_23AA7BAC4(v345, v351, (uint64_t)&v611, 0, v375, (uint64_t)sub_23B19F5E4, v376);
            swift_release();
            (*(void (**)(char *, uint64_t))(v606 + 8))(v350, v607);
            swift_release();
            return sub_23AA937BC(v340, type metadata accessor for VFSItem);
          }
          v144 = v344;
          sub_23AC03E50((uint64_t)v630);
          swift_release();
          sub_23AA937BC(v352, type metadata accessor for VFSItem);
          v222 = 0;
          v130 = v607;
LABEL_123:
          v223 = v606;
          v224 = v603;
        }
        else
        {
          sub_23AC03E50((uint64_t)v630);
          v317 = v537;
          v318 = (uint64_t)v608;
          if (!v578)
          {
            swift_beginAccess();
            v370 = *(void (**)(uint64_t *))(v610 + 16);
            v618 = 22;
            swift_retain();
            sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
            sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
            v371 = v566;
            v372 = v573;
            sub_23B1C5864();
            v373 = sub_23B1C5558();
            (*(void (**)(char *, uint64_t))(v572 + 8))(v371, v372);
            *v317 = v373;
            swift_storeEnumTagMultiPayload();
            v370(v317);
            swift_release();
            sub_23AA8A05C((uint64_t)v317, qword_2542E3690);
            (*(void (**)(char *, uint64_t))(v606 + 8))(v594, v607);
            swift_release();
            return sub_23AA937BC(v318, type metadata accessor for VFSItem);
          }
          sub_23AA907B0((uint64_t)v577, v569, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
          swift_retain();
          sub_23AB59E60((int *)v265, (uint64_t)v582);
          if ((fpfs_supports_parent_mtime_iopolicy() & 1) == 0)
          {
            v319 = v316[8];
            v320 = (char *)v582 + v319;
            v321 = v569 + v319;
            v322 = sub_23B1C5BDC();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v322 - 8) + 24))(v321, v320, v322);
          }
          v323 = *v581;
          v324 = v617[0];
          v325 = v564;
          sub_23AA8EFC8(v598, v564, (uint64_t *)&unk_2542E1DF0);
          v132 = v604;
          v223 = v606;
          if ((v323 & 0x10000) != 0)
          {
            sub_23AA8A05C(v325, (uint64_t *)&unk_2542E1DF0);
LABEL_132:
            v329 = 0;
            v327 = v594;
LABEL_133:
            v377 = (uint64_t)v578;
            goto LABEL_134;
          }
          v326 = *(unsigned __int8 *)(v325 + *(int *)(v584 + 40) + v316[21]);
          sub_23AA8A05C(v325, (uint64_t *)&unk_2542E1DF0);
          if (!v326)
            goto LABEL_132;
          v327 = v594;
          if ((v324 & 8) != 0)
          {
            v328 = v316[20];
            if (v577[v328] == 1 && (*((_BYTE *)v582 + v328) & 1) != 0)
            {
              v329 = 0;
              goto LABEL_133;
            }
          }
          v377 = (uint64_t)v578;
          if ((*(_QWORD *)&v324 & 0x10010) != 0)
            v329 = *((_BYTE *)v582 + v526);
          else
            v329 = v577[v316[21]];
LABEL_134:
          v602 = &v520;
          v378 = v316[21];
          v379 = v569;
          *(_BYTE *)(v569 + v378) = v329;
          v380 = MEMORY[0x24BDAC7A8](v377);
          *(&v520 - 12) = (uint64_t)v132;
          *(&v520 - 11) = v380;
          *(&v520 - 10) = (uint64_t)v327;
          *(&v520 - 9) = v379;
          v381 = v576;
          *(&v520 - 8) = (uint64_t)v528;
          *(&v520 - 7) = v381;
          *(&v520 - 6) = v598;
          *(&v520 - 5) = v318;
          v516 = v617;
          v517 = v382;
          v518 = v581;
          v383 = v609;
          sub_23B150D14(v380, 0x200000, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23B19F558, (uint64_t)(&v520 - 14), (uint64_t)&v520);
          if (!v383)
          {
            swift_release();
            (*(void (**)(char *, uint64_t))(v223 + 8))(v327, v607);
            sub_23AA937BC(v379, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
            swift_release();
            return sub_23AA937BC(v318, type metadata accessor for VFSItem);
          }
          v384 = v383;
          swift_release();
          sub_23AA937BC(v379, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
          swift_release();
          sub_23AA937BC(v318, type metadata accessor for VFSItem);
          v222 = 0;
          v130 = v607;
          v224 = v603;
          v144 = v384;
        }
      }
      else
      {
        v290 = sub_23B196840(v265, v598, (uint64_t)v263);
        v292 = v572;
        v291 = v573;
        if ((v290 & 1) != 0)
        {
          if (!a19)
          {
            swift_beginAccess();
            v366 = *(void (**)(uint64_t *))(v266 + 16);
            LODWORD(v611) = 22;
            swift_retain();
            sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
            sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
            v367 = v566;
            sub_23B1C5864();
            v368 = sub_23B1C5558();
            (*(void (**)(char *, uint64_t))(v292 + 8))(v367, v291);
            v369 = v537;
            *v537 = v368;
            swift_storeEnumTagMultiPayload();
            v366(v369);
            swift_release();
            sub_23AA8A05C((uint64_t)v369, qword_2542E3690);
            (*(void (**)(char *, uint64_t))(v606 + 8))(v594, v607);
            swift_release();
            return sub_23AA937BC((uint64_t)v608, type metadata accessor for VFSItem);
          }
          v293 = v604[17];
          MEMORY[0x24BDAC7A8](v290);
          v294 = v598;
          *(&v520 - 12) = a19;
          *(&v520 - 11) = v294;
          v295 = (uint64_t)v608;
          v296 = v599;
          *(&v520 - 10) = (uint64_t)v608;
          *(&v520 - 9) = v296;
          *((_BYTE *)&v520 - 64) = v600;
          *(&v520 - 7) = (uint64_t)v617;
          *(&v520 - 6) = v297;
          v298 = v594;
          *(&v520 - 5) = (uint64_t)v581;
          v516 = v298;
          v517 = (uint64_t)v528;
          v518 = a21;
          v299 = swift_retain();
          v300 = v563;
          v301 = v609;
          sub_23B151B40(v299, 0x200000u, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23B19F514, (uint64_t)(&v520 - 14), v563);
          if (!v301)
          {
            *(_BYTE *)(v293 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
            if (*(_QWORD *)(v293 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
            {
              ObjectType = swift_getObjectType();
              swift_unknownObjectRetain();
              MEMORY[0x23B85F548](1, ObjectType);
              swift_unknownObjectRelease();
            }
            swift_beginAccess();
            v398 = *(void (**)(uint64_t *))(v610 + 16);
            v399 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34C8) + 48);
            v400 = v537;
            sub_23AA907B0(v300, (uint64_t)v537, type metadata accessor for VFSItem);
            v401 = *((_QWORD *)v583 + 2);
            v402 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34B8);
            *(uint64_t *)((char *)v400 + *(int *)(v402 + 36)) = v401;
            *((_BYTE *)v400 + *(int *)(v402 + 40)) = 0;
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v402 - 8) + 56))(v400, 0, 1, v402);
            *(uint64_t *)((char *)v400 + v399) = 0;
            swift_storeEnumTagMultiPayload();
            swift_retain();
            v398(v400);
            swift_release();
            swift_release();
            sub_23AA8A05C((uint64_t)v400, qword_2542E3690);
            sub_23AA937BC(v300, type metadata accessor for VFSItem);
            (*(void (**)(char *, uint64_t))(v606 + 8))(v594, v607);
            swift_release();
            v307 = (uint64_t)v608;
            return sub_23AA937BC(v307, type metadata accessor for VFSItem);
          }
          v144 = v301;
          swift_release();
          swift_release();
          sub_23AA937BC(v295, type metadata accessor for VFSItem);
          v222 = 0;
          v130 = v607;
          v132 = v604;
          goto LABEL_123;
        }
        v330 = v568;
        sub_23AA907B0((uint64_t)v263, (uint64_t)v568, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        sub_23AB59E60((int *)v265, (uint64_t)v582);
        v331 = v592[20];
        if ((v263[v331] & 1) != 0 && v330[v331] == 1)
          v330[v592[22]] = v263[v592[22]];
        v332 = sub_23AB5DC04(v330, v263);
        v132 = v604;
        v333 = (uint64_t)v567;
        if ((v265 & 0x10000) != 0
          || !v332
          || (sub_23AA724E8(a20, (uint64_t)&v620, &qword_2542E5050), sub_23AAFCF2C((uint64_t)&v620) != 1))
        {
          v334 = sub_23AA907B0((uint64_t)v330, v333, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
          MEMORY[0x24BDAC7A8](v334);
          *(&v520 - 8) = (uint64_t)v617;
          *(&v520 - 7) = (uint64_t)v132;
          *(&v520 - 6) = v599;
          *((_BYTE *)&v520 - 40) = v600;
          v335 = (uint64_t)v608;
          v516 = v528;
          v517 = (uint64_t)v608;
          v518 = v330;
          v336 = v609;
          sub_23B1A5240(a20, v337, (uint64_t)sub_23B19F4EC, (uint64_t)(&v520 - 10), (uint64_t)&v520);
          v609 = v336;
          if (v336)
          {
            sub_23AA937BC(v333, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
            sub_23AA937BC((uint64_t)v330, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
            swift_release();
            sub_23AA937BC(v335, type metadata accessor for VFSItem);
            v222 = 0;
            v130 = v607;
            v223 = v606;
            goto LABEL_118;
          }
          sub_23AA937BC(v333, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        }
        v385 = *(_QWORD *)v598;
        v386 = *(_BYTE *)(v598 + 8);
        v388 = *(_QWORD *)(v598 + 16);
        v387 = *(_QWORD *)(v598 + 24);
        v389 = (uint64_t)v560;
        v390 = (uint64_t)v568;
        sub_23AA907B0((uint64_t)v568, (uint64_t)&v560[*(int *)(v584 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        *(_QWORD *)v389 = v385;
        *(_BYTE *)(v389 + 8) = v386;
        *(_QWORD *)(v389 + 16) = v388;
        *(_QWORD *)(v389 + 24) = v387;
        memset(v630, 0, 32);
        v630[4] = 1;
        v223 = v606;
        v391 = (uint64_t)v559;
        v130 = v607;
        (*(void (**)(char *, char *, uint64_t))(v606 + 16))(v559, v594, v607);
        v533(v391, 0, 1, v130);
        v392 = v617[0];
        swift_bridgeObjectRetain();
        v393 = (uint64_t)v608;
        v394 = v392;
        v395 = v609;
        sub_23B165070((uint64_t)v608, v389, (uint64_t)v630, v391, v394, v565);
        if (!v395)
        {
          sub_23AA8A05C(v391, (uint64_t *)&unk_2542E6740);
          sub_23AA8A05C(v389, (uint64_t *)&unk_2542E1DF0);
          swift_beginAccess();
          v420 = *(void (**)(uint64_t *))(v610 + 16);
          v421 = v130;
          v422 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34C8) + 48);
          v423 = v565;
          v424 = v537;
          sub_23AA907B0(v565, (uint64_t)v537, type metadata accessor for VFSItem);
          v425 = v390;
          v426 = *((_QWORD *)v583 + 2);
          v427 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34B8);
          *(uint64_t *)((char *)v424 + *(int *)(v427 + 36)) = v426;
          *((_BYTE *)v424 + *(int *)(v427 + 40)) = 0;
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v427 - 8) + 56))(v424, 0, 1, v427);
          *(uint64_t *)((char *)v424 + v422) = 0;
          swift_storeEnumTagMultiPayload();
          swift_retain();
          v420(v424);
          swift_release();
          sub_23AA8A05C((uint64_t)v424, qword_2542E3690);
          sub_23AA937BC(v423, type metadata accessor for VFSItem);
          (*(void (**)(char *, uint64_t))(v606 + 8))(v594, v421);
          sub_23AA937BC(v425, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
          swift_release();
          return sub_23AA937BC((uint64_t)v608, type metadata accessor for VFSItem);
        }
        v396 = v395;
        sub_23AA8A05C(v391, (uint64_t *)&unk_2542E6740);
        sub_23AA8A05C(v389, (uint64_t *)&unk_2542E1DF0);
        sub_23AA937BC(v390, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        swift_release();
        sub_23AA937BC(v393, type metadata accessor for VFSItem);
        v222 = 0;
        v224 = v603;
        v144 = v396;
      }
    }
  }
  ++*v157;
  v159 = (void *)swift_retain();
  if (objc_sync_enter(v159))
    goto LABEL_191;
  v608 = v156;
  v609 = v144;
  v160 = v132[20];
  swift_retain();
  if (objc_sync_exit(v132))
    goto LABEL_192;
  swift_release();
  v161 = type metadata accessor for VFSFileTree(0);
  v162 = MEMORY[0x23B8615C4](v132 + 34);
  v163 = MEMORY[0x24BDAC7A8](v162);
  *(&v520 - 6) = v161;
  *(&v520 - 5) = v160;
  v606 = v163;
  v516 = (_QWORD *)v163;
  v517 = v164;
  LOBYTE(v518) = 2;
  v519 = 0;
  v165 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v148 + 56);
  v166 = (uint64_t)v591;
  v167 = v148;
  v168 = v589;
  v165(v591, 1, 1, v589);
  swift_bridgeObjectRetain();
  sub_23B0E2EA0(4294967294, v152, v155, 2129920, 0, 0, v166, (uint64_t)sub_23ACFC288, (uint64_t)(&v520 - 8));
  v174 = v580;
  sub_23AA8EFC8(v166, v580, qword_2542E5250);
  v175 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v174, 1, v168);
  v132 = v590;
  if (v175 == 1)
  {
    __break(1u);
    goto LABEL_189;
  }
  sub_23AA724E8(v174, (uint64_t)v590, &qword_2542E72C0);
  sub_23AA8A05C(v166, qword_2542E5250);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  v176 = v610;
  v177 = v586;
  v178 = v585;
  v179 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v593 + 48))(v132, 1, v605);
  v180 = v588;
  v181 = v587;
  if (v179 == 1)
  {
    sub_23AA8A05C((uint64_t)v132, &qword_2542E72C0);
    swift_beginAccess();
    v182 = *(void (**)(uint64_t *))(v176 + 16);
    swift_retain();
    sub_23B1C5390();
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_23B1C5864();
    v183 = sub_23B1C5354();
    (*(void (**)(char *, uint64_t))(v178 + 8))(v180, v177);
    v184 = v537;
    *v537 = v183;
    swift_storeEnumTagMultiPayload();
    v182(v184);
    swift_release();

    v185 = (uint64_t)v184;
  }
  else
  {
    sub_23AA94050((uint64_t)v132, v587, type metadata accessor for VFSItem);
    v186 = v598;
    v187 = (uint64_t *)(v598 + 16);
    v188 = (uint64_t *)(v598 + 24);
    v189 = v534;
    if ((v534 & 1) == 0)
    {
      v188 = (uint64_t *)(v181 + 40);
      v187 = (uint64_t *)(v181 + 32);
    }
    v190 = v181;
    v191 = *v188;
    v192 = *v187;
    swift_bridgeObjectRetain();
    v193 = (uint64_t *)(v190 + 16);
    v194 = (char *)(v190 + 24);
    if ((v189 & 2) != 0)
    {
      v193 = (uint64_t *)v186;
      v194 = (char *)(v186 + 8);
    }
    v195 = *v194;
    v196 = *v193;
    v197 = *(_QWORD *)v190;
    v198 = *(_BYTE *)(v190 + 8);
    v199 = sub_23AC3C0B0();
    *(_QWORD *)&v611 = v197;
    BYTE8(v611) = v198;
    *(_QWORD *)&v612 = v192;
    *((_QWORD *)&v612 + 1) = v191;
    *(_QWORD *)&v613 = v196;
    BYTE8(v613) = v195;
    *(_QWORD *)&v614 = v199;
    *((_QWORD *)&v614 + 1) = v200;
    v201 = v609;
    *(_QWORD *)&v615 = v609;
    sub_23B19F4E0((uint64_t)&v611);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v202 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v611, v203, (uint64_t *)&unk_2542E0950);
    v204 = v201;
    swift_willThrow();
    sub_23AA937BC(v190, type metadata accessor for VFSItem);
    swift_beginAccess();
    v208 = *(void (**)(uint64_t *))(v610 + 16);
    v209 = v537;
    *v537 = (uint64_t)v202;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v210 = v202;
    v208(v209);
    swift_release();

    v185 = (uint64_t)v209;
  }
  sub_23AA8A05C(v185, qword_2542E3690);
  return ((uint64_t (*)(char *, uint64_t))v608)(v594, v607);
}

void *sub_23B16BFD0@<X0>(void **a1@<X0>, int *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *result;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v4 = sub_23B1C5A08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = *a1;
  if (*a1)
  {
    v9 = objc_msgSend(result, sel_URL);
    sub_23B1C59CC();

    sub_23B1C59E4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_23B1C59E4();
    v10 = sub_23B1C6458();
    swift_bridgeObjectRelease();
    v11 = sub_23B1C6458();
    swift_bridgeObjectRelease();
    v12 = renameatx_np(-2, (const char *)(v10 + 32), -2, (const char *)(v11 + 32), 4u);
    swift_release();
    result = (void *)swift_release();
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B16C128()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B14AA50();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B16C1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, void (**a14)(uint64_t), uint64_t *a15)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  void *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  char v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  __int16 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  _QWORD v97[5];
  _QWORD v98[5];

  v91 = a6;
  v94 = a8;
  v95 = a7;
  v93 = a2;
  v90 = a1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v20);
  v86 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for VFSItem(0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v88 = (uint64_t)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v75 - v25;
  v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v27 = MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)&v75 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v83 = (uint64_t)&v75 - v29;
  v84 = type metadata accessor for ItemMetadata();
  v30 = MEMORY[0x24BDAC7A8](v84);
  v89 = (uint64_t)&v75 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v75 - v32;
  v34 = sub_23B1C5570();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v75 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a4)
  {
    v96 = 2;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    return swift_willThrow();
  }
  v82 = v26;
  v80 = v17;
  v38 = a5[17];
  sub_23AA907B0(v94, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  swift_beginAccess();
  v39 = *a9;
  v40 = *((unsigned int *)a9 + 2);
  v41 = a9[2];
  v42 = *((unsigned __int8 *)a9 + 24);
  v43 = (void *)swift_retain();
  if (objc_sync_enter(v43))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a5);
  v81 = v19;
  v44 = a5[20];
  swift_retain();
  if (objc_sync_exit(a5))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a5);
  swift_release();
  v74 = v42;
  v45 = v92;
  v46 = v93;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, __int16, uint64_t, uint64_t))(*(_QWORD *)v38 + 416))(v97, v91, v90, v93, v95, v33, v39, v40, v41, v74, v44, a10);
  if (v45)
  {
    sub_23AA937BC((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    return swift_release();
  }
  v76 = a12;
  v91 = v97[0];
  v90 = v97[1];
  v79 = v97[2];
  v78 = v97[3];
  v77 = v97[4];
  sub_23AA937BC((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  swift_release();
  v48 = v94;
  v49 = v89;
  sub_23AA907B0(v94, v89, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v50 = (int *)v84;
  v51 = *(_BYTE *)(v48 + *(int *)(v84 + 108));
  v92 = a13;
  if ((v51 & 1) != 0)
  {
    v52 = v83;
    sub_23AA8EFC8(a11, v83, (uint64_t *)&unk_2542E1DF0);
LABEL_10:
    sub_23AA8A05C(v52, (uint64_t *)&unk_2542E1DF0);
    *(_BYTE *)(v49 + v50[27]) = 1;
    goto LABEL_11;
  }
  v53 = *(_DWORD *)(v46 + 40);
  v52 = v83;
  sub_23AA8EFC8(a11, v83, (uint64_t *)&unk_2542E1DF0);
  if (v53 == 3)
    goto LABEL_10;
  if (*(_BYTE *)(v52 + *(int *)(v87 + 40)))
  {
    sub_23AA8A05C(v52, (uint64_t *)&unk_2542E1DF0);
    *(_BYTE *)(v49 + v50[27]) = 0;
    goto LABEL_12;
  }
  v73 = *(_DWORD *)(v46 + 40);
  sub_23AA8A05C(v52, (uint64_t *)&unk_2542E1DF0);
  *(_BYTE *)(v49 + v50[27]) = v73 == 2;
  if (v73 != 2)
    goto LABEL_12;
LABEL_11:
  *(_QWORD *)(v49 + v50[25]) = *(_QWORD *)(v46 + 56);
  *(_QWORD *)(v49 + v50[26]) = *(_QWORD *)(v46 + 168);
LABEL_12:
  v54 = v49;
  sub_23AA907B0(v76, v88, type metadata accessor for VFSItem);
  v55 = *(_QWORD *)a11;
  v56 = *(_BYTE *)(a11 + 8);
  v58 = *(_QWORD *)(a11 + 16);
  v57 = *(_QWORD *)(a11 + 24);
  v59 = (uint64_t)v85;
  sub_23AA907B0(v54, (uint64_t)&v85[*(int *)(v87 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *(_QWORD *)v59 = v55;
  *(_BYTE *)(v59 + 8) = v56;
  *(_QWORD *)(v59 + 16) = v58;
  *(_QWORD *)(v59 + 24) = v57;
  v98[0] = v91;
  v98[1] = v90;
  v98[2] = v79;
  v98[3] = v78;
  v98[4] = v77;
  v60 = sub_23B1C5A08();
  v61 = *(_QWORD *)(v60 - 8);
  v62 = (uint64_t)v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v86, v95, v60);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v60);
  v63 = *v92;
  swift_bridgeObjectRetain();
  v64 = (uint64_t)v82;
  v65 = v88;
  sub_23B165070(v88, v59, (uint64_t)v98, v62, v63, (uint64_t)v82);
  sub_23AC03E50((uint64_t)v97);
  sub_23AA8A05C(v62, (uint64_t *)&unk_2542E6740);
  sub_23AA8A05C(v59, (uint64_t *)&unk_2542E1DF0);
  sub_23AA937BC(v65, type metadata accessor for VFSItem);
  swift_beginAccess();
  v66 = *a14;
  v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34C8) + 48);
  v68 = v64;
  v69 = v64;
  v70 = (uint64_t)v81;
  sub_23AA907B0(v68, (uint64_t)v81, type metadata accessor for VFSItem);
  v71 = *a15;
  v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34B8);
  *(_QWORD *)(v70 + *(int *)(v72 + 36)) = v71;
  *(_BYTE *)(v70 + *(int *)(v72 + 40)) = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v70, 0, 1, v72);
  *(_QWORD *)(v70 + v67) = 0;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  v66(v70);
  swift_release();
  sub_23AA8A05C(v70, qword_2542E3690);
  sub_23AA937BC(v69, type metadata accessor for VFSItem);
  return sub_23AA937BC(v89, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23B16C958(int a1, uint64_t a2, int **a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int **v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;

  v56 = a7;
  v57 = a5;
  v58 = a8;
  v66 = a6;
  v69 = a1;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  MEMORY[0x24BDAC7A8](v17);
  v67 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for VFSItem(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v71 = (uint64_t)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v54 - v22;
  v72 = (int *)type metadata accessor for ItemMetadata();
  v24 = MEMORY[0x24BDAC7A8](v72);
  v68 = (uint64_t)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v54 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v54 - v29;
  sub_23AA907B0(a2 + *(int *)(v19 + 28), (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v65 = a3;
  v31 = *a3;
  v55 = v17;
  v32 = *(int *)(v17 + 40);
  v70 = a4;
  v33 = a4 + v32;
  sub_23AA907B0((uint64_t)v28, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AB59E60(v31, v33);
  sub_23AA937BC((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA907B0(a2, (uint64_t)v23, type metadata accessor for VFSItem);
  LODWORD(v31) = v23[*(int *)(v19 + 28)];
  sub_23AA937BC((uint64_t)v23, type metadata accessor for VFSItem);
  if ((_DWORD)v31 == 1)
  {
    v34 = *(_BYTE *)(v33 + 8);
    *((_DWORD *)v30 + 1) = *(_DWORD *)(v33 + 4);
    v30[8] = v34;
  }
  if ((fpfs_supports_parent_mtime_iopolicy() & 1) == 0)
  {
    v35 = v72[8];
    v36 = v33 + v35;
    v37 = &v30[v35];
    v38 = sub_23B1C5BDC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v37, v36, v38);
  }
  v62 = a12;
  v63 = a13;
  v60 = a10;
  v61 = a11;
  v59 = a9;
  sub_23AA907B0(a2, v71, type metadata accessor for VFSItem);
  v39 = v67;
  v40 = *v66;
  v41 = *v65;
  sub_23AA8EFC8(v70, v67, (uint64_t *)&unk_2542E1DF0);
  v64 = a14;
  if ((v40 & 0x10000) != 0)
  {
    sub_23AA8A05C(v39, (uint64_t *)&unk_2542E1DF0);
LABEL_13:
    v47 = 0;
    v48 = v56;
    v44 = a2;
    v46 = v57;
    v45 = v58;
    goto LABEL_16;
  }
  v42 = *(unsigned __int8 *)(v39 + *(int *)(v55 + 40) + v72[21]);
  sub_23AA8A05C(v39, (uint64_t *)&unk_2542E1DF0);
  if (!v42)
    goto LABEL_13;
  if ((v41 & 8) != 0)
  {
    v43 = v72[20];
    if (*(_BYTE *)(v71 + *(int *)(v19 + 28) + v43) == 1 && (*(_BYTE *)(v33 + v43) & 1) != 0)
      goto LABEL_13;
  }
  v44 = a2;
  v46 = v57;
  v45 = v58;
  if (((unint64_t)v41 & 0x10010) != 0)
    v47 = *(_BYTE *)(v33 + v72[21]);
  else
    v47 = *(_BYTE *)(v71 + *(int *)(v19 + 28) + v72[21]);
  v48 = v56;
LABEL_16:
  sub_23AA937BC(v71, type metadata accessor for VFSItem);
  v30[v72[21]] = v47;
  v49 = v68;
  v50 = sub_23AA907B0((uint64_t)v30, v68, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  MEMORY[0x24BDAC7A8](v50);
  *(&v54 - 14) = v70;
  *(&v54 - 13) = (uint64_t)v30;
  *(&v54 - 12) = v45;
  *(&v54 - 11) = v46;
  *((_DWORD *)&v54 - 20) = v69;
  v51 = v60;
  *(&v54 - 9) = v59;
  *(&v54 - 8) = v51;
  v52 = v61;
  *(&v54 - 7) = v48;
  *(&v54 - 6) = v52;
  *(&v54 - 5) = v62;
  *(&v54 - 4) = v44;
  *(&v54 - 3) = v63;
  *((_BYTE *)&v54 - 16) = v64;
  sub_23B1A5240(v48, 6, (uint64_t)sub_23B19F668, (uint64_t)(&v54 - 16), (uint64_t)&v54);
  sub_23AA937BC(v49, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  return sub_23AA937BC((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

void sub_23B16CD98(uint64_t a1, uint64_t a2, unsigned __int8 *a3, char a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void *v11;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  int v42;
  id v43;
  char v44;
  char v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  _OWORD v53[2];
  uint64_t v54;
  uint64_t v55;

  v49 = a1;
  v50 = a8;
  v51 = a6;
  v52 = a5;
  v55 = *MEMORY[0x24BDAC8D0];
  v48 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v48);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = 0;
  memset(v53, 0, sizeof(v53));
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  if (*(_BYTE *)(a2 + *(int *)(v24 + 40) + *(int *)(v21 + 80)) == 1)
  {
    v25 = 0;
    v26 = *a3;
    v47 = v11;
    v49 = a9;
    if (v26 == 1)
    {
      v27 = 0;
    }
    else
    {
      if (v26 != 2)
        v25 = 0x1E9F38F07;
      v27 = 5;
    }
    if (a4 < 0)
      v36 = 2;
    else
      v36 = v27;
    sub_23AA907B0((uint64_t)a3, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    swift_beginAccess();
    v37 = *(_DWORD *)(a7 + 8);
    v38 = sub_23B1C5A08();
    v39 = *(_QWORD *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v20, v50, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v20, 0, 1, v38);
    v40 = v47;
    sub_23B177C20(v51, v23, v37, v25, v36, (uint64_t)v20, v49);
    v35 = v40;
    if (!v40)
    {
      sub_23AA8A05C((uint64_t)v20, (uint64_t *)&unk_2542E6740);
      sub_23AA937BC((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      return;
    }
    sub_23AA8A05C((uint64_t)v20, (uint64_t *)&unk_2542E6740);
    sub_23AA937BC((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v41 = v48;
    v42 = *(unsigned __int8 *)(a10 + *(int *)(v48 + 28));
    if (v42 == 2)
    {
      sub_23AA907B0(a10, (uint64_t)v17, type metadata accessor for VFSItem);
LABEL_20:
      sub_23AA937BC((uint64_t)v17, type metadata accessor for VFSItem);
      goto LABEL_21;
    }
    sub_23AA907B0(a10, (uint64_t)v17, type metadata accessor for VFSItem);
    if (v42 == 1)
      goto LABEL_20;
    v45 = v17[*(int *)(v41 + 28) + *(int *)(v21 + 80)];
    sub_23AA937BC((uint64_t)v17, type metadata accessor for VFSItem);
    if ((v45 & 1) != 0)
      goto LABEL_22;
  }
  else
  {
    if (a11)
    {
      MEMORY[0x24BDAC7A8](v24);
      *((_DWORD *)&v46 - 20) = v51;
      *(&v46 - 9) = a11;
      *(&v46 - 8) = a2;
      *(&v46 - 7) = v29;
      *(&v46 - 6) = v28;
      *((_BYTE *)&v46 - 40) = v30;
      *(&v46 - 4) = v49;
      *(&v46 - 3) = (uint64_t)v53;
      *(&v46 - 2) = v31;
      v32 = swift_retain();
      sub_23B150D14(v32, 0x200000, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23B19F6D0, (uint64_t)(&v46 - 12), v33);
      v34 = v11;
      if (!v11)
      {
        swift_release();
        return;
      }
      swift_release();
    }
    else
    {
      MEMORY[0x24BDAC7A8](v24);
      *((_DWORD *)&v46 - 8) = v51;
      *(&v46 - 3) = v49;
      *(&v46 - 2) = (uint64_t)v53;
      *(&v46 - 1) = v52;
      sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19F6B0);
      v34 = v11;
      if (!v11)
        return;
    }
    v35 = v34;
  }
LABEL_21:
  v43 = v35;
  LODWORD(v53[0]) = sub_23B1C554C();
  sub_23AB6CD48();
  v44 = sub_23B1C575C();

  if ((v44 & 1) != 0)
LABEL_22:

}

uint64_t sub_23B16D1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v51 = a8;
  v50 = a7;
  v52 = (char *)a1;
  v68 = *MEMORY[0x24BDAC8D0];
  v13 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ItemMetadata();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v49 - v20;
  v22 = sub_23B1C5570();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    if (*(_BYTE *)(a6 + 80))
      v27 = -1;
    else
      v27 = *(_QWORD *)(a6 + 72);
    MEMORY[0x24BDAC7A8](v24);
    *((_DWORD *)&v49 - 16) = a5;
    *(&v49 - 7) = v28;
    *((_DWORD *)&v49 - 12) = (_DWORD)v52;
    *(&v49 - 5) = v29;
    *(&v49 - 4) = v27;
    *((_BYTE *)&v49 - 24) = v30 & 1;
    *(&v49 - 2) = v32;
    *(&v49 - 1) = v31;
    return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19F748);
  }
  else
  {
    v52 = v15;
    v54 = 0;
    MEMORY[0x24BDAC7A8](v24);
    *((_DWORD *)&v49 - 4) = a5;
    *(&v49 - 1) = (uint64_t)&v54;
    v34 = v53;
    result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19F714);
    if (!v34)
    {
      if ((v54 & 1) != 0)
      {
        LODWORD(v53) = a10;
        v49 = a9;
        v35 = *(_QWORD *)(a6 + 16);
        v36 = *(unsigned int *)(a6 + 36);
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
        sub_23AA907B0(v50 + *(int *)(v37 + 40), (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        sub_23AA907B0((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        v50 = sub_23AA9BD7C(v35, v36, (uint64_t)v19);
        LODWORD(v36) = v38;
        v40 = v39;
        v42 = v41 & 1;
        sub_23AA937BC((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        v43 = (uint64_t)v52;
        sub_23AA907B0(v51, (uint64_t)v52, type metadata accessor for VFSItem);
        v44 = *(_QWORD *)(v43 + 16);
        v45 = *(unsigned __int8 *)(v43 + 24);
        v46 = *(_QWORD *)(v43 + 32);
        v47 = *(_QWORD *)(v43 + 40);
        swift_bridgeObjectRetain();
        sub_23AA937BC(v43, type metadata accessor for VFSItem);
        swift_bridgeObjectRelease_n();
        v55 = v49;
        v56 = v53;
        v57 = v50;
        v58 = v36;
        v59 = v40;
        v60 = v42;
        v61 = 0;
        v62 = v44;
        v63 = v45;
        v64 = v46;
        v65 = v47;
        v66 = 0u;
        v67 = 0u;
        sub_23AAFC630((uint64_t)&v55);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)&v55, v48, (uint64_t *)&unk_2542E0950);
      }
      else
      {
        LODWORD(v55) = 37;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
      }
      return swift_willThrow();
    }
  }
  return result;
}

