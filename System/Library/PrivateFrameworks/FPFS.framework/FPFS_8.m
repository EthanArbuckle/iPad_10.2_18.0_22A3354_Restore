uint64_t sub_23AF728E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  BOOL v20;
  size_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  size_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  size_t v42;
  size_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  unint64_t v50;
  size_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  size_t v73;
  void (*v74)(size_t, uint64_t);
  size_t v75;
  unint64_t v76;
  unint64_t v77;
  size_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  size_t v86;
  void (*v87)(size_t, uint64_t);
  size_t v88;
  unint64_t v89;
  unint64_t v90;
  size_t v91;
  void *v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  unint64_t v97;
  size_t v98;
  int v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  size_t v104;
  void (*v105)(size_t, uint64_t);
  size_t v106;
  unint64_t v107;
  unint64_t v108;
  size_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  void (*v119)(unint64_t, uint64_t);
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  void *v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  void (*v132)(unint64_t, uint64_t);
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  void *v137;
  uint64_t v138;
  unint64_t v139;
  int v140;
  uint64_t v141;
  size_t v142;
  int v143;
  void (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  void (*v150)(unint64_t, uint64_t);
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  BOOL v160;
  unint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  size_t v169;
  unint64_t v170;
  size_t v171;
  unint64_t v172;
  size_t v173;
  size_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  void *v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(uint64_t);
  void *v186;
  const void *v187;
  int v188;
  unint64_t v189;
  unint64_t v190;
  size_t v191;
  void (*v192)(uint64_t);
  void *v193;
  const void *v194;
  int v195;
  size_t v196;
  void *v197;
  uint64_t v198;
  const void *v199;
  void (*v200)(uint64_t);
  void *v201;
  const void *v202;
  int v203;
  unint64_t v204;
  unint64_t v205;
  size_t v206;
  char v207;
  char v208;
  void *v209;
  const void *v210;
  void (*v211)(uint64_t);
  void *v212;
  const void *v213;
  int v214;
  unint64_t v215;
  uint64_t v216;
  size_t v217;
  void (*v218)(uint64_t);
  void *v219;
  const void *v220;
  int v221;
  uint64_t v222;
  void *v223;
  const void *v224;
  void (*v225)(uint64_t);
  void *v226;
  const void *v227;
  int v228;
  unint64_t v229;
  uint64_t v230;
  size_t v231;
  void *v232;
  const void *v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  char *v246;
  _BYTE *v247;
  int v248;
  uint64_t *v249;
  uint64_t v250;
  size_t v251;
  char *v252;
  char *v253;
  int v254;
  uint64_t *v255;
  uint64_t v256;
  unint64_t v257;
  unint64_t v258;
  size_t v259;
  unint64_t v260;
  unint64_t v261;
  _QWORD *v262;
  _QWORD *v263;
  unint64_t v264;
  unint64_t v265;
  _QWORD *v266;
  _QWORD *v267;
  size_t v268;
  size_t v269;
  uint64_t v270;
  int v271;
  void (*v272)(size_t, size_t, uint64_t);
  size_t v273;
  size_t v274;
  _BYTE *v275;
  unint64_t v276;
  unint64_t v277;
  unint64_t v278;
  unint64_t v279;
  _QWORD *v280;
  _QWORD *v281;
  unint64_t v282;
  unint64_t v283;
  void *v284;
  const void *v285;
  size_t v286;
  unint64_t v287;
  size_t v288;
  unint64_t v289;
  unint64_t v290;
  _QWORD *v291;
  _QWORD *v292;
  unint64_t v293;
  unint64_t v294;
  _QWORD *v295;
  _QWORD *v296;
  size_t v297;
  size_t v298;
  uint64_t v299;
  int v300;
  void (*v301)(size_t, size_t, uint64_t);
  size_t v302;
  size_t v303;
  _BYTE *v304;
  unint64_t v305;
  unint64_t v306;
  unint64_t v307;
  unint64_t v308;
  _QWORD *v309;
  _QWORD *v310;
  unint64_t v311;
  unint64_t v312;
  void *v313;
  const void *v314;
  unint64_t v315;
  unint64_t v316;
  unint64_t v317;
  _QWORD *v318;
  _QWORD *v319;
  unint64_t v320;
  unint64_t v321;
  _QWORD *v322;
  _QWORD *v323;
  unint64_t v324;
  unint64_t v325;
  uint64_t v326;
  int v327;
  void (*v328)(unint64_t, unint64_t, uint64_t);
  unint64_t v329;
  unint64_t v330;
  _BYTE *v331;
  unint64_t v332;
  unint64_t v333;
  unint64_t v334;
  unint64_t v335;
  _QWORD *v336;
  _QWORD *v337;
  unint64_t v338;
  unint64_t v339;
  void *v340;
  const void *v341;
  unint64_t v342;
  unint64_t v343;
  unint64_t v344;
  unint64_t v345;
  unint64_t v346;
  _QWORD *v347;
  _QWORD *v348;
  unint64_t v349;
  unint64_t v350;
  _QWORD *v351;
  _QWORD *v352;
  unint64_t v353;
  unint64_t v354;
  uint64_t v355;
  int v356;
  void (*v357)(unint64_t, unint64_t, uint64_t);
  unint64_t v358;
  unint64_t v359;
  _BYTE *v360;
  unint64_t v361;
  unint64_t v362;
  unint64_t v363;
  unint64_t v364;
  _QWORD *v365;
  _QWORD *v366;
  unint64_t v367;
  unint64_t v368;
  void *v369;
  const void *v370;
  size_t v371;
  _QWORD *v372;
  unint64_t v373;
  _QWORD *v374;
  _QWORD *v375;
  char *v376;
  size_t v377;
  _QWORD *v378;
  unint64_t v379;
  _QWORD *v380;
  _QWORD *v381;
  char *v382;
  _QWORD *v383;
  _QWORD *v384;
  unint64_t v385;
  unint64_t v386;
  uint64_t v387;
  _QWORD *v388;
  _QWORD *v389;
  _OWORD *v390;
  _OWORD *v391;
  unint64_t v392;
  unint64_t v393;
  uint64_t v394;
  unint64_t v395;
  unint64_t v396;
  size_t v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  _OWORD *v410;
  __int128 *v411;
  __int128 v412;
  unint64_t v413;
  unint64_t v414;
  __int128 v415;
  _QWORD *v416;
  _QWORD *v417;
  unint64_t v418;
  _QWORD *v419;
  _QWORD *v420;
  _QWORD *v421;
  _QWORD *v422;
  unint64_t v423;
  unint64_t v424;
  uint64_t v425;
  _QWORD *v426;
  _QWORD *v427;
  _OWORD *v428;
  _OWORD *v429;
  unint64_t v430;
  unint64_t v431;
  uint64_t v432;
  unint64_t v433;
  unint64_t v434;
  size_t v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  _OWORD *v448;
  __int128 *v449;
  __int128 v450;
  unint64_t v451;
  unint64_t v452;
  __int128 v453;
  _QWORD *v454;
  _QWORD *v455;
  unint64_t v456;
  _OWORD *v457;
  _OWORD *v458;
  uint64_t result;
  _QWORD *v460;
  _QWORD *v461;
  unint64_t v462;
  unint64_t v463;
  uint64_t v464;
  _QWORD *v465;
  _QWORD *v466;
  _OWORD *v467;
  _OWORD *v468;
  unint64_t v469;
  unint64_t v470;
  uint64_t v471;
  unint64_t v472;
  unint64_t v473;
  unint64_t v474;
  __int128 v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  _OWORD *v487;
  __int128 *v488;
  __int128 v489;
  unint64_t v490;
  unint64_t v491;
  __int128 v492;
  _QWORD *v493;
  _QWORD *v494;
  unint64_t v495;
  _QWORD *v496;
  _QWORD *v497;
  _QWORD *v498;
  _QWORD *v499;
  unint64_t v500;
  unint64_t v501;
  uint64_t v502;
  _QWORD *v503;
  _QWORD *v504;
  _OWORD *v505;
  _OWORD *v506;
  unint64_t v507;
  unint64_t v508;
  uint64_t v509;
  unint64_t v510;
  unint64_t v511;
  unint64_t v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  _OWORD *v525;
  __int128 *v526;
  __int128 v527;
  unint64_t v528;
  unint64_t v529;
  __int128 v530;
  _QWORD *v531;
  _QWORD *v532;
  unint64_t v533;
  _OWORD *v534;
  _OWORD *v535;
  unint64_t *v536;
  unint64_t v537;
  unint64_t *v538;
  unint64_t v539;
  unint64_t *v540;
  unint64_t v541;
  unint64_t *v542;
  unint64_t v543;
  unint64_t *v544;
  unint64_t v545;
  unint64_t *v546;
  unint64_t v547;
  unint64_t *v548;
  unint64_t v549;
  unint64_t *v550;
  unint64_t v551;
  unint64_t *v552;
  unint64_t v553;
  unint64_t *v554;
  unint64_t v555;
  unint64_t *v556;
  unint64_t v557;
  unint64_t *v558;
  unint64_t v559;
  size_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  size_t v564;
  size_t v565;
  size_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  size_t v570;
  size_t v571;
  unint64_t v572;
  unint64_t v573;
  uint64_t v574;
  size_t v575;
  unint64_t v576;
  unint64_t v577;
  _QWORD *v578;
  _QWORD *v579;
  unint64_t v580;
  unint64_t v581;
  _QWORD *v582;
  _QWORD *v583;
  size_t v584;
  size_t v585;
  uint64_t v586;
  int v587;
  void (*v588)(size_t, size_t, uint64_t);
  size_t v589;
  size_t v590;
  _BYTE *v591;
  unint64_t v592;
  unint64_t v593;
  unint64_t v594;
  unint64_t v595;
  _QWORD *v596;
  _QWORD *v597;
  unint64_t v598;
  unint64_t v599;
  void *v600;
  const void *v601;
  _QWORD *v602;
  _QWORD *v603;
  unint64_t v604;
  unint64_t v605;
  uint64_t v606;
  _QWORD *v607;
  _QWORD *v608;
  _OWORD *v609;
  _OWORD *v610;
  unint64_t v611;
  unint64_t v612;
  uint64_t v613;
  unint64_t v614;
  unint64_t v615;
  size_t v616;
  __int128 v617;
  __int128 v618;
  __int128 v619;
  __int128 v620;
  __int128 v621;
  __int128 v622;
  __int128 v623;
  __int128 v624;
  __int128 v625;
  __int128 v626;
  __int128 v627;
  __int128 v628;
  _OWORD *v629;
  __int128 *v630;
  __int128 v631;
  unint64_t v632;
  unint64_t v633;
  __int128 v634;
  _QWORD *v635;
  _QWORD *v636;
  unint64_t v637;
  void *v638;
  const void *v639;
  char *v640;
  char *v641;
  int v642;
  uint64_t *v643;
  uint64_t v644;
  size_t v645;
  size_t v646;
  _QWORD *v647;
  unint64_t v648;
  _QWORD *v649;
  _QWORD *v650;
  _QWORD *v651;
  _QWORD *v652;
  unint64_t v653;
  uint64_t v654;
  size_t v655;
  unint64_t v656;
  unint64_t v657;
  _QWORD *v658;
  _QWORD *v659;
  unint64_t v660;
  unint64_t v661;
  _QWORD *v662;
  _QWORD *v663;
  unint64_t v664;
  unint64_t v665;
  uint64_t v666;
  int v667;
  void (*v668)(unint64_t, unint64_t, uint64_t);
  unint64_t v669;
  unint64_t v670;
  _BYTE *v671;
  unint64_t v672;
  unint64_t v673;
  unint64_t v674;
  unint64_t v675;
  _QWORD *v676;
  _QWORD *v677;
  unint64_t v678;
  unint64_t v679;
  void *v680;
  const void *v681;
  _QWORD *v682;
  _QWORD *v683;
  unint64_t v684;
  unint64_t v685;
  uint64_t v686;
  _QWORD *v687;
  _QWORD *v688;
  _OWORD *v689;
  _OWORD *v690;
  unint64_t v691;
  unint64_t v692;
  uint64_t v693;
  unint64_t v694;
  unint64_t v695;
  unint64_t v696;
  __int128 v697;
  __int128 v698;
  __int128 v699;
  __int128 v700;
  __int128 v701;
  __int128 v702;
  __int128 v703;
  __int128 v704;
  __int128 v705;
  __int128 v706;
  __int128 v707;
  __int128 v708;
  _OWORD *v709;
  __int128 *v710;
  __int128 v711;
  unint64_t v712;
  unint64_t v713;
  __int128 v714;
  _QWORD *v715;
  _QWORD *v716;
  unint64_t v717;
  void *v718;
  const void *v719;
  char *v720;
  char *v721;
  int v722;
  uint64_t *v723;
  uint64_t v724;
  size_t v725;
  _QWORD *v726;
  unint64_t v727;
  _QWORD *v728;
  _QWORD *v729;
  _QWORD *v730;
  _QWORD *v731;
  void (*v732)(uint64_t, uint64_t);
  void (*v733)(uint64_t, uint64_t);
  void (*v734)(uint64_t, uint64_t);
  unint64_t v735;
  unint64_t v736;
  size_t v737;
  size_t v738;
  uint64_t v739;
  size_t v740;
  size_t v741;
  unsigned int v742;
  unsigned int v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  unsigned int v751;
  unsigned int v752;
  size_t v753;
  unint64_t v754;
  uint64_t v755;
  unsigned int v756;
  uint64_t v757;
  uint64_t v758;
  size_t v759;
  size_t v760;
  size_t v761;
  uint64_t v762;
  size_t v763;
  unint64_t __n;
  unint64_t v765;
  size_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  int v776;
  unsigned int v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  unint64_t v781;
  uint64_t v782;
  uint64_t v783;
  unint64_t v784;
  int v785;
  unint64_t v786;
  unsigned int v787;
  unsigned int v788;
  size_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  unsigned int v798;
  uint64_t v799;
  uint64_t v800;
  unint64_t v801;
  uint64_t v802;
  uint64_t v803;
  unsigned int v804;
  unint64_t v805;
  size_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  unsigned int v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t AssociatedTypeWitness;
  uint64_t v819;
  uint64_t v820;
  unint64_t v821;
  uint64_t v822;
  unsigned int v823;
  unint64_t v824;
  uint64_t v825;
  uint64_t v826;
  unint64_t v827;

  if (a1 != a2)
  {
    v4 = *(_QWORD *)(a3 + 16);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v6 = *(_QWORD *)(v5 + 64);
    v7 = *(unsigned __int8 *)(v5 + 80);
    v817 = v4;
    v797 = swift_getAssociatedTypeWitness();
    v8 = *(_QWORD *)(v797 - 8);
    v9 = *(_DWORD *)(v8 + 80) & 0xF8;
    v775 = swift_getAssociatedTypeWitness();
    v10 = *(_QWORD *)(v775 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v9 | v11 | 7;
    v767 = sub_23B1C5BDC();
    v13 = *(_QWORD *)(v767 - 8);
    v14 = *(unsigned __int8 *)(v13 + 80);
    v15 = v14 | 7;
    v16 = v12 | v7 | v14;
    v819 = v5;
    v17 = *(_DWORD *)(v10 + 84);
    v777 = *(_DWORD *)(v8 + 84);
    if (v777 > v17)
      v17 = *(_DWORD *)(v8 + 84);
    v752 = v17;
    if (v17 <= 0x7FFFFFFE)
      v17 = 2147483646;
    v823 = *(_DWORD *)(v5 + 84);
    v798 = v17;
    if (v17 <= v823)
      v17 = *(_DWORD *)(v5 + 84);
    v18 = *(_DWORD *)(v13 + 84);
    if (v18 <= 0x7FFFFFFE)
      v19 = 2147483646;
    else
      v19 = *(_DWORD *)(v13 + 84);
    v815 = v19;
    if (v17 <= v19)
      v17 = v19;
    v743 = v17;
    if (v17 <= 0x7FFFFFFF)
      v17 = 0x7FFFFFFF;
    v788 = v17;
    v756 = *(_DWORD *)(v13 + 84);
    v20 = v18 == 0;
    v826 = v7;
    v792 = v6 + v7;
    v808 = v12;
    v793 = v6 + v12;
    v796 = v8;
    v800 = *(_QWORD *)(v8 + 64) + 7;
    v773 = v11 + 8;
    v812 = v11;
    v774 = v10;
    v758 = *(_QWORD *)(v10 + 64) + 7;
    v824 = ((((v758 + ((v11 + 8 + (v800 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    v803 = v14 | 7;
    v822 = v15 + 16;
    v780 = v14 + 12;
    v778 = *(_QWORD *)(v767 - 8);
    v21 = *(_QWORD *)(v13 + 64);
    v766 = v21 + v14;
    v753 = v21 + 12;
    v761 = v21;
    v762 = v14 + 10;
    v22 = (v14
         + 10
         + ((((((v21 + 12 + ((v21 + v14 + ((v14 + 12) & ~v14)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14;
    if (v20)
      ++v21;
    v789 = v21;
    v781 = v22;
    v763 = v21 + 7;
    v821 = ((((((((((v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    v755 = (v15 + 16 + ((v6 + v12 + ((v6 + v7) & ~v7)) & ~v12) + v824) & ~v15;
    v786 = v16 + v6;
    v810 = v12 | v7 | v14;
    v765 = ((((v755 + v821 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    v23 = v765 + ((v16 + v6) & ~v16);
    v805 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = *(_QWORD *)(a3 + 24);
    v825 = swift_getAssociatedTypeWitness();
    v25 = *(_QWORD *)(v825 - 8);
    v26 = *(unsigned __int8 *)(v25 + 80);
    v801 = (v23 + v26) & ~v26;
    v27 = *(_DWORD *)(v25 + 84);
    v820 = v25;
    v28 = *(_QWORD *)(v25 + 64);
    if (v27)
      v29 = *(_QWORD *)(v25 + 64);
    else
      v29 = v28 + 1;
    v795 = swift_getAssociatedTypeWitness();
    v30 = *(_QWORD *)(v795 - 8);
    v31 = *(_DWORD *)(v30 + 80) & 0xF8;
    v772 = swift_getAssociatedTypeWitness();
    v32 = *(_QWORD *)(v772 - 8);
    v33 = *(unsigned __int8 *)(v32 + 80);
    v34 = v31 | v33 | 7;
    v35 = *(_DWORD *)(v32 + 84);
    if (*(_DWORD *)(v30 + 84) > v35)
      v35 = *(_DWORD *)(v30 + 84);
    v751 = v35;
    if (v35 <= 0x7FFFFFFE)
      v36 = 2147483646;
    else
      v36 = v35;
    v794 = v30;
    v799 = *(_QWORD *)(v30 + 64) + 7;
    v770 = v33 + 8;
    v771 = *(_QWORD *)(v772 - 8);
    v757 = *(_QWORD *)(v32 + 64) + 7;
    v37 = ((((v757 + ((v33 + 8 + (v799 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    v741 = v29;
    v38 = ((((((v29 + v34 + v801) & ~v34) + v37 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    v748 = v6 + v26;
    v760 = v29 + v34;
    v39 = *(_QWORD *)(v817 - 8);
    v40 = *(unsigned __int8 *)(v39 + 80);
    v747 = v6 + v40;
    v41 = *(_DWORD *)(v39 + 84);
    v749 = v39;
    v42 = *(_QWORD *)(v39 + 64);
    if (v41)
      v43 = v42;
    else
      v43 = v42 + 1;
    v44 = ((v805 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v6 > v44)
      v44 = v6;
    if (v38 <= v37 + ((v29 + v34 + ((v6 + v26) & ~v26)) & ~v34) + 16)
      v38 = v37 + ((v29 + v34 + ((v6 + v26) & ~v26)) & ~v34) + 16;
    if (((v805 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= ((v6 + v40) & ~v40) + v43)
      v45 = ((v6 + v40) & ~v40) + v43;
    else
      v45 = ((v805 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v44 > v38)
      v38 = v44;
    if (v38 <= v45)
      v46 = v45;
    else
      v46 = v38;
    v47 = v26 | v14 | v34;
    v784 = v47 + v28;
    v787 = v27;
    if (v36 <= v27)
      v48 = v27;
    else
      v48 = v36;
    if (v48 <= v815)
      v48 = v815;
    v742 = v48;
    if (v48 <= 0x7FFFFFFF)
      v49 = 0x7FFFFFFF;
    else
      v49 = v48;
    v816 = v26;
    v790 = v28 + v26;
    v791 = v28 + v34;
    v806 = ((((v757 + ((v33 + 8 + (v799 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    v50 = (v822 + ((v28 + v34 + ((v28 + v26) & ~v26)) & ~v34) + v37) & ~v803;
    if (v823)
      v51 = v6;
    else
      v51 = v6 + 1;
    v750 = v24;
    v52 = *(_QWORD *)(v24 - 8);
    __n = ((((v50 + v821 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    v53 = __n + ((v47 + v28) & ~v47);
    v54 = ((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    v55 = v826;
    v56 = ((((((v51 + v808 + ((v53 + v55) & ~v55)) & ~v808) + v824 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v759 = v51 + v808;
    v57 = ((v51 + v808 + ((v28 + v55) & ~v55)) & ~v808) + v824 + 16;
    if (*(_DWORD *)(v52 + 84))
      v58 = *(_QWORD *)(v52 + 64);
    else
      v58 = *(_QWORD *)(v52 + 64) + 1;
    if (v28 > v54)
      v54 = v28;
    if (v56 <= v57)
      v56 = v57;
    v59 = ((v53 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    v60 = *(unsigned __int8 *)(v52 + 80);
    v746 = v28 + v60;
    if (v59 <= ((v28 + v60) & ~v60) + v58)
      v59 = ((v28 + v60) & ~v60) + v58;
    if (v54 <= v56)
      v54 = v56;
    if (v54 <= v59)
      v61 = v59;
    else
      v61 = v54;
    if (v61 + 1 <= v46 + 1)
      v62 = v46 + 1;
    else
      v62 = v61 + 1;
    v63 = *(unsigned __int8 *)(a1 + v62);
    if (v63 >= 2)
    {
      if (v62 <= 3)
        v64 = v62;
      else
        v64 = 4;
      __asm { BR              X17 }
    }
    v65 = v825;
    v783 = ~v810;
    v807 = ~v826;
    v811 = ~v808;
    v769 = ~v812;
    v779 = ~v803;
    v802 = ~v14;
    v809 = ~v816;
    v813 = ~v34;
    v768 = ~v33;
    v745 = ~v40;
    v782 = ~v47;
    v744 = ~v60;
    v776 = *(_DWORD *)(v30 + 84);
    v804 = v36;
    v785 = v49;
    v754 = v50;
    v739 = v28 + v826;
    v740 = v51;
    v737 = v58;
    v738 = v43;
    if (v63 == 1)
    {
      v66 = AssociatedTypeWitness;
      switch(*(_BYTE *)(a1 + v61))
      {
        case 0:
          v732 = *(void (**)(uint64_t, uint64_t))(v820 + 8);
          v732(a1, v825);
          v69 = (v784 + a1) & v782;
          if (v27 == v785)
          {
            v70 = (*(uint64_t (**)(unint64_t))(v820 + 48))((v784 + a1) & v782);
            goto LABEL_88;
          }
          v71 = (v790 + v69) & v809;
          v72 = (v791 + v71) & v813;
          if (v804 == v785)
          {
            if (v776 == v804)
            {
              v70 = (*(uint64_t (**)(uint64_t))(v30 + 48))((v791 + v71) & v813);
              goto LABEL_88;
            }
            v536 = (unint64_t *)((v799 + v72) & 0xFFFFFFFFFFFFFFF8);
            if (v751 <= 0x7FFFFFFE)
            {
              v537 = *v536;
              goto LABEL_613;
            }
            v70 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v536 + v770) & v768);
          }
          else
          {
            v169 = v806 + v72;
            if ((v742 & 0x80000000) == 0)
            {
              v170 = *(_QWORD *)(v169 + 8);
              if (v170 >= 0xFFFFFFFF)
                LODWORD(v170) = -1;
              if ((_DWORD)v170 == -1)
              {
LABEL_89:
                v71 = (v790 + v69) & v809;
                v72 = (v791 + v71) & v813;
LABEL_90:
                v732(v69, v825);
                v732(v71, v825);
                (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v72, v795);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v771 + 8))((v770 + ((v799 + v72) & 0xFFFFFFFFFFFFFFF8)) & v768, v772);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v73 = (v822 + v806 + v72) & v779;
                v74 = *(void (**)(size_t, uint64_t))(v778 + 8);
                v74((v780 + v73) & v802, v767);
                v75 = (v766 + ((v780 + v73) & v802)) & v802;
                v74(v75, v767);
                swift_bridgeObjectRelease();
                v76 = (v762
                     + ((((((v753 + v75) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v802;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v778 + 48))(v76, 1, v767))
                  v74(v76, v767);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v77 = *(_QWORD *)(((((((v763 + v76) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                + 8);
                if ((v77 & 0x3000000000000000) == 0)
                  sub_23AAAE53C(*(_QWORD *)((((((v763 + v76) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v77);
                swift_bridgeObjectRelease();
                v78 = v73 + v821;
                v79 = *(void **)(v73 + v821 + 16);
                LODWORD(v80) = -1;
                if ((unint64_t)v79 < 0xFFFFFFFF)
                  v80 = *(_QWORD *)(v78 + 16);
                v66 = AssociatedTypeWitness;
                if ((int)v80 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(_QWORD *)(v78 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_23AAA12F0(*(_QWORD *)((((v78 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v78 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                v69 = (v784 + a1) & v782;
                goto LABEL_101;
              }
              goto LABEL_101;
            }
            v570 = (v780 + ((v822 + v169) & v779)) & v802;
            if (v756 <= 0x7FFFFFFD)
            {
              v537 = *(_QWORD *)(((v753 + ((v766 + v570) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_613:
              if (v537 >= 0xFFFFFFFF)
                LODWORD(v537) = -1;
              if ((v537 + 1) < 2)
                goto LABEL_90;
LABEL_101:
              v81 = v69 + __n;
LABEL_283:
              v180 = *(void **)(((v81 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
LABEL_290:

              goto LABEL_291;
            }
            v70 = (*(uint64_t (**)(size_t))(v778 + 48))(v570);
          }
LABEL_88:
          if (v70)
            goto LABEL_101;
          goto LABEL_89;
        case 1:
          v733 = *(void (**)(uint64_t, uint64_t))(v820 + 8);
          v733(a1, v825);
          v82 = (v784 + a1) & v782;
          if (v27 == v785)
          {
            v83 = (*(uint64_t (**)(unint64_t))(v820 + 48))((v784 + a1) & v782);
            goto LABEL_104;
          }
          v84 = (v790 + v82) & v809;
          v85 = (v791 + v84) & v813;
          if (v804 == v785)
          {
            if (v776 == v804)
            {
              v83 = (*(uint64_t (**)(uint64_t))(v30 + 48))((v791 + v84) & v813);
              goto LABEL_104;
            }
            v538 = (unint64_t *)((v799 + v85) & 0xFFFFFFFFFFFFFFF8);
            if (v751 <= 0x7FFFFFFE)
            {
              v539 = *v538;
              goto LABEL_618;
            }
            v83 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v538 + v770) & v768);
          }
          else
          {
            v171 = v806 + v85;
            if ((v742 & 0x80000000) == 0)
            {
              v172 = *(_QWORD *)(v171 + 8);
              if (v172 >= 0xFFFFFFFF)
                LODWORD(v172) = -1;
              if ((_DWORD)v172 == -1)
              {
LABEL_105:
                v84 = (v790 + v82) & v809;
                v85 = (v791 + v84) & v813;
LABEL_106:
                v733(v82, v825);
                v733(v84, v825);
                (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v85, v795);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v771 + 8))((v770 + ((v799 + v85) & 0xFFFFFFFFFFFFFFF8)) & v768, v772);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v86 = (v822 + v806 + v85) & v779;
                v87 = *(void (**)(size_t, uint64_t))(v778 + 8);
                v87((v780 + v86) & v802, v767);
                v88 = (v766 + ((v780 + v86) & v802)) & v802;
                v87(v88, v767);
                swift_bridgeObjectRelease();
                v89 = (v762
                     + ((((((v753 + v88) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v802;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v778 + 48))(v89, 1, v767))
                  v87(v89, v767);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v90 = *(_QWORD *)(((((((v763 + v89) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                + 8);
                if ((v90 & 0x3000000000000000) == 0)
                  sub_23AAAE53C(*(_QWORD *)((((((v763 + v89) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v90);
                swift_bridgeObjectRelease();
                v91 = v86 + v821;
                v92 = *(void **)(v86 + v821 + 16);
                LODWORD(v93) = -1;
                if ((unint64_t)v92 < 0xFFFFFFFF)
                  v93 = *(_QWORD *)(v91 + 16);
                v66 = AssociatedTypeWitness;
                if ((int)v93 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(_QWORD *)(v91 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_23AAA12F0(*(_QWORD *)((((v91 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v91 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                v82 = (v784 + a1) & v782;
              }
LABEL_117:
              v94 = (v82 + v826 + __n) & v807;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v819 + 48))(v94, 1, v66))
                (*(void (**)(unint64_t, uint64_t))(v819 + 8))(v94, v66);
              v95 = (v759 + v94) & v811;
              if (v777 == v798)
              {
                v96 = (*(uint64_t (**)(size_t))(v796 + 48))((v759 + v94) & v811);
              }
              else
              {
                v158 = (uint64_t *)((v800 + v95) & 0xFFFFFFFFFFFFFFF8);
                if (v752 <= 0x7FFFFFFE)
                {
                  v159 = *v158;
                  if ((unint64_t)*v158 >= 0xFFFFFFFF)
                    LODWORD(v159) = -1;
                  v160 = (v159 + 1) >= 2;
                  v161 = v824;
                  if (v160)
                    goto LABEL_282;
                  goto LABEL_256;
                }
                v96 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v158 + v773) & v769);
              }
              v161 = v824;
              if (v96)
              {
LABEL_282:
                v81 = v95 + v161 + 15;
                goto LABEL_283;
              }
              v158 = (uint64_t *)((v800 + v95) & 0xFFFFFFFFFFFFFFF8);
LABEL_256:
              (*(void (**)(unint64_t, uint64_t))(v796 + 8))(v95, v797);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v774 + 8))(((unint64_t)v158 + v773) & v769, v775);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v161 = v824;
              goto LABEL_282;
            }
            v571 = (v780 + ((v822 + v171) & v779)) & v802;
            if (v756 <= 0x7FFFFFFD)
            {
              v539 = *(_QWORD *)(((v753 + ((v766 + v571) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_618:
              if (v539 >= 0xFFFFFFFF)
                LODWORD(v539) = -1;
              if ((v539 + 1) < 2)
                goto LABEL_106;
              goto LABEL_117;
            }
            v83 = (*(uint64_t (**)(size_t))(v778 + 48))(v571);
          }
LABEL_104:
          if (v83)
            goto LABEL_117;
          goto LABEL_105;
        case 2:
          (*(void (**)(uint64_t, uint64_t))(v820 + 8))(a1, v825);
          v97 = (v28 + v826 + a1) & v807;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v819 + 48))(v97, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v819 + 8))(v97, AssociatedTypeWitness);
          v98 = (v759 + v97) & v811;
          if (v777 == v798)
          {
            v99 = (*(uint64_t (**)(size_t))(v796 + 48))((v759 + v97) & v811);
LABEL_258:
            v164 = v824;
            if (v99)
              goto LABEL_261;
            v162 = (uint64_t *)((v800 + v98) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_260;
          }
          v162 = (uint64_t *)((v800 + v98) & 0xFFFFFFFFFFFFFFF8);
          if (v752 > 0x7FFFFFFE)
          {
            v99 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v162 + v773) & v769);
            goto LABEL_258;
          }
          v163 = *v162;
          if ((unint64_t)*v162 >= 0xFFFFFFFF)
            LODWORD(v163) = -1;
          v160 = (v163 + 1) >= 2;
          v164 = v824;
          if (!v160)
          {
LABEL_260:
            (*(void (**)(size_t, uint64_t))(v796 + 8))(v98, v797);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v774 + 8))(((unint64_t)v162 + v773) & v769, v775);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v164 = v824;
          }
LABEL_261:
          v173 = v98 + v164;
          goto LABEL_289;
        case 3:
          v734 = *(void (**)(uint64_t, uint64_t))(v820 + 8);
          v734(a1, v825);
          v100 = (v784 + a1) & v782;
          if (v27 == v785)
          {
            v101 = (*(uint64_t (**)(unint64_t))(v820 + 48))((v784 + a1) & v782);
            goto LABEL_127;
          }
          v102 = (v790 + v100) & v809;
          v103 = (v791 + v102) & v813;
          if (v804 == v785)
          {
            if (v776 == v804)
            {
              v101 = (*(uint64_t (**)(uint64_t))(v30 + 48))((v791 + v102) & v813);
              goto LABEL_127;
            }
            v540 = (unint64_t *)((v799 + v103) & 0xFFFFFFFFFFFFFFF8);
            if (v751 <= 0x7FFFFFFE)
            {
              v541 = *v540;
              goto LABEL_563;
            }
            v101 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v540 + v770) & v768);
          }
          else
          {
            v174 = v806 + v103;
            if ((v742 & 0x80000000) == 0)
            {
              v175 = *(_QWORD *)(v174 + 8);
              if (v175 >= 0xFFFFFFFF)
                LODWORD(v175) = -1;
              if ((_DWORD)v175 == -1)
              {
LABEL_128:
                v102 = (v790 + v100) & v809;
                v103 = (v791 + v102) & v813;
LABEL_129:
                v734(v100, v825);
                v734(v102, v825);
                (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v103, v795);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v771 + 8))((v770 + ((v799 + v103) & 0xFFFFFFFFFFFFFFF8)) & v768, v772);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v104 = (v822 + v806 + v103) & v779;
                v105 = *(void (**)(size_t, uint64_t))(v778 + 8);
                v105((v780 + v104) & v802, v767);
                v106 = (v766 + ((v780 + v104) & v802)) & v802;
                v105(v106, v767);
                swift_bridgeObjectRelease();
                v107 = (v762
                      + ((((((v753 + v106) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v802;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v778 + 48))(v107, 1, v767))
                  v105(v107, v767);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v108 = *(_QWORD *)(((((((v763 + v107) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 8);
                if ((v108 & 0x3000000000000000) == 0)
                  sub_23AAAE53C(*(_QWORD *)((((((v763 + v107) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v108);
                swift_bridgeObjectRelease();
                v109 = v104 + v821;
                v110 = *(void **)(v104 + v821 + 16);
                LODWORD(v111) = -1;
                if ((unint64_t)v110 < 0xFFFFFFFF)
                  v111 = *(_QWORD *)(v109 + 16);
                v66 = AssociatedTypeWitness;
                if ((int)v111 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(_QWORD *)(v109 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_23AAA12F0(*(_QWORD *)((((v109 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v109 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              }
LABEL_200:
              swift_bridgeObjectRelease();
LABEL_291:
              v65 = v825;
LABEL_292:
              v181 = *(unsigned __int8 *)(a2 + v62);
              if (v181 >= 2)
              {
                if (v62 <= 3)
                  v182 = v62;
                else
                  v182 = 4;
                __asm { BR              X12 }
              }
              if (v181 == 1)
              {
                switch(*(_BYTE *)(a2 + v61))
                {
                  case 0:
                    v185 = *(void (**)(uint64_t))(v820 + 32);
                    v185(a1);
                    v186 = (void *)((v784 + a1) & v782);
                    v187 = (const void *)((v784 + a2) & v782);
                    if (v787 == v785)
                    {
                      v188 = (*(uint64_t (**)(unint64_t))(v820 + 48))((v784 + a2) & v782);
                      goto LABEL_311;
                    }
                    v234 = ((unint64_t)v187 + v790) & v809;
                    v235 = (v791 + v234) & v813;
                    if (v804 == v785)
                    {
                      if (v776 == v804)
                      {
                        v188 = (*(uint64_t (**)(unint64_t))(v794 + 48))((v791 + v234) & v813);
                        goto LABEL_311;
                      }
                      v548 = (unint64_t *)((v799 + v235) & 0xFFFFFFFFFFFFFFF8);
                      if (v751 <= 0x7FFFFFFE)
                      {
                        v549 = *v548;
LABEL_583:
                        if (v549 >= 0xFFFFFFFF)
                          LODWORD(v549) = -1;
                        if ((v549 + 1) >= 2)
                          goto LABEL_312;
LABEL_396:
                        v735 = v61;
                        ((void (*)(void *, const void *, uint64_t))v185)(v186, v187, v825);
                        ((void (*)(unint64_t, unint64_t, uint64_t))v185)(((unint64_t)v186 + v790) & v809, v234, v825);
                        v261 = (v791 + (((unint64_t)v186 + v790) & v809)) & v813;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v794 + 32))(v261, v235, v795);
                        v262 = (_QWORD *)((v799 + v261) & 0xFFFFFFFFFFFFFFF8);
                        v263 = (_QWORD *)((v799 + v235) & 0xFFFFFFFFFFFFFFF8);
                        *v262 = *v263;
                        v264 = ((unint64_t)v262 + v770) & v768;
                        v265 = ((unint64_t)v263 + v770) & v768;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v771 + 32))(v264, v265, v772);
                        v266 = (_QWORD *)((v757 + v265) & 0xFFFFFFFFFFFFF8);
                        v267 = (_QWORD *)((v757 + v264) & 0xFFFFFFFFFFFFF8);
                        *v267 = *v266;
                        *(_OWORD *)(((unint64_t)v267 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v266 + 15) & 0xFFFFFFFFFFFFF8);
                        *(_OWORD *)(v806 + v261) = *(_OWORD *)(v806 + v235);
                        v268 = (v822 + v806 + v261) & v779;
                        v269 = (v822 + v806 + v235) & v779;
                        *(_BYTE *)v268 = *(_BYTE *)v269;
                        v270 = v268 | 4;
                        v271 = *(_DWORD *)(v269 | 4);
                        *(_BYTE *)(v270 + 4) = *(_BYTE *)((v269 | 4) + 4);
                        *(_DWORD *)v270 = v271;
                        *(_WORD *)(v268 + 10) = *(_WORD *)(v269 + 0xA);
                        v272 = *(void (**)(size_t, size_t, uint64_t))(v778 + 32);
                        v272((v780 + v268) & v802, (v780 + v269) & v802, v767);
                        v273 = (v766 + ((v780 + v268) & v802)) & v802;
                        v274 = (v766 + ((v780 + v269) & v802)) & v802;
                        v272(v273, v274, v767);
                        v275 = (_BYTE *)(v273 + v761);
                        *v275 = *(_BYTE *)(v274 + v761);
                        v275[1] = *(_BYTE *)(v274 + v761 + 1);
                        v275[2] = *(_BYTE *)(v274 + v761 + 2);
                        v275[3] = *(_BYTE *)(v274 + v761 + 3);
                        v275[4] = *(_BYTE *)(v274 + v761 + 4);
                        v276 = (v273 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                        v277 = (v274 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                        *(_OWORD *)v276 = *(_OWORD *)v277;
                        *(_BYTE *)(v276 + 16) = *(_BYTE *)(v277 + 16);
                        *(_BYTE *)(v276 + 17) = *(_BYTE *)(v277 + 17);
                        *(_BYTE *)(v276 + 18) = *(_BYTE *)(v277 + 18);
                        *(_BYTE *)(v276 + 19) = *(_BYTE *)(v277 + 19);
                        v278 = (v276 + 27) & 0xFFFFFFFFFFFFFFF8;
                        v279 = (v277 + 27) & 0xFFFFFFFFFFFFFFF8;
                        *(_QWORD *)v278 = *(_QWORD *)v279;
                        *(_BYTE *)(v278 + 8) = *(_BYTE *)(v279 + 8);
                        *(_BYTE *)(v278 + 9) = *(_BYTE *)(v279 + 9);
                        *(_BYTE *)(v278 + 10) = *(_BYTE *)(v279 + 10);
                        *(_BYTE *)(v278 + 11) = *(_BYTE *)(v279 + 11);
                        *(_BYTE *)(v278 + 12) = *(_BYTE *)(v279 + 12);
                        v280 = (_QWORD *)((v276 + 47) & 0xFFFFFFFFFFFFF8);
                        v281 = (_QWORD *)((v277 + 47) & 0xFFFFFFFFFFFFF8);
                        *v280 = *v281;
                        v282 = ((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8;
                        v283 = ((unint64_t)v281 + 15) & 0xFFFFFFFFFFFFFFF8;
                        *(_QWORD *)v282 = *(_QWORD *)v283;
                        *(_BYTE *)(v282 + 8) = *(_BYTE *)(v283 + 8);
                        *(_BYTE *)(v282 + 9) = *(_BYTE *)(v283 + 9);
                        v284 = (void *)((v762 + v282) & v802);
                        v285 = (const void *)((v762 + v283) & v802);
                        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v778 + 48))(v285, 1, v767))
                        {
                          memcpy(v284, v285, v789);
                        }
                        else
                        {
                          v272((size_t)v284, (size_t)v285, v767);
                          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v778 + 56))(v284, 0, 1, v767);
                        }
                        v189 = v781;
                        v61 = v735;
                        v190 = v754;
                        v383 = (_QWORD *)(((unint64_t)v284 + v763) & 0xFFFFFFFFFFFFFFF8);
                        v384 = (_QWORD *)(((unint64_t)v285 + v763) & 0xFFFFFFFFFFFFFFF8);
                        *v383 = *v384;
                        v385 = ((unint64_t)v383 + 15) & 0xFFFFFFFFFFFFFFF8;
                        v386 = ((unint64_t)v384 + 15) & 0xFFFFFFFFFFFFFFF8;
                        v387 = *(_QWORD *)v386;
                        *(_BYTE *)(v385 + 8) = *(_BYTE *)(v386 + 8);
                        *(_QWORD *)v385 = v387;
                        v388 = (_QWORD *)(((unint64_t)v383 + 31) & 0xFFFFFFFFFFFFF8);
                        v389 = (_QWORD *)(((unint64_t)v384 + 31) & 0xFFFFFFFFFFFFF8);
                        *v388 = *v389;
                        v390 = (_OWORD *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8);
                        v391 = (_OWORD *)(((unint64_t)v389 + 15) & 0xFFFFFFFFFFFFFFF8);
                        *v390 = *v391;
                        v392 = ((unint64_t)v390 + 19) & 0xFFFFFFFFFFFFFFF8;
                        v393 = ((unint64_t)v391 + 19) & 0xFFFFFFFFFFFFFFF8;
                        v394 = *(_QWORD *)v393;
                        *(_BYTE *)(v392 + 8) = *(_BYTE *)(v393 + 8);
                        *(_QWORD *)v392 = v394;
                        *(_BYTE *)(v392 + 9) = *(_BYTE *)(v393 + 9);
                        v395 = (v392 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                        v396 = (v393 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                        LODWORD(v387) = *(_DWORD *)v396;
                        *(_BYTE *)(v395 + 4) = *(_BYTE *)(v396 + 4);
                        *(_DWORD *)v395 = v387;
                        *(_OWORD *)((v392 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v393 + 25) & 0xFFFFFFFFFFFFF8);
                        v397 = v268 + v821;
                        v398 = *(_OWORD *)(v269 + v821 + 112);
                        v400 = *(_OWORD *)(v269 + v821 + 64);
                        v399 = *(_OWORD *)(v269 + v821 + 80);
                        *(_OWORD *)(v397 + 96) = *(_OWORD *)(v269 + v821 + 96);
                        *(_OWORD *)(v397 + 112) = v398;
                        *(_OWORD *)(v397 + 64) = v400;
                        *(_OWORD *)(v397 + 80) = v399;
                        v401 = *(_OWORD *)(v269 + v821 + 176);
                        v403 = *(_OWORD *)(v269 + v821 + 128);
                        v402 = *(_OWORD *)(v269 + v821 + 144);
                        *(_OWORD *)(v397 + 160) = *(_OWORD *)(v269 + v821 + 160);
                        *(_OWORD *)(v397 + 176) = v401;
                        *(_OWORD *)(v397 + 128) = v403;
                        *(_OWORD *)(v397 + 144) = v402;
                        v405 = *(_OWORD *)(v269 + v821 + 208);
                        v404 = *(_OWORD *)(v269 + v821 + 224);
                        v406 = *(_OWORD *)(v269 + v821 + 192);
                        *(_QWORD *)(v397 + 240) = *(_QWORD *)(v269 + v821 + 240);
                        *(_OWORD *)(v397 + 208) = v405;
                        *(_OWORD *)(v397 + 224) = v404;
                        *(_OWORD *)(v397 + 192) = v406;
                        v407 = *(_OWORD *)(v269 + v821);
                        v408 = *(_OWORD *)(v269 + v821 + 16);
                        v409 = *(_OWORD *)(v269 + v821 + 48);
                        *(_OWORD *)(v397 + 32) = *(_OWORD *)(v269 + v821 + 32);
                        *(_OWORD *)(v397 + 48) = v409;
                        *(_OWORD *)v397 = v407;
                        *(_OWORD *)(v397 + 16) = v408;
                        v410 = (_OWORD *)((v268 + v821 + 255) & 0xFFFFFFFFFFFFFFF8);
                        v411 = (__int128 *)((v269 + v821 + 255) & 0xFFFFFFFFFFFFFFF8);
                        v412 = *v411;
                        *(_OWORD *)((char *)v410 + 9) = *(__int128 *)((char *)v411 + 9);
                        *v410 = v412;
                        v413 = (v268 + v821 + 287) & 0xFFFFFFFFFFFFFFF8;
                        v414 = (v269 + v821 + 287) & 0xFFFFFFFFFFFFFFF8;
                        v415 = *(_OWORD *)v414;
                        *(_BYTE *)(v413 + 16) = *(_BYTE *)(v414 + 16);
                        *(_OWORD *)v413 = v415;
                        v416 = (_QWORD *)((v268 + v821 + 311) & 0xFFFFFFFFFFFFF8);
                        v417 = (_QWORD *)((v269 + v821 + 311) & 0xFFFFFFFFFFFFF8);
                        *v416 = *v417;
                        *(_OWORD *)(((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v417 + 15) & 0xFFFFFFFFFFFFF8);
                        v191 = v761;
                        if (!v756)
                          goto LABEL_313;
LABEL_441:
                        v208 = 0;
                        v418 = ((((v190
                                 + ((((((((((v189 + v191 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 19) & 0xFFFFFFFFFFFFFFF8)
                                   + 25) & 0xFFFFFFFFFFFFFFF8)
                                 + 327) & 0xFFFFFFFFFFFFFFF8)
                               + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 16;
                        v419 = (_QWORD *)(((unint64_t)v186 + v418) & 0xFFFFFFFFFFFFFFF8);
                        v420 = (_QWORD *)(((unint64_t)v187 + v418) & 0xFFFFFFFFFFFFFFF8);
                        *v419 = *v420;
                        *(_QWORD *)(((unint64_t)v419 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFF8);
                        v207 = 1;
                        goto LABEL_445;
                      }
                      v188 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v548 + v770) & v768);
                    }
                    else
                    {
                      v259 = v806 + v235;
                      if ((v742 & 0x80000000) == 0)
                      {
                        v260 = *(_QWORD *)(v259 + 8);
                        if (v260 >= 0xFFFFFFFF)
                          LODWORD(v260) = -1;
                        if ((_DWORD)v260 != -1)
                          goto LABEL_312;
LABEL_395:
                        v234 = ((unint64_t)v187 + v790) & v809;
                        v235 = (v791 + v234) & v813;
                        goto LABEL_396;
                      }
                      v564 = (v780 + ((v822 + v259) & v779)) & v802;
                      if (v756 <= 0x7FFFFFFD)
                      {
                        v549 = *(_QWORD *)(((v753 + ((v766 + v564) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
                        goto LABEL_583;
                      }
                      v188 = (*(uint64_t (**)(size_t))(v778 + 48))(v564);
                    }
LABEL_311:
                    if (v188)
                    {
LABEL_312:
                      memcpy(v186, v187, __n);
                      v189 = v781;
                      v190 = v754;
LABEL_313:
                      v191 = v789;
                      goto LABEL_441;
                    }
                    goto LABEL_395;
                  case 1:
                    v192 = *(void (**)(uint64_t))(v820 + 32);
                    v192(a1);
                    v193 = (void *)((v784 + a1) & v782);
                    v194 = (const void *)((v784 + a2) & v782);
                    if (v787 == v785)
                    {
                      v195 = (*(uint64_t (**)(const void *))(v820 + 48))(v194);
                      v196 = v806;
LABEL_510:
                      if (v195)
                      {
LABEL_511:
                        memcpy(v193, v194, __n);
                        v572 = v781;
                        v573 = v754;
                        v574 = v819;
LABEL_512:
                        v575 = v789;
                        goto LABEL_518;
                      }
                      v236 = ((unint64_t)v194 + v790) & v809;
                      v237 = (v791 + v236) & v813;
LABEL_514:
                      ((void (*)(void *, const void *, uint64_t))v192)(v193, v194, v825);
                      v576 = ((unint64_t)v193 + v790) & v809;
                      ((void (*)(unint64_t, unint64_t, uint64_t))v192)(v576, v236, v825);
                      v577 = (v791 + v576) & v813;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v794 + 32))(v577, v237, v795);
                      v578 = (_QWORD *)((v799 + v577) & 0xFFFFFFFFFFFFFFF8);
                      v579 = (_QWORD *)((v799 + v237) & 0xFFFFFFFFFFFFFFF8);
                      *v578 = *v579;
                      v580 = ((unint64_t)v578 + v770) & v768;
                      v581 = ((unint64_t)v579 + v770) & v768;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v771 + 32))(v580, v581, v772);
                      v582 = (_QWORD *)((v757 + v581) & 0xFFFFFFFFFFFFF8);
                      v583 = (_QWORD *)((v757 + v580) & 0xFFFFFFFFFFFFF8);
                      *v583 = *v582;
                      *(_OWORD *)(((unint64_t)v583 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v582 + 15) & 0xFFFFFFFFFFFFF8);
                      *(_OWORD *)(v196 + v577) = *(_OWORD *)(v196 + v237);
                      v584 = (v822 + v196 + v577) & v779;
                      v585 = (v822 + v196 + v237) & v779;
                      *(_BYTE *)v584 = *(_BYTE *)v585;
                      v586 = v584 | 4;
                      v587 = *(_DWORD *)(v585 | 4);
                      *(_BYTE *)(v586 + 4) = *(_BYTE *)((v585 | 4) + 4);
                      *(_DWORD *)v586 = v587;
                      *(_WORD *)(v584 + 10) = *(_WORD *)(v585 + 0xA);
                      v588 = *(void (**)(size_t, size_t, uint64_t))(v778 + 32);
                      v588((v780 + v584) & v802, (v780 + v585) & v802, v767);
                      v589 = (v766 + ((v780 + v584) & v802)) & v802;
                      v590 = (v766 + ((v780 + v585) & v802)) & v802;
                      v588(v589, v590, v767);
                      v591 = (_BYTE *)(v589 + v761);
                      *v591 = *(_BYTE *)(v590 + v761);
                      v591[1] = *(_BYTE *)(v590 + v761 + 1);
                      v591[2] = *(_BYTE *)(v590 + v761 + 2);
                      v591[3] = *(_BYTE *)(v590 + v761 + 3);
                      v591[4] = *(_BYTE *)(v590 + v761 + 4);
                      v592 = (v589 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                      v593 = (v590 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v592 = *(_OWORD *)v593;
                      *(_BYTE *)(v592 + 16) = *(_BYTE *)(v593 + 16);
                      *(_BYTE *)(v592 + 17) = *(_BYTE *)(v593 + 17);
                      *(_BYTE *)(v592 + 18) = *(_BYTE *)(v593 + 18);
                      *(_BYTE *)(v592 + 19) = *(_BYTE *)(v593 + 19);
                      v594 = (v592 + 27) & 0xFFFFFFFFFFFFFFF8;
                      v595 = (v593 + 27) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v594 = *(_QWORD *)v595;
                      *(_BYTE *)(v594 + 8) = *(_BYTE *)(v595 + 8);
                      *(_BYTE *)(v594 + 9) = *(_BYTE *)(v595 + 9);
                      *(_BYTE *)(v594 + 10) = *(_BYTE *)(v595 + 10);
                      *(_BYTE *)(v594 + 11) = *(_BYTE *)(v595 + 11);
                      *(_BYTE *)(v594 + 12) = *(_BYTE *)(v595 + 12);
                      v596 = (_QWORD *)((v592 + 47) & 0xFFFFFFFFFFFFF8);
                      v597 = (_QWORD *)((v593 + 47) & 0xFFFFFFFFFFFFF8);
                      *v596 = *v597;
                      v598 = ((unint64_t)v596 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v599 = ((unint64_t)v597 + 15) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v598 = *(_QWORD *)v599;
                      *(_BYTE *)(v598 + 8) = *(_BYTE *)(v599 + 8);
                      *(_BYTE *)(v598 + 9) = *(_BYTE *)(v599 + 9);
                      v600 = (void *)((v762 + v598) & v802);
                      v601 = (const void *)((v762 + v599) & v802);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v778 + 48))(v601, 1, v767))
                      {
                        memcpy(v600, v601, v789);
                      }
                      else
                      {
                        v588((size_t)v600, (size_t)v601, v767);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v778 + 56))(v600, 0, 1, v767);
                      }
                      v572 = v781;
                      v575 = v761;
                      v573 = v754;
                      v574 = v819;
                      v602 = (_QWORD *)(((unint64_t)v600 + v763) & 0xFFFFFFFFFFFFFFF8);
                      v603 = (_QWORD *)(((unint64_t)v601 + v763) & 0xFFFFFFFFFFFFFFF8);
                      *v602 = *v603;
                      v604 = ((unint64_t)v602 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v605 = ((unint64_t)v603 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v606 = *(_QWORD *)v605;
                      *(_BYTE *)(v604 + 8) = *(_BYTE *)(v605 + 8);
                      *(_QWORD *)v604 = v606;
                      v607 = (_QWORD *)(((unint64_t)v602 + 31) & 0xFFFFFFFFFFFFF8);
                      v608 = (_QWORD *)(((unint64_t)v603 + 31) & 0xFFFFFFFFFFFFF8);
                      *v607 = *v608;
                      v609 = (_OWORD *)(((unint64_t)v607 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v610 = (_OWORD *)(((unint64_t)v608 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v609 = *v610;
                      v611 = ((unint64_t)v609 + 19) & 0xFFFFFFFFFFFFFFF8;
                      v612 = ((unint64_t)v610 + 19) & 0xFFFFFFFFFFFFFFF8;
                      v613 = *(_QWORD *)v612;
                      *(_BYTE *)(v611 + 8) = *(_BYTE *)(v612 + 8);
                      *(_QWORD *)v611 = v613;
                      *(_BYTE *)(v611 + 9) = *(_BYTE *)(v612 + 9);
                      v614 = (v611 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      v615 = (v612 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      LODWORD(v606) = *(_DWORD *)v615;
                      *(_BYTE *)(v614 + 4) = *(_BYTE *)(v615 + 4);
                      *(_DWORD *)v614 = v606;
                      *(_OWORD *)((v611 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v612 + 25) & 0xFFFFFFFFFFFFF8);
                      v616 = v584 + v821;
                      v617 = *(_OWORD *)(v585 + v821 + 112);
                      v619 = *(_OWORD *)(v585 + v821 + 64);
                      v618 = *(_OWORD *)(v585 + v821 + 80);
                      *(_OWORD *)(v616 + 96) = *(_OWORD *)(v585 + v821 + 96);
                      *(_OWORD *)(v616 + 112) = v617;
                      *(_OWORD *)(v616 + 64) = v619;
                      *(_OWORD *)(v616 + 80) = v618;
                      v620 = *(_OWORD *)(v585 + v821 + 176);
                      v622 = *(_OWORD *)(v585 + v821 + 128);
                      v621 = *(_OWORD *)(v585 + v821 + 144);
                      *(_OWORD *)(v616 + 160) = *(_OWORD *)(v585 + v821 + 160);
                      *(_OWORD *)(v616 + 176) = v620;
                      *(_OWORD *)(v616 + 128) = v622;
                      *(_OWORD *)(v616 + 144) = v621;
                      v624 = *(_OWORD *)(v585 + v821 + 208);
                      v623 = *(_OWORD *)(v585 + v821 + 224);
                      v625 = *(_OWORD *)(v585 + v821 + 192);
                      *(_QWORD *)(v616 + 240) = *(_QWORD *)(v585 + v821 + 240);
                      *(_OWORD *)(v616 + 208) = v624;
                      *(_OWORD *)(v616 + 224) = v623;
                      *(_OWORD *)(v616 + 192) = v625;
                      v626 = *(_OWORD *)(v585 + v821);
                      v627 = *(_OWORD *)(v585 + v821 + 16);
                      v628 = *(_OWORD *)(v585 + v821 + 48);
                      *(_OWORD *)(v616 + 32) = *(_OWORD *)(v585 + v821 + 32);
                      *(_OWORD *)(v616 + 48) = v628;
                      *(_OWORD *)v616 = v626;
                      *(_OWORD *)(v616 + 16) = v627;
                      v629 = (_OWORD *)((v584 + v821 + 255) & 0xFFFFFFFFFFFFFFF8);
                      v630 = (__int128 *)((v585 + v821 + 255) & 0xFFFFFFFFFFFFFFF8);
                      v631 = *v630;
                      *(_OWORD *)((char *)v629 + 9) = *(__int128 *)((char *)v630 + 9);
                      *v629 = v631;
                      v632 = (v584 + v821 + 287) & 0xFFFFFFFFFFFFFFF8;
                      v633 = (v585 + v821 + 287) & 0xFFFFFFFFFFFFFFF8;
                      v634 = *(_OWORD *)v633;
                      *(_BYTE *)(v632 + 16) = *(_BYTE *)(v633 + 16);
                      *(_OWORD *)v632 = v634;
                      v635 = (_QWORD *)((v584 + v821 + 311) & 0xFFFFFFFFFFFFF8);
                      v636 = (_QWORD *)((v585 + v821 + 311) & 0xFFFFFFFFFFFFF8);
                      *v635 = *v636;
                      *(_OWORD *)(((unint64_t)v635 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v636 + 15) & 0xFFFFFFFFFFFFF8);
                      v194 = (const void *)((v784 + a2) & v782);
                      v193 = (void *)((v784 + a1) & v782);
                      if (!v756)
                        goto LABEL_512;
LABEL_518:
                      v637 = ((((v573
                               + ((((((((((v572 + v575 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      v638 = (void *)(((unint64_t)v193 + v826 + v637) & v807);
                      v639 = (const void *)(((unint64_t)v194 + v826 + v637) & v807);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v574 + 48))(v639, 1, AssociatedTypeWitness))
                      {
                        memcpy(v638, v639, v740);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v574 + 32))(v638, v639, AssociatedTypeWitness);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v574 + 56))(v638, 0, 1, AssociatedTypeWitness);
                      }
                      v640 = (char *)(((unint64_t)v638 + v759) & v811);
                      v641 = (char *)(((unint64_t)v639 + v759) & v811);
                      if (v777 == v798)
                      {
                        v642 = (*(uint64_t (**)(unint64_t))(v796 + 48))(((unint64_t)v639 + v759) & v811);
                      }
                      else
                      {
                        v643 = (uint64_t *)((unint64_t)&v641[v800] & 0xFFFFFFFFFFFFFFF8);
                        if (v752 <= 0x7FFFFFFE)
                        {
                          v644 = *v643;
                          if ((unint64_t)*v643 >= 0xFFFFFFFF)
                            LODWORD(v644) = -1;
                          v645 = v824;
                          if ((v644 + 1) >= 2)
                            goto LABEL_530;
                          goto LABEL_532;
                        }
                        v642 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v643 + v773) & v769);
                      }
                      v645 = v824;
                      if (v642)
                      {
LABEL_530:
                        v646 = v645;
                        memcpy(v640, v641, v645);
LABEL_533:
                        *(_QWORD *)&v640[v646] = *(_QWORD *)&v641[v646];
                        v651 = (_QWORD *)((unint64_t)&v640[v646 + 15] & 0xFFFFFFFFFFFFF8);
                        v652 = (_QWORD *)((unint64_t)&v641[v646 + 15] & 0xFFFFFFFFFFFFFFF8);
                        *v651 = *v652;
                        *(_QWORD *)(((unint64_t)v651 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v652 + 15) & 0xFFFFFFFFFFFFF8);
                        v208 = 1;
                        v46 = v61;
                        v207 = 1;
                        goto LABEL_446;
                      }
                      v643 = (uint64_t *)((unint64_t)&v641[v800] & 0xFFFFFFFFFFFFFFF8);
LABEL_532:
                      v646 = v645;
                      (*(void (**)(char *, char *, uint64_t))(v796 + 32))(v640, v641, v797);
                      v647 = (_QWORD *)((unint64_t)&v640[v800] & 0xFFFFFFFFFFFFFFF8);
                      *v647 = *v643;
                      v648 = ((unint64_t)v647 + v773) & v769;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v774 + 32))(v648, ((unint64_t)v643 + v773) & v769, v775);
                      v649 = (_QWORD *)((v758 + v648) & 0xFFFFFFFFFFFFF8);
                      v650 = (_QWORD *)((v758 + (((unint64_t)v643 + v773) & v769)) & 0xFFFFFFFFFFFFF8);
                      *v649 = *v650;
                      *(_OWORD *)(((unint64_t)v649 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v650 + 15) & 0xFFFFFFFFFFFFF8);
                      goto LABEL_533;
                    }
                    v236 = ((unint64_t)v194 + v790) & v809;
                    v237 = (v791 + v236) & v813;
                    v196 = v806;
                    if (v804 == v785)
                    {
                      if (v776 == v804)
                      {
                        v195 = (*(uint64_t (**)(unint64_t))(v794 + 48))((v791 + v236) & v813);
                        goto LABEL_510;
                      }
                      v550 = (unint64_t *)((v799 + v237) & 0xFFFFFFFFFFFFFFF8);
                      if (v751 > 0x7FFFFFFE)
                      {
                        v195 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v550 + v770) & v768);
                        goto LABEL_510;
                      }
                      v551 = *v550;
                    }
                    else
                    {
                      v286 = v806 + v237;
                      if ((v742 & 0x80000000) == 0)
                      {
                        v287 = *(_QWORD *)(v286 + 8);
                        if (v287 >= 0xFFFFFFFF)
                          LODWORD(v287) = -1;
                        v195 = v287 + 1;
                        goto LABEL_510;
                      }
                      v565 = (v780 + ((v822 + v286) & v779)) & v802;
                      if (v756 > 0x7FFFFFFD)
                      {
                        v195 = (*(uint64_t (**)(size_t))(v778 + 48))(v565);
                        goto LABEL_510;
                      }
                      v551 = *(_QWORD *)(((v753 + ((v766 + v565) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
                    }
                    if (v551 >= 0xFFFFFFFF)
                      LODWORD(v551) = -1;
                    if ((v551 + 1) >= 2)
                      goto LABEL_511;
                    goto LABEL_514;
                  case 2:
                    (*(void (**)(uint64_t))(v820 + 32))(a1);
                    v197 = (void *)((v739 + a1) & v807);
                    v198 = v66;
                    v199 = (const void *)((v739 + a2) & v807);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v819 + 48))(v199, 1, v198))
                    {
                      memcpy(v197, v199, v740);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v819 + 32))(v197, v199, v198);
                      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v819 + 56))(v197, 0, 1, v198);
                    }
                    v246 = (char *)(((unint64_t)v197 + v759) & v811);
                    v247 = (_BYTE *)(((unint64_t)v199 + v759) & v811);
                    if (v777 == v798)
                    {
                      v248 = (*(uint64_t (**)(_BYTE *))(v796 + 48))(v247);
                    }
                    else
                    {
                      v249 = (uint64_t *)((unint64_t)&v247[v800] & 0xFFFFFFFFFFFFFFF8);
                      if (v752 <= 0x7FFFFFFE)
                      {
                        v250 = *v249;
                        if ((unint64_t)*v249 >= 0xFFFFFFFF)
                          LODWORD(v250) = -1;
                        v251 = v824;
                        if ((v250 + 1) >= 2)
                          goto LABEL_429;
LABEL_431:
                        v371 = v251;
                        (*(void (**)(char *, _BYTE *, uint64_t))(v796 + 32))(v246, v247, v797);
                        v372 = (_QWORD *)((unint64_t)&v246[v800] & 0xFFFFFFFFFFFFFFF8);
                        *v372 = *v249;
                        v373 = ((unint64_t)v372 + v773) & v769;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v774 + 32))(v373, ((unint64_t)v249 + v773) & v769, v775);
                        v374 = (_QWORD *)((v758 + v373) & 0xFFFFFFFFFFFFF8);
                        v375 = (_QWORD *)((v758 + (((unint64_t)v249 + v773) & v769)) & 0xFFFFFFFFFFFFF8);
                        *v374 = *v375;
                        *(_OWORD *)(((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFF8);
LABEL_432:
                        v376 = &v246[v371];
                        *v376 = v247[v371];
                        *((_QWORD *)v376 + 1) = *(_QWORD *)&v247[v371 + 8];
                        v207 = 1;
                        v208 = 2;
                        goto LABEL_445;
                      }
                      v248 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v249 + v773) & v769);
                    }
                    v251 = v824;
                    if (v248)
                    {
LABEL_429:
                      v371 = v251;
                      memcpy(v246, v247, v251);
                      goto LABEL_432;
                    }
                    v249 = (uint64_t *)((unint64_t)&v247[v800] & 0xFFFFFFFFFFFFFFF8);
                    goto LABEL_431;
                  case 3:
                    v200 = *(void (**)(uint64_t))(v820 + 32);
                    v200(a1);
                    v201 = (void *)((v784 + a1) & v782);
                    v202 = (const void *)((v784 + a2) & v782);
                    if (v787 == v785)
                    {
                      v203 = (*(uint64_t (**)(unint64_t))(v820 + 48))((v784 + a2) & v782);
                      goto LABEL_320;
                    }
                    v238 = ((unint64_t)v202 + v790) & v809;
                    v239 = (v791 + v238) & v813;
                    if (v804 == v785)
                    {
                      if (v776 == v804)
                      {
                        v203 = (*(uint64_t (**)(unint64_t))(v794 + 48))((v791 + v238) & v813);
                        goto LABEL_320;
                      }
                      v552 = (unint64_t *)((v799 + v239) & 0xFFFFFFFFFFFFFFF8);
                      if (v751 <= 0x7FFFFFFE)
                      {
                        v553 = *v552;
                        goto LABEL_593;
                      }
                      v203 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v552 + v770) & v768);
                    }
                    else
                    {
                      v288 = v806 + v239;
                      if ((v742 & 0x80000000) == 0)
                      {
                        v289 = *(_QWORD *)(v288 + 8);
                        if (v289 >= 0xFFFFFFFF)
                          LODWORD(v289) = -1;
                        if ((_DWORD)v289 != -1)
                          goto LABEL_321;
LABEL_406:
                        v238 = ((unint64_t)v202 + v790) & v809;
                        v239 = (v791 + v238) & v813;
                        goto LABEL_407;
                      }
                      v566 = (v780 + ((v822 + v288) & v779)) & v802;
                      if (v756 <= 0x7FFFFFFD)
                      {
                        v553 = *(_QWORD *)(((v753 + ((v766 + v566) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_593:
                        if (v553 >= 0xFFFFFFFF)
                          LODWORD(v553) = -1;
                        if ((v553 + 1) >= 2)
                          goto LABEL_321;
LABEL_407:
                        v736 = v61;
                        ((void (*)(void *, const void *, uint64_t))v200)(v201, v202, v825);
                        ((void (*)(unint64_t, unint64_t, uint64_t))v200)(((unint64_t)v201 + v790) & v809, v238, v825);
                        v290 = (v791 + (((unint64_t)v201 + v790) & v809)) & v813;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v794 + 32))(v290, v239, v795);
                        v291 = (_QWORD *)((v799 + v290) & 0xFFFFFFFFFFFFFFF8);
                        v292 = (_QWORD *)((v799 + v239) & 0xFFFFFFFFFFFFFFF8);
                        *v291 = *v292;
                        v293 = ((unint64_t)v291 + v770) & v768;
                        v294 = ((unint64_t)v292 + v770) & v768;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v771 + 32))(v293, v294, v772);
                        v295 = (_QWORD *)((v757 + v294) & 0xFFFFFFFFFFFFF8);
                        v296 = (_QWORD *)((v757 + v293) & 0xFFFFFFFFFFFFF8);
                        *v296 = *v295;
                        *(_OWORD *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v295 + 15) & 0xFFFFFFFFFFFFF8);
                        *(_OWORD *)(v806 + v290) = *(_OWORD *)(v806 + v239);
                        v297 = (v822 + v806 + v290) & v779;
                        v298 = (v822 + v806 + v239) & v779;
                        *(_BYTE *)v297 = *(_BYTE *)v298;
                        v299 = v297 | 4;
                        v300 = *(_DWORD *)(v298 | 4);
                        *(_BYTE *)(v299 + 4) = *(_BYTE *)((v298 | 4) + 4);
                        *(_DWORD *)v299 = v300;
                        *(_WORD *)(v297 + 10) = *(_WORD *)(v298 + 0xA);
                        v301 = *(void (**)(size_t, size_t, uint64_t))(v778 + 32);
                        v301((v780 + v297) & v802, (v780 + v298) & v802, v767);
                        v302 = (v766 + ((v780 + v297) & v802)) & v802;
                        v303 = (v766 + ((v780 + v298) & v802)) & v802;
                        v301(v302, v303, v767);
                        v304 = (_BYTE *)(v302 + v761);
                        *v304 = *(_BYTE *)(v303 + v761);
                        v304[1] = *(_BYTE *)(v303 + v761 + 1);
                        v304[2] = *(_BYTE *)(v303 + v761 + 2);
                        v304[3] = *(_BYTE *)(v303 + v761 + 3);
                        v304[4] = *(_BYTE *)(v303 + v761 + 4);
                        v305 = (v302 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                        v306 = (v303 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                        *(_OWORD *)v305 = *(_OWORD *)v306;
                        *(_BYTE *)(v305 + 16) = *(_BYTE *)(v306 + 16);
                        *(_BYTE *)(v305 + 17) = *(_BYTE *)(v306 + 17);
                        *(_BYTE *)(v305 + 18) = *(_BYTE *)(v306 + 18);
                        *(_BYTE *)(v305 + 19) = *(_BYTE *)(v306 + 19);
                        v307 = (v305 + 27) & 0xFFFFFFFFFFFFFFF8;
                        v308 = (v306 + 27) & 0xFFFFFFFFFFFFFFF8;
                        *(_QWORD *)v307 = *(_QWORD *)v308;
                        *(_BYTE *)(v307 + 8) = *(_BYTE *)(v308 + 8);
                        *(_BYTE *)(v307 + 9) = *(_BYTE *)(v308 + 9);
                        *(_BYTE *)(v307 + 10) = *(_BYTE *)(v308 + 10);
                        *(_BYTE *)(v307 + 11) = *(_BYTE *)(v308 + 11);
                        *(_BYTE *)(v307 + 12) = *(_BYTE *)(v308 + 12);
                        v309 = (_QWORD *)((v305 + 47) & 0xFFFFFFFFFFFFF8);
                        v310 = (_QWORD *)((v306 + 47) & 0xFFFFFFFFFFFFF8);
                        *v309 = *v310;
                        v311 = ((unint64_t)v309 + 15) & 0xFFFFFFFFFFFFFFF8;
                        v312 = ((unint64_t)v310 + 15) & 0xFFFFFFFFFFFFFFF8;
                        *(_QWORD *)v311 = *(_QWORD *)v312;
                        *(_BYTE *)(v311 + 8) = *(_BYTE *)(v312 + 8);
                        *(_BYTE *)(v311 + 9) = *(_BYTE *)(v312 + 9);
                        v313 = (void *)((v762 + v311) & v802);
                        v314 = (const void *)((v762 + v312) & v802);
                        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v778 + 48))(v314, 1, v767))
                        {
                          memcpy(v313, v314, v789);
                        }
                        else
                        {
                          v301((size_t)v313, (size_t)v314, v767);
                          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v778 + 56))(v313, 0, 1, v767);
                        }
                        v204 = v781;
                        v61 = v736;
                        v205 = v754;
                        v421 = (_QWORD *)(((unint64_t)v313 + v763) & 0xFFFFFFFFFFFFFFF8);
                        v422 = (_QWORD *)(((unint64_t)v314 + v763) & 0xFFFFFFFFFFFFFFF8);
                        *v421 = *v422;
                        v423 = ((unint64_t)v421 + 15) & 0xFFFFFFFFFFFFFFF8;
                        v424 = ((unint64_t)v422 + 15) & 0xFFFFFFFFFFFFFFF8;
                        v425 = *(_QWORD *)v424;
                        *(_BYTE *)(v423 + 8) = *(_BYTE *)(v424 + 8);
                        *(_QWORD *)v423 = v425;
                        v426 = (_QWORD *)(((unint64_t)v421 + 31) & 0xFFFFFFFFFFFFF8);
                        v427 = (_QWORD *)(((unint64_t)v422 + 31) & 0xFFFFFFFFFFFFF8);
                        *v426 = *v427;
                        v428 = (_OWORD *)(((unint64_t)v426 + 15) & 0xFFFFFFFFFFFFFFF8);
                        v429 = (_OWORD *)(((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8);
                        *v428 = *v429;
                        v430 = ((unint64_t)v428 + 19) & 0xFFFFFFFFFFFFFFF8;
                        v431 = ((unint64_t)v429 + 19) & 0xFFFFFFFFFFFFFFF8;
                        v432 = *(_QWORD *)v431;
                        *(_BYTE *)(v430 + 8) = *(_BYTE *)(v431 + 8);
                        *(_QWORD *)v430 = v432;
                        *(_BYTE *)(v430 + 9) = *(_BYTE *)(v431 + 9);
                        v433 = (v430 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                        v434 = (v431 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                        LODWORD(v425) = *(_DWORD *)v434;
                        *(_BYTE *)(v433 + 4) = *(_BYTE *)(v434 + 4);
                        *(_DWORD *)v433 = v425;
                        *(_OWORD *)((v430 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v431 + 25) & 0xFFFFFFFFFFFFF8);
                        v435 = v297 + v821;
                        v436 = *(_OWORD *)(v298 + v821 + 112);
                        v438 = *(_OWORD *)(v298 + v821 + 64);
                        v437 = *(_OWORD *)(v298 + v821 + 80);
                        *(_OWORD *)(v435 + 96) = *(_OWORD *)(v298 + v821 + 96);
                        *(_OWORD *)(v435 + 112) = v436;
                        *(_OWORD *)(v435 + 64) = v438;
                        *(_OWORD *)(v435 + 80) = v437;
                        v439 = *(_OWORD *)(v298 + v821 + 176);
                        v441 = *(_OWORD *)(v298 + v821 + 128);
                        v440 = *(_OWORD *)(v298 + v821 + 144);
                        *(_OWORD *)(v435 + 160) = *(_OWORD *)(v298 + v821 + 160);
                        *(_OWORD *)(v435 + 176) = v439;
                        *(_OWORD *)(v435 + 128) = v441;
                        *(_OWORD *)(v435 + 144) = v440;
                        v443 = *(_OWORD *)(v298 + v821 + 208);
                        v442 = *(_OWORD *)(v298 + v821 + 224);
                        v444 = *(_OWORD *)(v298 + v821 + 192);
                        *(_QWORD *)(v435 + 240) = *(_QWORD *)(v298 + v821 + 240);
                        *(_OWORD *)(v435 + 208) = v443;
                        *(_OWORD *)(v435 + 224) = v442;
                        *(_OWORD *)(v435 + 192) = v444;
                        v445 = *(_OWORD *)(v298 + v821);
                        v446 = *(_OWORD *)(v298 + v821 + 16);
                        v447 = *(_OWORD *)(v298 + v821 + 48);
                        *(_OWORD *)(v435 + 32) = *(_OWORD *)(v298 + v821 + 32);
                        *(_OWORD *)(v435 + 48) = v447;
                        *(_OWORD *)v435 = v445;
                        *(_OWORD *)(v435 + 16) = v446;
                        v448 = (_OWORD *)((v297 + v821 + 255) & 0xFFFFFFFFFFFFFFF8);
                        v449 = (__int128 *)((v298 + v821 + 255) & 0xFFFFFFFFFFFFFFF8);
                        v450 = *v449;
                        *(_OWORD *)((char *)v448 + 9) = *(__int128 *)((char *)v449 + 9);
                        *v448 = v450;
                        v451 = (v297 + v821 + 287) & 0xFFFFFFFFFFFFFFF8;
                        v452 = (v298 + v821 + 287) & 0xFFFFFFFFFFFFFFF8;
                        v453 = *(_OWORD *)v452;
                        *(_BYTE *)(v451 + 16) = *(_BYTE *)(v452 + 16);
                        *(_OWORD *)v451 = v453;
                        v454 = (_QWORD *)((v297 + v821 + 311) & 0xFFFFFFFFFFFFF8);
                        v455 = (_QWORD *)((v298 + v821 + 311) & 0xFFFFFFFFFFFFF8);
                        *v454 = *v455;
                        *(_OWORD *)(((unint64_t)v454 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v455 + 15) & 0xFFFFFFFFFFFFF8);
                        v206 = v761;
                        if (v756)
                        {
LABEL_444:
                          v456 = ((((v205
                                   + ((((((((((v204 + v206 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                         + 15) & 0xFFFFFFFFFFFFFFF8)
                                       + 19) & 0xFFFFFFFFFFFFFFF8)
                                     + 25) & 0xFFFFFFFFFFFFFFF8)
                                   + 327) & 0xFFFFFFFFFFFFFFF8)
                                 + 15) & 0xFFFFFFFFFFFFFFF8)
                               + 16;
                          v457 = (_OWORD *)(((unint64_t)v201 + v456) & 0xFFFFFFFFFFFFFFF8);
                          v458 = (_OWORD *)(((unint64_t)v202 + v456) & 0xFFFFFFFFFFFFFFF8);
                          *v457 = *v458;
                          *(_QWORD *)(((unint64_t)v457 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v458 + 23) & 0xFFFFFFFFFFFFF8);
                          v207 = 1;
                          v208 = 3;
LABEL_445:
                          v46 = v61;
LABEL_446:
                          *(_BYTE *)(a1 + v46) = v208;
                          *(_BYTE *)(a1 + v62) = v207;
                          return a1;
                        }
LABEL_322:
                        v206 = v789;
                        goto LABEL_444;
                      }
                      v203 = (*(uint64_t (**)(size_t))(v778 + 48))(v566);
                    }
LABEL_320:
                    if (v203)
                    {
LABEL_321:
                      memcpy(v201, v202, __n);
                      v204 = v781;
                      v205 = v754;
                      goto LABEL_322;
                    }
                    goto LABEL_406;
                  case 4:
                    (*(void (**)(uint64_t))(v820 + 32))(a1);
                    v207 = 1;
                    v208 = 4;
                    goto LABEL_445;
                  case 5:
                    (*(void (**)(uint64_t))(v820 + 32))(a1);
                    v207 = 1;
                    v208 = 5;
                    goto LABEL_445;
                  case 6:
                    (*(void (**)(uint64_t))(v820 + 32))(a1);
                    v209 = (void *)((v746 + a1) & v744);
                    v210 = (const void *)((v746 + a2) & v744);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v210, 1, v750))
                    {
                      memcpy(v209, v210, v737);
                      v207 = 1;
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v52 + 32))(v209, v210, v750);
                      v207 = 1;
                      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v209, 0, 1, v750);
                    }
                    v208 = 6;
                    goto LABEL_445;
                  case 7:
                    (*(void (**)(uint64_t))(v820 + 32))(a1);
                    v207 = 1;
                    v208 = 7;
                    goto LABEL_445;
                  default:
                    if (v61 <= 3)
                      v183 = v61;
                    else
                      v183 = 4;
                    __asm { BR              X12 }
                    return result;
                }
              }
              switch(*(_BYTE *)(a2 + v46))
              {
                case 0:
                  v211 = *(void (**)(uint64_t))(v819 + 32);
                  v211(a1);
                  v212 = (void *)((v786 + a1) & v783);
                  v213 = (const void *)((v786 + a2) & v783);
                  if (v823 == v788)
                  {
                    v214 = (*(uint64_t (**)(unint64_t))(v819 + 48))((v786 + a2) & v783);
                    goto LABEL_332;
                  }
                  v240 = ((unint64_t)v213 + v792) & v807;
                  v241 = (v793 + v240) & v811;
                  if (v798 == v788)
                  {
                    if (v777 == v798)
                    {
                      v214 = (*(uint64_t (**)(unint64_t))(v796 + 48))((v793 + v240) & v811);
                      goto LABEL_332;
                    }
                    v554 = (unint64_t *)((v800 + v241) & 0xFFFFFFFFFFFFFFF8);
                    if (v752 <= 0x7FFFFFFE)
                    {
                      v555 = *v554;
                      goto LABEL_598;
                    }
                    v214 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v554 + v773) & v769);
                  }
                  else
                  {
                    v315 = v824 + v241;
                    if ((v743 & 0x80000000) == 0)
                    {
                      v316 = *(_QWORD *)(v315 + 8);
                      if (v316 >= 0xFFFFFFFF)
                        LODWORD(v316) = -1;
                      if ((_DWORD)v316 != -1)
                        goto LABEL_333;
LABEL_413:
                      v240 = ((unint64_t)v213 + v792) & v807;
                      v241 = (v793 + v240) & v811;
                      goto LABEL_414;
                    }
                    v567 = (v780 + ((v822 + v315) & v779)) & v802;
                    if (v756 <= 0x7FFFFFFD)
                    {
                      v555 = *(_QWORD *)(((v753 + ((v766 + v567) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_598:
                      if (v555 >= 0xFFFFFFFF)
                        LODWORD(v555) = -1;
                      if ((v555 + 1) >= 2)
                        goto LABEL_333;
LABEL_414:
                      ((void (*)(void *, const void *, uint64_t))v211)(v212, v213, v66);
                      ((void (*)(unint64_t, unint64_t, uint64_t))v211)(((unint64_t)v212 + v792) & v807, v240, v66);
                      v317 = (v793 + (((unint64_t)v212 + v792) & v807)) & v811;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v796 + 32))(v317, v241, v797);
                      v318 = (_QWORD *)((v800 + v317) & 0xFFFFFFFFFFFFFFF8);
                      v319 = (_QWORD *)((v800 + v241) & 0xFFFFFFFFFFFFFFF8);
                      *v318 = *v319;
                      v320 = ((unint64_t)v318 + v773) & v769;
                      v321 = ((unint64_t)v319 + v773) & v769;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v774 + 32))(v320, v321, v775);
                      v322 = (_QWORD *)((v758 + v321) & 0xFFFFFFFFFFFFF8);
                      v323 = (_QWORD *)((v758 + v320) & 0xFFFFFFFFFFFFF8);
                      *v323 = *v322;
                      *(_OWORD *)(((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v322 + 15) & 0xFFFFFFFFFFFFF8);
                      *(_OWORD *)(v824 + v317) = *(_OWORD *)(v824 + v241);
                      v324 = (v822 + v824 + v317) & v779;
                      v325 = (v822 + v824 + v241) & v779;
                      *(_BYTE *)v324 = *(_BYTE *)v325;
                      v326 = v324 | 4;
                      v327 = *(_DWORD *)(v325 | 4);
                      *(_BYTE *)(v326 + 4) = *(_BYTE *)((v325 | 4) + 4);
                      *(_DWORD *)v326 = v327;
                      *(_WORD *)(v324 + 10) = *(_WORD *)(v325 + 0xA);
                      v328 = *(void (**)(unint64_t, unint64_t, uint64_t))(v778 + 32);
                      v328((v780 + v324) & v802, (v780 + v325) & v802, v767);
                      v329 = (v766 + ((v780 + v324) & v802)) & v802;
                      v330 = (v766 + ((v780 + v325) & v802)) & v802;
                      v328(v329, v330, v767);
                      v331 = (_BYTE *)(v329 + v761);
                      *v331 = *(_BYTE *)(v330 + v761);
                      v331[1] = *(_BYTE *)(v330 + v761 + 1);
                      v331[2] = *(_BYTE *)(v330 + v761 + 2);
                      v331[3] = *(_BYTE *)(v330 + v761 + 3);
                      v331[4] = *(_BYTE *)(v330 + v761 + 4);
                      v332 = (v329 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                      v333 = (v330 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v332 = *(_OWORD *)v333;
                      *(_BYTE *)(v332 + 16) = *(_BYTE *)(v333 + 16);
                      *(_BYTE *)(v332 + 17) = *(_BYTE *)(v333 + 17);
                      *(_BYTE *)(v332 + 18) = *(_BYTE *)(v333 + 18);
                      *(_BYTE *)(v332 + 19) = *(_BYTE *)(v333 + 19);
                      v334 = (v332 + 27) & 0xFFFFFFFFFFFFFFF8;
                      v335 = (v333 + 27) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v334 = *(_QWORD *)v335;
                      *(_BYTE *)(v334 + 8) = *(_BYTE *)(v335 + 8);
                      *(_BYTE *)(v334 + 9) = *(_BYTE *)(v335 + 9);
                      *(_BYTE *)(v334 + 10) = *(_BYTE *)(v335 + 10);
                      *(_BYTE *)(v334 + 11) = *(_BYTE *)(v335 + 11);
                      *(_BYTE *)(v334 + 12) = *(_BYTE *)(v335 + 12);
                      v336 = (_QWORD *)((v332 + 47) & 0xFFFFFFFFFFFFF8);
                      v337 = (_QWORD *)((v333 + 47) & 0xFFFFFFFFFFFFF8);
                      *v336 = *v337;
                      v338 = ((unint64_t)v336 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v339 = ((unint64_t)v337 + 15) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v338 = *(_QWORD *)v339;
                      *(_BYTE *)(v338 + 8) = *(_BYTE *)(v339 + 8);
                      *(_BYTE *)(v338 + 9) = *(_BYTE *)(v339 + 9);
                      v340 = (void *)((v762 + v338) & v802);
                      v341 = (const void *)((v762 + v339) & v802);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v778 + 48))(v341, 1, v767))
                      {
                        memcpy(v340, v341, v789);
                      }
                      else
                      {
                        v328((unint64_t)v340, (unint64_t)v341, v767);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v778 + 56))(v340, 0, 1, v767);
                      }
                      v215 = v781;
                      v216 = v755;
                      v212 = (void *)((v786 + a1) & v783);
                      v460 = (_QWORD *)(((unint64_t)v340 + v763) & 0xFFFFFFFFFFFFFFF8);
                      v461 = (_QWORD *)(((unint64_t)v341 + v763) & 0xFFFFFFFFFFFFFFF8);
                      *v460 = *v461;
                      v462 = ((unint64_t)v460 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v463 = ((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v464 = *(_QWORD *)v463;
                      *(_BYTE *)(v462 + 8) = *(_BYTE *)(v463 + 8);
                      *(_QWORD *)v462 = v464;
                      v465 = (_QWORD *)(((unint64_t)v460 + 31) & 0xFFFFFFFFFFFFF8);
                      v466 = (_QWORD *)(((unint64_t)v461 + 31) & 0xFFFFFFFFFFFFF8);
                      *v465 = *v466;
                      v467 = (_OWORD *)(((unint64_t)v465 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v468 = (_OWORD *)(((unint64_t)v466 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v467 = *v468;
                      v469 = ((unint64_t)v467 + 19) & 0xFFFFFFFFFFFFFFF8;
                      v470 = ((unint64_t)v468 + 19) & 0xFFFFFFFFFFFFFFF8;
                      v471 = *(_QWORD *)v470;
                      *(_BYTE *)(v469 + 8) = *(_BYTE *)(v470 + 8);
                      *(_QWORD *)v469 = v471;
                      *(_BYTE *)(v469 + 9) = *(_BYTE *)(v470 + 9);
                      v472 = (v469 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      v473 = (v470 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      LODWORD(v464) = *(_DWORD *)v473;
                      *(_BYTE *)(v472 + 4) = *(_BYTE *)(v473 + 4);
                      *(_DWORD *)v472 = v464;
                      *(_OWORD *)((v469 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v470 + 25) & 0xFFFFFFFFFFFFF8);
                      v474 = v821 + v324;
                      v475 = *(_OWORD *)(v821 + v325 + 112);
                      v477 = *(_OWORD *)(v821 + v325 + 64);
                      v476 = *(_OWORD *)(v821 + v325 + 80);
                      *(_OWORD *)(v474 + 96) = *(_OWORD *)(v821 + v325 + 96);
                      *(_OWORD *)(v474 + 112) = v475;
                      *(_OWORD *)(v474 + 64) = v477;
                      *(_OWORD *)(v474 + 80) = v476;
                      v478 = *(_OWORD *)(v821 + v325 + 176);
                      v480 = *(_OWORD *)(v821 + v325 + 128);
                      v479 = *(_OWORD *)(v821 + v325 + 144);
                      *(_OWORD *)(v474 + 160) = *(_OWORD *)(v821 + v325 + 160);
                      *(_OWORD *)(v474 + 176) = v478;
                      *(_OWORD *)(v474 + 128) = v480;
                      *(_OWORD *)(v474 + 144) = v479;
                      v482 = *(_OWORD *)(v821 + v325 + 208);
                      v481 = *(_OWORD *)(v821 + v325 + 224);
                      v483 = *(_OWORD *)(v821 + v325 + 192);
                      *(_QWORD *)(v474 + 240) = *(_QWORD *)(v821 + v325 + 240);
                      *(_OWORD *)(v474 + 208) = v482;
                      *(_OWORD *)(v474 + 224) = v481;
                      *(_OWORD *)(v474 + 192) = v483;
                      v484 = *(_OWORD *)(v821 + v325);
                      v485 = *(_OWORD *)(v821 + v325 + 16);
                      v486 = *(_OWORD *)(v821 + v325 + 48);
                      *(_OWORD *)(v474 + 32) = *(_OWORD *)(v821 + v325 + 32);
                      *(_OWORD *)(v474 + 48) = v486;
                      *(_OWORD *)v474 = v484;
                      *(_OWORD *)(v474 + 16) = v485;
                      v487 = (_OWORD *)((v821 + v324 + 255) & 0xFFFFFFFFFFFFFFF8);
                      v488 = (__int128 *)((v821 + v325 + 255) & 0xFFFFFFFFFFFFFFF8);
                      v489 = *v488;
                      *(_OWORD *)((char *)v487 + 9) = *(__int128 *)((char *)v488 + 9);
                      *v487 = v489;
                      v490 = (v821 + v324 + 287) & 0xFFFFFFFFFFFFFFF8;
                      v491 = (v821 + v325 + 287) & 0xFFFFFFFFFFFFFFF8;
                      v492 = *(_OWORD *)v491;
                      *(_BYTE *)(v490 + 16) = *(_BYTE *)(v491 + 16);
                      *(_OWORD *)v490 = v492;
                      v493 = (_QWORD *)((v821 + v324 + 311) & 0xFFFFFFFFFFFFF8);
                      v494 = (_QWORD *)((v821 + v325 + 311) & 0xFFFFFFFFFFFFF8);
                      *v493 = *v494;
                      *(_OWORD *)(((unint64_t)v493 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v494 + 15) & 0xFFFFFFFFFFFFF8);
                      v217 = v761;
                      v213 = (const void *)((v786 + a2) & v783);
                      if (v756)
                      {
LABEL_450:
                        v208 = 0;
                        v207 = 0;
                        v495 = ((((v216
                                 + ((((((((((v215 + v217 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 19) & 0xFFFFFFFFFFFFFFF8)
                                   + 25) & 0xFFFFFFFFFFFFFFF8)
                                 + 327) & 0xFFFFFFFFFFFFFFF8)
                               + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 16;
                        v496 = (_QWORD *)(((unint64_t)v212 + v495) & 0xFFFFFFFFFFFFFFF8);
                        v497 = (_QWORD *)(((unint64_t)v213 + v495) & 0xFFFFFFFFFFFFFFF8);
                        *v496 = *v497;
                        *(_QWORD *)(((unint64_t)v496 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v497 + 15) & 0xFFFFFFFFFFFFF8);
                        goto LABEL_446;
                      }
LABEL_334:
                      v217 = v789;
                      goto LABEL_450;
                    }
                    v214 = (*(uint64_t (**)(uint64_t))(v778 + 48))(v567);
                  }
LABEL_332:
                  if (v214)
                  {
LABEL_333:
                    memcpy(v212, v213, v765);
                    v215 = v781;
                    v216 = v755;
                    goto LABEL_334;
                  }
                  goto LABEL_413;
                case 1:
                  v827 = v46;
                  v218 = *(void (**)(uint64_t))(v819 + 32);
                  v218(a1);
                  v219 = (void *)((v786 + a1) & v783);
                  v220 = (const void *)((v786 + a2) & v783);
                  if (v823 == v788)
                  {
                    v221 = (*(uint64_t (**)(unint64_t))(v819 + 48))((v786 + a2) & v783);
                    v222 = v778;
LABEL_537:
                    if (v221)
                    {
LABEL_538:
                      memcpy(v219, v220, v765);
                      v653 = v781;
                      v46 = v827;
                      v654 = v755;
LABEL_539:
                      v655 = v789;
                      goto LABEL_545;
                    }
                    v242 = ((unint64_t)v220 + v792) & v807;
                    v243 = (v793 + v242) & v811;
LABEL_541:
                    ((void (*)(void *, const void *, uint64_t))v218)(v219, v220, AssociatedTypeWitness);
                    v656 = ((unint64_t)v219 + v792) & v807;
                    ((void (*)(unint64_t, unint64_t, uint64_t))v218)(v656, v242, AssociatedTypeWitness);
                    v657 = (v793 + v656) & v811;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v796 + 32))(v657, v243, v797);
                    v658 = (_QWORD *)((v800 + v657) & 0xFFFFFFFFFFFFFFF8);
                    v659 = (_QWORD *)((v800 + v243) & 0xFFFFFFFFFFFFFFF8);
                    *v658 = *v659;
                    v660 = ((unint64_t)v658 + v773) & v769;
                    v661 = ((unint64_t)v659 + v773) & v769;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v774 + 32))(v660, v661, v775);
                    v662 = (_QWORD *)((v758 + v661) & 0xFFFFFFFFFFFFF8);
                    v663 = (_QWORD *)((v758 + v660) & 0xFFFFFFFFFFFFF8);
                    *v663 = *v662;
                    *(_OWORD *)(((unint64_t)v663 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v662
                                                                                                 + 15) & 0xFFFFFFFFFFFFF8);
                    *(_OWORD *)(v824 + v657) = *(_OWORD *)(v824 + v243);
                    v664 = (v822 + v824 + v657) & v779;
                    v665 = (v822 + v824 + v243) & v779;
                    *(_BYTE *)v664 = *(_BYTE *)v665;
                    v666 = v664 | 4;
                    v667 = *(_DWORD *)(v665 | 4);
                    *(_BYTE *)(v666 + 4) = *(_BYTE *)((v665 | 4) + 4);
                    *(_DWORD *)v666 = v667;
                    *(_WORD *)(v664 + 10) = *(_WORD *)(v665 + 0xA);
                    v668 = *(void (**)(unint64_t, unint64_t, uint64_t))(v222 + 32);
                    v668((v780 + v664) & v802, (v780 + v665) & v802, v767);
                    v669 = (v766 + ((v780 + v664) & v802)) & v802;
                    v670 = (v766 + ((v780 + v665) & v802)) & v802;
                    v668(v669, v670, v767);
                    v655 = v761;
                    v671 = (_BYTE *)(v669 + v761);
                    *v671 = *(_BYTE *)(v670 + v761);
                    v671[1] = *(_BYTE *)(v670 + v761 + 1);
                    v671[2] = *(_BYTE *)(v670 + v761 + 2);
                    v671[3] = *(_BYTE *)(v670 + v761 + 3);
                    v671[4] = *(_BYTE *)(v670 + v761 + 4);
                    v672 = (v669 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                    v673 = (v670 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(_OWORD *)v672 = *(_OWORD *)v673;
                    *(_BYTE *)(v672 + 16) = *(_BYTE *)(v673 + 16);
                    *(_BYTE *)(v672 + 17) = *(_BYTE *)(v673 + 17);
                    *(_BYTE *)(v672 + 18) = *(_BYTE *)(v673 + 18);
                    *(_BYTE *)(v672 + 19) = *(_BYTE *)(v673 + 19);
                    v674 = (v672 + 27) & 0xFFFFFFFFFFFFFFF8;
                    v675 = (v673 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(_QWORD *)v674 = *(_QWORD *)v675;
                    *(_BYTE *)(v674 + 8) = *(_BYTE *)(v675 + 8);
                    *(_BYTE *)(v674 + 9) = *(_BYTE *)(v675 + 9);
                    *(_BYTE *)(v674 + 10) = *(_BYTE *)(v675 + 10);
                    *(_BYTE *)(v674 + 11) = *(_BYTE *)(v675 + 11);
                    *(_BYTE *)(v674 + 12) = *(_BYTE *)(v675 + 12);
                    v676 = (_QWORD *)((v672 + 47) & 0xFFFFFFFFFFFFF8);
                    v677 = (_QWORD *)((v673 + 47) & 0xFFFFFFFFFFFFF8);
                    *v676 = *v677;
                    v678 = ((unint64_t)v676 + 15) & 0xFFFFFFFFFFFFFFF8;
                    v679 = ((unint64_t)v677 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(_QWORD *)v678 = *(_QWORD *)v679;
                    *(_BYTE *)(v678 + 8) = *(_BYTE *)(v679 + 8);
                    *(_BYTE *)(v678 + 9) = *(_BYTE *)(v679 + 9);
                    v680 = (void *)((v762 + v678) & v802);
                    v681 = (const void *)((v762 + v679) & v802);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v222 + 48))(v681, 1, v767))
                    {
                      memcpy(v680, v681, v789);
                    }
                    else
                    {
                      v668((unint64_t)v680, (unint64_t)v681, v767);
                      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v680, 0, 1, v767);
                    }
                    v653 = v781;
                    v46 = v827;
                    v654 = v755;
                    v220 = (const void *)((v786 + a2) & v783);
                    v682 = (_QWORD *)(((unint64_t)v680 + v763) & 0xFFFFFFFFFFFFFFF8);
                    v683 = (_QWORD *)(((unint64_t)v681 + v763) & 0xFFFFFFFFFFFFFFF8);
                    *v682 = *v683;
                    v684 = ((unint64_t)v682 + 15) & 0xFFFFFFFFFFFFFFF8;
                    v685 = ((unint64_t)v683 + 15) & 0xFFFFFFFFFFFFFFF8;
                    v686 = *(_QWORD *)v685;
                    *(_BYTE *)(v684 + 8) = *(_BYTE *)(v685 + 8);
                    *(_QWORD *)v684 = v686;
                    v687 = (_QWORD *)(((unint64_t)v682 + 31) & 0xFFFFFFFFFFFFF8);
                    v688 = (_QWORD *)(((unint64_t)v683 + 31) & 0xFFFFFFFFFFFFF8);
                    *v687 = *v688;
                    v689 = (_OWORD *)(((unint64_t)v687 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v690 = (_OWORD *)(((unint64_t)v688 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *v689 = *v690;
                    v691 = ((unint64_t)v689 + 19) & 0xFFFFFFFFFFFFFFF8;
                    v692 = ((unint64_t)v690 + 19) & 0xFFFFFFFFFFFFFFF8;
                    v693 = *(_QWORD *)v692;
                    *(_BYTE *)(v691 + 8) = *(_BYTE *)(v692 + 8);
                    *(_QWORD *)v691 = v693;
                    *(_BYTE *)(v691 + 9) = *(_BYTE *)(v692 + 9);
                    v694 = (v691 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    v695 = (v692 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    LODWORD(v686) = *(_DWORD *)v695;
                    *(_BYTE *)(v694 + 4) = *(_BYTE *)(v695 + 4);
                    *(_DWORD *)v694 = v686;
                    *(_OWORD *)((v691 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v692 + 25) & 0xFFFFFFFFFFFFF8);
                    v696 = v821 + v664;
                    v697 = *(_OWORD *)(v821 + v665 + 112);
                    v699 = *(_OWORD *)(v821 + v665 + 64);
                    v698 = *(_OWORD *)(v821 + v665 + 80);
                    *(_OWORD *)(v696 + 96) = *(_OWORD *)(v821 + v665 + 96);
                    *(_OWORD *)(v696 + 112) = v697;
                    *(_OWORD *)(v696 + 64) = v699;
                    *(_OWORD *)(v696 + 80) = v698;
                    v700 = *(_OWORD *)(v821 + v665 + 176);
                    v702 = *(_OWORD *)(v821 + v665 + 128);
                    v701 = *(_OWORD *)(v821 + v665 + 144);
                    *(_OWORD *)(v696 + 160) = *(_OWORD *)(v821 + v665 + 160);
                    *(_OWORD *)(v696 + 176) = v700;
                    *(_OWORD *)(v696 + 128) = v702;
                    *(_OWORD *)(v696 + 144) = v701;
                    v704 = *(_OWORD *)(v821 + v665 + 208);
                    v703 = *(_OWORD *)(v821 + v665 + 224);
                    v705 = *(_OWORD *)(v821 + v665 + 192);
                    *(_QWORD *)(v696 + 240) = *(_QWORD *)(v821 + v665 + 240);
                    *(_OWORD *)(v696 + 208) = v704;
                    *(_OWORD *)(v696 + 224) = v703;
                    *(_OWORD *)(v696 + 192) = v705;
                    v706 = *(_OWORD *)(v821 + v665);
                    v707 = *(_OWORD *)(v821 + v665 + 16);
                    v708 = *(_OWORD *)(v821 + v665 + 48);
                    *(_OWORD *)(v696 + 32) = *(_OWORD *)(v821 + v665 + 32);
                    *(_OWORD *)(v696 + 48) = v708;
                    *(_OWORD *)v696 = v706;
                    *(_OWORD *)(v696 + 16) = v707;
                    v709 = (_OWORD *)((v821 + v664 + 255) & 0xFFFFFFFFFFFFFFF8);
                    v710 = (__int128 *)((v821 + v665 + 255) & 0xFFFFFFFFFFFFFFF8);
                    v711 = *v710;
                    *(_OWORD *)((char *)v709 + 9) = *(__int128 *)((char *)v710 + 9);
                    *v709 = v711;
                    v712 = (v821 + v664 + 287) & 0xFFFFFFFFFFFFFFF8;
                    v713 = (v821 + v665 + 287) & 0xFFFFFFFFFFFFFFF8;
                    v714 = *(_OWORD *)v713;
                    *(_BYTE *)(v712 + 16) = *(_BYTE *)(v713 + 16);
                    *(_OWORD *)v712 = v714;
                    v715 = (_QWORD *)((v821 + v664 + 311) & 0xFFFFFFFFFFFFF8);
                    v716 = (_QWORD *)((v821 + v665 + 311) & 0xFFFFFFFFFFFFF8);
                    *v715 = *v716;
                    *(_OWORD *)(((unint64_t)v715 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v716
                                                                                                 + 15) & 0xFFFFFFFFFFFFF8);
                    v219 = (void *)((v786 + a1) & v783);
                    if (!v756)
                      goto LABEL_539;
LABEL_545:
                    v717 = ((((v654
                             + ((((((((((v653 + v655 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    v718 = (void *)(((unint64_t)v219 + v816 + v717) & v809);
                    v719 = (const void *)(((unint64_t)v220 + v816 + v717) & v809);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v820 + 48))(v719, 1, v825))
                    {
                      memcpy(v718, v719, v741);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v820 + 32))(v718, v719, v825);
                      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v820 + 56))(v718, 0, 1, v825);
                    }
                    v720 = (char *)(((unint64_t)v718 + v760) & v813);
                    v721 = (char *)(((unint64_t)v719 + v760) & v813);
                    if (v776 == v804)
                    {
                      v722 = (*(uint64_t (**)(unint64_t))(v794 + 48))(((unint64_t)v719 + v760) & v813);
                    }
                    else
                    {
                      v723 = (uint64_t *)((unint64_t)&v721[v799] & 0xFFFFFFFFFFFFFFF8);
                      if (v751 <= 0x7FFFFFFE)
                      {
                        v724 = *v723;
                        if ((unint64_t)*v723 >= 0xFFFFFFFF)
                          LODWORD(v724) = -1;
                        if ((v724 + 1) >= 2)
                          goto LABEL_557;
                        goto LABEL_559;
                      }
                      v722 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v723 + v770) & v768);
                    }
                    if (v722)
                    {
LABEL_557:
                      v725 = v806;
                      memcpy(v720, v721, v806);
LABEL_560:
                      v207 = 0;
                      *(_QWORD *)&v720[v725] = *(_QWORD *)&v721[v725];
                      v730 = (_QWORD *)((unint64_t)&v720[v725 + 15] & 0xFFFFFFFFFFFFF8);
                      v731 = (_QWORD *)((unint64_t)&v721[v725 + 15] & 0xFFFFFFFFFFFFFFF8);
                      *v730 = *v731;
                      *(_QWORD *)(((unint64_t)v730 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v731 + 15) & 0xFFFFFFFFFFFFF8);
                      v208 = 1;
                      goto LABEL_446;
                    }
                    v723 = (uint64_t *)((unint64_t)&v721[v799] & 0xFFFFFFFFFFFFFFF8);
LABEL_559:
                    (*(void (**)(char *, char *, uint64_t))(v794 + 32))(v720, v721, v795);
                    v726 = (_QWORD *)((unint64_t)&v720[v799] & 0xFFFFFFFFFFFFFFF8);
                    *v726 = *v723;
                    v727 = ((unint64_t)v726 + v770) & v768;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v771 + 32))(v727, ((unint64_t)v723 + v770) & v768, v772);
                    v728 = (_QWORD *)((v757 + v727) & 0xFFFFFFFFFFFFF8);
                    v729 = (_QWORD *)((v757 + (((unint64_t)v723 + v770) & v768)) & 0xFFFFFFFFFFFFF8);
                    *v728 = *v729;
                    *(_OWORD *)(((unint64_t)v728 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v729
                                                                                                 + 15) & 0xFFFFFFFFFFFFF8);
                    v725 = v806;
                    goto LABEL_560;
                  }
                  v242 = ((unint64_t)v220 + v792) & v807;
                  v243 = (v793 + v242) & v811;
                  v222 = v778;
                  if (v798 == v788)
                  {
                    if (v777 == v798)
                    {
                      v221 = (*(uint64_t (**)(unint64_t))(v796 + 48))((v793 + v242) & v811);
                      goto LABEL_537;
                    }
                    v556 = (unint64_t *)((v800 + v243) & 0xFFFFFFFFFFFFFFF8);
                    if (v752 > 0x7FFFFFFE)
                    {
                      v221 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v556 + v773) & v769);
                      goto LABEL_537;
                    }
                    v557 = *v556;
                  }
                  else
                  {
                    v342 = v824 + v243;
                    if ((v743 & 0x80000000) == 0)
                    {
                      v343 = *(_QWORD *)(v342 + 8);
                      if (v343 >= 0xFFFFFFFF)
                        LODWORD(v343) = -1;
                      v221 = v343 + 1;
                      goto LABEL_537;
                    }
                    v568 = (v780 + ((v822 + v342) & v779)) & v802;
                    if (v756 > 0x7FFFFFFD)
                    {
                      v221 = (*(uint64_t (**)(uint64_t))(v778 + 48))(v568);
                      goto LABEL_537;
                    }
                    v557 = *(_QWORD *)(((v753 + ((v766 + v568) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
                  }
                  if (v557 >= 0xFFFFFFFF)
                    LODWORD(v557) = -1;
                  if ((v557 + 1) >= 2)
                    goto LABEL_538;
                  goto LABEL_541;
                case 2:
                  (*(void (**)(uint64_t))(v819 + 32))(a1);
                  v223 = (void *)((v748 + a1) & v809);
                  v224 = (const void *)((v748 + a2) & v809);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v820 + 48))(v224, 1, v65))
                  {
                    memcpy(v223, v224, v741);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v820 + 32))(v223, v224, v65);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v820 + 56))(v223, 0, 1, v65);
                  }
                  v252 = (char *)(((unint64_t)v223 + v760) & v813);
                  v253 = (char *)(((unint64_t)v224 + v760) & v813);
                  if (v776 == v804)
                  {
                    v254 = (*(uint64_t (**)(char *))(v794 + 48))(v253);
                  }
                  else
                  {
                    v255 = (uint64_t *)((unint64_t)&v253[v799] & 0xFFFFFFFFFFFFFFF8);
                    if (v751 <= 0x7FFFFFFE)
                    {
                      v256 = *v255;
                      if ((unint64_t)*v255 >= 0xFFFFFFFF)
                        LODWORD(v256) = -1;
                      if ((v256 + 1) >= 2)
                        goto LABEL_435;
                      goto LABEL_437;
                    }
                    v254 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v255 + v770) & v768);
                  }
                  if (v254)
                  {
LABEL_435:
                    v377 = v806;
                    memcpy(v252, v253, v806);
                    goto LABEL_438;
                  }
                  v255 = (uint64_t *)((unint64_t)&v253[v799] & 0xFFFFFFFFFFFFFFF8);
LABEL_437:
                  (*(void (**)(char *, char *, uint64_t))(v794 + 32))(v252, v253, v795);
                  v378 = (_QWORD *)((unint64_t)&v252[v799] & 0xFFFFFFFFFFFFFFF8);
                  *v378 = *v255;
                  v379 = ((unint64_t)v378 + v770) & v768;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v771 + 32))(v379, ((unint64_t)v255 + v770) & v768, v772);
                  v380 = (_QWORD *)((v757 + v379) & 0xFFFFFFFFFFFFF8);
                  v381 = (_QWORD *)((v757 + (((unint64_t)v255 + v770) & v768)) & 0xFFFFFFFFFFFFF8);
                  *v380 = *v381;
                  *(_OWORD *)(((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v381
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v377 = v806;
LABEL_438:
                  v207 = 0;
                  v382 = &v252[v377];
                  *v382 = v253[v377];
                  *((_QWORD *)v382 + 1) = *(_QWORD *)&v253[v377 + 8];
                  v208 = 2;
                  goto LABEL_446;
                case 3:
                  v225 = *(void (**)(uint64_t))(v819 + 32);
                  v225(a1);
                  v226 = (void *)((v786 + a1) & v783);
                  v227 = (const void *)((v786 + a2) & v783);
                  if (v823 == v788)
                  {
                    v228 = (*(uint64_t (**)(unint64_t))(v819 + 48))((v786 + a2) & v783);
                    goto LABEL_341;
                  }
                  v244 = ((unint64_t)v227 + v792) & v807;
                  v245 = (v793 + v244) & v811;
                  if (v798 == v788)
                  {
                    if (v777 == v798)
                    {
                      v228 = (*(uint64_t (**)(unint64_t))(v796 + 48))((v793 + v244) & v811);
                      goto LABEL_341;
                    }
                    v558 = (unint64_t *)((v800 + v245) & 0xFFFFFFFFFFFFFFF8);
                    if (v752 <= 0x7FFFFFFE)
                    {
                      v559 = *v558;
                      goto LABEL_608;
                    }
                    v228 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v558 + v773) & v769);
                  }
                  else
                  {
                    v344 = v824 + v245;
                    if ((v743 & 0x80000000) == 0)
                    {
                      v345 = *(_QWORD *)(v344 + 8);
                      if (v345 >= 0xFFFFFFFF)
                        LODWORD(v345) = -1;
                      if ((_DWORD)v345 != -1)
                        goto LABEL_342;
LABEL_424:
                      v244 = ((unint64_t)v227 + v792) & v807;
                      v245 = (v793 + v244) & v811;
                      goto LABEL_425;
                    }
                    v569 = (v780 + ((v822 + v344) & v779)) & v802;
                    if (v756 <= 0x7FFFFFFD)
                    {
                      v559 = *(_QWORD *)(((v753 + ((v766 + v569) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_608:
                      if (v559 >= 0xFFFFFFFF)
                        LODWORD(v559) = -1;
                      if ((v559 + 1) >= 2)
                        goto LABEL_342;
LABEL_425:
                      ((void (*)(void *, const void *, uint64_t))v225)(v226, v227, v66);
                      ((void (*)(unint64_t, unint64_t, uint64_t))v225)(((unint64_t)v226 + v792) & v807, v244, v66);
                      v346 = (v793 + (((unint64_t)v226 + v792) & v807)) & v811;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v796 + 32))(v346, v245, v797);
                      v347 = (_QWORD *)((v800 + v346) & 0xFFFFFFFFFFFFFFF8);
                      v348 = (_QWORD *)((v800 + v245) & 0xFFFFFFFFFFFFFFF8);
                      *v347 = *v348;
                      v349 = ((unint64_t)v347 + v773) & v769;
                      v350 = ((unint64_t)v348 + v773) & v769;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v774 + 32))(v349, v350, v775);
                      v351 = (_QWORD *)((v758 + v350) & 0xFFFFFFFFFFFFF8);
                      v352 = (_QWORD *)((v758 + v349) & 0xFFFFFFFFFFFFF8);
                      *v352 = *v351;
                      *(_OWORD *)(((unint64_t)v352 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v351 + 15) & 0xFFFFFFFFFFFFF8);
                      *(_OWORD *)(v824 + v346) = *(_OWORD *)(v824 + v245);
                      v353 = (v822 + v824 + v346) & v779;
                      v354 = (v822 + v824 + v245) & v779;
                      *(_BYTE *)v353 = *(_BYTE *)v354;
                      v355 = v353 | 4;
                      v356 = *(_DWORD *)(v354 | 4);
                      *(_BYTE *)(v355 + 4) = *(_BYTE *)((v354 | 4) + 4);
                      *(_DWORD *)v355 = v356;
                      *(_WORD *)(v353 + 10) = *(_WORD *)(v354 + 0xA);
                      v357 = *(void (**)(unint64_t, unint64_t, uint64_t))(v778 + 32);
                      v357((v780 + v353) & v802, (v780 + v354) & v802, v767);
                      v358 = (v766 + ((v780 + v353) & v802)) & v802;
                      v359 = (v766 + ((v780 + v354) & v802)) & v802;
                      v357(v358, v359, v767);
                      v360 = (_BYTE *)(v358 + v761);
                      *v360 = *(_BYTE *)(v359 + v761);
                      v360[1] = *(_BYTE *)(v359 + v761 + 1);
                      v360[2] = *(_BYTE *)(v359 + v761 + 2);
                      v360[3] = *(_BYTE *)(v359 + v761 + 3);
                      v360[4] = *(_BYTE *)(v359 + v761 + 4);
                      v361 = (v358 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                      v362 = (v359 + v761 + 12) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)v361 = *(_OWORD *)v362;
                      *(_BYTE *)(v361 + 16) = *(_BYTE *)(v362 + 16);
                      *(_BYTE *)(v361 + 17) = *(_BYTE *)(v362 + 17);
                      *(_BYTE *)(v361 + 18) = *(_BYTE *)(v362 + 18);
                      *(_BYTE *)(v361 + 19) = *(_BYTE *)(v362 + 19);
                      v363 = (v361 + 27) & 0xFFFFFFFFFFFFFFF8;
                      v364 = (v362 + 27) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v363 = *(_QWORD *)v364;
                      *(_BYTE *)(v363 + 8) = *(_BYTE *)(v364 + 8);
                      *(_BYTE *)(v363 + 9) = *(_BYTE *)(v364 + 9);
                      *(_BYTE *)(v363 + 10) = *(_BYTE *)(v364 + 10);
                      *(_BYTE *)(v363 + 11) = *(_BYTE *)(v364 + 11);
                      *(_BYTE *)(v363 + 12) = *(_BYTE *)(v364 + 12);
                      v365 = (_QWORD *)((v361 + 47) & 0xFFFFFFFFFFFFF8);
                      v366 = (_QWORD *)((v362 + 47) & 0xFFFFFFFFFFFFF8);
                      *v365 = *v366;
                      v367 = ((unint64_t)v365 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v368 = ((unint64_t)v366 + 15) & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v367 = *(_QWORD *)v368;
                      *(_BYTE *)(v367 + 8) = *(_BYTE *)(v368 + 8);
                      *(_BYTE *)(v367 + 9) = *(_BYTE *)(v368 + 9);
                      v369 = (void *)((v762 + v367) & v802);
                      v370 = (const void *)((v762 + v368) & v802);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v778 + 48))(v370, 1, v767))
                      {
                        memcpy(v369, v370, v789);
                      }
                      else
                      {
                        v357((unint64_t)v369, (unint64_t)v370, v767);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v778 + 56))(v369, 0, 1, v767);
                      }
                      v229 = v781;
                      v226 = (void *)((v786 + a1) & v783);
                      v230 = v755;
                      v498 = (_QWORD *)(((unint64_t)v369 + v763) & 0xFFFFFFFFFFFFFFF8);
                      v499 = (_QWORD *)(((unint64_t)v370 + v763) & 0xFFFFFFFFFFFFFFF8);
                      *v498 = *v499;
                      v500 = ((unint64_t)v498 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v501 = ((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFFFF8;
                      v502 = *(_QWORD *)v501;
                      *(_BYTE *)(v500 + 8) = *(_BYTE *)(v501 + 8);
                      *(_QWORD *)v500 = v502;
                      v503 = (_QWORD *)(((unint64_t)v498 + 31) & 0xFFFFFFFFFFFFF8);
                      v504 = (_QWORD *)(((unint64_t)v499 + 31) & 0xFFFFFFFFFFFFF8);
                      *v503 = *v504;
                      v505 = (_OWORD *)(((unint64_t)v503 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v506 = (_OWORD *)(((unint64_t)v504 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *v505 = *v506;
                      v507 = ((unint64_t)v505 + 19) & 0xFFFFFFFFFFFFFFF8;
                      v508 = ((unint64_t)v506 + 19) & 0xFFFFFFFFFFFFFFF8;
                      v509 = *(_QWORD *)v508;
                      *(_BYTE *)(v507 + 8) = *(_BYTE *)(v508 + 8);
                      *(_QWORD *)v507 = v509;
                      *(_BYTE *)(v507 + 9) = *(_BYTE *)(v508 + 9);
                      v510 = (v507 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      v511 = (v508 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      LODWORD(v502) = *(_DWORD *)v511;
                      *(_BYTE *)(v510 + 4) = *(_BYTE *)(v511 + 4);
                      *(_DWORD *)v510 = v502;
                      *(_OWORD *)((v507 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v508 + 25) & 0xFFFFFFFFFFFFF8);
                      v512 = v821 + v353;
                      v513 = *(_OWORD *)(v821 + v354 + 112);
                      v515 = *(_OWORD *)(v821 + v354 + 64);
                      v514 = *(_OWORD *)(v821 + v354 + 80);
                      *(_OWORD *)(v512 + 96) = *(_OWORD *)(v821 + v354 + 96);
                      *(_OWORD *)(v512 + 112) = v513;
                      *(_OWORD *)(v512 + 64) = v515;
                      *(_OWORD *)(v512 + 80) = v514;
                      v516 = *(_OWORD *)(v821 + v354 + 176);
                      v518 = *(_OWORD *)(v821 + v354 + 128);
                      v517 = *(_OWORD *)(v821 + v354 + 144);
                      *(_OWORD *)(v512 + 160) = *(_OWORD *)(v821 + v354 + 160);
                      *(_OWORD *)(v512 + 176) = v516;
                      *(_OWORD *)(v512 + 128) = v518;
                      *(_OWORD *)(v512 + 144) = v517;
                      v520 = *(_OWORD *)(v821 + v354 + 208);
                      v519 = *(_OWORD *)(v821 + v354 + 224);
                      v521 = *(_OWORD *)(v821 + v354 + 192);
                      *(_QWORD *)(v512 + 240) = *(_QWORD *)(v821 + v354 + 240);
                      *(_OWORD *)(v512 + 208) = v520;
                      *(_OWORD *)(v512 + 224) = v519;
                      *(_OWORD *)(v512 + 192) = v521;
                      v522 = *(_OWORD *)(v821 + v354);
                      v523 = *(_OWORD *)(v821 + v354 + 16);
                      v524 = *(_OWORD *)(v821 + v354 + 48);
                      *(_OWORD *)(v512 + 32) = *(_OWORD *)(v821 + v354 + 32);
                      *(_OWORD *)(v512 + 48) = v524;
                      *(_OWORD *)v512 = v522;
                      *(_OWORD *)(v512 + 16) = v523;
                      v525 = (_OWORD *)((v821 + v353 + 255) & 0xFFFFFFFFFFFFFFF8);
                      v526 = (__int128 *)((v821 + v354 + 255) & 0xFFFFFFFFFFFFFFF8);
                      v527 = *v526;
                      *(_OWORD *)((char *)v525 + 9) = *(__int128 *)((char *)v526 + 9);
                      *v525 = v527;
                      v528 = (v821 + v353 + 287) & 0xFFFFFFFFFFFFFFF8;
                      v529 = (v821 + v354 + 287) & 0xFFFFFFFFFFFFFFF8;
                      v530 = *(_OWORD *)v529;
                      *(_BYTE *)(v528 + 16) = *(_BYTE *)(v529 + 16);
                      *(_OWORD *)v528 = v530;
                      v531 = (_QWORD *)((v821 + v353 + 311) & 0xFFFFFFFFFFFFF8);
                      v532 = (_QWORD *)((v821 + v354 + 311) & 0xFFFFFFFFFFFFF8);
                      *v531 = *v532;
                      *(_OWORD *)(((unint64_t)v531 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v532 + 15) & 0xFFFFFFFFFFFFF8);
                      v231 = v761;
                      if (v756)
                      {
LABEL_453:
                        v207 = 0;
                        v533 = ((((v230
                                 + ((((((((((v229 + v231 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 19) & 0xFFFFFFFFFFFFFFF8)
                                   + 25) & 0xFFFFFFFFFFFFFFF8)
                                 + 327) & 0xFFFFFFFFFFFFFFF8)
                               + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 16;
                        v534 = (_OWORD *)(((unint64_t)v226 + v533) & 0xFFFFFFFFFFFFFFF8);
                        v535 = (_OWORD *)(((unint64_t)v227 + v533) & 0xFFFFFFFFFFFFFFF8);
                        *v534 = *v535;
                        *(_QWORD *)(((unint64_t)v534 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v535 + 23) & 0xFFFFFFFFFFFFF8);
                        v208 = 3;
                        goto LABEL_446;
                      }
LABEL_343:
                      v231 = v789;
                      goto LABEL_453;
                    }
                    v228 = (*(uint64_t (**)(uint64_t))(v778 + 48))(v569);
                  }
LABEL_341:
                  if (v228)
                  {
LABEL_342:
                    memcpy(v226, v227, v765);
                    v229 = v781;
                    v230 = v755;
                    goto LABEL_343;
                  }
                  goto LABEL_424;
                case 4:
                  (*(void (**)(uint64_t))(v819 + 32))(a1);
                  v207 = 0;
                  v208 = 4;
                  goto LABEL_446;
                case 5:
                  (*(void (**)(uint64_t))(v819 + 32))(a1);
                  v207 = 0;
                  v208 = 5;
                  goto LABEL_446;
                case 6:
                  (*(void (**)(uint64_t))(v819 + 32))(a1);
                  v232 = (void *)((v747 + a1) & v745);
                  v233 = (const void *)((v747 + a2) & v745);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v749 + 48))(v233, 1, v817))
                  {
                    memcpy(v232, v233, v738);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v749 + 32))(v232, v233, v817);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v749 + 56))(v232, 0, 1, v817);
                  }
                  v207 = 0;
                  v208 = 6;
                  goto LABEL_446;
                case 7:
                  (*(void (**)(uint64_t))(v819 + 32))(a1);
                  v207 = 0;
                  v208 = 7;
                  goto LABEL_446;
                default:
                  if (v46 <= 3)
                    v184 = v46;
                  else
                    v184 = 4;
                  __asm { BR              X12 }
                  return result;
              }
            }
            v560 = (v780 + ((v822 + v174) & v779)) & v802;
            if (v756 <= 0x7FFFFFFD)
            {
              v541 = *(_QWORD *)(((v753 + ((v766 + v560) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_563:
              if (v541 >= 0xFFFFFFFF)
                LODWORD(v541) = -1;
              if ((v541 + 1) < 2)
                goto LABEL_129;
              goto LABEL_200;
            }
            v101 = (*(uint64_t (**)(size_t))(v778 + 48))(v560);
          }
LABEL_127:
          if (v101)
            goto LABEL_200;
          goto LABEL_128;
        case 4:
        case 5:
        case 7:
          (*(void (**)(uint64_t, uint64_t))(v820 + 8))(a1, v825);
          goto LABEL_292;
        case 6:
          (*(void (**)(uint64_t, uint64_t))(v820 + 8))(a1, v825);
          v112 = (v746 + a1) & v744;
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v112, 1, v750))
            (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v112, v750);
          goto LABEL_292;
        default:
          if (v61 <= 3)
            v67 = v61;
          else
            v67 = 4;
          __asm { BR              X12 }
          return result;
      }
    }
    v66 = AssociatedTypeWitness;
    switch(*(_BYTE *)(a1 + v46))
    {
      case 0:
        v113 = *(void (**)(uint64_t, uint64_t))(v819 + 8);
        v113(a1, AssociatedTypeWitness);
        v114 = (v786 + a1) & v783;
        if (v823 == v788)
        {
          v115 = (*(uint64_t (**)(unint64_t))(v819 + 48))((v786 + a1) & v783);
          goto LABEL_148;
        }
        v116 = (v792 + v114) & v807;
        v117 = (v793 + v116) & v811;
        if (v798 == v788)
        {
          if (v777 == v798)
          {
            v115 = (*(uint64_t (**)(uint64_t))(v796 + 48))((v793 + v116) & v811);
            goto LABEL_148;
          }
          v542 = (unint64_t *)((v800 + v117) & 0xFFFFFFFFFFFFFFF8);
          if (v752 <= 0x7FFFFFFE)
          {
            v543 = *v542;
            goto LABEL_568;
          }
          v115 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v542 + v773) & v769);
        }
        else
        {
          v176 = v824 + v117;
          if ((v743 & 0x80000000) == 0)
          {
            v177 = *(_QWORD *)(v176 + 8);
            if (v177 >= 0xFFFFFFFF)
              LODWORD(v177) = -1;
            if ((_DWORD)v177 == -1)
            {
LABEL_149:
              v116 = (v792 + v114) & v807;
              v117 = (v793 + v116) & v811;
LABEL_150:
              v113(v114, AssociatedTypeWitness);
              v113(v116, AssociatedTypeWitness);
              (*(void (**)(uint64_t, uint64_t))(v796 + 8))(v117, v797);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v774 + 8))((v773 + ((v800 + v117) & 0xFFFFFFFFFFFFFFF8)) & v769, v775);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v118 = (v822 + v824 + v117) & v779;
              v119 = *(void (**)(unint64_t, uint64_t))(v778 + 8);
              v119((v780 + v118) & v802, v767);
              v120 = (v766 + ((v780 + v118) & v802)) & v802;
              v119(v120, v767);
              swift_bridgeObjectRelease();
              v121 = (v762
                    + ((((((v753 + v120) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v802;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v778 + 48))(v121, 1, v767))
                v119(v121, v767);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v122 = *(_QWORD *)(((((((v763 + v121) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                               + 8);
              if ((v122 & 0x3000000000000000) == 0)
                sub_23AAAE53C(*(_QWORD *)((((((v763 + v121) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v122);
              swift_bridgeObjectRelease();
              v123 = v821 + v118;
              v124 = *(void **)(v821 + v118 + 16);
              LODWORD(v125) = -1;
              if ((unint64_t)v124 < 0xFFFFFFFF)
                v125 = *(_QWORD *)(v123 + 16);
              v66 = AssociatedTypeWitness;
              if ((int)v125 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v123 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_23AAA12F0(*(_QWORD *)((((v123 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v123 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_161:
            v81 = v114 + v765;
            goto LABEL_283;
          }
          v561 = (v780 + ((v822 + v176) & v779)) & v802;
          if (v756 <= 0x7FFFFFFD)
          {
            v543 = *(_QWORD *)(((v753 + ((v766 + v561) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_568:
            if (v543 >= 0xFFFFFFFF)
              LODWORD(v543) = -1;
            if ((v543 + 1) < 2)
              goto LABEL_150;
            goto LABEL_161;
          }
          v115 = (*(uint64_t (**)(uint64_t))(v778 + 48))(v561);
        }
LABEL_148:
        if (v115)
          goto LABEL_161;
        goto LABEL_149;
      case 1:
        v126 = *(void (**)(uint64_t, uint64_t))(v819 + 8);
        v126(a1, AssociatedTypeWitness);
        v127 = (v786 + a1) & v783;
        if (v823 == v788)
        {
          v128 = (*(uint64_t (**)(unint64_t))(v819 + 48))((v786 + a1) & v783);
          goto LABEL_164;
        }
        v129 = (v792 + v127) & v807;
        v130 = (v793 + v129) & v811;
        if (v798 == v788)
        {
          if (v777 == v798)
          {
            v128 = (*(uint64_t (**)(uint64_t))(v796 + 48))((v793 + v129) & v811);
            goto LABEL_164;
          }
          v544 = (unint64_t *)((v800 + v130) & 0xFFFFFFFFFFFFFFF8);
          if (v752 <= 0x7FFFFFFE)
          {
            v545 = *v544;
            goto LABEL_573;
          }
          v128 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v544 + v773) & v769);
        }
        else
        {
          v178 = v824 + v130;
          if ((v743 & 0x80000000) == 0)
          {
            v179 = *(_QWORD *)(v178 + 8);
            if (v179 >= 0xFFFFFFFF)
              LODWORD(v179) = -1;
            if ((_DWORD)v179 == -1)
            {
LABEL_165:
              v129 = (v792 + v127) & v807;
              v130 = (v793 + v129) & v811;
LABEL_166:
              v126(v127, AssociatedTypeWitness);
              v126(v129, AssociatedTypeWitness);
              (*(void (**)(uint64_t, uint64_t))(v796 + 8))(v130, v797);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v774 + 8))((v773 + ((v800 + v130) & 0xFFFFFFFFFFFFFFF8)) & v769, v775);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v131 = (v822 + v824 + v130) & v779;
              v132 = *(void (**)(unint64_t, uint64_t))(v778 + 8);
              v132((v780 + v131) & v802, v767);
              v133 = (v766 + ((v780 + v131) & v802)) & v802;
              v132(v133, v767);
              swift_bridgeObjectRelease();
              v134 = (v762
                    + ((((((v753 + v133) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v802;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v778 + 48))(v134, 1, v767))
                v132(v134, v767);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v135 = *(_QWORD *)(((((((v763 + v134) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                               + 8);
              if ((v135 & 0x3000000000000000) == 0)
                sub_23AAAE53C(*(_QWORD *)((((((v763 + v134) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v135);
              swift_bridgeObjectRelease();
              v136 = v821 + v131;
              v137 = *(void **)(v821 + v131 + 16);
              LODWORD(v138) = -1;
              if ((unint64_t)v137 < 0xFFFFFFFF)
                v138 = *(_QWORD *)(v136 + 16);
              v66 = AssociatedTypeWitness;
              if ((int)v138 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v136 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_23AAA12F0(*(_QWORD *)((((v136 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v136 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_177:
            v139 = (v127 + v816 + v765) & v809;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v820 + 48))(v139, 1, v825))
              (*(void (**)(unint64_t, uint64_t))(v820 + 8))(v139, v825);
            v95 = (v760 + v139) & v813;
            if (v776 == v804)
            {
              v140 = (*(uint64_t (**)(size_t))(v794 + 48))((v760 + v139) & v813);
            }
            else
            {
              v165 = (uint64_t *)((v799 + v95) & 0xFFFFFFFFFFFFFFF8);
              if (v751 <= 0x7FFFFFFE)
              {
                v166 = *v165;
                if ((unint64_t)*v165 >= 0xFFFFFFFF)
                  LODWORD(v166) = -1;
                if ((v166 + 1) >= 2)
                  goto LABEL_281;
                goto LABEL_280;
              }
              v140 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v165 + v770) & v768);
            }
            if (v140)
            {
LABEL_281:
              v161 = v806;
              goto LABEL_282;
            }
            v165 = (uint64_t *)((v799 + v95) & 0xFFFFFFFFFFFFFFF8);
LABEL_280:
            (*(void (**)(unint64_t, uint64_t))(v794 + 8))(v95, v795);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v771 + 8))(((unint64_t)v165 + v770) & v768, v772);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_281;
          }
          v562 = (v780 + ((v822 + v178) & v779)) & v802;
          if (v756 <= 0x7FFFFFFD)
          {
            v545 = *(_QWORD *)(((v753 + ((v766 + v562) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_573:
            if (v545 >= 0xFFFFFFFF)
              LODWORD(v545) = -1;
            if ((v545 + 1) < 2)
              goto LABEL_166;
            goto LABEL_177;
          }
          v128 = (*(uint64_t (**)(uint64_t))(v778 + 48))(v562);
        }
LABEL_164:
        if (v128)
          goto LABEL_177;
        goto LABEL_165;
      case 2:
        (*(void (**)(uint64_t, uint64_t))(v819 + 8))(a1, AssociatedTypeWitness);
        v141 = (v748 + a1) & v809;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v820 + 48))(v141, 1, v825))
          (*(void (**)(uint64_t, uint64_t))(v820 + 8))(v141, v825);
        v142 = (v760 + v141) & v813;
        if (v776 == v804)
        {
          v143 = (*(uint64_t (**)(size_t))(v30 + 48))((v760 + v141) & v813);
        }
        else
        {
          v167 = (uint64_t *)((v799 + v142) & 0xFFFFFFFFFFFFFFF8);
          if (v751 <= 0x7FFFFFFE)
          {
            v168 = *v167;
            if ((unint64_t)*v167 >= 0xFFFFFFFF)
              LODWORD(v168) = -1;
            if ((v168 + 1) >= 2)
            {
LABEL_288:
              v173 = v806 + v142;
LABEL_289:
              v180 = *(void **)(v173 + 8);
              goto LABEL_290;
            }
LABEL_287:
            (*(void (**)(size_t, uint64_t))(v30 + 8))(v142, v795);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v771 + 8))(((unint64_t)v167 + v770) & v768, v772);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_288;
          }
          v143 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v167 + v770) & v768);
        }
        if (v143)
          goto LABEL_288;
        v167 = (uint64_t *)((v799 + v142) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_287;
      case 3:
        v144 = *(void (**)(uint64_t, uint64_t))(v819 + 8);
        v144(a1, AssociatedTypeWitness);
        v145 = (v786 + a1) & v783;
        if (v823 == v788)
        {
          v146 = (*(uint64_t (**)(unint64_t))(v819 + 48))((v786 + a1) & v783);
          goto LABEL_187;
        }
        v147 = (v792 + v145) & v807;
        v148 = (v793 + v147) & v811;
        if (v798 == v788)
        {
          if (v777 == v798)
          {
            v146 = (*(uint64_t (**)(uint64_t))(v796 + 48))((v793 + v147) & v811);
            goto LABEL_187;
          }
          v546 = (unint64_t *)((v800 + v148) & 0xFFFFFFFFFFFFFFF8);
          if (v752 <= 0x7FFFFFFE)
          {
            v547 = *v546;
            goto LABEL_578;
          }
          v146 = (*(uint64_t (**)(unint64_t))(v774 + 48))(((unint64_t)v546 + v773) & v769);
        }
        else
        {
          v257 = v824 + v148;
          if ((v743 & 0x80000000) == 0)
          {
            v258 = *(_QWORD *)(v257 + 8);
            if (v258 >= 0xFFFFFFFF)
              LODWORD(v258) = -1;
            if ((_DWORD)v258 != -1)
              goto LABEL_200;
            goto LABEL_188;
          }
          v563 = (v780 + ((v822 + v257) & v779)) & v802;
          if (v756 <= 0x7FFFFFFD)
          {
            v547 = *(_QWORD *)(((v753 + ((v766 + v563) & v802)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_578:
            if (v547 >= 0xFFFFFFFF)
              LODWORD(v547) = -1;
            if ((v547 + 1) >= 2)
              goto LABEL_200;
LABEL_189:
            v144(v145, AssociatedTypeWitness);
            v144(v147, AssociatedTypeWitness);
            (*(void (**)(uint64_t, uint64_t))(v796 + 8))(v148, v797);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v774 + 8))((v773 + ((v800 + v148) & 0xFFFFFFFFFFFFFFF8)) & v769, v775);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v149 = (v822 + v824 + v148) & v779;
            v150 = *(void (**)(unint64_t, uint64_t))(v778 + 8);
            v150((v780 + v149) & v802, v767);
            v151 = (v766 + ((v780 + v149) & v802)) & v802;
            v150(v151, v767);
            swift_bridgeObjectRelease();
            v152 = (v762
                  + ((((((v753 + v151) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v802;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v778 + 48))(v152, 1, v767))
              v150(v152, v767);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v153 = *(_QWORD *)(((((((v763 + v152) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 8);
            if ((v153 & 0x3000000000000000) == 0)
              sub_23AAAE53C(*(_QWORD *)((((((v763 + v152) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v153);
            swift_bridgeObjectRelease();
            v154 = v821 + v149;
            v155 = *(void **)(v821 + v149 + 16);
            LODWORD(v156) = -1;
            if ((unint64_t)v155 < 0xFFFFFFFF)
              v156 = *(_QWORD *)(v154 + 16);
            v66 = AssociatedTypeWitness;
            if ((int)v156 - 1 < 0)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(v154 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_23AAA12F0(*(_QWORD *)((((v154 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v154 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            goto LABEL_200;
          }
          v146 = (*(uint64_t (**)(uint64_t))(v778 + 48))(v563);
        }
LABEL_187:
        if (v146)
          goto LABEL_200;
LABEL_188:
        v147 = (v792 + v145) & v807;
        v148 = (v793 + v147) & v811;
        goto LABEL_189;
      case 4:
      case 5:
      case 7:
        (*(void (**)(uint64_t, uint64_t))(v819 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_292;
      case 6:
        (*(void (**)(uint64_t, uint64_t))(v819 + 8))(a1, AssociatedTypeWitness);
        v157 = (v747 + a1) & v745;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v749 + 48))(v157, 1, v817))
          (*(void (**)(uint64_t, uint64_t))(v749 + 8))(v157, v817);
        goto LABEL_292;
      default:
        if (v46 <= 3)
          v68 = v46;
        else
          v68 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  return a1;
}

uint64_t sub_23AF782E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  int v64;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  int v77;
  unint64_t v78;
  uint64_t v79;

  v73 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 | v10 | 7;
  v12 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v76 = v6;
  v72 = ((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13);
  v77 = *(_DWORD *)(v4 + 84);
  v70 = *(_DWORD *)(v12 + 84);
  v79 = v11;
  v78 = ((((*(_QWORD *)(v9 + 64) + ((v10 + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v75 = (v13 | 7) + 16;
  v71 = (v75 + ((((v5 + v6) & ~v6) + v5 + v11) & ~v11) + v78) & ~(v13 | 7);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = *(_DWORD *)(v16 + 84);
  v19 = *(_QWORD *)(v16 + 64);
  v20 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v21 = *(_DWORD *)(v20 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v70)
    v23 = 7;
  else
    v23 = 8;
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = v21 & 0xF8 | v25 | 7;
  v27 = ((((*(_QWORD *)(v24 + 64) + ((v25 + ((*(_QWORD *)(v20 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v28 = *(_QWORD *)(v73 - 8);
  v29 = (v5 + *(unsigned __int8 *)(v28 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v30 = *(_DWORD *)(v28 + 84);
  v31 = *(_QWORD *)(v28 + 64);
  v32 = ((((((((((v23
                + v14
                + ((v13
                  + ((((((v14 + ((((v13 + 12) | v13) + v14) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  v33 = v72 + ((((v32 + v71) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v34 = v33 + v17;
  v35 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v34 + 16) & ~v17;
  if (v18)
    v37 = v19;
  else
    v37 = v19 + 1;
  v38 = v37 + v26;
  v39 = ((((((v38 + v36) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v39 <= ((v35 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v39 = ((v35 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v40 = v27 + ((v38 + ((v5 + v17) & ~v17)) & ~v26) + 16;
  if (v40 <= v39)
    v40 = v39;
  v41 = ((v35 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v41 > v40)
    v40 = v41;
  if (v5 > v40)
    v40 = v5;
  v42 = v30 == 0;
  v43 = ((v17 | v13 | v26) + v19) & ~(v17 | v13 | v26);
  v44 = (v75 + ((((v19 + v17) & ~v17) + v19 + v26) & ~v26) + v27) & ~(v13 | 7);
  if (v42)
    v45 = v31 + 1;
  else
    v45 = v31;
  v46 = v45 + v29;
  if (v46 <= v40)
    v46 = v40;
  if (v5 > v46)
    v46 = v5;
  v47 = *(_QWORD *)(v15 - 8);
  v48 = (v19 + *(unsigned __int8 *)(v47 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v49 = *(_DWORD *)(v47 + 84);
  v50 = *(_QWORD *)(v47 + 64);
  v51 = v43 + ((((v32 + v44) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v52 = v51 + v76;
  v53 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  v54 = (v52 + 16) & ~v76;
  if (v77)
    v55 = v5;
  else
    v55 = v5 + 1;
  v56 = v55 + v79;
  v57 = ((((((v56 + v54) & ~v79) + v78 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v57 <= ((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v57 = ((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v56 + ((v19 + v76) & ~v76)) & ~v79) + v78 + 16 > v57)
    v57 = ((v56 + ((v19 + v76) & ~v76)) & ~v79) + v78 + 16;
  v58 = ((v53 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v58 <= v57)
    v58 = v57;
  if (v19 > v58)
    v58 = v19;
  if (v49)
    v59 = v50;
  else
    v59 = v50 + 1;
  v60 = v59 + v48;
  if (v60 > v58)
    v58 = v60;
  if (v19 > v58)
    v58 = v19;
  v61 = v58 + 1;
  if (v61 <= v46 + 1)
    v61 = v46 + 1;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_60;
  v62 = v61 + 1;
  v63 = 8 * (v61 + 1);
  if ((v61 + 1) <= 3)
  {
    v66 = ((a2 + ~(-1 << v63) - 254) >> v63) + 1;
    if (HIWORD(v66))
    {
      v64 = *(_DWORD *)(a1 + v62);
      if (!v64)
        goto LABEL_60;
      goto LABEL_53;
    }
    if (v66 > 0xFF)
    {
      v64 = *(unsigned __int16 *)(a1 + v62);
      if (!*(_WORD *)(a1 + v62))
        goto LABEL_60;
      goto LABEL_53;
    }
    if (v66 < 2)
    {
LABEL_60:
      v68 = *(unsigned __int8 *)(a1 + v61);
      if (v68 >= 2)
        return (v68 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v64 = *(unsigned __int8 *)(a1 + v62);
  if (!*(_BYTE *)(a1 + v62))
    goto LABEL_60;
LABEL_53:
  v67 = (v64 - 1) << v63;
  if (v62 > 3)
    v67 = 0;
  if ((_DWORD)v62)
  {
    if (v62 > 3)
      LODWORD(v62) = 4;
    __asm { BR              X11 }
  }
  return (v67 + 255);
}

void sub_23AF788C4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  size_t v64;
  _BYTE *v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  uint64_t v80;

  v74 = *(_QWORD *)(a4 + 16);
  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 | v11 | 7;
  v13 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v77 = v7;
  v73 = ((v12 | v7 | v14) + v6) & ~(v12 | v7 | v14);
  v78 = *(_DWORD *)(v5 + 84);
  v71 = *(_DWORD *)(v13 + 84);
  v79 = ((((*(_QWORD *)(v10 + 64) + ((v11 + ((*(_QWORD *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v80 = v12;
  v76 = (v14 | 7) + 16;
  v72 = (v76 + ((((v6 + v7) & ~v7) + v6 + v12) & ~v12) + v79) & ~(v14 | 7);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(a4 + 24);
  v17 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = *(_DWORD *)(v17 + 84);
  v20 = *(_QWORD *)(v17 + 64);
  v21 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v22 = *(_DWORD *)(v21 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v71)
    v24 = 7;
  else
    v24 = 8;
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v22 & 0xF8 | v26 | 7;
  v28 = ((((*(_QWORD *)(v25 + 64) + ((v26 + ((*(_QWORD *)(v21 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v26) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v29 = *(_QWORD *)(v74 - 8);
  v30 = (v6 + *(unsigned __int8 *)(v29 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v31 = *(_DWORD *)(v29 + 84);
  v32 = *(_QWORD *)(v29 + 64);
  v33 = ((((((((((v24
                + v15
                + ((v14
                  + ((((((v15 + ((((v14 + 12) | v14) + v15) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  v34 = v73 + ((((v33 + v72) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = v34 + v18;
  v36 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v35 + 16) & ~v18;
  if (v19)
    v38 = v20;
  else
    v38 = v20 + 1;
  v39 = v38 + v27;
  v40 = ((((((v39 + v37) & ~v27) + v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v40 <= ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v40 = ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v41 = v28 + ((v39 + ((v6 + v18) & ~v18)) & ~v27) + 16;
  if (v41 <= v40)
    v41 = v40;
  v42 = ((v36 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v42 > v41)
    v41 = v42;
  if (v6 > v41)
    v41 = v6;
  v43 = v31 == 0;
  v44 = ((v18 | v14 | v27) + v20) & ~(v18 | v14 | v27);
  v45 = (v76 + ((((v20 + v18) & ~v18) + v20 + v27) & ~v27) + v28) & ~(v14 | 7);
  if (v43)
    v46 = v32 + 1;
  else
    v46 = v32;
  v47 = v46 + v30;
  if (v47 <= v41)
    v47 = v41;
  if (v6 > v47)
    v47 = v6;
  v48 = *(_QWORD *)(v16 - 8);
  v49 = (v20 + *(unsigned __int8 *)(v48 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v50 = *(_DWORD *)(v48 + 84);
  v51 = *(_QWORD *)(v48 + 64);
  v52 = v44 + ((((v33 + v45) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v53 = v52 + v77;
  v54 = (v52 + 23) & 0xFFFFFFFFFFFFFFF8;
  v55 = (v53 + 16) & ~v77;
  if (v78)
    v56 = v6;
  else
    v56 = v6 + 1;
  v57 = v56 + v80;
  v58 = ((((((v57 + v55) & ~v80) + v79 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v58 <= ((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v58 = ((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v57 + ((v20 + v77) & ~v77)) & ~v80) + v79 + 16 > v58)
    v58 = ((v57 + ((v20 + v77) & ~v77)) & ~v80) + v79 + 16;
  v59 = ((v54 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v59 <= v58)
    v59 = v58;
  if (v20 > v59)
    v59 = v20;
  if (v50)
    v60 = v51;
  else
    v60 = v51 + 1;
  v61 = v60 + v49;
  if (v61 > v59)
    v59 = v61;
  if (v20 > v59)
    v59 = v20;
  v62 = v59 + 1;
  if (v62 <= v47 + 1)
    v63 = v47 + 1;
  else
    v63 = v62;
  v64 = v63 + 1;
  if (a3 < 0xFF)
  {
    v67 = 0;
    v65 = a1;
    v66 = a2;
  }
  else
  {
    v65 = a1;
    v66 = a2;
    if (v64 <= 3)
    {
      v69 = ((a3 + ~(-1 << (8 * v64)) - 254) >> (8 * v64)) + 1;
      if (HIWORD(v69))
      {
        v67 = 4u;
      }
      else if (v69 >= 0x100)
      {
        v67 = 2;
      }
      else
      {
        v67 = v69 > 1;
      }
    }
    else
    {
      v67 = 1u;
    }
  }
  if (v66 <= 0xFE)
    __asm { BR              X11 }
  v68 = v66 - 255;
  if (v64 < 4)
  {
    if ((_DWORD)v63 != -1)
    {
      v70 = v68 & ~(-1 << (8 * v64));
      bzero(v65, v64);
      if ((_DWORD)v64 == 3)
      {
        *(_WORD *)v65 = v70;
        v65[2] = BYTE2(v70);
      }
      else if ((_DWORD)v64 == 2)
      {
        *(_WORD *)v65 = v70;
      }
      else
      {
        *v65 = v70;
      }
    }
  }
  else
  {
    bzero(v65, v63 + 1);
    *(_DWORD *)v65 = v68;
  }
  __asm { BR              X10 }
}

uint64_t sub_23AF78F20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;

  v61 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v11 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v63 = v5;
  v64 = v10;
  v65 = *(_DWORD *)(v3 + 84);
  v13 = *(_DWORD *)(v11 + 84);
  v62 = ((((*(_QWORD *)(v8 + 64) + ((v9 + ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v60 = (v12 | 7) + 16;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = v13 == 0;
  v16 = 7;
  if (v15)
    v16 = 8;
  v59 = ((((((((((v16
                + v14
                + ((v12
                  + ((((((v14 + ((((v12 + 12) | v12) + v14) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  v17 = (((v10 | v5 | v12) + v4) & ~(v10 | v5 | v12))
      + ((((v59 + ((v60 + ((((v4 + v5) & ~v5) + v4 + v10) & ~v10) + v62) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = *(_QWORD *)(a2 + 24);
  v19 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 + v20;
  v22 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v58 = (v21 + 16) & ~v20;
  v23 = *(_QWORD *)(v19 + 64);
  if (*(_DWORD *)(v19 + 84))
    v24 = *(_QWORD *)(v19 + 64);
  else
    v24 = v23 + 1;
  v25 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8;
  v27 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v26 | v28 | 7;
  v30 = ((((*(_QWORD *)(v27 + 64) + ((v28 + ((*(_QWORD *)(v25 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v28) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v31 = v30 + ((v24 + v29 + ((v4 + v20) & ~v20)) & ~v29) + 16;
  v32 = *(_QWORD *)(v61 - 8);
  v33 = (v4 + *(unsigned __int8 *)(v32 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v34 = *(_DWORD *)(v32 + 84);
  v35 = *(_QWORD *)(v32 + 64);
  if (!v34)
    ++v35;
  v36 = v35 + v33;
  v37 = ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 > v37)
    v37 = v4;
  if (((((((v24 + v29 + v58) & ~v29) + v30 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > v31)
    v31 = ((((((v24 + v29 + v58) & ~v29) + v30 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= v36)
    v38 = v36;
  else
    v38 = ((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v37 > v31)
    v31 = v37;
  if (v31 <= v38)
    v31 = v38;
  v39 = (((v20 | v12 | v29) + v23) & ~(v20 | v12 | v29))
      + ((((v59 + ((v60 + ((((v23 + v20) & ~v20) + v23 + v29) & ~v29) + v30) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = v39 + v63;
  v41 = (v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v42 = ((v41 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v43 = (v40 + 16) & ~v63;
  if (v65)
    v44 = v4;
  else
    v44 = v4 + 1;
  v45 = v44 + v64;
  v46 = ((((((v45 + v43) & ~v64) + v62 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v47 = ((v45 + ((v23 + v63) & ~v63)) & ~v64) + v62 + 16;
  v48 = ((v41 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v49 = *(_QWORD *)(v18 - 8);
  v50 = (v23 + *(unsigned __int8 *)(v49 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v51 = *(_DWORD *)(v49 + 84);
  v52 = *(_QWORD *)(v49 + 64);
  if (!v51)
    ++v52;
  v53 = v52 + v50;
  if (v23 > v42)
    v42 = v23;
  if (v46 <= v47)
    v46 = v47;
  if (v48 <= v53)
    v48 = v53;
  if (v42 > v46)
    v46 = v42;
  if (v46 > v48)
    v48 = v46;
  v54 = v48 + 1;
  if (v54 <= v31 + 1)
    v55 = v31 + 1;
  else
    v55 = v54;
  result = *(unsigned __int8 *)(a1 + v55);
  if (result >= 2)
  {
    if (v55 <= 3)
      v57 = v55;
    else
      v57 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23AF79474(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  size_t v54;
  char v55;
  int v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;

  v62 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 | v10 | 7;
  v12 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v63 = v11;
  v64 = *(_DWORD *)(v4 + 84);
  v14 = *(_DWORD *)(v12 + 84);
  v61 = ((((*(_QWORD *)(v9 + 64) + ((v10 + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v60 = (v13 | 7) + 16;
  v15 = *(_QWORD *)(v12 + 64);
  v16 = v14 == 0;
  v17 = 7;
  if (v16)
    v17 = 8;
  v59 = ((((((((((v17
                + v15
                + ((v13
                  + ((((((v15 + ((((v13 + 12) | v13) + v15) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  v18 = (((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13))
      + ((((v59
          + ((v60
            + ((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
            + ((((*(_QWORD *)(v9 + 64) + ((v10 + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16) & ~(v13 | 7))) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  v19 = *(_QWORD *)(a3 + 24);
  v20 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 + v21;
  v23 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v58 = (v22 + 16) & ~v21;
  v24 = *(_QWORD *)(v20 + 64);
  if (*(_DWORD *)(v20 + 84))
    v25 = *(_QWORD *)(v20 + 64);
  else
    v25 = v24 + 1;
  v57 = v25;
  v26 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v27 = *(_DWORD *)(v26 + 80) & 0xF8;
  result = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(result - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = v27 | v30 | 7;
  v32 = ((((*(_QWORD *)(v29 + 64) + ((v30 + ((*(_QWORD *)(v26 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v30) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v33 = ((((((v57 + v31 + v58) & ~v31) + v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v33 <= ((v23 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v33 = ((v23 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v34 = v32 + ((v57 + v31 + ((v5 + v21) & ~v21)) & ~v31) + 16;
  if (v34 <= v33)
    v34 = v33;
  if (((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v34)
    v34 = ((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v5 > v34)
    v34 = v5;
  v35 = *(_QWORD *)(v62 - 8);
  v36 = (v5 + *(unsigned __int8 *)(v35 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v37 = *(_DWORD *)(v35 + 84);
  v38 = *(_QWORD *)(v35 + 64);
  if (!v37)
    ++v38;
  v39 = v38 + v36;
  if (v39 > v34)
    v34 = v39;
  if (v5 > v34)
    v34 = v5;
  v40 = (((v21 | v13 | v31) + v24) & ~(v21 | v13 | v31))
      + ((((v59 + ((v60 + ((((v24 + v21) & ~v21) + v24 + v31) & ~v31) + v32) & ~(v13 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = v40 + v6;
  v42 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v43 = (v41 + 16) & ~v6;
  if (v64)
    v44 = v5;
  else
    v44 = v5 + 1;
  v45 = v44 + v63;
  v46 = ((((((v45 + v43) & ~v63) + v61 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v46 <= ((v42 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v46 = ((v42 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v45 + ((v24 + v6) & ~v6)) & ~v63) + v61 + 16 > v46)
    v46 = ((v45 + ((v24 + v6) & ~v6)) & ~v63) + v61 + 16;
  v47 = ((v42 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v47 <= v46)
    v47 = v46;
  if (v24 > v47)
    v47 = v24;
  v48 = *(_QWORD *)(v19 - 8);
  v49 = (v24 + *(unsigned __int8 *)(v48 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v50 = *(_DWORD *)(v48 + 84);
  v51 = *(_QWORD *)(v48 + 64);
  if (!v50)
    ++v51;
  v52 = v51 + v49;
  if (v52 > v47)
    v47 = v52;
  if (v24 > v47)
    v47 = v24;
  v53 = v47 + 1;
  if (v53 <= v34 + 1)
    v54 = v34 + 1;
  else
    v54 = v53;
  if (a2 > 1)
  {
    if (v54 <= 3)
      v55 = ((a2 - 2) >> (8 * v54)) + 2;
    else
      v55 = 2;
    a1[v54] = v55;
    if (v54 >= 4)
      v56 = 4;
    else
      v56 = v54;
    bzero(a1, v54);
    __asm { BR              X10 }
  }
  a1[v54] = a2;
  return result;
}

void type metadata accessor for TestingOperation()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for DirectionalTestingOperation()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AF799F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char *v9;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 16);
  result = swift_getAssociatedTypeWitness();
  if (v5 <= 0x3F)
  {
    type metadata accessor for SnapshotItem(255, v2, v1, v4);
    result = sub_23B1C6C98();
    if (v6 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      v9 = &v8;
      swift_getAssociatedTypeWitness();
      result = sub_23B1C6C98();
      if (v7 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
      }
    }
  }
  return result;
}

_QWORD *sub_23AF79CD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  BOOL v15;
  size_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *result;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD *, _QWORD *, uint64_t);
  void *v54;
  _QWORD *v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void (*v61)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  void (*v71)(_QWORD *, _QWORD *, uint64_t);
  void *v72;
  _QWORD *v73;
  int v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  void *v80;
  const void *v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t (*v85)(unint64_t);
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t (*v91)(unint64_t);
  unint64_t v92;
  char *v93;
  char *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  size_t v106;
  uint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  unint64_t v110;
  void (*v111)(unint64_t, unint64_t, uint64_t);
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  char *v116;
  void *v117;
  char v118;
  unint64_t *v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t *v122;
  unint64_t v123;
  BOOL v124;
  uint64_t v125;
  unint64_t *v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  const void *v130;
  unint64_t v131;
  unint64_t v132;
  size_t v133;
  void *v134;
  _QWORD *v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  unint64_t v141;
  unint64_t v142;
  void (*v143)(unint64_t, unint64_t, uint64_t);
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  int v152;
  unint64_t v153;
  unint64_t v154;
  void (*v155)(unint64_t, unint64_t, uint64_t);
  unint64_t v156;
  unint64_t v157;
  _BYTE *v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  unint64_t v165;
  unint64_t v166;
  void *v167;
  const void *v168;
  unsigned int (*v169)(const void *, uint64_t, uint64_t);
  _QWORD *v170;
  _QWORD *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  unint64_t v177;
  uint64_t *v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  int v186;
  _QWORD *v187;
  _QWORD *v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  int v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  void *v205;
  id v206;
  void *v207;
  id v208;
  uint64_t v209;
  id v210;
  _QWORD *v211;
  unint64_t v212;
  unint64_t v213;
  size_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  unint64_t v220;
  unint64_t v221;
  void (*v222)(unint64_t, unint64_t, uint64_t);
  _QWORD *v223;
  _QWORD *v224;
  _QWORD *v225;
  _QWORD *v226;
  _QWORD *v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  int v231;
  unint64_t v232;
  unint64_t v233;
  void (*v234)(unint64_t, unint64_t, uint64_t);
  unint64_t v235;
  unint64_t v236;
  _BYTE *v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  _QWORD *v242;
  _QWORD *v243;
  unint64_t v244;
  unint64_t v245;
  void *v246;
  const void *v247;
  unsigned int (*v248)(const void *, uint64_t, uint64_t);
  _QWORD *v249;
  _QWORD *v250;
  unint64_t v251;
  unint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  _QWORD *v255;
  unint64_t v256;
  uint64_t *v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  unint64_t v261;
  uint64_t v262;
  unint64_t v263;
  unint64_t v264;
  int v265;
  _QWORD *v266;
  _QWORD *v267;
  unint64_t v268;
  unint64_t v269;
  unint64_t v270;
  int v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  void *v284;
  id v285;
  void *v286;
  id v287;
  uint64_t v288;
  id v289;
  const void *v290;
  unint64_t v291;
  unint64_t v292;
  size_t v293;
  void *v294;
  _QWORD *v295;
  uint64_t v296;
  unint64_t v297;
  unint64_t v298;
  _QWORD *v299;
  _QWORD *v300;
  unint64_t v301;
  unint64_t v302;
  void (*v303)(unint64_t, unint64_t, uint64_t);
  _QWORD *v304;
  _QWORD *v305;
  _QWORD *v306;
  _QWORD *v307;
  _QWORD *v308;
  unint64_t v309;
  unint64_t v310;
  uint64_t v311;
  int v312;
  unint64_t v313;
  unint64_t v314;
  void (*v315)(unint64_t, unint64_t, uint64_t);
  unint64_t v316;
  unint64_t v317;
  _BYTE *v318;
  unint64_t v319;
  unint64_t v320;
  unint64_t v321;
  unint64_t v322;
  _QWORD *v323;
  _QWORD *v324;
  unint64_t v325;
  unint64_t v326;
  void *v327;
  const void *v328;
  unsigned int (*v329)(const void *, uint64_t, uint64_t);
  _QWORD *v330;
  _QWORD *v331;
  unint64_t v332;
  unint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  _QWORD *v336;
  unint64_t v337;
  uint64_t *v338;
  unint64_t v339;
  uint64_t v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  unint64_t v344;
  unint64_t v345;
  int v346;
  _QWORD *v347;
  _QWORD *v348;
  unint64_t v349;
  unint64_t v350;
  unint64_t v351;
  int v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  void *v365;
  id v366;
  void *v367;
  id v368;
  uint64_t v369;
  id v370;
  _OWORD *v371;
  __int128 *v372;
  __int128 v373;
  unint64_t v374;
  unint64_t v375;
  __int128 v376;
  _QWORD *v377;
  uint64_t v378;
  uint64_t v379;
  _QWORD *v380;
  uint64_t v381;
  unint64_t v382;
  unint64_t v383;
  _QWORD *v384;
  _QWORD *v385;
  void *v386;
  id v387;
  _OWORD *v388;
  __int128 *v389;
  __int128 v390;
  unint64_t v391;
  unint64_t v392;
  __int128 v393;
  _QWORD *v394;
  uint64_t v395;
  uint64_t v396;
  _QWORD *v397;
  uint64_t v398;
  unint64_t v399;
  unint64_t v400;
  void *v401;
  const void *v402;
  uint64_t v403;
  char *v404;
  char *v405;
  int v406;
  uint64_t *v407;
  uint64_t v408;
  size_t v409;
  uint64_t v410;
  _QWORD *v411;
  unint64_t v412;
  unint64_t v413;
  void (*v414)(unint64_t, unint64_t, uint64_t);
  _QWORD *v415;
  _QWORD *v416;
  _QWORD *v417;
  _QWORD *v418;
  _QWORD *v419;
  _QWORD *v420;
  id v421;
  _OWORD *v422;
  __int128 *v423;
  __int128 v424;
  unint64_t v425;
  unint64_t v426;
  __int128 v427;
  _QWORD *v428;
  uint64_t v429;
  uint64_t v430;
  _QWORD *v431;
  uint64_t v432;
  unint64_t v433;
  unint64_t v434;
  _QWORD *v435;
  _QWORD *v436;
  unint64_t v437;
  unint64_t v438;
  unint64_t v439;
  uint64_t v440;
  unsigned int v441;
  unsigned int v442;
  size_t v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  size_t v447;
  unint64_t v448;
  uint64_t v449;
  uint64_t v450;
  size_t __n;
  size_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  unsigned int v458;
  unsigned int v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  unint64_t v465;
  unint64_t v466;
  uint64_t v467;
  uint64_t v468;
  size_t v469;
  uint64_t v470;
  uint64_t v471;
  unint64_t v472;
  unint64_t v473;
  unint64_t v474;
  unsigned int v475;
  int v476;
  unint64_t v477;
  size_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  unint64_t v482;
  _QWORD *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t AssociatedTypeWitness;
  int v490;
  uint64_t v491;
  uint64_t v492;
  int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  size_t v497;
  size_t v498;
  int v499;
  uint64_t v500;
  uint64_t v501;
  int v502;
  unint64_t v503;
  unint64_t v504;
  unint64_t v505;
  int v506;
  uint64_t v507;
  uint64_t v508;
  unint64_t v509;
  unint64_t v510;
  uint64_t v511;
  void *v512;
  void *v513;
  unint64_t v514;
  unint64_t v515;
  void *v516;
  void *v517;
  void *v518;
  uint64_t v519;
  unint64_t v520;
  unint64_t v521;
  unint64_t v522;
  _QWORD *v525;
  _QWORD *v526;
  _QWORD *v527;

  v519 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v506 = *(_DWORD *)(v3 + 80);
  v462 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v462 - 8);
  v502 = *(_DWORD *)(v5 + 80);
  v455 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v455 - 8);
  v499 = *(_DWORD *)(v6 + 80);
  v7 = v502 & 0xF8 | v499 | 7u;
  v468 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v468 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v496 = *(_DWORD *)(v8 + 80);
  v10 = v496 | 7;
  v11 = v7 | v506 | (unint64_t)v496;
  v480 = v3;
  v12 = *(_DWORD *)(v6 + 84);
  v446 = *(_DWORD *)(v5 + 84);
  if (v446 > v12)
    v12 = *(_DWORD *)(v5 + 84);
  v444 = v12;
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  v458 = *(_DWORD *)(v8 + 84);
  v459 = v12;
  v475 = *(_DWORD *)(v3 + 84);
  if (v12 <= v475)
    v12 = *(_DWORD *)(v3 + 84);
  if (v9 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = *(_DWORD *)(v8 + 84);
  if (v12 > v13)
    v13 = v12;
  v445 = v13;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v476 = v14;
  v15 = v9 == 0;
  v477 = v4 + v506;
  v479 = v4 + v7;
  v460 = *(_QWORD *)(v5 + 64) + 7;
  v461 = v5;
  v453 = v499 + 8;
  v454 = v6;
  v449 = *(_QWORD *)(v6 + 64) + 7;
  v456 = v10 + 16;
  v466 = ((((v449 + ((v453 + (v460 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v499)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v484 = *(_DWORD *)(v8 + 80) | 7;
  v457 = v496 + 12;
  v470 = *(_QWORD *)(v468 - 8);
  v16 = *(_QWORD *)(v8 + 64);
  v452 = v16 + v496;
  v443 = v16 + 12;
  v450 = v496 + 10;
  v17 = (v450
       + ((((((v16
             + 12
             + ((v452 + (v457 & ~(unint64_t)v496)) & ~(unint64_t)v496)) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v496;
  v469 = v16;
  if (v15)
    ++v16;
  v478 = v16;
  v472 = v17;
  v473 = (v10 + 16 + ((v4 + v7 + ((v4 + v506) & ~(unint64_t)v506)) & ~v7) + v466) & ~v10;
  v447 = v16 + 7;
  v448 = ((((((((((v16 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v514 = v7 | v506 | (unint64_t)*(_DWORD *)(v8 + 80);
  v474 = v11 + v4;
  v465 = ((((v473 + v448 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  v18 = v465 + ((v11 + v4) & ~v11);
  v19 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v471 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v471 - 8);
  v493 = *(_DWORD *)(v20 + 80);
  v509 = (v18 + v493) & ~(unint64_t)v493;
  v467 = v20;
  if (*(_DWORD *)(v20 + 84))
    v21 = *(_QWORD *)(v20 + 64);
  else
    v21 = *(_QWORD *)(v20 + 64) + 1;
  v464 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v464 - 8);
  v490 = *(_DWORD *)(v22 + 80);
  v23 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80);
  v26 = v490 & 0xF8 | v25 | 7;
  v27 = *(unsigned int *)(v22 + 84);
  if (v27 <= *(_DWORD *)(v24 + 84))
    v28 = *(_DWORD *)(v24 + 84);
  else
    v28 = *(_DWORD *)(v22 + 84);
  if (v28 <= 0x7FFFFFFE)
    v29 = 2147483646;
  else
    v29 = v28;
  v463 = v22;
  v30 = *(_QWORD *)(v22 + 64) + 7;
  v31 = v25 + 8;
  v32 = *(_QWORD *)(v24 + 64) + 7;
  v33 = ((((v32 + ((v25 + 8 + (v30 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  __n = v21;
  v34 = v21 + v26;
  v35 = ((((((v34 + v509) & ~v26) + v33 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v36 = v4 + v493;
  v37 = *(_QWORD *)(v519 - 8);
  v38 = *(_DWORD *)(v37 + 80);
  if (*(_DWORD *)(v37 + 84))
    v39 = *(_QWORD *)(v37 + 64);
  else
    v39 = *(_QWORD *)(v37 + 64) + 1;
  v40 = ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 > v40)
    v40 = v4;
  v41 = v4 + v38;
  if (v35 <= v33 + ((v34 + (v36 & ~(unint64_t)v493)) & ~v26) + 16)
    v35 = v33 + ((v34 + (v36 & ~(unint64_t)v493)) & ~v26) + 16;
  v42 = (v41 & ~v38) + v39;
  if (((v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v42)
    v42 = ((v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v40 > v35)
    v35 = v40;
  if (v35 <= v42)
    v43 = v42;
  else
    v43 = v35;
  v511 = v493;
  v44 = v514 | v493 | v26 | v38;
  if (v44 == 7
    && ((v502 | v506 | v499 | v496 | v493 | v490 | *(_DWORD *)(v24 + 80) | *(_DWORD *)(v37 + 80)) & 0x100000) == 0
    && v43 + 1 <= 0x18)
  {
    v510 = v34;
    v49 = ~v514;
    v50 = ~(unint64_t)v506;
    v515 = ~(unint64_t)(v502 & 0xF8 | v499 | 7u);
    v51 = ~(unint64_t)v496;
    v52 = ~v38;
    switch(*((_BYTE *)a2 + v43))
    {
      case 0:
        v503 = ~(unint64_t)v499;
        v520 = v43;
        v53 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16);
        v53(a1, a2, AssociatedTypeWitness);
        v54 = (void *)(((unint64_t)a1 + v474) & v49);
        v55 = (_QWORD *)(((unint64_t)a2 + v474) & v49);
        v525 = v55;
        if (v475 == v476)
        {
          v56 = (*(uint64_t (**)(void))(v3 + 48))();
          v57 = v470;
          v58 = v477;
          goto LABEL_123;
        }
        v58 = v477;
        v83 = ((unint64_t)v55 + v477) & v50;
        v84 = (v479 + v83) & v515;
        v57 = v470;
        if (v459 == v476)
        {
          if (v446 == v459)
          {
            v85 = *(uint64_t (**)(unint64_t))(v461 + 48);
            v86 = (v479 + v83) & v515;
          }
          else
          {
            v119 = (unint64_t *)((v460 + v84) & 0xFFFFFFFFFFFFFFF8);
            if (v444 <= 0x7FFFFFFE)
            {
              v120 = *v119;
              if (v120 >= 0xFFFFFFFF)
                LODWORD(v120) = -1;
              v121 = ~v484;
              if ((v120 + 1) >= 2)
                goto LABEL_124;
              goto LABEL_127;
            }
            v86 = ((unint64_t)v119 + v453) & v503;
            v85 = *(uint64_t (**)(unint64_t))(v454 + 48);
          }
          goto LABEL_122;
        }
        v100 = v466 + v84;
        if ((v445 & 0x80000000) != 0)
        {
          v86 = (v457 + ((v456 + v100) & ~v484)) & v51;
          if (v458 <= 0x7FFFFFFD)
          {
            v121 = ~v484;
            v438 = *(_QWORD *)(((v443 + ((v452 + v86) & v51)) & 0xFFFFFFFFFFFFF8) + 8);
            if (v438 >= 0xFFFFFFFF)
              LODWORD(v438) = -1;
            if ((v438 + 1) >= 2)
              goto LABEL_124;
            goto LABEL_127;
          }
          v85 = *(uint64_t (**)(unint64_t))(v470 + 48);
LABEL_122:
          v56 = v85(v86);
          v57 = v470;
          goto LABEL_123;
        }
        v101 = *(_QWORD *)(v100 + 8);
        if (v101 >= 0xFFFFFFFF)
          LODWORD(v101) = -1;
        v56 = v101 + 1;
LABEL_123:
        v121 = ~v484;
        if (v56)
        {
LABEL_124:
          v130 = v525;
          memcpy(v54, v525, v465);
          v132 = v472;
          v131 = v473;
          v47 = a1;
LABEL_125:
          v133 = v478;
          goto LABEL_178;
        }
        v83 = ((unint64_t)v525 + v58) & v50;
        v84 = (v479 + v83) & v515;
LABEL_127:
        v134 = v54;
        v135 = v54;
        v136 = v57;
        v53(v135, v525, AssociatedTypeWitness);
        v512 = v134;
        v137 = ((unint64_t)v134 + v58) & v50;
        v53((_QWORD *)v137, (_QWORD *)v83, AssociatedTypeWitness);
        v138 = (v479 + v137) & v515;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16))(v138, v84, v462);
        v139 = (_QWORD *)((v460 + v138) & 0xFFFFFFFFFFFFFFF8);
        v140 = (_QWORD *)((v460 + v84) & 0xFFFFFFFFFFFFFFF8);
        *v139 = *v140;
        v141 = ((unint64_t)v139 + v453) & v503;
        v142 = ((unint64_t)v140 + v453) & v503;
        v143 = *(void (**)(unint64_t, unint64_t, uint64_t))(v454 + 16);
        swift_bridgeObjectRetain();
        v143(v141, v142, v455);
        v144 = (_QWORD *)((v449 + v141) & 0xFFFFFFFFFFFFF8);
        v145 = (_QWORD *)((v449 + v142) & 0xFFFFFFFFFFFFF8);
        *v144 = *v145;
        v146 = (_QWORD *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8);
        v147 = (_QWORD *)(((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v146 = *v147;
        v146[1] = v147[1];
        v148 = (_QWORD *)(v466 + v138);
        *v148 = *(_QWORD *)(v466 + v84);
        v148[1] = *(_QWORD *)(v466 + v84 + 8);
        v149 = (v456 + v466 + v138) & v121;
        v150 = (v456 + v466 + v84) & v121;
        *(_BYTE *)v149 = *(_BYTE *)v150;
        v151 = v149 | 4;
        v152 = *(_DWORD *)(v150 | 4);
        *(_BYTE *)(v151 + 4) = *(_BYTE *)((v150 | 4) + 4);
        *(_DWORD *)v151 = v152;
        *(_WORD *)(v149 + 10) = *(_WORD *)(v150 + 10);
        v153 = (v457 + v149) & v51;
        v154 = (v457 + v150) & v51;
        v155 = *(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v155(v153, v154, v468);
        v156 = (v452 + v153) & v51;
        v157 = (v452 + v154) & v51;
        v155(v156, v157, v468);
        v158 = (_BYTE *)(v156 + v469);
        *v158 = *(_BYTE *)(v157 + v469);
        v158[1] = *(_BYTE *)(v157 + v469 + 1);
        v158[2] = *(_BYTE *)(v157 + v469 + 2);
        v158[3] = *(_BYTE *)(v157 + v469 + 3);
        v158[4] = *(_BYTE *)(v157 + v469 + 4);
        v159 = (v156 + v469 + 12) & 0xFFFFFFFFFFFFFFF8;
        v160 = (v157 + v469 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v159 = *(_QWORD *)v160;
        *(_QWORD *)(v159 + 8) = *(_QWORD *)(v160 + 8);
        *(_BYTE *)(v159 + 16) = *(_BYTE *)(v160 + 16);
        *(_BYTE *)(v159 + 17) = *(_BYTE *)(v160 + 17);
        *(_BYTE *)(v159 + 18) = *(_BYTE *)(v160 + 18);
        *(_BYTE *)(v159 + 19) = *(_BYTE *)(v160 + 19);
        v161 = (v159 + 27) & 0xFFFFFFFFFFFFFFF8;
        v162 = (v160 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v161 = *(_QWORD *)v162;
        *(_BYTE *)(v161 + 8) = *(_BYTE *)(v162 + 8);
        *(_BYTE *)(v161 + 9) = *(_BYTE *)(v162 + 9);
        *(_BYTE *)(v161 + 10) = *(_BYTE *)(v162 + 10);
        *(_BYTE *)(v161 + 11) = *(_BYTE *)(v162 + 11);
        *(_BYTE *)(v161 + 12) = *(_BYTE *)(v162 + 12);
        v163 = (_QWORD *)((v159 + 47) & 0xFFFFFFFFFFFFF8);
        v164 = (_QWORD *)((v160 + 47) & 0xFFFFFFFFFFFFF8);
        *v163 = *v164;
        v165 = ((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8;
        v166 = ((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v165 = *(_QWORD *)v166;
        *(_BYTE *)(v165 + 8) = *(_BYTE *)(v166 + 8);
        *(_BYTE *)(v165 + 9) = *(_BYTE *)(v166 + 9);
        v167 = (void *)((v450 + v165) & v51);
        v168 = (const void *)((v450 + v166) & v51);
        v169 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48);
        swift_bridgeObjectRetain();
        if (v169(v168, 1, v468))
        {
          memcpy(v167, v168, v478);
        }
        else
        {
          v155((unint64_t)v167, (unint64_t)v168, v468);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v167, 0, 1, v468);
        }
        v47 = a1;
        v170 = (_QWORD *)(((unint64_t)v167 + v447) & 0xFFFFFFFFFFFFFFF8);
        v171 = (_QWORD *)(((unint64_t)v168 + v447) & 0xFFFFFFFFFFFFFFF8);
        *v170 = *v171;
        v172 = ((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFFFF8;
        v173 = ((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8;
        v174 = *(_QWORD *)v173;
        *(_BYTE *)(v172 + 8) = *(_BYTE *)(v173 + 8);
        *(_QWORD *)v172 = v174;
        v175 = (_QWORD *)(((unint64_t)v170 + 31) & 0xFFFFFFFFFFFFF8);
        v176 = (_QWORD *)(((unint64_t)v171 + 31) & 0xFFFFFFFFFFFFF8);
        *v175 = *v176;
        v177 = ((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8;
        v178 = (uint64_t *)(((unint64_t)v176 + 15) & 0xFFFFFFFFFFFFFFF8);
        v179 = v178[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v179 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)v177 = *(_OWORD *)v178;
        }
        else
        {
          v180 = *v178;
          sub_23AAAE668(*v178, v179);
          *(_QWORD *)v177 = v180;
          *(_QWORD *)(v177 + 8) = v179;
        }
        v181 = (v177 + 19) & 0xFFFFFFFFFFFFFFF8;
        v182 = ((unint64_t)v178 + 19) & 0xFFFFFFFFFFFFFFF8;
        v183 = *(_QWORD *)v182;
        *(_BYTE *)(v181 + 8) = *(_BYTE *)(v182 + 8);
        *(_QWORD *)v181 = v183;
        *(_BYTE *)(v181 + 9) = *(_BYTE *)(v182 + 9);
        v184 = (v181 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v185 = (v182 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v186 = *(_DWORD *)v185;
        *(_BYTE *)(v184 + 4) = *(_BYTE *)(v185 + 4);
        *(_DWORD *)v184 = v186;
        v187 = (_QWORD *)((v181 + 25) & 0xFFFFFFFFFFFFFFF8);
        v188 = (_QWORD *)((v182 + 25) & 0xFFFFFFFFFFFFFFF8);
        *v187 = *v188;
        v187[1] = v188[1];
        v189 = v448 + v149;
        v190 = v448 + v150;
        v191 = *(_QWORD *)(v190 + 16);
        if (v191 >= 0xFFFFFFFF)
          LODWORD(v191) = -1;
        v192 = v191 - 1;
        swift_bridgeObjectRetain();
        if (v192 < 0)
        {
          *(_QWORD *)v189 = *(_QWORD *)v190;
          *(_BYTE *)(v189 + 8) = *(_BYTE *)(v190 + 8);
          *(_BYTE *)(v189 + 9) = *(_BYTE *)(v190 + 9);
          v205 = *(void **)(v190 + 16);
          v206 = v205;
          *(_QWORD *)(v189 + 16) = v205;
          v207 = *(void **)(v190 + 24);
          v208 = v207;
          *(_QWORD *)(v189 + 24) = v207;
          *(_BYTE *)(v189 + 32) = *(_BYTE *)(v190 + 32);
          *(_BYTE *)(v189 + 33) = *(_BYTE *)(v190 + 33);
          *(_BYTE *)(v189 + 34) = *(_BYTE *)(v190 + 34);
          *(_QWORD *)(v189 + 40) = *(_QWORD *)(v190 + 40);
          *(_QWORD *)(v189 + 48) = *(_QWORD *)(v190 + 48);
          *(_QWORD *)(v189 + 56) = *(_QWORD *)(v190 + 56);
          *(_QWORD *)(v189 + 64) = *(_QWORD *)(v190 + 64);
          *(_BYTE *)(v189 + 72) = *(_BYTE *)(v190 + 72);
          *(_QWORD *)(v189 + 80) = *(_QWORD *)(v190 + 80);
          *(_QWORD *)(v189 + 88) = *(_QWORD *)(v190 + 88);
          v516 = *(void **)(v190 + 96);
          *(_QWORD *)(v189 + 96) = v516;
          *(_BYTE *)(v189 + 104) = *(_BYTE *)(v190 + 104);
          *(_BYTE *)(v189 + 105) = *(_BYTE *)(v190 + 105);
          *(_QWORD *)(v189 + 112) = *(_QWORD *)(v190 + 112);
          *(_QWORD *)(v189 + 120) = *(_QWORD *)(v190 + 120);
          *(_QWORD *)(v189 + 128) = *(_QWORD *)(v190 + 128);
          *(_QWORD *)(v189 + 136) = *(_QWORD *)(v190 + 136);
          *(_QWORD *)(v189 + 144) = *(_QWORD *)(v190 + 144);
          *(_QWORD *)(v189 + 152) = *(_QWORD *)(v190 + 152);
          *(_QWORD *)(v189 + 160) = *(_QWORD *)(v190 + 160);
          *(_QWORD *)(v189 + 168) = *(_QWORD *)(v190 + 168);
          *(_BYTE *)(v189 + 176) = *(_BYTE *)(v190 + 176);
          *(_QWORD *)(v189 + 184) = *(_QWORD *)(v190 + 184);
          v209 = *(_QWORD *)(v190 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v210 = v516;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v209)
          {
            *(_QWORD *)(v189 + 192) = v209;
            *(_QWORD *)(v189 + 200) = *(_QWORD *)(v190 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v189 + 192) = *(_OWORD *)(v190 + 192);
          }
          v47 = a1;
          v132 = v472;
          v131 = v473;
          *(_QWORD *)(v189 + 208) = *(_QWORD *)(v190 + 208);
          *(_QWORD *)(v189 + 216) = *(_QWORD *)(v190 + 216);
          *(_QWORD *)(v189 + 224) = *(_QWORD *)(v190 + 224);
          *(_QWORD *)(v189 + 232) = *(_QWORD *)(v190 + 232);
          *(_QWORD *)(v189 + 240) = *(_QWORD *)(v190 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v193 = *(_OWORD *)v190;
          v194 = *(_OWORD *)(v190 + 16);
          v195 = *(_OWORD *)(v190 + 48);
          *(_OWORD *)(v189 + 32) = *(_OWORD *)(v190 + 32);
          *(_OWORD *)(v189 + 48) = v195;
          *(_OWORD *)v189 = v193;
          *(_OWORD *)(v189 + 16) = v194;
          v196 = *(_OWORD *)(v190 + 64);
          v197 = *(_OWORD *)(v190 + 80);
          v198 = *(_OWORD *)(v190 + 112);
          *(_OWORD *)(v189 + 96) = *(_OWORD *)(v190 + 96);
          *(_OWORD *)(v189 + 112) = v198;
          *(_OWORD *)(v189 + 64) = v196;
          *(_OWORD *)(v189 + 80) = v197;
          v199 = *(_OWORD *)(v190 + 128);
          v200 = *(_OWORD *)(v190 + 144);
          v201 = *(_OWORD *)(v190 + 176);
          *(_OWORD *)(v189 + 160) = *(_OWORD *)(v190 + 160);
          *(_OWORD *)(v189 + 176) = v201;
          *(_OWORD *)(v189 + 128) = v199;
          *(_OWORD *)(v189 + 144) = v200;
          v202 = *(_OWORD *)(v190 + 192);
          v203 = *(_OWORD *)(v190 + 208);
          v204 = *(_OWORD *)(v190 + 224);
          *(_QWORD *)(v189 + 240) = *(_QWORD *)(v190 + 240);
          *(_OWORD *)(v189 + 208) = v203;
          *(_OWORD *)(v189 + 224) = v204;
          *(_OWORD *)(v189 + 192) = v202;
          v132 = v472;
          v131 = v473;
        }
        v371 = (_OWORD *)((v189 + 255) & 0xFFFFFFFFFFFFFFF8);
        v372 = (__int128 *)((v190 + 255) & 0xFFFFFFFFFFFFFFF8);
        v373 = *v372;
        *(_OWORD *)((char *)v371 + 9) = *(__int128 *)((char *)v372 + 9);
        *v371 = v373;
        v374 = (v189 + 287) & 0xFFFFFFFFFFFFFFF8;
        v375 = (v190 + 287) & 0xFFFFFFFFFFFFFFF8;
        v376 = *(_OWORD *)v375;
        *(_BYTE *)(v374 + 16) = *(_BYTE *)(v375 + 16);
        *(_OWORD *)v374 = v376;
        v377 = (_QWORD *)((v189 + 311) & 0xFFFFFFFFFFFFF8);
        v378 = (v190 + 311) & 0xFFFFFFFFFFFFF8;
        v379 = *(_QWORD *)v378;
        v378 += 15;
        *v377 = v379;
        v380 = (_QWORD *)(((unint64_t)v377 + 15) & 0xFFFFFFFFFFFFFFF8);
        v381 = *(_QWORD *)(v378 & 0xFFFFFFFFFFFFFFF8);
        v382 = *(_QWORD *)((v378 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_23AA7F2D4(v381, v382);
        *v380 = v381;
        v380[1] = v382;
        v133 = v469;
        v54 = v512;
        v130 = v525;
        if (!v458)
          goto LABEL_125;
LABEL_178:
        v383 = ((((v131
                 + ((((((((((v132 + v133 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v384 = (_QWORD *)(((unint64_t)v54 + v383) & 0xFFFFFFFFFFFFFFF8);
        v385 = (_QWORD *)(((unint64_t)v130 + v383) & 0xFFFFFFFFFFFFFFF8);
        *v384 = *v385;
        v386 = *(void **)(((unint64_t)v385 + 15) & 0xFFFFFFFFFFFFF8);
        *(_QWORD *)(((unint64_t)v384 + 15) & 0xFFFFFFFFFFFFF8) = v386;
        *((_BYTE *)v47 + v520) = 0;
        v387 = v386;
        return v47;
      case 1:
        v504 = ~(unint64_t)v499;
        v59 = ~v484;
        v482 = ~(unint64_t)v493;
        v440 = ~v26;
        v487 = ~v25;
        v494 = v28;
        v441 = v27;
        v442 = *(_DWORD *)(v24 + 84);
        v507 = v30;
        v497 = ((((v32 + ((v25 + 8 + (v30 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v500 = *(_QWORD *)(v23 - 8);
        v485 = *(_QWORD *)(v24 + 64) + 7;
        v491 = v23;
        v521 = v43;
        v60 = a2;
        v61 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16);
        v61(a1, a2, AssociatedTypeWitness);
        v483 = (_QWORD *)(((unint64_t)a1 + v474) & v49);
        v62 = (_QWORD *)(((unint64_t)a2 + v474) & v49);
        v526 = v62;
        if (v475 == v476)
        {
          v63 = (*(uint64_t (**)(unint64_t))(v480 + 48))(((unint64_t)v60 + v474) & v49);
          v62 = v526;
          v64 = v471;
          v65 = v477;
LABEL_141:
          v125 = v59;
          v211 = v483;
          if (v63)
          {
LABEL_142:
            memcpy(v211, v62, v465);
            v213 = v472;
            v212 = v473;
            v47 = a1;
LABEL_143:
            v214 = v478;
            goto LABEL_182;
          }
          v87 = ((unint64_t)v62 + v65) & v50;
          v88 = (v479 + v87) & v515;
LABEL_145:
          v481 = v31;
          v215 = v125;
          v61(v211, v62, AssociatedTypeWitness);
          v216 = ((unint64_t)v211 + v65) & v50;
          v61((_QWORD *)v216, (_QWORD *)v87, AssociatedTypeWitness);
          v217 = (v479 + v216) & v515;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16))(v217, v88, v462);
          v218 = (_QWORD *)((v460 + v217) & 0xFFFFFFFFFFFFFFF8);
          v219 = (_QWORD *)((v460 + v88) & 0xFFFFFFFFFFFFFFF8);
          *v218 = *v219;
          v220 = ((unint64_t)v218 + v453) & v504;
          v221 = ((unint64_t)v219 + v453) & v504;
          v222 = *(void (**)(unint64_t, unint64_t, uint64_t))(v454 + 16);
          swift_bridgeObjectRetain();
          v222(v220, v221, v455);
          v223 = (_QWORD *)((v449 + v220) & 0xFFFFFFFFFFFFF8);
          v224 = (_QWORD *)((v449 + v221) & 0xFFFFFFFFFFFFF8);
          *v223 = *v224;
          v225 = (_QWORD *)(((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8);
          v226 = (_QWORD *)(((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v225 = *v226;
          v225[1] = v226[1];
          v227 = (_QWORD *)(v466 + v217);
          *v227 = *(_QWORD *)(v466 + v88);
          v227[1] = *(_QWORD *)(v466 + v88 + 8);
          v228 = (v456 + v466 + v217) & v215;
          v229 = (v456 + v466 + v88) & v215;
          *(_BYTE *)v228 = *(_BYTE *)v229;
          v230 = v228 | 4;
          v231 = *(_DWORD *)(v229 | 4);
          *(_BYTE *)(v230 + 4) = *(_BYTE *)((v229 | 4) + 4);
          *(_DWORD *)v230 = v231;
          *(_WORD *)(v228 + 10) = *(_WORD *)(v229 + 10);
          v232 = (v457 + v228) & v51;
          v233 = (v457 + v229) & v51;
          v234 = *(void (**)(unint64_t, unint64_t, uint64_t))(v470 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v234(v232, v233, v468);
          v235 = (v452 + v232) & v51;
          v236 = (v452 + v233) & v51;
          v234(v235, v236, v468);
          v237 = (_BYTE *)(v235 + v469);
          *v237 = *(_BYTE *)(v236 + v469);
          v237[1] = *(_BYTE *)(v236 + v469 + 1);
          v237[2] = *(_BYTE *)(v236 + v469 + 2);
          v237[3] = *(_BYTE *)(v236 + v469 + 3);
          v237[4] = *(_BYTE *)(v236 + v469 + 4);
          v238 = (v235 + v469 + 12) & 0xFFFFFFFFFFFFFFF8;
          v239 = (v236 + v469 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v238 = *(_QWORD *)v239;
          *(_QWORD *)(v238 + 8) = *(_QWORD *)(v239 + 8);
          *(_BYTE *)(v238 + 16) = *(_BYTE *)(v239 + 16);
          *(_BYTE *)(v238 + 17) = *(_BYTE *)(v239 + 17);
          *(_BYTE *)(v238 + 18) = *(_BYTE *)(v239 + 18);
          *(_BYTE *)(v238 + 19) = *(_BYTE *)(v239 + 19);
          v240 = (v238 + 27) & 0xFFFFFFFFFFFFFFF8;
          v241 = (v239 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v240 = *(_QWORD *)v241;
          *(_BYTE *)(v240 + 8) = *(_BYTE *)(v241 + 8);
          *(_BYTE *)(v240 + 9) = *(_BYTE *)(v241 + 9);
          *(_BYTE *)(v240 + 10) = *(_BYTE *)(v241 + 10);
          *(_BYTE *)(v240 + 11) = *(_BYTE *)(v241 + 11);
          *(_BYTE *)(v240 + 12) = *(_BYTE *)(v241 + 12);
          v242 = (_QWORD *)((v238 + 47) & 0xFFFFFFFFFFFFF8);
          v243 = (_QWORD *)((v239 + 47) & 0xFFFFFFFFFFFFF8);
          *v242 = *v243;
          v244 = ((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8;
          v245 = ((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v244 = *(_QWORD *)v245;
          *(_BYTE *)(v244 + 8) = *(_BYTE *)(v245 + 8);
          *(_BYTE *)(v244 + 9) = *(_BYTE *)(v245 + 9);
          v246 = (void *)((v450 + v244) & v51);
          v247 = (const void *)((v450 + v245) & v51);
          v248 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v470 + 48);
          swift_bridgeObjectRetain();
          if (v248(v247, 1, v468))
          {
            memcpy(v246, v247, v478);
          }
          else
          {
            v234((unint64_t)v246, (unint64_t)v247, v468);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v470 + 56))(v246, 0, 1, v468);
          }
          v249 = (_QWORD *)(((unint64_t)v246 + v447) & 0xFFFFFFFFFFFFFFF8);
          v250 = (_QWORD *)(((unint64_t)v247 + v447) & 0xFFFFFFFFFFFFFFF8);
          *v249 = *v250;
          v251 = ((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8;
          v252 = ((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8;
          v253 = *(_QWORD *)v252;
          *(_BYTE *)(v251 + 8) = *(_BYTE *)(v252 + 8);
          *(_QWORD *)v251 = v253;
          v254 = (_QWORD *)(((unint64_t)v249 + 31) & 0xFFFFFFFFFFFFF8);
          v255 = (_QWORD *)(((unint64_t)v250 + 31) & 0xFFFFFFFFFFFFF8);
          *v254 = *v255;
          v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
          v257 = (uint64_t *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
          v258 = v257[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v258 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)v256 = *(_OWORD *)v257;
          }
          else
          {
            v259 = *v257;
            sub_23AAAE668(*v257, v258);
            *(_QWORD *)v256 = v259;
            *(_QWORD *)(v256 + 8) = v258;
          }
          v64 = v471;
          v260 = (v256 + 19) & 0xFFFFFFFFFFFFFFF8;
          v261 = ((unint64_t)v257 + 19) & 0xFFFFFFFFFFFFFFF8;
          v262 = *(_QWORD *)v261;
          *(_BYTE *)(v260 + 8) = *(_BYTE *)(v261 + 8);
          *(_QWORD *)v260 = v262;
          *(_BYTE *)(v260 + 9) = *(_BYTE *)(v261 + 9);
          v263 = (v260 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v264 = (v261 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v265 = *(_DWORD *)v264;
          *(_BYTE *)(v263 + 4) = *(_BYTE *)(v264 + 4);
          *(_DWORD *)v263 = v265;
          v266 = (_QWORD *)((v260 + 25) & 0xFFFFFFFFFFFFFFF8);
          v267 = (_QWORD *)((v261 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v266 = *v267;
          v266[1] = v267[1];
          v268 = v448 + v228;
          v269 = v448 + v229;
          v270 = *(_QWORD *)(v269 + 16);
          if (v270 >= 0xFFFFFFFF)
            LODWORD(v270) = -1;
          v271 = v270 - 1;
          swift_bridgeObjectRetain();
          if (v271 < 0)
          {
            *(_QWORD *)v268 = *(_QWORD *)v269;
            *(_BYTE *)(v268 + 8) = *(_BYTE *)(v269 + 8);
            *(_BYTE *)(v268 + 9) = *(_BYTE *)(v269 + 9);
            v284 = *(void **)(v269 + 16);
            v285 = v284;
            *(_QWORD *)(v268 + 16) = v284;
            v286 = *(void **)(v269 + 24);
            v287 = v286;
            *(_QWORD *)(v268 + 24) = v286;
            *(_BYTE *)(v268 + 32) = *(_BYTE *)(v269 + 32);
            *(_BYTE *)(v268 + 33) = *(_BYTE *)(v269 + 33);
            *(_BYTE *)(v268 + 34) = *(_BYTE *)(v269 + 34);
            *(_QWORD *)(v268 + 40) = *(_QWORD *)(v269 + 40);
            *(_QWORD *)(v268 + 48) = *(_QWORD *)(v269 + 48);
            *(_QWORD *)(v268 + 56) = *(_QWORD *)(v269 + 56);
            *(_QWORD *)(v268 + 64) = *(_QWORD *)(v269 + 64);
            *(_BYTE *)(v268 + 72) = *(_BYTE *)(v269 + 72);
            *(_QWORD *)(v268 + 80) = *(_QWORD *)(v269 + 80);
            *(_QWORD *)(v268 + 88) = *(_QWORD *)(v269 + 88);
            v517 = *(void **)(v269 + 96);
            *(_QWORD *)(v268 + 96) = v517;
            *(_BYTE *)(v268 + 104) = *(_BYTE *)(v269 + 104);
            *(_BYTE *)(v268 + 105) = *(_BYTE *)(v269 + 105);
            *(_QWORD *)(v268 + 112) = *(_QWORD *)(v269 + 112);
            *(_QWORD *)(v268 + 120) = *(_QWORD *)(v269 + 120);
            *(_QWORD *)(v268 + 128) = *(_QWORD *)(v269 + 128);
            *(_QWORD *)(v268 + 136) = *(_QWORD *)(v269 + 136);
            *(_QWORD *)(v268 + 144) = *(_QWORD *)(v269 + 144);
            *(_QWORD *)(v268 + 152) = *(_QWORD *)(v269 + 152);
            *(_QWORD *)(v268 + 160) = *(_QWORD *)(v269 + 160);
            *(_QWORD *)(v268 + 168) = *(_QWORD *)(v269 + 168);
            *(_BYTE *)(v268 + 176) = *(_BYTE *)(v269 + 176);
            *(_QWORD *)(v268 + 184) = *(_QWORD *)(v269 + 184);
            v288 = *(_QWORD *)(v269 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v289 = v517;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v288)
            {
              *(_QWORD *)(v268 + 192) = v288;
              *(_QWORD *)(v268 + 200) = *(_QWORD *)(v269 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v268 + 192) = *(_OWORD *)(v269 + 192);
            }
            v47 = a1;
            v213 = v472;
            v212 = v473;
            v64 = v471;
            *(_QWORD *)(v268 + 208) = *(_QWORD *)(v269 + 208);
            *(_QWORD *)(v268 + 216) = *(_QWORD *)(v269 + 216);
            *(_QWORD *)(v268 + 224) = *(_QWORD *)(v269 + 224);
            *(_QWORD *)(v268 + 232) = *(_QWORD *)(v269 + 232);
            *(_QWORD *)(v268 + 240) = *(_QWORD *)(v269 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v272 = *(_OWORD *)v269;
            v273 = *(_OWORD *)(v269 + 16);
            v274 = *(_OWORD *)(v269 + 48);
            *(_OWORD *)(v268 + 32) = *(_OWORD *)(v269 + 32);
            *(_OWORD *)(v268 + 48) = v274;
            *(_OWORD *)v268 = v272;
            *(_OWORD *)(v268 + 16) = v273;
            v275 = *(_OWORD *)(v269 + 64);
            v276 = *(_OWORD *)(v269 + 80);
            v277 = *(_OWORD *)(v269 + 112);
            *(_OWORD *)(v268 + 96) = *(_OWORD *)(v269 + 96);
            *(_OWORD *)(v268 + 112) = v277;
            *(_OWORD *)(v268 + 64) = v275;
            *(_OWORD *)(v268 + 80) = v276;
            v278 = *(_OWORD *)(v269 + 128);
            v279 = *(_OWORD *)(v269 + 144);
            v280 = *(_OWORD *)(v269 + 176);
            *(_OWORD *)(v268 + 160) = *(_OWORD *)(v269 + 160);
            *(_OWORD *)(v268 + 176) = v280;
            *(_OWORD *)(v268 + 128) = v278;
            *(_OWORD *)(v268 + 144) = v279;
            v281 = *(_OWORD *)(v269 + 192);
            v282 = *(_OWORD *)(v269 + 208);
            v283 = *(_OWORD *)(v269 + 224);
            *(_QWORD *)(v268 + 240) = *(_QWORD *)(v269 + 240);
            *(_OWORD *)(v268 + 208) = v282;
            *(_OWORD *)(v268 + 224) = v283;
            *(_OWORD *)(v268 + 192) = v281;
            v213 = v472;
            v212 = v473;
            v47 = a1;
          }
          v388 = (_OWORD *)((v268 + 255) & 0xFFFFFFFFFFFFFFF8);
          v389 = (__int128 *)((v269 + 255) & 0xFFFFFFFFFFFFFFF8);
          v390 = *v389;
          *(_OWORD *)((char *)v388 + 9) = *(__int128 *)((char *)v389 + 9);
          *v388 = v390;
          v391 = (v268 + 287) & 0xFFFFFFFFFFFFFFF8;
          v392 = (v269 + 287) & 0xFFFFFFFFFFFFFFF8;
          v393 = *(_OWORD *)v392;
          *(_BYTE *)(v391 + 16) = *(_BYTE *)(v392 + 16);
          *(_OWORD *)v391 = v393;
          v394 = (_QWORD *)((v268 + 311) & 0xFFFFFFFFFFFFF8);
          v395 = (v269 + 311) & 0xFFFFFFFFFFFFF8;
          v396 = *(_QWORD *)v395;
          v395 += 15;
          *v394 = v396;
          v397 = (_QWORD *)(((unint64_t)v394 + 15) & 0xFFFFFFFFFFFFFFF8);
          v398 = *(_QWORD *)(v395 & 0xFFFFFFFFFFFFFFF8);
          v399 = *(_QWORD *)((v395 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_23AA7F2D4(v398, v399);
          *v397 = v398;
          v397[1] = v399;
          v214 = v469;
          v31 = v481;
          v211 = v483;
          if (!v458)
            goto LABEL_143;
LABEL_182:
          v400 = ((((v212
                   + ((((((((((v213 + v214 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v401 = (void *)(((unint64_t)v211 + v511 + v400) & v482);
          v402 = (const void *)(((unint64_t)v526 + v511 + v400) & v482);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v467 + 48))(v402, 1, v64))
          {
            memcpy(v401, v402, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v467 + 16))(v401, v402, v64);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v467 + 56))(v401, 0, 1, v64);
          }
          v403 = v507;
          v404 = (char *)(((unint64_t)v401 + v510) & v440);
          v405 = (char *)(((unint64_t)v402 + v510) & v440);
          if (v441 == v29)
          {
            v406 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v463 + 48))(v405, v441, v464);
          }
          else
          {
            v407 = (uint64_t *)((unint64_t)&v405[v507] & 0xFFFFFFFFFFFFFFF8);
            if (v494 <= 0x7FFFFFFE)
            {
              v408 = *v407;
              if ((unint64_t)*v407 >= 0xFFFFFFFF)
                LODWORD(v408) = -1;
              if ((v408 + 1) >= 2)
                goto LABEL_194;
              goto LABEL_196;
            }
            v406 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v500 + 48))(((unint64_t)v407 + v31) & v487, v442, v491);
          }
          v403 = v507;
          if (v406)
          {
LABEL_194:
            v409 = v497;
            memcpy(v404, v405, v497);
LABEL_197:
            *(_QWORD *)&v404[v409] = *(_QWORD *)&v405[v409];
            v419 = (_QWORD *)((unint64_t)&v404[v409 + 15] & 0xFFFFFFFFFFFFF8);
            v420 = (_QWORD *)((unint64_t)&v405[v409 + 15] & 0xFFFFFFFFFFFFFFF8);
            *v419 = *v420;
            v117 = *(void **)(((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFF8);
            *(_QWORD *)(((unint64_t)v419 + 15) & 0xFFFFFFFFFFFFF8) = v117;
            v118 = 1;
LABEL_198:
            *((_BYTE *)v47 + v521) = v118;
            v421 = v117;
            return v47;
          }
          v407 = (uint64_t *)((unint64_t)&v405[v507] & 0xFFFFFFFFFFFFFFF8);
LABEL_196:
          v410 = v403;
          (*(void (**)(char *, char *, uint64_t))(v463 + 16))(v404, v405, v464);
          v411 = (_QWORD *)((unint64_t)&v404[v410] & 0xFFFFFFFFFFFFFFF8);
          *v411 = *v407;
          v412 = ((unint64_t)v411 + v31) & v487;
          v413 = ((unint64_t)v407 + v31) & v487;
          v414 = *(void (**)(unint64_t, unint64_t, uint64_t))(v500 + 16);
          swift_bridgeObjectRetain();
          v414(v412, v413, v491);
          v415 = (_QWORD *)((v485 + v412) & 0xFFFFFFFFFFFFF8);
          v416 = (_QWORD *)((v485 + v413) & 0xFFFFFFFFFFFFF8);
          *v415 = *v416;
          v417 = (_QWORD *)(((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8);
          v418 = (_QWORD *)(((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v417 = *v418;
          v417[1] = v418[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v409 = v497;
          goto LABEL_197;
        }
        v65 = v477;
        v87 = ((unint64_t)v62 + v477) & v50;
        v88 = (v479 + v87) & v515;
        if (v459 == v476)
        {
          v64 = v471;
          if (v446 == v459)
          {
            v63 = (*(uint64_t (**)(unint64_t))(v461 + 48))((v479 + v87) & v515);
LABEL_140:
            v62 = v526;
            goto LABEL_141;
          }
          v122 = (unint64_t *)((v460 + v88) & 0xFFFFFFFFFFFFFFF8);
          if (v444 > 0x7FFFFFFE)
          {
            v63 = (*(uint64_t (**)(unint64_t))(v454 + 48))(((unint64_t)v122 + v453) & v504);
            goto LABEL_140;
          }
          v123 = *v122;
          if (v123 >= 0xFFFFFFFF)
            LODWORD(v123) = -1;
          v124 = (v123 + 1) >= 2;
          v125 = v59;
        }
        else
        {
          v102 = v466 + v88;
          v64 = v471;
          if ((v445 & 0x80000000) == 0)
          {
            v103 = *(_QWORD *)(v102 + 8);
            if (v103 >= 0xFFFFFFFF)
              LODWORD(v103) = -1;
            v63 = v103 + 1;
            goto LABEL_141;
          }
          v129 = (v457 + ((v456 + v102) & v59)) & v51;
          if (v458 > 0x7FFFFFFD)
          {
            v63 = (*(uint64_t (**)(unint64_t))(v470 + 48))(v129);
            goto LABEL_140;
          }
          v125 = v59;
          v439 = *(_QWORD *)(((v443 + ((v452 + v129) & v51)) & 0xFFFFFFFFFFFFF8) + 8);
          if (v439 >= 0xFFFFFFFF)
            LODWORD(v439) = -1;
          v124 = (v439 + 1) >= 2;
        }
        v211 = v483;
        if (v124)
          goto LABEL_142;
        goto LABEL_145;
      case 2:
        v66 = ~v26;
        v486 = *(_QWORD *)(v24 + 64) + 7;
        v488 = ~v25;
        v495 = v28;
        v67 = v27;
        v68 = *(unsigned int *)(v24 + 84);
        v508 = v30;
        v498 = ((((v32 + ((v25 + 8 + (v30 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v501 = *(_QWORD *)(v23 - 8);
        v492 = v23;
        v521 = v43;
        v47 = a1;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
        v69 = (void *)(((unint64_t)a1 + v36) & ~v511);
        v70 = (const void *)(((unint64_t)a2 + v36) & ~v511);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v467 + 48))(v70, 1, v471))
        {
          memcpy(v69, v70, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v467 + 16))(v69, v70, v471);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v467 + 56))(v69, 0, 1, v471);
        }
        v93 = (char *)(((unint64_t)v69 + v510) & v66);
        v94 = (char *)(((unint64_t)v70 + v510) & v66);
        if ((_DWORD)v67 == v29)
        {
          v95 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v463 + 48))(v94, v67, v464);
        }
        else
        {
          v96 = v68;
          v97 = v508;
          v98 = (uint64_t *)((unint64_t)&v94[v508] & 0xFFFFFFFFFFFFFFF8);
          if (v495 <= 0x7FFFFFFE)
          {
            v99 = *v98;
            if ((unint64_t)*v98 >= 0xFFFFFFFF)
              LODWORD(v99) = -1;
            if ((v99 + 1) >= 2)
              goto LABEL_97;
            goto LABEL_99;
          }
          v95 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v501 + 48))(((unint64_t)v98 + v31) & v488, v96, v492);
        }
        v97 = v508;
        if (v95)
        {
LABEL_97:
          v106 = v498;
          memcpy(v93, v94, v498);
          goto LABEL_100;
        }
        v98 = (uint64_t *)((unint64_t)&v94[v508] & 0xFFFFFFFFFFFFFFF8);
LABEL_99:
        v107 = v97;
        (*(void (**)(char *, char *, uint64_t))(v463 + 16))(v93, v94, v464);
        v108 = (_QWORD *)((unint64_t)&v93[v107] & 0xFFFFFFFFFFFFFFF8);
        *v108 = *v98;
        v109 = ((unint64_t)v108 + v31) & v488;
        v110 = ((unint64_t)v98 + v31) & v488;
        v111 = *(void (**)(unint64_t, unint64_t, uint64_t))(v501 + 16);
        swift_bridgeObjectRetain();
        v111(v109, v110, v492);
        v112 = (_QWORD *)((v486 + v109) & 0xFFFFFFFFFFFFF8);
        v113 = (_QWORD *)((v486 + v110) & 0xFFFFFFFFFFFFF8);
        *v112 = *v113;
        v114 = (_QWORD *)(((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8);
        v115 = (_QWORD *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v114 = *v115;
        v114[1] = v115[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v106 = v498;
LABEL_100:
        v116 = &v93[v106];
        *v116 = v94[v106];
        v117 = *(void **)&v94[v106 + 8];
        *((_QWORD *)v116 + 1) = v117;
        v118 = 2;
        goto LABEL_198;
      case 3:
        v505 = ~(unint64_t)v499;
        v522 = v43;
        v71 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16);
        v71(a1, a2, AssociatedTypeWitness);
        v72 = (void *)(((unint64_t)a1 + v474) & v49);
        v73 = (_QWORD *)(((unint64_t)a2 + v474) & v49);
        v527 = v73;
        if (v475 == v476)
        {
          v74 = (*(uint64_t (**)(void))(v3 + 48))();
          v75 = v470;
          v76 = v477;
        }
        else
        {
          v76 = v477;
          v89 = ((unint64_t)v73 + v477) & v50;
          v90 = (v479 + v89) & v515;
          v75 = v470;
          if (v459 == v476)
          {
            if (v446 == v459)
            {
              v91 = *(uint64_t (**)(unint64_t))(v461 + 48);
              v92 = (v479 + v89) & v515;
            }
            else
            {
              v126 = (unint64_t *)((v460 + v90) & 0xFFFFFFFFFFFFFFF8);
              if (v444 <= 0x7FFFFFFE)
              {
                v127 = *v126;
                if (v127 >= 0xFFFFFFFF)
                  LODWORD(v127) = -1;
                v128 = ~v484;
                if ((v127 + 1) >= 2)
                  goto LABEL_160;
                goto LABEL_163;
              }
              v92 = ((unint64_t)v126 + v453) & v505;
              v91 = *(uint64_t (**)(unint64_t))(v454 + 48);
            }
          }
          else
          {
            v104 = v466 + v90;
            if ((v445 & 0x80000000) == 0)
            {
              v105 = *(_QWORD *)(v104 + 8);
              if (v105 >= 0xFFFFFFFF)
                LODWORD(v105) = -1;
              v74 = v105 + 1;
              goto LABEL_159;
            }
            v92 = (v457 + ((v456 + v104) & ~v484)) & v51;
            if (v458 <= 0x7FFFFFFD)
            {
              v128 = ~v484;
              v437 = *(_QWORD *)(((v443 + ((v452 + v92) & v51)) & 0xFFFFFFFFFFFFF8) + 8);
              if (v437 >= 0xFFFFFFFF)
                LODWORD(v437) = -1;
              if ((v437 + 1) >= 2)
                goto LABEL_160;
              goto LABEL_163;
            }
            v91 = *(uint64_t (**)(unint64_t))(v470 + 48);
          }
          v74 = v91(v92);
          v75 = v470;
        }
LABEL_159:
        v128 = ~v484;
        if (v74)
        {
LABEL_160:
          v290 = v527;
          memcpy(v72, v527, v465);
          v292 = v472;
          v291 = v473;
          v47 = a1;
          goto LABEL_161;
        }
        v89 = ((unint64_t)v527 + v76) & v50;
        v90 = (v479 + v89) & v515;
LABEL_163:
        v294 = v72;
        v295 = v72;
        v296 = v75;
        v71(v295, v527, AssociatedTypeWitness);
        v513 = v294;
        v297 = ((unint64_t)v294 + v76) & v50;
        v71((_QWORD *)v297, (_QWORD *)v89, AssociatedTypeWitness);
        v298 = (v479 + v297) & v515;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16))(v298, v90, v462);
        v299 = (_QWORD *)((v460 + v298) & 0xFFFFFFFFFFFFFFF8);
        v300 = (_QWORD *)((v460 + v90) & 0xFFFFFFFFFFFFFFF8);
        *v299 = *v300;
        v301 = ((unint64_t)v299 + v453) & v505;
        v302 = ((unint64_t)v300 + v453) & v505;
        v303 = *(void (**)(unint64_t, unint64_t, uint64_t))(v454 + 16);
        swift_bridgeObjectRetain();
        v303(v301, v302, v455);
        v304 = (_QWORD *)((v449 + v301) & 0xFFFFFFFFFFFFF8);
        v305 = (_QWORD *)((v449 + v302) & 0xFFFFFFFFFFFFF8);
        *v304 = *v305;
        v306 = (_QWORD *)(((unint64_t)v304 + 15) & 0xFFFFFFFFFFFFFFF8);
        v307 = (_QWORD *)(((unint64_t)v305 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v306 = *v307;
        v306[1] = v307[1];
        v308 = (_QWORD *)(v466 + v298);
        *v308 = *(_QWORD *)(v466 + v90);
        v308[1] = *(_QWORD *)(v466 + v90 + 8);
        v309 = (v456 + v466 + v298) & v128;
        v310 = (v456 + v466 + v90) & v128;
        *(_BYTE *)v309 = *(_BYTE *)v310;
        v311 = v309 | 4;
        v312 = *(_DWORD *)(v310 | 4);
        *(_BYTE *)(v311 + 4) = *(_BYTE *)((v310 | 4) + 4);
        *(_DWORD *)v311 = v312;
        *(_WORD *)(v309 + 10) = *(_WORD *)(v310 + 10);
        v313 = (v457 + v309) & v51;
        v314 = (v457 + v310) & v51;
        v315 = *(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v315(v313, v314, v468);
        v316 = (v452 + v313) & v51;
        v317 = (v452 + v314) & v51;
        v315(v316, v317, v468);
        v318 = (_BYTE *)(v316 + v469);
        *v318 = *(_BYTE *)(v317 + v469);
        v318[1] = *(_BYTE *)(v317 + v469 + 1);
        v318[2] = *(_BYTE *)(v317 + v469 + 2);
        v318[3] = *(_BYTE *)(v317 + v469 + 3);
        v318[4] = *(_BYTE *)(v317 + v469 + 4);
        v319 = (v316 + v469 + 12) & 0xFFFFFFFFFFFFFFF8;
        v320 = (v317 + v469 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v319 = *(_QWORD *)v320;
        *(_QWORD *)(v319 + 8) = *(_QWORD *)(v320 + 8);
        *(_BYTE *)(v319 + 16) = *(_BYTE *)(v320 + 16);
        *(_BYTE *)(v319 + 17) = *(_BYTE *)(v320 + 17);
        *(_BYTE *)(v319 + 18) = *(_BYTE *)(v320 + 18);
        *(_BYTE *)(v319 + 19) = *(_BYTE *)(v320 + 19);
        v321 = (v319 + 27) & 0xFFFFFFFFFFFFFFF8;
        v322 = (v320 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v321 = *(_QWORD *)v322;
        *(_BYTE *)(v321 + 8) = *(_BYTE *)(v322 + 8);
        *(_BYTE *)(v321 + 9) = *(_BYTE *)(v322 + 9);
        *(_BYTE *)(v321 + 10) = *(_BYTE *)(v322 + 10);
        *(_BYTE *)(v321 + 11) = *(_BYTE *)(v322 + 11);
        *(_BYTE *)(v321 + 12) = *(_BYTE *)(v322 + 12);
        v323 = (_QWORD *)((v319 + 47) & 0xFFFFFFFFFFFFF8);
        v324 = (_QWORD *)((v320 + 47) & 0xFFFFFFFFFFFFF8);
        *v323 = *v324;
        v325 = ((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8;
        v326 = ((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v325 = *(_QWORD *)v326;
        *(_BYTE *)(v325 + 8) = *(_BYTE *)(v326 + 8);
        *(_BYTE *)(v325 + 9) = *(_BYTE *)(v326 + 9);
        v327 = (void *)((v450 + v325) & v51);
        v328 = (const void *)((v450 + v326) & v51);
        v329 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v296 + 48);
        swift_bridgeObjectRetain();
        if (v329(v328, 1, v468))
        {
          memcpy(v327, v328, v478);
        }
        else
        {
          v315((unint64_t)v327, (unint64_t)v328, v468);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v296 + 56))(v327, 0, 1, v468);
        }
        v47 = a1;
        v330 = (_QWORD *)(((unint64_t)v327 + v447) & 0xFFFFFFFFFFFFFFF8);
        v331 = (_QWORD *)(((unint64_t)v328 + v447) & 0xFFFFFFFFFFFFFFF8);
        *v330 = *v331;
        v332 = ((unint64_t)v330 + 15) & 0xFFFFFFFFFFFFFFF8;
        v333 = ((unint64_t)v331 + 15) & 0xFFFFFFFFFFFFFFF8;
        v334 = *(_QWORD *)v333;
        *(_BYTE *)(v332 + 8) = *(_BYTE *)(v333 + 8);
        *(_QWORD *)v332 = v334;
        v335 = (_QWORD *)(((unint64_t)v330 + 31) & 0xFFFFFFFFFFFFF8);
        v336 = (_QWORD *)(((unint64_t)v331 + 31) & 0xFFFFFFFFFFFFF8);
        *v335 = *v336;
        v337 = ((unint64_t)v335 + 15) & 0xFFFFFFFFFFFFFFF8;
        v338 = (uint64_t *)(((unint64_t)v336 + 15) & 0xFFFFFFFFFFFFFFF8);
        v339 = v338[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v339 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)v337 = *(_OWORD *)v338;
        }
        else
        {
          v340 = *v338;
          sub_23AAAE668(*v338, v339);
          *(_QWORD *)v337 = v340;
          *(_QWORD *)(v337 + 8) = v339;
        }
        v341 = (v337 + 19) & 0xFFFFFFFFFFFFFFF8;
        v342 = ((unint64_t)v338 + 19) & 0xFFFFFFFFFFFFFFF8;
        v343 = *(_QWORD *)v342;
        *(_BYTE *)(v341 + 8) = *(_BYTE *)(v342 + 8);
        *(_QWORD *)v341 = v343;
        *(_BYTE *)(v341 + 9) = *(_BYTE *)(v342 + 9);
        v344 = (v341 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v345 = (v342 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v346 = *(_DWORD *)v345;
        *(_BYTE *)(v344 + 4) = *(_BYTE *)(v345 + 4);
        *(_DWORD *)v344 = v346;
        v347 = (_QWORD *)((v341 + 25) & 0xFFFFFFFFFFFFFFF8);
        v348 = (_QWORD *)((v342 + 25) & 0xFFFFFFFFFFFFFFF8);
        *v347 = *v348;
        v347[1] = v348[1];
        v349 = v448 + v309;
        v350 = v448 + v310;
        v351 = *(_QWORD *)(v350 + 16);
        if (v351 >= 0xFFFFFFFF)
          LODWORD(v351) = -1;
        v352 = v351 - 1;
        swift_bridgeObjectRetain();
        if (v352 < 0)
        {
          *(_QWORD *)v349 = *(_QWORD *)v350;
          *(_BYTE *)(v349 + 8) = *(_BYTE *)(v350 + 8);
          *(_BYTE *)(v349 + 9) = *(_BYTE *)(v350 + 9);
          v365 = *(void **)(v350 + 16);
          v366 = v365;
          *(_QWORD *)(v349 + 16) = v365;
          v367 = *(void **)(v350 + 24);
          v368 = v367;
          *(_QWORD *)(v349 + 24) = v367;
          *(_BYTE *)(v349 + 32) = *(_BYTE *)(v350 + 32);
          *(_BYTE *)(v349 + 33) = *(_BYTE *)(v350 + 33);
          *(_BYTE *)(v349 + 34) = *(_BYTE *)(v350 + 34);
          *(_QWORD *)(v349 + 40) = *(_QWORD *)(v350 + 40);
          *(_QWORD *)(v349 + 48) = *(_QWORD *)(v350 + 48);
          *(_QWORD *)(v349 + 56) = *(_QWORD *)(v350 + 56);
          *(_QWORD *)(v349 + 64) = *(_QWORD *)(v350 + 64);
          *(_BYTE *)(v349 + 72) = *(_BYTE *)(v350 + 72);
          *(_QWORD *)(v349 + 80) = *(_QWORD *)(v350 + 80);
          *(_QWORD *)(v349 + 88) = *(_QWORD *)(v350 + 88);
          v518 = *(void **)(v350 + 96);
          *(_QWORD *)(v349 + 96) = v518;
          *(_BYTE *)(v349 + 104) = *(_BYTE *)(v350 + 104);
          *(_BYTE *)(v349 + 105) = *(_BYTE *)(v350 + 105);
          *(_QWORD *)(v349 + 112) = *(_QWORD *)(v350 + 112);
          *(_QWORD *)(v349 + 120) = *(_QWORD *)(v350 + 120);
          *(_QWORD *)(v349 + 128) = *(_QWORD *)(v350 + 128);
          *(_QWORD *)(v349 + 136) = *(_QWORD *)(v350 + 136);
          *(_QWORD *)(v349 + 144) = *(_QWORD *)(v350 + 144);
          *(_QWORD *)(v349 + 152) = *(_QWORD *)(v350 + 152);
          *(_QWORD *)(v349 + 160) = *(_QWORD *)(v350 + 160);
          *(_QWORD *)(v349 + 168) = *(_QWORD *)(v350 + 168);
          *(_BYTE *)(v349 + 176) = *(_BYTE *)(v350 + 176);
          *(_QWORD *)(v349 + 184) = *(_QWORD *)(v350 + 184);
          v369 = *(_QWORD *)(v350 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v370 = v518;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v369)
          {
            *(_QWORD *)(v349 + 192) = v369;
            *(_QWORD *)(v349 + 200) = *(_QWORD *)(v350 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v349 + 192) = *(_OWORD *)(v350 + 192);
          }
          v47 = a1;
          v292 = v472;
          v291 = v473;
          *(_QWORD *)(v349 + 208) = *(_QWORD *)(v350 + 208);
          *(_QWORD *)(v349 + 216) = *(_QWORD *)(v350 + 216);
          *(_QWORD *)(v349 + 224) = *(_QWORD *)(v350 + 224);
          *(_QWORD *)(v349 + 232) = *(_QWORD *)(v350 + 232);
          *(_QWORD *)(v349 + 240) = *(_QWORD *)(v350 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v353 = *(_OWORD *)v350;
          v354 = *(_OWORD *)(v350 + 16);
          v355 = *(_OWORD *)(v350 + 48);
          *(_OWORD *)(v349 + 32) = *(_OWORD *)(v350 + 32);
          *(_OWORD *)(v349 + 48) = v355;
          *(_OWORD *)v349 = v353;
          *(_OWORD *)(v349 + 16) = v354;
          v356 = *(_OWORD *)(v350 + 64);
          v357 = *(_OWORD *)(v350 + 80);
          v358 = *(_OWORD *)(v350 + 112);
          *(_OWORD *)(v349 + 96) = *(_OWORD *)(v350 + 96);
          *(_OWORD *)(v349 + 112) = v358;
          *(_OWORD *)(v349 + 64) = v356;
          *(_OWORD *)(v349 + 80) = v357;
          v359 = *(_OWORD *)(v350 + 128);
          v360 = *(_OWORD *)(v350 + 144);
          v361 = *(_OWORD *)(v350 + 176);
          *(_OWORD *)(v349 + 160) = *(_OWORD *)(v350 + 160);
          *(_OWORD *)(v349 + 176) = v361;
          *(_OWORD *)(v349 + 128) = v359;
          *(_OWORD *)(v349 + 144) = v360;
          v362 = *(_OWORD *)(v350 + 192);
          v363 = *(_OWORD *)(v350 + 208);
          v364 = *(_OWORD *)(v350 + 224);
          *(_QWORD *)(v349 + 240) = *(_QWORD *)(v350 + 240);
          *(_OWORD *)(v349 + 208) = v363;
          *(_OWORD *)(v349 + 224) = v364;
          *(_OWORD *)(v349 + 192) = v362;
          v292 = v472;
          v291 = v473;
        }
        v422 = (_OWORD *)((v349 + 255) & 0xFFFFFFFFFFFFFFF8);
        v423 = (__int128 *)((v350 + 255) & 0xFFFFFFFFFFFFFFF8);
        v424 = *v423;
        *(_OWORD *)((char *)v422 + 9) = *(__int128 *)((char *)v423 + 9);
        *v422 = v424;
        v425 = (v349 + 287) & 0xFFFFFFFFFFFFFFF8;
        v426 = (v350 + 287) & 0xFFFFFFFFFFFFFFF8;
        v427 = *(_OWORD *)v426;
        *(_BYTE *)(v425 + 16) = *(_BYTE *)(v426 + 16);
        *(_OWORD *)v425 = v427;
        v428 = (_QWORD *)((v349 + 311) & 0xFFFFFFFFFFFFF8);
        v429 = (v350 + 311) & 0xFFFFFFFFFFFFF8;
        v430 = *(_QWORD *)v429;
        v429 += 15;
        *v428 = v430;
        v431 = (_QWORD *)(((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFFFF8);
        v432 = *(_QWORD *)(v429 & 0xFFFFFFFFFFFFFFF8);
        v433 = *(_QWORD *)((v429 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_23AA7F2D4(v432, v433);
        *v431 = v432;
        v431[1] = v433;
        v293 = v469;
        v72 = v513;
        v290 = v527;
        if (v458)
        {
LABEL_202:
          v434 = ((((v291
                   + ((((((((((v292 + v293 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v435 = (_QWORD *)(((unint64_t)v72 + v434) & 0xFFFFFFFFFFFFFFF8);
          v436 = (_QWORD *)(((unint64_t)v290 + v434) & 0xFFFFFFFFFFFFFFF8);
          *v435 = *v436;
          v435[1] = v436[1];
          *(_QWORD *)(((unint64_t)v435 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v436 + 23) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v47 + v522) = 3;
          swift_bridgeObjectRetain();
          return v47;
        }
LABEL_161:
        v293 = v478;
        goto LABEL_202;
      case 4:
        v47 = a1;
        v77 = v43;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
        *((_BYTE *)a1 + v77) = 4;
        return v47;
      case 5:
        v47 = a1;
        v78 = v43;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
        *((_BYTE *)a1 + v78) = 5;
        return v47;
      case 6:
        v79 = v43;
        v47 = a1;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
        v80 = (void *)(((unint64_t)a1 + v41) & v52);
        v81 = (const void *)(((unint64_t)a2 + v41) & v52);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v81, 1, v519))
        {
          memcpy(v80, v81, v39);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(v80, v81, v519);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v80, 0, 1, v519);
        }
        *((_BYTE *)a1 + v79) = 6;
        return v47;
      case 7:
        v47 = a1;
        v82 = v43;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
        *((_BYTE *)a1 + v82) = 7;
        return v47;
      default:
        if (v43 <= 3)
          v45 = v43;
        else
          v45 = 4;
        __asm { BR              X15 }
        return result;
    }
  }
  v46 = *a2;
  *a1 = *a2;
  v47 = (_QWORD *)(v46 + ((v44 + 16) & ~v44));
  swift_retain();
  return v47;
}

void sub_23AF7C3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(void);
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(void);
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void);
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void *v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t *v105;
  unint64_t v106;
  unint64_t *v107;
  unint64_t v108;
  unint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  void (*v115)(unint64_t, uint64_t);
  unint64_t v116;
  unint64_t v117;
  uint64_t *v118;
  unint64_t v119;
  unint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  void (*v126)(unint64_t, uint64_t);
  unint64_t v127;
  unint64_t v128;
  uint64_t *v129;
  unint64_t v130;
  unint64_t v131;
  void *v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  int v136;
  uint64_t *v137;
  uint64_t v138;
  unint64_t v139;
  void (*v140)(unint64_t, uint64_t);
  unint64_t v141;
  unint64_t v142;
  uint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  unint64_t v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  int v183;
  unsigned int v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t AssociatedTypeWitness;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v202;

  v200 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v173 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v173 - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  v167 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v167 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 | v8 | 7;
  v164 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v164 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v11 | 7;
  v13 = v9 | v4 | v11;
  v182 = v13 + v3;
  v188 = v13;
  v14 = (v13 + v3) & ~v13;
  v186 = v2;
  v15 = *(_DWORD *)(v7 + 84);
  v157 = *(_DWORD *)(v5 + 84);
  if (v157 > v15)
    v15 = *(_DWORD *)(v5 + 84);
  v155 = v15;
  if (v15 <= 0x7FFFFFFE)
    v15 = 2147483646;
  v170 = v15;
  v184 = *(_DWORD *)(v2 + 84);
  if (v15 <= v184)
    v15 = *(_DWORD *)(v2 + 84);
  v16 = *(_DWORD *)(v10 + 84);
  if (v16 <= 0x7FFFFFFE)
    v17 = 2147483646;
  else
    v17 = *(_DWORD *)(v10 + 84);
  if (v15 > v17)
    v17 = v15;
  v156 = v17;
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v17;
  v183 = v18;
  v154 = *(_DWORD *)(v10 + 84);
  v19 = v16 == 0;
  v180 = v3 + v4;
  v194 = v4;
  v181 = v3 + v9;
  v190 = v9;
  v171 = *(_QWORD *)(v5 + 64) + 7;
  v172 = v5;
  v165 = v8 + 8;
  v191 = v8;
  v166 = v7;
  v168 = v12 + 16;
  v176 = ((((*(_QWORD *)(v7 + 64) + 7 + ((v8 + 8 + (v171 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v169 = v11 + 12;
  v163 = *(_QWORD *)(v164 - 8);
  v20 = *(_QWORD *)(v10 + 64);
  v161 = v20 + v11;
  v162 = v20 + 12;
  v21 = (v11
       + 10
       + ((((((v20 + 12 + ((v20 + v11 + ((v11 + 12) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  if (v19)
    ++v20;
  v158 = v11 + 10;
  v159 = v20 + 7;
  v160 = ((((((((((v20 + 7 + v21) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v185 = ((((((v12 + 16 + ((v3 + v9 + ((v3 + v4) & ~v4)) & ~v9) + v176) & ~v12) + v160 + 311) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v22 = v185 + v14;
  v23 = (v185 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = *(_DWORD *)(v25 + 84);
  v178 = v25;
  v179 = v24;
  v28 = *(_QWORD *)(v25 + 64);
  if (v27)
    v29 = v28;
  else
    v29 = v28 + 1;
  v175 = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(v175 - 8);
  v31 = *(_DWORD *)(v30 + 80) & 0xF8;
  v32 = swift_getAssociatedTypeWitness();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v31 | v34 | 7;
  v36 = *(unsigned int *)(v30 + 84);
  if (v36 <= *(_DWORD *)(v33 + 84))
    v37 = *(_DWORD *)(v33 + 84);
  else
    v37 = *(_DWORD *)(v30 + 84);
  if (v37 <= 0x7FFFFFFE)
    v38 = 2147483646;
  else
    v38 = v37;
  v177 = v38;
  v174 = v30;
  v39 = *(_QWORD *)(v30 + 64) + 7;
  v40 = ((((*(_QWORD *)(v33 + 64) + 7 + ((v34 + 8 + (v39 & 0xFFFFFFFFFFFFFFF8)) & ~v34)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v41 = ((((((v29 + v35 + ((v22 + v26) & ~v26)) & ~v35) + v40 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v42 = v3 + v26;
  v197 = v29 + v35;
  v43 = *(_QWORD *)(v200 - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v3 + v44;
  if (*(_DWORD *)(v43 + 84))
    v46 = *(_QWORD *)(v43 + 64);
  else
    v46 = *(_QWORD *)(v43 + 64) + 1;
  v47 = v46 + ((v3 + v44) & ~v44);
  v48 = ((v23 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v3 > v48)
    v48 = v3;
  if (v41 <= v40 + ((v29 + v35 + ((v3 + v26) & ~v26)) & ~v35) + 16)
    v41 = v40 + ((v29 + v35 + ((v3 + v26) & ~v26)) & ~v35) + 16;
  if (((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= v47)
    v49 = v47;
  else
    v49 = ((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v48 > v41)
    v41 = v48;
  if (v41 > v49)
    v49 = v41;
  v50 = a1;
  v51 = *(unsigned __int8 *)(a1 + v49);
  v53 = v32;
  v54 = ~v188;
  v202 = ~(v11 | 7);
  v55 = ~v11;
  v56 = ~(_DWORD)v34;
  v57 = ~v44;
  switch(v51)
  {
    case 0:
      v60 = ~v190;
      v61 = ~v191;
      v62 = *(void (**)(void))(v186 + 8);
      v62();
      v63 = (v182 + a1) & v54;
      if (v184 == v183)
      {
        v64 = (*(uint64_t (**)(uint64_t))(v186 + 48))(v63);
        v65 = ~v190;
        v66 = ~v194;
LABEL_106:
        if (v64)
          goto LABEL_119;
        v90 = (v180 + v63) & v66;
        v91 = (v181 + v90) & v65;
        goto LABEL_108;
      }
      v90 = (v180 + v63) & ~v194;
      v91 = (v181 + v90) & v60;
      if (v170 == v183)
      {
        if (v157 == v170)
        {
          v64 = (*(uint64_t (**)(uint64_t))(v172 + 48))((v181 + v90) & v60);
LABEL_105:
          v66 = ~v194;
          v65 = ~v190;
          goto LABEL_106;
        }
        v105 = (unint64_t *)((v171 + v91) & 0xFFFFFFFFFFFFFFF8);
        if (v155 > 0x7FFFFFFE)
        {
          v64 = (*(uint64_t (**)(unint64_t))(v166 + 48))(((unint64_t)v105 + v165) & v61);
          goto LABEL_105;
        }
        v106 = *v105;
      }
      else
      {
        v98 = v176 + v91;
        if ((v156 & 0x80000000) == 0)
        {
          v66 = ~v194;
          v65 = ~v190;
          v99 = *(_QWORD *)(v98 + 8);
          if (v99 >= 0xFFFFFFFF)
            LODWORD(v99) = -1;
          v64 = v99 + 1;
          goto LABEL_106;
        }
        v112 = (v169 + ((v168 + v98) & v202)) & v55;
        if (v154 > 0x7FFFFFFD)
        {
          v64 = (*(uint64_t (**)(uint64_t))(v163 + 48))(v112);
          goto LABEL_105;
        }
        v106 = *(_QWORD *)(((v162 + ((v161 + v112) & v55)) & 0xFFFFFFFFFFFFF8) + 8);
      }
      if (v106 >= 0xFFFFFFFF)
        LODWORD(v106) = -1;
      if ((v106 + 1) < 2)
      {
LABEL_108:
        ((void (*)(uint64_t, uint64_t))v62)(v63, AssociatedTypeWitness);
        ((void (*)(uint64_t, uint64_t))v62)(v90, AssociatedTypeWitness);
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v91, v173);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v166 + 8))((v165 + ((v171 + v91) & 0xFFFFFFFFFFFFFFF8)) & v61, v167);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v114 = (v168 + v176 + v91) & v202;
        v115 = *(void (**)(unint64_t, uint64_t))(v163 + 8);
        v115((v169 + v114) & v55, v164);
        v116 = (v161 + ((v169 + v114) & v55)) & v55;
        v115(v116, v164);
        swift_bridgeObjectRelease();
        v117 = (v158
              + ((((((v162 + v116) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v163 + 48))(v117, 1, v164))
          v115(v117, v164);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v118 = (uint64_t *)((((((v159 + v117) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        v119 = v118[1];
        if ((v119 & 0x3000000000000000) == 0)
          sub_23AAAE53C(*v118, v119);
        swift_bridgeObjectRelease();
        v120 = v160 + v114;
        v121 = *(void **)(v160 + v114 + 16);
        LODWORD(v122) = -1;
        if ((unint64_t)v121 < 0xFFFFFFFF)
          v122 = *(_QWORD *)(v160 + v114 + 16);
        if ((int)v122 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v120 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_23AAA12F0(*(_QWORD *)((((v120 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v120 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      }
LABEL_119:
      v123 = v63 + v185;
      goto LABEL_149;
    case 1:
      v67 = ~v194;
      v68 = ~v190;
      v150 = ~v26;
      v151 = ~v35;
      v148 = ~v191;
      v149 = v26;
      v192 = ~v34;
      v152 = v36;
      v189 = v39;
      v195 = v34 + 8;
      v198 = *(_QWORD *)(v32 - 8);
      v153 = ((((*(_QWORD *)(v33 + 64) + 7 + ((v34 + 8 + (v39 & 0xFFFFFFFFFFFFFFF8)) & ~v34)) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v69 = *(void (**)(void))(v186 + 8);
      v69();
      v70 = (v182 + a1) & v54;
      if (v184 == v183)
      {
        v71 = (*(uint64_t (**)(unint64_t))(v186 + 48))((v182 + a1) & v54);
        v72 = ~v190;
        v73 = v67;
LABEL_122:
        v124 = v197;
        if (v71)
          goto LABEL_135;
        v92 = (v180 + v70) & v73;
        v93 = (v181 + v92) & v72;
        goto LABEL_124;
      }
      v92 = (v180 + v70) & v67;
      v93 = (v181 + v92) & v68;
      if (v170 == v183)
      {
        if (v157 == v170)
        {
          v71 = (*(uint64_t (**)(uint64_t))(v172 + 48))((v181 + v92) & v68);
LABEL_121:
          v73 = v67;
          v72 = ~v190;
          goto LABEL_122;
        }
        v107 = (unint64_t *)((v171 + v93) & 0xFFFFFFFFFFFFFFF8);
        if (v155 > 0x7FFFFFFE)
        {
          v71 = (*(uint64_t (**)(unint64_t))(v166 + 48))(((unint64_t)v107 + v165) & v148);
          goto LABEL_121;
        }
        v108 = *v107;
      }
      else
      {
        v100 = v176 + v93;
        if ((v156 & 0x80000000) == 0)
        {
          v73 = v67;
          v72 = ~v190;
          v101 = *(_QWORD *)(v100 + 8);
          if (v101 >= 0xFFFFFFFF)
            LODWORD(v101) = -1;
          v71 = v101 + 1;
          goto LABEL_122;
        }
        v113 = (v169 + ((v168 + v100) & v202)) & v55;
        if (v154 > 0x7FFFFFFD)
        {
          v71 = (*(uint64_t (**)(uint64_t))(v163 + 48))(v113);
          goto LABEL_121;
        }
        v108 = *(_QWORD *)(((v162 + ((v161 + v113) & v55)) & 0xFFFFFFFFFFFFF8) + 8);
      }
      if (v108 >= 0xFFFFFFFF)
        LODWORD(v108) = -1;
      v124 = v197;
      if ((v108 + 1) < 2)
      {
LABEL_124:
        ((void (*)(uint64_t, uint64_t))v69)(v70, AssociatedTypeWitness);
        ((void (*)(uint64_t, uint64_t))v69)(v92, AssociatedTypeWitness);
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v93, v173);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v166 + 8))((v165 + ((v171 + v93) & 0xFFFFFFFFFFFFFFF8)) & v148, v167);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v125 = (v168 + v176 + v93) & v202;
        v126 = *(void (**)(unint64_t, uint64_t))(v163 + 8);
        v126((v169 + v125) & v55, v164);
        v127 = (v161 + ((v169 + v125) & v55)) & v55;
        v126(v127, v164);
        swift_bridgeObjectRelease();
        v128 = (v158
              + ((((((v162 + v127) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v163 + 48))(v128, 1, v164))
          v126(v128, v164);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v129 = (uint64_t *)((((((v159 + v128) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        v130 = v129[1];
        if ((v130 & 0x3000000000000000) == 0)
          sub_23AAAE53C(*v129, v130);
        swift_bridgeObjectRelease();
        v131 = v160 + v125;
        v132 = *(void **)(v160 + v125 + 16);
        LODWORD(v133) = -1;
        if ((unint64_t)v132 < 0xFFFFFFFF)
          v133 = *(_QWORD *)(v160 + v125 + 16);
        if ((int)v133 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v131 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_23AAA12F0(*(_QWORD *)((((v131 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v131 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      }
LABEL_135:
      v134 = (v70 + v149 + v185) & v150;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v178 + 48))(v134, 1, v179))
        (*(void (**)(unint64_t, uint64_t))(v178 + 8))(v134, v179);
      v135 = (v124 + v134) & v151;
      if (v152 == v177)
      {
        v136 = (*(uint64_t (**)(unint64_t))(v174 + 48))(v135);
LABEL_145:
        if (v136)
          goto LABEL_148;
        v137 = (uint64_t *)((v189 + v135) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_147;
      }
      v137 = (uint64_t *)((v189 + v135) & 0xFFFFFFFFFFFFFFF8);
      if (v37 > 0x7FFFFFFE)
      {
        v136 = (*(uint64_t (**)(unint64_t))(v198 + 48))(((unint64_t)v137 + v195) & v192);
        goto LABEL_145;
      }
      v138 = *v137;
      if ((unint64_t)*v137 >= 0xFFFFFFFF)
        LODWORD(v138) = -1;
      if ((v138 + 1) < 2)
      {
LABEL_147:
        (*(void (**)(unint64_t, uint64_t))(v174 + 8))(v135, v175);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v198 + 8))(((unint64_t)v137 + v195) & v192, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_148:
      v123 = v135 + v153 + 15;
LABEL_149:
      v102 = *(void **)(((v123 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      goto LABEL_150;
    case 2:
      v74 = ~v35;
      v193 = ~v34;
      v196 = v34 + 8;
      v75 = ~v26;
      v76 = v36;
      v77 = *(unsigned int *)(v33 + 84);
      v78 = v39;
      v199 = *(_QWORD *)(v32 - 8);
      v79 = ((((*(_QWORD *)(v33 + 64) + 7 + ((v34 + 8 + (v39 & 0xFFFFFFFFFFFFFFF8)) & ~v34)) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16;
      (*(void (**)(void))(v186 + 8))();
      v80 = (v42 + a1) & v75;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v80, 1, v179))
        (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v80, v179);
      v81 = (v197 + v80) & v74;
      if ((_DWORD)v76 == v177)
      {
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v81, v76, v175))
          goto LABEL_87;
LABEL_85:
        v94 = (uint64_t *)((v78 + v81) & 0xFFFFFFFFFFFFFFF8);
LABEL_86:
        (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v81, v175);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v199 + 8))(((unint64_t)v94 + v196) & v193, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_87;
      }
      v94 = (uint64_t *)((v78 + v81) & 0xFFFFFFFFFFFFFFF8);
      if (v37 > 0x7FFFFFFE)
      {
        if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v199 + 48))(((unint64_t)v94 + v196) & v193, v77, v53))
        {
          goto LABEL_87;
        }
        goto LABEL_85;
      }
      v95 = *v94;
      if ((unint64_t)*v94 >= 0xFFFFFFFF)
        LODWORD(v95) = -1;
      if ((v95 + 1) < 2)
        goto LABEL_86;
LABEL_87:
      v102 = *(void **)(v79 + v81 + 8);
LABEL_150:

      return;
    case 3:
      v82 = ~v190;
      v83 = ~v191;
      v84 = *(void (**)(void))(v186 + 8);
      v84();
      v85 = (v182 + a1) & v54;
      if (v184 == v183)
      {
        v86 = (*(uint64_t (**)(uint64_t))(v186 + 48))(v85);
        v87 = ~v190;
        v88 = ~v194;
LABEL_153:
        if (v86)
          goto LABEL_166;
        v96 = (v180 + v85) & v88;
        v97 = (v181 + v96) & v87;
        goto LABEL_155;
      }
      v96 = (v180 + v85) & ~v194;
      v97 = (v181 + v96) & v82;
      if (v170 == v183)
      {
        if (v157 == v170)
        {
          v86 = (*(uint64_t (**)(uint64_t))(v172 + 48))((v181 + v96) & v82);
LABEL_152:
          v88 = ~v194;
          v87 = ~v190;
          goto LABEL_153;
        }
        v109 = (unint64_t *)((v171 + v97) & 0xFFFFFFFFFFFFFFF8);
        if (v155 > 0x7FFFFFFE)
        {
          v86 = (*(uint64_t (**)(unint64_t))(v166 + 48))(((unint64_t)v109 + v165) & v83);
          goto LABEL_152;
        }
        v110 = *v109;
      }
      else
      {
        v103 = v176 + v97;
        if ((v156 & 0x80000000) == 0)
        {
          v88 = ~v194;
          v87 = ~v190;
          v104 = *(_QWORD *)(v103 + 8);
          if (v104 >= 0xFFFFFFFF)
            LODWORD(v104) = -1;
          v86 = v104 + 1;
          goto LABEL_153;
        }
        v111 = (v169 + ((v168 + v103) & v202)) & v55;
        if (v154 > 0x7FFFFFFD)
        {
          v86 = (*(uint64_t (**)(uint64_t))(v163 + 48))(v111);
          goto LABEL_152;
        }
        v110 = *(_QWORD *)(((v162 + ((v161 + v111) & v55)) & 0xFFFFFFFFFFFFF8) + 8);
      }
      if (v110 >= 0xFFFFFFFF)
        LODWORD(v110) = -1;
      if ((v110 + 1) < 2)
      {
LABEL_155:
        ((void (*)(uint64_t, uint64_t))v84)(v85, AssociatedTypeWitness);
        ((void (*)(uint64_t, uint64_t))v84)(v96, AssociatedTypeWitness);
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v97, v173);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v166 + 8))((v165 + ((v171 + v97) & 0xFFFFFFFFFFFFFFF8)) & v83, v167);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v139 = (v168 + v176 + v97) & v202;
        v140 = *(void (**)(unint64_t, uint64_t))(v163 + 8);
        v140((v169 + v139) & v55, v164);
        v141 = (v161 + ((v169 + v139) & v55)) & v55;
        v140(v141, v164);
        swift_bridgeObjectRelease();
        v142 = (v158
              + ((((((v162 + v141) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v163 + 48))(v142, 1, v164))
          v140(v142, v164);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v143 = (uint64_t *)((((((v159 + v142) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        v144 = v143[1];
        if ((v144 & 0x3000000000000000) == 0)
          sub_23AAAE53C(*v143, v144);
        swift_bridgeObjectRelease();
        v145 = v160 + v139;
        v146 = *(void **)(v160 + v139 + 16);
        LODWORD(v147) = -1;
        if ((unint64_t)v146 < 0xFFFFFFFF)
          v147 = *(_QWORD *)(v160 + v139 + 16);
        if ((int)v147 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v145 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_23AAA12F0(*(_QWORD *)((((v145 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v145 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      }
LABEL_166:
      swift_bridgeObjectRelease();
      return;
    case 4:
    case 5:
    case 7:
      v58 = AssociatedTypeWitness;
      v59 = *(void (**)(uint64_t, uint64_t))(v186 + 8);
      goto LABEL_47;
    case 6:
      (*(void (**)(void))(v186 + 8))();
      v89 = (v45 + a1) & v57;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v89, 1, v200))
        return;
      v59 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v50 = v89;
      v58 = v200;
LABEL_47:
      v59(v50, v58);
      return;
    default:
      if (v56 <= 3)
        v52 = v56;
      else
        v52 = 4;
      __asm { BR              X16 }
      return;
  }
}

uint64_t sub_23AF7D814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  size_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  size_t v27;
  size_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  size_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  const void *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const void *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void *v89;
  const void *v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  unint64_t v97;
  unint64_t v98;
  int v99;
  char *v100;
  char *v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  size_t v113;
  uint64_t v114;
  _QWORD *v115;
  unint64_t v116;
  unint64_t v117;
  void (*v118)(unint64_t, unint64_t, uint64_t);
  _QWORD *v119;
  _QWORD *v120;
  _QWORD *v121;
  _QWORD *v122;
  char *v123;
  void *v124;
  char v125;
  unint64_t v126;
  unint64_t *v127;
  unint64_t v128;
  unint64_t *v129;
  unint64_t v130;
  BOOL v131;
  unint64_t *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  const void *v138;
  uint64_t v139;
  size_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  unint64_t v146;
  unint64_t v147;
  void (*v148)(unint64_t, unint64_t, uint64_t);
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  int v157;
  unint64_t v158;
  unint64_t v159;
  void (*v160)(unint64_t, unint64_t, uint64_t);
  size_t v161;
  size_t v162;
  _BYTE *v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  unint64_t v170;
  unint64_t v171;
  void *v172;
  const void *v173;
  unsigned int (*v174)(const void *, uint64_t, uint64_t);
  _QWORD *v175;
  _QWORD *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  unint64_t v182;
  uint64_t *v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  int v191;
  _QWORD *v192;
  _QWORD *v193;
  unint64_t v194;
  __int128 *v195;
  unint64_t v196;
  int v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  id v211;
  void *v212;
  id v213;
  uint64_t v214;
  id v215;
  uint64_t v216;
  size_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  _QWORD *v222;
  _QWORD *v223;
  unint64_t v224;
  unint64_t v225;
  void (*v226)(unint64_t, unint64_t, uint64_t);
  _QWORD *v227;
  _QWORD *v228;
  _QWORD *v229;
  _QWORD *v230;
  _QWORD *v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  int v235;
  unint64_t v236;
  unint64_t v237;
  void (*v238)(unint64_t, unint64_t, uint64_t);
  size_t v239;
  _BYTE *v240;
  unint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  _QWORD *v245;
  _QWORD *v246;
  unint64_t v247;
  unint64_t v248;
  void *v249;
  const void *v250;
  unsigned int (*v251)(const void *, uint64_t, uint64_t);
  _QWORD *v252;
  _QWORD *v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  _QWORD *v258;
  unint64_t v259;
  uint64_t *v260;
  unint64_t v261;
  uint64_t v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  int v268;
  _QWORD *v269;
  _QWORD *v270;
  unint64_t v271;
  __int128 *v272;
  unint64_t v273;
  int v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  void *v287;
  id v288;
  void *v289;
  id v290;
  void *v291;
  id v292;
  void *v293;
  const void *v294;
  uint64_t v295;
  size_t v296;
  uint64_t v297;
  unint64_t v298;
  unint64_t v299;
  _QWORD *v300;
  _QWORD *v301;
  unint64_t v302;
  unint64_t v303;
  void (*v304)(unint64_t, unint64_t, uint64_t);
  _QWORD *v305;
  _QWORD *v306;
  _QWORD *v307;
  _QWORD *v308;
  _QWORD *v309;
  unint64_t v310;
  unint64_t v311;
  uint64_t v312;
  int v313;
  unint64_t v314;
  unint64_t v315;
  void (*v316)(unint64_t, unint64_t, uint64_t);
  size_t v317;
  size_t v318;
  _BYTE *v319;
  unint64_t v320;
  unint64_t v321;
  unint64_t v322;
  unint64_t v323;
  _QWORD *v324;
  _QWORD *v325;
  unint64_t v326;
  unint64_t v327;
  void *v328;
  const void *v329;
  unsigned int (*v330)(const void *, uint64_t, uint64_t);
  _QWORD *v331;
  _QWORD *v332;
  unint64_t v333;
  unint64_t v334;
  uint64_t v335;
  _QWORD *v336;
  _QWORD *v337;
  unint64_t v338;
  uint64_t *v339;
  unint64_t v340;
  uint64_t v341;
  unint64_t v342;
  unint64_t v343;
  uint64_t v344;
  unint64_t v345;
  unint64_t v346;
  int v347;
  _QWORD *v348;
  _QWORD *v349;
  unint64_t v350;
  __int128 *v351;
  unint64_t v352;
  int v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  void *v366;
  id v367;
  void *v368;
  id v369;
  uint64_t v370;
  id v371;
  _OWORD *v372;
  __int128 *v373;
  __int128 v374;
  unint64_t v375;
  unint64_t v376;
  __int128 v377;
  _QWORD *v378;
  uint64_t v379;
  uint64_t v380;
  _QWORD *v381;
  uint64_t v382;
  unint64_t v383;
  unint64_t v384;
  _QWORD *v385;
  _QWORD *v386;
  void *v387;
  id v388;
  _OWORD *v389;
  __int128 *v390;
  __int128 v391;
  unint64_t v392;
  unint64_t v393;
  __int128 v394;
  _QWORD *v395;
  uint64_t v396;
  uint64_t v397;
  _QWORD *v398;
  uint64_t v399;
  unint64_t v400;
  unint64_t v401;
  void *v402;
  const void *v403;
  uint64_t v404;
  char *v405;
  char *v406;
  int v407;
  uint64_t *v408;
  uint64_t v409;
  size_t v410;
  uint64_t v411;
  _QWORD *v412;
  unint64_t v413;
  unint64_t v414;
  void (*v415)(unint64_t, unint64_t, uint64_t);
  _QWORD *v416;
  _QWORD *v417;
  _QWORD *v418;
  _QWORD *v419;
  _QWORD *v420;
  _QWORD *v421;
  id v422;
  _OWORD *v423;
  __int128 *v424;
  __int128 v425;
  unint64_t v426;
  unint64_t v427;
  __int128 v428;
  _QWORD *v429;
  uint64_t v430;
  uint64_t v431;
  _QWORD *v432;
  uint64_t v433;
  unint64_t v434;
  unint64_t v435;
  _QWORD *v436;
  _QWORD *v437;
  uint64_t result;
  unint64_t v439;
  unint64_t v440;
  unint64_t v441;
  uint64_t v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  uint64_t v447;
  uint64_t v448;
  void *v449;
  size_t v450;
  unsigned int v451;
  size_t v452;
  size_t v453;
  size_t v454;
  unsigned int v455;
  unsigned int v456;
  size_t v457;
  unint64_t v458;
  uint64_t v459;
  uint64_t v460;
  size_t __n;
  size_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  unsigned int v470;
  unsigned int v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  unint64_t v477;
  unint64_t v478;
  uint64_t v479;
  uint64_t v480;
  size_t v481;
  uint64_t v482;
  unint64_t v483;
  int v484;
  unsigned int v485;
  unint64_t v486;
  uint64_t v487;
  uint64_t v488;
  size_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t AssociatedTypeWitness;
  unint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  size_t v501;
  size_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  unint64_t v507;
  uint64_t v508;
  unint64_t v509;
  size_t v510;
  unint64_t v512;
  unint64_t v513;
  uint64_t v514;
  void *v515;
  void *v516;
  uint64_t v517;
  void *v518;
  void *v519;
  uint64_t v520;
  const void *v521;
  uint64_t v522;
  uint64_t v523;
  const void *v524;
  unint64_t v526;

  v520 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v474 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v474 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  v467 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v467 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v464 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v464 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v12 | 7;
  v14 = v10 | v5 | v12;
  v491 = v3;
  v15 = *(_DWORD *)(v8 + 84);
  v456 = *(_DWORD *)(v6 + 84);
  if (v456 > v15)
    v15 = *(_DWORD *)(v6 + 84);
  v451 = v15;
  if (v15 <= 0x7FFFFFFE)
    v15 = 2147483646;
  v471 = v15;
  v485 = *(_DWORD *)(v3 + 84);
  if (v15 <= v485)
    v15 = *(_DWORD *)(v3 + 84);
  v16 = *(_DWORD *)(v11 + 84);
  if (v16 <= 0x7FFFFFFE)
    v17 = 2147483646;
  else
    v17 = *(_DWORD *)(v11 + 84);
  if (v15 > v17)
    v17 = v15;
  v455 = v17;
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v17;
  v484 = v18;
  v470 = *(_DWORD *)(v11 + 84);
  v19 = v16 == 0;
  v487 = v4 + v5;
  v503 = v5;
  v490 = v4 + v10;
  v497 = v10;
  v472 = *(_QWORD *)(v6 + 64) + 7;
  v473 = v6;
  v465 = v9 + 8;
  v500 = v9;
  v466 = v8;
  v459 = *(_QWORD *)(v8 + 64) + 7;
  v468 = v13 + 16;
  v478 = ((((v459 + ((v9 + 8 + (v472 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v469 = v12 + 12;
  v463 = *(_QWORD *)(v464 - 8);
  v20 = *(_QWORD *)(v11 + 64);
  v462 = v20 + v12;
  v450 = v20 + 12;
  v460 = v12 + 10;
  v21 = (v12
       + 10
       + ((((((v20 + 12 + ((v20 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  v481 = v20;
  if (v19)
    ++v20;
  v489 = v20;
  v486 = v21;
  v457 = v20 + 7;
  v482 = (v13 + 16 + ((v4 + v10 + ((v4 + v5) & ~v5)) & ~v10) + v478) & ~v13;
  v458 = ((((((((((v20 + 7 + v21) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v494 = v10 | v5 | v12;
  v483 = v14 + v4;
  v477 = ((((v482 + v458 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  v22 = v477 + ((v14 + v4) & ~v14);
  v23 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v480 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v480 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v509 = (v22 + v25) & ~v25;
  v26 = *(_DWORD *)(v24 + 84);
  v479 = v24;
  v27 = *(_QWORD *)(v24 + 64);
  if (v26)
    v28 = v27;
  else
    v28 = v27 + 1;
  v476 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v476 - 8);
  v30 = *(_DWORD *)(v29 + 80) & 0xF8;
  v31 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = v30 | v33 | 7;
  v35 = *(unsigned int *)(v29 + 84);
  if (v35 <= *(_DWORD *)(v32 + 84))
    v36 = *(_DWORD *)(v32 + 84);
  else
    v36 = *(_DWORD *)(v29 + 84);
  if (v36 <= 0x7FFFFFFE)
    v37 = 2147483646;
  else
    v37 = v36;
  v475 = v29;
  v38 = *(_QWORD *)(v29 + 64) + 7;
  v39 = *(_QWORD *)(v32 + 64) + 7;
  v40 = ((((v39 + ((v33 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  __n = v28;
  v41 = ((((((v28 + v34 + v509) & ~v34) + v40 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v42 = v4 + v25;
  v517 = v25;
  v510 = v28 + v34;
  v43 = *(_QWORD *)(v520 - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v4 + v44;
  v46 = *(_QWORD *)(v43 + 64);
  if (!*(_DWORD *)(v43 + 84))
    ++v46;
  v47 = ((v23 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 > v47)
    v47 = v4;
  if (v41 <= v40 + ((v28 + v34 + ((v4 + v25) & ~v25)) & ~v34) + 16)
    v41 = v40 + ((v28 + v34 + ((v4 + v25) & ~v25)) & ~v34) + 16;
  if (((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= ((v4 + v44) & ~v44) + v46)
    v48 = ((v4 + v44) & ~v44) + v46;
  else
    v48 = ((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v47 > v41)
    v41 = v47;
  if (v41 <= v48)
    v41 = v48;
  v526 = v41;
  v452 = v46;
  v50 = v37;
  v51 = ~v494;
  v52 = ~v503;
  v53 = ~(v12 | 7);
  v514 = ~v12;
  v54 = ~v25;
  v55 = ~v34;
  v56 = ~v33;
  v57 = ~v44;
  switch(*(_BYTE *)(a2 + v41))
  {
    case 0:
      v58 = ~v497;
      v504 = ~v500;
      v59 = v53;
      v60 = *(void (**)(uint64_t))(v491 + 16);
      v61 = a1;
      v60(a1);
      v518 = (void *)((v483 + a1) & v51);
      v521 = (const void *)((v483 + a2) & v51);
      if (v485 == v484)
      {
        v62 = (*(uint64_t (**)(void))(v491 + 48))();
        v63 = v487;
        v64 = v59;
        v65 = ~v497;
        if (!v62)
          goto LABEL_124;
        goto LABEL_122;
      }
      v63 = v487;
      v91 = (v487 + ((v483 + a2) & v51)) & v52;
      v65 = ~v497;
      v92 = (v490 + v91) & v58;
      if (v471 == v484)
      {
        if (v456 == v471)
        {
          v93 = (*(uint64_t (**)(unint64_t))(v473 + 48))((v490 + v91) & v58);
LABEL_120:
          v65 = ~v497;
          goto LABEL_121;
        }
        v127 = (unint64_t *)((v472 + v92) & 0xFFFFFFFFFFFFFFF8);
        if (v451 > 0x7FFFFFFE)
        {
          v93 = (*(uint64_t (**)(unint64_t))(v466 + 48))(((unint64_t)v127 + v465) & v504);
          goto LABEL_120;
        }
        v128 = *v127;
        if (v128 >= 0xFFFFFFFF)
          LODWORD(v128) = -1;
        v64 = v59;
        if ((v128 + 1) >= 2)
          goto LABEL_122;
      }
      else
      {
        v107 = v478 + v92;
        if ((v455 & 0x80000000) == 0)
        {
          v108 = *(_QWORD *)(v107 + 8);
          if (v108 >= 0xFFFFFFFF)
            LODWORD(v108) = -1;
          v93 = v108 + 1;
LABEL_121:
          v64 = v59;
          if (!v93)
          {
LABEL_124:
            v91 = ((unint64_t)v521 + v63) & v52;
            v92 = (v490 + v91) & v65;
            goto LABEL_125;
          }
LABEL_122:
          v137 = v518;
          v138 = v521;
          memcpy(v518, v521, v477);
          v139 = v482;
LABEL_123:
          v140 = v489;
          goto LABEL_176;
        }
        v135 = (v469 + ((v468 + v107) & v59)) & v514;
        if (v470 > 0x7FFFFFFD)
        {
          v93 = (*(uint64_t (**)(uint64_t))(v463 + 48))(v135);
          goto LABEL_120;
        }
        v64 = v59;
        v440 = *(_QWORD *)(((v450 + ((v462 + v135) & v514)) & 0xFFFFFFFFFFFFF8) + 8);
        if (v440 >= 0xFFFFFFFF)
          LODWORD(v440) = -1;
        if ((v440 + 1) >= 2)
          goto LABEL_122;
      }
LABEL_125:
      v141 = v65;
      ((void (*)(void *, const void *, uint64_t))v60)(v518, v521, AssociatedTypeWitness);
      v142 = ((unint64_t)v518 + v63) & v52;
      ((void (*)(unint64_t, unint64_t, uint64_t))v60)(v142, v91, AssociatedTypeWitness);
      v143 = (v490 + v142) & v141;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v473 + 16))(v143, v92, v474);
      v144 = (_QWORD *)((v472 + v143) & 0xFFFFFFFFFFFFFFF8);
      v145 = (_QWORD *)((v472 + v92) & 0xFFFFFFFFFFFFFFF8);
      *v144 = *v145;
      v146 = ((unint64_t)v144 + v465) & v504;
      v147 = ((unint64_t)v145 + v465) & v504;
      v148 = *(void (**)(unint64_t, unint64_t, uint64_t))(v466 + 16);
      swift_bridgeObjectRetain();
      v148(v146, v147, v467);
      v149 = (_QWORD *)((v459 + v146) & 0xFFFFFFFFFFFFF8);
      v150 = (_QWORD *)((v459 + v147) & 0xFFFFFFFFFFFFF8);
      *v149 = *v150;
      v151 = (_QWORD *)(((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8);
      v152 = (_QWORD *)(((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v151 = *v152;
      v151[1] = v152[1];
      v153 = (_QWORD *)(v478 + v143);
      *v153 = *(_QWORD *)(v478 + v92);
      v153[1] = *(_QWORD *)(v478 + v92 + 8);
      v154 = (v468 + v478 + v92) & v64;
      v155 = (v468 + v478 + v143) & v64;
      *(_BYTE *)v155 = *(_BYTE *)v154;
      v156 = v155 | 4;
      v157 = *(_DWORD *)(v154 | 4);
      *(_BYTE *)(v156 + 4) = *(_BYTE *)((v154 | 4) + 4);
      *(_DWORD *)v156 = v157;
      *(_WORD *)(v155 + 10) = *(_WORD *)(v154 + 10);
      v158 = (v469 + v155) & v514;
      v512 = v154;
      v159 = (v469 + v154) & v514;
      v160 = *(void (**)(unint64_t, unint64_t, uint64_t))(v463 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v160(v158, v159, v464);
      v161 = (v462 + v158) & v514;
      v162 = (v462 + v159) & v514;
      v160(v161, v162, v464);
      v163 = (_BYTE *)(v161 + v481);
      *v163 = *(_BYTE *)(v162 + v481);
      v163[1] = *(_BYTE *)(v162 + v481 + 1);
      v163[2] = *(_BYTE *)(v162 + v481 + 2);
      v163[3] = *(_BYTE *)(v162 + v481 + 3);
      v163[4] = *(_BYTE *)(v162 + v481 + 4);
      v164 = (v161 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      v165 = (v162 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v164 = *(_QWORD *)v165;
      *(_QWORD *)(v164 + 8) = *(_QWORD *)(v165 + 8);
      *(_BYTE *)(v164 + 16) = *(_BYTE *)(v165 + 16);
      *(_BYTE *)(v164 + 17) = *(_BYTE *)(v165 + 17);
      *(_BYTE *)(v164 + 18) = *(_BYTE *)(v165 + 18);
      *(_BYTE *)(v164 + 19) = *(_BYTE *)(v165 + 19);
      v166 = (v164 + 27) & 0xFFFFFFFFFFFFFFF8;
      v167 = (v165 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v166 = *(_QWORD *)v167;
      *(_BYTE *)(v166 + 8) = *(_BYTE *)(v167 + 8);
      *(_BYTE *)(v166 + 9) = *(_BYTE *)(v167 + 9);
      *(_BYTE *)(v166 + 10) = *(_BYTE *)(v167 + 10);
      *(_BYTE *)(v166 + 11) = *(_BYTE *)(v167 + 11);
      *(_BYTE *)(v166 + 12) = *(_BYTE *)(v167 + 12);
      v168 = (_QWORD *)((v164 + 47) & 0xFFFFFFFFFFFFF8);
      v169 = (_QWORD *)((v165 + 47) & 0xFFFFFFFFFFFFF8);
      *v168 = *v169;
      v170 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
      v171 = ((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v170 = *(_QWORD *)v171;
      *(_BYTE *)(v170 + 8) = *(_BYTE *)(v171 + 8);
      *(_BYTE *)(v170 + 9) = *(_BYTE *)(v171 + 9);
      v172 = (void *)((v460 + v170) & v514);
      v173 = (const void *)((v460 + v171) & v514);
      v174 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v463 + 48);
      swift_bridgeObjectRetain();
      if (v174(v173, 1, v464))
      {
        memcpy(v172, v173, v489);
      }
      else
      {
        v160((unint64_t)v172, (unint64_t)v173, v464);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v463 + 56))(v172, 0, 1, v464);
      }
      v175 = (_QWORD *)(((unint64_t)v172 + v457) & 0xFFFFFFFFFFFFFFF8);
      v176 = (_QWORD *)(((unint64_t)v173 + v457) & 0xFFFFFFFFFFFFFFF8);
      *v175 = *v176;
      v177 = ((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8;
      v178 = ((unint64_t)v176 + 15) & 0xFFFFFFFFFFFFFFF8;
      v179 = *(_QWORD *)v178;
      *(_BYTE *)(v177 + 8) = *(_BYTE *)(v178 + 8);
      *(_QWORD *)v177 = v179;
      v180 = (_QWORD *)(((unint64_t)v175 + 31) & 0xFFFFFFFFFFFFF8);
      v181 = (_QWORD *)(((unint64_t)v176 + 31) & 0xFFFFFFFFFFFFF8);
      *v180 = *v181;
      v182 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
      v183 = (uint64_t *)(((unint64_t)v181 + 15) & 0xFFFFFFFFFFFFFFF8);
      v184 = v183[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v184 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)v182 = *(_OWORD *)v183;
      }
      else
      {
        v185 = *v183;
        sub_23AAAE668(*v183, v184);
        *(_QWORD *)v182 = v185;
        *(_QWORD *)(v182 + 8) = v184;
      }
      v186 = (v182 + 19) & 0xFFFFFFFFFFFFFFF8;
      v187 = ((unint64_t)v183 + 19) & 0xFFFFFFFFFFFFFFF8;
      v188 = *(_QWORD *)v187;
      *(_BYTE *)(v186 + 8) = *(_BYTE *)(v187 + 8);
      *(_QWORD *)v186 = v188;
      *(_BYTE *)(v186 + 9) = *(_BYTE *)(v187 + 9);
      v189 = (v186 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v190 = (v187 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v191 = *(_DWORD *)v190;
      *(_BYTE *)(v189 + 4) = *(_BYTE *)(v190 + 4);
      *(_DWORD *)v189 = v191;
      v192 = (_QWORD *)((v186 + 25) & 0xFFFFFFFFFFFFFFF8);
      v193 = (_QWORD *)((v187 + 25) & 0xFFFFFFFFFFFFFFF8);
      *v192 = *v193;
      v192[1] = v193[1];
      v194 = v458 + v155;
      v195 = (__int128 *)(v458 + v512);
      v196 = *(_QWORD *)(v458 + v512 + 16);
      if (v196 >= 0xFFFFFFFF)
        LODWORD(v196) = -1;
      v197 = v196 - 1;
      swift_bridgeObjectRetain();
      if (v197 < 0)
      {
        *(_QWORD *)v194 = *(_QWORD *)v195;
        *(_BYTE *)(v194 + 8) = *((_BYTE *)v195 + 8);
        *(_BYTE *)(v194 + 9) = *((_BYTE *)v195 + 9);
        v210 = (void *)*((_QWORD *)v195 + 2);
        v211 = v210;
        *(_QWORD *)(v194 + 16) = v210;
        v212 = (void *)*((_QWORD *)v195 + 3);
        v213 = v212;
        *(_QWORD *)(v194 + 24) = v212;
        *(_BYTE *)(v194 + 32) = *((_BYTE *)v195 + 32);
        *(_BYTE *)(v194 + 33) = *((_BYTE *)v195 + 33);
        *(_BYTE *)(v194 + 34) = *((_BYTE *)v195 + 34);
        *(_QWORD *)(v194 + 40) = *((_QWORD *)v195 + 5);
        *(_QWORD *)(v194 + 48) = *((_QWORD *)v195 + 6);
        *(_QWORD *)(v194 + 56) = *((_QWORD *)v195 + 7);
        *(_QWORD *)(v194 + 64) = *((_QWORD *)v195 + 8);
        *(_BYTE *)(v194 + 72) = *((_BYTE *)v195 + 72);
        *(_QWORD *)(v194 + 80) = *((_QWORD *)v195 + 10);
        *(_QWORD *)(v194 + 88) = *((_QWORD *)v195 + 11);
        v515 = (void *)*((_QWORD *)v195 + 12);
        *(_QWORD *)(v194 + 96) = v515;
        *(_BYTE *)(v194 + 104) = *((_BYTE *)v195 + 104);
        *(_BYTE *)(v194 + 105) = *((_BYTE *)v195 + 105);
        *(_QWORD *)(v194 + 112) = *((_QWORD *)v195 + 14);
        *(_QWORD *)(v194 + 120) = *((_QWORD *)v195 + 15);
        *(_QWORD *)(v194 + 128) = *((_QWORD *)v195 + 16);
        *(_QWORD *)(v194 + 136) = *((_QWORD *)v195 + 17);
        *(_QWORD *)(v194 + 144) = *((_QWORD *)v195 + 18);
        *(_QWORD *)(v194 + 152) = *((_QWORD *)v195 + 19);
        *(_QWORD *)(v194 + 160) = *((_QWORD *)v195 + 20);
        *(_QWORD *)(v194 + 168) = *((_QWORD *)v195 + 21);
        *(_BYTE *)(v194 + 176) = *((_BYTE *)v195 + 176);
        *(_QWORD *)(v194 + 184) = *((_QWORD *)v195 + 23);
        v214 = *((_QWORD *)v195 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v215 = v515;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v214)
        {
          *(_QWORD *)(v194 + 192) = v214;
          *(_QWORD *)(v194 + 200) = *((_QWORD *)v195 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v194 + 192) = v195[12];
        }
        v61 = a1;
        v140 = v481;
        v139 = v482;
        *(_QWORD *)(v194 + 208) = *((_QWORD *)v195 + 26);
        *(_QWORD *)(v194 + 216) = *((_QWORD *)v195 + 27);
        *(_QWORD *)(v194 + 224) = *((_QWORD *)v195 + 28);
        *(_QWORD *)(v194 + 232) = *((_QWORD *)v195 + 29);
        *(_QWORD *)(v194 + 240) = *((_QWORD *)v195 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v198 = *v195;
        v199 = v195[1];
        v200 = v195[3];
        *(_OWORD *)(v194 + 32) = v195[2];
        *(_OWORD *)(v194 + 48) = v200;
        *(_OWORD *)v194 = v198;
        *(_OWORD *)(v194 + 16) = v199;
        v201 = v195[4];
        v202 = v195[5];
        v203 = v195[7];
        *(_OWORD *)(v194 + 96) = v195[6];
        *(_OWORD *)(v194 + 112) = v203;
        *(_OWORD *)(v194 + 64) = v201;
        *(_OWORD *)(v194 + 80) = v202;
        v204 = v195[8];
        v205 = v195[9];
        v206 = v195[11];
        *(_OWORD *)(v194 + 160) = v195[10];
        *(_OWORD *)(v194 + 176) = v206;
        *(_OWORD *)(v194 + 128) = v204;
        *(_OWORD *)(v194 + 144) = v205;
        v207 = v195[12];
        v208 = v195[13];
        v209 = v195[14];
        *(_QWORD *)(v194 + 240) = *((_QWORD *)v195 + 30);
        *(_OWORD *)(v194 + 208) = v208;
        *(_OWORD *)(v194 + 224) = v209;
        *(_OWORD *)(v194 + 192) = v207;
        v140 = v481;
        v139 = v482;
      }
      v372 = (_OWORD *)((v194 + 255) & 0xFFFFFFFFFFFFFFF8);
      v373 = (__int128 *)(((unint64_t)v195 + 255) & 0xFFFFFFFFFFFFFFF8);
      v374 = *v373;
      *(_OWORD *)((char *)v372 + 9) = *(__int128 *)((char *)v373 + 9);
      *v372 = v374;
      v375 = (v194 + 287) & 0xFFFFFFFFFFFFFFF8;
      v376 = ((unint64_t)v195 + 287) & 0xFFFFFFFFFFFFFFF8;
      v377 = *(_OWORD *)v376;
      *(_BYTE *)(v375 + 16) = *(_BYTE *)(v376 + 16);
      *(_OWORD *)v375 = v377;
      v378 = (_QWORD *)((v194 + 311) & 0xFFFFFFFFFFFFF8);
      v379 = ((unint64_t)v195 + 311) & 0xFFFFFFFFFFFFF8;
      v380 = *(_QWORD *)v379;
      v379 += 15;
      *v378 = v380;
      v381 = (_QWORD *)(((unint64_t)v378 + 15) & 0xFFFFFFFFFFFFFFF8);
      v382 = *(_QWORD *)(v379 & 0xFFFFFFFFFFFFFFF8);
      v383 = *(_QWORD *)((v379 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_23AA7F2D4(v382, v383);
      *v381 = v382;
      v381[1] = v383;
      v137 = v518;
      v138 = v521;
      if (!v470)
        goto LABEL_123;
LABEL_176:
      v384 = ((((v139
               + ((((((((((v486 + v140 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v385 = (_QWORD *)(((unint64_t)v137 + v384) & 0xFFFFFFFFFFFFFFF8);
      v386 = (_QWORD *)(((unint64_t)v138 + v384) & 0xFFFFFFFFFFFFFFF8);
      *v385 = *v386;
      v387 = *(void **)(((unint64_t)v386 + 15) & 0xFFFFFFFFFFFFF8);
      *(_QWORD *)(((unint64_t)v385 + 15) & 0xFFFFFFFFFFFFF8) = v387;
      *(_BYTE *)(v61 + v526) = 0;
      v388 = v387;
      return v61;
    case 1:
      v66 = ~v497;
      v505 = ~v500;
      v447 = ~v517;
      v448 = v53;
      v442 = ~v34;
      v443 = v50;
      v444 = v36;
      v445 = v35;
      v446 = *(_DWORD *)(v32 + 84);
      v522 = v38;
      v453 = v33 + 8;
      v495 = *(_QWORD *)(v31 - 8);
      v498 = v31;
      v501 = ((((v39 + ((v33 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v67 = *(void (**)(uint64_t))(v491 + 16);
      v67(a1);
      v449 = (void *)((v483 + a1) & v51);
      v68 = (const void *)((v483 + a2) & v51);
      if (v485 == v484)
      {
        v69 = (*(uint64_t (**)(const void *))(v491 + 48))(v68);
        v70 = v487;
        v71 = v448;
        v72 = (void *)((v483 + a1) & v51);
        v73 = v66;
        if (!v69)
          goto LABEL_142;
        goto LABEL_140;
      }
      v70 = v487;
      v94 = ((unint64_t)v68 + v487) & v52;
      v73 = v66;
      v95 = (v490 + v94) & v66;
      if (v471 == v484)
      {
        if (v456 == v471)
        {
          v96 = (*(uint64_t (**)(unint64_t))(v473 + 48))((v490 + v94) & v66);
LABEL_138:
          v73 = v66;
          goto LABEL_139;
        }
        v129 = (unint64_t *)((v472 + v95) & 0xFFFFFFFFFFFFFFF8);
        if (v451 > 0x7FFFFFFE)
        {
          v96 = (*(uint64_t (**)(unint64_t))(v466 + 48))(((unint64_t)v129 + v465) & v505);
          goto LABEL_138;
        }
        v130 = *v129;
        if (v130 >= 0xFFFFFFFF)
          LODWORD(v130) = -1;
        v131 = (v130 + 1) >= 2;
        v71 = v448;
      }
      else
      {
        v109 = v478 + v95;
        if ((v455 & 0x80000000) == 0)
        {
          v110 = *(_QWORD *)(v109 + 8);
          if (v110 >= 0xFFFFFFFF)
            LODWORD(v110) = -1;
          v96 = v110 + 1;
LABEL_139:
          v71 = v448;
          v72 = v449;
          if (!v96)
          {
LABEL_142:
            v94 = ((unint64_t)v68 + v70) & v52;
            v95 = (v490 + v94) & v73;
            goto LABEL_143;
          }
LABEL_140:
          memcpy(v72, v68, v477);
          v216 = v482;
          goto LABEL_141;
        }
        v71 = v448;
        v136 = (v469 + ((v468 + v109) & v448)) & v514;
        if (v470 > 0x7FFFFFFD)
        {
          v96 = (*(uint64_t (**)(uint64_t))(v463 + 48))(v136);
          goto LABEL_138;
        }
        v441 = *(_QWORD *)(((v450 + ((v462 + v136) & v514)) & 0xFFFFFFFFFFFFF8) + 8);
        if (v441 >= 0xFFFFFFFF)
          LODWORD(v441) = -1;
        v131 = (v441 + 1) >= 2;
      }
      v72 = v449;
      if (!v131)
      {
LABEL_143:
        v488 = v56;
        v218 = v71;
        v219 = v73;
        ((void (*)(void *, const void *, uint64_t))v67)(v72, v68, AssociatedTypeWitness);
        v220 = ((unint64_t)v72 + v70) & v52;
        ((void (*)(unint64_t, unint64_t, uint64_t))v67)(v220, v94, AssociatedTypeWitness);
        v221 = (v490 + v220) & v219;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v473 + 16))(v221, v95, v474);
        v222 = (_QWORD *)((v472 + v221) & 0xFFFFFFFFFFFFFFF8);
        v223 = (_QWORD *)((v472 + v95) & 0xFFFFFFFFFFFFFFF8);
        *v222 = *v223;
        v224 = ((unint64_t)v222 + v465) & v505;
        v225 = ((unint64_t)v223 + v465) & v505;
        v226 = *(void (**)(unint64_t, unint64_t, uint64_t))(v466 + 16);
        swift_bridgeObjectRetain();
        v226(v224, v225, v467);
        v227 = (_QWORD *)((v459 + v224) & 0xFFFFFFFFFFFFF8);
        v228 = (_QWORD *)((v459 + v225) & 0xFFFFFFFFFFFFF8);
        *v227 = *v228;
        v229 = (_QWORD *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
        v230 = (_QWORD *)(((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v229 = *v230;
        v229[1] = v230[1];
        v231 = (_QWORD *)(v478 + v221);
        *v231 = *(_QWORD *)(v478 + v95);
        v231[1] = *(_QWORD *)(v478 + v95 + 8);
        v232 = (v468 + v478 + v221) & v218;
        v233 = (v468 + v478 + v95) & v218;
        *(_BYTE *)v232 = *(_BYTE *)v233;
        v234 = v232 | 4;
        v235 = *(_DWORD *)(v233 | 4);
        *(_BYTE *)(v234 + 4) = *(_BYTE *)((v233 | 4) + 4);
        *(_DWORD *)v234 = v235;
        *(_WORD *)(v232 + 10) = *(_WORD *)(v233 + 0xA);
        v507 = v232;
        v236 = (v469 + v232) & v514;
        v493 = v233;
        v237 = (v469 + v233) & v514;
        v238 = *(void (**)(unint64_t, unint64_t, uint64_t))(v463 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v238(v236, v237, v464);
        v239 = (v462 + v237) & v514;
        v238((v462 + v236) & v514, v239, v464);
        v240 = (_BYTE *)(((v462 + v236) & v514) + v481);
        *v240 = *(_BYTE *)(v239 + v481);
        v240[1] = *(_BYTE *)(v239 + v481 + 1);
        v240[2] = *(_BYTE *)(v239 + v481 + 2);
        v240[3] = *(_BYTE *)(v239 + v481 + 3);
        v240[4] = *(_BYTE *)(v239 + v481 + 4);
        v241 = (unint64_t)(v240 + 12) & 0xFFFFFFFFFFFFFFF8;
        v242 = (v239 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v241 = *(_QWORD *)v242;
        *(_QWORD *)(v241 + 8) = *(_QWORD *)(v242 + 8);
        *(_BYTE *)(v241 + 16) = *(_BYTE *)(v242 + 16);
        *(_BYTE *)(v241 + 17) = *(_BYTE *)(v242 + 17);
        *(_BYTE *)(v241 + 18) = *(_BYTE *)(v242 + 18);
        *(_BYTE *)(v241 + 19) = *(_BYTE *)(v242 + 19);
        v243 = (v241 + 27) & 0xFFFFFFFFFFFFFFF8;
        v244 = (v242 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v243 = *(_QWORD *)v244;
        *(_BYTE *)(v243 + 8) = *(_BYTE *)(v244 + 8);
        *(_BYTE *)(v243 + 9) = *(_BYTE *)(v244 + 9);
        *(_BYTE *)(v243 + 10) = *(_BYTE *)(v244 + 10);
        *(_BYTE *)(v243 + 11) = *(_BYTE *)(v244 + 11);
        *(_BYTE *)(v243 + 12) = *(_BYTE *)(v244 + 12);
        v245 = (_QWORD *)((v241 + 47) & 0xFFFFFFFFFFFFF8);
        v246 = (_QWORD *)((v242 + 47) & 0xFFFFFFFFFFFFF8);
        *v245 = *v246;
        v247 = ((unint64_t)v245 + 15) & 0xFFFFFFFFFFFFFFF8;
        v248 = ((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v247 = *(_QWORD *)v248;
        *(_BYTE *)(v247 + 8) = *(_BYTE *)(v248 + 8);
        *(_BYTE *)(v247 + 9) = *(_BYTE *)(v248 + 9);
        v249 = (void *)((v460 + v247) & v514);
        v250 = (const void *)((v460 + v248) & v514);
        v251 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v463 + 48);
        swift_bridgeObjectRetain();
        if (v251(v250, 1, v464))
        {
          memcpy(v249, v250, v489);
        }
        else
        {
          v238((unint64_t)v249, (unint64_t)v250, v464);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v463 + 56))(v249, 0, 1, v464);
        }
        v56 = v488;
        v252 = (_QWORD *)(((unint64_t)v249 + v457) & 0xFFFFFFFFFFFFFFF8);
        v253 = (_QWORD *)(((unint64_t)v250 + v457) & 0xFFFFFFFFFFFFFFF8);
        *v252 = *v253;
        v254 = ((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8;
        v255 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
        v256 = *(_QWORD *)v255;
        *(_BYTE *)(v254 + 8) = *(_BYTE *)(v255 + 8);
        *(_QWORD *)v254 = v256;
        v257 = (_QWORD *)(((unint64_t)v252 + 31) & 0xFFFFFFFFFFFFF8);
        v258 = (_QWORD *)(((unint64_t)v253 + 31) & 0xFFFFFFFFFFFFF8);
        *v257 = *v258;
        v259 = ((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8;
        v260 = (uint64_t *)(((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8);
        v261 = v260[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v261 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)v259 = *(_OWORD *)v260;
        }
        else
        {
          v262 = *v260;
          sub_23AAAE668(*v260, v261);
          *(_QWORD *)v259 = v262;
          *(_QWORD *)(v259 + 8) = v261;
        }
        v263 = (v259 + 19) & 0xFFFFFFFFFFFFFFF8;
        v264 = ((unint64_t)v260 + 19) & 0xFFFFFFFFFFFFFFF8;
        v265 = *(_QWORD *)v264;
        *(_BYTE *)(v263 + 8) = *(_BYTE *)(v264 + 8);
        *(_QWORD *)v263 = v265;
        *(_BYTE *)(v263 + 9) = *(_BYTE *)(v264 + 9);
        v266 = (v263 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v267 = (v264 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v268 = *(_DWORD *)v267;
        *(_BYTE *)(v266 + 4) = *(_BYTE *)(v267 + 4);
        *(_DWORD *)v266 = v268;
        v269 = (_QWORD *)((v263 + 25) & 0xFFFFFFFFFFFFFFF8);
        v270 = (_QWORD *)((v264 + 25) & 0xFFFFFFFFFFFFFFF8);
        *v269 = *v270;
        v269[1] = v270[1];
        v271 = v458 + v507;
        v272 = (__int128 *)(v458 + v493);
        v273 = *(_QWORD *)(v458 + v493 + 16);
        if (v273 >= 0xFFFFFFFF)
          LODWORD(v273) = -1;
        v274 = v273 - 1;
        swift_bridgeObjectRetain();
        if (v274 < 0)
        {
          *(_QWORD *)v271 = *(_QWORD *)v272;
          *(_BYTE *)(v271 + 8) = *((_BYTE *)v272 + 8);
          *(_BYTE *)(v271 + 9) = *((_BYTE *)v272 + 9);
          v287 = (void *)*((_QWORD *)v272 + 2);
          v288 = v287;
          *(_QWORD *)(v271 + 16) = v287;
          v289 = (void *)*((_QWORD *)v272 + 3);
          v290 = v289;
          *(_QWORD *)(v271 + 24) = v289;
          *(_BYTE *)(v271 + 32) = *((_BYTE *)v272 + 32);
          *(_BYTE *)(v271 + 33) = *((_BYTE *)v272 + 33);
          *(_BYTE *)(v271 + 34) = *((_BYTE *)v272 + 34);
          *(_QWORD *)(v271 + 40) = *((_QWORD *)v272 + 5);
          *(_QWORD *)(v271 + 48) = *((_QWORD *)v272 + 6);
          *(_QWORD *)(v271 + 56) = *((_QWORD *)v272 + 7);
          *(_QWORD *)(v271 + 64) = *((_QWORD *)v272 + 8);
          *(_BYTE *)(v271 + 72) = *((_BYTE *)v272 + 72);
          *(_QWORD *)(v271 + 80) = *((_QWORD *)v272 + 10);
          *(_QWORD *)(v271 + 88) = *((_QWORD *)v272 + 11);
          v291 = (void *)*((_QWORD *)v272 + 12);
          *(_QWORD *)(v271 + 96) = v291;
          *(_BYTE *)(v271 + 104) = *((_BYTE *)v272 + 104);
          *(_BYTE *)(v271 + 105) = *((_BYTE *)v272 + 105);
          *(_QWORD *)(v271 + 112) = *((_QWORD *)v272 + 14);
          *(_QWORD *)(v271 + 120) = *((_QWORD *)v272 + 15);
          *(_QWORD *)(v271 + 128) = *((_QWORD *)v272 + 16);
          *(_QWORD *)(v271 + 136) = *((_QWORD *)v272 + 17);
          *(_QWORD *)(v271 + 144) = *((_QWORD *)v272 + 18);
          *(_QWORD *)(v271 + 152) = *((_QWORD *)v272 + 19);
          *(_QWORD *)(v271 + 160) = *((_QWORD *)v272 + 20);
          *(_QWORD *)(v271 + 168) = *((_QWORD *)v272 + 21);
          *(_BYTE *)(v271 + 176) = *((_BYTE *)v272 + 176);
          *(_QWORD *)(v271 + 184) = *((_QWORD *)v272 + 23);
          v508 = *((_QWORD *)v272 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v292 = v291;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v508)
          {
            *(_QWORD *)(v271 + 192) = v508;
            *(_QWORD *)(v271 + 200) = *((_QWORD *)v272 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v271 + 192) = v272[12];
          }
          v217 = v481;
          v216 = v482;
          v56 = v488;
          *(_QWORD *)(v271 + 208) = *((_QWORD *)v272 + 26);
          *(_QWORD *)(v271 + 216) = *((_QWORD *)v272 + 27);
          *(_QWORD *)(v271 + 224) = *((_QWORD *)v272 + 28);
          *(_QWORD *)(v271 + 232) = *((_QWORD *)v272 + 29);
          *(_QWORD *)(v271 + 240) = *((_QWORD *)v272 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v275 = *v272;
          v276 = v272[1];
          v277 = v272[3];
          *(_OWORD *)(v271 + 32) = v272[2];
          *(_OWORD *)(v271 + 48) = v277;
          *(_OWORD *)v271 = v275;
          *(_OWORD *)(v271 + 16) = v276;
          v278 = v272[4];
          v279 = v272[5];
          v280 = v272[7];
          *(_OWORD *)(v271 + 96) = v272[6];
          *(_OWORD *)(v271 + 112) = v280;
          *(_OWORD *)(v271 + 64) = v278;
          *(_OWORD *)(v271 + 80) = v279;
          v281 = v272[8];
          v282 = v272[9];
          v283 = v272[11];
          *(_OWORD *)(v271 + 160) = v272[10];
          *(_OWORD *)(v271 + 176) = v283;
          *(_OWORD *)(v271 + 128) = v281;
          *(_OWORD *)(v271 + 144) = v282;
          v284 = v272[12];
          v285 = v272[13];
          v286 = v272[14];
          *(_QWORD *)(v271 + 240) = *((_QWORD *)v272 + 30);
          *(_OWORD *)(v271 + 208) = v285;
          *(_OWORD *)(v271 + 224) = v286;
          *(_OWORD *)(v271 + 192) = v284;
          v217 = v481;
          v216 = v482;
        }
        v389 = (_OWORD *)((v271 + 255) & 0xFFFFFFFFFFFFFFF8);
        v390 = (__int128 *)(((unint64_t)v272 + 255) & 0xFFFFFFFFFFFFFFF8);
        v391 = *v390;
        *(_OWORD *)((char *)v389 + 9) = *(__int128 *)((char *)v390 + 9);
        *v389 = v391;
        v392 = (v271 + 287) & 0xFFFFFFFFFFFFFFF8;
        v393 = ((unint64_t)v272 + 287) & 0xFFFFFFFFFFFFFFF8;
        v394 = *(_OWORD *)v393;
        *(_BYTE *)(v392 + 16) = *(_BYTE *)(v393 + 16);
        *(_OWORD *)v392 = v394;
        v395 = (_QWORD *)((v271 + 311) & 0xFFFFFFFFFFFFF8);
        v396 = ((unint64_t)v272 + 311) & 0xFFFFFFFFFFFFF8;
        v397 = *(_QWORD *)v396;
        v396 += 15;
        *v395 = v397;
        v398 = (_QWORD *)(((unint64_t)v395 + 15) & 0xFFFFFFFFFFFFFFF8);
        v399 = *(_QWORD *)(v396 & 0xFFFFFFFFFFFFFFF8);
        v400 = *(_QWORD *)((v396 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_23AA7F2D4(v399, v400);
        *v398 = v399;
        v398[1] = v400;
        v72 = v449;
        if (v470)
        {
LABEL_180:
          v401 = ((((v216
                   + ((((((((((v486 + v217 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v402 = (void *)(((unint64_t)v72 + v517 + v401) & v447);
          v403 = (const void *)(((unint64_t)v68 + v517 + v401) & v447);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v479 + 48))(v403, 1, v480))
          {
            memcpy(v402, v403, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v479 + 16))(v402, v403, v480);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v479 + 56))(v402, 0, 1, v480);
          }
          v404 = v522;
          v405 = (char *)(((unint64_t)v402 + v510) & v442);
          v406 = (char *)(((unint64_t)v403 + v510) & v442);
          if (v445 == v443)
          {
            v407 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v475 + 48))(v406, v445, v476);
          }
          else
          {
            v408 = (uint64_t *)((unint64_t)&v406[v522] & 0xFFFFFFFFFFFFFFF8);
            if (v444 <= 0x7FFFFFFE)
            {
              v409 = *v408;
              if ((unint64_t)*v408 >= 0xFFFFFFFF)
                LODWORD(v409) = -1;
              if ((v409 + 1) >= 2)
                goto LABEL_192;
              goto LABEL_194;
            }
            v407 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v495 + 48))(((unint64_t)v408 + v453) & v56, v446, v498);
          }
          v404 = v522;
          if (v407)
          {
LABEL_192:
            v410 = v501;
            memcpy(v405, v406, v501);
LABEL_195:
            *(_QWORD *)&v405[v410] = *(_QWORD *)&v406[v410];
            v420 = (_QWORD *)((unint64_t)&v405[v410 + 15] & 0xFFFFFFFFFFFFF8);
            v421 = (_QWORD *)((unint64_t)&v406[v410 + 15] & 0xFFFFFFFFFFFFFFF8);
            *v420 = *v421;
            v124 = *(void **)(((unint64_t)v421 + 15) & 0xFFFFFFFFFFFFF8);
            *(_QWORD *)(((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFF8) = v124;
            v125 = 1;
            v61 = a1;
            v126 = v526;
LABEL_196:
            *(_BYTE *)(v61 + v126) = v125;
            v422 = v124;
            return v61;
          }
          v408 = (uint64_t *)((unint64_t)&v406[v522] & 0xFFFFFFFFFFFFFFF8);
LABEL_194:
          v411 = v404;
          (*(void (**)(char *, char *, uint64_t))(v475 + 16))(v405, v406, v476);
          v412 = (_QWORD *)((unint64_t)&v405[v411] & 0xFFFFFFFFFFFFFFF8);
          *v412 = *v408;
          v413 = ((unint64_t)v412 + v453) & v56;
          v414 = ((unint64_t)v408 + v453) & v56;
          v415 = *(void (**)(unint64_t, unint64_t, uint64_t))(v495 + 16);
          swift_bridgeObjectRetain();
          v415(v413, v414, v498);
          v416 = (_QWORD *)((v39 + v413) & 0xFFFFFFFFFFFFF8);
          v417 = (_QWORD *)((v39 + v414) & 0xFFFFFFFFFFFFF8);
          *v416 = *v417;
          v418 = (_QWORD *)(((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8);
          v419 = (_QWORD *)(((unint64_t)v417 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v418 = *v419;
          v418[1] = v419[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v410 = v501;
          goto LABEL_195;
        }
LABEL_141:
        v217 = v489;
        goto LABEL_180;
      }
      goto LABEL_140;
    case 2:
      v74 = v50;
      v75 = v36;
      v76 = v35;
      v77 = *(unsigned int *)(v32 + 84);
      v523 = v38;
      v454 = v33 + 8;
      v496 = *(_QWORD *)(v31 - 8);
      v499 = v31;
      v502 = ((((v39 + ((v33 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v78 = v54;
      (*(void (**)(uint64_t))(v491 + 16))(a1);
      v61 = a1;
      v79 = (void *)((v42 + a1) & v78);
      v80 = (const void *)((v42 + a2) & v78);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v479 + 48))(v80, 1, v480))
      {
        memcpy(v79, v80, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v479 + 16))(v79, v80, v480);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v479 + 56))(v79, 0, 1, v480);
      }
      v100 = (char *)(((unint64_t)v79 + v510) & v55);
      v101 = (char *)(((unint64_t)v80 + v510) & v55);
      if ((_DWORD)v76 == v74)
      {
        v102 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v475 + 48))(v101, v76, v476);
      }
      else
      {
        v103 = v77;
        v104 = v523;
        v105 = (uint64_t *)((unint64_t)&v101[v523] & 0xFFFFFFFFFFFFFFF8);
        if (v75 <= 0x7FFFFFFE)
        {
          v106 = *v105;
          if ((unint64_t)*v105 >= 0xFFFFFFFF)
            LODWORD(v106) = -1;
          if ((v106 + 1) >= 2)
            goto LABEL_95;
          goto LABEL_97;
        }
        v102 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v496 + 48))(((unint64_t)v105 + v454) & v56, v103, v499);
      }
      v104 = v523;
      if (v102)
      {
LABEL_95:
        v113 = v502;
        memcpy(v100, v101, v502);
        goto LABEL_98;
      }
      v105 = (uint64_t *)((unint64_t)&v101[v523] & 0xFFFFFFFFFFFFFFF8);
LABEL_97:
      v114 = v104;
      (*(void (**)(char *, char *, uint64_t))(v475 + 16))(v100, v101, v476);
      v115 = (_QWORD *)((unint64_t)&v100[v114] & 0xFFFFFFFFFFFFFFF8);
      *v115 = *v105;
      v116 = ((unint64_t)v115 + v454) & v56;
      v117 = ((unint64_t)v105 + v454) & v56;
      v118 = *(void (**)(unint64_t, unint64_t, uint64_t))(v496 + 16);
      swift_bridgeObjectRetain();
      v118(v116, v117, v499);
      v119 = (_QWORD *)((v39 + v116) & 0xFFFFFFFFFFFFF8);
      v120 = (_QWORD *)((v39 + v117) & 0xFFFFFFFFFFFFF8);
      *v119 = *v120;
      v121 = (_QWORD *)(((unint64_t)v119 + 15) & 0xFFFFFFFFFFFFFFF8);
      v122 = (_QWORD *)(((unint64_t)v120 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v121 = *v122;
      v121[1] = v122[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v113 = v502;
LABEL_98:
      v123 = &v100[v113];
      *v123 = v101[v113];
      v124 = *(void **)&v101[v113 + 8];
      *((_QWORD *)v123 + 1) = v124;
      v125 = 2;
      v126 = v526;
      goto LABEL_196;
    case 3:
      v81 = ~v497;
      v506 = ~v500;
      v82 = v53;
      v83 = *(void (**)(uint64_t))(v491 + 16);
      v61 = a1;
      v83(a1);
      v519 = (void *)((v483 + a1) & v51);
      v524 = (const void *)((v483 + a2) & v51);
      if (v485 == v484)
      {
        v84 = (*(uint64_t (**)(void))(v491 + 48))();
        v85 = v487;
        v86 = v82;
        v87 = ~v497;
        if (!v84)
          goto LABEL_160;
        goto LABEL_158;
      }
      v85 = v487;
      v97 = (v487 + ((v483 + a2) & v51)) & v52;
      v87 = ~v497;
      v98 = (v490 + v97) & v81;
      if (v471 == v484)
      {
        if (v456 == v471)
        {
          v99 = (*(uint64_t (**)(unint64_t))(v473 + 48))((v490 + v97) & v81);
LABEL_156:
          v87 = ~v497;
          goto LABEL_157;
        }
        v132 = (unint64_t *)((v472 + v98) & 0xFFFFFFFFFFFFFFF8);
        if (v451 > 0x7FFFFFFE)
        {
          v99 = (*(uint64_t (**)(unint64_t))(v466 + 48))(((unint64_t)v132 + v465) & v506);
          goto LABEL_156;
        }
        v133 = *v132;
        if (v133 >= 0xFFFFFFFF)
          LODWORD(v133) = -1;
        v86 = v82;
        if ((v133 + 1) >= 2)
          goto LABEL_158;
      }
      else
      {
        v111 = v478 + v98;
        if ((v455 & 0x80000000) == 0)
        {
          v112 = *(_QWORD *)(v111 + 8);
          if (v112 >= 0xFFFFFFFF)
            LODWORD(v112) = -1;
          v99 = v112 + 1;
LABEL_157:
          v86 = v82;
          if (!v99)
          {
LABEL_160:
            v97 = ((unint64_t)v524 + v85) & v52;
            v98 = (v490 + v97) & v87;
            goto LABEL_161;
          }
LABEL_158:
          v293 = v519;
          v294 = v524;
          memcpy(v519, v524, v477);
          v295 = v482;
          goto LABEL_159;
        }
        v134 = (v469 + ((v468 + v111) & v82)) & v514;
        if (v470 > 0x7FFFFFFD)
        {
          v99 = (*(uint64_t (**)(uint64_t))(v463 + 48))(v134);
          goto LABEL_156;
        }
        v86 = v82;
        v439 = *(_QWORD *)(((v450 + ((v462 + v134) & v514)) & 0xFFFFFFFFFFFFF8) + 8);
        if (v439 >= 0xFFFFFFFF)
          LODWORD(v439) = -1;
        if ((v439 + 1) >= 2)
          goto LABEL_158;
      }
LABEL_161:
      v297 = v87;
      ((void (*)(void *, const void *, uint64_t))v83)(v519, v524, AssociatedTypeWitness);
      v298 = ((unint64_t)v519 + v85) & v52;
      ((void (*)(unint64_t, unint64_t, uint64_t))v83)(v298, v97, AssociatedTypeWitness);
      v299 = (v490 + v298) & v297;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v473 + 16))(v299, v98, v474);
      v300 = (_QWORD *)((v472 + v299) & 0xFFFFFFFFFFFFFFF8);
      v301 = (_QWORD *)((v472 + v98) & 0xFFFFFFFFFFFFFFF8);
      *v300 = *v301;
      v302 = ((unint64_t)v300 + v465) & v506;
      v303 = ((unint64_t)v301 + v465) & v506;
      v304 = *(void (**)(unint64_t, unint64_t, uint64_t))(v466 + 16);
      swift_bridgeObjectRetain();
      v304(v302, v303, v467);
      v305 = (_QWORD *)((v459 + v302) & 0xFFFFFFFFFFFFF8);
      v306 = (_QWORD *)((v459 + v303) & 0xFFFFFFFFFFFFF8);
      *v305 = *v306;
      v307 = (_QWORD *)(((unint64_t)v305 + 15) & 0xFFFFFFFFFFFFFFF8);
      v308 = (_QWORD *)(((unint64_t)v306 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v307 = *v308;
      v307[1] = v308[1];
      v309 = (_QWORD *)(v478 + v299);
      *v309 = *(_QWORD *)(v478 + v98);
      v309[1] = *(_QWORD *)(v478 + v98 + 8);
      v310 = (v468 + v478 + v98) & v86;
      v311 = (v468 + v478 + v299) & v86;
      *(_BYTE *)v311 = *(_BYTE *)v310;
      v312 = v311 | 4;
      v313 = *(_DWORD *)(v310 | 4);
      *(_BYTE *)(v312 + 4) = *(_BYTE *)((v310 | 4) + 4);
      *(_DWORD *)v312 = v313;
      *(_WORD *)(v311 + 10) = *(_WORD *)(v310 + 10);
      v314 = (v469 + v311) & v514;
      v513 = v310;
      v315 = (v469 + v310) & v514;
      v316 = *(void (**)(unint64_t, unint64_t, uint64_t))(v463 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v316(v314, v315, v464);
      v317 = (v462 + v314) & v514;
      v318 = (v462 + v315) & v514;
      v316(v317, v318, v464);
      v319 = (_BYTE *)(v317 + v481);
      *v319 = *(_BYTE *)(v318 + v481);
      v319[1] = *(_BYTE *)(v318 + v481 + 1);
      v319[2] = *(_BYTE *)(v318 + v481 + 2);
      v319[3] = *(_BYTE *)(v318 + v481 + 3);
      v319[4] = *(_BYTE *)(v318 + v481 + 4);
      v320 = (v317 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      v321 = (v318 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v320 = *(_QWORD *)v321;
      *(_QWORD *)(v320 + 8) = *(_QWORD *)(v321 + 8);
      *(_BYTE *)(v320 + 16) = *(_BYTE *)(v321 + 16);
      *(_BYTE *)(v320 + 17) = *(_BYTE *)(v321 + 17);
      *(_BYTE *)(v320 + 18) = *(_BYTE *)(v321 + 18);
      *(_BYTE *)(v320 + 19) = *(_BYTE *)(v321 + 19);
      v322 = (v320 + 27) & 0xFFFFFFFFFFFFFFF8;
      v323 = (v321 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v322 = *(_QWORD *)v323;
      *(_BYTE *)(v322 + 8) = *(_BYTE *)(v323 + 8);
      *(_BYTE *)(v322 + 9) = *(_BYTE *)(v323 + 9);
      *(_BYTE *)(v322 + 10) = *(_BYTE *)(v323 + 10);
      *(_BYTE *)(v322 + 11) = *(_BYTE *)(v323 + 11);
      *(_BYTE *)(v322 + 12) = *(_BYTE *)(v323 + 12);
      v324 = (_QWORD *)((v320 + 47) & 0xFFFFFFFFFFFFF8);
      v325 = (_QWORD *)((v321 + 47) & 0xFFFFFFFFFFFFF8);
      *v324 = *v325;
      v326 = ((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8;
      v327 = ((unint64_t)v325 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v326 = *(_QWORD *)v327;
      *(_BYTE *)(v326 + 8) = *(_BYTE *)(v327 + 8);
      *(_BYTE *)(v326 + 9) = *(_BYTE *)(v327 + 9);
      v328 = (void *)((v460 + v326) & v514);
      v329 = (const void *)((v460 + v327) & v514);
      v330 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v463 + 48);
      swift_bridgeObjectRetain();
      if (v330(v329, 1, v464))
      {
        memcpy(v328, v329, v489);
      }
      else
      {
        v316((unint64_t)v328, (unint64_t)v329, v464);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v463 + 56))(v328, 0, 1, v464);
      }
      v331 = (_QWORD *)(((unint64_t)v328 + v457) & 0xFFFFFFFFFFFFFFF8);
      v332 = (_QWORD *)(((unint64_t)v329 + v457) & 0xFFFFFFFFFFFFFFF8);
      *v331 = *v332;
      v333 = ((unint64_t)v331 + 15) & 0xFFFFFFFFFFFFFFF8;
      v334 = ((unint64_t)v332 + 15) & 0xFFFFFFFFFFFFFFF8;
      v335 = *(_QWORD *)v334;
      *(_BYTE *)(v333 + 8) = *(_BYTE *)(v334 + 8);
      *(_QWORD *)v333 = v335;
      v336 = (_QWORD *)(((unint64_t)v331 + 31) & 0xFFFFFFFFFFFFF8);
      v337 = (_QWORD *)(((unint64_t)v332 + 31) & 0xFFFFFFFFFFFFF8);
      *v336 = *v337;
      v338 = ((unint64_t)v336 + 15) & 0xFFFFFFFFFFFFFFF8;
      v339 = (uint64_t *)(((unint64_t)v337 + 15) & 0xFFFFFFFFFFFFFFF8);
      v340 = v339[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v340 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)v338 = *(_OWORD *)v339;
      }
      else
      {
        v341 = *v339;
        sub_23AAAE668(*v339, v340);
        *(_QWORD *)v338 = v341;
        *(_QWORD *)(v338 + 8) = v340;
      }
      v342 = (v338 + 19) & 0xFFFFFFFFFFFFFFF8;
      v343 = ((unint64_t)v339 + 19) & 0xFFFFFFFFFFFFFFF8;
      v344 = *(_QWORD *)v343;
      *(_BYTE *)(v342 + 8) = *(_BYTE *)(v343 + 8);
      *(_QWORD *)v342 = v344;
      *(_BYTE *)(v342 + 9) = *(_BYTE *)(v343 + 9);
      v345 = (v342 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v346 = (v343 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v347 = *(_DWORD *)v346;
      *(_BYTE *)(v345 + 4) = *(_BYTE *)(v346 + 4);
      *(_DWORD *)v345 = v347;
      v348 = (_QWORD *)((v342 + 25) & 0xFFFFFFFFFFFFFFF8);
      v349 = (_QWORD *)((v343 + 25) & 0xFFFFFFFFFFFFFFF8);
      *v348 = *v349;
      v348[1] = v349[1];
      v350 = v458 + v311;
      v351 = (__int128 *)(v458 + v513);
      v352 = *(_QWORD *)(v458 + v513 + 16);
      if (v352 >= 0xFFFFFFFF)
        LODWORD(v352) = -1;
      v353 = v352 - 1;
      swift_bridgeObjectRetain();
      if (v353 < 0)
      {
        *(_QWORD *)v350 = *(_QWORD *)v351;
        *(_BYTE *)(v350 + 8) = *((_BYTE *)v351 + 8);
        *(_BYTE *)(v350 + 9) = *((_BYTE *)v351 + 9);
        v366 = (void *)*((_QWORD *)v351 + 2);
        v367 = v366;
        *(_QWORD *)(v350 + 16) = v366;
        v368 = (void *)*((_QWORD *)v351 + 3);
        v369 = v368;
        *(_QWORD *)(v350 + 24) = v368;
        *(_BYTE *)(v350 + 32) = *((_BYTE *)v351 + 32);
        *(_BYTE *)(v350 + 33) = *((_BYTE *)v351 + 33);
        *(_BYTE *)(v350 + 34) = *((_BYTE *)v351 + 34);
        *(_QWORD *)(v350 + 40) = *((_QWORD *)v351 + 5);
        *(_QWORD *)(v350 + 48) = *((_QWORD *)v351 + 6);
        *(_QWORD *)(v350 + 56) = *((_QWORD *)v351 + 7);
        *(_QWORD *)(v350 + 64) = *((_QWORD *)v351 + 8);
        *(_BYTE *)(v350 + 72) = *((_BYTE *)v351 + 72);
        *(_QWORD *)(v350 + 80) = *((_QWORD *)v351 + 10);
        *(_QWORD *)(v350 + 88) = *((_QWORD *)v351 + 11);
        v516 = (void *)*((_QWORD *)v351 + 12);
        *(_QWORD *)(v350 + 96) = v516;
        *(_BYTE *)(v350 + 104) = *((_BYTE *)v351 + 104);
        *(_BYTE *)(v350 + 105) = *((_BYTE *)v351 + 105);
        *(_QWORD *)(v350 + 112) = *((_QWORD *)v351 + 14);
        *(_QWORD *)(v350 + 120) = *((_QWORD *)v351 + 15);
        *(_QWORD *)(v350 + 128) = *((_QWORD *)v351 + 16);
        *(_QWORD *)(v350 + 136) = *((_QWORD *)v351 + 17);
        *(_QWORD *)(v350 + 144) = *((_QWORD *)v351 + 18);
        *(_QWORD *)(v350 + 152) = *((_QWORD *)v351 + 19);
        *(_QWORD *)(v350 + 160) = *((_QWORD *)v351 + 20);
        *(_QWORD *)(v350 + 168) = *((_QWORD *)v351 + 21);
        *(_BYTE *)(v350 + 176) = *((_BYTE *)v351 + 176);
        *(_QWORD *)(v350 + 184) = *((_QWORD *)v351 + 23);
        v370 = *((_QWORD *)v351 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v371 = v516;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v370)
        {
          *(_QWORD *)(v350 + 192) = v370;
          *(_QWORD *)(v350 + 200) = *((_QWORD *)v351 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v350 + 192) = v351[12];
        }
        v61 = a1;
        v296 = v481;
        v295 = v482;
        *(_QWORD *)(v350 + 208) = *((_QWORD *)v351 + 26);
        *(_QWORD *)(v350 + 216) = *((_QWORD *)v351 + 27);
        *(_QWORD *)(v350 + 224) = *((_QWORD *)v351 + 28);
        *(_QWORD *)(v350 + 232) = *((_QWORD *)v351 + 29);
        *(_QWORD *)(v350 + 240) = *((_QWORD *)v351 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v354 = *v351;
        v355 = v351[1];
        v356 = v351[3];
        *(_OWORD *)(v350 + 32) = v351[2];
        *(_OWORD *)(v350 + 48) = v356;
        *(_OWORD *)v350 = v354;
        *(_OWORD *)(v350 + 16) = v355;
        v357 = v351[4];
        v358 = v351[5];
        v359 = v351[7];
        *(_OWORD *)(v350 + 96) = v351[6];
        *(_OWORD *)(v350 + 112) = v359;
        *(_OWORD *)(v350 + 64) = v357;
        *(_OWORD *)(v350 + 80) = v358;
        v360 = v351[8];
        v361 = v351[9];
        v362 = v351[11];
        *(_OWORD *)(v350 + 160) = v351[10];
        *(_OWORD *)(v350 + 176) = v362;
        *(_OWORD *)(v350 + 128) = v360;
        *(_OWORD *)(v350 + 144) = v361;
        v363 = v351[12];
        v364 = v351[13];
        v365 = v351[14];
        *(_QWORD *)(v350 + 240) = *((_QWORD *)v351 + 30);
        *(_OWORD *)(v350 + 208) = v364;
        *(_OWORD *)(v350 + 224) = v365;
        *(_OWORD *)(v350 + 192) = v363;
        v296 = v481;
        v295 = v482;
      }
      v423 = (_OWORD *)((v350 + 255) & 0xFFFFFFFFFFFFFFF8);
      v424 = (__int128 *)(((unint64_t)v351 + 255) & 0xFFFFFFFFFFFFFFF8);
      v425 = *v424;
      *(_OWORD *)((char *)v423 + 9) = *(__int128 *)((char *)v424 + 9);
      *v423 = v425;
      v426 = (v350 + 287) & 0xFFFFFFFFFFFFFFF8;
      v427 = ((unint64_t)v351 + 287) & 0xFFFFFFFFFFFFFFF8;
      v428 = *(_OWORD *)v427;
      *(_BYTE *)(v426 + 16) = *(_BYTE *)(v427 + 16);
      *(_OWORD *)v426 = v428;
      v429 = (_QWORD *)((v350 + 311) & 0xFFFFFFFFFFFFF8);
      v430 = ((unint64_t)v351 + 311) & 0xFFFFFFFFFFFFF8;
      v431 = *(_QWORD *)v430;
      v430 += 15;
      *v429 = v431;
      v432 = (_QWORD *)(((unint64_t)v429 + 15) & 0xFFFFFFFFFFFFFFF8);
      v433 = *(_QWORD *)(v430 & 0xFFFFFFFFFFFFFFF8);
      v434 = *(_QWORD *)((v430 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_23AA7F2D4(v433, v434);
      *v432 = v433;
      v432[1] = v434;
      v293 = v519;
      v294 = v524;
      if (v470)
      {
LABEL_200:
        v435 = ((((v295
                 + ((((((((((v486 + v296 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v436 = (_QWORD *)(((unint64_t)v293 + v435) & 0xFFFFFFFFFFFFFFF8);
        v437 = (_QWORD *)(((unint64_t)v294 + v435) & 0xFFFFFFFFFFFFFFF8);
        *v436 = *v437;
        v436[1] = v437[1];
        *(_QWORD *)(((unint64_t)v436 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v437 + 23) & 0xFFFFFFFFFFFFF8);
        *(_BYTE *)(v61 + v526) = 3;
        swift_bridgeObjectRetain();
        return v61;
      }
LABEL_159:
      v296 = v489;
      goto LABEL_200;
    case 4:
      v61 = a1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v491 + 16))(a1, a2, AssociatedTypeWitness);
      v88 = 4;
      goto LABEL_80;
    case 5:
      v61 = a1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v491 + 16))(a1, a2, AssociatedTypeWitness);
      v88 = 5;
      goto LABEL_80;
    case 6:
      v61 = a1;
      (*(void (**)(uint64_t))(v491 + 16))(a1);
      v89 = (void *)((v45 + a1) & v57);
      v90 = (const void *)((v45 + a2) & v57);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v90, 1, v520))
      {
        memcpy(v89, v90, v452);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v89, v90, v520);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v89, 0, 1, v520);
      }
      v88 = 6;
      goto LABEL_80;
    case 7:
      v61 = a1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v491 + 16))(a1, a2, AssociatedTypeWitness);
      v88 = 7;
LABEL_80:
      *(_BYTE *)(v61 + v526) = v88;
      return v61;
    default:
      if (v41 <= 3)
        v49 = v41;
      else
        v49 = 4;
      __asm { BR              X15 }
      return result;
  }
}

uint64_t sub_23AF7FE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  BOOL v20;
  size_t v21;
  unint64_t v22;
  size_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  size_t v29;
  size_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  size_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t (*v60)(unint64_t);
  unint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(unint64_t, uint64_t);
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t (*v75)(unint64_t);
  unint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void (*v81)(unint64_t, uint64_t);
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  void *v86;
  uint64_t v87;
  size_t v88;
  size_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t (*v95)(unint64_t);
  unint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  void (*v101)(unint64_t, uint64_t);
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v122)(void);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  size_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t, uint64_t);
  const void *v130;
  int v131;
  void *v132;
  uint64_t v133;
  unint64_t v134;
  size_t v135;
  int v136;
  void *v137;
  const void *v138;
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v141)(void);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  size_t v146;
  char v147;
  void *v148;
  const void *v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  char *v156;
  _BYTE *v157;
  uint64_t *v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  unint64_t v168;
  unint64_t v169;
  void (*v170)(unint64_t, unint64_t, uint64_t);
  _QWORD *v171;
  _QWORD *v172;
  _QWORD *v173;
  _QWORD *v174;
  _QWORD *v175;
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  int v179;
  unint64_t v180;
  unint64_t v181;
  void (*v182)(unint64_t, unint64_t, uint64_t);
  size_t v183;
  size_t v184;
  _BYTE *v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  _QWORD *v190;
  _QWORD *v191;
  unint64_t v192;
  unint64_t v193;
  void *v194;
  const void *v195;
  unsigned int (*v196)(const void *, uint64_t, uint64_t);
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  unint64_t v202;
  _QWORD *v203;
  _QWORD *v204;
  unint64_t v205;
  unint64_t v206;
  void (*v207)(unint64_t, unint64_t, uint64_t);
  _QWORD *v208;
  _QWORD *v209;
  _QWORD *v210;
  _QWORD *v211;
  _QWORD *v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  int v216;
  unint64_t v217;
  unint64_t v218;
  void (*v219)(unint64_t, unint64_t, uint64_t);
  size_t v220;
  size_t v221;
  _BYTE *v222;
  unint64_t v223;
  unint64_t v224;
  unint64_t v225;
  unint64_t v226;
  _QWORD *v227;
  _QWORD *v228;
  unint64_t v229;
  unint64_t v230;
  void *v231;
  const void *v232;
  unsigned int (*v233)(const void *, uint64_t, uint64_t);
  _QWORD *v234;
  unint64_t v235;
  unint64_t v236;
  void (*v237)(unint64_t, unint64_t, uint64_t);
  _QWORD *v238;
  _QWORD *v239;
  _QWORD *v240;
  _QWORD *v241;
  char *v242;
  void *v243;
  char v244;
  _QWORD *v245;
  _QWORD *v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  _QWORD *v251;
  unint64_t v252;
  uint64_t *v253;
  unint64_t v254;
  _QWORD *v255;
  _QWORD *v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  _QWORD *v261;
  unint64_t v262;
  uint64_t *v263;
  unint64_t v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  int v271;
  _QWORD *v272;
  _QWORD *v273;
  unint64_t v274;
  __int128 *v275;
  unint64_t v276;
  int v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  uint64_t v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  unint64_t v294;
  unint64_t v295;
  int v296;
  _QWORD *v297;
  _QWORD *v298;
  unint64_t v299;
  __int128 *v300;
  unint64_t v301;
  int v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  void *v315;
  id v316;
  void *v317;
  id v318;
  id v319;
  void *v320;
  id v321;
  void *v322;
  id v323;
  id v324;
  unint64_t *v325;
  unint64_t v326;
  unint64_t *v327;
  unint64_t v328;
  unint64_t *v329;
  unint64_t v330;
  unint64_t v331;
  unint64_t *v332;
  unint64_t v333;
  unint64_t v334;
  uint64_t v335;
  int v336;
  unint64_t v337;
  _QWORD *v338;
  _QWORD *v339;
  unint64_t v340;
  unint64_t v341;
  void (*v342)(unint64_t, unint64_t, uint64_t);
  _QWORD *v343;
  _QWORD *v344;
  _QWORD *v345;
  _QWORD *v346;
  _QWORD *v347;
  unint64_t v348;
  unint64_t v349;
  uint64_t v350;
  int v351;
  unint64_t v352;
  unint64_t v353;
  void (*v354)(unint64_t, unint64_t, uint64_t);
  size_t v355;
  size_t v356;
  _BYTE *v357;
  unint64_t v358;
  unint64_t v359;
  unint64_t v360;
  unint64_t v361;
  _QWORD *v362;
  _QWORD *v363;
  unint64_t v364;
  unint64_t v365;
  void *v366;
  const void *v367;
  unsigned int (*v368)(const void *, uint64_t, uint64_t);
  _QWORD *v369;
  _QWORD *v370;
  unint64_t v371;
  unint64_t v372;
  uint64_t v373;
  _QWORD *v374;
  _QWORD *v375;
  unint64_t v376;
  uint64_t *v377;
  unint64_t v378;
  uint64_t v379;
  unint64_t v380;
  unint64_t v381;
  uint64_t v382;
  unint64_t v383;
  unint64_t v384;
  int v385;
  _QWORD *v386;
  _QWORD *v387;
  unint64_t v388;
  __int128 *v389;
  unint64_t v390;
  int v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  void *v404;
  id v405;
  void *v406;
  id v407;
  id v408;
  _OWORD *v409;
  __int128 *v410;
  __int128 v411;
  unint64_t v412;
  unint64_t v413;
  __int128 v414;
  _QWORD *v415;
  uint64_t v416;
  uint64_t v417;
  _QWORD *v418;
  uint64_t v419;
  unint64_t v420;
  unint64_t v421;
  _QWORD *v422;
  _QWORD *v423;
  void *v424;
  id v425;
  _OWORD *v426;
  __int128 *v427;
  __int128 v428;
  unint64_t v429;
  unint64_t v430;
  __int128 v431;
  _QWORD *v432;
  uint64_t v433;
  uint64_t v434;
  _QWORD *v435;
  uint64_t v436;
  unint64_t v437;
  unint64_t v438;
  _QWORD *v439;
  _QWORD *v440;
  _OWORD *v441;
  __int128 *v442;
  __int128 v443;
  unint64_t v444;
  unint64_t v445;
  __int128 v446;
  _QWORD *v447;
  uint64_t v448;
  uint64_t v449;
  _QWORD *v450;
  uint64_t v451;
  unint64_t v452;
  unint64_t v453;
  void *v454;
  const void *v455;
  char *v456;
  char *v457;
  _QWORD *v458;
  uint64_t v459;
  _QWORD *v460;
  unint64_t v461;
  unint64_t v462;
  void (*v463)(unint64_t, unint64_t, uint64_t);
  _QWORD *v464;
  _QWORD *v465;
  _QWORD *v466;
  _QWORD *v467;
  _QWORD *v468;
  _QWORD *v469;
  id v470;
  uint64_t result;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  int v479;
  int v480;
  int v481;
  size_t v482;
  unsigned int v483;
  uint64_t v484;
  uint64_t v485;
  unsigned int v486;
  uint64_t v487;
  size_t __n;
  size_t v489;
  unsigned int v490;
  unsigned int v491;
  uint64_t v492;
  unsigned int v493;
  unsigned int v494;
  uint64_t v495;
  void *__dst;
  uint64_t v497;
  uint64_t v498;
  size_t v499;
  unint64_t v500;
  size_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  size_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  unint64_t v511;
  uint64_t v512;
  unsigned int v513;
  size_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  unint64_t v520;
  uint64_t v521;
  uint64_t v522;
  size_t v523;
  uint64_t v524;
  uint64_t v525;
  size_t v526;
  unint64_t v527;
  int v528;
  unsigned int v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  unsigned int v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v546;
  uint64_t v547;
  unint64_t v548;
  uint64_t v549;
  uint64_t v550;
  void *v551;
  void *v552;
  uint64_t v553;
  const void *v554;
  const void *v555;
  const void *v556;
  _QWORD *v557;
  unint64_t v558;
  unint64_t v559;
  size_t v560;
  uint64_t AssociatedTypeWitness;
  unint64_t v562;
  unint64_t v563;
  void *v564;
  void *v565;
  unint64_t v566;
  void *v567;

  v3 = a1;
  if (a1 == a2)
    return v3;
  v553 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v549 = v3;
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v517 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v517 - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v508 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v508 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 | v10 | 7;
  v541 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v541 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v13 | 7;
  v15 = v11 | v6 | v13;
  v557 = (_QWORD *)v4;
  v16 = *(_DWORD *)(v9 + 84);
  v491 = *(_DWORD *)(v7 + 84);
  if (v491 > v16)
    v16 = *(_DWORD *)(v7 + 84);
  v483 = v16;
  if (v16 <= 0x7FFFFFFE)
    v16 = 2147483646;
  v513 = v16;
  v529 = *(_DWORD *)(v4 + 84);
  if (v16 <= v529)
    v16 = *(_DWORD *)(v4 + 84);
  v17 = *(_DWORD *)(v12 + 84);
  if (v17 <= 0x7FFFFFFE)
    v18 = 2147483646;
  else
    v18 = *(_DWORD *)(v12 + 84);
  if (v16 > v18)
    v18 = v16;
  v490 = v18;
  if (v18 <= 0x7FFFFFFF)
    v19 = 0x7FFFFFFF;
  else
    v19 = v18;
  v528 = v19;
  v493 = *(_DWORD *)(v12 + 84);
  v20 = v17 == 0;
  v530 = v5 + v6;
  v539 = v6;
  v531 = v5 + v11;
  v535 = v11;
  v515 = *(_QWORD *)(v7 + 64) + 7;
  v516 = v7;
  v506 = v10 + 8;
  v537 = v10;
  v507 = v9;
  v497 = *(_QWORD *)(v9 + 64) + 7;
  v509 = v14 + 16;
  v520 = ((((v497 + ((v10 + 8 + (v515 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v510 = v13 + 12;
  v522 = *(_QWORD *)(v541 - 8);
  v21 = *(_QWORD *)(v12 + 64);
  v505 = v21 + v13;
  v489 = v21 + 12;
  v22 = (v13
       + 10
       + ((((((v21 + 12 + ((v21 + v13 + ((v13 + 12) & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  v501 = v21;
  if (v20)
    ++v21;
  v514 = v21;
  v511 = v22;
  v512 = (v14 + 16 + ((v5 + v11 + ((v5 + v6) & ~v6)) & ~v11) + v520) & ~v14;
  v498 = v13 + 10;
  v499 = v21 + 7;
  v500 = ((((((((((v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v526 = ((((v512 + v500 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  v527 = v15 + v5;
  v532 = v11 | v6 | v13;
  v23 = v526 + ((v15 + v5) & ~v15);
  v24 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = *(_DWORD *)(v26 + 84);
  v524 = v26;
  v525 = v25;
  v29 = *(_QWORD *)(v26 + 64);
  if (v28)
    v30 = v29;
  else
    v30 = v29 + 1;
  v519 = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(v519 - 8);
  v32 = *(_DWORD *)(v31 + 80) & 0xF8;
  v504 = swift_getAssociatedTypeWitness();
  v33 = *(_QWORD *)(v504 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v32 | v34 | 7;
  v36 = *(_DWORD *)(v31 + 84);
  v37 = *(_DWORD *)(v33 + 84);
  v486 = v37;
  if (v36 > v37)
    v37 = *(_DWORD *)(v31 + 84);
  v494 = v37;
  if (v37 <= 0x7FFFFFFE)
    v38 = 2147483646;
  else
    v38 = v37;
  v518 = v31;
  v521 = *(_QWORD *)(v31 + 64) + 7;
  v502 = v34 + 8;
  v503 = *(_QWORD *)(v504 - 8);
  v492 = *(_QWORD *)(v33 + 64) + 7;
  v39 = ((((v492 + ((v34 + 8 + (v521 & 0xFFFFFFFFFFFFFFF8)) & ~v34)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  __n = v30;
  v40 = ((((((v30 + v35 + ((v23 + v27) & ~v27)) & ~v35) + v39 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v550 = v27;
  __dst = (void *)(v5 + v27);
  v523 = v30 + v35;
  v41 = v39 + ((v30 + v35 + ((v5 + v27) & ~v27)) & ~v35) + 16;
  v42 = *(_QWORD *)(v553 - 8);
  v43 = *(unsigned __int8 *)(v42 + 80);
  v44 = v5 + v43;
  if (*(_DWORD *)(v42 + 84))
    v45 = *(_QWORD *)(v42 + 64);
  else
    v45 = *(_QWORD *)(v42 + 64) + 1;
  v46 = ((v5 + v43) & ~v43) + v45;
  v47 = ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v5 > v47)
    v47 = v5;
  v3 = v549;
  if (v40 <= v41)
    v40 = v41;
  if (((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= v46)
    v48 = v46;
  else
    v48 = ((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v47 > v40)
    v40 = v47;
  if (v40 <= v48)
    v49 = v48;
  else
    v49 = v40;
  v51 = v541;
  v52 = v535;
  v54 = v532;
  v53 = v13 | 7;
  v542 = ~v532;
  v543 = ~v539;
  v55 = ~v535;
  v533 = ~v537;
  v56 = ~(v13 | 7);
  v534 = ~v13;
  v57 = ~v550;
  v536 = ~v34;
  v538 = ~v35;
  v495 = ~v43;
  v540 = v36;
  v482 = v45;
  v487 = v44;
  switch(*(_BYTE *)(v549 + v49))
  {
    case 0:
      v484 = ~v550;
      v479 = v38;
      v58 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v557[1];
      v58(v549, AssociatedTypeWitness, v53, v54);
      v59 = (v527 + v549) & v542;
      if (v529 == v528)
      {
        v60 = (uint64_t (*)(unint64_t))v557[6];
        v61 = (v527 + v549) & v542;
        goto LABEL_50;
      }
      v63 = (v530 + v59) & v543;
      v64 = (v531 + v63) & v55;
      if (v513 == v528)
      {
        if (v491 == v513)
        {
          v60 = *(uint64_t (**)(unint64_t))(v516 + 48);
          v61 = (v531 + v63) & v55;
          goto LABEL_50;
        }
        v325 = (unint64_t *)((v515 + v64) & 0xFFFFFFFFFFFFFFF8);
        if (v483 <= 0x7FFFFFFE)
        {
          v326 = *v325;
          goto LABEL_337;
        }
        v61 = ((unint64_t)v325 + v506) & v533;
        v60 = *(uint64_t (**)(unint64_t))(v507 + 48);
LABEL_50:
        v62 = v60(v61);
        v59 = (v527 + v549) & v542;
        if (v62)
          goto LABEL_63;
        goto LABEL_51;
      }
      v115 = v520 + v64;
      if ((v490 & 0x80000000) == 0)
      {
        v116 = *(_QWORD *)(v115 + 8);
        if (v116 >= 0xFFFFFFFF)
          LODWORD(v116) = -1;
        if ((_DWORD)v116 == -1)
        {
LABEL_51:
          v63 = (v530 + v59) & v543;
          v64 = (v531 + v63) & v55;
LABEL_52:
          v472 = v59;
          ((void (*)(uint64_t, uint64_t))v58)(v59, AssociatedTypeWitness);
          ((void (*)(uint64_t, uint64_t))v58)(v63, AssociatedTypeWitness);
          (*(void (**)(uint64_t, uint64_t))(v516 + 8))(v64, v517);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v507 + 8))((v506 + ((v515 + v64) & 0xFFFFFFFFFFFFFFF8)) & v533, v508);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v474 = v56;
          v65 = (v509 + v520 + v64) & v56;
          v66 = *(void (**)(unint64_t, uint64_t))(v522 + 8);
          v66((v510 + v65) & v534, v51);
          v67 = (v505 + ((v510 + v65) & v534)) & v534;
          v66(v67, v51);
          swift_bridgeObjectRelease();
          v68 = (v498
               + ((((((v489 + v67) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v534;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v522 + 48))(v68, 1, v51))
            v66(v68, v51);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v69 = *(_QWORD *)(((((((v499 + v68) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 8);
          if ((v69 & 0x3000000000000000) == 0)
            sub_23AAAE53C(*(_QWORD *)((((((v499 + v68) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v69);
          swift_bridgeObjectRelease();
          v70 = v500 + v65;
          v71 = *(void **)(v70 + 16);
          LODWORD(v72) = -1;
          if ((unint64_t)v71 < 0xFFFFFFFF)
            v72 = *(_QWORD *)(v70 + 16);
          v56 = v474;
          if ((int)v72 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v70 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_23AAA12F0(*(_QWORD *)((((v70 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v70 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v59 = v472;
          goto LABEL_63;
        }
        goto LABEL_63;
      }
      v61 = (v510 + ((v509 + v115) & v56)) & v534;
      if (v493 > 0x7FFFFFFD)
      {
        v60 = *(uint64_t (**)(unint64_t))(v522 + 48);
        goto LABEL_50;
      }
      v326 = *(_QWORD *)(((v489 + ((v505 + v61) & v534)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_337:
      if (v326 >= 0xFFFFFFFF)
        LODWORD(v326) = -1;
      if ((v326 + 1) < 2)
        goto LABEL_52;
LABEL_63:

LABEL_105:
      v38 = v479;
      v57 = v484;
LABEL_150:
      switch(*(_BYTE *)(a2 + v49))
      {
        case 0:
          v120 = v55;
          v121 = (void (*)(uint64_t, uint64_t, uint64_t))v557[2];
          v121(v549, a2, AssociatedTypeWitness);
          v551 = (void *)((v527 + v549) & v542);
          v554 = (const void *)((v527 + a2) & v542);
          if (v529 == v528)
          {
            v122 = (unsigned int (*)(void))v557[6];
            goto LABEL_153;
          }
          v150 = (v530 + ((v527 + a2) & v542)) & v543;
          v151 = (v531 + v150) & v120;
          if (v513 != v528)
          {
            v162 = v520 + v151;
            if ((v490 & 0x80000000) == 0)
            {
              v163 = *(_QWORD *)(v162 + 8);
              if (v163 >= 0xFFFFFFFF)
                LODWORD(v163) = -1;
              if ((_DWORD)v163 != -1)
                goto LABEL_154;
LABEL_204:
              v150 = ((unint64_t)v554 + v530) & v543;
              v151 = (v531 + v150) & v120;
              goto LABEL_205;
            }
            if (v493 <= 0x7FFFFFFD)
            {
              v331 = *(_QWORD *)(((v489 + ((v505 + ((v510 + ((v509 + v162) & v56)) & v534)) & v534)) & 0xFFFFFFFFFFFFF8)
                               + 8);
              goto LABEL_322;
            }
            v122 = *(unsigned int (**)(void))(v522 + 48);
LABEL_153:
            if (v122())
            {
LABEL_154:
              v123 = (v527 + v549) & v542;
              v124 = (v527 + a2) & v542;
              memcpy(v551, v554, v526);
              v126 = v511;
              v125 = v512;
LABEL_155:
              v127 = v514;
              goto LABEL_290;
            }
            goto LABEL_204;
          }
          if (v491 == v513)
          {
            v122 = *(unsigned int (**)(void))(v516 + 48);
            goto LABEL_153;
          }
          if (v483 > 0x7FFFFFFE)
          {
            v122 = *(unsigned int (**)(void))(v507 + 48);
            goto LABEL_153;
          }
          v331 = *(_QWORD *)((v515 + v151) & 0xFFFFFFFFFFFFFFF8);
LABEL_322:
          if (v331 >= 0xFFFFFFFF)
            LODWORD(v331) = -1;
          if ((v331 + 1) >= 2)
            goto LABEL_154;
LABEL_205:
          v121((uint64_t)v551, (uint64_t)v554, AssociatedTypeWitness);
          v164 = ((unint64_t)v551 + v530) & v543;
          v121(v164, v150, AssociatedTypeWitness);
          v165 = (v531 + v164) & v120;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v516 + 16))(v165, v151, v517);
          v166 = (_QWORD *)((v515 + v165) & 0xFFFFFFFFFFFFFFF8);
          v167 = (_QWORD *)((v515 + v151) & 0xFFFFFFFFFFFFFFF8);
          *v166 = *v167;
          v168 = ((unint64_t)v166 + v506) & v533;
          v169 = ((unint64_t)v167 + v506) & v533;
          v170 = *(void (**)(unint64_t, unint64_t, uint64_t))(v507 + 16);
          swift_bridgeObjectRetain();
          v170(v168, v169, v508);
          v171 = (_QWORD *)((v497 + v168) & 0xFFFFFFFFFFFFF8);
          v172 = (_QWORD *)((v497 + v169) & 0xFFFFFFFFFFFFF8);
          *v171 = *v172;
          v173 = (_QWORD *)(((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8);
          v174 = (_QWORD *)(((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8);
          *v173 = *v174;
          v173[1] = v174[1];
          v175 = (_QWORD *)(v520 + v165);
          *v175 = *(_QWORD *)(v520 + v151);
          v175[1] = *(_QWORD *)(v520 + v151 + 8);
          v176 = (v509 + v520 + v165) & v56;
          v177 = (v509 + v520 + v151) & v56;
          *(_BYTE *)v176 = *(_BYTE *)v177;
          v178 = v176 | 4;
          v179 = *(_DWORD *)(v177 | 4);
          *(_BYTE *)(v178 + 4) = *(_BYTE *)((v177 | 4) + 4);
          *(_DWORD *)v178 = v179;
          *(_WORD *)(v176 + 10) = *(_WORD *)(v177 + 0xA);
          v558 = v177;
          v562 = v176;
          v180 = (v510 + v176) & v534;
          v181 = (v510 + v177) & v534;
          v182 = *(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v182(v180, v181, v51);
          v183 = (v505 + v180) & v534;
          v184 = (v505 + v181) & v534;
          v182(v183, v184, v51);
          v185 = (_BYTE *)(v183 + v501);
          *v185 = *(_BYTE *)(v184 + v501);
          v185[1] = *(_BYTE *)(v184 + v501 + 1);
          v185[2] = *(_BYTE *)(v184 + v501 + 2);
          v185[3] = *(_BYTE *)(v184 + v501 + 3);
          v185[4] = *(_BYTE *)(v184 + v501 + 4);
          v186 = (v183 + v501 + 12) & 0xFFFFFFFFFFFFFFF8;
          v187 = (v184 + v501 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v186 = *(_QWORD *)v187;
          *(_QWORD *)(v186 + 8) = *(_QWORD *)(v187 + 8);
          *(_BYTE *)(v186 + 16) = *(_BYTE *)(v187 + 16);
          *(_BYTE *)(v186 + 17) = *(_BYTE *)(v187 + 17);
          *(_BYTE *)(v186 + 18) = *(_BYTE *)(v187 + 18);
          *(_BYTE *)(v186 + 19) = *(_BYTE *)(v187 + 19);
          v188 = (v186 + 27) & 0xFFFFFFFFFFFFFFF8;
          v189 = (v187 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v188 = *(_QWORD *)v189;
          *(_BYTE *)(v188 + 8) = *(_BYTE *)(v189 + 8);
          *(_BYTE *)(v188 + 9) = *(_BYTE *)(v189 + 9);
          *(_BYTE *)(v188 + 10) = *(_BYTE *)(v189 + 10);
          *(_BYTE *)(v188 + 11) = *(_BYTE *)(v189 + 11);
          *(_BYTE *)(v188 + 12) = *(_BYTE *)(v189 + 12);
          v190 = (_QWORD *)((v186 + 47) & 0xFFFFFFFFFFFFF8);
          v191 = (_QWORD *)((v187 + 47) & 0xFFFFFFFFFFFFF8);
          *v190 = *v191;
          v192 = ((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8;
          v193 = ((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v192 = *(_QWORD *)v193;
          *(_BYTE *)(v192 + 8) = *(_BYTE *)(v193 + 8);
          *(_BYTE *)(v192 + 9) = *(_BYTE *)(v193 + 9);
          v194 = (void *)((v498 + v192) & v534);
          v195 = (const void *)((v498 + v193) & v534);
          v196 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v522 + 48);
          swift_bridgeObjectRetain();
          if (v196(v195, 1, v51))
          {
            memcpy(v194, v195, v514);
          }
          else
          {
            v182((unint64_t)v194, (unint64_t)v195, v51);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v522 + 56))(v194, 0, 1, v51);
          }
          v245 = (_QWORD *)(((unint64_t)v194 + v499) & 0xFFFFFFFFFFFFFFF8);
          v246 = (_QWORD *)(((unint64_t)v195 + v499) & 0xFFFFFFFFFFFFFFF8);
          *v245 = *v246;
          v247 = ((unint64_t)v245 + 15) & 0xFFFFFFFFFFFFFFF8;
          v248 = ((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8;
          v249 = *(_QWORD *)v248;
          *(_BYTE *)(v247 + 8) = *(_BYTE *)(v248 + 8);
          *(_QWORD *)v247 = v249;
          v250 = (_QWORD *)(((unint64_t)v245 + 31) & 0xFFFFFFFFFFFFF8);
          v251 = (_QWORD *)(((unint64_t)v246 + 31) & 0xFFFFFFFFFFFFF8);
          *v250 = *v251;
          v252 = ((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8;
          v253 = (uint64_t *)(((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFFFF8);
          v254 = v253[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v254 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)v252 = *(_OWORD *)v253;
          }
          else
          {
            v265 = *v253;
            sub_23AAAE668(*v253, v254);
            *(_QWORD *)v252 = v265;
            *(_QWORD *)(v252 + 8) = v254;
          }
          v266 = (v252 + 19) & 0xFFFFFFFFFFFFFFF8;
          v267 = ((unint64_t)v253 + 19) & 0xFFFFFFFFFFFFFFF8;
          v268 = *(_QWORD *)v267;
          *(_BYTE *)(v266 + 8) = *(_BYTE *)(v267 + 8);
          *(_QWORD *)v266 = v268;
          *(_BYTE *)(v266 + 9) = *(_BYTE *)(v267 + 9);
          v269 = (v266 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v270 = (v267 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v271 = *(_DWORD *)v270;
          *(_BYTE *)(v269 + 4) = *(_BYTE *)(v270 + 4);
          *(_DWORD *)v269 = v271;
          v272 = (_QWORD *)((v266 + 25) & 0xFFFFFFFFFFFFFFF8);
          v273 = (_QWORD *)((v267 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v272 = *v273;
          v272[1] = v273[1];
          v274 = v500 + v562;
          v275 = (__int128 *)(v500 + v558);
          v276 = *(_QWORD *)(v500 + v558 + 16);
          if (v276 >= 0xFFFFFFFF)
            LODWORD(v276) = -1;
          v277 = v276 - 1;
          swift_bridgeObjectRetain();
          if (v277 < 0)
          {
            *(_QWORD *)v274 = *(_QWORD *)v275;
            *(_BYTE *)(v274 + 8) = *((_BYTE *)v275 + 8);
            *(_BYTE *)(v274 + 9) = *((_BYTE *)v275 + 9);
            v315 = (void *)*((_QWORD *)v275 + 2);
            v316 = v315;
            *(_QWORD *)(v274 + 16) = v315;
            v317 = (void *)*((_QWORD *)v275 + 3);
            v318 = v317;
            *(_QWORD *)(v274 + 24) = v317;
            *(_BYTE *)(v274 + 32) = *((_BYTE *)v275 + 32);
            *(_BYTE *)(v274 + 33) = *((_BYTE *)v275 + 33);
            *(_BYTE *)(v274 + 34) = *((_BYTE *)v275 + 34);
            *(_QWORD *)(v274 + 40) = *((_QWORD *)v275 + 5);
            *(_QWORD *)(v274 + 48) = *((_QWORD *)v275 + 6);
            *(_QWORD *)(v274 + 56) = *((_QWORD *)v275 + 7);
            *(_QWORD *)(v274 + 64) = *((_QWORD *)v275 + 8);
            *(_BYTE *)(v274 + 72) = *((_BYTE *)v275 + 72);
            *(_QWORD *)(v274 + 80) = *((_QWORD *)v275 + 10);
            *(_QWORD *)(v274 + 88) = *((_QWORD *)v275 + 11);
            v564 = (void *)*((_QWORD *)v275 + 12);
            *(_QWORD *)(v274 + 96) = v564;
            *(_BYTE *)(v274 + 104) = *((_BYTE *)v275 + 104);
            *(_BYTE *)(v274 + 105) = *((_BYTE *)v275 + 105);
            *(_QWORD *)(v274 + 112) = *((_QWORD *)v275 + 14);
            *(_QWORD *)(v274 + 120) = *((_QWORD *)v275 + 15);
            *(_QWORD *)(v274 + 128) = *((_QWORD *)v275 + 16);
            *(_QWORD *)(v274 + 136) = *((_QWORD *)v275 + 17);
            *(_QWORD *)(v274 + 144) = *((_QWORD *)v275 + 18);
            *(_QWORD *)(v274 + 152) = *((_QWORD *)v275 + 19);
            *(_QWORD *)(v274 + 160) = *((_QWORD *)v275 + 20);
            *(_QWORD *)(v274 + 168) = *((_QWORD *)v275 + 21);
            *(_BYTE *)(v274 + 176) = *((_BYTE *)v275 + 176);
            *(_QWORD *)(v274 + 184) = *((_QWORD *)v275 + 23);
            v546 = *((_QWORD *)v275 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v319 = v564;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v546)
            {
              *(_QWORD *)(v274 + 192) = v546;
              *(_QWORD *)(v274 + 200) = *((_QWORD *)v275 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v274 + 192) = v275[12];
            }
            v3 = v549;
            v126 = v511;
            v125 = v512;
            *(_QWORD *)(v274 + 208) = *((_QWORD *)v275 + 26);
            *(_QWORD *)(v274 + 216) = *((_QWORD *)v275 + 27);
            *(_QWORD *)(v274 + 224) = *((_QWORD *)v275 + 28);
            *(_QWORD *)(v274 + 232) = *((_QWORD *)v275 + 29);
            *(_QWORD *)(v274 + 240) = *((_QWORD *)v275 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v278 = *v275;
            v279 = v275[1];
            v280 = v275[3];
            *(_OWORD *)(v274 + 32) = v275[2];
            *(_OWORD *)(v274 + 48) = v280;
            *(_OWORD *)v274 = v278;
            *(_OWORD *)(v274 + 16) = v279;
            v281 = v275[4];
            v282 = v275[5];
            v283 = v275[7];
            *(_OWORD *)(v274 + 96) = v275[6];
            *(_OWORD *)(v274 + 112) = v283;
            *(_OWORD *)(v274 + 64) = v281;
            *(_OWORD *)(v274 + 80) = v282;
            v284 = v275[8];
            v285 = v275[9];
            v286 = v275[11];
            *(_OWORD *)(v274 + 160) = v275[10];
            *(_OWORD *)(v274 + 176) = v286;
            *(_OWORD *)(v274 + 128) = v284;
            *(_OWORD *)(v274 + 144) = v285;
            v287 = v275[12];
            v288 = v275[13];
            v289 = v275[14];
            *(_QWORD *)(v274 + 240) = *((_QWORD *)v275 + 30);
            *(_OWORD *)(v274 + 208) = v288;
            *(_OWORD *)(v274 + 224) = v289;
            *(_OWORD *)(v274 + 192) = v287;
            v126 = v511;
            v125 = v512;
          }
          v409 = (_OWORD *)((v274 + 255) & 0xFFFFFFFFFFFFFFF8);
          v410 = (__int128 *)(((unint64_t)v275 + 255) & 0xFFFFFFFFFFFFFFF8);
          v411 = *v410;
          *(_OWORD *)((char *)v409 + 9) = *(__int128 *)((char *)v410 + 9);
          *v409 = v411;
          v412 = (v274 + 287) & 0xFFFFFFFFFFFFFFF8;
          v413 = ((unint64_t)v275 + 287) & 0xFFFFFFFFFFFFFFF8;
          v414 = *(_OWORD *)v413;
          *(_BYTE *)(v412 + 16) = *(_BYTE *)(v413 + 16);
          *(_OWORD *)v412 = v414;
          v415 = (_QWORD *)((v274 + 311) & 0xFFFFFFFFFFFFF8);
          v416 = ((unint64_t)v275 + 311) & 0xFFFFFFFFFFFFF8;
          v417 = *(_QWORD *)v416;
          v416 += 15;
          *v415 = v417;
          v418 = (_QWORD *)(((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8);
          v419 = *(_QWORD *)(v416 & 0xFFFFFFFFFFFFFFF8);
          v420 = *(_QWORD *)((v416 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_23AA7F2D4(v419, v420);
          *v418 = v419;
          v418[1] = v420;
          v127 = v501;
          v123 = (v527 + v549) & v542;
          v124 = (uint64_t)v554;
          if (!v493)
            goto LABEL_155;
LABEL_290:
          v421 = ((((v125
                   + ((((((((((v126 + v127 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v422 = (_QWORD *)((v123 + v421) & 0xFFFFFFFFFFFFFFF8);
          v423 = (_QWORD *)((v124 + v421) & 0xFFFFFFFFFFFFFFF8);
          *v422 = *v423;
          v424 = *(void **)(((unint64_t)v423 + 15) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)(((unint64_t)v422 + 15) & 0xFFFFFFFFFFFFF8) = v424;
          *(_BYTE *)(v3 + v49) = 0;
          v425 = v424;
          return v3;
        case 1:
          v128 = v56;
          v478 = v55;
          v485 = v57;
          v129 = (void (*)(uint64_t, uint64_t, uint64_t))v557[2];
          v129(v549, a2, AssociatedTypeWitness);
          v130 = (const void *)((v527 + a2) & v542);
          v555 = v130;
          v481 = v38;
          if (v529 == v528)
          {
            v131 = ((uint64_t (*)(unint64_t))v557[6])((v527 + a2) & v542);
LABEL_158:
            v130 = (const void *)((v527 + a2) & v542);
            goto LABEL_159;
          }
          v152 = ((unint64_t)v130 + v530) & v543;
          v153 = (v531 + v152) & v478;
          if (v513 == v528)
          {
            if (v491 == v513)
            {
              v131 = (*(uint64_t (**)(unint64_t))(v516 + 48))((v531 + v152) & v478);
              goto LABEL_158;
            }
            v332 = (unint64_t *)((v515 + v153) & 0xFFFFFFFFFFFFFFF8);
            if (v483 <= 0x7FFFFFFE)
            {
              v333 = *v332;
              goto LABEL_327;
            }
            v336 = (*(uint64_t (**)(unint64_t))(v507 + 48))(((unint64_t)v332 + v506) & v533);
          }
          else
          {
            v197 = v520 + v153;
            if ((v490 & 0x80000000) == 0)
            {
              v198 = *(_QWORD *)(v197 + 8);
              if (v198 >= 0xFFFFFFFF)
                LODWORD(v198) = -1;
              v131 = v198 + 1;
LABEL_159:
              v132 = (void *)((v527 + v549) & v542);
              if (v131)
              {
LABEL_160:
                memcpy(v132, v130, v526);
                v134 = v511;
                v133 = v512;
LABEL_161:
                v135 = v514;
                goto LABEL_298;
              }
              goto LABEL_273;
            }
            v335 = (v510 + ((v509 + v197) & v56)) & v534;
            if (v493 <= 0x7FFFFFFD)
            {
              v333 = *(_QWORD *)(((v489 + ((v505 + v335) & v534)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_327:
              if (v333 >= 0xFFFFFFFF)
                LODWORD(v333) = -1;
              v132 = (void *)((v527 + v549) & v542);
              if ((v333 + 1) >= 2)
                goto LABEL_160;
LABEL_274:
              v560 = v39;
              v129((uint64_t)v132, (uint64_t)v130, AssociatedTypeWitness);
              v129(((unint64_t)v132 + v530) & v543, v152, AssociatedTypeWitness);
              v337 = (v531 + (((unint64_t)v132 + v530) & v543)) & v478;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v516 + 16))(v337, v153, v517);
              v338 = (_QWORD *)((v515 + v337) & 0xFFFFFFFFFFFFFFF8);
              v339 = (_QWORD *)((v515 + v153) & 0xFFFFFFFFFFFFFFF8);
              *v338 = *v339;
              v340 = ((unint64_t)v338 + v506) & v533;
              v341 = ((unint64_t)v339 + v506) & v533;
              v342 = *(void (**)(unint64_t, unint64_t, uint64_t))(v507 + 16);
              swift_bridgeObjectRetain();
              v342(v340, v341, v508);
              v343 = (_QWORD *)((v497 + v340) & 0xFFFFFFFFFFFFF8);
              v344 = (_QWORD *)((v497 + v341) & 0xFFFFFFFFFFFFF8);
              *v343 = *v344;
              v345 = (_QWORD *)(((unint64_t)v343 + 15) & 0xFFFFFFFFFFFFFFF8);
              v346 = (_QWORD *)(((unint64_t)v344 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v345 = *v346;
              v345[1] = v346[1];
              v347 = (_QWORD *)(v520 + v337);
              *v347 = *(_QWORD *)(v520 + v153);
              v347[1] = *(_QWORD *)(v520 + v153 + 8);
              v348 = (v509 + v520 + v337) & v128;
              v349 = (v509 + v520 + v153) & v128;
              *(_BYTE *)v348 = *(_BYTE *)v349;
              v350 = v348 | 4;
              v351 = *(_DWORD *)(v349 | 4);
              *(_BYTE *)(v350 + 4) = *(_BYTE *)((v349 | 4) + 4);
              *(_DWORD *)v350 = v351;
              *(_WORD *)(v348 + 10) = *(_WORD *)(v349 + 0xA);
              v566 = v348;
              v352 = (v510 + v348) & v534;
              v548 = v349;
              v353 = (v510 + v349) & v534;
              v354 = *(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v354(v352, v353, v51);
              v355 = (v505 + v352) & v534;
              v356 = (v505 + v353) & v534;
              v354(v355, v356, v51);
              v357 = (_BYTE *)(v355 + v501);
              *v357 = *(_BYTE *)(v356 + v501);
              v357[1] = *(_BYTE *)(v356 + v501 + 1);
              v357[2] = *(_BYTE *)(v356 + v501 + 2);
              v357[3] = *(_BYTE *)(v356 + v501 + 3);
              v357[4] = *(_BYTE *)(v356 + v501 + 4);
              v358 = (v355 + v501 + 12) & 0xFFFFFFFFFFFFFFF8;
              v359 = (v356 + v501 + 12) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v358 = *(_QWORD *)v359;
              *(_QWORD *)(v358 + 8) = *(_QWORD *)(v359 + 8);
              *(_BYTE *)(v358 + 16) = *(_BYTE *)(v359 + 16);
              *(_BYTE *)(v358 + 17) = *(_BYTE *)(v359 + 17);
              *(_BYTE *)(v358 + 18) = *(_BYTE *)(v359 + 18);
              *(_BYTE *)(v358 + 19) = *(_BYTE *)(v359 + 19);
              v360 = (v358 + 27) & 0xFFFFFFFFFFFFFFF8;
              v361 = (v359 + 27) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v360 = *(_QWORD *)v361;
              *(_BYTE *)(v360 + 8) = *(_BYTE *)(v361 + 8);
              *(_BYTE *)(v360 + 9) = *(_BYTE *)(v361 + 9);
              *(_BYTE *)(v360 + 10) = *(_BYTE *)(v361 + 10);
              *(_BYTE *)(v360 + 11) = *(_BYTE *)(v361 + 11);
              *(_BYTE *)(v360 + 12) = *(_BYTE *)(v361 + 12);
              v362 = (_QWORD *)((v358 + 47) & 0xFFFFFFFFFFFFF8);
              v363 = (_QWORD *)((v359 + 47) & 0xFFFFFFFFFFFFF8);
              *v362 = *v363;
              v364 = ((unint64_t)v362 + 15) & 0xFFFFFFFFFFFFFFF8;
              v365 = ((unint64_t)v363 + 15) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v364 = *(_QWORD *)v365;
              *(_BYTE *)(v364 + 8) = *(_BYTE *)(v365 + 8);
              *(_BYTE *)(v364 + 9) = *(_BYTE *)(v365 + 9);
              v366 = (void *)((v498 + v364) & v534);
              v367 = (const void *)((v498 + v365) & v534);
              v368 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v522 + 48);
              swift_bridgeObjectRetain();
              if (v368(v367, 1, v51))
              {
                memcpy(v366, v367, v514);
              }
              else
              {
                v354((unint64_t)v366, (unint64_t)v367, v51);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v522 + 56))(v366, 0, 1, v51);
              }
              v369 = (_QWORD *)(((unint64_t)v366 + v499) & 0xFFFFFFFFFFFFFFF8);
              v370 = (_QWORD *)(((unint64_t)v367 + v499) & 0xFFFFFFFFFFFFFFF8);
              *v369 = *v370;
              v371 = ((unint64_t)v369 + 15) & 0xFFFFFFFFFFFFFFF8;
              v372 = ((unint64_t)v370 + 15) & 0xFFFFFFFFFFFFFFF8;
              v373 = *(_QWORD *)v372;
              *(_BYTE *)(v371 + 8) = *(_BYTE *)(v372 + 8);
              *(_QWORD *)v371 = v373;
              v374 = (_QWORD *)(((unint64_t)v369 + 31) & 0xFFFFFFFFFFFFF8);
              v375 = (_QWORD *)(((unint64_t)v370 + 31) & 0xFFFFFFFFFFFFF8);
              *v374 = *v375;
              v376 = ((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8;
              v377 = (uint64_t *)(((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8);
              v378 = v377[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((v378 & 0x3000000000000000) != 0)
              {
                *(_OWORD *)v376 = *(_OWORD *)v377;
              }
              else
              {
                v379 = *v377;
                sub_23AAAE668(*v377, v378);
                *(_QWORD *)v376 = v379;
                *(_QWORD *)(v376 + 8) = v378;
              }
              v380 = (v376 + 19) & 0xFFFFFFFFFFFFFFF8;
              v381 = ((unint64_t)v377 + 19) & 0xFFFFFFFFFFFFFFF8;
              v382 = *(_QWORD *)v381;
              *(_BYTE *)(v380 + 8) = *(_BYTE *)(v381 + 8);
              *(_QWORD *)v380 = v382;
              *(_BYTE *)(v380 + 9) = *(_BYTE *)(v381 + 9);
              v383 = (v380 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              v384 = (v381 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              v385 = *(_DWORD *)v384;
              *(_BYTE *)(v383 + 4) = *(_BYTE *)(v384 + 4);
              *(_DWORD *)v383 = v385;
              v386 = (_QWORD *)((v380 + 25) & 0xFFFFFFFFFFFFFFF8);
              v387 = (_QWORD *)((v381 + 25) & 0xFFFFFFFFFFFFFFF8);
              *v386 = *v387;
              v386[1] = v387[1];
              v388 = v500 + v566;
              v389 = (__int128 *)(v500 + v548);
              v390 = *(_QWORD *)(v500 + v548 + 16);
              if (v390 >= 0xFFFFFFFF)
                LODWORD(v390) = -1;
              v391 = v390 - 1;
              swift_bridgeObjectRetain();
              if (v391 < 0)
              {
                *(_QWORD *)v388 = *(_QWORD *)v389;
                *(_BYTE *)(v388 + 8) = *((_BYTE *)v389 + 8);
                *(_BYTE *)(v388 + 9) = *((_BYTE *)v389 + 9);
                v404 = (void *)*((_QWORD *)v389 + 2);
                v405 = v404;
                *(_QWORD *)(v388 + 16) = v404;
                v406 = (void *)*((_QWORD *)v389 + 3);
                v407 = v406;
                *(_QWORD *)(v388 + 24) = v406;
                *(_BYTE *)(v388 + 32) = *((_BYTE *)v389 + 32);
                *(_BYTE *)(v388 + 33) = *((_BYTE *)v389 + 33);
                *(_BYTE *)(v388 + 34) = *((_BYTE *)v389 + 34);
                *(_QWORD *)(v388 + 40) = *((_QWORD *)v389 + 5);
                *(_QWORD *)(v388 + 48) = *((_QWORD *)v389 + 6);
                *(_QWORD *)(v388 + 56) = *((_QWORD *)v389 + 7);
                *(_QWORD *)(v388 + 64) = *((_QWORD *)v389 + 8);
                *(_BYTE *)(v388 + 72) = *((_BYTE *)v389 + 72);
                *(_QWORD *)(v388 + 80) = *((_QWORD *)v389 + 10);
                *(_QWORD *)(v388 + 88) = *((_QWORD *)v389 + 11);
                v567 = (void *)*((_QWORD *)v389 + 12);
                *(_QWORD *)(v388 + 96) = v567;
                *(_BYTE *)(v388 + 104) = *((_BYTE *)v389 + 104);
                *(_BYTE *)(v388 + 105) = *((_BYTE *)v389 + 105);
                *(_QWORD *)(v388 + 112) = *((_QWORD *)v389 + 14);
                *(_QWORD *)(v388 + 120) = *((_QWORD *)v389 + 15);
                *(_QWORD *)(v388 + 128) = *((_QWORD *)v389 + 16);
                *(_QWORD *)(v388 + 136) = *((_QWORD *)v389 + 17);
                *(_QWORD *)(v388 + 144) = *((_QWORD *)v389 + 18);
                *(_QWORD *)(v388 + 152) = *((_QWORD *)v389 + 19);
                *(_QWORD *)(v388 + 160) = *((_QWORD *)v389 + 20);
                *(_QWORD *)(v388 + 168) = *((_QWORD *)v389 + 21);
                *(_BYTE *)(v388 + 176) = *((_BYTE *)v389 + 176);
                *(_QWORD *)(v388 + 184) = *((_QWORD *)v389 + 23);
                v544 = *((_QWORD *)v389 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v408 = v567;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v544)
                {
                  *(_QWORD *)(v388 + 192) = v544;
                  *(_QWORD *)(v388 + 200) = *((_QWORD *)v389 + 25);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v388 + 192) = v389[12];
                }
                v3 = v549;
                v134 = v511;
                v133 = v512;
                *(_QWORD *)(v388 + 208) = *((_QWORD *)v389 + 26);
                *(_QWORD *)(v388 + 216) = *((_QWORD *)v389 + 27);
                *(_QWORD *)(v388 + 224) = *((_QWORD *)v389 + 28);
                *(_QWORD *)(v388 + 232) = *((_QWORD *)v389 + 29);
                *(_QWORD *)(v388 + 240) = *((_QWORD *)v389 + 30);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                v392 = *v389;
                v393 = v389[1];
                v394 = v389[3];
                *(_OWORD *)(v388 + 32) = v389[2];
                *(_OWORD *)(v388 + 48) = v394;
                *(_OWORD *)v388 = v392;
                *(_OWORD *)(v388 + 16) = v393;
                v395 = v389[4];
                v396 = v389[5];
                v397 = v389[7];
                *(_OWORD *)(v388 + 96) = v389[6];
                *(_OWORD *)(v388 + 112) = v397;
                *(_OWORD *)(v388 + 64) = v395;
                *(_OWORD *)(v388 + 80) = v396;
                v398 = v389[8];
                v399 = v389[9];
                v400 = v389[11];
                *(_OWORD *)(v388 + 160) = v389[10];
                *(_OWORD *)(v388 + 176) = v400;
                *(_OWORD *)(v388 + 128) = v398;
                *(_OWORD *)(v388 + 144) = v399;
                v401 = v389[12];
                v402 = v389[13];
                v403 = v389[14];
                *(_QWORD *)(v388 + 240) = *((_QWORD *)v389 + 30);
                *(_OWORD *)(v388 + 208) = v402;
                *(_OWORD *)(v388 + 224) = v403;
                *(_OWORD *)(v388 + 192) = v401;
                v134 = v511;
                v133 = v512;
              }
              v441 = (_OWORD *)((v388 + 255) & 0xFFFFFFFFFFFFFFF8);
              v442 = (__int128 *)(((unint64_t)v389 + 255) & 0xFFFFFFFFFFFFFFF8);
              v443 = *v442;
              *(_OWORD *)((char *)v441 + 9) = *(__int128 *)((char *)v442 + 9);
              *v441 = v443;
              v444 = (v388 + 287) & 0xFFFFFFFFFFFFFFF8;
              v445 = ((unint64_t)v389 + 287) & 0xFFFFFFFFFFFFFFF8;
              v446 = *(_OWORD *)v445;
              *(_BYTE *)(v444 + 16) = *(_BYTE *)(v445 + 16);
              *(_OWORD *)v444 = v446;
              v447 = (_QWORD *)((v388 + 311) & 0xFFFFFFFFFFFFF8);
              v448 = ((unint64_t)v389 + 311) & 0xFFFFFFFFFFFFF8;
              v449 = *(_QWORD *)v448;
              v448 += 15;
              *v447 = v449;
              v450 = (_QWORD *)(((unint64_t)v447 + 15) & 0xFFFFFFFFFFFFFFF8);
              v451 = *(_QWORD *)(v448 & 0xFFFFFFFFFFFFFFF8);
              v452 = *(_QWORD *)((v448 & 0xFFFFFFFFFFFFFFF8) + 8);
              sub_23AA7F2D4(v451, v452);
              *v450 = v451;
              v450[1] = v452;
              v135 = v501;
              v39 = v560;
              v132 = (void *)((v527 + v549) & v542);
              if (!v493)
                goto LABEL_161;
LABEL_298:
              v453 = ((((v133
                       + ((((((((((v134 + v135 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 19) & 0xFFFFFFFFFFFFFFF8)
                         + 25) & 0xFFFFFFFFFFFFFFF8)
                       + 327) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 16;
              v454 = (void *)(((unint64_t)v132 + v550 + v453) & v485);
              v455 = (const void *)(((unint64_t)v555 + v550 + v453) & v485);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v524 + 48))(v455, 1, v525))
              {
                memcpy(v454, v455, __n);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v524 + 16))(v454, v455, v525);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v524 + 56))(v454, 0, 1, v525);
              }
              v456 = (char *)(((unint64_t)v454 + v523) & v538);
              v457 = (char *)(((unint64_t)v455 + v523) & v538);
              if (v540 == v481)
              {
                if (!(*(unsigned int (**)(unint64_t))(v518 + 48))(((unint64_t)v455 + v523) & v538))
                  goto LABEL_311;
              }
              else
              {
                v458 = (_QWORD *)((unint64_t)&v457[v521] & 0xFFFFFFFFFFFFFFF8);
                if (v494 > 0x7FFFFFFE)
                {
                  if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v503 + 48))(((unint64_t)v458 + v502) & v536, v486, v504))
                  {
LABEL_311:
                    v458 = (_QWORD *)((unint64_t)&v457[v521] & 0xFFFFFFFFFFFFFFF8);
LABEL_312:
                    (*(void (**)(char *, char *, uint64_t))(v518 + 16))(v456, v457, v519);
                    v460 = (_QWORD *)((unint64_t)&v456[v521] & 0xFFFFFFFFFFFFFFF8);
                    *v460 = *v458;
                    v461 = ((unint64_t)v460 + v502) & v536;
                    v462 = ((unint64_t)v458 + v502) & v536;
                    v463 = *(void (**)(unint64_t, unint64_t, uint64_t))(v503 + 16);
                    swift_bridgeObjectRetain();
                    v463(v461, v462, v504);
                    v464 = (_QWORD *)((v492 + v461) & 0xFFFFFFFFFFFFF8);
                    v465 = (_QWORD *)((v492 + v462) & 0xFFFFFFFFFFFFF8);
                    *v464 = *v465;
                    v466 = (_QWORD *)(((unint64_t)v464 + 15) & 0xFFFFFFFFFFFFFFF8);
                    v467 = (_QWORD *)(((unint64_t)v465 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *v466 = *v467;
                    v466[1] = v467[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    goto LABEL_313;
                  }
                }
                else
                {
                  v459 = *v458;
                  if (*v458 >= 0xFFFFFFFFuLL)
                    LODWORD(v459) = -1;
                  if ((v459 + 1) < 2)
                    goto LABEL_312;
                }
              }
              memcpy(v456, v457, v39);
LABEL_313:
              *(_QWORD *)&v456[v39] = *(_QWORD *)&v457[v39];
              v468 = (_QWORD *)((unint64_t)&v456[v39 + 15] & 0xFFFFFFFFFFFFF8);
              v469 = (_QWORD *)((unint64_t)&v457[v39 + 15] & 0xFFFFFFFFFFFFFFF8);
              *v468 = *v469;
              v243 = *(void **)(((unint64_t)v469 + 15) & 0xFFFFFFFFFFFFF8);
              *(_QWORD *)(((unint64_t)v468 + 15) & 0xFFFFFFFFFFFFF8) = v243;
              v244 = 1;
LABEL_314:
              *(_BYTE *)(v3 + v49) = v244;
              v470 = v243;
              return v3;
            }
            v336 = (*(uint64_t (**)(uint64_t))(v522 + 48))(v335);
          }
          v130 = (const void *)((v527 + a2) & v542);
          v132 = (void *)((v527 + v549) & v542);
          if (v336)
            goto LABEL_160;
LABEL_273:
          v152 = ((unint64_t)v130 + v530) & v543;
          v153 = (v531 + v152) & v478;
          goto LABEL_274;
        case 2:
          v136 = v38;
          ((void (*)(uint64_t, uint64_t, uint64_t))v557[2])(v549, a2, AssociatedTypeWitness);
          v137 = (void *)(((unint64_t)__dst + v549) & v57);
          v138 = (const void *)(((unint64_t)__dst + a2) & v57);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v524 + 48))(v138, 1, v525))
          {
            memcpy(v137, v138, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v524 + 16))(v137, v138, v525);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v524 + 56))(v137, 0, 1, v525);
          }
          v156 = (char *)(((unint64_t)v137 + v523) & v538);
          v157 = (_BYTE *)(((unint64_t)v138 + v523) & v538);
          if (v540 == v136)
          {
            if (!(*(unsigned int (**)(_BYTE *))(v518 + 48))(v157))
              goto LABEL_220;
          }
          else
          {
            v158 = (uint64_t *)((unint64_t)&v157[v521] & 0xFFFFFFFFFFFFFFF8);
            if (v494 > 0x7FFFFFFE)
            {
              if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v503 + 48))(((unint64_t)v158 + v502) & v536, v486, v504))
              {
LABEL_220:
                v158 = (uint64_t *)((unint64_t)&v157[v521] & 0xFFFFFFFFFFFFFFF8);
                goto LABEL_221;
              }
            }
            else
            {
              v159 = *v158;
              if ((unint64_t)*v158 >= 0xFFFFFFFF)
                LODWORD(v159) = -1;
              if ((v159 + 1) < 2)
              {
LABEL_221:
                (*(void (**)(char *, _BYTE *, uint64_t))(v518 + 16))(v156, v157, v519);
                v234 = (_QWORD *)((unint64_t)&v156[v521] & 0xFFFFFFFFFFFFFFF8);
                *v234 = *v158;
                v235 = ((unint64_t)v234 + v502) & v536;
                v236 = ((unint64_t)v158 + v502) & v536;
                v237 = *(void (**)(unint64_t, unint64_t, uint64_t))(v503 + 16);
                swift_bridgeObjectRetain();
                v237(v235, v236, v504);
                v238 = (_QWORD *)((v492 + v235) & 0xFFFFFFFFFFFFF8);
                v239 = (_QWORD *)((v492 + v236) & 0xFFFFFFFFFFFFF8);
                *v238 = *v239;
                v240 = (_QWORD *)(((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8);
                v241 = (_QWORD *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
                *v240 = *v241;
                v240[1] = v241[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
LABEL_222:
                v242 = &v156[v39];
                *v242 = v157[v39];
                v243 = *(void **)&v157[v39 + 8];
                *((_QWORD *)v242 + 1) = v243;
                v244 = 2;
                goto LABEL_314;
              }
            }
          }
          memcpy(v156, v157, v39);
          goto LABEL_222;
        case 3:
          v139 = v55;
          v140 = (void (*)(uint64_t, uint64_t, uint64_t))v557[2];
          v140(v549, a2, AssociatedTypeWitness);
          v552 = (void *)((v527 + v549) & v542);
          v556 = (const void *)((v527 + a2) & v542);
          if (v529 == v528)
          {
            v141 = (unsigned int (*)(void))v557[6];
            goto LABEL_166;
          }
          v154 = (v530 + ((v527 + a2) & v542)) & v543;
          v155 = (v531 + v154) & v139;
          if (v513 == v528)
          {
            if (v491 == v513)
            {
              v141 = *(unsigned int (**)(void))(v516 + 48);
              goto LABEL_166;
            }
            if (v483 <= 0x7FFFFFFE)
            {
              v334 = *(_QWORD *)((v515 + v155) & 0xFFFFFFFFFFFFFFF8);
              goto LABEL_332;
            }
            v141 = *(unsigned int (**)(void))(v507 + 48);
          }
          else
          {
            v199 = v520 + v155;
            if ((v490 & 0x80000000) == 0)
            {
              v200 = *(_QWORD *)(v199 + 8);
              if (v200 >= 0xFFFFFFFF)
                LODWORD(v200) = -1;
              if ((_DWORD)v200 != -1)
                goto LABEL_167;
LABEL_215:
              v154 = ((unint64_t)v556 + v530) & v543;
              v155 = (v531 + v154) & v139;
              goto LABEL_216;
            }
            if (v493 <= 0x7FFFFFFD)
            {
              v334 = *(_QWORD *)(((v489 + ((v505 + ((v510 + ((v509 + v199) & v56)) & v534)) & v534)) & 0xFFFFFFFFFFFFF8)
                               + 8);
LABEL_332:
              if (v334 >= 0xFFFFFFFF)
                LODWORD(v334) = -1;
              if ((v334 + 1) >= 2)
                goto LABEL_167;
LABEL_216:
              v140((uint64_t)v552, (uint64_t)v556, AssociatedTypeWitness);
              v201 = ((unint64_t)v552 + v530) & v543;
              v140(v201, v154, AssociatedTypeWitness);
              v202 = (v531 + v201) & v139;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v516 + 16))(v202, v155, v517);
              v203 = (_QWORD *)((v515 + v202) & 0xFFFFFFFFFFFFFFF8);
              v204 = (_QWORD *)((v515 + v155) & 0xFFFFFFFFFFFFFFF8);
              *v203 = *v204;
              v205 = ((unint64_t)v203 + v506) & v533;
              v206 = ((unint64_t)v204 + v506) & v533;
              v207 = *(void (**)(unint64_t, unint64_t, uint64_t))(v507 + 16);
              swift_bridgeObjectRetain();
              v207(v205, v206, v508);
              v208 = (_QWORD *)((v497 + v205) & 0xFFFFFFFFFFFFF8);
              v209 = (_QWORD *)((v497 + v206) & 0xFFFFFFFFFFFFF8);
              *v208 = *v209;
              v210 = (_QWORD *)(((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8);
              v211 = (_QWORD *)(((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8);
              *v210 = *v211;
              v210[1] = v211[1];
              v212 = (_QWORD *)(v520 + v202);
              *v212 = *(_QWORD *)(v520 + v155);
              v212[1] = *(_QWORD *)(v520 + v155 + 8);
              v213 = (v509 + v520 + v202) & v56;
              v214 = (v509 + v520 + v155) & v56;
              *(_BYTE *)v213 = *(_BYTE *)v214;
              v215 = v213 | 4;
              v216 = *(_DWORD *)(v214 | 4);
              *(_BYTE *)(v215 + 4) = *(_BYTE *)((v214 | 4) + 4);
              *(_DWORD *)v215 = v216;
              *(_WORD *)(v213 + 10) = *(_WORD *)(v214 + 0xA);
              v559 = v214;
              v563 = v213;
              v217 = (v510 + v213) & v534;
              v218 = (v510 + v214) & v534;
              v219 = *(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v219(v217, v218, v51);
              v220 = (v505 + v217) & v534;
              v221 = (v505 + v218) & v534;
              v219(v220, v221, v51);
              v222 = (_BYTE *)(v220 + v501);
              *v222 = *(_BYTE *)(v221 + v501);
              v222[1] = *(_BYTE *)(v221 + v501 + 1);
              v222[2] = *(_BYTE *)(v221 + v501 + 2);
              v222[3] = *(_BYTE *)(v221 + v501 + 3);
              v222[4] = *(_BYTE *)(v221 + v501 + 4);
              v223 = (v220 + v501 + 12) & 0xFFFFFFFFFFFFFFF8;
              v224 = (v221 + v501 + 12) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v223 = *(_QWORD *)v224;
              *(_QWORD *)(v223 + 8) = *(_QWORD *)(v224 + 8);
              *(_BYTE *)(v223 + 16) = *(_BYTE *)(v224 + 16);
              *(_BYTE *)(v223 + 17) = *(_BYTE *)(v224 + 17);
              *(_BYTE *)(v223 + 18) = *(_BYTE *)(v224 + 18);
              *(_BYTE *)(v223 + 19) = *(_BYTE *)(v224 + 19);
              v225 = (v223 + 27) & 0xFFFFFFFFFFFFFFF8;
              v226 = (v224 + 27) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v225 = *(_QWORD *)v226;
              *(_BYTE *)(v225 + 8) = *(_BYTE *)(v226 + 8);
              *(_BYTE *)(v225 + 9) = *(_BYTE *)(v226 + 9);
              *(_BYTE *)(v225 + 10) = *(_BYTE *)(v226 + 10);
              *(_BYTE *)(v225 + 11) = *(_BYTE *)(v226 + 11);
              *(_BYTE *)(v225 + 12) = *(_BYTE *)(v226 + 12);
              v227 = (_QWORD *)((v223 + 47) & 0xFFFFFFFFFFFFF8);
              v228 = (_QWORD *)((v224 + 47) & 0xFFFFFFFFFFFFF8);
              *v227 = *v228;
              v229 = ((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8;
              v230 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v229 = *(_QWORD *)v230;
              *(_BYTE *)(v229 + 8) = *(_BYTE *)(v230 + 8);
              *(_BYTE *)(v229 + 9) = *(_BYTE *)(v230 + 9);
              v231 = (void *)((v498 + v229) & v534);
              v232 = (const void *)((v498 + v230) & v534);
              v233 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v522 + 48);
              swift_bridgeObjectRetain();
              if (v233(v232, 1, v51))
              {
                memcpy(v231, v232, v514);
              }
              else
              {
                v219((unint64_t)v231, (unint64_t)v232, v51);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v522 + 56))(v231, 0, 1, v51);
              }
              v255 = (_QWORD *)(((unint64_t)v231 + v499) & 0xFFFFFFFFFFFFFFF8);
              v256 = (_QWORD *)(((unint64_t)v232 + v499) & 0xFFFFFFFFFFFFFFF8);
              *v255 = *v256;
              v257 = ((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8;
              v258 = ((unint64_t)v256 + 15) & 0xFFFFFFFFFFFFFFF8;
              v259 = *(_QWORD *)v258;
              *(_BYTE *)(v257 + 8) = *(_BYTE *)(v258 + 8);
              *(_QWORD *)v257 = v259;
              v260 = (_QWORD *)(((unint64_t)v255 + 31) & 0xFFFFFFFFFFFFF8);
              v261 = (_QWORD *)(((unint64_t)v256 + 31) & 0xFFFFFFFFFFFFF8);
              *v260 = *v261;
              v262 = ((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8;
              v263 = (uint64_t *)(((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8);
              v264 = v263[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((v264 & 0x3000000000000000) != 0)
              {
                *(_OWORD *)v262 = *(_OWORD *)v263;
              }
              else
              {
                v290 = *v263;
                sub_23AAAE668(*v263, v264);
                *(_QWORD *)v262 = v290;
                *(_QWORD *)(v262 + 8) = v264;
              }
              v291 = (v262 + 19) & 0xFFFFFFFFFFFFFFF8;
              v292 = ((unint64_t)v263 + 19) & 0xFFFFFFFFFFFFFFF8;
              v293 = *(_QWORD *)v292;
              *(_BYTE *)(v291 + 8) = *(_BYTE *)(v292 + 8);
              *(_QWORD *)v291 = v293;
              *(_BYTE *)(v291 + 9) = *(_BYTE *)(v292 + 9);
              v294 = (v291 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              v295 = (v292 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              v296 = *(_DWORD *)v295;
              *(_BYTE *)(v294 + 4) = *(_BYTE *)(v295 + 4);
              *(_DWORD *)v294 = v296;
              v297 = (_QWORD *)((v291 + 25) & 0xFFFFFFFFFFFFFFF8);
              v298 = (_QWORD *)((v292 + 25) & 0xFFFFFFFFFFFFFFF8);
              *v297 = *v298;
              v297[1] = v298[1];
              v299 = v500 + v563;
              v300 = (__int128 *)(v500 + v559);
              v301 = *(_QWORD *)(v500 + v559 + 16);
              if (v301 >= 0xFFFFFFFF)
                LODWORD(v301) = -1;
              v302 = v301 - 1;
              swift_bridgeObjectRetain();
              if (v302 < 0)
              {
                *(_QWORD *)v299 = *(_QWORD *)v300;
                *(_BYTE *)(v299 + 8) = *((_BYTE *)v300 + 8);
                *(_BYTE *)(v299 + 9) = *((_BYTE *)v300 + 9);
                v320 = (void *)*((_QWORD *)v300 + 2);
                v321 = v320;
                *(_QWORD *)(v299 + 16) = v320;
                v322 = (void *)*((_QWORD *)v300 + 3);
                v323 = v322;
                *(_QWORD *)(v299 + 24) = v322;
                *(_BYTE *)(v299 + 32) = *((_BYTE *)v300 + 32);
                *(_BYTE *)(v299 + 33) = *((_BYTE *)v300 + 33);
                *(_BYTE *)(v299 + 34) = *((_BYTE *)v300 + 34);
                *(_QWORD *)(v299 + 40) = *((_QWORD *)v300 + 5);
                *(_QWORD *)(v299 + 48) = *((_QWORD *)v300 + 6);
                *(_QWORD *)(v299 + 56) = *((_QWORD *)v300 + 7);
                *(_QWORD *)(v299 + 64) = *((_QWORD *)v300 + 8);
                *(_BYTE *)(v299 + 72) = *((_BYTE *)v300 + 72);
                *(_QWORD *)(v299 + 80) = *((_QWORD *)v300 + 10);
                *(_QWORD *)(v299 + 88) = *((_QWORD *)v300 + 11);
                v565 = (void *)*((_QWORD *)v300 + 12);
                *(_QWORD *)(v299 + 96) = v565;
                *(_BYTE *)(v299 + 104) = *((_BYTE *)v300 + 104);
                *(_BYTE *)(v299 + 105) = *((_BYTE *)v300 + 105);
                *(_QWORD *)(v299 + 112) = *((_QWORD *)v300 + 14);
                *(_QWORD *)(v299 + 120) = *((_QWORD *)v300 + 15);
                *(_QWORD *)(v299 + 128) = *((_QWORD *)v300 + 16);
                *(_QWORD *)(v299 + 136) = *((_QWORD *)v300 + 17);
                *(_QWORD *)(v299 + 144) = *((_QWORD *)v300 + 18);
                *(_QWORD *)(v299 + 152) = *((_QWORD *)v300 + 19);
                *(_QWORD *)(v299 + 160) = *((_QWORD *)v300 + 20);
                *(_QWORD *)(v299 + 168) = *((_QWORD *)v300 + 21);
                *(_BYTE *)(v299 + 176) = *((_BYTE *)v300 + 176);
                *(_QWORD *)(v299 + 184) = *((_QWORD *)v300 + 23);
                v547 = *((_QWORD *)v300 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v324 = v565;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v547)
                {
                  *(_QWORD *)(v299 + 192) = v547;
                  *(_QWORD *)(v299 + 200) = *((_QWORD *)v300 + 25);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v299 + 192) = v300[12];
                }
                v3 = v549;
                v145 = v511;
                v144 = v512;
                *(_QWORD *)(v299 + 208) = *((_QWORD *)v300 + 26);
                *(_QWORD *)(v299 + 216) = *((_QWORD *)v300 + 27);
                *(_QWORD *)(v299 + 224) = *((_QWORD *)v300 + 28);
                *(_QWORD *)(v299 + 232) = *((_QWORD *)v300 + 29);
                *(_QWORD *)(v299 + 240) = *((_QWORD *)v300 + 30);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                v303 = *v300;
                v304 = v300[1];
                v305 = v300[3];
                *(_OWORD *)(v299 + 32) = v300[2];
                *(_OWORD *)(v299 + 48) = v305;
                *(_OWORD *)v299 = v303;
                *(_OWORD *)(v299 + 16) = v304;
                v306 = v300[4];
                v307 = v300[5];
                v308 = v300[7];
                *(_OWORD *)(v299 + 96) = v300[6];
                *(_OWORD *)(v299 + 112) = v308;
                *(_OWORD *)(v299 + 64) = v306;
                *(_OWORD *)(v299 + 80) = v307;
                v309 = v300[8];
                v310 = v300[9];
                v311 = v300[11];
                *(_OWORD *)(v299 + 160) = v300[10];
                *(_OWORD *)(v299 + 176) = v311;
                *(_OWORD *)(v299 + 128) = v309;
                *(_OWORD *)(v299 + 144) = v310;
                v312 = v300[12];
                v313 = v300[13];
                v314 = v300[14];
                *(_QWORD *)(v299 + 240) = *((_QWORD *)v300 + 30);
                *(_OWORD *)(v299 + 208) = v313;
                *(_OWORD *)(v299 + 224) = v314;
                *(_OWORD *)(v299 + 192) = v312;
                v145 = v511;
                v144 = v512;
              }
              v426 = (_OWORD *)((v299 + 255) & 0xFFFFFFFFFFFFFFF8);
              v427 = (__int128 *)(((unint64_t)v300 + 255) & 0xFFFFFFFFFFFFFFF8);
              v428 = *v427;
              *(_OWORD *)((char *)v426 + 9) = *(__int128 *)((char *)v427 + 9);
              *v426 = v428;
              v429 = (v299 + 287) & 0xFFFFFFFFFFFFFFF8;
              v430 = ((unint64_t)v300 + 287) & 0xFFFFFFFFFFFFFFF8;
              v431 = *(_OWORD *)v430;
              *(_BYTE *)(v429 + 16) = *(_BYTE *)(v430 + 16);
              *(_OWORD *)v429 = v431;
              v432 = (_QWORD *)((v299 + 311) & 0xFFFFFFFFFFFFF8);
              v433 = ((unint64_t)v300 + 311) & 0xFFFFFFFFFFFFF8;
              v434 = *(_QWORD *)v433;
              v433 += 15;
              *v432 = v434;
              v435 = (_QWORD *)(((unint64_t)v432 + 15) & 0xFFFFFFFFFFFFFFF8);
              v436 = *(_QWORD *)(v433 & 0xFFFFFFFFFFFFFFF8);
              v437 = *(_QWORD *)((v433 & 0xFFFFFFFFFFFFFFF8) + 8);
              sub_23AA7F2D4(v436, v437);
              *v435 = v436;
              v435[1] = v437;
              v146 = v501;
              v142 = (v527 + v549) & v542;
              v143 = (uint64_t)v556;
              if (v493)
              {
LABEL_294:
                v438 = ((((v144
                         + ((((((((((v145 + v146 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 19) & 0xFFFFFFFFFFFFFFF8)
                           + 25) & 0xFFFFFFFFFFFFFFF8)
                         + 327) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 16;
                v439 = (_QWORD *)((v142 + v438) & 0xFFFFFFFFFFFFFFF8);
                v440 = (_QWORD *)((v143 + v438) & 0xFFFFFFFFFFFFFFF8);
                *v439 = *v440;
                v439[1] = v440[1];
                *(_QWORD *)(((unint64_t)v439 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v440
                                                                                             + 23) & 0xFFFFFFFFFFFFF8);
                *(_BYTE *)(v3 + v49) = 3;
                swift_bridgeObjectRetain();
                return v3;
              }
LABEL_168:
              v146 = v514;
              goto LABEL_294;
            }
            v141 = *(unsigned int (**)(void))(v522 + 48);
          }
LABEL_166:
          if (v141())
          {
LABEL_167:
            v142 = (v527 + v549) & v542;
            v143 = (v527 + a2) & v542;
            memcpy(v552, v556, v526);
            v145 = v511;
            v144 = v512;
            goto LABEL_168;
          }
          goto LABEL_215;
        case 4:
          ((void (*)(uint64_t, uint64_t, uint64_t))v557[2])(v549, a2, AssociatedTypeWitness);
          v147 = 4;
          goto LABEL_194;
        case 5:
          ((void (*)(uint64_t, uint64_t, uint64_t))v557[2])(v549, a2, AssociatedTypeWitness);
          v147 = 5;
          goto LABEL_194;
        case 6:
          ((void (*)(uint64_t, uint64_t, uint64_t))v557[2])(v549, a2, AssociatedTypeWitness);
          v148 = (void *)((v487 + v549) & v495);
          v149 = (const void *)((v487 + a2) & v495);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v149, 1, v553))
          {
            memcpy(v148, v149, v482);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v148, v149, v553);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v148, 0, 1, v553);
          }
          v147 = 6;
          goto LABEL_194;
        case 7:
          ((void (*)(uint64_t, uint64_t, uint64_t))v557[2])(v549, a2, AssociatedTypeWitness);
          v147 = 7;
LABEL_194:
          *(_BYTE *)(v549 + v49) = v147;
          return v3;
        default:
          if (v49 <= 3)
            v119 = v49;
          else
            v119 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 1:
      v480 = v38;
      v73 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v557[1];
      v73(v549, AssociatedTypeWitness, v53, v54);
      v74 = (v527 + v549) & v542;
      if (v529 == v528)
      {
        v75 = (uint64_t (*)(unint64_t))v557[6];
        v76 = (v527 + v549) & v542;
        goto LABEL_66;
      }
      v78 = (v530 + v74) & v543;
      v79 = (v531 + v78) & v55;
      if (v513 == v528)
      {
        if (v491 == v513)
        {
          v75 = *(uint64_t (**)(unint64_t))(v516 + 48);
          v76 = (v531 + v78) & v55;
          goto LABEL_66;
        }
        v327 = (unint64_t *)((v515 + v79) & 0xFFFFFFFFFFFFFFF8);
        if (v483 <= 0x7FFFFFFE)
        {
          v328 = *v327;
          goto LABEL_342;
        }
        v76 = ((unint64_t)v327 + v506) & v533;
        v75 = *(uint64_t (**)(unint64_t))(v507 + 48);
      }
      else
      {
        v117 = v520 + v79;
        if ((v490 & 0x80000000) == 0)
        {
          v118 = *(_QWORD *)(v117 + 8);
          if (v118 >= 0xFFFFFFFF)
            LODWORD(v118) = -1;
          if ((_DWORD)v118 == -1)
          {
LABEL_67:
            v78 = (v530 + v74) & v543;
            v79 = (v531 + v78) & v55;
LABEL_68:
            v473 = v74;
            ((void (*)(uint64_t, uint64_t))v73)(v74, AssociatedTypeWitness);
            ((void (*)(uint64_t, uint64_t))v73)(v78, AssociatedTypeWitness);
            (*(void (**)(uint64_t, uint64_t))(v516 + 8))(v79, v517);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v507 + 8))((v506 + ((v515 + v79) & 0xFFFFFFFFFFFFFFF8)) & v533, v508);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v475 = v56;
            v80 = (v509 + v520 + v79) & v56;
            v81 = *(void (**)(unint64_t, uint64_t))(v522 + 8);
            v81((v510 + v80) & v534, v51);
            v82 = (v505 + ((v510 + v80) & v534)) & v534;
            v81(v82, v51);
            swift_bridgeObjectRelease();
            v83 = (v498
                 + ((((((v489 + v82) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v534;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v522 + 48))(v83, 1, v51))
              v81(v83, v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v84 = *(_QWORD *)(((((((v499 + v83) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 8);
            if ((v84 & 0x3000000000000000) == 0)
              sub_23AAAE53C(*(_QWORD *)((((((v499 + v83) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v84);
            swift_bridgeObjectRelease();
            v85 = v500 + v80;
            v86 = *(void **)(v85 + 16);
            LODWORD(v87) = -1;
            if ((unint64_t)v86 < 0xFFFFFFFF)
              v87 = *(_QWORD *)(v85 + 16);
            v56 = v475;
            if ((int)v87 - 1 < 0)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(v85 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_23AAA12F0(*(_QWORD *)((((v85 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v85 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            v74 = v473;
          }
LABEL_79:
          v88 = (v74 + v550 + v526) & ~v550;
          if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v524 + 48))(v88, 1, v525))
            (*(void (**)(size_t, uint64_t))(v524 + 8))(v88, v525);
          v89 = (v523 + v88) & v538;
          v38 = v480;
          if (v540 == v480)
          {
            if (!(*(unsigned int (**)(size_t))(v518 + 48))(v89))
              goto LABEL_138;
          }
          else
          {
            v111 = (uint64_t *)((v521 + v89) & 0xFFFFFFFFFFFFFFF8);
            if (v494 <= 0x7FFFFFFE)
            {
              v112 = *v111;
              if ((unint64_t)*v111 >= 0xFFFFFFFF)
                LODWORD(v112) = -1;
              if ((v112 + 1) >= 2)
                goto LABEL_140;
              goto LABEL_139;
            }
            if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v503 + 48))(((unint64_t)v111 + v502) & v536, v486, v504))
            {
LABEL_138:
              v111 = (uint64_t *)((v521 + v89) & 0xFFFFFFFFFFFFFFF8);
LABEL_139:
              (*(void (**)(size_t, uint64_t))(v518 + 8))(v89, v519);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v503 + 8))(((unint64_t)v111 + v502) & v536, v504);
              v38 = v480;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
LABEL_140:

          v57 = ~v550;
          goto LABEL_150;
        }
        v76 = (v510 + ((v509 + v117) & v56)) & v534;
        if (v493 <= 0x7FFFFFFD)
        {
          v328 = *(_QWORD *)(((v489 + ((v505 + v76) & v534)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_342:
          if (v328 >= 0xFFFFFFFF)
            LODWORD(v328) = -1;
          if ((v328 + 1) < 2)
            goto LABEL_68;
          goto LABEL_79;
        }
        v75 = *(uint64_t (**)(unint64_t))(v522 + 48);
      }
LABEL_66:
      v77 = v75(v76);
      v74 = (v527 + v549) & v542;
      if (v77)
        goto LABEL_79;
      goto LABEL_67;
    case 2:
      v477 = ~v52;
      v90 = ~v53;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v557[1])(v549, AssociatedTypeWitness, v53, v54);
      v91 = ((unint64_t)__dst + v549) & v57;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v524 + 48))(v91, 1, v525))
        (*(void (**)(unint64_t, uint64_t))(v524 + 8))(v91, v525);
      v92 = (v523 + v91) & v538;
      if (v540 == v38)
      {
        if ((*(unsigned int (**)(unint64_t))(v518 + 48))(v92))
          goto LABEL_144;
      }
      else
      {
        v113 = (uint64_t *)((v521 + v92) & 0xFFFFFFFFFFFFFFF8);
        if (v494 <= 0x7FFFFFFE)
        {
          v114 = *v113;
          if ((unint64_t)*v113 >= 0xFFFFFFFF)
            LODWORD(v114) = -1;
          if ((v114 + 1) >= 2)
          {
LABEL_144:

            v57 = ~v550;
            v56 = v90;
            v55 = v477;
            goto LABEL_150;
          }
LABEL_143:
          (*(void (**)(unint64_t, uint64_t))(v518 + 8))(v92, v519);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v503 + 8))(((unint64_t)v113 + v502) & v536, v504);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_144;
        }
        if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v503 + 48))(((unint64_t)v113 + v502) & v536, v486, v504))
        {
          goto LABEL_144;
        }
      }
      v113 = (uint64_t *)((v521 + v92) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_143;
    case 3:
      v484 = ~v550;
      v479 = v38;
      v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v557[1];
      v93(v549, AssociatedTypeWitness, v53, v54);
      v94 = (v527 + v549) & v542;
      if (v529 == v528)
      {
        v95 = (uint64_t (*)(unint64_t))v557[6];
        v96 = (v527 + v549) & v542;
        goto LABEL_91;
      }
      v98 = (v530 + v94) & v543;
      v99 = (v531 + v98) & v55;
      if (v513 == v528)
      {
        if (v491 == v513)
        {
          v95 = *(uint64_t (**)(unint64_t))(v516 + 48);
          v96 = (v531 + v98) & v55;
          goto LABEL_91;
        }
        v329 = (unint64_t *)((v515 + v99) & 0xFFFFFFFFFFFFFFF8);
        if (v483 <= 0x7FFFFFFE)
        {
          v330 = *v329;
          goto LABEL_317;
        }
        v96 = ((unint64_t)v329 + v506) & v533;
        v95 = *(uint64_t (**)(unint64_t))(v507 + 48);
      }
      else
      {
        v160 = v520 + v99;
        if ((v490 & 0x80000000) == 0)
        {
          v161 = *(_QWORD *)(v160 + 8);
          if (v161 >= 0xFFFFFFFF)
            LODWORD(v161) = -1;
          if ((_DWORD)v161 == -1)
          {
LABEL_92:
            v98 = (v530 + v94) & v543;
            v99 = (v531 + v98) & v55;
LABEL_93:
            ((void (*)(uint64_t, uint64_t))v93)(v94, AssociatedTypeWitness);
            ((void (*)(uint64_t, uint64_t))v93)(v98, AssociatedTypeWitness);
            (*(void (**)(uint64_t, uint64_t))(v516 + 8))(v99, v517);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v507 + 8))((v506 + ((v515 + v99) & 0xFFFFFFFFFFFFFFF8)) & v533, v508);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v476 = v56;
            v100 = (v509 + v520 + v99) & v56;
            v101 = *(void (**)(unint64_t, uint64_t))(v522 + 8);
            v101((v510 + v100) & v534, v51);
            v102 = (v505 + ((v510 + v100) & v534)) & v534;
            v101(v102, v51);
            swift_bridgeObjectRelease();
            v103 = (v498
                  + ((((((v489 + v102) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v534;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v522 + 48))(v103, 1, v51))
              v101(v103, v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v104 = *(_QWORD *)(((((((v499 + v103) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 8);
            if ((v104 & 0x3000000000000000) == 0)
              sub_23AAAE53C(*(_QWORD *)((((((v499 + v103) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v104);
            swift_bridgeObjectRelease();
            v105 = v500 + v100;
            v106 = *(void **)(v105 + 16);
            LODWORD(v107) = -1;
            if ((unint64_t)v106 < 0xFFFFFFFF)
              v107 = *(_QWORD *)(v105 + 16);
            v56 = v476;
            if ((int)v107 - 1 < 0)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(v105 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_23AAA12F0(*(_QWORD *)((((v105 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v105 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          }
LABEL_104:
          swift_bridgeObjectRelease();
          goto LABEL_105;
        }
        v96 = (v510 + ((v509 + v160) & v56)) & v534;
        if (v493 <= 0x7FFFFFFD)
        {
          v330 = *(_QWORD *)(((v489 + ((v505 + v96) & v534)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_317:
          if (v330 >= 0xFFFFFFFF)
            LODWORD(v330) = -1;
          if ((v330 + 1) < 2)
            goto LABEL_93;
          goto LABEL_104;
        }
        v95 = *(uint64_t (**)(unint64_t))(v522 + 48);
      }
LABEL_91:
      v97 = v95(v96);
      v94 = (v527 + v549) & v542;
      if (v97)
        goto LABEL_104;
      goto LABEL_92;
    case 4:
    case 5:
    case 7:
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v557[1])(v549, AssociatedTypeWitness, v53, v54);
      goto LABEL_150;
    case 6:
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v557[1])(v549, AssociatedTypeWitness, v53, v54);
      v108 = (v44 + v549) & v495;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v108, 1, v553))
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8))(v108, v553, v109, v110);
      goto LABEL_150;
    default:
      if (v49 <= 3)
        v50 = v49;
      else
        v50 = 4;
      __asm { BR              X15 }
      return result;
  }
}

uint64_t sub_23AF83328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  size_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  size_t v27;
  size_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  size_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  const void *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  const void *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const void *v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  const void *v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  void *v83;
  const void *v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  int v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  int v105;
  size_t v106;
  uint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  char *v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  unint64_t v125;
  size_t v126;
  unint64_t v127;
  unint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  unint64_t v131;
  unint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  int v138;
  void (*v139)(unint64_t, unint64_t, uint64_t);
  unint64_t v140;
  unint64_t v141;
  _BYTE *v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  unint64_t v149;
  unint64_t v150;
  void *v151;
  const void *v152;
  _QWORD *v153;
  _QWORD *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  _OWORD *v160;
  _OWORD *v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  _OWORD *v180;
  __int128 *v181;
  __int128 v182;
  unint64_t v183;
  unint64_t v184;
  __int128 v185;
  _QWORD *v186;
  _QWORD *v187;
  unint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  void *v191;
  const void *v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  size_t v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  _QWORD *v201;
  _QWORD *v202;
  unint64_t v203;
  uint64_t v204;
  unint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  int v211;
  void (*v212)(unint64_t, unint64_t, uint64_t);
  unint64_t v213;
  unint64_t v214;
  _BYTE *v215;
  unint64_t v216;
  unint64_t v217;
  unint64_t v218;
  unint64_t v219;
  _QWORD *v220;
  _QWORD *v221;
  unint64_t v222;
  unint64_t v223;
  void *v224;
  const void *v225;
  _QWORD *v226;
  _QWORD *v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  _QWORD *v232;
  _OWORD *v233;
  _OWORD *v234;
  unint64_t v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  _OWORD *v253;
  __int128 *v254;
  __int128 v255;
  unint64_t v256;
  unint64_t v257;
  __int128 v258;
  _QWORD *v259;
  _QWORD *v260;
  unint64_t v261;
  void *v262;
  const void *v263;
  uint64_t v264;
  char *v265;
  char *v266;
  int v267;
  uint64_t *v268;
  uint64_t v269;
  size_t v270;
  uint64_t v271;
  _QWORD *v272;
  unint64_t v273;
  unint64_t v274;
  _QWORD *v275;
  _QWORD *v276;
  _QWORD *v277;
  _QWORD *v278;
  void *v279;
  uint64_t v280;
  unint64_t v281;
  size_t v282;
  unint64_t v283;
  unint64_t v284;
  _QWORD *v285;
  _QWORD *v286;
  unint64_t v287;
  unint64_t v288;
  _QWORD *v289;
  _QWORD *v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  int v294;
  void (*v295)(unint64_t, unint64_t, uint64_t);
  unint64_t v296;
  unint64_t v297;
  _BYTE *v298;
  unint64_t v299;
  unint64_t v300;
  unint64_t v301;
  unint64_t v302;
  _QWORD *v303;
  _QWORD *v304;
  unint64_t v305;
  unint64_t v306;
  void *v307;
  const void *v308;
  _QWORD *v309;
  _QWORD *v310;
  unint64_t v311;
  unint64_t v312;
  uint64_t v313;
  _QWORD *v314;
  _QWORD *v315;
  _OWORD *v316;
  _OWORD *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  unint64_t v321;
  unint64_t v322;
  unint64_t v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  _OWORD *v336;
  __int128 *v337;
  __int128 v338;
  unint64_t v339;
  unint64_t v340;
  __int128 v341;
  _QWORD *v342;
  _QWORD *v343;
  unint64_t v344;
  _OWORD *v345;
  _OWORD *v346;
  uint64_t result;
  uint64_t v348;
  unsigned int v349;
  unsigned int v350;
  uint64_t v351;
  void *__dst;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  size_t v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  size_t v365;
  unint64_t v366;
  uint64_t v367;
  uint64_t v368;
  size_t __n;
  size_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  unsigned int v376;
  unsigned int v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  unint64_t v384;
  unint64_t v385;
  size_t v386;
  size_t v387;
  uint64_t v388;
  uint64_t v389;
  unint64_t v390;
  uint64_t v391;
  unint64_t v392;
  int v393;
  unsigned int v394;
  uint64_t v395;
  uint64_t v396;
  size_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t AssociatedTypeWitness;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unsigned int v405;
  unsigned int v406;
  uint64_t v407;
  size_t v408;
  size_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  unint64_t v414;
  const void *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  void *v422;
  uint64_t v423;
  uint64_t v424;
  void *v425;
  unint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;

  v421 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v380 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v380 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  v373 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v373 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v396 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v396 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v12 | 7;
  v14 = v10 | v5 | v12;
  v399 = v3;
  v15 = *(_DWORD *)(v8 + 84);
  v364 = *(_DWORD *)(v6 + 84);
  if (v364 > v15)
    v15 = *(_DWORD *)(v6 + 84);
  v362 = v15;
  if (v15 <= 0x7FFFFFFE)
    v15 = 2147483646;
  v377 = v15;
  v394 = *(_DWORD *)(v3 + 84);
  if (v15 <= v394)
    v15 = *(_DWORD *)(v3 + 84);
  v16 = *(_DWORD *)(v11 + 84);
  if (v16 <= 0x7FFFFFFE)
    v17 = 2147483646;
  else
    v17 = *(_DWORD *)(v11 + 84);
  if (v15 > v17)
    v17 = v15;
  v363 = v17;
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v17;
  v393 = v18;
  v376 = *(_DWORD *)(v11 + 84);
  v19 = v16 == 0;
  v395 = v4 + v5;
  v410 = v5;
  v398 = v4 + v10;
  v404 = v10;
  v378 = *(_QWORD *)(v6 + 64) + 7;
  v379 = v6;
  v371 = v9 + 8;
  v407 = v9;
  v372 = v8;
  v367 = *(_QWORD *)(v8 + 64) + 7;
  v374 = v13 + 16;
  v385 = ((((v367 + ((v9 + 8 + (v378 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v417 = v12 | 7;
  v375 = v12 + 12;
  v381 = *(_QWORD *)(v396 - 8);
  v20 = *(_QWORD *)(v11 + 64);
  v370 = v20 + v12;
  v361 = v20 + 12;
  v368 = v12 + 10;
  v21 = (v12
       + 10
       + ((((((v20 + 12 + ((v20 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  v386 = v20;
  if (v19)
    ++v20;
  v397 = v20;
  v390 = v21;
  v365 = v20 + 7;
  v391 = (v13 + 16 + ((v4 + v10 + ((v4 + v5) & ~v5)) & ~v10) + v385) & ~v13;
  v366 = ((((((((((v20 + 7 + v21) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v401 = v10 | v5 | v12;
  v392 = v14 + v4;
  v384 = ((((v391 + v366 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  v22 = v384 + ((v14 + v4) & ~v14);
  v23 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v389 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v389 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v426 = (v22 + v25) & ~v25;
  v26 = *(_DWORD *)(v24 + 84);
  v388 = v24;
  v27 = *(_QWORD *)(v24 + 64);
  if (v26)
    v28 = v27;
  else
    v28 = v27 + 1;
  v383 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v383 - 8);
  v30 = *(_DWORD *)(v29 + 80) & 0xF8;
  v31 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = v30 | v33 | 7;
  v35 = *(unsigned int *)(v29 + 84);
  if (v35 <= *(_DWORD *)(v32 + 84))
    v36 = *(_DWORD *)(v32 + 84);
  else
    v36 = *(_DWORD *)(v29 + 84);
  if (v36 <= 0x7FFFFFFE)
    v37 = 2147483646;
  else
    v37 = v36;
  v382 = v29;
  v38 = *(_QWORD *)(v29 + 64) + 7;
  v39 = *(_QWORD *)(v32 + 64) + 7;
  v40 = ((((v39 + ((v33 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  __n = v28;
  v41 = ((((((v28 + v34 + v426) & ~v34) + v40 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v42 = v4 + v25;
  v427 = v25;
  v387 = v28 + v34;
  v43 = *(_QWORD *)(v421 - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v4 + v44;
  if (*(_DWORD *)(v43 + 84))
    v46 = *(_QWORD *)(v43 + 64);
  else
    v46 = *(_QWORD *)(v43 + 64) + 1;
  v47 = ((v23 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 > v47)
    v47 = v4;
  if (v41 <= v40 + ((v28 + v34 + ((v4 + v25) & ~v25)) & ~v34) + 16)
    v41 = v40 + ((v28 + v34 + ((v4 + v25) & ~v25)) & ~v34) + 16;
  if (((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= ((v4 + v44) & ~v44) + v46)
    v48 = ((v4 + v44) & ~v44) + v46;
  else
    v48 = ((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v47 > v41)
    v41 = v47;
  if (v41 <= v48)
    v49 = v48;
  else
    v49 = v41;
  v50 = a2;
  v51 = *(unsigned __int8 *)(a2 + v49);
  v414 = v49;
  v53 = ~v401;
  v54 = ~v410;
  v55 = ~v12;
  v56 = ~v44;
  switch(v51)
  {
    case 0:
      v57 = ~v410;
      v428 = ~v404;
      v411 = ~v407;
      v418 = ~v417;
      v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v399 + 32);
      v58(a1, a2, AssociatedTypeWitness);
      v422 = (void *)((v392 + a1) & v53);
      v59 = (const void *)((v392 + a2) & v53);
      if (v394 == v393)
      {
        v60 = (*(uint64_t (**)(unint64_t))(v399 + 48))((v392 + a2) & v53);
        v61 = v395;
        v62 = v396;
        goto LABEL_111;
      }
      v61 = v395;
      v62 = v396;
      v85 = ((unint64_t)v59 + v395) & v57;
      v86 = (v398 + v85) & v428;
      if (v377 == v393)
      {
        if (v364 == v377)
        {
          v60 = (*(uint64_t (**)(unint64_t))(v379 + 48))((v398 + v85) & v428);
          goto LABEL_111;
        }
        v114 = (unint64_t *)((v378 + v86) & 0xFFFFFFFFFFFFFFF8);
        if (v362 <= 0x7FFFFFFE)
        {
          v115 = *v114;
          goto LABEL_164;
        }
        v60 = (*(uint64_t (**)(unint64_t))(v372 + 48))(((unint64_t)v114 + v371) & v411);
      }
      else
      {
        v99 = v385 + v86;
        if ((v363 & 0x80000000) != 0)
        {
          v121 = (v375 + ((v374 + v99) & v418)) & v55;
          if (v376 <= 0x7FFFFFFD)
          {
            v115 = *(_QWORD *)(((v361 + ((v370 + v121) & v55)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_164:
            if (v115 >= 0xFFFFFFFF)
              LODWORD(v115) = -1;
            if ((v115 + 1) >= 2)
              goto LABEL_112;
            goto LABEL_115;
          }
          v60 = (*(uint64_t (**)(uint64_t))(v381 + 48))(v121);
        }
        else
        {
          v100 = *(_QWORD *)(v99 + 8);
          if (v100 >= 0xFFFFFFFF)
            LODWORD(v100) = -1;
          v60 = v100 + 1;
        }
      }
LABEL_111:
      if (v60)
      {
LABEL_112:
        v123 = v422;
        memcpy(v422, v59, v384);
        v125 = v390;
        v124 = v391;
LABEL_113:
        v126 = v397;
        goto LABEL_119;
      }
      v85 = ((unint64_t)v59 + v61) & v57;
      v86 = (v398 + v85) & v428;
LABEL_115:
      ((void (*)(void *))v58)(v422);
      v127 = ((unint64_t)v422 + v61) & v57;
      v58(v127, v85, AssociatedTypeWitness);
      v128 = (v398 + v127) & v428;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v379 + 32))(v128, v86, v380);
      v129 = (_QWORD *)((v378 + v128) & 0xFFFFFFFFFFFFFFF8);
      v130 = (_QWORD *)((v378 + v86) & 0xFFFFFFFFFFFFFFF8);
      *v129 = *v130;
      v131 = ((unint64_t)v129 + v371) & v411;
      v132 = ((unint64_t)v130 + v371) & v411;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v372 + 32))(v131, v132, v373);
      v133 = (_QWORD *)((v367 + v132) & 0xFFFFFFFFFFFFF8);
      v134 = (_QWORD *)((v367 + v131) & 0xFFFFFFFFFFFFF8);
      *v134 = *v133;
      *(_OWORD *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFF8);
      *(_OWORD *)(v385 + v128) = *(_OWORD *)(v385 + v86);
      v135 = (v374 + v385 + v128) & v418;
      v136 = (v374 + v385 + v86) & v418;
      *(_BYTE *)v135 = *(_BYTE *)v136;
      v137 = v135 | 4;
      v138 = *(_DWORD *)(v136 | 4);
      *(_BYTE *)(v137 + 4) = *(_BYTE *)((v136 | 4) + 4);
      *(_DWORD *)v137 = v138;
      *(_WORD *)(v135 + 10) = *(_WORD *)(v136 + 0xA);
      v139 = *(void (**)(unint64_t, unint64_t, uint64_t))(v381 + 32);
      v139((v375 + v135) & v55, (v375 + v136) & v55, v62);
      v140 = (v370 + ((v375 + v135) & v55)) & v55;
      v141 = (v370 + ((v375 + v136) & v55)) & v55;
      v139(v140, v141, v62);
      v142 = (_BYTE *)(v140 + v386);
      *v142 = *(_BYTE *)(v141 + v386);
      v142[1] = *(_BYTE *)(v141 + v386 + 1);
      v142[2] = *(_BYTE *)(v141 + v386 + 2);
      v142[3] = *(_BYTE *)(v141 + v386 + 3);
      v142[4] = *(_BYTE *)(v141 + v386 + 4);
      v143 = (v140 + v386 + 12) & 0xFFFFFFFFFFFFFFF8;
      v144 = (v141 + v386 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)v143 = *(_OWORD *)v144;
      *(_BYTE *)(v143 + 16) = *(_BYTE *)(v144 + 16);
      *(_BYTE *)(v143 + 17) = *(_BYTE *)(v144 + 17);
      *(_BYTE *)(v143 + 18) = *(_BYTE *)(v144 + 18);
      *(_BYTE *)(v143 + 19) = *(_BYTE *)(v144 + 19);
      v145 = (v143 + 27) & 0xFFFFFFFFFFFFFFF8;
      v146 = (v144 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v145 = *(_QWORD *)v146;
      *(_BYTE *)(v145 + 8) = *(_BYTE *)(v146 + 8);
      *(_BYTE *)(v145 + 9) = *(_BYTE *)(v146 + 9);
      *(_BYTE *)(v145 + 10) = *(_BYTE *)(v146 + 10);
      *(_BYTE *)(v145 + 11) = *(_BYTE *)(v146 + 11);
      *(_BYTE *)(v145 + 12) = *(_BYTE *)(v146 + 12);
      v147 = (_QWORD *)((v143 + 47) & 0xFFFFFFFFFFFFF8);
      v148 = (_QWORD *)((v144 + 47) & 0xFFFFFFFFFFFFF8);
      *v147 = *v148;
      v149 = ((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8;
      v150 = ((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v149 = *(_QWORD *)v150;
      *(_BYTE *)(v149 + 8) = *(_BYTE *)(v150 + 8);
      *(_BYTE *)(v149 + 9) = *(_BYTE *)(v150 + 9);
      v151 = (void *)((v368 + v149) & v55);
      v152 = (const void *)((v368 + v150) & v55);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48))(v152, 1, v62))
      {
        memcpy(v151, v152, v397);
      }
      else
      {
        v139((unint64_t)v151, (unint64_t)v152, v62);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v381 + 56))(v151, 0, 1, v62);
      }
      v125 = v390;
      v124 = v391;
      v126 = v386;
      v123 = v422;
      v153 = (_QWORD *)(((unint64_t)v151 + v365) & 0xFFFFFFFFFFFFFFF8);
      v154 = (_QWORD *)(((unint64_t)v152 + v365) & 0xFFFFFFFFFFFFFFF8);
      *v153 = *v154;
      v155 = ((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8;
      v156 = ((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8;
      v157 = *(_QWORD *)v156;
      *(_BYTE *)(v155 + 8) = *(_BYTE *)(v156 + 8);
      *(_QWORD *)v155 = v157;
      v158 = (_QWORD *)(((unint64_t)v153 + 31) & 0xFFFFFFFFFFFFF8);
      v159 = (_QWORD *)(((unint64_t)v154 + 31) & 0xFFFFFFFFFFFFF8);
      *v158 = *v159;
      v160 = (_OWORD *)(((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8);
      v161 = (_OWORD *)(((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v160 = *v161;
      v162 = ((unint64_t)v160 + 19) & 0xFFFFFFFFFFFFFFF8;
      v163 = ((unint64_t)v161 + 19) & 0xFFFFFFFFFFFFFFF8;
      v164 = *(_QWORD *)v163;
      *(_BYTE *)(v162 + 8) = *(_BYTE *)(v163 + 8);
      *(_QWORD *)v162 = v164;
      *(_BYTE *)(v162 + 9) = *(_BYTE *)(v163 + 9);
      v165 = (v162 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v166 = (v163 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v157) = *(_DWORD *)v166;
      *(_BYTE *)(v165 + 4) = *(_BYTE *)(v166 + 4);
      *(_DWORD *)v165 = v157;
      *(_OWORD *)((v162 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v163 + 25) & 0xFFFFFFFFFFFFF8);
      v167 = v366 + v135;
      v168 = *(_OWORD *)(v366 + v136 + 112);
      v170 = *(_OWORD *)(v366 + v136 + 64);
      v169 = *(_OWORD *)(v366 + v136 + 80);
      *(_OWORD *)(v167 + 96) = *(_OWORD *)(v366 + v136 + 96);
      *(_OWORD *)(v167 + 112) = v168;
      *(_OWORD *)(v167 + 64) = v170;
      *(_OWORD *)(v167 + 80) = v169;
      v171 = *(_OWORD *)(v366 + v136 + 176);
      v173 = *(_OWORD *)(v366 + v136 + 128);
      v172 = *(_OWORD *)(v366 + v136 + 144);
      *(_OWORD *)(v167 + 160) = *(_OWORD *)(v366 + v136 + 160);
      *(_OWORD *)(v167 + 176) = v171;
      *(_OWORD *)(v167 + 128) = v173;
      *(_OWORD *)(v167 + 144) = v172;
      v175 = *(_OWORD *)(v366 + v136 + 208);
      v174 = *(_OWORD *)(v366 + v136 + 224);
      v176 = *(_OWORD *)(v366 + v136 + 192);
      *(_QWORD *)(v167 + 240) = *(_QWORD *)(v366 + v136 + 240);
      *(_OWORD *)(v167 + 208) = v175;
      *(_OWORD *)(v167 + 224) = v174;
      *(_OWORD *)(v167 + 192) = v176;
      v177 = *(_OWORD *)(v366 + v136);
      v178 = *(_OWORD *)(v366 + v136 + 16);
      v179 = *(_OWORD *)(v366 + v136 + 48);
      *(_OWORD *)(v167 + 32) = *(_OWORD *)(v366 + v136 + 32);
      *(_OWORD *)(v167 + 48) = v179;
      *(_OWORD *)v167 = v177;
      *(_OWORD *)(v167 + 16) = v178;
      v180 = (_OWORD *)((v366 + v135 + 255) & 0xFFFFFFFFFFFFFFF8);
      v181 = (__int128 *)((v366 + v136 + 255) & 0xFFFFFFFFFFFFFFF8);
      v182 = *v181;
      *(_OWORD *)((char *)v180 + 9) = *(__int128 *)((char *)v181 + 9);
      *v180 = v182;
      v183 = (v366 + v135 + 287) & 0xFFFFFFFFFFFFFFF8;
      v184 = (v366 + v136 + 287) & 0xFFFFFFFFFFFFFFF8;
      v185 = *(_OWORD *)v184;
      *(_BYTE *)(v183 + 16) = *(_BYTE *)(v184 + 16);
      *(_OWORD *)v183 = v185;
      v186 = (_QWORD *)((v366 + v135 + 311) & 0xFFFFFFFFFFFFF8);
      v187 = (_QWORD *)((v366 + v136 + 311) & 0xFFFFFFFFFFFFF8);
      *v186 = *v187;
      *(_OWORD *)(((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFF8);
      if (!v376)
        goto LABEL_113;
LABEL_119:
      v82 = 0;
      v188 = ((((v124
               + ((((((((((v125 + v126 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v189 = (_QWORD *)(((unint64_t)v123 + v188) & 0xFFFFFFFFFFFFFFF8);
      v190 = (_QWORD *)(((unint64_t)v59 + v188) & 0xFFFFFFFFFFFFFFF8);
      *v189 = *v190;
      *(_QWORD *)(((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFF8);
      goto LABEL_156;
    case 1:
      v351 = ~v427;
      v63 = ~v404;
      v348 = ~v34;
      v412 = ~v407;
      v419 = ~v417;
      v355 = ~v33;
      v405 = v36;
      v349 = v35;
      v350 = *(_DWORD *)(v32 + 84);
      v423 = v38;
      v357 = v33 + 8;
      v359 = *(_QWORD *)(v31 - 8);
      v353 = *(_QWORD *)(v32 + 64) + 7;
      v402 = v31;
      v408 = ((((v39 + ((v33 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v399 + 32);
      v64(a1, a2, AssociatedTypeWitness);
      __dst = (void *)((v392 + a1) & v53);
      v65 = (const void *)((v392 + a2) & v53);
      v416 = v65;
      if (v394 == v393)
      {
        v66 = v54;
        v67 = (*(uint64_t (**)(unint64_t))(v399 + 48))((v392 + v50) & v53);
        v65 = v416;
        v68 = v395;
        v69 = v396;
LABEL_122:
        if (v67)
        {
LABEL_123:
          v191 = __dst;
          memcpy(__dst, v65, v384);
          v192 = v416;
          v194 = v390;
          v193 = v391;
          v195 = v389;
          v196 = v388;
LABEL_124:
          v197 = v397;
          goto LABEL_130;
        }
        v87 = ((unint64_t)v65 + v68) & v66;
        v88 = (v398 + v87) & v63;
LABEL_126:
        v198 = v69;
        v64((uint64_t)__dst, (uint64_t)v65, AssociatedTypeWitness);
        v199 = ((unint64_t)__dst + v68) & v66;
        v64(v199, v87, AssociatedTypeWitness);
        v200 = (v398 + v199) & v63;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v379 + 32))(v200, v88, v380);
        v201 = (_QWORD *)((v378 + v200) & 0xFFFFFFFFFFFFFFF8);
        v202 = (_QWORD *)((v378 + v88) & 0xFFFFFFFFFFFFFFF8);
        *v201 = *v202;
        v203 = ((unint64_t)v201 + v371) & v412;
        v204 = v55;
        v205 = ((unint64_t)v202 + v371) & v412;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v372 + 32))(v203, v205, v373);
        v206 = (_QWORD *)((v367 + v205) & 0xFFFFFFFFFFFFF8);
        v207 = (_QWORD *)((v367 + v203) & 0xFFFFFFFFFFFFF8);
        *v207 = *v206;
        *(_OWORD *)(((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v206 + 15) & 0xFFFFFFFFFFFFF8);
        *(_OWORD *)(v385 + v200) = *(_OWORD *)(v385 + v88);
        v208 = (v374 + v385 + v200) & v419;
        v209 = (v374 + v385 + v88) & v419;
        *(_BYTE *)v208 = *(_BYTE *)v209;
        v210 = v208 | 4;
        v211 = *(_DWORD *)(v209 | 4);
        *(_BYTE *)(v210 + 4) = *(_BYTE *)((v209 | 4) + 4);
        *(_DWORD *)v210 = v211;
        *(_WORD *)(v208 + 10) = *(_WORD *)(v209 + 0xA);
        v212 = *(void (**)(unint64_t, unint64_t, uint64_t))(v381 + 32);
        v212((v375 + v208) & v204, (v375 + v209) & v204, v198);
        v213 = (v370 + ((v375 + v208) & v204)) & v204;
        v214 = (v370 + ((v375 + v209) & v204)) & v204;
        v212(v213, v214, v198);
        v197 = v386;
        v215 = (_BYTE *)(v213 + v386);
        *v215 = *(_BYTE *)(v214 + v386);
        v215[1] = *(_BYTE *)(v214 + v386 + 1);
        v215[2] = *(_BYTE *)(v214 + v386 + 2);
        v215[3] = *(_BYTE *)(v214 + v386 + 3);
        v215[4] = *(_BYTE *)(v214 + v386 + 4);
        v216 = (v213 + v386 + 12) & 0xFFFFFFFFFFFFFFF8;
        v217 = (v214 + v386 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)v216 = *(_OWORD *)v217;
        *(_BYTE *)(v216 + 16) = *(_BYTE *)(v217 + 16);
        *(_BYTE *)(v216 + 17) = *(_BYTE *)(v217 + 17);
        *(_BYTE *)(v216 + 18) = *(_BYTE *)(v217 + 18);
        *(_BYTE *)(v216 + 19) = *(_BYTE *)(v217 + 19);
        v218 = (v216 + 27) & 0xFFFFFFFFFFFFFFF8;
        v219 = (v217 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v218 = *(_QWORD *)v219;
        *(_BYTE *)(v218 + 8) = *(_BYTE *)(v219 + 8);
        *(_BYTE *)(v218 + 9) = *(_BYTE *)(v219 + 9);
        *(_BYTE *)(v218 + 10) = *(_BYTE *)(v219 + 10);
        *(_BYTE *)(v218 + 11) = *(_BYTE *)(v219 + 11);
        *(_BYTE *)(v218 + 12) = *(_BYTE *)(v219 + 12);
        v220 = (_QWORD *)((v216 + 47) & 0xFFFFFFFFFFFFF8);
        v221 = (_QWORD *)((v217 + 47) & 0xFFFFFFFFFFFFF8);
        *v220 = *v221;
        v222 = ((unint64_t)v220 + 15) & 0xFFFFFFFFFFFFFFF8;
        v223 = ((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v222 = *(_QWORD *)v223;
        *(_BYTE *)(v222 + 8) = *(_BYTE *)(v223 + 8);
        *(_BYTE *)(v222 + 9) = *(_BYTE *)(v223 + 9);
        v224 = (void *)((v368 + v222) & v204);
        v225 = (const void *)((v368 + v223) & v204);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48))(v225, 1, v198))
        {
          memcpy(v224, v225, v397);
        }
        else
        {
          v212((unint64_t)v224, (unint64_t)v225, v198);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v381 + 56))(v224, 0, 1, v198);
        }
        v194 = v390;
        v193 = v391;
        v195 = v389;
        v196 = v388;
        v192 = v416;
        v191 = __dst;
        v226 = (_QWORD *)(((unint64_t)v224 + v365) & 0xFFFFFFFFFFFFFFF8);
        v227 = (_QWORD *)(((unint64_t)v225 + v365) & 0xFFFFFFFFFFFFFFF8);
        *v226 = *v227;
        v228 = ((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8;
        v229 = ((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8;
        v230 = *(_QWORD *)v229;
        *(_BYTE *)(v228 + 8) = *(_BYTE *)(v229 + 8);
        *(_QWORD *)v228 = v230;
        v231 = (_QWORD *)(((unint64_t)v226 + 31) & 0xFFFFFFFFFFFFF8);
        v232 = (_QWORD *)(((unint64_t)v227 + 31) & 0xFFFFFFFFFFFFF8);
        *v231 = *v232;
        v233 = (_OWORD *)(((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8);
        v234 = (_OWORD *)(((unint64_t)v232 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v233 = *v234;
        v235 = ((unint64_t)v233 + 19) & 0xFFFFFFFFFFFFFFF8;
        v236 = ((unint64_t)v234 + 19) & 0xFFFFFFFFFFFFFFF8;
        v237 = *(_QWORD *)v236;
        *(_BYTE *)(v235 + 8) = *(_BYTE *)(v236 + 8);
        *(_QWORD *)v235 = v237;
        *(_BYTE *)(v235 + 9) = *(_BYTE *)(v236 + 9);
        v238 = (v235 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v239 = (v236 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v230) = *(_DWORD *)v239;
        *(_BYTE *)(v238 + 4) = *(_BYTE *)(v239 + 4);
        *(_DWORD *)v238 = v230;
        *(_OWORD *)((v235 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v236 + 25) & 0xFFFFFFFFFFFFF8);
        v240 = v366 + v208;
        v241 = *(_OWORD *)(v366 + v209 + 112);
        v243 = *(_OWORD *)(v366 + v209 + 64);
        v242 = *(_OWORD *)(v366 + v209 + 80);
        *(_OWORD *)(v240 + 96) = *(_OWORD *)(v366 + v209 + 96);
        *(_OWORD *)(v240 + 112) = v241;
        *(_OWORD *)(v240 + 64) = v243;
        *(_OWORD *)(v240 + 80) = v242;
        v244 = *(_OWORD *)(v366 + v209 + 176);
        v246 = *(_OWORD *)(v366 + v209 + 128);
        v245 = *(_OWORD *)(v366 + v209 + 144);
        *(_OWORD *)(v240 + 160) = *(_OWORD *)(v366 + v209 + 160);
        *(_OWORD *)(v240 + 176) = v244;
        *(_OWORD *)(v240 + 128) = v246;
        *(_OWORD *)(v240 + 144) = v245;
        v248 = *(_OWORD *)(v366 + v209 + 208);
        v247 = *(_OWORD *)(v366 + v209 + 224);
        v249 = *(_OWORD *)(v366 + v209 + 192);
        *(_QWORD *)(v240 + 240) = *(_QWORD *)(v366 + v209 + 240);
        *(_OWORD *)(v240 + 208) = v248;
        *(_OWORD *)(v240 + 224) = v247;
        *(_OWORD *)(v240 + 192) = v249;
        v250 = *(_OWORD *)(v366 + v209);
        v251 = *(_OWORD *)(v366 + v209 + 16);
        v252 = *(_OWORD *)(v366 + v209 + 48);
        *(_OWORD *)(v240 + 32) = *(_OWORD *)(v366 + v209 + 32);
        *(_OWORD *)(v240 + 48) = v252;
        *(_OWORD *)v240 = v250;
        *(_OWORD *)(v240 + 16) = v251;
        v253 = (_OWORD *)((v366 + v208 + 255) & 0xFFFFFFFFFFFFFFF8);
        v254 = (__int128 *)((v366 + v209 + 255) & 0xFFFFFFFFFFFFFFF8);
        v255 = *v254;
        *(_OWORD *)((char *)v253 + 9) = *(__int128 *)((char *)v254 + 9);
        *v253 = v255;
        v256 = (v366 + v208 + 287) & 0xFFFFFFFFFFFFFFF8;
        v257 = (v366 + v209 + 287) & 0xFFFFFFFFFFFFFFF8;
        v258 = *(_OWORD *)v257;
        *(_BYTE *)(v256 + 16) = *(_BYTE *)(v257 + 16);
        *(_OWORD *)v256 = v258;
        v259 = (_QWORD *)((v366 + v208 + 311) & 0xFFFFFFFFFFFFF8);
        v260 = (_QWORD *)((v366 + v209 + 311) & 0xFFFFFFFFFFFFF8);
        *v259 = *v260;
        *(_OWORD *)(((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFF8);
        if (!v376)
          goto LABEL_124;
LABEL_130:
        v261 = ((((v193
                 + ((((((((((v194 + v197 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v262 = (void *)(((unint64_t)v191 + v427 + v261) & v351);
        v263 = (const void *)(((unint64_t)v192 + v427 + v261) & v351);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v196 + 48))(v263, 1, v195))
        {
          memcpy(v262, v263, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v196 + 32))(v262, v263, v195);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v196 + 56))(v262, 0, 1, v195);
        }
        v264 = v423;
        v73 = a1;
        v95 = v414;
        v265 = (char *)(((unint64_t)v262 + v387) & v348);
        v266 = (char *)(((unint64_t)v263 + v387) & v348);
        if (v349 == v37)
        {
          v267 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v382 + 48))(v266, v349, v383);
        }
        else
        {
          v268 = (uint64_t *)((unint64_t)&v266[v423] & 0xFFFFFFFFFFFFFFF8);
          if (v405 <= 0x7FFFFFFE)
          {
            v269 = *v268;
            if ((unint64_t)*v268 >= 0xFFFFFFFF)
              LODWORD(v269) = -1;
            if ((v269 + 1) >= 2)
              goto LABEL_142;
            goto LABEL_144;
          }
          v267 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v359 + 48))(((unint64_t)v268 + v357) & v355, v350, v402);
        }
        v264 = v423;
        if (v267)
        {
LABEL_142:
          v270 = v408;
          memcpy(v265, v266, v408);
LABEL_145:
          *(_QWORD *)&v265[v270] = *(_QWORD *)&v266[v270];
          v277 = (_QWORD *)((unint64_t)&v265[v270 + 15] & 0xFFFFFFFFFFFFF8);
          v278 = (_QWORD *)((unint64_t)&v266[v270 + 15] & 0xFFFFFFFFFFFFFFF8);
          *v277 = *v278;
          *(_QWORD *)(((unint64_t)v277 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v278 + 15) & 0xFFFFFFFFFFFFF8);
          v82 = 1;
          goto LABEL_157;
        }
        v268 = (uint64_t *)((unint64_t)&v266[v423] & 0xFFFFFFFFFFFFFFF8);
LABEL_144:
        v271 = v264;
        (*(void (**)(char *, char *, uint64_t))(v382 + 32))(v265, v266, v383);
        v272 = (_QWORD *)((unint64_t)&v265[v271] & 0xFFFFFFFFFFFFFFF8);
        *v272 = *v268;
        v273 = ((unint64_t)v272 + v357) & v355;
        v274 = ((unint64_t)v268 + v357) & v355;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v359 + 32))(v273, v274, v402);
        v275 = (_QWORD *)((v353 + v273) & 0xFFFFFFFFFFFFF8);
        v276 = (_QWORD *)((v353 + v274) & 0xFFFFFFFFFFFFF8);
        *v275 = *v276;
        *(_OWORD *)(((unint64_t)v275 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v276 + 15) & 0xFFFFFFFFFFFFF8);
        v270 = v408;
        goto LABEL_145;
      }
      v68 = v395;
      v69 = v396;
      v66 = v54;
      v87 = ((unint64_t)v65 + v395) & v54;
      v88 = (v398 + v87) & v63;
      if (v377 == v393)
      {
        if (v364 == v377)
        {
          v67 = (*(uint64_t (**)(unint64_t))(v379 + 48))((v398 + v87) & v63);
LABEL_121:
          v65 = v416;
          goto LABEL_122;
        }
        v116 = (unint64_t *)((v378 + v88) & 0xFFFFFFFFFFFFFFF8);
        if (v362 > 0x7FFFFFFE)
        {
          v67 = (*(uint64_t (**)(unint64_t))(v372 + 48))(((unint64_t)v116 + v371) & v412);
          goto LABEL_121;
        }
        v117 = *v116;
      }
      else
      {
        v101 = v385 + v88;
        if ((v363 & 0x80000000) == 0)
        {
          v102 = *(_QWORD *)(v101 + 8);
          if (v102 >= 0xFFFFFFFF)
            LODWORD(v102) = -1;
          v67 = v102 + 1;
          goto LABEL_122;
        }
        v122 = (v375 + ((v374 + v101) & v419)) & v55;
        if (v376 > 0x7FFFFFFD)
        {
          v67 = (*(uint64_t (**)(uint64_t))(v381 + 48))(v122);
          goto LABEL_121;
        }
        v117 = *(_QWORD *)(((v361 + ((v370 + v122) & v55)) & 0xFFFFFFFFFFFFF8) + 8);
      }
      if (v117 >= 0xFFFFFFFF)
        LODWORD(v117) = -1;
      if ((v117 + 1) >= 2)
        goto LABEL_123;
      goto LABEL_126;
    case 2:
      v70 = ~v34;
      v356 = ~v33;
      v406 = v36;
      v71 = v35;
      v72 = *(unsigned int *)(v32 + 84);
      v424 = v38;
      v358 = v33 + 8;
      v360 = *(_QWORD *)(v31 - 8);
      v354 = *(_QWORD *)(v32 + 64) + 7;
      v403 = v31;
      v409 = ((((v39 + ((v33 + 8 + (v38 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v399 + 32))(a1, a2, AssociatedTypeWitness);
      v73 = a1;
      v74 = (void *)((v42 + a1) & ~v427);
      v75 = (const void *)((v42 + a2) & ~v427);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v388 + 48))(v75, 1, v389))
      {
        memcpy(v74, v75, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v388 + 32))(v74, v75, v389);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v388 + 56))(v74, 0, 1, v389);
      }
      v91 = (char *)(((unint64_t)v74 + v387) & v70);
      v92 = (char *)(((unint64_t)v75 + v387) & v70);
      if ((_DWORD)v71 == v37)
      {
        v93 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v382 + 48))(v92, v71, v383);
        v94 = v424;
        v95 = v414;
        if (!v93)
          goto LABEL_95;
        goto LABEL_94;
      }
      v96 = v72;
      v94 = v424;
      v97 = (uint64_t *)((unint64_t)&v92[v424] & 0xFFFFFFFFFFFFFFF8);
      v95 = v414;
      if (v406 > 0x7FFFFFFE)
      {
        v105 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v360 + 48))(((unint64_t)v97 + v358) & v356, v96, v403);
        v94 = v424;
        if (!v105)
        {
LABEL_95:
          v97 = (uint64_t *)((unint64_t)&v92[v94] & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_96;
        }
LABEL_94:
        v106 = v409;
        memcpy(v91, v92, v409);
        goto LABEL_97;
      }
      v98 = *v97;
      if ((unint64_t)*v97 >= 0xFFFFFFFF)
        LODWORD(v98) = -1;
      if ((v98 + 1) >= 2)
        goto LABEL_94;
LABEL_96:
      v107 = v94;
      (*(void (**)(char *, char *, uint64_t))(v382 + 32))(v91, v92, v383);
      v108 = (_QWORD *)((unint64_t)&v91[v107] & 0xFFFFFFFFFFFFFFF8);
      *v108 = *v97;
      v109 = ((unint64_t)v108 + v358) & v356;
      v110 = ((unint64_t)v97 + v358) & v356;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v360 + 32))(v109, v110, v403);
      v111 = (_QWORD *)((v354 + v109) & 0xFFFFFFFFFFFFF8);
      v112 = (_QWORD *)((v354 + v110) & 0xFFFFFFFFFFFFF8);
      *v111 = *v112;
      *(_OWORD *)(((unint64_t)v111 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFF8);
      v106 = v409;
LABEL_97:
      v113 = &v91[v106];
      *v113 = v92[v106];
      *((_QWORD *)v113 + 1) = *(_QWORD *)&v92[v106 + 8];
      v82 = 2;
LABEL_157:
      *(_BYTE *)(v73 + v95) = v82;
      return v73;
    case 3:
      v76 = ~v410;
      v429 = ~v404;
      v413 = ~v407;
      v420 = ~v417;
      v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v399 + 32);
      v77(a1, a2, AssociatedTypeWitness);
      v425 = (void *)((v392 + a1) & v53);
      v78 = (const void *)((v392 + a2) & v53);
      if (v394 == v393)
      {
        v79 = (*(uint64_t (**)(unint64_t))(v399 + 48))((v392 + a2) & v53);
        v80 = v395;
        v81 = v396;
LABEL_147:
        if (v79)
        {
LABEL_148:
          v279 = v425;
          memcpy(v425, v78, v384);
          v281 = v390;
          v280 = v391;
          goto LABEL_149;
        }
        v89 = ((unint64_t)v78 + v80) & v76;
        v90 = (v398 + v89) & v429;
LABEL_151:
        ((void (*)(void *))v77)(v425);
        v283 = ((unint64_t)v425 + v80) & v76;
        v77(v283, v89, AssociatedTypeWitness);
        v284 = (v398 + v283) & v429;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v379 + 32))(v284, v90, v380);
        v285 = (_QWORD *)((v378 + v284) & 0xFFFFFFFFFFFFFFF8);
        v286 = (_QWORD *)((v378 + v90) & 0xFFFFFFFFFFFFFFF8);
        *v285 = *v286;
        v287 = ((unint64_t)v285 + v371) & v413;
        v288 = ((unint64_t)v286 + v371) & v413;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v372 + 32))(v287, v288, v373);
        v289 = (_QWORD *)((v367 + v288) & 0xFFFFFFFFFFFFF8);
        v290 = (_QWORD *)((v367 + v287) & 0xFFFFFFFFFFFFF8);
        *v290 = *v289;
        *(_OWORD *)(((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFF8);
        *(_OWORD *)(v385 + v284) = *(_OWORD *)(v385 + v90);
        v291 = (v374 + v385 + v284) & v420;
        v292 = (v374 + v385 + v90) & v420;
        *(_BYTE *)v291 = *(_BYTE *)v292;
        v293 = v291 | 4;
        v294 = *(_DWORD *)(v292 | 4);
        *(_BYTE *)(v293 + 4) = *(_BYTE *)((v292 | 4) + 4);
        *(_DWORD *)v293 = v294;
        *(_WORD *)(v291 + 10) = *(_WORD *)(v292 + 0xA);
        v295 = *(void (**)(unint64_t, unint64_t, uint64_t))(v381 + 32);
        v295((v375 + v291) & v55, (v375 + v292) & v55, v81);
        v296 = (v370 + ((v375 + v291) & v55)) & v55;
        v297 = (v370 + ((v375 + v292) & v55)) & v55;
        v295(v296, v297, v81);
        v298 = (_BYTE *)(v296 + v386);
        *v298 = *(_BYTE *)(v297 + v386);
        v298[1] = *(_BYTE *)(v297 + v386 + 1);
        v298[2] = *(_BYTE *)(v297 + v386 + 2);
        v298[3] = *(_BYTE *)(v297 + v386 + 3);
        v298[4] = *(_BYTE *)(v297 + v386 + 4);
        v299 = (v296 + v386 + 12) & 0xFFFFFFFFFFFFFFF8;
        v300 = (v297 + v386 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)v299 = *(_OWORD *)v300;
        *(_BYTE *)(v299 + 16) = *(_BYTE *)(v300 + 16);
        *(_BYTE *)(v299 + 17) = *(_BYTE *)(v300 + 17);
        *(_BYTE *)(v299 + 18) = *(_BYTE *)(v300 + 18);
        *(_BYTE *)(v299 + 19) = *(_BYTE *)(v300 + 19);
        v301 = (v299 + 27) & 0xFFFFFFFFFFFFFFF8;
        v302 = (v300 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v301 = *(_QWORD *)v302;
        *(_BYTE *)(v301 + 8) = *(_BYTE *)(v302 + 8);
        *(_BYTE *)(v301 + 9) = *(_BYTE *)(v302 + 9);
        *(_BYTE *)(v301 + 10) = *(_BYTE *)(v302 + 10);
        *(_BYTE *)(v301 + 11) = *(_BYTE *)(v302 + 11);
        *(_BYTE *)(v301 + 12) = *(_BYTE *)(v302 + 12);
        v303 = (_QWORD *)((v299 + 47) & 0xFFFFFFFFFFFFF8);
        v304 = (_QWORD *)((v300 + 47) & 0xFFFFFFFFFFFFF8);
        *v303 = *v304;
        v305 = ((unint64_t)v303 + 15) & 0xFFFFFFFFFFFFFFF8;
        v306 = ((unint64_t)v304 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v305 = *(_QWORD *)v306;
        *(_BYTE *)(v305 + 8) = *(_BYTE *)(v306 + 8);
        *(_BYTE *)(v305 + 9) = *(_BYTE *)(v306 + 9);
        v307 = (void *)((v368 + v305) & v55);
        v308 = (const void *)((v368 + v306) & v55);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v381 + 48))(v308, 1, v81))
        {
          memcpy(v307, v308, v397);
        }
        else
        {
          v295((unint64_t)v307, (unint64_t)v308, v81);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v381 + 56))(v307, 0, 1, v81);
        }
        v281 = v390;
        v280 = v391;
        v282 = v386;
        v279 = v425;
        v309 = (_QWORD *)(((unint64_t)v307 + v365) & 0xFFFFFFFFFFFFFFF8);
        v310 = (_QWORD *)(((unint64_t)v308 + v365) & 0xFFFFFFFFFFFFFFF8);
        *v309 = *v310;
        v311 = ((unint64_t)v309 + 15) & 0xFFFFFFFFFFFFFFF8;
        v312 = ((unint64_t)v310 + 15) & 0xFFFFFFFFFFFFFFF8;
        v313 = *(_QWORD *)v312;
        *(_BYTE *)(v311 + 8) = *(_BYTE *)(v312 + 8);
        *(_QWORD *)v311 = v313;
        v314 = (_QWORD *)(((unint64_t)v309 + 31) & 0xFFFFFFFFFFFFF8);
        v315 = (_QWORD *)(((unint64_t)v310 + 31) & 0xFFFFFFFFFFFFF8);
        *v314 = *v315;
        v316 = (_OWORD *)(((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8);
        v317 = (_OWORD *)(((unint64_t)v315 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v316 = *v317;
        v318 = ((unint64_t)v316 + 19) & 0xFFFFFFFFFFFFFFF8;
        v319 = ((unint64_t)v317 + 19) & 0xFFFFFFFFFFFFFFF8;
        v320 = *(_QWORD *)v319;
        *(_BYTE *)(v318 + 8) = *(_BYTE *)(v319 + 8);
        *(_QWORD *)v318 = v320;
        *(_BYTE *)(v318 + 9) = *(_BYTE *)(v319 + 9);
        v321 = (v318 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v322 = (v319 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v313) = *(_DWORD *)v322;
        *(_BYTE *)(v321 + 4) = *(_BYTE *)(v322 + 4);
        *(_DWORD *)v321 = v313;
        *(_OWORD *)((v318 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v319 + 25) & 0xFFFFFFFFFFFFF8);
        v323 = v366 + v291;
        v324 = *(_OWORD *)(v366 + v292 + 112);
        v326 = *(_OWORD *)(v366 + v292 + 64);
        v325 = *(_OWORD *)(v366 + v292 + 80);
        *(_OWORD *)(v323 + 96) = *(_OWORD *)(v366 + v292 + 96);
        *(_OWORD *)(v323 + 112) = v324;
        *(_OWORD *)(v323 + 64) = v326;
        *(_OWORD *)(v323 + 80) = v325;
        v327 = *(_OWORD *)(v366 + v292 + 176);
        v329 = *(_OWORD *)(v366 + v292 + 128);
        v328 = *(_OWORD *)(v366 + v292 + 144);
        *(_OWORD *)(v323 + 160) = *(_OWORD *)(v366 + v292 + 160);
        *(_OWORD *)(v323 + 176) = v327;
        *(_OWORD *)(v323 + 128) = v329;
        *(_OWORD *)(v323 + 144) = v328;
        v331 = *(_OWORD *)(v366 + v292 + 208);
        v330 = *(_OWORD *)(v366 + v292 + 224);
        v332 = *(_OWORD *)(v366 + v292 + 192);
        *(_QWORD *)(v323 + 240) = *(_QWORD *)(v366 + v292 + 240);
        *(_OWORD *)(v323 + 208) = v331;
        *(_OWORD *)(v323 + 224) = v330;
        *(_OWORD *)(v323 + 192) = v332;
        v333 = *(_OWORD *)(v366 + v292);
        v334 = *(_OWORD *)(v366 + v292 + 16);
        v335 = *(_OWORD *)(v366 + v292 + 48);
        *(_OWORD *)(v323 + 32) = *(_OWORD *)(v366 + v292 + 32);
        *(_OWORD *)(v323 + 48) = v335;
        *(_OWORD *)v323 = v333;
        *(_OWORD *)(v323 + 16) = v334;
        v336 = (_OWORD *)((v366 + v291 + 255) & 0xFFFFFFFFFFFFFFF8);
        v337 = (__int128 *)((v366 + v292 + 255) & 0xFFFFFFFFFFFFFFF8);
        v338 = *v337;
        *(_OWORD *)((char *)v336 + 9) = *(__int128 *)((char *)v337 + 9);
        *v336 = v338;
        v339 = (v366 + v291 + 287) & 0xFFFFFFFFFFFFFFF8;
        v340 = (v366 + v292 + 287) & 0xFFFFFFFFFFFFFFF8;
        v341 = *(_OWORD *)v340;
        *(_BYTE *)(v339 + 16) = *(_BYTE *)(v340 + 16);
        *(_OWORD *)v339 = v341;
        v342 = (_QWORD *)((v366 + v291 + 311) & 0xFFFFFFFFFFFFF8);
        v343 = (_QWORD *)((v366 + v292 + 311) & 0xFFFFFFFFFFFFF8);
        *v342 = *v343;
        *(_OWORD *)(((unint64_t)v342 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v343 + 15) & 0xFFFFFFFFFFFFF8);
        if (v376)
        {
LABEL_155:
          v344 = ((((v280
                   + ((((((((((v281 + v282 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v345 = (_OWORD *)(((unint64_t)v279 + v344) & 0xFFFFFFFFFFFFFFF8);
          v346 = (_OWORD *)(((unint64_t)v78 + v344) & 0xFFFFFFFFFFFFFFF8);
          *v345 = *v346;
          *(_QWORD *)(((unint64_t)v345 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v346 + 23) & 0xFFFFFFFFFFFFF8);
          v82 = 3;
LABEL_156:
          v95 = v414;
          v73 = a1;
          goto LABEL_157;
        }
LABEL_149:
        v282 = v397;
        goto LABEL_155;
      }
      v80 = v395;
      v81 = v396;
      v89 = ((unint64_t)v78 + v395) & v76;
      v90 = (v398 + v89) & v429;
      if (v377 == v393)
      {
        if (v364 == v377)
        {
          v79 = (*(uint64_t (**)(unint64_t))(v379 + 48))((v398 + v89) & v429);
          goto LABEL_147;
        }
        v118 = (unint64_t *)((v378 + v90) & 0xFFFFFFFFFFFFFFF8);
        if (v362 > 0x7FFFFFFE)
        {
          v79 = (*(uint64_t (**)(unint64_t))(v372 + 48))(((unint64_t)v118 + v371) & v413);
          goto LABEL_147;
        }
        v119 = *v118;
      }
      else
      {
        v103 = v385 + v90;
        if ((v363 & 0x80000000) == 0)
        {
          v104 = *(_QWORD *)(v103 + 8);
          if (v104 >= 0xFFFFFFFF)
            LODWORD(v104) = -1;
          v79 = v104 + 1;
          goto LABEL_147;
        }
        v120 = (v375 + ((v374 + v103) & v420)) & v55;
        if (v376 > 0x7FFFFFFD)
        {
          v79 = (*(uint64_t (**)(uint64_t))(v381 + 48))(v120);
          goto LABEL_147;
        }
        v119 = *(_QWORD *)(((v361 + ((v370 + v120) & v55)) & 0xFFFFFFFFFFFFF8) + 8);
      }
      if (v119 >= 0xFFFFFFFF)
        LODWORD(v119) = -1;
      if ((v119 + 1) >= 2)
        goto LABEL_148;
      goto LABEL_151;
    case 4:
      v73 = a1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v399 + 32))(a1, a2, AssociatedTypeWitness);
      v82 = 4;
      goto LABEL_80;
    case 5:
      v73 = a1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v399 + 32))(a1, a2, AssociatedTypeWitness);
      v82 = 5;
      goto LABEL_80;
    case 6:
      v73 = a1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v399 + 32))(a1, a2, AssociatedTypeWitness);
      v83 = (void *)((v45 + a1) & v56);
      v84 = (const void *)((v45 + a2) & v56);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v84, 1, v421))
      {
        memcpy(v83, v84, v46);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v83, v84, v421);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v83, 0, 1, v421);
      }
      v82 = 6;
      goto LABEL_80;
    case 7:
      v73 = a1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v399 + 32))(a1, a2, AssociatedTypeWitness);
      v82 = 7;
LABEL_80:
      v95 = v414;
      goto LABEL_157;
    default:
      if (v53 <= 3)
        v52 = v53;
      else
        v52 = 4;
      __asm { BR              X15 }
      return result;
  }
}

uint64_t sub_23AF8515C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  BOOL v20;
  size_t v21;
  unint64_t v22;
  size_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  size_t v29;
  size_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  size_t v39;
  size_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t (*v60)(unint64_t);
  unint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(unint64_t, uint64_t);
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t (*v75)(unint64_t);
  unint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void (*v81)(unint64_t, uint64_t);
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  void *v86;
  uint64_t v87;
  size_t v88;
  size_t v89;
  uint64_t v90;
  size_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t (*v94)(unint64_t);
  unint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  void (*v100)(unint64_t, uint64_t);
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  void *v120;
  const void *v121;
  int v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  const void *v125;
  int v126;
  uint64_t v127;
  void *v128;
  const void *v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  void *v131;
  const void *v132;
  int v133;
  uint64_t v134;
  char v135;
  void *v136;
  const void *v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  char *v144;
  _BYTE *v145;
  uint64_t *v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  _QWORD *v161;
  unint64_t v162;
  char *v163;
  unint64_t *v164;
  unint64_t v165;
  unint64_t *v166;
  unint64_t v167;
  unint64_t *v168;
  unint64_t v169;
  unint64_t *v170;
  unint64_t v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t *v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  size_t v181;
  unint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  unint64_t v185;
  unint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  int v193;
  void (*v194)(unint64_t, unint64_t, uint64_t);
  unint64_t v195;
  unint64_t v196;
  _BYTE *v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  unint64_t v204;
  unint64_t v205;
  void *v206;
  const void *v207;
  _QWORD *v208;
  _QWORD *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  _OWORD *v215;
  _OWORD *v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  unint64_t v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  _OWORD *v235;
  __int128 *v236;
  __int128 v237;
  unint64_t v238;
  unint64_t v239;
  __int128 v240;
  _QWORD *v241;
  _QWORD *v242;
  unint64_t v243;
  _QWORD *v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  size_t v251;
  unint64_t v252;
  unint64_t v253;
  _QWORD *v254;
  _QWORD *v255;
  unint64_t v256;
  unint64_t v257;
  _QWORD *v258;
  _QWORD *v259;
  unint64_t v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  int v264;
  void (*v265)(unint64_t, unint64_t, uint64_t);
  unint64_t v266;
  unint64_t v267;
  _BYTE *v268;
  unint64_t v269;
  unint64_t v270;
  unint64_t v271;
  unint64_t v272;
  _QWORD *v273;
  _QWORD *v274;
  unint64_t v275;
  unint64_t v276;
  void *v277;
  const void *v278;
  _QWORD *v279;
  _QWORD *v280;
  unint64_t v281;
  unint64_t v282;
  uint64_t v283;
  _QWORD *v284;
  _QWORD *v285;
  _OWORD *v286;
  _OWORD *v287;
  unint64_t v288;
  unint64_t v289;
  uint64_t v290;
  unint64_t v291;
  unint64_t v292;
  unint64_t v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  _OWORD *v306;
  __int128 *v307;
  __int128 v308;
  unint64_t v309;
  unint64_t v310;
  __int128 v311;
  _QWORD *v312;
  _QWORD *v313;
  unint64_t v314;
  void *v315;
  const void *v316;
  char *v317;
  char *v318;
  _QWORD *v319;
  uint64_t v320;
  _QWORD *v321;
  unint64_t v322;
  unint64_t v323;
  unint64_t v324;
  unint64_t v325;
  _QWORD *v326;
  unint64_t v327;
  _QWORD *v328;
  _QWORD *v329;
  uint64_t v330;
  unint64_t v331;
  size_t v332;
  unint64_t v333;
  _QWORD *v334;
  _QWORD *v335;
  unint64_t v336;
  unint64_t v337;
  _QWORD *v338;
  _QWORD *v339;
  unint64_t v340;
  uint64_t v341;
  unint64_t v342;
  uint64_t v343;
  int v344;
  void (*v345)(unint64_t, unint64_t, uint64_t);
  unint64_t v346;
  unint64_t v347;
  _BYTE *v348;
  unint64_t v349;
  unint64_t v350;
  unint64_t v351;
  unint64_t v352;
  _QWORD *v353;
  _QWORD *v354;
  unint64_t v355;
  unint64_t v356;
  void *v357;
  const void *v358;
  _QWORD *v359;
  _QWORD *v360;
  unint64_t v361;
  unint64_t v362;
  uint64_t v363;
  _QWORD *v364;
  _QWORD *v365;
  _OWORD *v366;
  _OWORD *v367;
  unint64_t v368;
  unint64_t v369;
  uint64_t v370;
  unint64_t v371;
  unint64_t v372;
  unint64_t v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  _OWORD *v386;
  __int128 *v387;
  __int128 v388;
  unint64_t v389;
  unint64_t v390;
  __int128 v391;
  _QWORD *v392;
  _QWORD *v393;
  unint64_t v394;
  _OWORD *v395;
  _OWORD *v396;
  uint64_t result;
  uint64_t v398;
  uint64_t v399;
  size_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  size_t v404;
  unsigned int v405;
  uint64_t v406;
  uint64_t v407;
  unsigned int v408;
  uint64_t v409;
  size_t __n;
  size_t v411;
  unsigned int v412;
  unsigned int v413;
  uint64_t v414;
  unsigned int v415;
  size_t v416;
  unsigned int v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  size_t v422;
  unint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  size_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  unint64_t v435;
  uint64_t v436;
  unsigned int v437;
  size_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  unint64_t v445;
  uint64_t v446;
  unsigned int v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  size_t v451;
  unint64_t v452;
  int v453;
  unsigned int v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  unsigned int v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t AssociatedTypeWitness;
  uint64_t v470;
  uint64_t v471;
  unint64_t v472;
  unint64_t v473;
  unint64_t v474;
  uint64_t v475;
  void *v476;

  v3 = a1;
  if (a1 != a2)
  {
    v475 = *(_QWORD *)(a3 + 16);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v5 = *(_QWORD *)(v4 + 64);
    v6 = *(unsigned __int8 *)(v4 + 80);
    v442 = swift_getAssociatedTypeWitness();
    v7 = *(_QWORD *)(v442 - 8);
    v8 = *(_DWORD *)(v7 + 80) & 0xF8;
    v431 = swift_getAssociatedTypeWitness();
    v9 = *(_QWORD *)(v431 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = v8 | v10 | 7;
    v439 = sub_23B1C5BDC();
    v12 = *(_QWORD *)(v439 - 8);
    v13 = *(unsigned __int8 *)(v12 + 80);
    v14 = v13 | 7;
    v15 = v11 | v6 | v13;
    v471 = v4;
    v16 = *(_DWORD *)(v9 + 84);
    v413 = *(_DWORD *)(v7 + 84);
    if (v413 > v16)
      v16 = *(_DWORD *)(v7 + 84);
    v405 = v16;
    if (v16 <= 0x7FFFFFFE)
      v16 = 2147483646;
    v437 = v16;
    v454 = *(_DWORD *)(v4 + 84);
    if (v16 <= v454)
      v16 = *(_DWORD *)(v4 + 84);
    v17 = *(_DWORD *)(v12 + 84);
    if (v17 <= 0x7FFFFFFE)
      v18 = 2147483646;
    else
      v18 = *(_DWORD *)(v12 + 84);
    if (v16 > v18)
      v18 = v16;
    v412 = v18;
    if (v18 <= 0x7FFFFFFF)
      v19 = 0x7FFFFFFF;
    else
      v19 = v18;
    v453 = v19;
    v415 = *(_DWORD *)(v12 + 84);
    v20 = v17 == 0;
    v455 = v5 + v6;
    v464 = v6;
    v456 = v5 + v11;
    v460 = v11;
    v440 = *(_QWORD *)(v7 + 64) + 7;
    v441 = v7;
    v429 = v10 + 8;
    v462 = v10;
    v430 = v9;
    v420 = *(_QWORD *)(v9 + 64) + 7;
    v433 = v14 + 16;
    v445 = ((((v420 + ((v10 + 8 + (v440 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    v434 = v13 + 12;
    v448 = *(_QWORD *)(v439 - 8);
    v21 = *(_QWORD *)(v12 + 64);
    v427 = v21 + v13;
    v411 = v21 + 12;
    v22 = (v13
         + 10
         + ((((((v21 + 12 + ((v21 + v13 + ((v13 + 12) & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
    v416 = v21;
    if (v20)
      ++v21;
    v438 = v21;
    v435 = v22;
    v436 = (v14 + 16 + ((v5 + v11 + ((v5 + v6) & ~v6)) & ~v11) + v445) & ~v14;
    v421 = v13 + 10;
    v422 = v21 + 7;
    v423 = ((((((((((v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    v451 = ((((v436 + v423 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    v452 = v15 + v5;
    v457 = v11 | v6 | v13;
    v23 = v451 + ((v15 + v5) & ~v15);
    v24 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = swift_getAssociatedTypeWitness();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned __int8 *)(v26 + 80);
    v28 = *(_DWORD *)(v26 + 84);
    v449 = v26;
    v450 = v25;
    v29 = *(_QWORD *)(v26 + 64);
    if (v28)
      v30 = v29;
    else
      v30 = v29 + 1;
    v444 = swift_getAssociatedTypeWitness();
    v31 = *(_QWORD *)(v444 - 8);
    v32 = *(_DWORD *)(v31 + 80) & 0xF8;
    v426 = swift_getAssociatedTypeWitness();
    v33 = *(_QWORD *)(v426 - 8);
    v34 = *(unsigned __int8 *)(v33 + 80);
    v35 = v32 | v34;
    v3 = a1;
    v36 = v35 | 7u;
    v37 = *(_DWORD *)(v31 + 84);
    v38 = *(_DWORD *)(v33 + 84);
    v408 = v38;
    if (v37 > v38)
      v38 = *(_DWORD *)(v31 + 84);
    v417 = v38;
    if (v38 <= 0x7FFFFFFE)
      v38 = 2147483646;
    v447 = v38;
    v443 = v31;
    v446 = *(_QWORD *)(v31 + 64) + 7;
    v424 = v34 + 8;
    v425 = *(_QWORD *)(v426 - 8);
    v414 = *(_QWORD *)(v33 + 64) + 7;
    v39 = ((((v414 + ((v34 + 8 + (v446 & 0xFFFFFFFFFFFFFFF8)) & ~v34)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    __n = v30;
    v40 = v30 + v36;
    v41 = ((((((v30 + v36 + ((v23 + v27) & ~v27)) & ~v36) + v39 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v470 = v27;
    v419 = v5 + v27;
    v42 = v39 + ((v30 + v36 + ((v5 + v27) & ~v27)) & ~v36) + 16;
    v43 = *(_QWORD *)(v475 - 8);
    v44 = *(unsigned __int8 *)(v43 + 80);
    v45 = v5 + v44;
    if (*(_DWORD *)(v43 + 84))
      v46 = *(_QWORD *)(v43 + 64);
    else
      v46 = *(_QWORD *)(v43 + 64) + 1;
    v47 = ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v5 > v47)
      v47 = v5;
    if (v41 <= v42)
      v41 = v42;
    if (((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= ((v5 + v44) & ~v44) + v46)
      v48 = ((v5 + v44) & ~v44) + v46;
    else
      v48 = ((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v47 > v41)
      v41 = v47;
    if (v41 <= v48)
      v49 = v48;
    else
      v49 = v41;
    v51 = AssociatedTypeWitness;
    v52 = v471;
    v53 = v462;
    v54 = v13 | 7;
    v55 = v457;
    v463 = ~v457;
    v465 = ~v464;
    v466 = ~v460;
    v428 = ~v53;
    v432 = ~(v13 | 7);
    v458 = ~v13;
    v56 = ~v470;
    v459 = ~v36;
    v57 = ~v34;
    v418 = ~v44;
    v461 = v37;
    v404 = v46;
    v409 = v45;
    switch(*(_BYTE *)(a1 + v49))
    {
      case 0:
        v406 = ~v470;
        v401 = ~v34;
        v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 8);
        v58(a1, AssociatedTypeWitness, v54, v55);
        v59 = (v452 + a1) & v463;
        if (v454 == v453)
        {
          v60 = *(uint64_t (**)(unint64_t))(v471 + 48);
          v61 = (v452 + a1) & v463;
          goto LABEL_49;
        }
        v63 = (v455 + v59) & v465;
        v64 = (v456 + v63) & v466;
        if (v437 == v453)
        {
          if (v413 == v437)
          {
            v60 = *(uint64_t (**)(unint64_t))(v441 + 48);
            v61 = (v456 + v63) & v466;
            goto LABEL_49;
          }
          v164 = (unint64_t *)((v440 + v64) & 0xFFFFFFFFFFFFFFF8);
          if (v405 <= 0x7FFFFFFE)
          {
            v165 = *v164;
            goto LABEL_300;
          }
          v61 = ((unint64_t)v164 + v429) & v428;
          v60 = *(uint64_t (**)(unint64_t))(v430 + 48);
        }
        else
        {
          v114 = v445 + v64;
          if ((v412 & 0x80000000) == 0)
          {
            v115 = *(_QWORD *)(v114 + 8);
            if (v115 >= 0xFFFFFFFF)
              LODWORD(v115) = -1;
            if ((_DWORD)v115 == -1)
            {
LABEL_50:
              v63 = (v455 + v59) & v465;
              v64 = (v456 + v63) & v466;
LABEL_51:
              v398 = v59;
              ((void (*)(uint64_t, uint64_t))v58)(v59, AssociatedTypeWitness);
              ((void (*)(uint64_t, uint64_t))v58)(v63, AssociatedTypeWitness);
              (*(void (**)(uint64_t, uint64_t))(v441 + 8))(v64, v442);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v430 + 8))((v429 + ((v440 + v64) & 0xFFFFFFFFFFFFFFF8)) & v428, v431);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v65 = (v433 + v445 + v64) & v432;
              v66 = *(void (**)(unint64_t, uint64_t))(v448 + 8);
              v66((v434 + v65) & v458, v439);
              v67 = (v427 + ((v434 + v65) & v458)) & v458;
              v66(v67, v439);
              swift_bridgeObjectRelease();
              v68 = (v421
                   + ((((((v411 + v67) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v458;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v448 + 48))(v68, 1, v439))
                v66(v68, v439);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v69 = *(_QWORD *)(((((((v422 + v68) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 8);
              if ((v69 & 0x3000000000000000) == 0)
                sub_23AAAE53C(*(_QWORD *)((((((v422 + v68) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v69);
              swift_bridgeObjectRelease();
              v70 = v423 + v65;
              v71 = *(void **)(v70 + 16);
              LODWORD(v72) = -1;
              if ((unint64_t)v71 < 0xFFFFFFFF)
                v72 = *(_QWORD *)(v70 + 16);
              v51 = AssociatedTypeWitness;
              v52 = v471;
              if ((int)v72 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v70 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_23AAA12F0(*(_QWORD *)((((v70 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v70 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              v59 = v398;
              goto LABEL_62;
            }
            goto LABEL_62;
          }
          v61 = (v434 + ((v433 + v114) & v432)) & v458;
          if (v415 <= 0x7FFFFFFD)
          {
            v165 = *(_QWORD *)(((v411 + ((v427 + v61) & v458)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_300:
            if (v165 >= 0xFFFFFFFF)
              LODWORD(v165) = -1;
            if ((v165 + 1) < 2)
              goto LABEL_51;
LABEL_62:

LABEL_104:
            v57 = v401;
            v56 = v406;
LABEL_149:
            switch(*(_BYTE *)(a2 + v49))
            {
              case 0:
                v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
                v119(a1, a2, v51);
                v120 = (void *)((v452 + a1) & v463);
                v121 = (const void *)((v452 + a2) & v463);
                if (v454 == v453)
                {
                  v122 = (*(uint64_t (**)(unint64_t))(v52 + 48))((v452 + a2) & v463);
                  v123 = v448;
                  goto LABEL_233;
                }
                v138 = ((unint64_t)v121 + v455) & v465;
                v139 = (v456 + v138) & v466;
                v123 = v448;
                if (v437 == v453)
                {
                  if (v413 == v437)
                  {
                    v122 = (*(uint64_t (**)(unint64_t))(v441 + 48))((v456 + v138) & v466);
                    goto LABEL_233;
                  }
                  v170 = (unint64_t *)((v440 + v139) & 0xFFFFFFFFFFFFFFF8);
                  if (v405 <= 0x7FFFFFFE)
                  {
                    v171 = *v170;
                    goto LABEL_285;
                  }
                  v122 = (*(uint64_t (**)(unint64_t))(v430 + 48))(((unint64_t)v170 + v429) & v428);
                }
                else
                {
                  v150 = v445 + v139;
                  if ((v412 & 0x80000000) != 0)
                  {
                    v176 = (v434 + ((v433 + v150) & v432)) & v458;
                    if (v415 <= 0x7FFFFFFD)
                    {
                      v171 = *(_QWORD *)(((v411 + ((v427 + v176) & v458)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_285:
                      if (v171 >= 0xFFFFFFFF)
                        LODWORD(v171) = -1;
                      if ((v171 + 1) >= 2)
                        goto LABEL_234;
                      goto LABEL_237;
                    }
                    v122 = (*(uint64_t (**)(uint64_t))(v448 + 48))(v176);
                  }
                  else
                  {
                    v151 = *(_QWORD *)(v150 + 8);
                    if (v151 >= 0xFFFFFFFF)
                      LODWORD(v151) = -1;
                    v122 = v151 + 1;
                  }
                }
LABEL_233:
                if (v122)
                {
LABEL_234:
                  memcpy(v120, v121, v451);
                  v180 = v435;
                  v179 = v436;
LABEL_235:
                  v181 = v438;
                  goto LABEL_241;
                }
                v138 = ((unint64_t)v121 + v455) & v465;
                v139 = (v456 + v138) & v466;
LABEL_237:
                v472 = v49;
                v119((uint64_t)v120, (uint64_t)v121, AssociatedTypeWitness);
                v119(((unint64_t)v120 + v455) & v465, v138, AssociatedTypeWitness);
                v182 = (v456 + (((unint64_t)v120 + v455) & v465)) & v466;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v441 + 32))(v182, v139, v442);
                v183 = (_QWORD *)((v440 + v182) & 0xFFFFFFFFFFFFFFF8);
                v184 = (_QWORD *)((v440 + v139) & 0xFFFFFFFFFFFFFFF8);
                *v183 = *v184;
                v185 = ((unint64_t)v183 + v429) & v428;
                v186 = ((unint64_t)v184 + v429) & v428;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v430 + 32))(v185, v186, v431);
                v187 = (_QWORD *)((v420 + v186) & 0xFFFFFFFFFFFFF8);
                v188 = (_QWORD *)((v420 + v185) & 0xFFFFFFFFFFFFF8);
                *v188 = *v187;
                *(_OWORD *)(((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v187
                                                                                             + 15) & 0xFFFFFFFFFFFFF8);
                *(_OWORD *)(v445 + v182) = *(_OWORD *)(v445 + v139);
                v189 = (v433 + v445 + v182) & v432;
                v190 = v123;
                v191 = (v433 + v445 + v139) & v432;
                *(_BYTE *)v189 = *(_BYTE *)v191;
                v192 = v189 | 4;
                v193 = *(_DWORD *)(v191 | 4);
                *(_BYTE *)(v192 + 4) = *(_BYTE *)((v191 | 4) + 4);
                *(_DWORD *)v192 = v193;
                *(_WORD *)(v189 + 10) = *(_WORD *)(v191 + 0xA);
                v194 = *(void (**)(unint64_t, unint64_t, uint64_t))(v190 + 32);
                v194((v434 + v189) & v458, (v434 + v191) & v458, v439);
                v195 = (v427 + ((v434 + v189) & v458)) & v458;
                v196 = (v427 + ((v434 + v191) & v458)) & v458;
                v194(v195, v196, v439);
                v197 = (_BYTE *)(v195 + v416);
                *v197 = *(_BYTE *)(v196 + v416);
                v197[1] = *(_BYTE *)(v196 + v416 + 1);
                v197[2] = *(_BYTE *)(v196 + v416 + 2);
                v197[3] = *(_BYTE *)(v196 + v416 + 3);
                v197[4] = *(_BYTE *)(v196 + v416 + 4);
                v198 = (v195 + v416 + 12) & 0xFFFFFFFFFFFFFFF8;
                v199 = (v196 + v416 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)v198 = *(_OWORD *)v199;
                *(_BYTE *)(v198 + 16) = *(_BYTE *)(v199 + 16);
                *(_BYTE *)(v198 + 17) = *(_BYTE *)(v199 + 17);
                *(_BYTE *)(v198 + 18) = *(_BYTE *)(v199 + 18);
                *(_BYTE *)(v198 + 19) = *(_BYTE *)(v199 + 19);
                v200 = (v198 + 27) & 0xFFFFFFFFFFFFFFF8;
                v201 = (v199 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v200 = *(_QWORD *)v201;
                *(_BYTE *)(v200 + 8) = *(_BYTE *)(v201 + 8);
                *(_BYTE *)(v200 + 9) = *(_BYTE *)(v201 + 9);
                *(_BYTE *)(v200 + 10) = *(_BYTE *)(v201 + 10);
                *(_BYTE *)(v200 + 11) = *(_BYTE *)(v201 + 11);
                *(_BYTE *)(v200 + 12) = *(_BYTE *)(v201 + 12);
                v202 = (_QWORD *)((v198 + 47) & 0xFFFFFFFFFFFFF8);
                v203 = (_QWORD *)((v199 + 47) & 0xFFFFFFFFFFFFF8);
                *v202 = *v203;
                v204 = ((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8;
                v205 = ((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v204 = *(_QWORD *)v205;
                *(_BYTE *)(v204 + 8) = *(_BYTE *)(v205 + 8);
                *(_BYTE *)(v204 + 9) = *(_BYTE *)(v205 + 9);
                v206 = (void *)((v421 + v204) & v458);
                v207 = (const void *)((v421 + v205) & v458);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v190 + 48))(v207, 1, v439))
                {
                  memcpy(v206, v207, v438);
                }
                else
                {
                  v194((unint64_t)v206, (unint64_t)v207, v439);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v206, 0, 1, v439);
                }
                v3 = a1;
                v49 = v472;
                v180 = v435;
                v179 = v436;
                v181 = v416;
                v208 = (_QWORD *)(((unint64_t)v206 + v422) & 0xFFFFFFFFFFFFFFF8);
                v209 = (_QWORD *)(((unint64_t)v207 + v422) & 0xFFFFFFFFFFFFFFF8);
                *v208 = *v209;
                v210 = ((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8;
                v211 = ((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8;
                v212 = *(_QWORD *)v211;
                *(_BYTE *)(v210 + 8) = *(_BYTE *)(v211 + 8);
                *(_QWORD *)v210 = v212;
                v213 = (_QWORD *)(((unint64_t)v208 + 31) & 0xFFFFFFFFFFFFF8);
                v214 = (_QWORD *)(((unint64_t)v209 + 31) & 0xFFFFFFFFFFFFF8);
                *v213 = *v214;
                v215 = (_OWORD *)(((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8);
                v216 = (_OWORD *)(((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8);
                *v215 = *v216;
                v217 = ((unint64_t)v215 + 19) & 0xFFFFFFFFFFFFFFF8;
                v218 = ((unint64_t)v216 + 19) & 0xFFFFFFFFFFFFFFF8;
                v219 = *(_QWORD *)v218;
                *(_BYTE *)(v217 + 8) = *(_BYTE *)(v218 + 8);
                *(_QWORD *)v217 = v219;
                *(_BYTE *)(v217 + 9) = *(_BYTE *)(v218 + 9);
                v220 = (v217 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                v221 = (v218 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                LODWORD(v212) = *(_DWORD *)v221;
                *(_BYTE *)(v220 + 4) = *(_BYTE *)(v221 + 4);
                *(_DWORD *)v220 = v212;
                *(_OWORD *)((v217 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v218 + 25) & 0xFFFFFFFFFFFFF8);
                v222 = v423 + v189;
                v223 = *(_OWORD *)(v423 + v191 + 112);
                v225 = *(_OWORD *)(v423 + v191 + 64);
                v224 = *(_OWORD *)(v423 + v191 + 80);
                *(_OWORD *)(v222 + 96) = *(_OWORD *)(v423 + v191 + 96);
                *(_OWORD *)(v222 + 112) = v223;
                *(_OWORD *)(v222 + 64) = v225;
                *(_OWORD *)(v222 + 80) = v224;
                v226 = *(_OWORD *)(v423 + v191 + 176);
                v228 = *(_OWORD *)(v423 + v191 + 128);
                v227 = *(_OWORD *)(v423 + v191 + 144);
                *(_OWORD *)(v222 + 160) = *(_OWORD *)(v423 + v191 + 160);
                *(_OWORD *)(v222 + 176) = v226;
                *(_OWORD *)(v222 + 128) = v228;
                *(_OWORD *)(v222 + 144) = v227;
                v230 = *(_OWORD *)(v423 + v191 + 208);
                v229 = *(_OWORD *)(v423 + v191 + 224);
                v231 = *(_OWORD *)(v423 + v191 + 192);
                *(_QWORD *)(v222 + 240) = *(_QWORD *)(v423 + v191 + 240);
                *(_OWORD *)(v222 + 208) = v230;
                *(_OWORD *)(v222 + 224) = v229;
                *(_OWORD *)(v222 + 192) = v231;
                v232 = *(_OWORD *)(v423 + v191);
                v233 = *(_OWORD *)(v423 + v191 + 16);
                v234 = *(_OWORD *)(v423 + v191 + 48);
                *(_OWORD *)(v222 + 32) = *(_OWORD *)(v423 + v191 + 32);
                *(_OWORD *)(v222 + 48) = v234;
                *(_OWORD *)v222 = v232;
                *(_OWORD *)(v222 + 16) = v233;
                v235 = (_OWORD *)((v423 + v189 + 255) & 0xFFFFFFFFFFFFFFF8);
                v236 = (__int128 *)((v423 + v191 + 255) & 0xFFFFFFFFFFFFFFF8);
                v237 = *v236;
                *(_OWORD *)((char *)v235 + 9) = *(__int128 *)((char *)v236 + 9);
                *v235 = v237;
                v238 = (v423 + v189 + 287) & 0xFFFFFFFFFFFFFFF8;
                v239 = (v423 + v191 + 287) & 0xFFFFFFFFFFFFFFF8;
                v240 = *(_OWORD *)v239;
                *(_BYTE *)(v238 + 16) = *(_BYTE *)(v239 + 16);
                *(_OWORD *)v238 = v240;
                v241 = (_QWORD *)((v423 + v189 + 311) & 0xFFFFFFFFFFFFF8);
                v242 = (_QWORD *)((v423 + v191 + 311) & 0xFFFFFFFFFFFFF8);
                *v241 = *v242;
                *(_OWORD *)(((unint64_t)v241 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v242
                                                                                             + 15) & 0xFFFFFFFFFFFFF8);
                if (!v415)
                  goto LABEL_235;
LABEL_241:
                v135 = 0;
                v243 = ((((v179
                         + ((((((((((v180 + v181 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 19) & 0xFFFFFFFFFFFFFFF8)
                           + 25) & 0xFFFFFFFFFFFFFFF8)
                         + 327) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 16;
                v244 = (_QWORD *)(((unint64_t)v120 + v243) & 0xFFFFFFFFFFFFFFF8);
                v245 = (_QWORD *)(((unint64_t)v121 + v243) & 0xFFFFFFFFFFFFFFF8);
                *v244 = *v245;
                *(_QWORD *)(((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v245
                                                                                             + 15) & 0xFFFFFFFFFFFFF8);
                goto LABEL_277;
              case 1:
                v407 = v56;
                v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
                v124(a1, a2, v51);
                v476 = (void *)((v452 + a1) & v463);
                v125 = (const void *)((v452 + a2) & v463);
                v400 = v39;
                if (v454 == v453)
                {
                  v126 = (*(uint64_t (**)(unint64_t))(v52 + 48))((v452 + a2) & v463);
                  v127 = v448;
LABEL_243:
                  if (v126)
                  {
LABEL_244:
                    v246 = (v452 + a1) & v463;
                    memcpy(v476, v125, v451);
                    v248 = v435;
                    v247 = v436;
                    v250 = v449;
                    v249 = v450;
LABEL_245:
                    v251 = v438;
                    goto LABEL_251;
                  }
                  v140 = ((unint64_t)v125 + v455) & v465;
                  v141 = (v456 + v140) & v466;
LABEL_247:
                  v403 = v57;
                  v473 = v49;
                  v124((uint64_t)v476, (uint64_t)v125, v51);
                  v252 = ((unint64_t)v476 + v455) & v465;
                  v124(v252, v140, v51);
                  v253 = (v456 + v252) & v466;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v441 + 32))(v253, v141, v442);
                  v254 = (_QWORD *)((v440 + v253) & 0xFFFFFFFFFFFFFFF8);
                  v255 = (_QWORD *)((v440 + v141) & 0xFFFFFFFFFFFFFFF8);
                  *v254 = *v255;
                  v256 = ((unint64_t)v254 + v429) & v428;
                  v257 = ((unint64_t)v255 + v429) & v428;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v430 + 32))(v256, v257, v431);
                  v258 = (_QWORD *)((v420 + v257) & 0xFFFFFFFFFFFFF8);
                  v259 = (_QWORD *)((v420 + v256) & 0xFFFFFFFFFFFFF8);
                  *v259 = *v258;
                  *(_OWORD *)(((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v258
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  *(_OWORD *)(v445 + v253) = *(_OWORD *)(v445 + v141);
                  v260 = (v433 + v445 + v253) & v432;
                  v261 = v127;
                  v262 = (v433 + v445 + v141) & v432;
                  *(_BYTE *)v260 = *(_BYTE *)v262;
                  v263 = v260 | 4;
                  v264 = *(_DWORD *)(v262 | 4);
                  *(_BYTE *)(v263 + 4) = *(_BYTE *)((v262 | 4) + 4);
                  *(_DWORD *)v263 = v264;
                  *(_WORD *)(v260 + 10) = *(_WORD *)(v262 + 0xA);
                  v265 = *(void (**)(unint64_t, unint64_t, uint64_t))(v261 + 32);
                  v265((v434 + v260) & v458, (v434 + v262) & v458, v439);
                  v266 = (v427 + ((v434 + v260) & v458)) & v458;
                  v267 = (v427 + ((v434 + v262) & v458)) & v458;
                  v265(v266, v267, v439);
                  v251 = v416;
                  v268 = (_BYTE *)(v266 + v416);
                  *v268 = *(_BYTE *)(v267 + v416);
                  v268[1] = *(_BYTE *)(v267 + v416 + 1);
                  v268[2] = *(_BYTE *)(v267 + v416 + 2);
                  v268[3] = *(_BYTE *)(v267 + v416 + 3);
                  v268[4] = *(_BYTE *)(v267 + v416 + 4);
                  v269 = (v266 + v416 + 12) & 0xFFFFFFFFFFFFFFF8;
                  v270 = (v267 + v416 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v269 = *(_OWORD *)v270;
                  *(_BYTE *)(v269 + 16) = *(_BYTE *)(v270 + 16);
                  *(_BYTE *)(v269 + 17) = *(_BYTE *)(v270 + 17);
                  *(_BYTE *)(v269 + 18) = *(_BYTE *)(v270 + 18);
                  *(_BYTE *)(v269 + 19) = *(_BYTE *)(v270 + 19);
                  v271 = (v269 + 27) & 0xFFFFFFFFFFFFFFF8;
                  v272 = (v270 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v271 = *(_QWORD *)v272;
                  *(_BYTE *)(v271 + 8) = *(_BYTE *)(v272 + 8);
                  *(_BYTE *)(v271 + 9) = *(_BYTE *)(v272 + 9);
                  *(_BYTE *)(v271 + 10) = *(_BYTE *)(v272 + 10);
                  *(_BYTE *)(v271 + 11) = *(_BYTE *)(v272 + 11);
                  *(_BYTE *)(v271 + 12) = *(_BYTE *)(v272 + 12);
                  v273 = (_QWORD *)((v269 + 47) & 0xFFFFFFFFFFFFF8);
                  v274 = (_QWORD *)((v270 + 47) & 0xFFFFFFFFFFFFF8);
                  *v273 = *v274;
                  v275 = ((unint64_t)v273 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v276 = ((unint64_t)v274 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v275 = *(_QWORD *)v276;
                  *(_BYTE *)(v275 + 8) = *(_BYTE *)(v276 + 8);
                  *(_BYTE *)(v275 + 9) = *(_BYTE *)(v276 + 9);
                  v277 = (void *)((v421 + v275) & v458);
                  v278 = (const void *)((v421 + v276) & v458);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v261 + 48))(v278, 1, v439))
                  {
                    memcpy(v277, v278, v438);
                  }
                  else
                  {
                    v265((unint64_t)v277, (unint64_t)v278, v439);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v261 + 56))(v277, 0, 1, v439);
                  }
                  v49 = v473;
                  v248 = v435;
                  v247 = v436;
                  v57 = v403;
                  v250 = v449;
                  v249 = v450;
                  v279 = (_QWORD *)(((unint64_t)v277 + v422) & 0xFFFFFFFFFFFFFFF8);
                  v280 = (_QWORD *)(((unint64_t)v278 + v422) & 0xFFFFFFFFFFFFFFF8);
                  *v279 = *v280;
                  v281 = ((unint64_t)v279 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v282 = ((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v283 = *(_QWORD *)v282;
                  *(_BYTE *)(v281 + 8) = *(_BYTE *)(v282 + 8);
                  *(_QWORD *)v281 = v283;
                  v284 = (_QWORD *)(((unint64_t)v279 + 31) & 0xFFFFFFFFFFFFF8);
                  v285 = (_QWORD *)(((unint64_t)v280 + 31) & 0xFFFFFFFFFFFFF8);
                  *v284 = *v285;
                  v286 = (_OWORD *)(((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v287 = (_OWORD *)(((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v286 = *v287;
                  v288 = ((unint64_t)v286 + 19) & 0xFFFFFFFFFFFFFFF8;
                  v289 = ((unint64_t)v287 + 19) & 0xFFFFFFFFFFFFFFF8;
                  v290 = *(_QWORD *)v289;
                  *(_BYTE *)(v288 + 8) = *(_BYTE *)(v289 + 8);
                  *(_QWORD *)v288 = v290;
                  *(_BYTE *)(v288 + 9) = *(_BYTE *)(v289 + 9);
                  v291 = (v288 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  v292 = (v289 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  LODWORD(v283) = *(_DWORD *)v292;
                  *(_BYTE *)(v291 + 4) = *(_BYTE *)(v292 + 4);
                  *(_DWORD *)v291 = v283;
                  *(_OWORD *)((v288 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v289 + 25) & 0xFFFFFFFFFFFFF8);
                  v293 = v423 + v260;
                  v294 = *(_OWORD *)(v423 + v262 + 112);
                  v296 = *(_OWORD *)(v423 + v262 + 64);
                  v295 = *(_OWORD *)(v423 + v262 + 80);
                  *(_OWORD *)(v293 + 96) = *(_OWORD *)(v423 + v262 + 96);
                  *(_OWORD *)(v293 + 112) = v294;
                  *(_OWORD *)(v293 + 64) = v296;
                  *(_OWORD *)(v293 + 80) = v295;
                  v297 = *(_OWORD *)(v423 + v262 + 176);
                  v299 = *(_OWORD *)(v423 + v262 + 128);
                  v298 = *(_OWORD *)(v423 + v262 + 144);
                  *(_OWORD *)(v293 + 160) = *(_OWORD *)(v423 + v262 + 160);
                  *(_OWORD *)(v293 + 176) = v297;
                  *(_OWORD *)(v293 + 128) = v299;
                  *(_OWORD *)(v293 + 144) = v298;
                  v301 = *(_OWORD *)(v423 + v262 + 208);
                  v300 = *(_OWORD *)(v423 + v262 + 224);
                  v302 = *(_OWORD *)(v423 + v262 + 192);
                  *(_QWORD *)(v293 + 240) = *(_QWORD *)(v423 + v262 + 240);
                  *(_OWORD *)(v293 + 208) = v301;
                  *(_OWORD *)(v293 + 224) = v300;
                  *(_OWORD *)(v293 + 192) = v302;
                  v303 = *(_OWORD *)(v423 + v262);
                  v304 = *(_OWORD *)(v423 + v262 + 16);
                  v305 = *(_OWORD *)(v423 + v262 + 48);
                  *(_OWORD *)(v293 + 32) = *(_OWORD *)(v423 + v262 + 32);
                  *(_OWORD *)(v293 + 48) = v305;
                  *(_OWORD *)v293 = v303;
                  *(_OWORD *)(v293 + 16) = v304;
                  v306 = (_OWORD *)((v423 + v260 + 255) & 0xFFFFFFFFFFFFFFF8);
                  v307 = (__int128 *)((v423 + v262 + 255) & 0xFFFFFFFFFFFFFFF8);
                  v308 = *v307;
                  *(_OWORD *)((char *)v306 + 9) = *(__int128 *)((char *)v307 + 9);
                  *v306 = v308;
                  v309 = (v423 + v260 + 287) & 0xFFFFFFFFFFFFFFF8;
                  v310 = (v423 + v262 + 287) & 0xFFFFFFFFFFFFFFF8;
                  v311 = *(_OWORD *)v310;
                  *(_BYTE *)(v309 + 16) = *(_BYTE *)(v310 + 16);
                  *(_OWORD *)v309 = v311;
                  v312 = (_QWORD *)((v423 + v260 + 311) & 0xFFFFFFFFFFFFF8);
                  v313 = (_QWORD *)((v423 + v262 + 311) & 0xFFFFFFFFFFFFF8);
                  *v312 = *v313;
                  *(_OWORD *)(((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v313
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v246 = (v452 + a1) & v463;
                  if (!v415)
                    goto LABEL_245;
LABEL_251:
                  v314 = ((((v247
                           + ((((((((((v248 + v251 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                               + 19) & 0xFFFFFFFFFFFFFFF8)
                             + 25) & 0xFFFFFFFFFFFFFFF8)
                           + 327) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 16;
                  v315 = (void *)((v246 + v470 + v314) & v407);
                  v316 = (const void *)((((v452 + a2) & v463) + v470 + v314) & v407);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v250 + 48))(v316, 1, v249))
                  {
                    memcpy(v315, v316, __n);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v250 + 32))(v315, v316, v249);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v250 + 56))(v315, 0, 1, v249);
                  }
                  v3 = a1;
                  v317 = (char *)(((unint64_t)v315 + v40) & v459);
                  v318 = (char *)(((unint64_t)v316 + v40) & v459);
                  if (v461 == v447)
                  {
                    if (!(*(unsigned int (**)(char *))(v443 + 48))(v318))
                      goto LABEL_264;
                  }
                  else
                  {
                    v319 = (_QWORD *)((unint64_t)&v318[v446] & 0xFFFFFFFFFFFFFFF8);
                    if (v417 > 0x7FFFFFFE)
                    {
                      if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v425 + 48))(((unint64_t)v319 + v424) & v57, v408, v426))
                      {
LABEL_264:
                        v319 = (_QWORD *)((unint64_t)&v318[v446] & 0xFFFFFFFFFFFFFFF8);
LABEL_265:
                        (*(void (**)(char *, char *, uint64_t))(v443 + 32))(v317, v318, v444);
                        v321 = (_QWORD *)((unint64_t)&v317[v446] & 0xFFFFFFFFFFFFFFF8);
                        *v321 = *v319;
                        v322 = ((unint64_t)v321 + v424) & v57;
                        v323 = (unint64_t)v319 + v424;
                        v324 = v49;
                        v325 = v323 & v57;
                        (*(void (**)(unint64_t, unint64_t, uint64_t))(v425 + 32))(v322, v323 & v57, v426);
                        v326 = (_QWORD *)((v414 + v322) & 0xFFFFFFFFFFFFF8);
                        v327 = v414 + v325;
                        v49 = v324;
                        v327 &= 0xFFFFFFFFFFFFF8uLL;
                        *v326 = *(_QWORD *)v327;
                        *(_OWORD *)(((unint64_t)v326 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v327 + 15) & 0xFFFFFFFFFFFFF8);
                        goto LABEL_266;
                      }
                    }
                    else
                    {
                      v320 = *v319;
                      if (*v319 >= 0xFFFFFFFFuLL)
                        LODWORD(v320) = -1;
                      if ((v320 + 1) < 2)
                        goto LABEL_265;
                    }
                  }
                  memcpy(v317, v318, v400);
LABEL_266:
                  *(_QWORD *)&v317[v400] = *(_QWORD *)&v318[v400];
                  v328 = (_QWORD *)((unint64_t)&v317[v400 + 15] & 0xFFFFFFFFFFFFF8);
                  v329 = (_QWORD *)((unint64_t)&v318[v400 + 15] & 0xFFFFFFFFFFFFFFF8);
                  *v328 = *v329;
                  *(_QWORD *)(((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v329
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  v135 = 1;
LABEL_277:
                  *(_BYTE *)(v3 + v49) = v135;
                  return v3;
                }
                v140 = ((unint64_t)v125 + v455) & v465;
                v141 = (v456 + v140) & v466;
                v127 = v448;
                if (v437 == v453)
                {
                  if (v413 == v437)
                  {
                    v126 = (*(uint64_t (**)(unint64_t))(v441 + 48))((v456 + v140) & v466);
                    goto LABEL_243;
                  }
                  v172 = (unint64_t *)((v440 + v141) & 0xFFFFFFFFFFFFFFF8);
                  if (v405 > 0x7FFFFFFE)
                  {
                    v126 = (*(uint64_t (**)(unint64_t))(v430 + 48))(((unint64_t)v172 + v429) & v428);
                    goto LABEL_243;
                  }
                  v173 = *v172;
                }
                else
                {
                  v152 = v445 + v141;
                  if ((v412 & 0x80000000) == 0)
                  {
                    v153 = *(_QWORD *)(v152 + 8);
                    if (v153 >= 0xFFFFFFFF)
                      LODWORD(v153) = -1;
                    v126 = v153 + 1;
                    goto LABEL_243;
                  }
                  v177 = (v434 + ((v433 + v152) & v432)) & v458;
                  if (v415 > 0x7FFFFFFD)
                  {
                    v126 = (*(uint64_t (**)(uint64_t))(v448 + 48))(v177);
                    goto LABEL_243;
                  }
                  v173 = *(_QWORD *)(((v411 + ((v427 + v177) & v458)) & 0xFFFFFFFFFFFFF8) + 8);
                }
                if (v173 >= 0xFFFFFFFF)
                  LODWORD(v173) = -1;
                if ((v173 + 1) >= 2)
                  goto LABEL_244;
                goto LABEL_247;
              case 2:
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(a1, a2, v51);
                v128 = (void *)((v419 + a1) & v56);
                v129 = (const void *)((v419 + a2) & v56);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v449 + 48))(v129, 1, v450))
                {
                  memcpy(v128, v129, __n);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v449 + 32))(v128, v129, v450);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v449 + 56))(v128, 0, 1, v450);
                }
                v144 = (char *)(((unint64_t)v128 + v40) & v459);
                v145 = (_BYTE *)(((unint64_t)v129 + v40) & v459);
                if (v461 == v447)
                {
                  if (!(*(unsigned int (**)(_BYTE *))(v443 + 48))(v145))
                    goto LABEL_202;
                }
                else
                {
                  v146 = (uint64_t *)((unint64_t)&v145[v446] & 0xFFFFFFFFFFFFFFF8);
                  if (v417 > 0x7FFFFFFE)
                  {
                    if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v425 + 48))(((unint64_t)v146 + v424) & v57, v408, v426))
                    {
LABEL_202:
                      v146 = (uint64_t *)((unint64_t)&v145[v446] & 0xFFFFFFFFFFFFFFF8);
                      goto LABEL_203;
                    }
                  }
                  else
                  {
                    v147 = *v146;
                    if ((unint64_t)*v146 >= 0xFFFFFFFF)
                      LODWORD(v147) = -1;
                    if ((v147 + 1) < 2)
                    {
LABEL_203:
                      (*(void (**)(char *, _BYTE *, uint64_t))(v443 + 32))(v144, v145, v444);
                      v156 = (_QWORD *)((unint64_t)&v144[v446] & 0xFFFFFFFFFFFFFFF8);
                      *v156 = *v146;
                      v157 = ((unint64_t)v156 + v424) & v57;
                      v158 = (unint64_t)v146 + v424;
                      v159 = v49;
                      v160 = v158 & v57;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v425 + 32))(v157, v158 & v57, v426);
                      v161 = (_QWORD *)((v414 + v157) & 0xFFFFFFFFFFFFF8);
                      v162 = v414 + v160;
                      v49 = v159;
                      v162 &= 0xFFFFFFFFFFFFF8uLL;
                      *v161 = *(_QWORD *)v162;
                      *(_OWORD *)(((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v162 + 15) & 0xFFFFFFFFFFFFF8);
LABEL_204:
                      v163 = &v144[v39];
                      *v163 = v145[v39];
                      *((_QWORD *)v163 + 1) = *(_QWORD *)&v145[v39 + 8];
                      v135 = 2;
                      goto LABEL_277;
                    }
                  }
                }
                memcpy(v144, v145, v39);
                goto LABEL_204;
              case 3:
                v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
                v130(a1, a2, v51);
                v131 = (void *)((v452 + a1) & v463);
                v132 = (const void *)((v452 + a2) & v463);
                if (v454 == v453)
                {
                  v133 = (*(uint64_t (**)(unint64_t))(v52 + 48))((v452 + a2) & v463);
                  v134 = v448;
LABEL_268:
                  if (v133)
                  {
LABEL_269:
                    memcpy(v131, v132, v451);
                    v331 = v435;
                    v330 = v436;
                    goto LABEL_270;
                  }
                  v142 = ((unint64_t)v132 + v455) & v465;
                  v143 = (v456 + v142) & v466;
LABEL_272:
                  v474 = v49;
                  v130((uint64_t)v131, (uint64_t)v132, AssociatedTypeWitness);
                  v130(((unint64_t)v131 + v455) & v465, v142, AssociatedTypeWitness);
                  v333 = (v456 + (((unint64_t)v131 + v455) & v465)) & v466;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v441 + 32))(v333, v143, v442);
                  v334 = (_QWORD *)((v440 + v333) & 0xFFFFFFFFFFFFFFF8);
                  v335 = (_QWORD *)((v440 + v143) & 0xFFFFFFFFFFFFFFF8);
                  *v334 = *v335;
                  v336 = ((unint64_t)v334 + v429) & v428;
                  v337 = ((unint64_t)v335 + v429) & v428;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v430 + 32))(v336, v337, v431);
                  v338 = (_QWORD *)((v420 + v337) & 0xFFFFFFFFFFFFF8);
                  v339 = (_QWORD *)((v420 + v336) & 0xFFFFFFFFFFFFF8);
                  *v339 = *v338;
                  *(_OWORD *)(((unint64_t)v339 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v338
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  *(_OWORD *)(v445 + v333) = *(_OWORD *)(v445 + v143);
                  v340 = (v433 + v445 + v333) & v432;
                  v341 = v134;
                  v342 = (v433 + v445 + v143) & v432;
                  *(_BYTE *)v340 = *(_BYTE *)v342;
                  v343 = v340 | 4;
                  v344 = *(_DWORD *)(v342 | 4);
                  *(_BYTE *)(v343 + 4) = *(_BYTE *)((v342 | 4) + 4);
                  *(_DWORD *)v343 = v344;
                  *(_WORD *)(v340 + 10) = *(_WORD *)(v342 + 0xA);
                  v345 = *(void (**)(unint64_t, unint64_t, uint64_t))(v341 + 32);
                  v345((v434 + v340) & v458, (v434 + v342) & v458, v439);
                  v346 = (v427 + ((v434 + v340) & v458)) & v458;
                  v347 = (v427 + ((v434 + v342) & v458)) & v458;
                  v345(v346, v347, v439);
                  v348 = (_BYTE *)(v346 + v416);
                  *v348 = *(_BYTE *)(v347 + v416);
                  v348[1] = *(_BYTE *)(v347 + v416 + 1);
                  v348[2] = *(_BYTE *)(v347 + v416 + 2);
                  v348[3] = *(_BYTE *)(v347 + v416 + 3);
                  v348[4] = *(_BYTE *)(v347 + v416 + 4);
                  v349 = (v346 + v416 + 12) & 0xFFFFFFFFFFFFFFF8;
                  v350 = (v347 + v416 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)v349 = *(_OWORD *)v350;
                  *(_BYTE *)(v349 + 16) = *(_BYTE *)(v350 + 16);
                  *(_BYTE *)(v349 + 17) = *(_BYTE *)(v350 + 17);
                  *(_BYTE *)(v349 + 18) = *(_BYTE *)(v350 + 18);
                  *(_BYTE *)(v349 + 19) = *(_BYTE *)(v350 + 19);
                  v351 = (v349 + 27) & 0xFFFFFFFFFFFFFFF8;
                  v352 = (v350 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v351 = *(_QWORD *)v352;
                  *(_BYTE *)(v351 + 8) = *(_BYTE *)(v352 + 8);
                  *(_BYTE *)(v351 + 9) = *(_BYTE *)(v352 + 9);
                  *(_BYTE *)(v351 + 10) = *(_BYTE *)(v352 + 10);
                  *(_BYTE *)(v351 + 11) = *(_BYTE *)(v352 + 11);
                  *(_BYTE *)(v351 + 12) = *(_BYTE *)(v352 + 12);
                  v353 = (_QWORD *)((v349 + 47) & 0xFFFFFFFFFFFFF8);
                  v354 = (_QWORD *)((v350 + 47) & 0xFFFFFFFFFFFFF8);
                  *v353 = *v354;
                  v355 = ((unint64_t)v353 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v356 = ((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v355 = *(_QWORD *)v356;
                  *(_BYTE *)(v355 + 8) = *(_BYTE *)(v356 + 8);
                  *(_BYTE *)(v355 + 9) = *(_BYTE *)(v356 + 9);
                  v357 = (void *)((v421 + v355) & v458);
                  v358 = (const void *)((v421 + v356) & v458);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v341 + 48))(v358, 1, v439))
                  {
                    memcpy(v357, v358, v438);
                  }
                  else
                  {
                    v345((unint64_t)v357, (unint64_t)v358, v439);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v341 + 56))(v357, 0, 1, v439);
                  }
                  v3 = a1;
                  v49 = v474;
                  v331 = v435;
                  v330 = v436;
                  v332 = v416;
                  v359 = (_QWORD *)(((unint64_t)v357 + v422) & 0xFFFFFFFFFFFFFFF8);
                  v360 = (_QWORD *)(((unint64_t)v358 + v422) & 0xFFFFFFFFFFFFFFF8);
                  *v359 = *v360;
                  v361 = ((unint64_t)v359 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v362 = ((unint64_t)v360 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v363 = *(_QWORD *)v362;
                  *(_BYTE *)(v361 + 8) = *(_BYTE *)(v362 + 8);
                  *(_QWORD *)v361 = v363;
                  v364 = (_QWORD *)(((unint64_t)v359 + 31) & 0xFFFFFFFFFFFFF8);
                  v365 = (_QWORD *)(((unint64_t)v360 + 31) & 0xFFFFFFFFFFFFF8);
                  *v364 = *v365;
                  v366 = (_OWORD *)(((unint64_t)v364 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v367 = (_OWORD *)(((unint64_t)v365 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *v366 = *v367;
                  v368 = ((unint64_t)v366 + 19) & 0xFFFFFFFFFFFFFFF8;
                  v369 = ((unint64_t)v367 + 19) & 0xFFFFFFFFFFFFFFF8;
                  v370 = *(_QWORD *)v369;
                  *(_BYTE *)(v368 + 8) = *(_BYTE *)(v369 + 8);
                  *(_QWORD *)v368 = v370;
                  *(_BYTE *)(v368 + 9) = *(_BYTE *)(v369 + 9);
                  v371 = (v368 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  v372 = (v369 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  LODWORD(v363) = *(_DWORD *)v372;
                  *(_BYTE *)(v371 + 4) = *(_BYTE *)(v372 + 4);
                  *(_DWORD *)v371 = v363;
                  *(_OWORD *)((v368 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v369 + 25) & 0xFFFFFFFFFFFFF8);
                  v373 = v423 + v340;
                  v374 = *(_OWORD *)(v423 + v342 + 112);
                  v376 = *(_OWORD *)(v423 + v342 + 64);
                  v375 = *(_OWORD *)(v423 + v342 + 80);
                  *(_OWORD *)(v373 + 96) = *(_OWORD *)(v423 + v342 + 96);
                  *(_OWORD *)(v373 + 112) = v374;
                  *(_OWORD *)(v373 + 64) = v376;
                  *(_OWORD *)(v373 + 80) = v375;
                  v377 = *(_OWORD *)(v423 + v342 + 176);
                  v379 = *(_OWORD *)(v423 + v342 + 128);
                  v378 = *(_OWORD *)(v423 + v342 + 144);
                  *(_OWORD *)(v373 + 160) = *(_OWORD *)(v423 + v342 + 160);
                  *(_OWORD *)(v373 + 176) = v377;
                  *(_OWORD *)(v373 + 128) = v379;
                  *(_OWORD *)(v373 + 144) = v378;
                  v381 = *(_OWORD *)(v423 + v342 + 208);
                  v380 = *(_OWORD *)(v423 + v342 + 224);
                  v382 = *(_OWORD *)(v423 + v342 + 192);
                  *(_QWORD *)(v373 + 240) = *(_QWORD *)(v423 + v342 + 240);
                  *(_OWORD *)(v373 + 208) = v381;
                  *(_OWORD *)(v373 + 224) = v380;
                  *(_OWORD *)(v373 + 192) = v382;
                  v383 = *(_OWORD *)(v423 + v342);
                  v384 = *(_OWORD *)(v423 + v342 + 16);
                  v385 = *(_OWORD *)(v423 + v342 + 48);
                  *(_OWORD *)(v373 + 32) = *(_OWORD *)(v423 + v342 + 32);
                  *(_OWORD *)(v373 + 48) = v385;
                  *(_OWORD *)v373 = v383;
                  *(_OWORD *)(v373 + 16) = v384;
                  v386 = (_OWORD *)((v423 + v340 + 255) & 0xFFFFFFFFFFFFFFF8);
                  v387 = (__int128 *)((v423 + v342 + 255) & 0xFFFFFFFFFFFFFFF8);
                  v388 = *v387;
                  *(_OWORD *)((char *)v386 + 9) = *(__int128 *)((char *)v387 + 9);
                  *v386 = v388;
                  v389 = (v423 + v340 + 287) & 0xFFFFFFFFFFFFFFF8;
                  v390 = (v423 + v342 + 287) & 0xFFFFFFFFFFFFFFF8;
                  v391 = *(_OWORD *)v390;
                  *(_BYTE *)(v389 + 16) = *(_BYTE *)(v390 + 16);
                  *(_OWORD *)v389 = v391;
                  v392 = (_QWORD *)((v423 + v340 + 311) & 0xFFFFFFFFFFFFF8);
                  v393 = (_QWORD *)((v423 + v342 + 311) & 0xFFFFFFFFFFFFF8);
                  *v392 = *v393;
                  *(_OWORD *)(((unint64_t)v392 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v393
                                                                                               + 15) & 0xFFFFFFFFFFFFF8);
                  if (v415)
                  {
LABEL_276:
                    v394 = ((((v330
                             + ((((((((((v331 + v332 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    v395 = (_OWORD *)(((unint64_t)v131 + v394) & 0xFFFFFFFFFFFFFFF8);
                    v396 = (_OWORD *)(((unint64_t)v132 + v394) & 0xFFFFFFFFFFFFFFF8);
                    *v395 = *v396;
                    *(_QWORD *)(((unint64_t)v395 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v396
                                                                                                 + 23) & 0xFFFFFFFFFFFFF8);
                    v135 = 3;
                    goto LABEL_277;
                  }
LABEL_270:
                  v332 = v438;
                  goto LABEL_276;
                }
                v142 = ((unint64_t)v132 + v455) & v465;
                v143 = (v456 + v142) & v466;
                v134 = v448;
                if (v437 == v453)
                {
                  if (v413 == v437)
                  {
                    v133 = (*(uint64_t (**)(unint64_t))(v441 + 48))((v456 + v142) & v466);
                    goto LABEL_268;
                  }
                  v174 = (unint64_t *)((v440 + v143) & 0xFFFFFFFFFFFFFFF8);
                  if (v405 > 0x7FFFFFFE)
                  {
                    v133 = (*(uint64_t (**)(unint64_t))(v430 + 48))(((unint64_t)v174 + v429) & v428);
                    goto LABEL_268;
                  }
                  v175 = *v174;
                }
                else
                {
                  v154 = v445 + v143;
                  if ((v412 & 0x80000000) == 0)
                  {
                    v155 = *(_QWORD *)(v154 + 8);
                    if (v155 >= 0xFFFFFFFF)
                      LODWORD(v155) = -1;
                    v133 = v155 + 1;
                    goto LABEL_268;
                  }
                  v178 = (v434 + ((v433 + v154) & v432)) & v458;
                  if (v415 > 0x7FFFFFFD)
                  {
                    v133 = (*(uint64_t (**)(uint64_t))(v448 + 48))(v178);
                    goto LABEL_268;
                  }
                  v175 = *(_QWORD *)(((v411 + ((v427 + v178) & v458)) & 0xFFFFFFFFFFFFF8) + 8);
                }
                if (v175 >= 0xFFFFFFFF)
                  LODWORD(v175) = -1;
                if ((v175 + 1) >= 2)
                  goto LABEL_269;
                goto LABEL_272;
              case 4:
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(a1, a2, v51);
                v135 = 4;
                goto LABEL_277;
              case 5:
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(a1, a2, v51);
                v135 = 5;
                goto LABEL_277;
              case 6:
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(a1, a2, v51);
                v136 = (void *)((v409 + a1) & v418);
                v137 = (const void *)((v409 + a2) & v418);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v137, 1, v475))
                {
                  memcpy(v136, v137, v404);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v136, v137, v475);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v136, 0, 1, v475);
                }
                v135 = 6;
                goto LABEL_277;
              case 7:
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(a1, a2, v51);
                v135 = 7;
                goto LABEL_277;
              default:
                if (v49 <= 3)
                  v118 = v49;
                else
                  v118 = 4;
                __asm { BR              X12 }
                return result;
            }
          }
          v60 = *(uint64_t (**)(unint64_t))(v448 + 48);
        }
LABEL_49:
        v62 = v60(v61);
        v59 = (v452 + a1) & v463;
        if (v62)
          goto LABEL_62;
        goto LABEL_50;
      case 1:
        v402 = ~v34;
        v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 8);
        v73(a1, AssociatedTypeWitness, v54, v55);
        v74 = (v452 + a1) & v463;
        if (v454 == v453)
        {
          v75 = *(uint64_t (**)(unint64_t))(v471 + 48);
          v76 = (v452 + a1) & v463;
          goto LABEL_65;
        }
        v78 = (v455 + v74) & v465;
        v79 = (v456 + v78) & v466;
        if (v437 == v453)
        {
          if (v413 == v437)
          {
            v75 = *(uint64_t (**)(unint64_t))(v441 + 48);
            v76 = (v456 + v78) & v466;
            goto LABEL_65;
          }
          v166 = (unint64_t *)((v440 + v79) & 0xFFFFFFFFFFFFFFF8);
          if (v405 <= 0x7FFFFFFE)
          {
            v167 = *v166;
            goto LABEL_305;
          }
          v76 = ((unint64_t)v166 + v429) & v428;
          v75 = *(uint64_t (**)(unint64_t))(v430 + 48);
        }
        else
        {
          v116 = v445 + v79;
          if ((v412 & 0x80000000) == 0)
          {
            v117 = *(_QWORD *)(v116 + 8);
            if (v117 >= 0xFFFFFFFF)
              LODWORD(v117) = -1;
            if ((_DWORD)v117 == -1)
            {
LABEL_66:
              v78 = (v455 + v74) & v465;
              v79 = (v456 + v78) & v466;
LABEL_67:
              v399 = v74;
              ((void (*)(uint64_t, uint64_t))v73)(v74, AssociatedTypeWitness);
              ((void (*)(uint64_t, uint64_t))v73)(v78, AssociatedTypeWitness);
              (*(void (**)(uint64_t, uint64_t))(v441 + 8))(v79, v442);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v430 + 8))((v429 + ((v440 + v79) & 0xFFFFFFFFFFFFFFF8)) & v428, v431);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v80 = (v433 + v445 + v79) & v432;
              v81 = *(void (**)(unint64_t, uint64_t))(v448 + 8);
              v81((v434 + v80) & v458, v439);
              v82 = (v427 + ((v434 + v80) & v458)) & v458;
              v81(v82, v439);
              swift_bridgeObjectRelease();
              v83 = (v421
                   + ((((((v411 + v82) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v458;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v448 + 48))(v83, 1, v439))
                v81(v83, v439);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v84 = *(_QWORD *)(((((((v422 + v83) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 8);
              if ((v84 & 0x3000000000000000) == 0)
                sub_23AAAE53C(*(_QWORD *)((((((v422 + v83) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v84);
              swift_bridgeObjectRelease();
              v85 = v423 + v80;
              v86 = *(void **)(v85 + 16);
              LODWORD(v87) = -1;
              if ((unint64_t)v86 < 0xFFFFFFFF)
                v87 = *(_QWORD *)(v85 + 16);
              v51 = AssociatedTypeWitness;
              v52 = v471;
              if ((int)v87 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v85 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_23AAA12F0(*(_QWORD *)((((v85 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v85 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              v74 = v399;
            }
LABEL_78:
            v88 = (v74 + v470 + v451) & ~v470;
            if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v449 + 48))(v88, 1, v450))
              (*(void (**)(size_t, uint64_t))(v449 + 8))(v88, v450);
            v89 = (v40 + v88) & v459;
            v57 = v402;
            if (v461 == v447)
            {
              if (!(*(unsigned int (**)(size_t))(v443 + 48))(v89))
                goto LABEL_137;
            }
            else
            {
              v110 = (uint64_t *)((v446 + v89) & 0xFFFFFFFFFFFFFFF8);
              if (v417 <= 0x7FFFFFFE)
              {
                v111 = *v110;
                if ((unint64_t)*v110 >= 0xFFFFFFFF)
                  LODWORD(v111) = -1;
                if ((v111 + 1) >= 2)
                  goto LABEL_139;
                goto LABEL_138;
              }
              if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v425 + 48))(((unint64_t)v110 + v424) & v402, v408, v426))
              {
LABEL_137:
                v110 = (uint64_t *)((v446 + v89) & 0xFFFFFFFFFFFFFFF8);
LABEL_138:
                (*(void (**)(size_t, uint64_t))(v443 + 8))(v89, v444);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v425 + 8))(((unint64_t)v110 + v424) & v402, v426);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
LABEL_139:

            v56 = ~v470;
            goto LABEL_149;
          }
          v76 = (v434 + ((v433 + v116) & v432)) & v458;
          if (v415 <= 0x7FFFFFFD)
          {
            v167 = *(_QWORD *)(((v411 + ((v427 + v76) & v458)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_305:
            if (v167 >= 0xFFFFFFFF)
              LODWORD(v167) = -1;
            if ((v167 + 1) < 2)
              goto LABEL_67;
            goto LABEL_78;
          }
          v75 = *(uint64_t (**)(unint64_t))(v448 + 48);
        }
LABEL_65:
        v77 = v75(v76);
        v74 = (v452 + a1) & v463;
        if (v77)
          goto LABEL_78;
        goto LABEL_66;
      case 2:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 8))(a1, AssociatedTypeWitness, v54, v55);
        v90 = (v419 + a1) & v56;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v449 + 48))(v90, 1, v450))
          (*(void (**)(uint64_t, uint64_t))(v449 + 8))(v90, v450);
        v91 = (v40 + v90) & v459;
        if (v461 == v447)
        {
          if ((*(unsigned int (**)(size_t))(v443 + 48))(v91))
            goto LABEL_143;
        }
        else
        {
          v112 = (uint64_t *)((v446 + v91) & 0xFFFFFFFFFFFFFFF8);
          if (v417 <= 0x7FFFFFFE)
          {
            v113 = *v112;
            if ((unint64_t)*v112 >= 0xFFFFFFFF)
              LODWORD(v113) = -1;
            if ((v113 + 1) >= 2)
            {
LABEL_143:

              v56 = ~v470;
              v52 = v471;
              goto LABEL_149;
            }
LABEL_142:
            (*(void (**)(size_t, uint64_t))(v443 + 8))(v91, v444);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v425 + 8))(((unint64_t)v112 + v424) & v57, v426);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_143;
          }
          if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v425 + 48))(((unint64_t)v112 + v424) & v57, v408, v426))
          {
            goto LABEL_143;
          }
        }
        v112 = (uint64_t *)((v446 + v91) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_142;
      case 3:
        v406 = ~v470;
        v401 = ~v34;
        v92 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 8);
        v92(a1, AssociatedTypeWitness, v54, v55);
        v93 = (v452 + a1) & v463;
        if (v454 == v453)
        {
          v94 = *(uint64_t (**)(unint64_t))(v471 + 48);
          v95 = (v452 + a1) & v463;
          goto LABEL_90;
        }
        v97 = (v455 + v93) & v465;
        v98 = (v456 + v97) & v466;
        if (v437 == v453)
        {
          if (v413 == v437)
          {
            v94 = *(uint64_t (**)(unint64_t))(v441 + 48);
            v95 = (v456 + v97) & v466;
            goto LABEL_90;
          }
          v168 = (unint64_t *)((v440 + v98) & 0xFFFFFFFFFFFFFFF8);
          if (v405 <= 0x7FFFFFFE)
          {
            v169 = *v168;
            goto LABEL_280;
          }
          v95 = ((unint64_t)v168 + v429) & v428;
          v94 = *(uint64_t (**)(unint64_t))(v430 + 48);
        }
        else
        {
          v148 = v445 + v98;
          if ((v412 & 0x80000000) == 0)
          {
            v149 = *(_QWORD *)(v148 + 8);
            if (v149 >= 0xFFFFFFFF)
              LODWORD(v149) = -1;
            if ((_DWORD)v149 == -1)
            {
LABEL_91:
              v97 = (v455 + v93) & v465;
              v98 = (v456 + v97) & v466;
LABEL_92:
              ((void (*)(uint64_t, uint64_t))v92)(v93, AssociatedTypeWitness);
              ((void (*)(uint64_t, uint64_t))v92)(v97, AssociatedTypeWitness);
              (*(void (**)(uint64_t, uint64_t))(v441 + 8))(v98, v442);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v430 + 8))((v429 + ((v440 + v98) & 0xFFFFFFFFFFFFFFF8)) & v428, v431);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v99 = (v433 + v445 + v98) & v432;
              v100 = *(void (**)(unint64_t, uint64_t))(v448 + 8);
              v100((v434 + v99) & v458, v439);
              v101 = (v427 + ((v434 + v99) & v458)) & v458;
              v100(v101, v439);
              swift_bridgeObjectRelease();
              v102 = (v421
                    + ((((((v411 + v101) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v458;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v448 + 48))(v102, 1, v439))
                v100(v102, v439);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v103 = *(_QWORD *)(((((((v422 + v102) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                               + 8);
              if ((v103 & 0x3000000000000000) == 0)
                sub_23AAAE53C(*(_QWORD *)((((((v422 + v102) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v103);
              swift_bridgeObjectRelease();
              v104 = v423 + v99;
              v105 = *(void **)(v104 + 16);
              LODWORD(v106) = -1;
              if ((unint64_t)v105 < 0xFFFFFFFF)
                v106 = *(_QWORD *)(v104 + 16);
              v51 = AssociatedTypeWitness;
              v52 = v471;
              if ((int)v106 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v104 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_23AAA12F0(*(_QWORD *)((((v104 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v104 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_103:
            swift_bridgeObjectRelease();
            goto LABEL_104;
          }
          v95 = (v434 + ((v433 + v148) & v432)) & v458;
          if (v415 <= 0x7FFFFFFD)
          {
            v169 = *(_QWORD *)(((v411 + ((v427 + v95) & v458)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_280:
            if (v169 >= 0xFFFFFFFF)
              LODWORD(v169) = -1;
            if ((v169 + 1) < 2)
              goto LABEL_92;
            goto LABEL_103;
          }
          v94 = *(uint64_t (**)(unint64_t))(v448 + 48);
        }
LABEL_90:
        v96 = v94(v95);
        v93 = (v452 + a1) & v463;
        if (v96)
          goto LABEL_103;
        goto LABEL_91;
      case 4:
      case 5:
      case 7:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 8))(a1, AssociatedTypeWitness, v54, v55);
        goto LABEL_149;
      case 6:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v471 + 8))(a1, AssociatedTypeWitness, v54, v55);
        v107 = (v45 + a1) & v418;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v107, 1, v475))
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8))(v107, v475, v108, v109);
        goto LABEL_149;
      default:
        if (v49 <= 3)
          v50 = v49;
        else
          v50 = 4;
        __asm { BR              X15 }
        return result;
    }
  }
  return v3;
}

uint64_t sub_23AF87EEC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  int v44;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 | v10 | 7;
  v12 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v51 = *(_DWORD *)(v12 + 84);
  v54 = ((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13);
  v53 = (((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
       + v13
       + ((((*(_QWORD *)(v9 + 64) + ((v10 + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  v14 = *(_QWORD *)(v12 + 64);
  v50 = (v13
       + ((((((v14
             + ((v14 + v13 + ((v13 + 12) & ~(unint64_t)v13)) & ~(unint64_t)v13)
             + 12) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~(unint64_t)v13;
  v15 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = *(_DWORD *)(v15 + 84);
  v52 = *(_QWORD *)(v15 + 64);
  v18 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v19 = *(_DWORD *)(v18 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v51)
    v21 = 7;
  else
    v21 = 8;
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v19 & 0xF8 | v23 | 7;
  v25 = ((((*(_QWORD *)(v22 + 64) + ((v23 + ((*(_QWORD *)(v18 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v26 = *(_QWORD *)(v3 - 8);
  v27 = (v5 + *(unsigned __int8 *)(v26 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v28 = *(_DWORD *)(v26 + 84);
  v29 = *(_QWORD *)(v26 + 64);
  v30 = v52;
  v31 = v54
      + ((((v53
          + ((((((((((v21 + v14 + v50) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  v32 = v31 + v16;
  v33 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v32 + 16) & ~v16;
  if (!v17)
    v30 = v52 + 1;
  v35 = v30 + v24;
  v36 = ((((((v35 + v34) & ~v24) + v25 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= ((v33 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v36 = ((v33 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v37 = v25 + ((v35 + ((v5 + v16) & ~v16)) & ~v24) + 16;
  if (v37 <= v36)
    v37 = v36;
  v38 = ((v33 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 > v37)
    v37 = v38;
  if (v5 > v37)
    v37 = v5;
  if (v28)
    v39 = v29;
  else
    v39 = v29 + 1;
  v40 = v39 + v27;
  if (v40 > v37)
    v37 = v40;
  if (v5 <= v37)
    v41 = v37;
  else
    v41 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_40;
  v42 = v41 + 1;
  v43 = 8 * (v41 + 1);
  if ((v41 + 1) <= 3)
  {
    v46 = ((a2 + ~(-1 << v43) - 248) >> v43) + 1;
    if (HIWORD(v46))
    {
      v44 = *(_DWORD *)(a1 + v42);
      if (!v44)
        goto LABEL_40;
      goto LABEL_33;
    }
    if (v46 > 0xFF)
    {
      v44 = *(unsigned __int16 *)(a1 + v42);
      if (!*(_WORD *)(a1 + v42))
        goto LABEL_40;
      goto LABEL_33;
    }
    if (v46 < 2)
    {
LABEL_40:
      v48 = *(unsigned __int8 *)(a1 + v41);
      if (v48 >= 8)
        return (v48 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v44 = *(unsigned __int8 *)(a1 + v42);
  if (!*(_BYTE *)(a1 + v42))
    goto LABEL_40;
LABEL_33:
  v47 = (v44 - 1) << v43;
  if (v42 > 3)
    v47 = 0;
  if ((_DWORD)v42)
  {
    if (v42 > 3)
      LODWORD(v42) = 4;
    __asm { BR              X11 }
  }
  return (v47 + 249);
}

void sub_23AF88374(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  size_t v42;
  _BYTE *v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;

  v4 = *(_QWORD *)(a4 + 16);
  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 | v11 | 7;
  v13 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v50 = *(_DWORD *)(v13 + 84);
  v53 = ((v12 | v7 | v14) + v6) & ~(v12 | v7 | v14);
  v52 = (((((v6 + v7) & ~v7) + v6 + v12) & ~v12)
       + v14
       + ((((*(_QWORD *)(v10 + 64) + ((v11 + ((*(_QWORD *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (v14 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  v15 = *(_QWORD *)(v13 + 64);
  v49 = (v14
       + ((((((v15
             + ((v15 + v14 + ((v14 + 12) & ~(unint64_t)v14)) & ~(unint64_t)v14)
             + 12) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~(unint64_t)v14;
  v16 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = *(_DWORD *)(v16 + 84);
  v51 = *(_QWORD *)(v16 + 64);
  v19 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v20 = *(_DWORD *)(v19 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v50)
    v22 = 7;
  else
    v22 = 8;
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = v20 & 0xF8 | v24 | 7;
  v26 = ((((*(_QWORD *)(v23 + 64) + ((v24 + ((*(_QWORD *)(v19 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v27 = *(_QWORD *)(v4 - 8);
  v28 = (v6 + *(unsigned __int8 *)(v27 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v29 = *(_DWORD *)(v27 + 84);
  v30 = *(_QWORD *)(v27 + 64);
  v31 = v51;
  v32 = v53
      + ((((v52
          + ((((((((((v22 + v15 + v49) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32 + v17;
  v34 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v33 + 16) & ~v17;
  if (!v18)
    v31 = v51 + 1;
  v36 = v31 + v25;
  v37 = ((((((v36 + v35) & ~v25) + v26 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v37 <= ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v37 = ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v38 = v26 + ((v36 + ((v6 + v17) & ~v17)) & ~v25) + 16;
  if (v38 <= v37)
    v38 = v37;
  v39 = ((v34 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v39 > v38)
    v38 = v39;
  if (v6 > v38)
    v38 = v6;
  if (v29)
    v40 = v30;
  else
    v40 = v30 + 1;
  v41 = v40 + v28;
  if (v41 > v38)
    v38 = v41;
  if (v6 > v38)
    v38 = v6;
  v42 = v38 + 1;
  if (a3 < 0xF9)
  {
    v45 = 0;
    v43 = a1;
    v44 = a2;
  }
  else
  {
    v43 = a1;
    v44 = a2;
    if (v42 <= 3)
    {
      v47 = ((a3 + ~(-1 << (8 * v42)) - 248) >> (8 * v42)) + 1;
      if (HIWORD(v47))
      {
        v45 = 4u;
      }
      else if (v47 >= 0x100)
      {
        v45 = 2;
      }
      else
      {
        v45 = v47 > 1;
      }
    }
    else
    {
      v45 = 1u;
    }
  }
  if (v44 <= 0xF8)
    __asm { BR              X11 }
  v46 = v44 - 249;
  if (v42 < 4)
  {
    if ((_DWORD)v38 != -1)
    {
      v48 = v46 & ~(-1 << (8 * v42));
      bzero(v43, v42);
      if ((_DWORD)v42 == 3)
      {
        *(_WORD *)v43 = v48;
        v43[2] = BYTE2(v48);
      }
      else if ((_DWORD)v42 == 2)
      {
        *(_WORD *)v43 = v48;
      }
      else
      {
        *v43 = v48;
      }
    }
  }
  else
  {
    bzero(v43, v38 + 1);
    *(_DWORD *)v43 = v46;
  }
  __asm { BR              X10 }
}

uint64_t sub_23AF88878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v45;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v45 = v2;
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v11 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = *(_DWORD *)(v11 + 80);
  v14 = ((v10 | v5 | v13) + v4) & ~(v10 | v5 | v13);
  v15 = (((((v4 + v5) & ~v5) + v4 + v10) & ~v10)
       + v13
       + ((((*(_QWORD *)(v8 + 64) + ((v9 + ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (*(_DWORD *)(v11 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  v16 = *(_QWORD *)(v11 + 64);
  v17 = (v13
       + ((((((v16 + ((v16 + v13 + ((v13 + 12) & ~v13)) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v13;
  v18 = v12 == 0;
  v19 = 7;
  if (v18)
    v19 = 8;
  v20 = v14
      + ((((v15
          + ((((((((((v19 + v16 + v17) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_DWORD *)(v21 + 84);
  v25 = *(_QWORD *)(v21 + 64);
  if (v24)
    v26 = v25;
  else
    v26 = v25 + 1;
  v27 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  v29 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = v28 | v30 | 7;
  v32 = ((((*(_QWORD *)(v29 + 64) + ((v30 + ((*(_QWORD *)(v27 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v30) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v33 = ((((((v26 + v31 + ((v20 + v22 + 16) & ~v22)) & ~v31) + v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v34 = v32 + ((v26 + v31 + ((v4 + v22) & ~v22)) & ~v31) + 16;
  v35 = ((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v36 = *(_QWORD *)(v45 - 8);
  v37 = (v4 + *(unsigned __int8 *)(v36 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v38 = *(_DWORD *)(v36 + 84);
  v39 = *(_QWORD *)(v36 + 64);
  if (!v38)
    ++v39;
  v40 = v39 + v37;
  if (v4 <= ((v23 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v41 = ((v23 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v41 = v4;
  if (v33 > v34)
    v34 = v33;
  if (v35 <= v40)
    v35 = v40;
  if (v41 > v34)
    v34 = v41;
  if (v34 <= v35)
    v34 = v35;
  result = *(unsigned __int8 *)(a1 + v34);
  if (result >= 8)
  {
    if (v34 <= 3)
      v43 = v34;
    else
      v43 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23AF88C70(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  size_t v42;
  char v43;
  int v44;
  uint64_t v45;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v45 = v3;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 | v10 | 7;
  v12 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80);
  v15 = ((v11 | v6 | v14) + v5) & ~(v11 | v6 | v14);
  v16 = (((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
       + v14
       + ((((*(_QWORD *)(v9 + 64) + ((v10 + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (*(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  v17 = *(_QWORD *)(v12 + 64);
  v18 = (v14
       + ((((((v17 + ((v17 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v14;
  v19 = v13 == 0;
  v20 = 7;
  if (v19)
    v20 = 8;
  v21 = v15
      + ((((v16
          + ((((((((((v20 + v17 + v18) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_DWORD *)(v22 + 84);
  v26 = *(_QWORD *)(v22 + 64);
  if (v25)
    v27 = v26;
  else
    v27 = v26 + 1;
  v28 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v29 = *(_DWORD *)(v28 + 80) & 0xF8;
  result = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(result - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v29 | v32 | 7;
  v34 = ((((*(_QWORD *)(v31 + 64) + ((v32 + ((*(_QWORD *)(v28 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v32) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v35 = ((((((v27 + v33 + ((v21 + v23 + 16) & ~v23)) & ~v33) + v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v35 <= ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 8)
    v35 = ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v36 = v34 + ((v27 + v33 + ((v5 + v23) & ~v23)) & ~v33) + 16;
  if (v36 <= v35)
    v36 = v35;
  if (((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v36)
    v36 = ((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v5 > v36)
    v36 = v5;
  v37 = *(_QWORD *)(v45 - 8);
  v38 = (v5 + *(unsigned __int8 *)(v37 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v39 = *(_DWORD *)(v37 + 84);
  v40 = *(_QWORD *)(v37 + 64);
  if (!v39)
    ++v40;
  v41 = v40 + v38;
  if (v41 > v36)
    v36 = v41;
  if (v5 <= v36)
    v42 = v36;
  else
    v42 = v5;
  if (a2 > 7)
  {
    if (v42 <= 3)
      v43 = ((a2 - 8) >> (8 * v42)) + 8;
    else
      v43 = 8;
    a1[v42] = v43;
    if (v42 >= 4)
      v44 = 4;
    else
      v44 = v42;
    bzero(a1, v42);
    __asm { BR              X10 }
  }
  a1[v42] = a2;
  return result;
}

void sub_23AF89084()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AF89094(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v3 + 16))((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = a1[2];
    v4 = a1[3];
    v8 = a1 + 4;
    v6 = a1[4];
    v7 = v8[1];
    v13 = v4;
    v14 = v5;
    v15 = v7;
    v16 = v6;
    type metadata accessor for DirectionalTestingOperation();
  }
  v9 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  v11 = a1[5];
  v13 = v9;
  v14 = v10;
  v15 = v12;
  v16 = v11;
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AF89178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
  *(_QWORD *)(v7 - 80) = v5;
  *(_QWORD *)(v7 - 72) = v4;
  *(_QWORD *)(v7 - 64) = v3;
  *(_QWORD *)(v7 - 56) = v6;
  type metadata accessor for TestingOperation();
}

void sub_23AF891A4()
{
  JUMPOUT(0x23AF891ACLL);
}

uint64_t sub_23AF891CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  uint64_t v5;
  void *v6;
  unsigned __int8 v7;
  int v8;
  void *v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  int v18;
  void *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 v33;
  int v34;
  int *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  unsigned __int8 v47;
  int v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  void *v66;
  unsigned __int8 v67;
  int v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  void *v84;
  unsigned __int8 v85;
  int v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;

  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = sub_23AAB7B40(objc_msgSend(v4, sel_itemIdentifier));

    swift_beginAccess();
    v6 = *(void **)(v5 + 32);
    v7 = *(_BYTE *)(v5 + 40);
    v8 = *(unsigned __int8 *)(v5 + 41);
    sub_23AA88218(v6, v7, *(_BYTE *)(v5 + 41));
    swift_release();
    if (v8 == 1)
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 8) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
    }
    else
    {
      v14 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6420) + 48);
      *(_QWORD *)a2 = v6;
      *(_BYTE *)(a2 + 8) = v7;
      v15 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
    }
    goto LABEL_33;
  }
  objc_opt_self();
  v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = sub_23AAB7B40(objc_msgSend(v9, sel_itemIdentifier));

    swift_beginAccess();
    v11 = *(void **)(v10 + 32);
    v12 = *(_BYTE *)(v10 + 40);
    v13 = *(unsigned __int8 *)(v10 + 41);
    sub_23AA88218(v11, v12, *(_BYTE *)(v10 + 41));
    swift_release();
    if (v13 == 1)
      goto LABEL_14;
    goto LABEL_19;
  }
  objc_opt_self();
  v16 = (void *)swift_dynamicCastObjCClass();
  if (v16)
  {
    v17 = sub_23AAB7B40(objc_msgSend(v16, sel_itemIdentifier));

    swift_beginAccess();
    v11 = *(void **)(v17 + 32);
    v12 = *(_BYTE *)(v17 + 40);
    v18 = *(unsigned __int8 *)(v17 + 41);
    sub_23AA88218(v11, v12, *(_BYTE *)(v17 + 41));
    swift_release();
    if (v18 == 1)
      goto LABEL_14;
    goto LABEL_19;
  }
  objc_opt_self();
  v19 = (void *)swift_dynamicCastObjCClass();
  if (v19)
  {
    v20 = sub_23AAB7B40(objc_msgSend(v19, sel_itemIdentifier));

    swift_beginAccess();
    v11 = *(void **)(v20 + 32);
    v12 = *(_BYTE *)(v20 + 40);
    v21 = *(unsigned __int8 *)(v20 + 41);
    sub_23AA88218(v11, v12, *(_BYTE *)(v20 + 41));
    swift_release();
    if (v21 == 1)
    {
LABEL_14:
      *(_QWORD *)a2 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
      goto LABEL_33;
    }
LABEL_19:
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
    goto LABEL_33;
  }
  objc_opt_self();
  v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    v23 = (void *)v22;
    v24 = a1;
    v25 = objc_msgSend(objc_msgSend(v23, sel_renamedItem), sel_filename);
    swift_unknownObjectRelease();
    sub_23B1C63E0();

    v96 = sub_23AAA420C();
    v95 = MEMORY[0x24BEE0D00];
    v26 = sub_23B1C6CF8();
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v23, sel_snapshotVersion, v95, v96, v96, v96);
    v30 = objc_msgSend(objc_msgSend(v23, sel_renamedItem), sel_itemIdentifier);
    swift_unknownObjectRelease();
    v31 = sub_23AAB7B40(v30);

    swift_beginAccess();
    v32 = *(void **)(v31 + 32);
    v33 = *(_BYTE *)(v31 + 40);
    v34 = *(unsigned __int8 *)(v31 + 41);
    sub_23AA88218(v32, v33, *(_BYTE *)(v31 + 41));
    swift_release();
    if (v34 == 1)
    {
      v35 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31C0);
      v36 = a2 + v35[12];
      v37 = (uint64_t *)(a2 + v35[16]);
      v38 = v35[20];
      *(_QWORD *)a2 = v32;
      v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 1, 1, v39);
      *v37 = v26;
      v37[1] = v28;
      *(_QWORD *)(a2 + v38) = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
    }
    else
    {
      v54 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31A0);
      v55 = a2 + v54[12];
      v56 = (uint64_t *)(a2 + v54[16]);
      v57 = v54[20];
      *(_QWORD *)a2 = v32;
      *(_BYTE *)(a2 + 8) = v33;
      v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v55, 1, 1, v58);
      *v56 = v26;
      v56[1] = v28;
      *(_QWORD *)(a2 + v57) = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
    }
  }
  else
  {
    objc_opt_self();
    v40 = swift_dynamicCastObjCClass();
    if (v40)
    {
      v41 = (void *)v40;
      v42 = a1;
      v43 = objc_msgSend(v41, sel_snapshotVersion);
      v44 = objc_msgSend(objc_msgSend(v41, sel_sourceItem), sel_itemIdentifier);
      swift_unknownObjectRelease();
      v45 = sub_23AAB7B40(v44);

      swift_beginAccess();
      v46 = *(void **)(v45 + 32);
      v47 = *(_BYTE *)(v45 + 40);
      v48 = *(unsigned __int8 *)(v45 + 41);
      sub_23AA88218(v46, v47, *(_BYTE *)(v45 + 41));
      swift_release();
      if (v48 == 1)
      {
        v49 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31B0);
        v50 = a2 + v49[12];
        v51 = v49[16];
        v52 = v49[20];
        *(_QWORD *)a2 = v46;
        v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v50, 1, 1, v53);
        *(_QWORD *)(a2 + v51) = v43;
        *(_QWORD *)(a2 + v52) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
      }
      else
      {
        v77 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3190);
        v78 = a2 + v77[12];
        v79 = v77[16];
        v80 = v77[20];
        *(_QWORD *)a2 = v46;
        *(_BYTE *)(a2 + 8) = v47;
        v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v78, 1, 1, v81);
        *(_QWORD *)(a2 + v79) = v43;
        *(_QWORD *)(a2 + v80) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
      }
    }
    else
    {
      objc_opt_self();
      v59 = swift_dynamicCastObjCClass();
      if (v59)
      {
        v60 = (void *)v59;
        v61 = a1;
        v62 = objc_msgSend(v60, sel_snapshotVersion);
        v63 = objc_msgSend(v60, sel_rawFields);
        v64 = objc_msgSend(objc_msgSend(v60, sel_sourceItem), sel_itemIdentifier);
        swift_unknownObjectRelease();
        v65 = sub_23AAB7B40(v64);

        swift_beginAccess();
        v66 = *(void **)(v65 + 32);
        v67 = *(_BYTE *)(v65 + 40);
        v68 = *(unsigned __int8 *)(v65 + 41);
        sub_23AA88218(v66, v67, *(_BYTE *)(v65 + 41));
        swift_release();
        if (v68 == 1)
        {
          v69 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5EE0);
          v70 = a2 + v69[12];
          v71 = a2 + v69[16];
          v72 = (_OWORD *)(a2 + v69[20]);
          v73 = v69[24];
          v74 = v69[28];
          v75 = v69[32];
          *(_QWORD *)a2 = v66;
          v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v70, 1, 1, v76);
          *(_QWORD *)v71 = 0;
          *(_BYTE *)(v71 + 8) = -1;
          v72[4] = 0u;
          v72[5] = 0u;
          v72[2] = 0u;
          v72[3] = 0u;
          *v72 = 0u;
          v72[1] = 0u;
          *(_QWORD *)(a2 + v73) = v63;
          *(_QWORD *)(a2 + v74) = v62;
          *(_QWORD *)(a2 + v75) = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
        }
        else
        {
          v87 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3198);
          v88 = a2 + v87[12];
          v89 = v87[16];
          v90 = a2 + v87[20];
          v91 = v87[24];
          v92 = v87[28];
          v97 = v87[32];
          *(_QWORD *)a2 = v66;
          *(_BYTE *)(a2 + 8) = v67;
          v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v88, 1, 1, v93);
          *(_QWORD *)(a2 + v89) = 0;
          *(_QWORD *)v90 = 0;
          *(_QWORD *)(v90 + 8) = 0;
          *(_QWORD *)(v90 + 16) = 1;
          *(_OWORD *)(v90 + 24) = 0u;
          *(_OWORD *)(v90 + 40) = 0u;
          *(_QWORD *)(v90 + 56) = 0;
          *(_QWORD *)(a2 + v91) = v63;
          *(_QWORD *)(a2 + v92) = v62;
          *(_QWORD *)(a2 + v97) = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
        }
      }
      else
      {
        objc_opt_self();
        v82 = (void *)swift_dynamicCastObjCClass();
        if (!v82)
          sub_23AFF2858((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/TestingOperation.swift", 110, 2, 295, a1);
        v83 = sub_23AAB7B40(objc_msgSend(v82, sel_sourceItemIdentifier));

        swift_beginAccess();
        v84 = *(void **)(v83 + 32);
        v85 = *(_BYTE *)(v83 + 40);
        v86 = *(unsigned __int8 *)(v83 + 41);
        sub_23AA88218(v84, v85, *(_BYTE *)(v83 + 41));
        swift_release();
        *(_QWORD *)a2 = v84;
        if (v86 == 1)
        {
          *(_QWORD *)(a2 + 8) = 0;
          *(_BYTE *)(a2 + 16) = -1;
          *(_OWORD *)(a2 + 24) = 0u;
          *(_OWORD *)(a2 + 40) = 0u;
          *(_OWORD *)(a2 + 56) = 0u;
          *(_OWORD *)(a2 + 72) = 0u;
          *(_OWORD *)(a2 + 88) = 0u;
          *(_OWORD *)(a2 + 104) = 0u;
          *(_BYTE *)(a2 + 120) = 2;
          *(_QWORD *)(a2 + 128) = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
        }
        else
        {
          *(_BYTE *)(a2 + 8) = v85;
          *(_QWORD *)(a2 + 16) = 0;
          *(_QWORD *)(a2 + 24) = 0;
          *(_QWORD *)(a2 + 32) = 0;
          *(_QWORD *)(a2 + 40) = 1;
          *(_OWORD *)(a2 + 48) = 0u;
          *(_OWORD *)(a2 + 64) = 0u;
          *(_QWORD *)(a2 + 80) = 0;
          *(_BYTE *)(a2 + 88) = 2;
          *(_QWORD *)(a2 + 96) = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
        }
      }
    }
  }
LABEL_33:
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  return swift_storeEnumTagMultiPayload();
}

void sub_23AF89CEC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[14];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v4 = a1[3];
  v34[9] = a1[5];
  v34[8] = v4;
  v34[13] = swift_getAssociatedTypeWitness();
  v35 = sub_23B1C6C98();
  v34[12] = *(_QWORD *)(v35 - 8);
  v5 = MEMORY[0x24BDAC7A8](v35);
  v34[2] = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v34[6] = (char *)v34 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v34[3] = (char *)v34 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v34[7] = (char *)v34 - v11;
  v12 = a1[2];
  v13 = a1[4];
  v38 = type metadata accessor for SnapshotItem(255, v12, v13, v14);
  v15 = sub_23B1C6C98();
  v36 = *(_QWORD *)(v15 - 8);
  v37 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v34[5] = (char *)v34 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v34[4] = (char *)v34 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v34[11] = (char *)v34 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v23);
  v39 = v13;
  v40 = v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v42 = AssociatedTypeWitness;
  v25 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v34[10] = (char *)v34 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  MEMORY[0x24BDAC7A8](v30);
  (*(void (**)(char *, uint64_t, _QWORD *))(v32 + 16))((char *)v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v33 = (char *)&loc_23AF8A01C + dword_23AF8B094[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AF8A02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *TupleTypeMetadata;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1);
  v6 = *(_QWORD *)(v5 - 184);
  v7 = *(_QWORD *)(v5 - 224);
  *(_QWORD *)(v5 - 176) = v6;
  *(_QWORD *)(v5 - 168) = v7;
  *(_QWORD *)(v5 - 160) = MEMORY[0x24BEE1E88];
  *(_QWORD *)(v5 - 152) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v9 = v3 + TupleTypeMetadata[12];
  v10 = *(_QWORD *)(v3 + TupleTypeMetadata[16]);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 192) + 32))(v4, v3, v6);
  v11 = *(_QWORD *)(v5 - 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v2, v9, v7);
  *(_QWORD *)(v5 - 176) = 0;
  *(_QWORD *)(v5 - 168) = 0xE000000000000000;
  sub_23B1C64F4();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  sub_23B1C64F4();
  *(_QWORD *)(v5 - 120) = v10;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v2, v7);
  v12 = *(int **)(v5 - 216);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v1, 1, v12) != 1)
    sub_23AF14E68(v12);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v7);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v5 - 176);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v7);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 192) + 8))(v4, *(_QWORD *)(v5 - 184));
  return v13;
}

void sub_23AF8B0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[22];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2);
  v8 = (char *)sub_23AF8B1A0 + 4 * word_23B1DFBAA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AF8B1A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 176) = v1;
  type metadata accessor for SnapshotItem(255, v4, v5, v7);
  v8 = sub_23B1C6C98();
  v9 = MEMORY[0x24BEE1E88];
  *(_QWORD *)(v6 - 168) = v8;
  *(_QWORD *)(v6 - 160) = v9;
  *(_QWORD *)(v6 - 152) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v11 = v2 + *(int *)(TupleTypeMetadata + 48);

  v12 = *(_QWORD *)(v6 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v3, v2, v1);
  sub_23B1C74B4();
  swift_getAssociatedConformanceWitness();
  sub_23B1C62D8();
  sub_23B1C74B4();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v1);
  v13 = sub_23B1C6C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
}

void sub_23AF8BC00()
{
  type metadata accessor for DirectionalTestingOperation();
}

uint64_t sub_23AF8BC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t TupleTypeMetadata2;
  uint64_t v27;
  char *v28;
  uint64_t AssociatedTypeWitness;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, _QWORD, uint64_t);
  int EnumCaseMultiPayload;

  v13 = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 304) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v11 - 320) = (char *)&a9 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v11 - 312) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v22 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v11 - 288) = (char *)&a9 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v11 - 296) = (char *)&a9 - v25;
  MEMORY[0x24BDAC7A8](v24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v11 - 240) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v28 = (char *)&a9 - v27;
  *(_QWORD *)(v11 - 224) = v10;
  *(_QWORD *)(v11 - 216) = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v11 - 184) = AssociatedTypeWitness;
  *(_QWORD *)(v11 - 200) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v30 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v11 - 336) = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v11 - 328) = (char *)&a9 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v11 - 352) = (char *)&a9 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v11 - 344) = (char *)&a9 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v40 = MEMORY[0x24BDAC7A8](v39);
  *(_QWORD *)(v11 - 256) = (char *)&a9 - v41;
  MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v11 - 264) = (char *)&a9 - v42;
  *(_QWORD *)(v11 - 232) = TupleTypeMetadata2;
  v43 = &v28[*(int *)(TupleTypeMetadata2 + 48)];
  *(_QWORD *)(v11 - 248) = v13;
  v44 = *(void (**)(char *, _QWORD, uint64_t))(v13 + 16);
  v44(v28, *(_QWORD *)(v11 - 192), a1);
  *(_QWORD *)(v11 - 192) = v43;
  v44(v43, *(_QWORD *)(v11 - 208), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)())((char *)sub_23AF8BF60 + 4 * word_23B1DFBBA[EnumCaseMultiPayload]))();
}

uint64_t sub_23AF8BF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *TupleTypeMetadata;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  char v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);

  v7 = v3(v0, v5, v4);
  MEMORY[0x24BDAC7A8](v7);
  v8 = *(_QWORD *)(v6 - 184);
  *(_QWORD *)(v6 - 176) = v8;
  *(_QWORD *)(v6 - 256) = type metadata accessor for SnapshotItem(255, *(_QWORD *)(v6 - 216), *(_QWORD *)(v6 - 224), v9);
  v10 = sub_23B1C6C98();
  v11 = MEMORY[0x24BEE1E88];
  *(_QWORD *)(v6 - 168) = v10;
  *(_QWORD *)(v6 - 160) = v11;
  *(_QWORD *)(v6 - 152) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v13 = v0 + TupleTypeMetadata[12];
  *(_QWORD *)(v6 - 264) = *(_QWORD *)(v0 + TupleTypeMetadata[16]);

  v14 = *(_QWORD *)(v6 - 192);
  if (swift_getEnumCaseMultiPayload())
  {
    v15 = sub_23B1C6C98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    v17 = *(_QWORD *)(v6 - 240);
    v16 = *(_QWORD *)(v6 - 232);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 200) + 8))(v0, v8);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v16);
    v18 = 0;
  }
  else
  {
    *(_QWORD *)(v6 - 240) = *(_QWORD *)(v14 + TupleTypeMetadata[16]);

    *(_QWORD *)(v6 - 208) = v4;
    *(_QWORD *)(v6 - 232) = v13;
    v20 = *(_QWORD *)(v6 - 200);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
    v21(v2, v0, v8);
    v21(v1, v14, v8);
    swift_getAssociatedConformanceWitness();
    v22 = sub_23B1C63A4();
    v23 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v23(v1, v8);
    v23(v2, v8);
    v18 = v22 & (*(_QWORD *)(v6 - 264) == *(_QWORD *)(v6 - 240));
    v24 = v14 + TupleTypeMetadata[12];
    v25 = sub_23B1C6C98();
    v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
    v26(v24, v25);
    v26(*(_QWORD *)(v6 - 232), v25);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 248) + 8))(v5, *(_QWORD *)(v6 - 208));
  }
  return v18 & 1;
}

void sub_23AF8D324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2);
  v6 = (char *)sub_23AF8D3BC + 4 * word_23B1DFBCA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AF8D3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v0);
  return v5(v1, v3, v0);
}

uint64_t sub_23AF8DF5C(uint64_t a1)
{
  return sub_23AF8E820(a1, (void (*)(_BYTE *, uint64_t))sub_23AF8B0B4);
}

void sub_23AF8DF6C()
{
  sub_23AF8BC00();
}

uint64_t sub_23AF8DF7C(uint64_t a1)
{
  return sub_23AF8E820(a1, (void (*)(_BYTE *, uint64_t))sub_23AF8B0B4);
}

uint64_t sub_23AF8DF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AF8E8B0(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_23AF8B0B4);
}

void sub_23AF8DFA8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AF8DFB8()
{
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AF8DFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v3;
  type metadata accessor for DirectionalTestingOperation();
}

uint64_t sub_23AF8E03C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = &v17[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v13, v4, v2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(v3, v13, v1);
    *(_QWORD *)(v6 - 112) = 0;
    *(_QWORD *)(v6 - 104) = 0xE000000000000000;
    sub_23B1C64F4();
    MEMORY[0x23B8613CC](&unk_23B1DFD00, v1);
    sub_23B1C7340();
    v15 = *(_QWORD *)(v6 - 112);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v13, a1);
    *(_QWORD *)(v6 - 112) = 0;
    *(_QWORD *)(v6 - 104) = 0xE000000000000000;
    sub_23B1C64F4();
    MEMORY[0x23B8613CC](&unk_23B1DFD00, a1);
    sub_23B1C7340();
    v15 = *(_QWORD *)(v6 - 112);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, a1);
  }
  return v15;
}

void sub_23AF8E1BC()
{
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AF8E208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v3;
  type metadata accessor for DirectionalTestingOperation();
}

uint64_t sub_23AF8E248(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE v16[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = &v16[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v13, v5, v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v4, v13, v3);
    sub_23AF8D324(v2 & 1, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v3);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v13, a1);
    sub_23AF8D324(v2 & 1, a1);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, a1);
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_23AF8E378()
{
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AF8E3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 168) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 160) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 192) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v10;
  *(_QWORD *)(v13 - 88) = v9;
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AF8E404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 184) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 176) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 200) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 144) = v10;
  *(_QWORD *)(v13 - 96) = v10;
  *(_QWORD *)(v13 - 88) = v9;
  *(_QWORD *)(v13 - 136) = v9;
  type metadata accessor for TestingOperation();
}

uint64_t sub_23AF8E450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  _BYTE v17[96];

  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v17[-v7];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v13 = &v17[-v12];
  v14 = &v17[*(int *)(v11 + 48) - v12];
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16);
  v15(&v17[-v12], *(_BYTE **)(v1 - 128), a1);
  v15(v14, *(_BYTE **)(v1 - 120), a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15(v6, v13, a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(_QWORD, _BYTE *, _QWORD))(*(_QWORD *)(v1 - 168) + 32))(*(_QWORD *)(v1 - 192), v14, *(_QWORD *)(v1 - 160));
      sub_23AF8BC00();
    }
    (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v1 - 168) + 8))(v6, *(_QWORD *)(v1 - 160));
  }
  else
  {
    v15(v8, v13, a1);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      (*(void (**)(_QWORD, _BYTE *, _QWORD))(*(_QWORD *)(v1 - 184) + 32))(*(_QWORD *)(v1 - 200), v14, *(_QWORD *)(v1 - 176));
      sub_23AF8BC00();
    }
    (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(v8, *(_QWORD *)(v1 - 176));
  }
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, TupleTypeMetadata2);
  return 0;
}

void sub_23AF8E674()
{
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AF8E6BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v3;
  type metadata accessor for DirectionalTestingOperation();
}

uint64_t sub_23AF8E6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE v16[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = &v16[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v13, v5, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v3, v13, v1);
    sub_23B1C74B4();
    sub_23AF8B0B4(v2, v1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v3, v1);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v13, a1);
    sub_23B1C74B4();
    sub_23AF8B0B4(v2, a1);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, a1);
  }
}

uint64_t sub_23AF8E814(uint64_t a1)
{
  return sub_23AF8E820(a1, (void (*)(_BYTE *, uint64_t))sub_23AF8E674);
}

uint64_t sub_23AF8E820(uint64_t a1, void (*a2)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  sub_23B1C74A8();
  a2(v5, a1);
  return sub_23B1C74E4();
}

void sub_23AF8E874()
{
  sub_23AF8E378();
}

uint64_t sub_23AF8E884(uint64_t a1)
{
  return sub_23AF8E820(a1, (void (*)(_BYTE *, uint64_t))sub_23AF8E674);
}

uint64_t sub_23AF8E8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AF8E8B0(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_23AF8E674);
}

uint64_t sub_23AF8E8B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  _BYTE v7[72];

  sub_23B1C74A8();
  a4(v7, a2);
  return sub_23B1C74E4();
}

uint64_t sub_23AF8E908(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  v7 = v6;
  sub_23AD4332C(a2, (uint64_t)v16);
  v8 = v17;
  if (v17)
  {
    v9 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    v12 = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if (v5 == v10 && v7 == v12)
    {
      swift_bridgeObjectRelease_n();
      v14 = 1;
    }
    else
    {
      v14 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_23AD43374((uint64_t)v16);
    swift_bridgeObjectRelease();
    v14 = 0;
  }
  return v14 & 1;
}

void sub_23AF8EA1C(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, char *a5@<X4>, _QWORD *a6@<X8>)
{
  void *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  unint64_t v17;
  char v18;
  id v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id *v25;
  id v26;
  id v27;
  unsigned __int8 v28;
  uint64_t v29;
  NSObject *v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  int v53;
  char v54;
  uint64_t v55;
  char *v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  char v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  void *v84;
  _QWORD *v85;
  NSObject *v86;
  char *v87;
  _OWORD v88[2];
  uint64_t v89;
  id v90;

  v86 = a4;
  v87 = a5;
  v81 = a3;
  v83 = a2;
  v85 = a6;
  v8 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5474();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82B8]), sel_init);
  v16 = a1;
  v17 = sub_23AAA43E4(v16, 0);
  if (!v6)
  {
    v22 = v17;
    v23 = v18;
    v77 = v14;
    v79 = v10;
    v78 = v12;
    v24 = v83;
    v82 = v15;

    v80 = v22;
    v84 = 0;
    if (v23 != 2 || v22)
    {
      if (v23 != 2 || v22 != 1)
      {
        *(_QWORD *)&v88[0] = 0x2F73662F70665F5FLL;
        *((_QWORD *)&v88[0] + 1) = 0xE800000000000000;
        sub_23AA96F18(v22, v23);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v26 = (id)sub_23B1C63BC();
        swift_bridgeObjectRelease();
LABEL_11:
        v27 = v82;
        objc_msgSend(v82, sel_setItemIdentifier_, v26);

        objc_msgSend(v27, sel_setItemPendingReconciliationIsLockedInDB_, objc_msgSend(v16, sel_BOOLAtIndex_, 1));
        v28 = objc_msgSend(v16, sel_isNullAtIndex_, 2);
        v29 = v11;
        if ((v28 & 1) != 0)
          v76 = 0;
        else
          v76 = objc_msgSend(v16, sel_integerAtIndex_, 2);
        if ((objc_msgSend(v16, sel_isNullAtIndex_, 3) & 1) != 0)
        {
          v30 = v86;
          goto LABEL_16;
        }
        v33 = objc_msgSend(v16, sel_dataAtIndex_, 3);
        v34 = sub_23B1C5AD4();
        v36 = v35;

        v37 = v84;
        v38 = sub_23AD3D744(v34, v36);
        if (v37)
        {
          sub_23AAAE53C(v34, v36);

          v32 = 0;
          v84 = 0;
          v30 = v86;
          v27 = v82;
          if ((v28 & 1) != 0)
            goto LABEL_20;
        }
        else
        {
          v32 = (char *)v38;
          v84 = 0;
          sub_23AAAE53C(v34, v36);
          v27 = v82;
          if (!v32)
          {
            v30 = v86;
LABEL_16:
            sub_23B1C53E4();
            sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
            sub_23AB22974();
            v31 = v77;
            sub_23B1C5864();
            v32 = (char *)sub_23B1C5354();
            (*(void (**)(char *, uint64_t))(v78 + 8))(v31, v29);

            if ((v28 & 1) == 0)
              goto LABEL_27;
LABEL_20:
            v39 = v24;
            v40 = *(_QWORD *)(v24 + 24);
            *(_QWORD *)&v88[0] = v80;
            BYTE8(v88[0]) = v23;
            sub_23AAB5630();
            v41 = swift_allocObject();
            *(_OWORD *)(v41 + 16) = xmmword_23B1CA760;
            *(_QWORD *)(v41 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60A0);
            v42 = v84;
            v43 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(_QWORD *)v40 + 272))(v88, v41);
            if (v42)
            {

              swift_bridgeObjectRelease();
              v44 = 0;
              v45 = v87;
LABEL_22:
              objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, -1);
              *(_QWORD *)&v88[0] = v80;
              BYTE8(v88[0]) = v23;
              v46 = (*(uint64_t (**)(_OWORD *))(*(_QWORD *)v40 + 256))(v88);
              if (v44)
              {

                v84 = 0;
LABEL_24:
                objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, -1);
                objc_msgSend(v27, sel_setItemPendingReconciliationJobSchedulingState_, -1);
                v21 = v45;
                goto LABEL_46;
              }
              v55 = v46;
              v84 = 0;
              if (!v46)
                goto LABEL_24;
              v79 = v32;
              objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, qword_23B1DFDD0[(char)sub_23AE58240()]);
              v51 = *(void **)(v55 + 88);
              v52 = *(void **)(v55 + 96);
              v53 = *(unsigned __int8 *)(v55 + 104);
              sub_23AAAE478(v51, v52, *(_BYTE *)(v55 + 104));
              swift_release();
              v50 = 0;
              v54 = 1;
              v39 = v83;
LABEL_39:
              v45 = *(char **)(v39 + 136);
              swift_retain();
              sub_23AAAE478(v51, v52, v53);
              if (!objc_sync_enter(v45))
              {
                swift_beginAccess();
                swift_bridgeObjectRetain();
                if (!objc_sync_exit(v45))
                {
                  swift_release();
                  if ((v54 & 1) != 0)
                  {
                    v89 = 0;
                    memset(v88, 0, sizeof(v88));
                  }
                  else
                  {
                    swift_beginAccess();
                    sub_23AD4332C(v50 + 48, (uint64_t)v88);
                  }
                  __asm { BR              X9 }
                }
                sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v45);
              }
LABEL_71:
              sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v45);
            }
            v49 = v43;
            v84 = 0;
            swift_bridgeObjectRelease();
            if (v49 >> 62)
            {
              swift_bridgeObjectRetain();
              v74 = sub_23B1C7088();
              swift_bridgeObjectRelease();
              v45 = v87;
              if (v74)
                goto LABEL_33;
            }
            else
            {
              v45 = v87;
              if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
LABEL_33:
                v79 = v32;
                if ((v49 & 0xC000000000000001) != 0)
                {
                  v50 = MEMORY[0x23B85F860](0, v49);
                }
                else
                {
                  if (!*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    __break(1u);
LABEL_70:
                    __break(1u);
                    goto LABEL_71;
                  }
                  v50 = *(_QWORD *)(v49 + 32);
                  swift_retain();
                }
                swift_bridgeObjectRelease();
                objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, qword_23B1DFDD0[(char)sub_23AE57808()]);
                v51 = *(void **)(v50 + 88);
                v52 = *(void **)(v50 + 96);
                v53 = *(unsigned __int8 *)(v50 + 104);
                sub_23AAAE478(v51, v52, *(_BYTE *)(v50 + 104));
                v54 = 0;
                goto LABEL_39;
              }
            }
            swift_bridgeObjectRelease();
            v44 = v84;
            goto LABEL_22;
          }
          v30 = v86;
          if ((v28 & 1) != 0)
            goto LABEL_20;
        }
LABEL_27:
        objc_msgSend(v27, sel_setItemPendingReconciliationJobSchedulingState_, 3);
        v47 = sub_23B06F1C0((uint64_t)v76);
        if (v47 == 70)
          v48 = -1;
        else
          v48 = qword_23B1DFDD0[v47];
        v21 = v87;
        objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, v48);
LABEL_46:
        if (objc_msgSend(v27, sel_itemPendingReconciliationJobCode) == (id)26)
        {
          if (v32)
          {
            *(_QWORD *)&v88[0] = v32;
            v56 = v32;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
            sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
            if (swift_dynamicCast())
            {
              v57 = v90;
              v58 = objc_msgSend(v90, sel_fp_protectionClassBehindError);
              if (v58)
              {
                v59 = v58;
                v45 = v32;
                v60 = sub_23B1C63E0();
                v62 = v61;
                if (v60 == sub_23B1C63E0() && v62 == v63)
                  goto LABEL_52;
                v66 = sub_23B1C7388();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v27 = v82;
                if ((v66 & 1) != 0)
                  goto LABEL_58;
                v69 = sub_23B1C63E0();
                v71 = v70;
                if (v69 == sub_23B1C63E0() && v71 == v72)
                {
LABEL_52:
                  swift_bridgeObjectRelease_n();
                  v27 = v82;
LABEL_58:
                  v67 = v81;
                  if ((uint64_t)objc_msgSend(v81, sel_numberOfItemsPendingReconciliation) < 1)
                  {
LABEL_61:

                    v19 = 0;
                    goto LABEL_55;
                  }
                  v68 = (char *)objc_msgSend(v67, sel_numberOfItemsPendingReconciliation);
                  if (!__OFSUB__(v68, 1))
                  {
                    objc_msgSend(v67, sel_setNumberOfItemsPendingReconciliation_, v68 - 1);
                    goto LABEL_61;
                  }
                  goto LABEL_70;
                }
                v73 = sub_23B1C7388();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v27 = v82;
                if ((v73 & 1) != 0)
                  goto LABEL_58;

                v32 = v45;
              }
              else
              {

              }
            }
          }
        }
        dispatch_group_enter(v30);
        v64 = swift_allocObject();
        *(_QWORD *)(v64 + 16) = v27;
        *(_QWORD *)(v64 + 24) = v30;
        v19 = v27;
        v65 = v30;
        sub_23AC9AE2C(v80, v23, (uint64_t)sub_23AF94AA0, v64);
        swift_release();

LABEL_55:
        v20 = v85;
        goto LABEL_56;
      }
      v25 = (id *)MEMORY[0x24BDC8230];
    }
    else
    {
      v25 = (id *)MEMORY[0x24BDC8228];
    }
    v26 = *v25;
    goto LABEL_11;
  }

  v19 = 0;
  v20 = v85;
  v21 = v87;
LABEL_56:
  *v20 = v19;

}

void sub_23AF8F4BC(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, char *a5@<X4>, _QWORD *a6@<X8>)
{
  void *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  unint64_t v17;
  char v18;
  id v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id *v25;
  id v26;
  id v27;
  unsigned __int8 v28;
  uint64_t v29;
  NSObject *v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  int v53;
  char v54;
  uint64_t v55;
  char *v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  char v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  void *v84;
  _QWORD *v85;
  NSObject *v86;
  char *v87;
  _OWORD v88[2];
  uint64_t v89;
  id v90;

  v86 = a4;
  v87 = a5;
  v81 = a3;
  v83 = a2;
  v85 = a6;
  v8 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5474();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82B8]), sel_init);
  v16 = a1;
  v17 = sub_23AAA43E4(v16, 0);
  if (!v6)
  {
    v22 = v17;
    v23 = v18;
    v77 = v14;
    v79 = v10;
    v78 = v12;
    v24 = v83;
    v82 = v15;

    v80 = v22;
    v84 = 0;
    if (v23 != 2 || v22)
    {
      if (v23 != 2 || v22 != 1)
      {
        *(_QWORD *)&v88[0] = 0x2F73662F70665F5FLL;
        *((_QWORD *)&v88[0] + 1) = 0xE800000000000000;
        sub_23AA96F18(v22, v23);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v26 = (id)sub_23B1C63BC();
        swift_bridgeObjectRelease();
LABEL_11:
        v27 = v82;
        objc_msgSend(v82, sel_setItemIdentifier_, v26);

        objc_msgSend(v27, sel_setItemPendingReconciliationIsLockedInDB_, objc_msgSend(v16, sel_BOOLAtIndex_, 1));
        v28 = objc_msgSend(v16, sel_isNullAtIndex_, 2);
        v29 = v11;
        if ((v28 & 1) != 0)
          v76 = 0;
        else
          v76 = objc_msgSend(v16, sel_integerAtIndex_, 2);
        if ((objc_msgSend(v16, sel_isNullAtIndex_, 3) & 1) != 0)
        {
          v30 = v86;
          goto LABEL_16;
        }
        v33 = objc_msgSend(v16, sel_dataAtIndex_, 3);
        v34 = sub_23B1C5AD4();
        v36 = v35;

        v37 = v84;
        v38 = sub_23AD3D744(v34, v36);
        if (v37)
        {
          sub_23AAAE53C(v34, v36);

          v32 = 0;
          v84 = 0;
          v30 = v86;
          v27 = v82;
          if ((v28 & 1) != 0)
            goto LABEL_20;
        }
        else
        {
          v32 = (char *)v38;
          v84 = 0;
          sub_23AAAE53C(v34, v36);
          v27 = v82;
          if (!v32)
          {
            v30 = v86;
LABEL_16:
            sub_23B1C53E4();
            sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
            sub_23AB22974();
            v31 = v77;
            sub_23B1C5864();
            v32 = (char *)sub_23B1C5354();
            (*(void (**)(char *, uint64_t))(v78 + 8))(v31, v29);

            if ((v28 & 1) == 0)
              goto LABEL_27;
LABEL_20:
            v39 = v24;
            v40 = *(_QWORD *)(v24 + 24);
            *(_QWORD *)&v88[0] = v80;
            BYTE8(v88[0]) = v23;
            sub_23AAB5630();
            v41 = swift_allocObject();
            *(_OWORD *)(v41 + 16) = xmmword_23B1CA760;
            *(_QWORD *)(v41 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60A0);
            v42 = v84;
            v43 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(_QWORD *)v40 + 272))(v88, v41);
            if (v42)
            {

              swift_bridgeObjectRelease();
              v44 = 0;
              v45 = v87;
LABEL_22:
              objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, -1);
              *(_QWORD *)&v88[0] = v80;
              BYTE8(v88[0]) = v23;
              v46 = (*(uint64_t (**)(_OWORD *))(*(_QWORD *)v40 + 256))(v88);
              if (v44)
              {

                v84 = 0;
LABEL_24:
                objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, -1);
                objc_msgSend(v27, sel_setItemPendingReconciliationJobSchedulingState_, -1);
                v21 = v45;
                goto LABEL_46;
              }
              v55 = v46;
              v84 = 0;
              if (!v46)
                goto LABEL_24;
              v79 = v32;
              objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, qword_23B1DFDD0[(char)sub_23AE58240()]);
              v51 = *(void **)(v55 + 88);
              v52 = *(void **)(v55 + 96);
              v53 = *(unsigned __int8 *)(v55 + 104);
              sub_23AAAE478(v51, v52, *(_BYTE *)(v55 + 104));
              swift_release();
              v50 = 0;
              v54 = 1;
              v39 = v83;
LABEL_39:
              v45 = *(char **)(v39 + 136);
              swift_retain();
              sub_23AAAE478(v51, v52, v53);
              if (!objc_sync_enter(v45))
              {
                swift_beginAccess();
                swift_bridgeObjectRetain();
                if (!objc_sync_exit(v45))
                {
                  swift_release();
                  if ((v54 & 1) != 0)
                  {
                    v89 = 0;
                    memset(v88, 0, sizeof(v88));
                  }
                  else
                  {
                    swift_beginAccess();
                    sub_23AD4332C(v50 + 48, (uint64_t)v88);
                  }
                  __asm { BR              X9 }
                }
                sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v45);
              }
LABEL_71:
              sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v45);
            }
            v49 = v43;
            v84 = 0;
            swift_bridgeObjectRelease();
            if (v49 >> 62)
            {
              swift_bridgeObjectRetain();
              v74 = sub_23B1C7088();
              swift_bridgeObjectRelease();
              v45 = v87;
              if (v74)
                goto LABEL_33;
            }
            else
            {
              v45 = v87;
              if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
LABEL_33:
                v79 = v32;
                if ((v49 & 0xC000000000000001) != 0)
                {
                  v50 = MEMORY[0x23B85F860](0, v49);
                }
                else
                {
                  if (!*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    __break(1u);
LABEL_70:
                    __break(1u);
                    goto LABEL_71;
                  }
                  v50 = *(_QWORD *)(v49 + 32);
                  swift_retain();
                }
                swift_bridgeObjectRelease();
                objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, qword_23B1DFDD0[(char)sub_23AE57808()]);
                v51 = *(void **)(v50 + 88);
                v52 = *(void **)(v50 + 96);
                v53 = *(unsigned __int8 *)(v50 + 104);
                sub_23AAAE478(v51, v52, *(_BYTE *)(v50 + 104));
                v54 = 0;
                goto LABEL_39;
              }
            }
            swift_bridgeObjectRelease();
            v44 = v84;
            goto LABEL_22;
          }
          v30 = v86;
          if ((v28 & 1) != 0)
            goto LABEL_20;
        }
LABEL_27:
        objc_msgSend(v27, sel_setItemPendingReconciliationJobSchedulingState_, 3);
        v47 = sub_23B06F1C0((uint64_t)v76);
        if (v47 == 70)
          v48 = -1;
        else
          v48 = qword_23B1DFDD0[v47];
        v21 = v87;
        objc_msgSend(v27, sel_setItemPendingReconciliationJobCode_, v48);
LABEL_46:
        if (objc_msgSend(v27, sel_itemPendingReconciliationJobCode) == (id)26)
        {
          if (v32)
          {
            *(_QWORD *)&v88[0] = v32;
            v56 = v32;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
            sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
            if (swift_dynamicCast())
            {
              v57 = v90;
              v58 = objc_msgSend(v90, sel_fp_protectionClassBehindError);
              if (v58)
              {
                v59 = v58;
                v45 = v32;
                v60 = sub_23B1C63E0();
                v62 = v61;
                if (v60 == sub_23B1C63E0() && v62 == v63)
                  goto LABEL_52;
                v66 = sub_23B1C7388();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v27 = v82;
                if ((v66 & 1) != 0)
                  goto LABEL_58;
                v69 = sub_23B1C63E0();
                v71 = v70;
                if (v69 == sub_23B1C63E0() && v71 == v72)
                {
LABEL_52:
                  swift_bridgeObjectRelease_n();
                  v27 = v82;
LABEL_58:
                  v67 = v81;
                  if ((uint64_t)objc_msgSend(v81, sel_numberOfItemsPendingReconciliation) < 1)
                  {
LABEL_61:

                    v19 = 0;
                    goto LABEL_55;
                  }
                  v68 = (char *)objc_msgSend(v67, sel_numberOfItemsPendingReconciliation);
                  if (!__OFSUB__(v68, 1))
                  {
                    objc_msgSend(v67, sel_setNumberOfItemsPendingReconciliation_, v68 - 1);
                    goto LABEL_61;
                  }
                  goto LABEL_70;
                }
                v73 = sub_23B1C7388();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v27 = v82;
                if ((v73 & 1) != 0)
                  goto LABEL_58;

                v32 = v45;
              }
              else
              {

              }
            }
          }
        }
        dispatch_group_enter(v30);
        v64 = swift_allocObject();
        *(_QWORD *)(v64 + 16) = v27;
        *(_QWORD *)(v64 + 24) = v30;
        v19 = v27;
        v65 = v30;
        sub_23AC9AE2C(v80, v23, (uint64_t)sub_23AF94A0C, v64);
        swift_release();

LABEL_55:
        v20 = v85;
        goto LABEL_56;
      }
      v25 = (id *)MEMORY[0x24BDC8230];
    }
    else
    {
      v25 = (id *)MEMORY[0x24BDC8228];
    }
    v26 = *v25;
    goto LABEL_11;
  }

  v19 = 0;
  v20 = v85;
  v21 = v87;
LABEL_56:
  *v20 = v19;

}

void sub_23AF8FF5C(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  unint64_t v14;
  int v15;
  id v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  int v20;
  id *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  unint64_t v32;
  char isEscapingClosureAtFileLocation;
  char **v34;
  uint64_t v35;
  void *v36;
  uint64_t (*v37)();
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  unsigned __int8 v44;
  id v45;
  char *v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  char *v54;
  uint64_t v55;
  unsigned int v56;
  void *v57;
  uint64_t (*v58)();
  NSObject *v59;
  id v60;
  char *v61;
  id v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  NSObject *v72;
  void *v73;
  void *v74;
  char v75;
  void *v76;
  int v77;
  id v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  BOOL v85;
  _BOOL4 v86;
  unsigned int v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  _QWORD v91[2];
  id v92;
  uint64_t (*v93)();
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  char *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  _QWORD *v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t aBlock;
  unint64_t v107;
  id (*v108)(uint64_t, void *);
  void *v109;
  uint64_t (*v110)();
  uint64_t v111;
  uint64_t v112;

  v102 = a5;
  v103 = a4;
  v101 = a2;
  v112 = *MEMORY[0x24BDAC8D0];
  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82C0]), sel_init);
  v13 = a1;
  v14 = sub_23AAA43E4(v13, 0);
  if (!v5)
  {
    v19 = (void *)v14;
    v20 = v15;
    v98 = v11;
    v94 = v9;
    v95 = v8;
    v104 = v12;

    v97 = a3;
    v100 = v20;
    if (v20 != 2 || v19)
    {
      if (v20 != 2 || v19 != (void *)1)
      {
        aBlock = 0x2F73662F70665F5FLL;
        v107 = 0xE800000000000000;
        sub_23AA96F18((uint64_t)v19, v20);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v22 = (id)sub_23B1C63BC();
        swift_bridgeObjectRelease();
LABEL_11:
        objc_msgSend(v104, sel_setItemIdentifier_, v22);

        v23 = v101;
        v24 = *(_QWORD *)(v101 + 24);
        v99 = (uint64_t)v19;
        aBlock = (uint64_t)v19;
        LOBYTE(v107) = v100;
        sub_23AAB5630();
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v25 + 32) = __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
        v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v24 + 272))(&aBlock, v25);
        v93 = (uint64_t (*)())v13;
        v32 = v26;
        swift_bridgeObjectRelease();
        if (v32 >> 62)
          goto LABEL_76;
        if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_42;
LABEL_77:
        swift_bridgeObjectRelease();
        v78 = v104;
        objc_msgSend(v104, sel_setItemPendingScanningDiskEnumerationStatus_, -1);
        v55 = 0;
        v89 = v100;
LABEL_12:
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingReconciliation_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingRejection_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUp_, 0);
        v27 = *(void **)(v23 + qword_2542EE110);
        v28 = swift_allocObject();
        *(_QWORD *)(v28 + 16) = v99;
        *(_BYTE *)(v28 + 24) = v89;
        v29 = swift_allocObject();
        *(_QWORD *)(v29 + 16) = sub_23AF94B88;
        *(_QWORD *)(v29 + 24) = v28;
        v110 = sub_23AA956C8;
        v111 = v29;
        aBlock = MEMORY[0x24BDAC760];
        v107 = 1107296256;
        v108 = sub_23AA9432C;
        v109 = &block_descriptor_64_0;
        v30 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        aBlock = 0;
        v92 = v27;
        v31 = objc_msgSend(v27, sel_fetchSwift_error_, v30, &aBlock);
        _Block_release(v30);
        v23 = aBlock;
        v32 = (unint64_t)(id)aBlock;
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          goto LABEL_73;
        v96 = v28;
        if (v31)
        {
          v34 = &selRef_defaultManager;
          if (objc_msgSend(v31, sel_next))
          {
            v35 = v101;
            do
            {
              v36 = (void *)MEMORY[0x23B8601A8]();
              sub_23AF91B44(v31, v78, v35);
              objc_autoreleasePoolPop(v36);
            }
            while ((objc_msgSend(v31, sel_next) & 1) != 0);
          }
          v91[1] = v55;
          objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion_, 0);
          objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent_, 0);
          objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDown_, 0);
          v37 = v93;
          v38 = objc_msgSend(v37, sel_stringAtIndex_, 2);
          if (!v38)
          {
            sub_23B1C63E0();
            v38 = (id)sub_23B1C63BC();
            swift_bridgeObjectRelease();
          }

          v39 = swift_allocObject();
          *(_QWORD *)(v39 + 16) = v38;
          v40 = swift_allocObject();
          *(_QWORD *)(v40 + 16) = sub_23AF94B08;
          *(_QWORD *)(v40 + 24) = v39;
          v110 = sub_23AA956C8;
          v111 = v40;
          aBlock = MEMORY[0x24BDAC760];
          v107 = 1107296256;
          v108 = sub_23AA9432C;
          v109 = &block_descriptor_78_0;
          v41 = _Block_copy(&aBlock);
          v93 = (uint64_t (*)())v38;
          swift_retain();
          swift_release();
          aBlock = 0;
          v42 = objc_msgSend(v92, sel_fetchSwift_error_, v41, &aBlock);
          _Block_release(v41);
          v32 = (unint64_t)(id)aBlock;
          v23 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v23 & 1) != 0)
            goto LABEL_75;
          v101 = v39;
          if (v42)
          {
            if (objc_msgSend(v42, sel_next))
            {
              v32 = (unint64_t)&selRef_defaultManager;
              do
              {
                v23 = (uint64_t)v34;
                v43 = (void *)MEMORY[0x23B8601A8]();
                v44 = objc_msgSend(v42, sel_longAtIndex_, 1);
                v45 = v104;
                if ((v44 & 0xD) != 0)
                {
                  v46 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion);
                  if (__OFADD__(v46, 1))
                  {
                    __break(1u);
LABEL_72:
                    __break(1u);
LABEL_73:
                    __break(1u);
LABEL_74:
                    __break(1u);
LABEL_75:
                    __break(1u);
LABEL_76:
                    swift_bridgeObjectRetain();
                    v90 = sub_23B1C7088();
                    swift_bridgeObjectRelease();
                    if (!v90)
                      goto LABEL_77;
LABEL_42:
                    if ((v32 & 0xC000000000000001) != 0)
                    {
                      v55 = MEMORY[0x23B85F860](0, v32);
                    }
                    else
                    {
                      if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
                        __break(1u);
                      v55 = *(_QWORD *)(v32 + 32);
                      swift_retain();
                    }
                    swift_bridgeObjectRelease();
                    swift_retain();
                    v56 = sub_23AAA48D4(1);
                    LODWORD(v96) = v56;
                    v73 = *(void **)(v55 + 88);
                    v74 = *(void **)(v55 + 96);
                    v75 = *(_BYTE *)(v55 + 104);
                    v76 = *(void **)(v23 + 136);
                    swift_retain();
                    sub_23AAAE478(v73, v74, v75);
                    if (objc_sync_enter(v76))
                      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v76);
                    swift_beginAccess();
                    swift_bridgeObjectRetain();
                    v77 = objc_sync_exit(v76);
                    v78 = v104;
                    if (v77)
                      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v76);
                    swift_release();
                    swift_beginAccess();
                    sub_23AD4332C(v55 + 48, (uint64_t)&aBlock);
                    v79 = sub_23AF940CC(v96);
                    v81 = v80;
                    sub_23AAAEE10(v73, v74, v75);
                    sub_23AD43374((uint64_t)&aBlock);
                    swift_bridgeObjectRelease();
                    if ((v81 & 1) != 0)
                      v82 = -2;
                    else
                      v82 = v79;
                    objc_msgSend(v78, sel_setItemPendingScanningDiskEnumerationStatus_, v82);
                    v83 = *(unsigned __int8 *)(v55 + 104);
                    if (*(_BYTE *)(v55 + 104))
                    {
                      v84 = *(_QWORD *)(v55 + 88);
                      v85 = v84 == 0;
                      v86 = v84 != 0;
                      v87 = !v85;
                      if (v83 != 2)
                        v87 = 0;
                      if (v83 == 1)
                        v88 = v86;
                      else
                        v88 = v87;
                    }
                    else
                    {
                      v88 = *(_QWORD *)(v55 + 96) != 0;
                    }
                    v89 = v100;
                    v23 = v101;
                    objc_msgSend(v78, sel_setItemPendingScanningDiskHasMultiplePagesEnumeration_, v88);
                    swift_release();
                    goto LABEL_12;
                  }
                  objc_msgSend(v45, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion_, v46 + 1);
                }
                v47 = (unint64_t)objc_msgSend(v42, sel_longAtIndex_, 2);
                v48 = objc_msgSend(v42, sel_longAtIndex_, 3);
                v109 = (void *)MEMORY[0x24BEE1768];
                aBlock = (uint64_t)v48;
                if (swift_dynamicCast())
                {
                  v49 = v105;
                  v50 = objc_msgSend(v42, sel_longAtIndex_, 4);
                  if (v49 || v50 != (id)2)
                    goto LABEL_33;
                  if (qword_2542E7190 != -1)
                    swift_once();
                  if ((qword_2542EDE38 & ~v47) != 0)
                  {
LABEL_33:
                    if ((v47 & 2) != 0)
                    {
                      v51 = v104;
                      v52 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent);
                      if (__OFADD__(v52, 1))
                        goto LABEL_74;
                      objc_msgSend(v51, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent_, v52 + 1);
                    }
                    else if (!v47)
                    {
                      goto LABEL_23;
                    }
                    v53 = v104;
                    v54 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDown);
                    if (__OFADD__(v54, 1))
                      goto LABEL_72;
                    objc_msgSend(v53, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDown_, v54 + 1);
                  }
                }
LABEL_23:
                objc_autoreleasePoolPop(v43);
                v34 = (char **)v23;
              }
              while ((objc_msgSend(v42, (SEL)(v23 + 2120)) & 1) != 0);
            }

            swift_release();
            v58 = sub_23AF94B08;
            v18 = v102;
            v17 = v103;
            v59 = v97;
LABEL_53:
            dispatch_group_enter(v59);
            v70 = swift_allocObject();
            v71 = v104;
            *(_QWORD *)(v70 + 16) = v104;
            *(_QWORD *)(v70 + 24) = v59;
            v16 = v71;
            v72 = v59;
            sub_23AC9AE2C(v99, v100, (uint64_t)sub_23AF94AC8, v70);
            swift_release();
            swift_release();
            sub_23AAB7948((uint64_t)v58);

            goto LABEL_54;
          }
          v57 = (void *)sub_23B1C587C();

          swift_willThrow();
          swift_release();
          v93 = sub_23AF94B08;
        }
        else
        {
          v57 = (void *)sub_23B1C587C();

          swift_willThrow();
          swift_release();
          v93 = 0;
          v101 = 0;
        }
        v60 = (id)fpfs_current_or_default_log();
        v61 = v98;
        sub_23B1C5E58();
        v62 = v57;
        v63 = v57;
        v64 = sub_23B1C5E40();
        v65 = sub_23B1C6AA0();
        if (os_log_type_enabled(v64, v65))
        {
          v66 = (uint8_t *)swift_slowAlloc();
          v67 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v66 = 138412290;
          v68 = v57;
          v69 = _swift_stdlib_bridgeErrorToNSError();
          aBlock = v69;
          sub_23B1C6CBC();
          *v67 = v69;
          v61 = v98;

          _os_log_impl(&dword_23AA66000, v64, v65, "Failed gathering info for item pending scanning disk %@", v66, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v67, -1, -1);
          MEMORY[0x23B8614BC](v66, -1, -1);

        }
        else
        {

        }
        v18 = v102;
        v17 = v103;
        v59 = v97;
        (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v95);
        v58 = v93;
        goto LABEL_53;
      }
      v21 = (id *)MEMORY[0x24BDC8230];
    }
    else
    {
      v21 = (id *)MEMORY[0x24BDC8228];
    }
    v22 = *v21;
    goto LABEL_11;
  }

  v16 = 0;
  v18 = v102;
  v17 = v103;
LABEL_54:
  *v18 = v16;

}

void sub_23AF90CC4(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  unint64_t v14;
  int v15;
  id v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  int v20;
  id *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  unint64_t v32;
  char isEscapingClosureAtFileLocation;
  char **v34;
  uint64_t v35;
  void *v36;
  uint64_t (*v37)(void *);
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  unsigned __int8 v44;
  id v45;
  char *v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  char *v54;
  uint64_t v55;
  unsigned int v56;
  void *v57;
  uint64_t (*v58)(void *);
  NSObject *v59;
  id v60;
  char *v61;
  id v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  NSObject *v72;
  void *v73;
  void *v74;
  char v75;
  void *v76;
  int v77;
  id v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  BOOL v85;
  _BOOL4 v86;
  unsigned int v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  _QWORD v91[2];
  id v92;
  uint64_t (*v93)(void *);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  char *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  _QWORD *v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t aBlock;
  unint64_t v107;
  id (*v108)(uint64_t, void *);
  void *v109;
  uint64_t (*v110)();
  uint64_t v111;
  uint64_t v112;

  v102 = a5;
  v103 = a4;
  v101 = a2;
  v112 = *MEMORY[0x24BDAC8D0];
  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82C0]), sel_init);
  v13 = a1;
  v14 = sub_23AAA43E4(v13, 0);
  if (!v5)
  {
    v19 = (void *)v14;
    v20 = v15;
    v98 = v11;
    v94 = v9;
    v95 = v8;
    v104 = v12;

    v97 = a3;
    v100 = v20;
    if (v20 != 2 || v19)
    {
      if (v20 != 2 || v19 != (void *)1)
      {
        aBlock = 0x2F73662F70665F5FLL;
        v107 = 0xE800000000000000;
        sub_23AA96F18((uint64_t)v19, v20);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v22 = (id)sub_23B1C63BC();
        swift_bridgeObjectRelease();
LABEL_11:
        objc_msgSend(v104, sel_setItemIdentifier_, v22);

        v23 = v101;
        v24 = *(_QWORD *)(v101 + 24);
        v99 = (uint64_t)v19;
        aBlock = (uint64_t)v19;
        LOBYTE(v107) = v100;
        sub_23AAB5630();
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v25 + 32) = __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
        v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v24 + 272))(&aBlock, v25);
        v93 = (uint64_t (*)(void *))v13;
        v32 = v26;
        swift_bridgeObjectRelease();
        if (v32 >> 62)
          goto LABEL_76;
        if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_42;
LABEL_77:
        swift_bridgeObjectRelease();
        v78 = v104;
        objc_msgSend(v104, sel_setItemPendingScanningDiskEnumerationStatus_, -1);
        v55 = 0;
        v89 = v100;
LABEL_12:
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingReconciliation_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingRejection_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent_, 0);
        objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUp_, 0);
        v27 = *(void **)(v23 + qword_2542EE110);
        v28 = swift_allocObject();
        *(_QWORD *)(v28 + 16) = v99;
        *(_BYTE *)(v28 + 24) = v89;
        v29 = swift_allocObject();
        *(_QWORD *)(v29 + 16) = sub_23AF94A40;
        *(_QWORD *)(v29 + 24) = v28;
        v110 = sub_23AA956C8;
        v111 = v29;
        aBlock = MEMORY[0x24BDAC760];
        v107 = 1107296256;
        v108 = sub_23AA9432C;
        v109 = &block_descriptor_23;
        v30 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        aBlock = 0;
        v92 = v27;
        v31 = objc_msgSend(v27, sel_fetchSwift_error_, v30, &aBlock);
        _Block_release(v30);
        v23 = aBlock;
        v32 = (unint64_t)(id)aBlock;
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          goto LABEL_73;
        v96 = v28;
        if (v31)
        {
          v34 = &selRef_defaultManager;
          if (objc_msgSend(v31, sel_next))
          {
            v35 = v101;
            do
            {
              v36 = (void *)MEMORY[0x23B8601A8]();
              sub_23AF91B44(v31, v78, v35);
              objc_autoreleasePoolPop(v36);
            }
            while ((objc_msgSend(v31, sel_next) & 1) != 0);
          }
          v91[1] = v55;
          objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion_, 0);
          objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent_, 0);
          objc_msgSend(v78, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDown_, 0);
          v37 = v93;
          v38 = objc_msgSend(v37, sel_stringAtIndex_, 2);
          if (!v38)
          {
            sub_23B1C63E0();
            v38 = (id)sub_23B1C63BC();
            swift_bridgeObjectRelease();
          }

          v39 = swift_allocObject();
          *(_QWORD *)(v39 + 16) = v38;
          v40 = swift_allocObject();
          *(_QWORD *)(v40 + 16) = sub_23AF94A88;
          *(_QWORD *)(v40 + 24) = v39;
          v110 = sub_23AA956C8;
          v111 = v40;
          aBlock = MEMORY[0x24BDAC760];
          v107 = 1107296256;
          v108 = sub_23AA9432C;
          v109 = &block_descriptor_36_2;
          v41 = _Block_copy(&aBlock);
          v93 = (uint64_t (*)(void *))v38;
          swift_retain();
          swift_release();
          aBlock = 0;
          v42 = objc_msgSend(v92, sel_fetchSwift_error_, v41, &aBlock);
          _Block_release(v41);
          v32 = (unint64_t)(id)aBlock;
          v23 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v23 & 1) != 0)
            goto LABEL_75;
          v101 = v39;
          if (v42)
          {
            if (objc_msgSend(v42, sel_next))
            {
              v32 = (unint64_t)&selRef_defaultManager;
              do
              {
                v23 = (uint64_t)v34;
                v43 = (void *)MEMORY[0x23B8601A8]();
                v44 = objc_msgSend(v42, sel_longAtIndex_, 1);
                v45 = v104;
                if ((v44 & 0xD) != 0)
                {
                  v46 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion);
                  if (__OFADD__(v46, 1))
                  {
                    __break(1u);
LABEL_72:
                    __break(1u);
LABEL_73:
                    __break(1u);
LABEL_74:
                    __break(1u);
LABEL_75:
                    __break(1u);
LABEL_76:
                    swift_bridgeObjectRetain();
                    v90 = sub_23B1C7088();
                    swift_bridgeObjectRelease();
                    if (!v90)
                      goto LABEL_77;
LABEL_42:
                    if ((v32 & 0xC000000000000001) != 0)
                    {
                      v55 = MEMORY[0x23B85F860](0, v32);
                    }
                    else
                    {
                      if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
                        __break(1u);
                      v55 = *(_QWORD *)(v32 + 32);
                      swift_retain();
                    }
                    swift_bridgeObjectRelease();
                    swift_retain();
                    v56 = sub_23AAA48D4(1);
                    LODWORD(v96) = v56;
                    v73 = *(void **)(v55 + 88);
                    v74 = *(void **)(v55 + 96);
                    v75 = *(_BYTE *)(v55 + 104);
                    v76 = *(void **)(v23 + 136);
                    swift_retain();
                    sub_23AAAE478(v73, v74, v75);
                    if (objc_sync_enter(v76))
                      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v76);
                    swift_beginAccess();
                    swift_bridgeObjectRetain();
                    v77 = objc_sync_exit(v76);
                    v78 = v104;
                    if (v77)
                      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v76);
                    swift_release();
                    swift_beginAccess();
                    sub_23AD4332C(v55 + 48, (uint64_t)&aBlock);
                    v79 = sub_23AF940CC(v96);
                    v81 = v80;
                    sub_23AAAEE10(v73, v74, v75);
                    sub_23AD43374((uint64_t)&aBlock);
                    swift_bridgeObjectRelease();
                    if ((v81 & 1) != 0)
                      v82 = -2;
                    else
                      v82 = v79;
                    objc_msgSend(v78, sel_setItemPendingScanningDiskEnumerationStatus_, v82);
                    v83 = *(unsigned __int8 *)(v55 + 104);
                    if (*(_BYTE *)(v55 + 104))
                    {
                      v84 = *(_QWORD *)(v55 + 88);
                      v85 = v84 == 0;
                      v86 = v84 != 0;
                      v87 = !v85;
                      if (v83 != 2)
                        v87 = 0;
                      if (v83 == 1)
                        v88 = v86;
                      else
                        v88 = v87;
                    }
                    else
                    {
                      v88 = *(_QWORD *)(v55 + 96) != 0;
                    }
                    v89 = v100;
                    v23 = v101;
                    objc_msgSend(v78, sel_setItemPendingScanningDiskHasMultiplePagesEnumeration_, v88);
                    swift_release();
                    goto LABEL_12;
                  }
                  objc_msgSend(v45, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion_, v46 + 1);
                }
                v47 = (unint64_t)objc_msgSend(v42, sel_longAtIndex_, 2);
                v48 = objc_msgSend(v42, sel_longAtIndex_, 3);
                v109 = (void *)MEMORY[0x24BEE1768];
                aBlock = (uint64_t)v48;
                if (swift_dynamicCast())
                {
                  v49 = v105;
                  v50 = objc_msgSend(v42, sel_longAtIndex_, 4);
                  if (v49 || v50 != (id)2)
                    goto LABEL_33;
                  if (qword_2542E7190 != -1)
                    swift_once();
                  if ((qword_2542EDE38 & ~v47) != 0)
                  {
LABEL_33:
                    if ((v47 & 2) != 0)
                    {
                      v51 = v104;
                      v52 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent);
                      if (__OFADD__(v52, 1))
                        goto LABEL_74;
                      objc_msgSend(v51, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent_, v52 + 1);
                    }
                    else if (!v47)
                    {
                      goto LABEL_23;
                    }
                    v53 = v104;
                    v54 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDown);
                    if (__OFADD__(v54, 1))
                      goto LABEL_72;
                    objc_msgSend(v53, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDown_, v54 + 1);
                  }
                }
LABEL_23:
                objc_autoreleasePoolPop(v43);
                v34 = (char **)v23;
              }
              while ((objc_msgSend(v42, (SEL)(v23 + 2120)) & 1) != 0);
            }

            swift_release();
            v58 = sub_23AF94A88;
            v18 = v102;
            v17 = v103;
            v59 = v97;
LABEL_53:
            dispatch_group_enter(v59);
            v70 = swift_allocObject();
            v71 = v104;
            *(_QWORD *)(v70 + 16) = v104;
            *(_QWORD *)(v70 + 24) = v59;
            v16 = v71;
            v72 = v59;
            sub_23AC9AE2C(v99, v100, (uint64_t)sub_23AF94A0C, v70);
            swift_release();
            swift_release();
            sub_23AAB7948((uint64_t)v58);

            goto LABEL_54;
          }
          v57 = (void *)sub_23B1C587C();

          swift_willThrow();
          swift_release();
          v93 = sub_23AF94A88;
        }
        else
        {
          v57 = (void *)sub_23B1C587C();

          swift_willThrow();
          swift_release();
          v93 = 0;
          v101 = 0;
        }
        v60 = (id)fpfs_current_or_default_log();
        v61 = v98;
        sub_23B1C5E58();
        v62 = v57;
        v63 = v57;
        v64 = sub_23B1C5E40();
        v65 = sub_23B1C6AA0();
        if (os_log_type_enabled(v64, v65))
        {
          v66 = (uint8_t *)swift_slowAlloc();
          v67 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v66 = 138412290;
          v68 = v57;
          v69 = _swift_stdlib_bridgeErrorToNSError();
          aBlock = v69;
          sub_23B1C6CBC();
          *v67 = v69;
          v61 = v98;

          _os_log_impl(&dword_23AA66000, v64, v65, "Failed gathering info for item pending scanning disk %@", v66, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v67, -1, -1);
          MEMORY[0x23B8614BC](v66, -1, -1);

        }
        else
        {

        }
        v18 = v102;
        v17 = v103;
        v59 = v97;
        (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v95);
        v58 = v93;
        goto LABEL_53;
      }
      v21 = (id *)MEMORY[0x24BDC8230];
    }
    else
    {
      v21 = (id *)MEMORY[0x24BDC8228];
    }
    v22 = *v21;
    goto LABEL_11;
  }

  v16 = 0;
  v18 = v102;
  v17 = v103;
LABEL_54:
  *v18 = v16;

}

uint64_t sub_23AF91A2C(void *a1, unint64_t a2, char a3)
{
  id v6;
  uint64_t v8;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  if (!a3)
    goto LABEL_5;
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  v6 = objc_msgSend(a1, sel_bindLongParameter_, a2, 0, 0xE000000000000000);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v8;
}

uint64_t sub_23AF91B44(void *a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  unsigned __int8 v8;
  uint64_t result;
  uint64_t v10;
  char **v11;
  unsigned int v12;
  char v13;
  uint64_t v15;
  char **v16;
  id v18;
  id v19;
  void *v20;
  _QWORD *v21;
  char v22;

  v4 = v3;
  if ((objc_msgSend(a1, sel_isNullAtIndex_, 1) & 1) == 0)
  {
    v8 = sub_23AAB0F04(1);
    if (v3)
    {

      v4 = 0;
    }
    else if (!v8)
    {
      result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingReconciliation);
      v10 = result + 1;
      if (__OFADD__(result, 1))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      v11 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingReconciliation_;
      goto LABEL_7;
    }
  }
  result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenNotPendingReconciliation);
  v10 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  v11 = &selRef_setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation_;
LABEL_7:
  objc_msgSend(a2, *v11, v10);
  v12 = objc_msgSend(a1, sel_longAtIndex_, 2);
  v13 = v12;
  if ((v12 & 0xD) == 0 || (v12 & 0x10) != 0)
    goto LABEL_11;
  if ((~v12 & 0x82) != 0 || (*(_QWORD *)(a3 + 80) & 0x4000) == 0)
  {
LABEL_19:
    result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion);
    v15 = result + 1;
    if (__OFADD__(result, 1))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v16 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion_;
    goto LABEL_21;
  }
  v18 = a1;
  v19 = objc_msgSend(v18, sel_stringAtIndex_, 4);
  v20 = v19;
  if (!v19)
  {
    sub_23B1C63E0();
    v20 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }

  v21 = sub_23AE4F234();
  v22 = sub_23AE2ACE0(v20, (uint64_t)v21);

  result = swift_release();
  if (!v4)
  {
    swift_release();
    if ((v22 & 1) != 0)
    {
LABEL_11:
      if ((v13 & 0x40) == 0)
      {
LABEL_22:
        result = (uint64_t)objc_msgSend(a1, sel_longAtIndex_, 3);
        if ((result & 2) != 0)
        {
          result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent);
          if (__OFADD__(result, 1))
          {
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          objc_msgSend(a2, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent_, result + 1);
        }
        else if (!result)
        {
          return result;
        }
        result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncUp);
        if (!__OFADD__(result, 1))
          return (uint64_t)objc_msgSend(a2, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUp_, result + 1);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingRejection);
      v15 = result + 1;
      if (__OFADD__(result, 1))
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      v16 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingRejection_;
LABEL_21:
      objc_msgSend(a2, *v16, v15);
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_23AF91DD8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  void *v10;
  id v11;
  _QWORD v12[2];

  v2 = sub_23B1C6428();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C63E0();
  sub_23B1C641C();
  v6 = sub_23B1C63EC();
  v8 = v7;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v10 = (void *)sub_23B1C5AA4();
    sub_23AAA3E18(v6, v8);
    v11 = objc_msgSend(a1, sel_bindObjectParameter_, v10);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v12[0];
  }
  return result;
}

void sub_23AF91F74(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, char ***a5@<X8>)
{
  void *v5;
  id v6;
  uint64_t v9;
  id v10;
  id v11;
  char **v12;
  uint64_t (***v13)(id *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  uint8_t *v27;
  char ***v28;
  NSObject *v29;
  char **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  int v39;
  _BOOL4 v40;
  _BOOL4 v41;
  _BOOL4 v42;
  void *v43;
  void *v44;
  void *v45;
  char v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char **v51;
  void *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  _QWORD *v60;
  void *v61;
  id v62;
  char isEscapingClosureAtFileLocation;
  char *v64;
  char *v65;
  char **v66;
  void *v67;
  char *v68;
  unsigned int v69;
  _QWORD *v70;
  char *v71;
  uint64_t (*v72)();
  void *v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  char **v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  char **v82;
  NSObject *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)();
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  char ***v95;
  void *v96;
  char *v97;
  uint64_t v98;
  id aBlock[13];

  v6 = v5;
  v96 = a4;
  v94 = a3;
  v95 = a5;
  aBlock[12] = *(id *)MEMORY[0x24BDAC8D0];
  v93 = sub_23B1C5E4C();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v97 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1;
  v11 = objc_msgSend(v10, sel_stringAtIndex_, 0);
  if (!v11)
  {
    sub_23B1C63E0();
    v11 = (id)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }

  v12 = (char **)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82C8]), sel_init);
  objc_msgSend(v12, sel_setItemIdentifier_, v11);
  v13 = *(uint64_t (****)(id *, uint64_t))(a2 + 24);
  aBlock[0] = v11;
  sub_23AEA49E8();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v14 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
  v15 = (*v13)[33](aBlock, v14);
  if (!v5)
  {
    v31 = v15;
    v90 = v11;
    v91 = a2;
    v89 = (uint64_t (*)())v10;
    swift_bridgeObjectRelease();
    if (v31 >> 62)
      goto LABEL_62;
    v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v18 = v96;
      v30 = v12;
      if (v32)
      {
        if ((v31 & 0xC000000000000001) != 0)
        {
          v33 = MEMORY[0x23B85F860](0, v31);
        }
        else
        {
          if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_65:
            __break(1u);
          }
          v33 = *(_QWORD *)(v31 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        swift_retain();
        v34 = sub_23AAA48D4(1);
        if (v6)
        {

          swift_release_n();
          v16 = 0;
          v17 = 0;
          goto LABEL_5;
        }
        LODWORD(v87) = v34;
        v36 = v33;
        v37 = *(void **)(v33 + 88);
        v38 = *(void **)(v33 + 96);
        v88 = v36;
        v39 = *(unsigned __int8 *)(v36 + 104);
        v40 = v37 != 0;
        v41 = v40;
        if (v39 != 2)
          v41 = 0;
        if (v39 != 1)
          v40 = v41;
        if (*(_BYTE *)(v36 + 104))
          v42 = v40;
        else
          v42 = v38 != 0;
        v43 = *(void **)(v91 + 136);
        swift_retain();
        v85 = v37;
        sub_23AAAE478(v37, v38, v39);
        if (objc_sync_enter(v43))
          sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v43);
        v44 = v38;
        LODWORD(v86) = v42;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v43))
          sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v43);
        swift_release();
        v35 = v88;
        swift_beginAccess();
        sub_23AD4332C(v35 + 48, (uint64_t)aBlock);
        v45 = v85;
        v87 = sub_23AF940CC(v87);
        v47 = v46;
        sub_23AAAEE10(v45, v44, v39);
        sub_23AD43374((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        v48 = (id)((v47 & 1) != 0 ? -2 : v87);
        objc_msgSend(v30, sel_setItemPendingScanningProviderEnumerationStatus_, v48);
        objc_msgSend(v30, sel_setItemPendingScanningProviderHasMultiplePagesEnumeration_, v86);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_setItemPendingScanningProviderEnumerationStatus_, -1);
        v35 = 0;
      }
      aBlock[0] = v90;
      v49 = ((uint64_t (*)(id *))(*v13)[31])(aBlock);
      if (v6)
        break;
      v50 = v49;
      if (!v49)
        goto LABEL_34;
      if ((objc_msgSend(v89, sel_longAtIndex_, 2) & 0x10) != 0)
      {
        v53 = *(void **)(v50 + 88);
        v52 = *(void **)(v50 + 96);
        v54 = *(unsigned __int8 *)(v50 + 104);
        v55 = *(void **)(v91 + 136);
        swift_retain_n();
        v88 = (uint64_t)v52;
        sub_23AAAE478(v53, v52, v54);
        if (!objc_sync_enter(v55))
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          if (!objc_sync_exit(v55))
          {
            swift_release_n();
            swift_beginAccess();
            sub_23AD4332C(v50 + 48, (uint64_t)aBlock);
            __asm { BR              X9 }
          }
          sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v55);
        }
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v55);
      }
      v86 = 0;
      v51 = v30;
      objc_msgSend(v51, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, -1);

      swift_release();
LABEL_41:
      v56 = v91;
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildren_, 0);
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildrenPendingCreation_, 0);
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildrenFailingCreation_, 0);
      v57 = *(void **)(v56 + qword_2542EE110);
      v58 = swift_allocObject();
      v59 = v90;
      *(_QWORD *)(v58 + 16) = v90;
      v60 = (_QWORD *)swift_allocObject();
      v60[2] = sub_23AF94B0C;
      v60[3] = v58;
      v91 = v58;
      aBlock[4] = sub_23AA956C8;
      aBlock[5] = v60;
      aBlock[0] = (id)MEMORY[0x24BDAC760];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_23AA9432C;
      aBlock[3] = &block_descriptor_92_0;
      v61 = _Block_copy(aBlock);
      v87 = (uint64_t)v59;
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      v6 = objc_msgSend(v57, sel_fetchSwift_error_, v61, aBlock);
      _Block_release(v61);
      v62 = aBlock[0];
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        goto LABEL_65;
      if (!v6)
      {
        v6 = (id)sub_23B1C587C();

        swift_willThrow();
        swift_release();
        v16 = sub_23AF94B0C;
        v18 = v96;
        v17 = v91;
        goto LABEL_5;
      }
      v88 = v35;
      if (!objc_msgSend(v6, sel_next))
      {
LABEL_54:
        v72 = v89;
        v73 = v86;
        v74 = sub_23AAA43E4(v72, 3);
        if (v73)
        {

          swift_release();
          v18 = v96;
        }
        else
        {
          v76 = v74;
          v77 = v75;

          v78 = v30;
          v79 = v94;
          dispatch_group_enter(v94);
          v80 = swift_allocObject();
          v90 = 0;
          v81 = v80;
          *(_QWORD *)(v80 + 16) = v78;
          *(_QWORD *)(v80 + 24) = v79;
          v82 = v78;
          v83 = v79;
          v18 = v96;
          sub_23AC9AE2C(v76, v77, (uint64_t)sub_23AF94AC8, v81);

          swift_release();
          swift_release();
        }
        v28 = v95;
        swift_release();
        goto LABEL_9;
      }
      v13 = (uint64_t (***)(id *, uint64_t))&selRef_url;
      v12 = &selRef_defaultManager;
      while (1)
      {
        v67 = (void *)MEMORY[0x23B8601A8]();
        v31 = v30;
        v68 = (char *)objc_msgSend((id)v31, sel_itemPendingScanningProviderNumberOfChildren);
        if (__OFADD__(v68, 1))
          break;
        objc_msgSend((id)v31, sel_setItemPendingScanningProviderNumberOfChildren_, v68 + 1);

        if (objc_msgSend(v6, sel_isNullAtIndex_, 0))
        {
          v69 = objc_msgSend(v6, sel_isNullAtIndex_, 1);
          v70 = (id)v31;
          v31 = (unint64_t)v70;
          if (v69)
          {
            v71 = (char *)objc_msgSend(v70, sel_itemPendingScanningProviderNumberOfChildrenPendingCreation);
            v65 = v71 + 1;
            if (__OFADD__(v71, 1))
              goto LABEL_61;
            v66 = &selRef_setItemPendingScanningProviderNumberOfChildrenPendingCreation_;
          }
          else
          {
            v64 = (char *)objc_msgSend(v70, sel_itemPendingScanningProviderNumberOfChildrenFailingCreation);
            v65 = v64 + 1;
            if (__OFADD__(v64, 1))
              goto LABEL_60;
            v66 = &selRef_setItemPendingScanningProviderNumberOfChildrenFailingCreation_;
          }
          objc_msgSend((id)v31, *v66, v65);

        }
        objc_autoreleasePoolPop(v67);
        if ((objc_msgSend(v6, sel_next) & 1) == 0)
          goto LABEL_54;
      }
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain();
      v32 = sub_23B1C7088();
      swift_bridgeObjectRelease();
    }

LABEL_34:
    v86 = 0;
    objc_msgSend(v30, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, 0);
    goto LABEL_41;
  }

  swift_bridgeObjectRelease();
  v16 = 0;
  v17 = 0;
  v18 = v96;
LABEL_5:
  v19 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v20 = v6;
  v21 = sub_23B1C5E40();
  v22 = sub_23B1C6AA0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v90 = 0;
    v89 = v16;
    v24 = (uint8_t *)v23;
    v25 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v24 = 138412290;
    v91 = v17;
    swift_getErrorValue();
    v26 = sub_23B0D9CF0(v98);
    aBlock[0] = v26;
    sub_23B1C6CBC();
    *v25 = v26;

    _os_log_impl(&dword_23AA66000, v21, v22, "Error gathering telemetry for scanning provider %@", v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v25, -1, -1);
    v27 = v24;
    v16 = v89;
    MEMORY[0x23B8614BC](v27, -1, -1);

  }
  else
  {

  }
  v28 = v95;
  v29 = v94;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v97, v93);
  sub_23AAB7948((uint64_t)v16);

  v30 = 0;
LABEL_9:
  *v28 = v30;

}

void sub_23AF92D08(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, char ***a5@<X8>)
{
  void *v5;
  id v6;
  uint64_t v9;
  id v10;
  id v11;
  char **v12;
  uint64_t (***v13)(id *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *);
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  uint8_t *v27;
  char ***v28;
  NSObject *v29;
  char **v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  int v39;
  _BOOL4 v40;
  _BOOL4 v41;
  _BOOL4 v42;
  void *v43;
  void *v44;
  void *v45;
  char v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char **v51;
  void *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  _QWORD *v60;
  void *v61;
  id v62;
  char isEscapingClosureAtFileLocation;
  char *v64;
  char *v65;
  char **v66;
  void *v67;
  char *v68;
  unsigned int v69;
  _QWORD *v70;
  char *v71;
  uint64_t (*v72)(void *);
  void *v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  char **v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  char **v82;
  NSObject *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void *);
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  char ***v95;
  void *v96;
  char *v97;
  uint64_t v98;
  id aBlock[13];

  v6 = v5;
  v96 = a4;
  v94 = a3;
  v95 = a5;
  aBlock[12] = *(id *)MEMORY[0x24BDAC8D0];
  v93 = sub_23B1C5E4C();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v97 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1;
  v11 = objc_msgSend(v10, sel_stringAtIndex_, 0);
  if (!v11)
  {
    sub_23B1C63E0();
    v11 = (id)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }

  v12 = (char **)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82C8]), sel_init);
  objc_msgSend(v12, sel_setItemIdentifier_, v11);
  v13 = *(uint64_t (****)(id *, uint64_t))(a2 + 24);
  aBlock[0] = v11;
  sub_23AEA49E8();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v14 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
  v15 = (*v13)[33](aBlock, v14);
  if (!v5)
  {
    v31 = v15;
    v90 = v11;
    v91 = a2;
    v89 = (uint64_t (*)(void *))v10;
    swift_bridgeObjectRelease();
    if (v31 >> 62)
      goto LABEL_62;
    v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v18 = v96;
      v30 = v12;
      if (v32)
      {
        if ((v31 & 0xC000000000000001) != 0)
        {
          v33 = MEMORY[0x23B85F860](0, v31);
        }
        else
        {
          if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_65:
            __break(1u);
          }
          v33 = *(_QWORD *)(v31 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        swift_retain();
        v34 = sub_23AAA48D4(1);
        if (v6)
        {

          swift_release_n();
          v16 = 0;
          v17 = 0;
          goto LABEL_5;
        }
        LODWORD(v87) = v34;
        v36 = v33;
        v37 = *(void **)(v33 + 88);
        v38 = *(void **)(v33 + 96);
        v88 = v36;
        v39 = *(unsigned __int8 *)(v36 + 104);
        v40 = v37 != 0;
        v41 = v40;
        if (v39 != 2)
          v41 = 0;
        if (v39 != 1)
          v40 = v41;
        if (*(_BYTE *)(v36 + 104))
          v42 = v40;
        else
          v42 = v38 != 0;
        v43 = *(void **)(v91 + 136);
        swift_retain();
        v85 = v37;
        sub_23AAAE478(v37, v38, v39);
        if (objc_sync_enter(v43))
          sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v43);
        v44 = v38;
        LODWORD(v86) = v42;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v43))
          sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v43);
        swift_release();
        v35 = v88;
        swift_beginAccess();
        sub_23AD4332C(v35 + 48, (uint64_t)aBlock);
        v45 = v85;
        v87 = sub_23AF940CC(v87);
        v47 = v46;
        sub_23AAAEE10(v45, v44, v39);
        sub_23AD43374((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        v48 = (id)((v47 & 1) != 0 ? -2 : v87);
        objc_msgSend(v30, sel_setItemPendingScanningProviderEnumerationStatus_, v48);
        objc_msgSend(v30, sel_setItemPendingScanningProviderHasMultiplePagesEnumeration_, v86);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_setItemPendingScanningProviderEnumerationStatus_, -1);
        v35 = 0;
      }
      aBlock[0] = v90;
      v49 = ((uint64_t (*)(id *))(*v13)[31])(aBlock);
      if (v6)
        break;
      v50 = v49;
      if (!v49)
        goto LABEL_34;
      if ((objc_msgSend(v89, sel_longAtIndex_, 2) & 0x10) != 0)
      {
        v53 = *(void **)(v50 + 88);
        v52 = *(void **)(v50 + 96);
        v54 = *(unsigned __int8 *)(v50 + 104);
        v55 = *(void **)(v91 + 136);
        swift_retain_n();
        v88 = (uint64_t)v52;
        sub_23AAAE478(v53, v52, v54);
        if (!objc_sync_enter(v55))
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          if (!objc_sync_exit(v55))
          {
            swift_release_n();
            swift_beginAccess();
            sub_23AD4332C(v50 + 48, (uint64_t)aBlock);
            __asm { BR              X9 }
          }
          sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v55);
        }
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v55);
      }
      v86 = 0;
      v51 = v30;
      objc_msgSend(v51, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, -1);

      swift_release();
LABEL_41:
      v56 = v91;
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildren_, 0);
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildrenPendingCreation_, 0);
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildrenFailingCreation_, 0);
      v57 = *(void **)(v56 + qword_2542EE110);
      v58 = swift_allocObject();
      v59 = v90;
      *(_QWORD *)(v58 + 16) = v90;
      v60 = (_QWORD *)swift_allocObject();
      v60[2] = sub_23AF949F4;
      v60[3] = v58;
      v91 = v58;
      aBlock[4] = sub_23AA698D4;
      aBlock[5] = v60;
      aBlock[0] = (id)MEMORY[0x24BDAC760];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_23AA9432C;
      aBlock[3] = &block_descriptor_6_0;
      v61 = _Block_copy(aBlock);
      v87 = (uint64_t)v59;
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      v6 = objc_msgSend(v57, sel_fetchSwift_error_, v61, aBlock);
      _Block_release(v61);
      v62 = aBlock[0];
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        goto LABEL_65;
      if (!v6)
      {
        v6 = (id)sub_23B1C587C();

        swift_willThrow();
        swift_release();
        v16 = sub_23AF949F4;
        v18 = v96;
        v17 = v91;
        goto LABEL_5;
      }
      v88 = v35;
      if (!objc_msgSend(v6, sel_next))
      {
LABEL_54:
        v72 = v89;
        v73 = v86;
        v74 = sub_23AAA43E4(v72, 3);
        if (v73)
        {

          swift_release();
          v18 = v96;
        }
        else
        {
          v76 = v74;
          v77 = v75;

          v78 = v30;
          v79 = v94;
          dispatch_group_enter(v94);
          v80 = swift_allocObject();
          v90 = 0;
          v81 = v80;
          *(_QWORD *)(v80 + 16) = v78;
          *(_QWORD *)(v80 + 24) = v79;
          v82 = v78;
          v83 = v79;
          v18 = v96;
          sub_23AC9AE2C(v76, v77, (uint64_t)sub_23AF94A0C, v81);

          swift_release();
          swift_release();
        }
        v28 = v95;
        swift_release();
        goto LABEL_9;
      }
      v13 = (uint64_t (***)(id *, uint64_t))&selRef_url;
      v12 = &selRef_defaultManager;
      while (1)
      {
        v67 = (void *)MEMORY[0x23B8601A8]();
        v31 = v30;
        v68 = (char *)objc_msgSend((id)v31, sel_itemPendingScanningProviderNumberOfChildren);
        if (__OFADD__(v68, 1))
          break;
        objc_msgSend((id)v31, sel_setItemPendingScanningProviderNumberOfChildren_, v68 + 1);

        if (objc_msgSend(v6, sel_isNullAtIndex_, 0))
        {
          v69 = objc_msgSend(v6, sel_isNullAtIndex_, 1);
          v70 = (id)v31;
          v31 = (unint64_t)v70;
          if (v69)
          {
            v71 = (char *)objc_msgSend(v70, sel_itemPendingScanningProviderNumberOfChildrenPendingCreation);
            v65 = v71 + 1;
            if (__OFADD__(v71, 1))
              goto LABEL_61;
            v66 = &selRef_setItemPendingScanningProviderNumberOfChildrenPendingCreation_;
          }
          else
          {
            v64 = (char *)objc_msgSend(v70, sel_itemPendingScanningProviderNumberOfChildrenFailingCreation);
            v65 = v64 + 1;
            if (__OFADD__(v64, 1))
              goto LABEL_60;
            v66 = &selRef_setItemPendingScanningProviderNumberOfChildrenFailingCreation_;
          }
          objc_msgSend((id)v31, *v66, v65);

        }
        objc_autoreleasePoolPop(v67);
        if ((objc_msgSend(v6, sel_next) & 1) == 0)
          goto LABEL_54;
      }
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain();
      v32 = sub_23B1C7088();
      swift_bridgeObjectRelease();
    }

LABEL_34:
    v86 = 0;
    objc_msgSend(v30, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, 0);
    goto LABEL_41;
  }

  swift_bridgeObjectRelease();
  v16 = 0;
  v17 = 0;
  v18 = v96;
LABEL_5:
  v19 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v20 = v6;
  v21 = sub_23B1C5E40();
  v22 = sub_23B1C6AA0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v90 = 0;
    v89 = v16;
    v24 = (uint8_t *)v23;
    v25 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v24 = 138412290;
    v91 = v17;
    swift_getErrorValue();
    v26 = sub_23B0D9CF0(v98);
    aBlock[0] = v26;
    sub_23B1C6CBC();
    *v25 = v26;

    _os_log_impl(&dword_23AA66000, v21, v22, "Error gathering telemetry for scanning provider %@", v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v25, -1, -1);
    v27 = v24;
    v16 = v89;
    MEMORY[0x23B8614BC](v27, -1, -1);

  }
  else
  {

  }
  v28 = v95;
  v29 = v94;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v97, v93);
  sub_23AAB7948((uint64_t)v16);

  v30 = 0;
LABEL_9:
  *v28 = v30;

}

uint64_t sub_23AF93A9C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v11 = a1;
  v1 = sub_23B1C6428();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  v12 = 5;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = 26;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = 1;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = 8;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = 1;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C63E0();
  sub_23B1C641C();
  v5 = sub_23B1C63EC();
  v7 = v6;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v7 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v9 = (void *)sub_23B1C5AA4();
    sub_23AAA3E18(v5, v7);
    v10 = objc_msgSend(v11, sel_bindObjectParameter_, v9);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v13;
  }
  return result;
}

uint64_t sub_23AF93DA4()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23AF93F00()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23AF93FBC()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

void sub_23AF94074(void *a1, uint64_t a2, void *a3, void *a4)
{
  sub_23AF942D8(a1, a2, a3, a4, &block_descriptor_46_0, (void (*)(id, id, uint64_t, id, id, id))sub_23AD3E684);
}

uint64_t sub_23AF940CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_23AF940F0 + 4 * *((unsigned __int8 *)asc_23B1DFDB8 + a1)))();
}

uint64_t sub_23AF940F0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  return ((uint64_t (*)(_QWORD, _QWORD))((char *)sub_23AF94114
                                                 + 4 * *((unsigned __int8 *)&asc_23B1DFDB8[2] + a4 + 1)))(0, 0);
}

uint64_t sub_23AF94114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t *__return_ptr, _OWORD *);
  _QWORD v5[6];

  MEMORY[0x24BDAC7A8](a1);
  v5[2] = v1;
  return sub_23ADF97F8((uint64_t (*)(_OWORD *))sub_23AF94AF0, (uint64_t)v5, v2, v3) & 1;
}

uint64_t sub_23AF94188()
{
  return 5;
}

uint64_t sub_23AF94194()
{
  return 0;
}

uint64_t sub_23AF941A0()
{
  return 2;
}

uint64_t sub_23AF941AC()
{
  return 3;
}

uint64_t sub_23AF941B8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  if (a2 | a1)
    return 5;
  else
    return 4;
}

void sub_23AF941D0(void *a1, uint64_t a2, void *a3, void *a4)
{
  sub_23AF94550(a1, a2, a3, a4, &block_descriptor_53, (void (*)(id, id, uint64_t, id, id))sub_23AD3E6A0);
}

void sub_23AF94228(void *a1, uint64_t a2, void *a3, void *a4)
{
  sub_23AF947BC(a1, a2, a3, a4, &block_descriptor_81, (void (*)(id, id, uint64_t, id, id))sub_23AD3E6BC);
}

void sub_23AF94280(void *a1, uint64_t a2, void *a3, void *a4)
{
  sub_23AF942D8(a1, a2, a3, a4, &block_descriptor_39_0, (void (*)(id, id, uint64_t, id, id, id))sub_23AD3E6D8);
}

void sub_23AF942D8(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id, id))
{
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v11 = *(void **)(a2 + qword_2542EE110);
  aBlock[4] = sub_23AF8E8FC;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = a5;
  v12 = _Block_copy(aBlock);
  v13 = a3;
  v14 = a4;
  swift_release();
  aBlock[0] = 0;
  v15 = objc_msgSend(v11, sel_fetchSwift_error_, v12, aBlock);
  _Block_release(v12);
  v16 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v15)
  {
    v17 = v13;
    v18 = v14;
    v19 = v15;
    swift_retain();
    v20 = a1;
    a6(v19, v19, a2, v20, v17, v18);

    sub_23AA9F52C(0, &qword_2569E77B8);
    v21 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setItemsPendingReconciliation_, v21);

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
}

void sub_23AF944F8(void *a1, uint64_t a2, void *a3, void *a4)
{
  sub_23AF94550(a1, a2, a3, a4, &block_descriptor_13_0, (void (*)(id, id, uint64_t, id, id))sub_23AD3E8AC);
}

void sub_23AF94550(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id))
{
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v11 = *(void **)(a2 + qword_2542EE110);
  aBlock[4] = sub_23AF8E900;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = a5;
  v12 = _Block_copy(aBlock);
  v13 = a3;
  v14 = a4;
  swift_release();
  aBlock[0] = 0;
  v15 = objc_msgSend(v11, sel_fetchSwift_error_, v12, aBlock);
  _Block_release(v12);
  v16 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v15)
  {
    v17 = v13;
    v18 = v14;
    v19 = v15;
    swift_retain();
    a6(v19, v19, a2, v17, v18);

    sub_23AA9F52C(0, &qword_2569E77B0);
    v20 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setItemsPendingScanningDisk_, v20);

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
}

void sub_23AF94764(void *a1, uint64_t a2, void *a3, void *a4)
{
  sub_23AF947BC(a1, a2, a3, a4, &block_descriptor_25, (void (*)(id, id, uint64_t, id, id))sub_23AD3E8C8);
}

void sub_23AF947BC(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id))
{
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v11 = *(void **)(a2 + qword_2542EE110);
  aBlock[4] = sub_23AF8E904;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = a5;
  v12 = _Block_copy(aBlock);
  v13 = a3;
  v14 = a4;
  swift_release();
  aBlock[0] = 0;
  v15 = objc_msgSend(v11, sel_fetchSwift_error_, v12, aBlock);
  _Block_release(v12);
  v16 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v15)
  {
    v17 = v13;
    v18 = v14;
    v19 = v15;
    swift_retain();
    a6(v19, v19, a2, v17, v18);

    sub_23AA9F52C(0, &qword_2569E77A8);
    v20 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setItemsPendingScanningProvider_, v20);

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
}

uint64_t sub_23AF949D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AF949F4(void *a1)
{
  return sub_23AF93A9C(a1);
}

uint64_t sub_23AF949FC()
{
  return swift_deallocObject();
}

void sub_23AF94A0C(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23ACBC940(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_23AF94A14(_QWORD *a1)
{
  uint64_t v1;

  return sub_23AF8E908(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23AF94A30()
{
  return swift_deallocObject();
}

uint64_t sub_23AF94A40(void *a1)
{
  uint64_t v1;

  return sub_23AF91A2C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_23AF94A4C()
{
  return swift_deallocObject();
}

uint64_t sub_23AF94A5C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AF94A88(void *a1)
{
  return sub_23AF91DD8(a1);
}

uint64_t sub_23AF94A90()
{
  return swift_deallocObject();
}

void sub_23AF94AA0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23AC9AD58(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_23AF94AA8()
{
  return swift_deallocObject();
}

uint64_t sub_23AF94AB8()
{
  return swift_deallocObject();
}

void sub_23AF94AC8(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23AC9B02C(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_23AF94AD0()
{
  return swift_deallocObject();
}

uint64_t sub_23AF94AE0()
{
  return swift_deallocObject();
}

uint64_t sub_23AF94AF0(_QWORD *a1)
{
  return sub_23AF94A14(a1) & 1;
}

unint64_t sub_23AF94B8C()
{
  return 0xD0000000000000BCLL;
}

unint64_t sub_23AF94BA8()
{
  return 0xD000000000000030;
}

unint64_t sub_23AF94BC4()
{
  return 0xD000000000000079;
}

uint64_t sub_23AF94BE0(_QWORD *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14[4];
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5B88();
  v10 = a1[3];
  v14[0] = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  v11 = (void *)sub_23B1C5B64();
  v12 = objc_msgSend(a2, sel_stringFromDate_, v11);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AE2E2DC();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v14[1] = *(_QWORD *)(v3 + 32);
  v14[2] = 114;
  v14[3] = 0xE100000000000000;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(v15, v16, v10, v14[0]);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23AF94E74()
{
  return sub_23AF94F2C(sub_23AF94B8C, &block_descriptor_32);
}

uint64_t sub_23AF94ED0()
{
  return sub_23AF94F2C(sub_23AF94BA8, &block_descriptor_29_0);
}

uint64_t sub_23AF94F2C(void *a1, void *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;
  uint64_t result;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *(void **)(v2 + 16);
  aBlock[4] = a1;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = a2;
  v4 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v5 = objc_msgSend(v3, sel_executeSwift_error_, v4, aBlock);
  _Block_release(v4);
  v6 = aBlock[0];
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  if (!v5)
  {
    sub_23B1C587C();

    return swift_willThrow();
  }
  return result;
}

void sub_23AF9504C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id aBlock[6];
  _QWORD v31[3];
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v8 = *(void **)(v3 + 16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = sub_23AF9649C;
  v10[3] = v9;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v10;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_26;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  aBlock[0] = 0;
  v12 = objc_msgSend(v8, sel_fetchSwift_error_, v11, aBlock);
  _Block_release(v11);
  v13 = aBlock[0];
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
  if (!v12)
  {
    sub_23B1C587C();

    swift_willThrow();
    goto LABEL_7;
  }
  if (!objc_msgSend(v12, sel_next))
  {
    swift_release();

    v24 = 0;
    v22 = 0;
    v23 = 0;
    v20 = 0;
    v21 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    goto LABEL_9;
  }
  sub_23AF961C4(v12, (uint64_t)v31);
  if (v4)
  {
LABEL_7:
    swift_release();
    return;
  }
  v28 = v31[1];
  v29 = v31[0];
  v26 = v32;
  v27 = v31[2];
  v14 = v34;
  v25 = v33;
  v15 = v35;
  v16 = v36;
  v17 = v37;
  v18 = v38;
  v19 = v39;
  swift_release();
  v21 = v25;
  v20 = v26;
  v23 = v27;
  v22 = v28;
  v24 = v29;
LABEL_9:
  *a3 = v24;
  a3[1] = v22;
  a3[2] = v23;
  a3[3] = v20;
  a3[4] = v21;
  a3[5] = v14;
  a3[6] = v15;
  a3[7] = v16;
  a3[8] = v17;
  a3[9] = v18;
  a3[10] = v19;
}

uint64_t sub_23AF952C0()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23AF95360(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  void *v10;
  id v16;
  void *v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  unsigned int v29;
  id v30;
  char v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v39;
  uint64_t v40;
  id aBlock[6];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[11];
  _BYTE v45[8];
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v16 = (id)FPOSVersion();
  if (v16)
  {
    v17 = v16;
    v39 = sub_23B1C63E0();
    v40 = v18;

  }
  else
  {
    v39 = 0;
    v40 = 0;
  }
  v42 = a7;
  v43 = a8;
  swift_bridgeObjectRetain();
  if ((a9 & 1) == 0)
  {
    sub_23AF9504C(1129530692, 0xE400000000000000, v44);
    if (v10)
    {

      v19 = 0;
      goto LABEL_25;
    }
    sub_23AF96454((uint64_t)v44, (uint64_t)v45);
    if (v47)
    {
      if (v40)
      {
        v20 = v48;
        v21 = v49;
        v22 = v50;
        v23 = v51;
        v34 = v53;
        v35 = v52;
        if (v46 == v39 && v40 == v47)
        {
          v24 = a1;
        }
        else
        {
          v33 = v48;
          if ((sub_23B1C7388() & 1) == 0)
            goto LABEL_23;
          v24 = a1;
          v20 = v33;
        }
        if (v20 == v24 && v21 == a2 && (v22 == a3 && v23 == a4 || (sub_23B1C7388() & 1) != 0))
        {
          if (v35 == a5 && v34 == a6)
          {
            sub_23ACF9524(v44);
LABEL_32:
            swift_bridgeObjectRelease();
            v19 = 0;
            goto LABEL_28;
          }
          v32 = sub_23B1C7388();
          sub_23ACF9524(v44);
          if ((v32 & 1) != 0)
            goto LABEL_32;
LABEL_24:
          v42 = 0;
          v43 = 0;
          swift_bridgeObjectRelease();
          v19 = 1;
          goto LABEL_25;
        }
      }
LABEL_23:
      sub_23ACF9524(v44);
      goto LABEL_24;
    }
  }
  v19 = 0;
LABEL_25:
  v25 = *(void **)(v9 + 16);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v39;
  *(_QWORD *)(v26 + 24) = v40;
  *(_DWORD *)(v26 + 32) = a1;
  *(_QWORD *)(v26 + 40) = a2;
  *(_QWORD *)(v26 + 48) = a3;
  *(_QWORD *)(v26 + 56) = a4;
  *(_QWORD *)(v26 + 64) = a5;
  *(_QWORD *)(v26 + 72) = a6;
  *(_QWORD *)(v26 + 80) = &v42;
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = sub_23AF96410;
  v27[3] = v26;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v27;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_16;
  v28 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v29 = objc_msgSend(v25, sel_executeSwift_error_, v28, aBlock);
  _Block_release(v28);
  v30 = aBlock[0];
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v28 & 1) != 0)
    __break(1u);
  if (!v29)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    return v19 & 1;
  }
  swift_release();
LABEL_28:
  swift_bridgeObjectRelease();
  return v19 & 1;
}

uint64_t sub_23AF9570C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t result;
  _QWORD v33[4];
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v33[2] = a7;
  v33[3] = a8;
  v33[1] = a6;
  v15 = sub_23B1C5BDC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = 0;
  v35 = 0xE000000000000000;
  sub_23B1C6EFC();
  v37 = v34;
  v38 = v35;
  sub_23B1C64F4();
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v21 = v20 * 1000000000.0;
  if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v36 = MEMORY[0x24BEE1768];
  v34 = (uint64_t)v21;
  sub_23AA94C90((uint64_t)&v34);
  v23 = v22;
  sub_23AA94C08((uint64_t)&v34);
  if (!v23)
  {
LABEL_12:
    result = sub_23B1C704C();
    __break(1u);
    return result;
  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AC391AC(a2, a3);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v24 = objc_msgSend(a1, sel_bindUnsignedIntegerParameter_, a4);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v25 = objc_msgSend(a1, sel_bindUnsignedLongParameter_, a5);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v26 = (void *)sub_23B1C63BC();
  v27 = objc_msgSend(a1, sel_bindStringParameter_, v26);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v28 = (void *)sub_23B1C63BC();
  v29 = objc_msgSend(a1, sel_bindStringParameter_, v28);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (*(_QWORD *)(a10 + 8))
  {
    swift_bridgeObjectRetain();
    v30 = sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = 0;
  }
  v31 = objc_msgSend(a1, sel_bindObjectParameter_, v30);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v37;
}

void sub_23AF95B5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id aBlock;
  uint64_t v18;
  id (*v19)(uint64_t, void *);
  void *v20;
  unint64_t (*v21)();
  uint64_t v22;
  _BYTE v23[72];
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v25 = *MEMORY[0x24BDAC8D0];
  v5 = *(void **)(v1 + 16);
  v21 = sub_23AF94BC4;
  v22 = 0;
  aBlock = (id)MEMORY[0x24BDAC760];
  v18 = 1107296256;
  v19 = sub_23AA9432C;
  v20 = &block_descriptor_6_1;
  v6 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v7 = objc_msgSend(v5, sel_fetchSwift_error_, v6, &aBlock);
  _Block_release(v6);
  v8 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v7)
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    v10 = (void *)sub_23B1C63BC();
    objc_msgSend(v9, sel_setDateFormat_, v10);

    if (objc_msgSend(v7, sel_next))
    {
      v15 = v9;
      while (1)
      {
        v11 = (void *)MEMORY[0x23B8601A8]();
        v12 = v7;
        sub_23AF961C4(v12, (uint64_t)v23);
        if (v3)
          break;
        sub_23AF94BE0(a1, v9);
        if (v24)
        {
          swift_bridgeObjectRetain();
          sub_23AF96388((uint64_t)v23);
          v13 = a1[3];
          v16 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v13);
          aBlock = 0;
          v18 = 0xE000000000000000;
          sub_23B1C6EFC();
          swift_bridgeObjectRelease();
          aBlock = (id)0xD000000000000011;
          v18 = 0x800000023B210940;
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          v14 = v13;
          v9 = v15;
          v3 = 0;
          sub_23AEBD130((uint64_t)aBlock, v18, v14, v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_23AF96388((uint64_t)v23);
        }
        objc_autoreleasePoolPop(v11);
        if ((objc_msgSend(v12, sel_next) & 1) == 0)
          goto LABEL_10;
      }
      objc_autoreleasePoolPop(v11);

    }
    else
    {
LABEL_10:

    }
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
}

uint64_t sub_23AF95E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int8 v8;
  void *v9;
  id v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = *(void **)(v2 + 16);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = (_QWORD *)swift_allocObject();
  v8 = v7;
  v7[2] = sub_23AF961AC;
  v7[3] = v6;
  aBlock[4] = sub_23AA698D4;
  aBlock[5] = v7;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_26;
  v9 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  aBlock[0] = 0;
  v10 = objc_msgSend(v5, sel_fetchSwift_error_, v9, aBlock);
  _Block_release(v9);
  v11 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v10)
  {
    v8 = objc_msgSend(v10, sel_next);
    swift_release();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
  }
  return v8 & 1;
}

unint64_t sub_23AF96018(void *a1)
{
  void *v2;
  id v3;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_23B1C63BC();
  v3 = objc_msgSend(a1, sel_bindStringParameter_, v2);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD000000000000028;
}

uint64_t sub_23AF960E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLHistoryTable()
{
  return objc_opt_self();
}

uint64_t sub_23AF9613C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23AF96148()
{
  return sub_23AF94E74();
}

uint64_t sub_23AF96168()
{
  return sub_23AF94ED0();
}

uint64_t sub_23AF96188()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23AF961AC(void *a1)
{
  return sub_23AF96018(a1);
}

uint64_t sub_23AF961B4()
{
  return swift_deallocObject();
}

void sub_23AF961C4(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v24 = objc_msgSend(a1, sel_longAtIndex_, 0);
  v4 = objc_msgSend(a1, sel_stringAtIndex_, 1);
  v5 = sub_23B1C63E0();
  v22 = v6;
  v23 = v5;

  v7 = objc_msgSend(a1, sel_unsignedIntAtIndex_, 2);
  v8 = objc_msgSend(a1, sel_unsignedLongAtIndex_, 3);
  v9 = objc_msgSend(a1, sel_stringAtIndex_, 4);
  v10 = sub_23B1C63E0();
  v20 = v11;
  v21 = v10;

  v12 = objc_msgSend(a1, sel_stringAtIndex_, 5);
  v13 = sub_23B1C63E0();
  v15 = v14;

  if (objc_msgSend(a1, sel_isNullAtIndex_, 6))
  {

    v16 = 0;
    v17 = 0;
  }
  else
  {
    v18 = objc_msgSend(a1, sel_stringAtIndex_, 6);
    v16 = sub_23B1C63E0();
    v17 = v19;

  }
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v23;
  *(_QWORD *)(a2 + 16) = v22;
  *(_DWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 48) = v20;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 72) = v16;
  *(_QWORD *)(a2 + 80) = v17;
}

uint64_t sub_23AF96388(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23AF963DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AF96410(void *a1)
{
  uint64_t v1;

  return sub_23AF9570C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned int *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_23AF96444()
{
  return swift_deallocObject();
}

uint64_t sub_23AF96454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E4958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AF9649C()
{
  return sub_23AF952C0();
}

uint64_t sub_23AF964A4()
{
  return swift_deallocObject();
}

uint64_t destroy for SQLHistoryTable.Entry()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v3;
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLHistoryTable.Entry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLHistoryTable.Entry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLHistoryTable.Entry()
{
  return &type metadata for SQLHistoryTable.Entry;
}

uint64_t sub_23AF9679C(char a1, unsigned __int8 a2, unsigned __int8 a3)
{
  uint64_t v3;

  return sub_23AEFF0F4(*(_QWORD *)(v3 + 208), *(_QWORD *)(v3 + 216), 0, a1, a2, a3);
}

BOOL sub_23AF967B4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t sub_23AF967C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[16];
  _BYTE v5[8];
  _BYTE v6[8];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  sub_23AA724E8(v0 + 40, (uint64_t)v6, &qword_2542E1EB8);
  sub_23AA724E8((uint64_t)v6, (uint64_t)&v7, &qword_2542E1EB8);
  if (v7 && *(_QWORD *)(v7 + 16))
  {
    v9 = 980510012;
    v10 = 0xE400000000000000;
    MEMORY[0x23B85F02C]();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
  }
  sub_23AA724E8(v0 + 16, (uint64_t)v5, &qword_2542E1EB8);
  sub_23AA724E8((uint64_t)v5, (uint64_t)&v8, &qword_2542E1EB8);
  if (v8 && *(_QWORD *)(v8 + 16))
  {
    v9 = 980510012;
    v10 = 0xE400000000000000;
    MEMORY[0x23B85F02C]();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  sub_23AA724E8(v0 + 48, (uint64_t)v4, (uint64_t *)&unk_2542E7460);
  sub_23AA724E8((uint64_t)v4, (uint64_t)&v9, (uint64_t *)&unk_2542E7460);
  if (v10)
  {
    v1 = (void *)sub_23B1C63BC();
    v2 = objc_msgSend(v1, sel_fp_obfuscatedFilename);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
  }
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7028();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7028();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23AF96AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  _BYTE v7[16];
  _BYTE v8[8];
  _BYTE v9[8];
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v1 = v0;
  sub_23AA724E8(v0 + 72, (uint64_t)v9, &qword_2542E1EB0);
  sub_23AA724E8((uint64_t)v9, (uint64_t)&v10, &qword_2542E1EB0);
  v2 = v10;
  if (v10 && *(_QWORD *)(v10 + 16))
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD0);
    MEMORY[0x23B85F02C](v2, v3);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
  }
  sub_23AA724E8(v1 + 32, (uint64_t)v8, &qword_2542E1EA8);
  sub_23AA724E8((uint64_t)v8, (uint64_t)&v11, &qword_2542E1EA8);
  if (v11 && *(_QWORD *)(v11 + 16))
  {
    MEMORY[0x23B85F02C](v11, &type metadata for VFSVersion);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  sub_23AA724E8(v1 + 80, (uint64_t)v7, (uint64_t *)&unk_2542E7460);
  sub_23AA724E8((uint64_t)v7, (uint64_t)v12, (uint64_t *)&unk_2542E7460);
  if (v12[1])
  {
    v4 = (void *)sub_23B1C63BC();
    v5 = objc_msgSend(v4, sel_fp_obfuscatedFilename, 0x3A65636976656420, 0xE800000000000000);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
  }
  sub_23B1C6EFC();
  sub_23B1C64F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD0);
  sub_23B1C7028();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7028();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

id sub_23AF96DC8()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone(MEMORY[0x24BDC8398]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_23B1C66F8();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_23B1C66F8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_initWithKeys_values_, v1, v2);

  return v3;
}

uint64_t sub_23AF96E78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  _BYTE v55[16];
  _BYTE v56[8];
  _BYTE v57[16];
  _BYTE v58[8];
  _BYTE v59[16];
  _BYTE v60[16];
  _BYTE v61[16];
  id v62;
  _BYTE v63[16];
  _BYTE v64[16];
  _BYTE v65[16];
  id v66;
  id v67;
  _BYTE v68[8];
  _BYTE v69[16];
  _OWORD v70[4];
  _QWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  uint64_t v78;
  _QWORD v79[2];
  _QWORD v80[2];
  _QWORD v81[2];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[3];

  v1 = v0;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AA724E8(v0 + 160, (uint64_t)v69, qword_2542E72C8);
  sub_23AA724E8((uint64_t)v69, (uint64_t)v71, qword_2542E72C8);
  if (v71[1])
  {
    *(_QWORD *)&v70[0] = 574254112;
    *((_QWORD *)&v70[0] + 1) = 0xE400000000000000;
    v2 = (void *)sub_23B1C63BC();
    v3 = objc_msgSend(v2, sel_fp_obfuscatedFilename);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v1 + 176) & 1) != 0)
    sub_23B1C64F4();
  if ((*(_BYTE *)(v1 + 9) & 1) != 0)
  {
    sub_23B1C64F4();
    v4 = sub_23AF983F4(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v6 = v4[2];
    v5 = v4[3];
    if (v6 >= v5 >> 1)
      v4 = sub_23AF983F4((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
    v4[2] = v6 + 1;
    v7 = &v4[2 * v6];
    v7[4] = 0x646564616F6C7075;
    v7[5] = 0xE800000000000000;
    if ((*(_BYTE *)(v1 + 8) & 1) == 0)
      goto LABEL_18;
    goto LABEL_13;
  }
  if ((*(_BYTE *)(v1 + 8) & 1) == 0)
  {
    sub_23AA724E8(v1 + 16, (uint64_t)v68, &qword_2542E7700);
    sub_23AA724E8((uint64_t)v68, (uint64_t)&v72, &qword_2542E7700);
    if (!v72)
      goto LABEL_25;
  }
  sub_23B1C64F4();
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
  {
LABEL_13:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_23AF983F4(0, v4[2] + 1, 1, v4);
    v9 = v4[2];
    v8 = v4[3];
    if (v9 >= v8 >> 1)
      v4 = sub_23AF983F4((_QWORD *)(v8 > 1), v9 + 1, 1, v4);
    v4[2] = v9 + 1;
    v10 = &v4[2 * v9];
    v10[4] = 0x6E6964616F6C7075;
    v10[5] = 0xE900000000000067;
  }
LABEL_18:
  sub_23AA724E8(v1 + 16, (uint64_t)&v67, &qword_2542E7700);
  sub_23AA724E8((uint64_t)&v67, (uint64_t)&v73, &qword_2542E7700);
  v11 = v73;
  if (v73)
  {
    *(_QWORD *)&v70[0] = 0;
    *((_QWORD *)&v70[0] + 1) = 0xE000000000000000;
    sub_23ADF1BFC(&v67);
    sub_23B1C64F4();
    v85[0] = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    sub_23B1C7028();
    sub_23B1C64F4();
    v12 = v70[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_23AF983F4(0, v4[2] + 1, 1, v4);
    v14 = v4[2];
    v13 = v4[3];
    if (v14 >= v13 >> 1)
      v4 = sub_23AF983F4((_QWORD *)(v13 > 1), v14 + 1, 1, v4);
    v4[2] = v14 + 1;
    *(_OWORD *)&v4[2 * v14 + 4] = v12;
    sub_23AEB4600(&v67);
  }
  *(_QWORD *)&v70[0] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
  sub_23AB5E978();
  sub_23B1C6338();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
LABEL_25:
  sub_23AA724E8(v1 + 24, (uint64_t)&v66, &qword_2542E7700);
  sub_23AA724E8((uint64_t)&v66, (uint64_t)&v74, &qword_2542E7700);
  v15 = v74;
  if (v74)
  {
    *(_QWORD *)&v70[0] = 0;
    *((_QWORD *)&v70[0] + 1) = 0xE000000000000000;
    sub_23ADF1BFC(&v66);
    sub_23B1C64F4();
    v85[0] = v15;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    sub_23B1C7028();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEB4600(&v66);
  }
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    sub_23B1C64F4();
    if ((*(_BYTE *)(v1 + 33) & 1) != 0)
      sub_23B1C64F4();
    if ((*(_BYTE *)(v1 + 34) & 1) != 0)
    {
      sub_23B1C64F4();
    }
    else
    {
      *(_QWORD *)&v70[0] = 3832162;
      *((_QWORD *)&v70[0] + 1) = 0xE300000000000000;
      sub_23AA724E8(v1 + 40, (uint64_t)v65, (uint64_t *)&unk_2542E7460);
      sub_23AA724E8((uint64_t)v65, (uint64_t)v75, (uint64_t *)&unk_2542E7460);
      if (v75[1])
      {
        v16 = (void *)sub_23B1C63BC();
        v17 = objc_msgSend(v16, sel_fp_obfuscatedFilename);

        sub_23B1C63E0();
      }
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
    }
    if ((*(_BYTE *)(v1 + 72) & 1) != 0)
    {
      sub_23B1C64F4();
    }
    else
    {
      *(_QWORD *)&v70[0] = 0x3A726F7469646520;
      *((_QWORD *)&v70[0] + 1) = 0xE800000000000000;
      sub_23AA724E8(v1 + 56, (uint64_t)v64, (uint64_t *)&unk_2542E7460);
      sub_23AA724E8((uint64_t)v64, (uint64_t)v76, (uint64_t *)&unk_2542E7460);
      if (v76[1])
      {
        v18 = (void *)sub_23B1C63BC();
        v19 = objc_msgSend(v18, sel_fp_obfuscatedFilename);

        sub_23B1C63E0();
      }
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
    }
    sub_23AA724E8(v1 + 80, (uint64_t)v63, (uint64_t *)&unk_2542E7460);
    sub_23AA724E8((uint64_t)v63, (uint64_t)v77, (uint64_t *)&unk_2542E7460);
    if (v77[1])
    {
      *(_QWORD *)&v70[0] = 3829792;
      *((_QWORD *)&v70[0] + 1) = 0xE300000000000000;
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
    }
    sub_23AA724E8(v1 + 96, (uint64_t)&v62, &qword_2569E77C0);
    sub_23AA724E8((uint64_t)&v62, (uint64_t)&v78, &qword_2569E77C0);
    if (v78)
    {
      *(_QWORD *)&v70[0] = 979985184;
      *((_QWORD *)&v70[0] + 1) = 0xE400000000000000;
      sub_23B1C63E0();
      sub_23AF9A600(&v62);
      v20 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v21 = objc_msgSend(v20, sel_fp_obfuscatedFilename);

      sub_23B1C63E0();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AF9A628(&v62);
    }
    sub_23B1C64F4();
  }
  if ((*(_BYTE *)(v1 + 104) & 1) != 0)
  {
    sub_23B1C64F4();
    sub_23AA724E8(v1 + 112, (uint64_t)v61, (uint64_t *)&unk_2542E7460);
    sub_23AA724E8((uint64_t)v61, (uint64_t)v79, (uint64_t *)&unk_2542E7460);
    if (v79[1])
    {
      *(_QWORD *)&v70[0] = 0x3A656C646E7562;
      *((_QWORD *)&v70[0] + 1) = 0xE700000000000000;
      v22 = (void *)sub_23B1C63BC();
      v23 = objc_msgSend(v22, sel_fp_obfuscatedDotSeparatedComponents);

      sub_23B1C63E0();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
    }
    sub_23AA724E8(v1 + 128, (uint64_t)v60, (uint64_t *)&unk_2542E7460);
    sub_23AA724E8((uint64_t)v60, (uint64_t)v80, (uint64_t *)&unk_2542E7460);
    if (v80[1])
    {
      *(_QWORD *)&v70[0] = 0x656E6961746E6F63;
      *((_QWORD *)&v70[0] + 1) = 0xEA00000000003A72;
      v24 = (void *)sub_23B1C63BC();
      v25 = objc_msgSend(v24, sel_fp_obfuscatedDotSeparatedComponents);

      sub_23B1C63E0();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
    }
    sub_23AA724E8(v1 + 144, (uint64_t)v59, (uint64_t *)&unk_2542E7460);
    sub_23AA724E8((uint64_t)v59, (uint64_t)v81, (uint64_t *)&unk_2542E7460);
    if (v81[1])
    {
      *(_QWORD *)&v70[0] = 0x3A79616C70736964;
      *((_QWORD *)&v70[0] + 1) = 0xE900000000000022;
      v26 = (void *)sub_23B1C63BC();
      v27 = objc_msgSend(v26, sel_fp_obfuscatedFilename);

      sub_23B1C63E0();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
    }
    if ((*(_BYTE *)(v1 + 105) & 1) != 0)
      sub_23B1C64F4();
    sub_23B1C64F4();
  }
  sub_23AA724E8(v1 + 184, (uint64_t)v58, &qword_2542E76D0);
  sub_23AA724E8((uint64_t)v58, (uint64_t)&v82, &qword_2542E76D0);
  if (v82 && *(_QWORD *)(v82 + 16))
  {
    *(_QWORD *)&v70[0] = 0x3C3A6F63656420;
    *((_QWORD *)&v70[0] + 1) = 0xE700000000000000;
    v85[0] = v82;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
    sub_23AB5E978();
    sub_23B1C6338();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  sub_23AA724E8(v1 + 192, (uint64_t)v57, &qword_2542E76A0);
  sub_23AA724E8((uint64_t)v57, (uint64_t)&v83, &qword_2542E76A0);
  if (v83)
  {
    v28 = objc_allocWithZone(MEMORY[0x24BDC8398]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
    v30 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v28, sel_initWithKeys_values_, v29, v30);

    v32 = objc_msgSend(v31, sel_keys);
    v33 = sub_23B1C6704();

    v34 = *(_QWORD *)(v33 + 16);
    swift_bridgeObjectRelease();
    if (v34)
    {
      *(_QWORD *)&v70[0] = 0;
      *((_QWORD *)&v70[0] + 1) = 0xE000000000000000;
      sub_23B1C6EFC();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v70[0] = 0x666E497265737520;
      *((_QWORD *)&v70[0] + 1) = 0xEB000000003C3A6FLL;
      v35 = objc_msgSend(v31, sel_keys);
      v36 = sub_23B1C6704();

      v37 = *(_QWORD *)(v36 + 16);
      swift_bridgeObjectRelease();
      v85[0] = v37;
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23B1C64F4();

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  v38 = *(_QWORD *)(v1 + 208);
  if (v38 != 501)
  {
    if (v38)
    {
      *(_QWORD *)&v70[0] = 980443936;
      *((_QWORD *)&v70[0] + 1) = 0xE400000000000000;
      sub_23AEFED94(v38);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    if (!*(_QWORD *)(v1 + 216))
    {
      sub_23B1C64F4();
      goto LABEL_68;
    }
  }
  *(_QWORD *)&v70[0] = 980443936;
  *((_QWORD *)&v70[0] + 1) = 0xE400000000000000;
  sub_23AEFED94(v38);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AEFED94(*(_QWORD *)(v1 + 216));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
LABEL_67:
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
LABEL_68:
  sub_23AA724E8(v1 + 224, (uint64_t)v56, &qword_2542E76C0);
  sub_23AA724E8((uint64_t)v56, (uint64_t)&v84, &qword_2542E76C0);
  v39 = v84;
  if (v84)
  {
    v40 = *(_QWORD *)(v84 + 16);
    if (v40)
    {
      v85[0] = MEMORY[0x24BEE4AF8];
      sub_23AAB5A68(0, v40, 0);
      v41 = v85[0];
      v42 = (__int128 *)(v39 + 32);
      do
      {
        v43 = *v42;
        v44 = v42[1];
        v45 = v42[3];
        v70[2] = v42[2];
        v70[3] = v45;
        v70[0] = v43;
        v70[1] = v44;
        sub_23AC244C0((uint64_t *)v70);
        v46 = sub_23AF967C4();
        v48 = v47;
        sub_23AAA5CC8((uint64_t *)v70);
        v85[0] = v41;
        v50 = *(_QWORD *)(v41 + 16);
        v49 = *(_QWORD *)(v41 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_23AAB5A68(v49 > 1, v50 + 1, 1);
          v41 = v85[0];
        }
        *(_QWORD *)(v41 + 16) = v50 + 1;
        v51 = v41 + 16 * v50;
        *(_QWORD *)(v51 + 32) = v46;
        *(_QWORD *)(v51 + 40) = v48;
        v42 += 4;
        --v40;
      }
      while (v40);
      v85[0] = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
      sub_23AB5E978();
      sub_23B1C6338();
      swift_release();
      strcpy((char *)v85, " conflicts:<");
      BYTE5(v85[1]) = 0;
      HIWORD(v85[1]) = -5120;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
    }
  }
  sub_23AA724E8(v1 + 232, (uint64_t)v55, (uint64_t *)&unk_2542E7460);
  sub_23AA724E8((uint64_t)v55, (uint64_t)v85, (uint64_t *)&unk_2542E7460);
  if (v85[1])
  {
    v52 = (void *)sub_23B1C63BC();
    v53 = objc_msgSend(v52, sel_fp_obfuscatedFilename, 0x3A65636976656420, 0xE90000000000003CLL);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0x3A7061633CLL;
}

uint64_t sub_23AF98060(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3660);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AA84FB4();
  sub_23B1C7538();
  v14 = a2;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
  sub_23AA84F54((unint64_t *)&qword_2542E3620, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_23B1C72A4();
  if (!v3)
  {
    v14 = a3;
    v13 = 1;
    sub_23B1C72A4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23AF981C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AF9C1E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AF981EC()
{
  sub_23AA84FB4();
  return sub_23B1C7544();
}

uint64_t sub_23AF98214()
{
  sub_23AA84FB4();
  return sub_23B1C7550();
}

uint64_t sub_23AF9823C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23AF98060(a1, *v1, v1[1]);
}

uint64_t sub_23AF98254(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2 = *(_QWORD **)(a1 + 8);
  v3 = *(_QWORD **)(a2 + 8);
  if ((sub_23AF1B25C(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0)
    return sub_23AF1B25C(v2, v3);
  else
    return 0;
}

uint64_t sub_23AF9829C()
{
  return sub_23AF96E78();
}

void sub_23AF9830C()
{
  sub_23AFF3960("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/file-tree/item/types/ItemNonSyncableAttributes.swift", 136, 2, 235);
}

void sub_23AF98330()
{
  sub_23AFF3960("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/file-tree/item/types/ItemNonSyncableAttributes.swift", 136, 2, 239);
}

_QWORD *sub_23AF98354()
{
  _QWORD **v0;
  _QWORD *v1;
  _QWORD *result;

  v1 = *v0;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!(_DWORD)result)
  {
    result = sub_23AF983F4(result, v1[2] + 1, 1, v1);
    *v0 = result;
  }
  return result;
}

_QWORD *sub_23AF9839C(_QWORD *result)
{
  _QWORD **v1;
  unint64_t v2;

  v2 = (*v1)[3];
  if ((uint64_t)result + 1 > (uint64_t)(v2 >> 1))
  {
    result = sub_23AF983F4((_QWORD *)(v2 > 1), (int64_t)result + 1, 1, *v1);
    *v1 = result;
  }
  return result;
}

uint64_t sub_23AF983DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

_QWORD *sub_23AF983F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9ADEC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_23AF98500(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23AF98518(a1, a2, a3, a4, &qword_2542E55A0);
}

char *sub_23AF9850C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23AF98518(a1, a2, a3, a4, &qword_2569E5898);
}

char *sub_23AF98518(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9AEDC(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_23AF9860C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2110);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9AEDC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_23AF98704(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23AF98518(a1, a2, a3, a4, &qword_2542E55C8);
}

char *sub_23AF98710(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23AF98518(a1, a2, a3, a4, (uint64_t *)&unk_2542E55D0);
}

char *sub_23AF9871C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23AF98518(a1, a2, a3, a4, &qword_2542E55C0);
}

_QWORD *sub_23AF98728(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF995D4(a1, a2, a3, a4, (uint64_t *)&unk_2542E3680, (uint64_t *)&unk_2542E16E0);
}

_QWORD *sub_23AF9873C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE838);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9B8FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF98860(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9A2A0(a1, a2, a3, a4, &qword_2542E55F8);
}

_QWORD *sub_23AF9886C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2168);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9BA08(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AF98978(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2569E6450, &qword_2542DF200);
}

uint64_t sub_23AF9898C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2569E1C40, &qword_2542DF1F0);
}

uint64_t sub_23AF989A0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23B1C7040();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23AF9C6A8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_23AF98BAC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9A4F8(a1, a2, a3, a4, (uint64_t *)&unk_2569E6848);
}

uint64_t sub_23AF98BB8(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
  v10 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23B1C7040();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23AF9AFC0(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_23AF98DC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2569E77F8, &qword_2542E19C0);
}

_QWORD *sub_23AF98DD4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF990EC(a1, a2, a3, a4, &qword_2569E68E8, &qword_2542E73E0);
}

_QWORD *sub_23AF98DE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF98FAC(a1, a2, a3, a4, (uint64_t *)&unk_2569E8190, qword_2542E1408);
}

_QWORD *sub_23AF98DFC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9934C(a1, a2, a3, a4, &qword_2569E7830, (uint64_t *)&unk_2542E21E0);
}

_QWORD *sub_23AF98E10(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF98E4C(a1, a2, a3, a4, &qword_2569E5EC8, &qword_2569E77D0);
}

_QWORD *sub_23AF98E24(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF99BB4(a1, a2, a3, a4, &qword_2542E20F8, &qword_2542E6CD8);
}

_QWORD *sub_23AF98E38(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF98E4C(a1, a2, a3, a4, (uint64_t *)&unk_2569E6160, &qword_2569E77D8);
}

_QWORD *sub_23AF98E4C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 48);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[6 * v11 + 4])
          memmove(v15, a4 + 4, 48 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9B6EC(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_23AF98F78(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23AF98518(a1, a2, a3, a4, &qword_2542E55E8);
}

uint64_t sub_23AF98F84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2569E77E8, &qword_2569E6488);
}

_QWORD *sub_23AF98F98(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF98FAC(a1, a2, a3, a4, &qword_2569E77F0, &qword_2569E64D8);
}

_QWORD *sub_23AF98FAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 120);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[15 * v11 + 4])
          memmove(v15, a4 + 4, 120 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9BBFC(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF990D8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF990EC(a1, a2, a3, a4, &qword_2569E7800, &qword_2569E7808);
}

_QWORD *sub_23AF990EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9C2C0(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF99204(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6438);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9BDF8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AF99324(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2569E77E0, (uint64_t *)&unk_2542DDFB0);
}

_QWORD *sub_23AF99338(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9934C(a1, a2, a3, a4, (uint64_t *)&unk_2542E2170, (uint64_t *)&unk_2542E21E0);
}

_QWORD *sub_23AF9934C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9B3D8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF99464(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9948C(a1, a2, a3, a4, &qword_2569E7810, &qword_2569E7818);
}

_QWORD *sub_23AF99478(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9948C(a1, a2, a3, a4, &qword_2569E7820, &qword_2569E7828);
}

_QWORD *sub_23AF9948C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 88);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[11 * v11 + 4])
          memmove(v15, a4 + 4, 88 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9B5E8(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF995C0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF995D4(a1, a2, a3, a4, &qword_2542E2138, qword_2542E19C8);
}

_QWORD *sub_23AF995D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9B7F4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF99700(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E67E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9B2D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF9980C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9B1E4(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF9992C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5838);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9B4DC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF99A54(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF99E28(a1, a2, a3, a4, (uint64_t *)&unk_2569E68B8, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_23AF9B0D8);
}

_QWORD *sub_23AF99A68(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9934C(a1, a2, a3, a4, (uint64_t *)&unk_2542DE808, qword_2542E1140);
}

_QWORD *sub_23AF99A7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7848);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9C3C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF99BA0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF99BB4(a1, a2, a3, a4, &qword_2569E31E8, (uint64_t *)&unk_2569E31F0);
}

_QWORD *sub_23AF99BB4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9B3D8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AF99CCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2569E7860, (uint64_t *)&unk_2569E32A8);
}

_QWORD *sub_23AF99CE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2160);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9BAF8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AF99DEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2569E7858, (uint64_t *)&unk_2542E0FC0);
}

uint64_t sub_23AF99E00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2569E5878, &qword_2542DDDB0);
}

_QWORD *sub_23AF99E14(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF99E28(a1, a2, a3, a4, &qword_2569E5890, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_23AF9BD04);
}

_QWORD *sub_23AF99E28(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[3 * v11 + 4])
          memmove(v15, a4 + 4, 24 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    a6(0, v11, v15, a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF99F50(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7840);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9BF04(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF9A05C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_2542DF3F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 496);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[62 * v8 + 4])
          memmove(v12, a4 + 4, 496 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23AF9BFF4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF9A188(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7838);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9C100(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF9A294(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9A2A0(a1, a2, a3, a4, (uint64_t *)&unk_2542E5610);
}

_QWORD *sub_23AF9A2A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9C100(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AF9A3A8(_QWORD *result, int64_t a2, char a3, unint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(a4 + 24);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *(_QWORD *)(a4 + 16);
    if (v7 <= v8)
      v9 = *(_QWORD *)(a4 + 16);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5848);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = (unint64_t)(v10 + 4);
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = MEMORY[0x24BEE4AF8] + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if ((unint64_t)v10 < a4 || v13 >= a4 + 32 + 8 * v8)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (_QWORD *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(_QWORD *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_23AF9C4D0(0, v8, v13, a4);
LABEL_26:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AF9A4D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23AF989A0(a1, a2, a3, a4, &qword_2542DE800, qword_2542DDA70);
}

_QWORD *sub_23AF9A4EC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23AF9A4F8(a1, a2, a3, a4, &qword_2569E77C8);
}

_QWORD *sub_23AF9A4F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23AF9C5C0(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

id *sub_23AF9A600(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_23AF9A628(id *a1)
{

  return a1;
}

uint64_t destroy for ItemNonSyncableAttributes(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 192))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = v4;
  *(_QWORD *)(a1 + 16) = v4;
  v6 = *(void **)(a2 + 24);
  v7 = v6;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  v19 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v19;
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  v13 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  v20 = *(_QWORD *)(a2 + 192);
  v14 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v14;
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    v16 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = v20;
    *(_QWORD *)(a1 + 200) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  }
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  v17 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v17;
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  v6 = v5;
  *(_QWORD *)(a1 + 16) = v5;

  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a2 + 24);
  v9 = v8;
  *(_QWORD *)(a1 + 24) = v8;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(void **)(a1 + 96);
  v11 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 192);
  if (!*(_QWORD *)(a1 + 192))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 192) = v13;
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_8;
  }
  if (!v13)
  {
    sub_23AC40C1C(a1 + 192);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 192) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy248_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[14];
  *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  v9 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 192);
  if (!*(_QWORD *)(a1 + 192))
    goto LABEL_5;
  if (!v14)
  {
    sub_23AC40C1C(a1 + 192);
LABEL_5:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 192) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ItemNonSyncableAttributes(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 248))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ItemNonSyncableAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 248) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 248) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemNonSyncableAttributes()
{
  return &type metadata for ItemNonSyncableAttributes;
}

ValueMetadata *type metadata accessor for UserInfo()
{
  return &type metadata for UserInfo;
}

uint64_t sub_23AF9ADEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

char *sub_23AF9AEDC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9AFC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_23B1C5A08() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9B0D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2718);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

char *sub_23AF9B1E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 48 * a1 + 32);
    v6 = 48 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9B2D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6520);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9B3D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9B4DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE6F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9B5E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 88 * a1 + 32;
    v7 = a3 + 88 * v5;
    if (v6 >= v7 || v6 + 88 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9B6EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 48 * a1 + 32;
    v7 = a3 + 48 * v5;
    if (v6 >= v7 || v6 + 48 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9B7F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9B8FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_2542E16F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9BA08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9BAF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for NSFileProviderItemIdentifier(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9BBFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 120 * a1 + 32;
    v7 = a3 + 120 * v5;
    if (v6 >= v7 || v6 + 120 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9BD04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9BDF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6430);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9BF04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9BFF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 496 * a1 + 32;
    v6 = a3 + 496 * v4;
    if (v5 >= v6 || v5 + 496 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6E10);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

char *sub_23AF9C100(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9C1E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1937335659 && a2 == 0xE400000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AF9C2C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9C3C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7850);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9C4D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

char *sub_23AF9C5C0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9C6A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for UserInfo.CodingKeys()
{
  return &type metadata for UserInfo.CodingKeys;
}

unint64_t sub_23AF9C7D4()
{
  unint64_t result;

  result = qword_2569E7868;
  if (!qword_2569E7868)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0228, &type metadata for UserInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7868);
  }
  return result;
}

unint64_t sub_23AF9C81C()
{
  unint64_t result;

  result = qword_2542E7690;
  if (!qword_2542E7690)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0198, &type metadata for UserInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E7690);
  }
  return result;
}

unint64_t sub_23AF9C864()
{
  unint64_t result;

  result = qword_2542E7688;
  if (!qword_2542E7688)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E01C0, &type metadata for UserInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E7688);
  }
  return result;
}

uint64_t sub_23AF9C8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2138);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 64) = a2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v5 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_0, v2, a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return v5;
  }
  v9 = v7 + 32;
  while (1)
  {
    sub_23AA77B28(v9, (uint64_t)v25);
    v10 = v26;
    v11 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    v12 = sub_23AF9C8AC(v10, v11);
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v5 + 16);
    v15 = v14 + v13;
    if (__OFADD__(v14, v13))
      break;
    v16 = v12;
    if (v15 > *(_QWORD *)(v5 + 24) >> 1)
    {
      if (v14 <= v15)
        v23 = v14 + v13;
      else
        v23 = *(_QWORD *)(v5 + 16);
      v5 = (uint64_t)sub_23AF995C0((_QWORD *)1, v23, 1, (_QWORD *)v5);
      if (*(_QWORD *)(v16 + 16))
      {
LABEL_8:
        v17 = *(_QWORD *)(v5 + 16);
        if ((*(_QWORD *)(v5 + 24) >> 1) - v17 < v13)
          goto LABEL_25;
        v18 = v5 + 40 * v17 + 32;
        if (v16 + 32 < v18 + 40 * v13 && v18 < v16 + 32 + 40 * v13)
          goto LABEL_27;
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E19C8);
        swift_arrayInitWithCopy();
        if (v13)
        {
          v20 = *(_QWORD *)(v5 + 16);
          v21 = __OFADD__(v20, v13);
          v22 = v20 + v13;
          if (v21)
            goto LABEL_26;
          *(_QWORD *)(v5 + 16) = v22;
        }
        goto LABEL_4;
      }
    }
    else if (v13)
    {
      goto LABEL_8;
    }
    if (v13)
      goto LABEL_24;
LABEL_4:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    v9 += 40;
    if (!--v8)
      goto LABEL_22;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AF9CAE0()
{
  id v0;

  v0 = (id)fpfs_current_or_default_log();
  return sub_23B1C5E58();
}

uint64_t sub_23AF9CB0C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AF9CB38()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 0x64657070617277;
}

uint64_t sub_23AF9CB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AF9D4F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AF9CB90()
{
  sub_23AF9D4B0();
  return sub_23B1C7544();
}

uint64_t sub_23AF9CBB8()
{
  sub_23AF9D4B0();
  return sub_23B1C7550();
}

void sub_23AF9CBE0()
{
  dword_2542DD820 = 0;
}

void *sub_23AF9CBEC()
{
  void *result;

  result = (void *)sub_23AAEA464(MEMORY[0x24BEE4AF8]);
  off_2542E7350 = result;
  return result;
}

uint64_t sub_23AF9CC10(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7928);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AF9D4B0();
  sub_23B1C7538();
  swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v16 = 1;
  v12 = v14[0];
  sub_23B1C7274();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v14[1] = a2;
    v15 = 0;
    sub_23B1C72A4();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_23AF9CD84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v21 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2569E7880);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AF9D4B0();
  sub_23B1C7520();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return a2;
  }
  v10 = (uint64_t)a1;
  v11 = a2;
  LOBYTE(v19) = 1;
  v12 = sub_23B1C719C();
  v14 = v13;
  v18 = v12;
  if (qword_2542E6B10 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_2542DD820);
  swift_endAccess();
  if (qword_2542E7358 != -1)
    swift_once();
  swift_beginAccess();
  if (*((_QWORD *)off_2542E7350 + 2))
  {
    swift_bridgeObjectRetain();
    sub_23AAAF4C4(v18, v14);
    if ((v15 & 1) != 0)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      v16 = swift_dynamicCastMetatype();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v16 = 0;
LABEL_11:
  swift_beginAccess();
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_2542DD820);
  swift_endAccess();
  if (v16)
  {
    swift_bridgeObjectRelease();
    a2 = (*(uint64_t (**)(char *, uint64_t))(v21 + 32))(v9, v11);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    __swift_destroy_boxed_opaque_existential_1(v10);
    return a2;
  }
  v19 = 0;
  v20 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7568();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C7568();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AF9D168@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_23AF9CD84(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_23AF9D198(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_23AF9CC10(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_23AF9D1B8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4688);
  return sub_23B1C6434();
}

uint64_t sub_23AF9D1EC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(qword_2569E7880);
  sub_23AF9D2C0(&qword_2569E7870, (uint64_t)&unk_23B1E3F78);
  result = sub_23B1C71C0();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_23AF9D274(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23AF9D2C0(&qword_2569E7870, (uint64_t)&unk_23B1E3F78);
  result = sub_23AF9D2C0(&qword_2569E7878, (uint64_t)&unk_23B1E3FA0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23AF9D2C0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Continuation();
    result = MEMORY[0x23B8613CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CodableClassCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AF9D34C + 4 * byte_23B1E02C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AF9D380 + 4 * asc_23B1E02C0[v4]))();
}

uint64_t sub_23AF9D380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AF9D388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AF9D390);
  return result;
}

uint64_t sub_23AF9D39C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AF9D3A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AF9D3A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AF9D3B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableClassCodingKeys()
{
  return &type metadata for CodableClassCodingKeys;
}

uint64_t type metadata accessor for CodableClassWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableClassWrapper);
}

unint64_t sub_23AF9D3DC()
{
  unint64_t result;

  result = qword_2569E7908;
  if (!qword_2569E7908)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0350, &type metadata for CodableClassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7908);
  }
  return result;
}

unint64_t sub_23AF9D424()
{
  unint64_t result;

  result = qword_2569E7910;
  if (!qword_2569E7910)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0378, &type metadata for CodableClassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7910);
  }
  return result;
}

unint64_t sub_23AF9D46C()
{
  unint64_t result;

  result = qword_2569E7918;
  if (!qword_2569E7918)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0468, &type metadata for CodableClassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7918);
  }
  return result;
}

unint64_t sub_23AF9D4B0()
{
  unint64_t result;

  result = qword_2569E7920;
  if (!qword_2569E7920)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E03A0, &type metadata for CodableClassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7920);
  }
  return result;
}

uint64_t sub_23AF9D4F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64657070617277 && a2 == 0xE700000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t *sub_23AF9D5D4(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_23AA93780(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_23AF9D604(unint64_t *a1)
{
  return sub_23AAB47B0(*a1);
}

unint64_t *sub_23AF9D60C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_23AA93780(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_23AAB47B0(v4);
  return a1;
}

unint64_t *sub_23AF9D644(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_23AAB47B0(v3);
  return a1;
}

uint64_t sub_23AF9D674(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x57 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 87);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 1) & 0xFFFFFFBF | ((*(_QWORD *)a1 & 1) << 6)) ^ 0x7F;
  if (v3 >= 0x56)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_23AF9D6D0(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x56)
  {
    *(_QWORD *)result = a2 - 87;
    if (a3 >= 0x57)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x57)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 6) & 1 | (2 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23AF9D720(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 58) & 0x3C | (*a1 >> 1) & 3;
  if (v1 <= 0x28)
    return v1;
  else
    return (*a1 >> 3) + 41;
}

_QWORD *sub_23AF9D744(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFF9uLL;
  return result;
}

unint64_t *sub_23AF9D758(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x29)
    *result = (a2 << 58) & 0xF000000000000000 | (2 * (a2 & 3)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    *result = (8 * (a2 - 41)) | 0xA000000000000002;
  return result;
}

unint64_t sub_23AF9D794(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  double v26;
  double v27;
  unint64_t result;
  double v29;
  char *v30;
  double v31;
  double v32;
  uint64_t (*v33)(char *, uint64_t);
  double v34;
  char v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v37 = a1;
  v38 = a2;
  v39 = a3;
  v40 = a4;
  v41 = a5;
  v22 = sub_23AF9DAF0(a1);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, sel_date);

    sub_23B1C5BAC();
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v21, v25, 1, v10);
  sub_23AB6E30C((uint64_t)v21, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v19, 1, v10) != 1)
    goto LABEL_9;
  sub_23AB6E2CC((uint64_t)v21);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v27 = v26;
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  v29 = v27 * 1000000000.0;
  if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v29 < 9.22337204e18)
    goto LABEL_13;
  __break(1u);
LABEL_9:
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v19, v10);
  v30 = v36;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v15, v10);
  sub_23B1C5B94();
  v32 = v31;
  v33 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  result = v33(v30, v10);
  v34 = v32 * 1000000000.0;
  if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v34 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v33(v15, v10);
  sub_23AB6E2CC((uint64_t)v21);
LABEL_13:
  result = sub_23AFA09C4(v37, v38, v39, v40, v41);
  if ((v35 & 1) != 0)
    return 0;
  return result;
}

uint64_t sub_23AF9DA80(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1;
  if (((a1 >> 58) & 0x3C | (a1 >> 1) & 3) == 0x1E)
  {
    v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
    v2 = v1;
  }
  else
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    v2 = v3 | 0x7000000000000004;
  }
  sub_23AA93780(v1);
  return v2;
}

void *sub_23AF9DAF0(unint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      swift_getAssociatedTypeWitness();
      sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      goto LABEL_14;
    case 1uLL:
    case 3uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x16uLL:
    case 0x24uLL:
      swift_getAssociatedTypeWitness();
      sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
      goto LABEL_13;
    case 2uLL:
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6F0);
      v5 = swift_projectBox();
      v6 = *(int *)(v4 + 64);
      goto LABEL_17;
    case 4uLL:
    case 5uLL:
      swift_getAssociatedTypeWitness();
      sub_23B1C6C98();
      sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
LABEL_13:
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
LABEL_14:
      v5 = swift_projectBox();
      v6 = *(int *)(TupleTypeMetadata2 + 48);
      goto LABEL_17;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      v2 = (uint64_t *)&unk_2542DD400;
      goto LABEL_16;
    case 0xEuLL:
    case 0xFuLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x18);
      goto LABEL_18;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ReconciliationID();
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_18;
    case 0x1AuLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      if (!v1)
        return v1;
      goto LABEL_18;
    case 0x23uLL:
      v2 = (uint64_t *)&unk_2569E2FB8;
      goto LABEL_16;
    case 0x28uLL:
      v2 = (uint64_t *)&unk_2569E2FE8;
LABEL_16:
      v7 = __swift_instantiateConcreteTypeFromMangledName(v2);
      v5 = swift_projectBox();
      v6 = *(int *)(v7 + 48);
LABEL_17:
      v1 = *(void **)(v5 + v6);
LABEL_18:
      v8 = v1;
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_23AF9DEF4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_23B1C5A08();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    if (!v7)
      return v8;
    v26 = MEMORY[0x24BEE4AF8];
    result = sub_23AAB5A68(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v10 = 0;
    v8 = v26;
    v21[1] = v2;
    v22 = a1 & 0xC000000000000001;
    v23 = a1;
    while (v7 != v10)
    {
      if (v22)
        v11 = (id)MEMORY[0x23B85F860](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v13 = objc_msgSend(v12, sel_knownFolder);
      sub_23B1C59CC();

      v14 = (void *)sub_23B1C5954();
      v15 = objc_msgSend(v14, sel_fp_shortDescription);

      v2 = sub_23B1C63E0();
      v17 = v16;

      (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
      v26 = v8;
      v19 = *(_QWORD *)(v8 + 16);
      v18 = *(_QWORD *)(v8 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_23AAB5A68(v18 > 1, v19 + 1, 1);
        v8 = v26;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v19 + 1;
      v20 = v8 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v2;
      *(_QWORD *)(v20 + 40) = v17;
      a1 = v23;
      if (v7 == v10)
        return v8;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v7 = sub_23B1C7088();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AF9E100(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23AAB5A68(0, v1, 0);
    v2 = v16;
    v4 = *(_QWORD *)(sub_23B1C5A08() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = (void *)sub_23B1C5954();
      v8 = objc_msgSend(v7, sel_fp_shortDescription);

      v9 = sub_23B1C63E0();
      v11 = v10;

      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_23AAB5A68(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_23AF9E228()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_23B1C6C98();
  v5[1] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v5[2] = (char *)v5 - v1;
  v2 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = swift_getAssociatedConformanceWitness();
  v8 = v2;
  v9 = AssociatedTypeWitness;
  v10 = AssociatedConformanceWitness;
  v11 = v4;
  v7 = v4;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AF9E334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v11 - 176) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 168) = (char *)&a9 - v12;
  v13 = sub_23B1C5A08();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v11 - 152) = v9;
  v16 = MEMORY[0x24BDAC7A8](v15);
  return ((uint64_t (*)(uint64_t))((char *)&loc_23AF9E414
                                          + dword_23AFA091C[(v10 >> 58) & 0x3C | (v10 >> 1) & 3]))(v16);
}

uint64_t sub_23AF9E424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v3 = v0;
  sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
  v4 = *(_QWORD *)(v2 - 152);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = swift_projectBox();
  v7 = *(void **)(v6 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v6, v4);
  *(_QWORD *)(v2 - 112) = 0;
  *(_QWORD *)(v2 - 104) = 0xE000000000000000;
  v8 = v7;
  sub_23B1C6EFC();
  v9 = *(_QWORD *)(v2 - 104);
  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 112);
  *(_QWORD *)(v2 - 104) = v9;
  sub_23B1C64F4();
  sub_23B1C7340();
  sub_23B1C64F4();
  v10 = objc_msgSend(v8, sel_description);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();

  v11 = *(_QWORD *)(v2 - 112);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  return v11;
}

unint64_t sub_23AFA09C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t *v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  double v37;
  double v38;
  double v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      swift_getAssociatedTypeWitness();
      sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      goto LABEL_17;
    case 1uLL:
    case 3uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x16uLL:
    case 0x24uLL:
      swift_getAssociatedTypeWitness();
      sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
      goto LABEL_16;
    case 2uLL:
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6F0);
      v27 = swift_projectBox();
      v28 = *(int *)(v26 + 64);
      goto LABEL_20;
    case 4uLL:
    case 5uLL:
      swift_getAssociatedTypeWitness();
      sub_23B1C6C98();
      sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
LABEL_16:
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
LABEL_17:
      v27 = swift_projectBox();
      v28 = *(int *)(TupleTypeMetadata2 + 48);
      goto LABEL_20;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      v19 = (uint64_t *)&unk_2542DD400;
      goto LABEL_19;
    case 0xEuLL:
    case 0xFuLL:
      v20 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 24);
      goto LABEL_21;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      v41[1] = a1 & 0xFFFFFFFFFFFFFF9;
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v16 = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v18 = swift_getAssociatedConformanceWitness();
      v42 = AssociatedTypeWitness;
      v43 = v16;
      v44 = AssociatedConformanceWitness;
      v45 = v18;
      type metadata accessor for ReconciliationID();
    case 0x15uLL:
    case 0x22uLL:
      v21 = swift_getAssociatedTypeWitness();
      v22 = swift_getAssociatedTypeWitness();
      v23 = swift_getAssociatedConformanceWitness();
      v24 = swift_getAssociatedConformanceWitness();
      v42 = v21;
      v43 = v22;
      v44 = v23;
      v45 = v24;
      type metadata accessor for ReconciliationID();
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      v20 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 16);
      goto LABEL_21;
    case 0x1AuLL:
      return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x18);
    case 0x1BuLL:
    case 0x1CuLL:
      return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
    case 0x1EuLL:
      v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      sub_23AA93780(v29);
      v14 = sub_23AFA09C4(v29, a3, a2, a5, a4);
      sub_23AAB47B0(v29);
      return v14;
    case 0x1FuLL:
      return 0;
    case 0x23uLL:
      v19 = (uint64_t *)&unk_2569E2FB8;
      goto LABEL_19;
    case 0x28uLL:
      v19 = (uint64_t *)&unk_2569E2FE8;
LABEL_19:
      v30 = __swift_instantiateConcreteTypeFromMangledName(v19);
      v27 = swift_projectBox();
      v28 = *(int *)(v30 + 48);
LABEL_20:
      v20 = (id *)(v27 + v28);
LABEL_21:
      v31 = *v20;
      v32 = objc_msgSend(v31, sel_qos);
      v33 = 0x6000000000000000;
      v34 = 0x4000000000000000;
      if (v32 <= 0x14)
        v34 = (unint64_t)(v32 - 17 < 0xFFFFFFF0) << 61;
      if (v32 <= 0x18)
        v33 = v34;
      if (v32 <= 0x20)
        v35 = v33;
      else
        v35 = 0x8000000000000000;
      v36 = objc_msgSend(v31, sel_date);

      sub_23B1C5BAC();
      sub_23B1C5B94();
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v39 = v38 * 1000000000.0;
      if ((~COERCE__INT64(v38 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      if (v39 <= -9.22337204e18)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v39 >= 9.22337204e18)
      {
LABEL_35:
        __break(1u);
        JUMPOUT(0x23AFA1080);
      }
      return ((uint64_t)v39 & ~((uint64_t)v39 >> 63)) + v35;
    default:
      return v14;
  }
}

void sub_23AFA1124()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AFA11F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v10 - 136) = a1;
  *(_QWORD *)(v10 - 152) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v10 - 144) = (char *)&a9 - v11;
  v12 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23B1C5A08();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  return ((uint64_t (*)(uint64_t))((char *)sub_23AFA12FC
                                          + 4 * word_23B1E055C[(v9 >> 58) & 0x3C | (v9 >> 1) & 3]))(v16);
}

void sub_23AFA12FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = v0;
  v4 = v1;
  sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = swift_projectBox();
  v7 = *(void **)(v6 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v2);
  sub_23B1C74B4();
  v8 = v7;
  sub_23B1C62D8();
  sub_23B1C6C5C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);

}

void sub_23AFA2318()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AFA2408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata2;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  *(_QWORD *)(v10 - 168) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v10 - 160) = a1;
  v11 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v10 - 344) = (char *)&a9 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v10 - 336) = (char *)&a9 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v10 - 376) = (char *)&a9 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v10 - 368) = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v10 - 296) = (char *)&a9 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v10 - 288) = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v10 - 328) = (char *)&a9 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v10 - 320) = (char *)&a9 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v10 - 360) = (char *)&a9 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v10 - 352) = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v10 - 392) = (char *)&a9 - v32;
  MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v10 - 384) = (char *)&a9 - v33;
  v34 = sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v10 - 208) = TupleTypeMetadata2;
  *(_QWORD *)(v10 - 264) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v36 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v10 - 248) = (char *)&a9 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v10 - 256) = (char *)&a9 - v39;
  *(_QWORD *)(v10 - 200) = *(_QWORD *)(v34 - 8);
  *(_QWORD *)(v10 - 192) = v34;
  v40 = MEMORY[0x24BDAC7A8](v38);
  *(_QWORD *)(v10 - 592) = (char *)&a9 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v10 - 216) = (char *)&a9 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)(v10 - 600) = (char *)&a9 - v45;
  MEMORY[0x24BDAC7A8](v44);
  *(_QWORD *)(v10 - 224) = (char *)&a9 - v46;
  v47 = sub_23B1C5A08();
  v48 = MEMORY[0x24BDAC7A8](v47);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v52 = MEMORY[0x24BDAC7A8](v51);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v54 = MEMORY[0x24BDAC7A8](v53);
  v55 = MEMORY[0x24BDAC7A8](v54);
  v56 = MEMORY[0x24BDAC7A8](v55);
  *(_QWORD *)(v10 - 408) = (char *)&a9 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  *(_QWORD *)(v10 - 400) = (char *)&a9 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  *(_QWORD *)(v10 - 440) = (char *)&a9 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  *(_QWORD *)(v10 - 432) = (char *)&a9 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  *(_QWORD *)(v10 - 424) = (char *)&a9 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  *(_QWORD *)(v10 - 416) = (char *)&a9 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  *(_QWORD *)(v10 - 456) = (char *)&a9 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  *(_QWORD *)(v10 - 448) = (char *)&a9 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  *(_QWORD *)(v10 - 504) = (char *)&a9 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v75 = MEMORY[0x24BDAC7A8](v74);
  *(_QWORD *)(v10 - 472) = (char *)&a9 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  *(_QWORD *)(v10 - 464) = (char *)&a9 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  *(_QWORD *)(v10 - 240) = (char *)&a9 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  *(_QWORD *)(v10 - 232) = (char *)&a9 - v82;
  *(_QWORD *)(v10 - 144) = v9;
  v83 = MEMORY[0x24BDAC7A8](v81);
  *(_QWORD *)(v10 - 488) = (char *)&a9 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = MEMORY[0x24BDAC7A8](v83);
  *(_QWORD *)(v10 - 480) = (char *)&a9 - v86;
  v87 = MEMORY[0x24BDAC7A8](v85);
  *(_QWORD *)(v10 - 576) = (char *)&a9 - v88;
  v89 = MEMORY[0x24BDAC7A8](v87);
  v90 = MEMORY[0x24BDAC7A8](v89);
  *(_QWORD *)(v10 - 512) = (char *)&a9 - v91;
  v92 = MEMORY[0x24BDAC7A8](v90);
  *(_QWORD *)(v10 - 496) = (char *)&a9 - v93;
  v94 = MEMORY[0x24BDAC7A8](v92);
  *(_QWORD *)(v10 - 528) = (char *)&a9 - v95;
  v96 = MEMORY[0x24BDAC7A8](v94);
  *(_QWORD *)(v10 - 520) = (char *)&a9 - v97;
  v98 = MEMORY[0x24BDAC7A8](v96);
  *(_QWORD *)(v10 - 544) = (char *)&a9 - v99;
  v100 = MEMORY[0x24BDAC7A8](v98);
  *(_QWORD *)(v10 - 536) = (char *)&a9 - v101;
  v102 = MEMORY[0x24BDAC7A8](v100);
  *(_QWORD *)(v10 - 560) = (char *)&a9 - v103;
  v104 = MEMORY[0x24BDAC7A8](v102);
  *(_QWORD *)(v10 - 552) = (char *)&a9 - v105;
  v106 = MEMORY[0x24BDAC7A8](v104);
  *(_QWORD *)(v10 - 584) = (char *)&a9 - v107;
  v108 = MEMORY[0x24BDAC7A8](v106);
  *(_QWORD *)(v10 - 568) = (char *)&a9 - v109;
  v110 = MEMORY[0x24BDAC7A8](v108);
  v111 = MEMORY[0x24BDAC7A8](v110);
  v112 = MEMORY[0x24BDAC7A8](v111);
  *(_QWORD *)(v10 - 608) = (char *)&a9 - v113;
  v114 = MEMORY[0x24BDAC7A8](v112);
  v115 = MEMORY[0x24BDAC7A8](v114);
  v116 = MEMORY[0x24BDAC7A8](v115);
  v117 = MEMORY[0x24BDAC7A8](v116);
  v118 = MEMORY[0x24BDAC7A8](v117);
  v119 = MEMORY[0x24BDAC7A8](v118);
  return ((uint64_t (*)(uint64_t))((char *)sub_23AFA2CFC
                                          + 4
                                          * word_23B1E05B0[(*(_QWORD *)(v10 - 128) >> 58) & 0x3C | (*(_QWORD *)(v10 - 128) >> 1) & 3]))(v119);
}

uint64_t sub_23AFA2CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  id v13;
  id v14;
  char v15;
  void (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t);

  v4 = v0;
  sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = swift_projectBox();
  if ((*(_QWORD *)(v3 - 136) >> 58) & 0x3C | (*(_QWORD *)(v3 - 136) >> 1) & 3)
    goto LABEL_5;
  v7 = *(int *)(TupleTypeMetadata2 + 48);
  v8 = *(void **)(v6 + v7);
  v9 = swift_projectBox();
  v10 = *(void **)(v9 + v7);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v12 = *(_QWORD *)(v3 - 144);
  v11(v1, v6, v12);
  v11(v2, v9, v12);
  v13 = v8;
  v14 = v10;
  if ((sub_23B1C63A4() & 1) == 0)
  {

    v17 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v17(v2, v12);
    v17(v1, v12);
LABEL_5:
    v15 = 0;
    return v15 & 1;
  }
  sub_23AA9F52C(0, &qword_2542E2030);
  v15 = sub_23B1C6C50();

  v16 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v16(v2, v12);
  v16(v1, v12);
  return v15 & 1;
}

void sub_23AFA4D7C()
{
  sub_23B1C74A8();
  sub_23AFA1124();
}

uint64_t sub_23AFA4DD0()
{
  return sub_23B1C74E4();
}

void sub_23AFA4DF0()
{
  sub_23AF9E228();
}

void sub_23AFA4E04()
{
  sub_23AFA4D7C();
}

void sub_23AFA4E18()
{
  sub_23AFA1124();
}

void sub_23AFA4E2C()
{
  sub_23B1C74A8();
  sub_23AFA1124();
}

uint64_t sub_23AFA4E5C()
{
  return sub_23B1C74E4();
}

void sub_23AFA4E74()
{
  sub_23AFA2318();
}

void sub_23AFA4E8C()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23AFA4E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v17[2];

  v4 = sub_23B1C5A08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  v17[1] = a1;
  sub_23B1C74B4();
  if (v11)
  {
    v12 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v14(v10, v12, v4);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v15(v10, 0, 1, v4);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_23AD2864C();
      sub_23B1C62D8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 += v13;
      if (!--v11)
        return v15(v10, 1, 1, v4);
    }
  }
  else
  {
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v15(v10, 1, 1, v4);
  }
  return result;
}

void sub_23AFA5028(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void **v5;
  void *v6;
  id v7;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23B1C7088();
    swift_bridgeObjectRelease();
    sub_23B1C74B4();
    swift_bridgeObjectRetain();
    v3 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (!v3)
      return;
  }
  else
  {
    sub_23B1C74B4();
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return;
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x23B85F860](i, a2);
      sub_23B1C6C5C();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v5 = (void **)(a2 + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      sub_23B1C6C5C();

      --v3;
    }
    while (v3);
  }
}

uint64_t sub_23AFA513C()
{
  uint64_t v0;

  sub_23AAB47B0(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

void sub_23AFA5164(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37[4];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v41 = a5;
  v37[0] = a4;
  v42 = a3;
  v47 = *MEMORY[0x24BDAC8D0];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7930);
  v37[2] = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7938);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23B1C6164();
  v44 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C6428();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, sel_providerID);
  v16 = objc_msgSend(a1, sel_domainIdentifier);
  v17 = objc_msgSend(a1, sel_identifier);
  v18 = sub_23AFA6EAC();
  v20 = v19;

  sub_23B1C641C();
  v37[1] = v18;
  v37[3] = v20;
  v21 = sub_23B1C63EC();
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v14, v11);
  if (v23 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v45 = v21;
    v46 = v23;
    sub_23B1C641C();
    v25 = sub_23B1C63EC();
    v27 = v26;
    v24(v14, v11);
    if (v27 >> 60 != 15)
    {
      sub_23B1C5B04();
      sub_23AAA3E18(v25, v27);
      v28 = v41;
      if (v41 >> 60 == 15)
      {
        sub_23B1C641C();
        v29 = sub_23B1C63EC();
        v31 = v30;
        v24(v14, v11);
        v32 = v44;
        if (v31 >> 60 == 15)
        {
          __break(1u);
          JUMPOUT(0x23AFA58BCLL);
        }
        sub_23B1C5B04();
        sub_23AAA3E18(v29, v31);
      }
      else
      {
        v33 = v37[0];
        sub_23AAAE668(v37[0], v41);
        sub_23B1C5B04();
        sub_23AAA3E18(v33, v28);
        v32 = v44;
      }
      v34 = v43;
      v35 = v46;
      sub_23AFA59B4(1, (uint64_t)v9);
      v36 = v40;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v9, 1, v40) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v9, v36);
        __asm { BR              X10 }
      }
LABEL_11:
      __break(1u);
      JUMPOUT(0x23AFA58B4);
    }
  }
  __break(1u);
  goto LABEL_11;
}

id sub_23AFA58CC(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v8 = sub_23B1C63E0();
  v10 = v9;
  v11 = a3;
  v12 = a1;
  if (a5)
  {
    v13 = a5;
    a5 = (void *)sub_23B1C5AD4();
    v15 = v14;

  }
  else
  {
    v15 = 0xF000000000000000;
  }
  sub_23AFA5164(a3, v8, v10, (uint64_t)a5, v15);
  v17 = v16;
  sub_23AAA3E18((uint64_t)a5, v15);

  swift_bridgeObjectRelease();
  if (v17)
  {
    v18 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  return v18;
}

uint64_t sub_23AFA59B4@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v5 = sub_23B1C6164();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (void *)sub_23B1C63BC();
  aBlock[4] = sub_23AFA5D38;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AFA5E70;
  aBlock[3] = &block_descriptor_27;
  v8 = _Block_copy(aBlock);
  v9 = objc_msgSend(v2, sel_keyForBundleIdentifier_generateIfNotFound_keyGenBlock_, v7, a1 & 1, v8);
  _Block_release(v8);

  if (v9)
  {
    sub_23B1C5AD4();
    v11 = v10;

    __asm { BR              X10 }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v5);
}

uint64_t sub_23AFA5D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[3];

  v0 = sub_23B1C617C();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23B1C6164();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C6170();
  sub_23B1C6158();
  sub_23B1C6140();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6[2];
}

uint64_t sub_23AFA5E1C@<X0>(size_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_23AFA6DFC(a1, a2);
  v5 = sub_23B05BF10(v4);
  v7 = v6;
  result = swift_release();
  *a3 = v5;
  a3[1] = v7;
  return result;
}

id sub_23AFA5E70(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  v5 = v4;
  swift_release();
  v6 = (void *)sub_23B1C5AA4();
  sub_23AAAE53C(v3, v5);
  return v6;
}

void sub_23AFA5ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7930);
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

id sub_23AFA5F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;

  *(_QWORD *)(v6 - 144) = v2;
  *(_WORD *)(v6 - 136) = v3;
  *(_BYTE *)(v6 - 134) = BYTE2(v3);
  *(_BYTE *)(v6 - 133) = BYTE3(v3);
  *(_BYTE *)(v6 - 132) = BYTE4(v3);
  *(_BYTE *)(v6 - 131) = BYTE5(v3);
  *(_QWORD *)(v6 - 128) = v6 - 144;
  *(_QWORD *)(v6 - 120) = v6 - 144 + BYTE6(v3);
  sub_23B1C61B8();
  sub_23AFA7028();
  sub_23AFA7070();
  sub_23B1C6188();
  *(_QWORD *)(v6 - 104) = v0;
  *(_QWORD *)(v6 - 96) = sub_23AFA6FDC();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 - 128));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_0, v1, v0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 128), *(_QWORD *)(v6 - 104));
  sub_23B1C56C0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
  v8 = *(_QWORD *)(v6 - 144);
  v9 = *(_QWORD *)(v6 - 136);
  __swift_destroy_boxed_opaque_existential_1(v6 - 128);
  v10 = (void *)sub_23B1C5AA4();
  v11 = objc_msgSend(v4, sel_lookupLRUSignature_, v10);
  sub_23AAAE53C(v8, v9);

  return v11;
}

uint64_t sub_23AFA623C()
{
  sub_23B1C61B8();
  sub_23AFA7028();
  sub_23AFA7070();
  return sub_23B1C6188();
}

uint64_t sub_23AFA62BC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD v73[5];
  uint64_t v74;
  unint64_t v75;
  void *v76;
  void *v77;
  void *v78;
  uint64_t v79;

  v62 = a5;
  v66 = a4;
  v79 = *MEMORY[0x24BDAC8D0];
  v64 = sub_23B1C6428();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7938);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C6164();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v65 = (char *)&v52 - v21;
  sub_23AFA70B4(a1, a2, v73);
  sub_23AFA7360((uint64_t)v73, (uint64_t)&v74);
  v22 = v75;
  if (!v75)
    return 0;
  v60 = a6;
  v58 = v20;
  v59 = v74;
  v23 = v76;
  v24 = v77;
  v25 = v78;
  v61 = a3;
  v57 = v6;
  sub_23AFA59B4(0, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    swift_bridgeObjectRelease();

    sub_23AFA73A8((uint64_t)v15);
    return 0;
  }
  v53 = v17;
  v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v54 = v16;
  v26(v65, v15, v16);
  v55 = v23;
  v56 = v25;
  sub_23AFA6EAC();
  sub_23B1C641C();
  v27 = sub_23B1C63EC();
  v29 = v28;
  v30 = *(void (**)(char *, uint64_t))(v63 + 8);
  v31 = v64;
  v30(v12, v64);
  if (v29 >> 60 == 15)
  {
    __break(1u);
    goto LABEL_15;
  }
  v32 = v24;
  v71 = v27;
  v72 = v29;
  sub_23B1C641C();
  v33 = sub_23B1C63EC();
  v35 = v34;
  v30(v12, v31);
  if (v35 >> 60 == 15)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v66 = v32;
  sub_23B1C5B04();
  sub_23AAA3E18(v33, v35);
  v36 = v60;
  if (v60 >> 60 != 15)
  {
    v42 = v62;
    sub_23AAAE668(v62, v60);
    sub_23B1C5B04();
    sub_23AAA3E18(v42, v36);
    v41 = v65;
    v40 = v56;
    goto LABEL_10;
  }
  sub_23B1C641C();
  v37 = sub_23B1C63EC();
  v39 = v38;
  v30(v12, v31);
  v40 = v56;
  if (v39 >> 60 == 15)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x23AFA6A8CLL);
  }
  sub_23B1C5B04();
  sub_23AAA3E18(v37, v39);
  v41 = v65;
LABEL_10:
  v43 = v59;
  swift_bridgeObjectRelease();
  v45 = v71;
  v44 = v72;
  v71 = v43;
  v72 = v22;
  v69 = 95;
  v70 = 0xE100000000000000;
  v67 = 47;
  v68 = 0xE100000000000000;
  sub_23AAA420C();
  sub_23B1C6CF8();
  sub_23B1C5A50();
  v47 = v46;
  swift_bridgeObjectRelease();
  v48 = swift_bridgeObjectRelease();
  v49 = v55;
  if (v47 >> 60 != 15)
  {
    MEMORY[0x24BDAC7A8](v48);
    v51 = (char *)&loc_23AFA6784 + dword_23AFA6A8C[v47 >> 62];
    v64 = v45;
    v63 = v44;
    __asm { BR              X10 }
  }
  sub_23AAAE53C(v45, v44);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v41, v54);
  return 0;
}

uint64_t sub_23AFA6A9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  sub_23B1C61B8();
  sub_23AFA7028();
  sub_23ADB10A8();
  result = sub_23B1C6194();
  *a1 = result & 1;
  return result;
}

id sub_23AFA6B38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;

  v7 = sub_23B1C63E0();
  v9 = v8;
  v10 = sub_23B1C63E0();
  v12 = v11;
  v13 = a1;
  if (a5)
  {
    v14 = a5;
    a5 = (void *)sub_23B1C5AD4();
    v16 = v15;

  }
  else
  {
    v16 = 0xF000000000000000;
  }
  v17 = (void *)sub_23AFA62BC(v7, v9, v10, v12, (uint64_t)a5, v16);
  sub_23AAA3E18((uint64_t)a5, v16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

id sub_23AFA6C08(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[5];
  _BYTE v12[8];
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;

  v2 = sub_23B1C63E0();
  v4 = v3;
  v5 = a1;
  sub_23AFA70B4(v2, v4, v11);
  sub_23AFA7360((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    v6 = v14;
    v7 = v15;
    v8 = v16;
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82E8]), sel_initWithProviderID_domainIdentifier_itemIdentifier_, v6, v7, v8);

    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
}

_BYTE *sub_23AFA6CDC@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_23AABEE98(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_23B0524A0((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_23B052518((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_23AFA6D50(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  result = sub_23B1C560C();
  v8 = result;
  if (result)
  {
    result = sub_23B1C5624();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = sub_23B1C5618();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = v8 + v12;
  if (v8)
    v14 = v13;
  else
    v14 = 0;
  a3(&v16, v8, v14);
  if (!v3)
    v15 = v16;
  return v15 & 1;
}

size_t sub_23AFA6DFC(size_t result, unint64_t a2)
{
  const void *v3;
  int64_t v4;
  _QWORD *v5;

  if (!result)
    return MEMORY[0x24BEE4AF8];
  v3 = (const void *)result;
  v4 = a2 - result;
  if (a2 == result)
    return MEMORY[0x24BEE4AF8];
  if (v4 < 1)
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!a2)
      goto LABEL_13;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5608);
    v5 = (_QWORD *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v5);
    v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2)
      goto LABEL_13;
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_23AFA6EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v7;

  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  v5 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
LABEL_8:
    v7 = sub_23B1C63E0();
    goto LABEL_9;
  }
  v7 = sub_23B1C63E0();
  sub_23B1C64F4();
  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
LABEL_9:
  sub_23B1C64F4();
  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_23AFA6FDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569E7940;
  if (!qword_2569E7940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E7930);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDC6538], v1);
    atomic_store(result, (unint64_t *)&qword_2569E7940);
  }
  return result;
}

unint64_t sub_23AFA7028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542DD470;
  if (!qword_2542DD470)
  {
    v1 = sub_23B1C61B8();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDC6AE8], v1);
    atomic_store(result, (unint64_t *)&qword_2542DD470);
  }
  return result;
}

unint64_t sub_23AFA7070()
{
  unint64_t result;

  result = qword_2569E7948;
  if (!qword_2569E7948)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDCFB88], MEMORY[0x24BEE0F88]);
    atomic_store(result, (unint64_t *)&qword_2569E7948);
  }
  return result;
}

id sub_23AFA70B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  _QWORD v29[2];

  v29[0] = 47;
  v29[1] = 0xE100000000000000;
  v28[2] = v29;
  swift_bridgeObjectRetain();
  v6 = sub_23B181824(4, 0, sub_23ACFA1AC, (uint64_t)v28, a1, a2);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v29[0] = MEMORY[0x24BEE4AF8];
    sub_23AAB5A68(0, v7, 0);
    v8 = (_QWORD *)v29[0];
    v9 = (uint64_t *)(v6 + 56);
    do
    {
      v10 = *(v9 - 3);
      v11 = *(v9 - 2);
      v12 = *(v9 - 1);
      v13 = *v9;
      swift_bridgeObjectRetain();
      v14 = MEMORY[0x23B85ED8C](v10, v11, v12, v13);
      v16 = v15;
      swift_bridgeObjectRelease();
      v29[0] = v8;
      v18 = v8[2];
      v17 = v8[3];
      if (v18 >= v17 >> 1)
      {
        sub_23AAB5A68(v17 > 1, v18 + 1, 1);
        v8 = (_QWORD *)v29[0];
      }
      v8[2] = v18 + 1;
      v19 = &v8[2 * v18];
      v19[4] = v14;
      v19[5] = v16;
      v9 += 4;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if (v8[2] != 5
    || (v8[4] == 3829862 ? (v20 = v8[5] == 0xE300000000000000) : (v20 = 0), !v20 && (sub_23B1C7388() & 1) == 0))
  {
    result = (id)swift_bridgeObjectRelease();
    v22 = 0;
    v21 = 0;
    v23 = 0;
    v26 = 0;
    v27 = 0;
LABEL_21:
    *a3 = v22;
    a3[1] = v21;
    a3[2] = v23;
    a3[3] = v26;
    a3[4] = v27;
    return result;
  }
  v22 = v8[6];
  v21 = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_23B1C63BC();
  result = (id)swift_bridgeObjectRelease();
  if (v8[2] < 4uLL)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v25 = sub_23B1C64AC();
    swift_bridgeObjectRelease();
    if (v25)
    {
      swift_bridgeObjectRetain();
      v26 = sub_23B1C63BC();
      result = (id)swift_bridgeObjectRelease();
    }
    else
    {
      result = (id)*MEMORY[0x24BDC81A0];
      v26 = (uint64_t)result;
    }
    if (v8[2] >= 5uLL)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v27 = sub_23B1C63BC();
      result = (id)swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23AFA7360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AFA73A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7938);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AFA73E8@<X0>(_BYTE *a1@<X8>)
{
  return sub_23AFA6A9C(a1);
}

uint64_t sub_23AFA7404(char a1, char a2)
{
  char v2;
  char v3;

  if (a2 == 1)
    v2 = a1 ^ 1;
  else
    v2 = 1;
  if (a2 == 2)
    v3 = 0;
  else
    v3 = v2;
  return v3 & 1;
}

uint64_t sub_23AFA7428(char a1, char a2)
{
  if (qword_23B1E0848[a2] == qword_23B1E0848[a1])
    return 1;
  if (a2 != 3)
    return !a2 && a1 == 3;
  return !a1;
}

BOOL sub_23AFA7480(char a1)
{
  return a1 != 1;
}

uint64_t sub_23AFA7490(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)&sub_23AFA74AC + 4 * byte_23B1E06C0[a1]))();
}

BOOL sub_23AFA74BC(unsigned __int8 a1)
{
  return a1 - 3 < 0xFFFFFFFE;
}

uint64_t sub_23AFA74D0(char a1)
{
  return qword_23B1E0848[a1];
}

uint64_t sub_23AFA74E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AFA7514 + 4 * byte_23B1E06C4[a1]))(6516580, 0xE300000000000000);
}

uint64_t sub_23AFA7514()
{
  return 7498084;
}

uint64_t sub_23AFA7520()
{
  return 0x6B6E696C6D7973;
}

uint64_t sub_23AFA7538()
{
  return 0x7361696C61;
}

void *sub_23AFA754C()
{
  return &unk_250BDEE50;
}

void sub_23AFA7558(char a1)
{
  uint64_t v2;

  v2 = sub_23B1C5D8C();
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_23AFA75C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23B1C5D38();
  v3 = sub_23B1C5CD8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  return v3;
}

uint64_t sub_23AFA762C()
{
  sub_23B1C74A8();
  sub_23B1C74B4();
  return sub_23B1C74E4();
}

uint64_t sub_23AFA7678()
{
  return sub_23B1C74B4();
}

uint64_t sub_23AFA76AC()
{
  sub_23B1C74A8();
  sub_23B1C74B4();
  return sub_23B1C74E4();
}

uint64_t sub_23AFA76F4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_23AFA7870(*a1);
  *a2 = result;
  return result;
}

void sub_23AFA771C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_23B1E0848[*v1];
}

uint64_t sub_23AFA7734()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AFA775C + 4 * byte_23B1E06CC[*v0]))(6516580, 0xE300000000000000);
}

uint64_t sub_23AFA775C()
{
  return 7498084;
}

uint64_t sub_23AFA7768()
{
  return 0x6B6E696C6D7973;
}

uint64_t sub_23AFA7780()
{
  return 0x7361696C61;
}

uint64_t sub_23AFA7794()
{
  sub_23AFA7B48();
  return sub_23B1C66C8();
}

uint64_t sub_23AFA77F0()
{
  sub_23AFA7B48();
  return sub_23B1C6674();
}

BOOL sub_23AFA783C(char *a1, char *a2)
{
  return qword_23B1E0848[*a1] == qword_23B1E0848[*a2];
}

void sub_23AFA7860(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC6A8;
}

uint64_t sub_23AFA7870(unint64_t a1)
{
  if (a1 >= 5)
    return 4;
  else
    return (0x304020100uLL >> (8 * a1));
}

unint64_t sub_23AFA7898()
{
  unint64_t result;

  result = qword_2569E7958;
  if (!qword_2569E7958)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E07CC, &type metadata for FileItemKind);
    atomic_store(result, (unint64_t *)&qword_2569E7958);
  }
  return result;
}

unint64_t sub_23AFA78E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569E7960;
  if (!qword_2569E7960)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E7968);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2569E7960);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileItemKind()
{
  return &type metadata for FileItemKind;
}

uint64_t sub_23AFA793C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  sub_23ADACFD4(0, 1, 1);
  v0 = v8;
  v2 = *(_QWORD *)(v8 + 16);
  v1 = *(_QWORD *)(v8 + 24);
  if (v2 >= v1 >> 1)
  {
    sub_23ADACFD4(v1 > 1, v2 + 1, 1);
    v0 = v8;
  }
  *(_QWORD *)(v0 + 16) = v2 + 1;
  *(_BYTE *)(v0 + v2 + 32) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_23ADACFD4(0, *(_QWORD *)(v0 + 16) + 1, 1);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  if (v4 >= v3 >> 1)
    sub_23ADACFD4(v3 > 1, v4 + 1, 1);
  *(_QWORD *)(v0 + 16) = v4 + 1;
  *(_BYTE *)(v0 + v4 + 32) = 1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_23ADACFD4(0, *(_QWORD *)(v0 + 16) + 1, 1);
  v6 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  if (v6 >= v5 >> 1)
    sub_23ADACFD4(v5 > 1, v6 + 1, 1);
  *(_QWORD *)(v0 + 16) = v6 + 1;
  *(_BYTE *)(v0 + v6 + 32) = 3;
  return v0;
}

unint64_t sub_23AFA7B48()
{
  unint64_t result;

  result = qword_2569E7970;
  if (!qword_2569E7970)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E071C, &type metadata for FileItemKind);
    atomic_store(result, (unint64_t *)&qword_2569E7970);
  }
  return result;
}

unint64_t sub_23AFA7B90(uint64_t a1)
{
  if (qword_2542E7190 != -1)
    swift_once();
  return a1 & 0xFFFFFFFFFF7FFFEFLL & (qword_2542EDE38 | 0x409000000C000);
}

uint64_t *sub_23AFA7BFC()
{
  if (qword_2542E7190 != -1)
    swift_once();
  return &qword_2542EDE38;
}

void *sub_23AFA7C3C()
{
  return &unk_23B1E0948;
}

void *sub_23AFA7C48()
{
  return &unk_23B1E09A8;
}

void *sub_23AFA7C54()
{
  return &unk_23B1E0938;
}

void *sub_23AFA7C60()
{
  return &unk_23B1E0A78;
}

void *sub_23AFA7C6C()
{
  return &unk_23B1E09C8;
}

void *sub_23AFA7C78()
{
  return &unk_23B1E0AB0;
}

void *sub_23AFA7C84()
{
  return &unk_23B1E0AC8;
}

void *sub_23AFA7C90()
{
  return &unk_23B1E0AD0;
}

void *sub_23AFA7C9C()
{
  return &unk_23B1E0A80;
}

void *sub_23AFA7CA8()
{
  return &unk_23B1E0930;
}

void *sub_23AFA7CB4()
{
  return &unk_23B1E0928;
}

uint64_t sub_23AFA7CC0(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

void *sub_23AFA7CC8()
{
  return &unk_23B1E09C0;
}

void *sub_23AFA7CD4()
{
  return &unk_23B1E0940;
}

uint64_t sub_23AFA7CE0(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

void *sub_23AFA7CE8()
{
  return &unk_23B1E0950;
}

void *sub_23AFA7CF4()
{
  return &unk_23B1E0980;
}

void *sub_23AFA7D00()
{
  return &unk_23B1E0958;
}

void *sub_23AFA7D0C()
{
  return &unk_23B1E0988;
}

void *sub_23AFA7D18()
{
  return &unk_23B1E0990;
}

void *sub_23AFA7D24()
{
  return &unk_23B1E0998;
}

void *sub_23AFA7D30()
{
  return &unk_23B1E09A0;
}

void *sub_23AFA7D3C()
{
  return &unk_23B1E09B0;
}

void *sub_23AFA7D48()
{
  return &unk_23B1E0A88;
}

void *sub_23AFA7D54()
{
  return &unk_23B1E0960;
}

void *sub_23AFA7D60()
{
  return &unk_23B1E0968;
}

void *sub_23AFA7D6C()
{
  return &unk_23B1E0970;
}

void *sub_23AFA7D78()
{
  return &unk_23B1E0978;
}

void *sub_23AFA7D84()
{
  return &unk_23B1E09B8;
}

void *sub_23AFA7D90()
{
  return &unk_23B1E0A90;
}

void *sub_23AFA7D9C()
{
  return &unk_23B1E0A98;
}

void *sub_23AFA7DA8()
{
  return &unk_23B1E0AA0;
}

void *sub_23AFA7DB4()
{
  return &unk_23B1E09F8;
}

void *sub_23AFA7DC0()
{
  return &unk_23B1E0A08;
}

void *sub_23AFA7DCC()
{
  return &unk_23B1E0A10;
}

void *sub_23AFA7DD8()
{
  return &unk_23B1E0AC0;
}

void *sub_23AFA7DE4()
{
  return &unk_23B1E0AD8;
}

uint64_t sub_23AFA7DF0()
{
  return 0x80000000;
}

uint64_t sub_23AFA7DFC()
{
  return 0x40000000;
}

uint64_t *sub_23AFA7E04()
{
  if (qword_2542DE248 != -1)
    swift_once();
  return &qword_2542EDC50;
}

void *sub_23AFA7E44()
{
  return &unk_23B1E0AE0;
}

void *sub_23AFA7E50()
{
  return &unk_23B1E0AE8;
}

void *sub_23AFA7E5C()
{
  return &unk_23B1E0AA8;
}

BOOL sub_23AFA7E68(char a1)
{
  return (a1 & 0x18) != 0;
}

unint64_t sub_23AFA7E74(uint64_t a1)
{
  if (qword_2542E7190 != -1)
    swift_once();
  return a1 & 0xFE9FFFFFFFFEBFE7 & (qword_2542EDE38 | 0x10000000000);
}

void *sub_23AFA7ED8()
{
  return &unk_23B1E09D0;
}

void *sub_23AFA7EE4()
{
  return &unk_23B1E09D8;
}

void *sub_23AFA7EF0()
{
  return &unk_23B1E09E0;
}

void *sub_23AFA7EFC()
{
  return &unk_23B1E09E8;
}

void *sub_23AFA7F08()
{
  return &unk_23B1E09F0;
}

void *sub_23AFA7F14()
{
  return &unk_23B1E0A00;
}

void *sub_23AFA7F20()
{
  return &unk_23B1E0A18;
}

void *sub_23AFA7F2C()
{
  return &unk_23B1E0A20;
}

void *sub_23AFA7F38()
{
  return &unk_23B1E0A28;
}

void *sub_23AFA7F44()
{
  return &unk_23B1E0A30;
}

void *sub_23AFA7F50()
{
  return &unk_23B1E0A38;
}

void *sub_23AFA7F5C()
{
  return &unk_23B1E0A40;
}

void *sub_23AFA7F68()
{
  return &unk_23B1E0A48;
}

void *sub_23AFA7F74()
{
  return &unk_23B1E0A50;
}

void *sub_23AFA7F80()
{
  return &unk_23B1E0A58;
}

void *sub_23AFA7F8C()
{
  return &unk_23B1E0A60;
}

void *sub_23AFA7F98()
{
  return &unk_23B1E0A68;
}

void *sub_23AFA7FA4()
{
  return &unk_23B1E0A70;
}

void *sub_23AFA7FB0()
{
  return &unk_23B1E0AB8;
}

uint64_t *sub_23AFA7FBC()
{
  if (qword_2542E1788 != -1)
    swift_once();
  return &qword_2542EDC48;
}

uint64_t sub_23AFA8000()
{
  return 0x10000000000;
}

uint64_t sub_23AFA8008()
{
  return 16;
}

uint64_t sub_23AFA8010()
{
  return 0x200000000000;
}

uint64_t sub_23AFA8018()
{
  return 0x2000;
}

uint64_t sub_23AFA8020()
{
  return 0x10000;
}

uint64_t sub_23AFA8028()
{
  return 0x20000;
}

uint64_t sub_23AFA8030()
{
  return 0x20000000000;
}

uint64_t sub_23AFA8038()
{
  return 0x8000;
}

uint64_t sub_23AFA8040()
{
  return 0x40000;
}

uint64_t sub_23AFA8048()
{
  return 0x80000;
}

uint64_t sub_23AFA8050()
{
  return 0x100000;
}

uint64_t sub_23AFA8058()
{
  return 0x200000;
}

uint64_t sub_23AFA8060()
{
  return 0x400000;
}

uint64_t sub_23AFA8068()
{
  return 0x1000000;
}

uint64_t sub_23AFA8070()
{
  return 0x2000000;
}

uint64_t sub_23AFA8078()
{
  return 0x4000000;
}

uint64_t sub_23AFA8080()
{
  return 0x8000000;
}

uint64_t sub_23AFA8088()
{
  return 0x10000000;
}

uint64_t sub_23AFA8090()
{
  return 0x20000000;
}

uint64_t sub_23AFA8098()
{
  return 0x100000000;
}

uint64_t sub_23AFA80A0()
{
  return 0x200000000;
}

uint64_t sub_23AFA80A8()
{
  return 0x400000000;
}

uint64_t sub_23AFA80B0()
{
  return 0x800000000;
}

uint64_t sub_23AFA80B8()
{
  return 0x1000000000;
}

uint64_t sub_23AFA80C0()
{
  return 0x2000000000;
}

uint64_t sub_23AFA80C8()
{
  return 0x4000000000;
}

uint64_t sub_23AFA80D0()
{
  return 0x8000000000;
}

uint64_t sub_23AFA80D8()
{
  return 0x80000000000;
}

uint64_t sub_23AFA80E0()
{
  return 0x100000000000;
}

uint64_t sub_23AFA80E8()
{
  return 0x800000;
}

uint64_t sub_23AFA80F0()
{
  return 0x400000000000;
}

uint64_t sub_23AFA80F8()
{
  return 0x800000000000;
}

uint64_t sub_23AFA8100()
{
  return 0x1000000000000;
}

uint64_t sub_23AFA8108()
{
  return 0x2000000000000;
}

uint64_t sub_23AFA8110()
{
  return 0x4000000000000;
}

uint64_t sub_23AFA8118()
{
  return 0x8000000000000;
}

uint64_t sub_23AFA8120()
{
  return 0x10000000000000;
}

uint64_t sub_23AFA8128()
{
  return 0x20000000000000;
}

uint64_t sub_23AFA8130()
{
  return 0x40000000000000;
}

uint64_t sub_23AFA8138()
{
  return 0x100000000000000;
}

uint64_t sub_23AFA8140()
{
  return 0x400000000000000;
}

uint64_t sub_23AFA8148()
{
  return 0x800000000000000;
}

void sub_23AFA8150()
{
  qword_2542E7198 = 0x1F2000D033FEFLL;
}

void sub_23AFA82A8()
{
  qword_2542EDC48 = 0x1600021AF1C0000;
}

uint64_t sub_23AFA8374()
{
  return sub_23AFA83F4(&qword_2542E1788, (uint64_t)&qword_2542EDC48);
}

uint64_t sub_23AFA8390()
{
  uint64_t result;

  if (qword_2542E71A0 != -1)
    result = swift_once();
  qword_2542EDE38 = qword_2542E7198;
  return result;
}

uint64_t sub_23AFA83D8()
{
  return sub_23AFA83F4(&qword_2542E7190, (uint64_t)&qword_2542EDE38);
}

uint64_t sub_23AFA83F4(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(_QWORD *)a2;
}

uint64_t sub_23AFA842C()
{
  uint64_t v0;
  uint64_t result;

  if (qword_2542E7190 != -1)
    result = swift_once();
  v0 = qword_2542EDE38;
  if (qword_2542DE248 != -1)
    result = swift_once();
  qword_2542EDD08 = v0 & ~qword_2542EDC50;
  return result;
}

uint64_t sub_23AFA84B0()
{
  uint64_t result;

  if (qword_2542E7190 != -1)
    result = swift_once();
  qword_2542EDD00 = qword_2542EDE38 | 0x4000;
  return result;
}

uint64_t sub_23AFA84FC(uint64_t a1)
{
  uint64_t result;

  if (qword_2542E7190 != -1)
    swift_once();
  if (qword_2542EDE38 == a1)
    return 7105633;
  if (qword_2542E1798 != -1)
    swift_once();
  if (qword_2542EDD08 == a1)
    return 0x70662D6C6C61;
  result = 0;
  if (a1 > 0xFFFFFFF)
  {
    if (a1 > 0x7FFFFFFFFFFLL)
    {
      if (a1 <= 0x3FFFFFFFFFFFFLL)
      {
        if (a1 <= 0x3FFFFFFFFFFFLL)
        {
          switch(a1)
          {
            case 0x80000000000:
              return 0x6165726C4179616DLL;
            case 0x100000000000:
              return 0x746F6F72636E7973;
            case 0x200000000000:
              return 0x6567616B636170;
          }
        }
        else if (a1 > 0xFFFFFFFFFFFFLL)
        {
          if (a1 == 0x1000000000000)
          {
            return 0xD000000000000017;
          }
          else if (a1 == 0x2000000000000)
          {
            return 0x50746E65746E6F63;
          }
        }
        else if (a1 == 0x400000000000)
        {
          return 0x43646E4165707974;
        }
        else if (a1 == 0x800000000000)
        {
          return 0x6E756F436B6E696CLL;
        }
        return result;
      }
      if (a1 > 0x1FFFFFFFFFFFFFLL)
      {
        if (a1 > 0xFFFFFFFFFFFFFFLL)
        {
          if (a1 == 0x100000000000000)
            return 0x6E6F697463697665;
          if (a1 == 0x400000000000000)
            return 0xD000000000000016;
        }
        else if (a1 == 0x20000000000000)
        {
          return 0x73756150636E7973;
        }
        else if (a1 == 0x40000000000000)
        {
          return 0xD000000000000020;
        }
        return result;
      }
      if (a1 == 0x4000000000000)
        return 0xD000000000000013;
      if (a1 != 0x8000000000000)
      {
        if (a1 == 0x10000000000000)
          return 0x6465686361746564;
        return result;
      }
    }
    else
    {
      if (a1 <= 0x7FFFFFFFFLL)
      {
        if (a1 <= 0x7FFFFFFF)
        {
          switch(a1)
          {
            case 0x10000000:
              return 0xD000000000000020;
            case 0x20000000:
              return 0xD000000000000017;
            case 0x40000000:
              return 0xD000000000000012;
          }
        }
        else if (a1 > 0x1FFFFFFFFLL)
        {
          if (a1 == 0x200000000)
          {
            return 0xD00000000000001CLL;
          }
          else if (a1 == 0x400000000)
          {
            return 0xD000000000000018;
          }
        }
        else if (a1 == 0x80000000)
        {
          return 0x6961746E6F437369;
        }
        else if (a1 == 0x100000000)
        {
          return 0xD000000000000013;
        }
        return result;
      }
      if (a1 > 0x3FFFFFFFFFLL)
      {
        if (a1 > 0xFFFFFFFFFFLL)
        {
          if (a1 == 0x10000000000)
          {
            return 1684957547;
          }
          else if (a1 == 0x20000000000)
          {
            return 0x7275746375727473;
          }
        }
        else if (a1 == 0x4000000000)
        {
          return 0x6F6365446D657469;
        }
        else if (a1 == 0x8000000000)
        {
          return 0x6F666E4972657375;
        }
        return result;
      }
      if (a1 != 0x800000000)
      {
        if (a1 == 0x1000000000)
          return 0x4E79616C70736964;
        if (a1 == 0x2000000000)
          return 0xD000000000000016;
        return result;
      }
    }
    return 0xD000000000000014;
  }
  if (a1 < 0x4000)
  {
    if (a1 > 127)
    {
      if (a1 <= 1023)
      {
        switch(a1)
        {
          case 128:
            return 0x657469726F766166;
          case 256:
            return 0x737274746178;
          case 512:
            return 0x64656B636F6CLL;
        }
      }
      else if (a1 > 4095)
      {
        if (a1 == 4096)
        {
          return 0x6E6564646968;
        }
        else if (a1 == 0x2000)
        {
          return 0x6564646948747865;
        }
      }
      else if (a1 == 1024)
      {
        return 0x656D697462;
      }
      else if (a1 == 2048)
      {
        return 0x656D69746DLL;
      }
    }
    else
    {
      switch(a1)
      {
        case 1:
          result = 0x656D616E656C6966;
          break;
        case 2:
          result = 0x4449746E65726170;
          break;
        case 4:
          result = 0xD000000000000010;
          break;
        case 8:
          result = 0x746E65746E6F63;
          break;
        case 16:
          result = 0x7373656C61746164;
          break;
        case 32:
          result = 0x646573557473616CLL;
          break;
        case 64:
          result = 1936154996;
          break;
        default:
          return result;
      }
    }
    return result;
  }
  if (a1 < 0x200000)
  {
    if (a1 >= 0x20000)
    {
      if (a1 >= 0x80000)
      {
        if (a1 == 0x80000 || a1 == 0x100000)
          return 0x64616F6C70557369;
      }
      else if (a1 == 0x20000)
      {
        return 0x64656E6E6970;
      }
      else if (a1 == 0x40000)
      {
        return 0x696C696261706163;
      }
      return result;
    }
    switch(a1)
    {
      case 0x4000:
        return 0x6572646C6968636ELL;
      case 0x8000:
        return 0x7272757365527369;
      case 0x10000:
        return 0x6E6F697463697665;
    }
    return result;
  }
  if (a1 <= 0xFFFFFF)
  {
    switch(a1)
    {
      case 0x200000:
        return 0x6E6964616F6C7075;
      case 0x400000:
        return 0xD000000000000010;
      case 0x800000:
        return 0x65726F6E6769;
    }
    return result;
  }
  if (a1 > 0x3FFFFFF)
  {
    if (a1 == 0x4000000)
      return 0xD000000000000015;
    if (a1 == 0x8000000)
      return 0xD000000000000015;
    return result;
  }
  if (a1 == 0x1000000)
    return 0x6465726168537369;
  if (a1 == 0x2000000)
    return 0xD000000000000014;
  return result;
}

uint64_t sub_23AFA8EA8(uint64_t a1)
{
  if (qword_2542E7190 != -1)
    swift_once();
  if ((qword_2542EDE38 & a1) == qword_2542EDE38)
    return 7105633;
  else
    return 0;
}

unint64_t sub_23AFA8F18(uint64_t a1)
{
  if (qword_2542E7190 != -1)
    swift_once();
  return a1 & 0xFFFFDFFFFFFEF6E7 & (qword_2542EDE38 | 0x6409000000C000);
}

uint64_t sub_23AFA8F88(uint64_t a1)
{
  return a1 | 0x918;
}

unint64_t sub_23AFA8F94(uint64_t a1)
{
  if (qword_2542E7190 != -1)
    swift_once();
  return a1 & 0xFFFFFFFFFFFFFFF4 & (qword_2542EDE38 | 0x409000000C000);
}

void sub_23AFA8FFC()
{
  qword_2542EDC50 = 0x16180000D034200;
}

uint64_t sub_23AFA90AC()
{
  uint64_t *v0;

  return sub_23AFA84FC(*v0);
}

int8x16_t sub_23AFA90B4@<Q0>(int8x16_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int32x2_t v5;
  int64x2_t v6;
  int8x16_t result;

  v3 = *v1;
  if (qword_2542E7190 != -1)
    swift_once();
  v4 = v3 & ~qword_2542EDE38;
  if ((qword_2542EDE38 & v3) != qword_2542EDE38)
    v4 = 0;
  v5 = vdup_n_s32((qword_2542EDE38 & v3) == qword_2542EDE38);
  v6.i64[0] = v5.u32[0];
  v6.i64[1] = v5.u32[1];
  result = vandq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v6, 0x3FuLL)), (int8x16_t)xmmword_23B1E0E70);
  *a1 = result;
  a1[1].i64[0] = v4;
  return result;
}

uint64_t sub_23AFA913C()
{
  uint64_t *v0;

  return sub_23AF16528(*v0);
}

uint64_t sub_23AFA9144()
{
  uint64_t *v0;

  return sub_23AFD4D9C(*v0);
}

uint64_t sub_23AFA914C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = 0;
  if (a1 > 127)
  {
    v3 = 0x43646E4165707974;
    if (a1 == 0x80000000)
      v4 = 0xD000000000000013;
    else
      v4 = 0;
    if (a1 == 0x40000000)
      v5 = 0x64656873617274;
    else
      v5 = v4;
    if (a1 != 1024)
      v3 = v5;
    v6 = 0x656D69746DLL;
    v7 = 0x74737953656C6966;
    v8 = 0x737274746178;
    if (a1 != 512)
      v8 = 0;
    if (a1 != 256)
      v7 = v8;
    if (a1 != 128)
      v6 = v7;
    if (a1 <= 1023)
      return v6;
    else
      return v3;
  }
  else
  {
    switch(a1)
    {
      case 1:
        result = 0x73746E65746E6F63;
        break;
      case 2:
        result = 0x656D616E656C6966;
        break;
      case 4:
        result = 0x4449746E65726170;
        break;
      case 8:
        result = 0x646573557473616CLL;
        break;
      case 16:
        result = 0x61746144676174;
        break;
      case 32:
        result = 0x657469726F766166;
        break;
      case 64:
        result = 0x656D697463;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_23AFA9330()
{
  uint64_t *v0;

  return sub_23AFA914C(*v0);
}

unint64_t sub_23AFA9338()
{
  unint64_t *v0;

  return sub_23AF16924(*v0);
}

uint64_t sub_23AFA9340()
{
  uint64_t *v0;

  return sub_23AFD4F24(*v0);
}

uint64_t sub_23AFA9348(int a1)
{
  uint64_t v1;
  uint64_t v2;

  if ((a1 & 2) != 0)
  {
    if ((a1 & 4) == 0)
    {
      if ((a1 & 0x100) == 0)
      {
        v1 = 1;
        if ((a1 & 0x80) == 0)
          goto LABEL_27;
        goto LABEL_5;
      }
      v2 = a1 & 0x100;
      v1 = 1;
      goto LABEL_23;
    }
    v1 = 3;
    if ((a1 & 0x100) != 0)
    {
LABEL_19:
      v2 = a1 & 0x100;
LABEL_23:
      v1 |= 4uLL;
LABEL_24:
      if (v2)
        v1 |= 0x3000uLL;
      if ((a1 & 0x80) == 0)
        goto LABEL_27;
LABEL_5:
      v1 |= 0x800uLL;
      if ((a1 & 0x40) != 0)
        goto LABEL_6;
      goto LABEL_28;
    }
LABEL_21:
    v2 = 0;
    goto LABEL_24;
  }
  if ((a1 & 4) != 0)
  {
    v1 = 2;
    if ((a1 & 0x100) != 0)
      goto LABEL_19;
    goto LABEL_21;
  }
  v1 = 0;
  if ((a1 & 0x100) != 0)
    goto LABEL_19;
  if ((a1 & 0x80) != 0)
    goto LABEL_5;
LABEL_27:
  if ((a1 & 0x40) != 0)
  {
LABEL_6:
    v1 |= 0x400uLL;
    if ((a1 & 1) != 0)
      goto LABEL_7;
    goto LABEL_29;
  }
LABEL_28:
  if ((a1 & 1) != 0)
  {
LABEL_7:
    v1 |= 8uLL;
    if ((a1 & 8) != 0)
      goto LABEL_8;
    goto LABEL_30;
  }
LABEL_29:
  if ((a1 & 8) != 0)
  {
LABEL_8:
    v1 |= 0x20uLL;
    if ((a1 & 0x10) != 0)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_30:
  if ((a1 & 0x10) != 0)
  {
LABEL_9:
    v1 |= 0x40uLL;
    if ((a1 & 0x20) != 0)
      goto LABEL_10;
    goto LABEL_32;
  }
LABEL_31:
  if ((a1 & 0x20) != 0)
  {
LABEL_10:
    v1 |= 0x80uLL;
    if ((a1 & 0x200) != 0)
      goto LABEL_11;
    goto LABEL_33;
  }
LABEL_32:
  if ((a1 & 0x200) != 0)
  {
LABEL_11:
    v1 |= 0x100uLL;
    if ((a1 & 0x400) != 0)
      goto LABEL_12;
    goto LABEL_34;
  }
LABEL_33:
  if ((a1 & 0x400) != 0)
  {
LABEL_12:
    v1 |= 0x400000000000uLL;
    if ((a1 & 0x80000000) == 0)
      return v1;
    return v1 | 0x4000000000000;
  }
LABEL_34:
  if (a1 < 0)
    return v1 | 0x4000000000000;
  return v1;
}

uint64_t sub_23AFA941C(uint64_t a1)
{
  uint64_t v1;

  if ((a1 & 1) == 0)
  {
    if ((a1 & 2) == 0)
    {
      if ((a1 & 0x3004) == 0)
      {
        if ((a1 & 0x800) != 0)
        {
          v1 = 128;
          if ((a1 & 0x400) == 0)
            goto LABEL_21;
        }
        else
        {
          if ((a1 & 0x400) == 0)
          {
            if ((a1 & 0x18) != 0)
            {
              v1 = 0;
              goto LABEL_22;
            }
            v1 = 0;
            if ((a1 & 0x20) == 0)
              goto LABEL_34;
LABEL_23:
            v1 |= 8uLL;
            if ((a1 & 0x40) != 0)
              goto LABEL_24;
            goto LABEL_35;
          }
          v1 = 0;
        }
        goto LABEL_32;
      }
      v1 = 0;
      goto LABEL_11;
    }
    v1 = 4;
LABEL_10:
    if ((a1 & 0x3004) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
  if ((a1 & 2) != 0)
  {
    v1 = 6;
    goto LABEL_10;
  }
  if ((a1 & 0x3004) != 0)
  {
    v1 = 2;
LABEL_11:
    v1 |= 0x100uLL;
LABEL_12:
    if ((a1 & 0x800) == 0)
      goto LABEL_13;
LABEL_20:
    v1 |= 0x80uLL;
    if ((a1 & 0x400) == 0)
      goto LABEL_21;
    goto LABEL_32;
  }
  v1 = 2;
  if ((a1 & 0x800) != 0)
    goto LABEL_20;
LABEL_13:
  if ((a1 & 0x400) == 0)
  {
LABEL_21:
    if ((a1 & 0x18) != 0)
      goto LABEL_22;
    goto LABEL_33;
  }
LABEL_32:
  v1 |= 0x40uLL;
  if ((a1 & 0x18) == 0)
  {
LABEL_33:
    if ((a1 & 0x20) == 0)
      goto LABEL_34;
    goto LABEL_23;
  }
LABEL_22:
  v1 |= 1uLL;
  if ((a1 & 0x20) != 0)
    goto LABEL_23;
LABEL_34:
  if ((a1 & 0x40) != 0)
  {
LABEL_24:
    v1 |= 0x10uLL;
    if ((a1 & 0x80) != 0)
      goto LABEL_25;
    goto LABEL_36;
  }
LABEL_35:
  if ((a1 & 0x80) != 0)
  {
LABEL_25:
    v1 |= 0x20uLL;
    if ((a1 & 0x100) != 0)
      goto LABEL_26;
    goto LABEL_37;
  }
LABEL_36:
  if ((a1 & 0x100) != 0)
  {
LABEL_26:
    v1 |= 0x200uLL;
    if ((a1 & 0x400000000000) != 0)
      goto LABEL_27;
    goto LABEL_38;
  }
LABEL_37:
  if ((a1 & 0x400000000000) != 0)
  {
LABEL_27:
    v1 |= 0x400uLL;
    if ((a1 & 0x4000000000000) == 0)
      return v1;
    return v1 | 0x80000000;
  }
LABEL_38:
  if ((a1 & 0x4000000000000) != 0)
    return v1 | 0x80000000;
  return v1;
}

uint64_t sub_23AFA952C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23AFA9540, (uint64_t (*)(void))sub_23AFA9584);
}

unint64_t sub_23AFA9540()
{
  unint64_t result;

  result = qword_2569E7978;
  if (!qword_2569E7978)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0B68, &type metadata for Fields);
    atomic_store(result, (unint64_t *)&qword_2569E7978);
  }
  return result;
}

unint64_t sub_23AFA9584()
{
  unint64_t result;

  result = qword_2569E7980;
  if (!qword_2569E7980)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0B4C, &type metadata for Fields);
    atomic_store(result, (unint64_t *)&qword_2569E7980);
  }
  return result;
}

unint64_t sub_23AFA95CC()
{
  unint64_t result;

  result = qword_2569E7988;
  if (!qword_2569E7988)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0B90, &type metadata for Fields);
    atomic_store(result, (unint64_t *)&qword_2569E7988);
  }
  return result;
}

uint64_t sub_23AFA9610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23AFA9624, (uint64_t (*)(void))sub_23AFA9668);
}

unint64_t sub_23AFA9624()
{
  unint64_t result;

  result = qword_2569E79B0;
  if (!qword_2569E79B0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0BB8, &type metadata for Fields);
    atomic_store(result, (unint64_t *)&qword_2569E79B0);
  }
  return result;
}

unint64_t sub_23AFA9668()
{
  unint64_t result;

  result = qword_2569E79B8;
  if (!qword_2569E79B8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0BF0, &type metadata for Fields);
    atomic_store(result, (unint64_t *)&qword_2569E79B8);
  }
  return result;
}

unint64_t sub_23AFA96B0()
{
  unint64_t result;

  result = qword_2569E79C0;
  if (!qword_2569E79C0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0D20, &type metadata for Fields);
    atomic_store(result, (unint64_t *)&qword_2569E79C0);
  }
  return result;
}

unint64_t sub_23AFA96F8()
{
  unint64_t result;

  result = qword_2569E79C8;
  if (!qword_2569E79C8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0C58, &type metadata for Fields);
    atomic_store(result, (unint64_t *)&qword_2569E79C8);
  }
  return result;
}

uint64_t sub_23AFA973C()
{
  return sub_23AFA98A0(&qword_2569E79D0, &qword_2569E79D8);
}

unint64_t sub_23AFA9764()
{
  unint64_t result;

  result = qword_2569E79E0;
  if (!qword_2569E79E0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E0D58, &type metadata for Fields);
    atomic_store(result, (unint64_t *)&qword_2569E79E0);
  }
  return result;
}

uint64_t sub_23AFA97A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AFA97CC(a1, a2, a3, &qword_2569E79E8, (uint64_t)&unk_23B1E0DCC, qword_2569E79F0, (uint64_t)&unk_23B1E0DA4);
}

uint64_t sub_23AFA97CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6, uint64_t a7)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23AFA983C(a4, a5);
  result = sub_23AFA983C(a6, a7);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23AFA9818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AFA97CC(a1, a2, a3, &qword_2569E7A18, (uint64_t)&unk_23B1CC8FC, &qword_2569E7A20, (uint64_t)&unk_23B1E0DF8);
}

uint64_t sub_23AFA983C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for NSFileProviderItemFields(255);
    result = MEMORY[0x23B8613CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23AFA987C()
{
  return sub_23AFA98A0(&qword_2569E7A28, &qword_2569E7A30);
}

uint64_t sub_23AFA98A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B8613CC](&unk_23B1DD070, v4);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Fields()
{
  return &type metadata for Fields;
}

uint64_t *sub_23AFA98F4()
{
  if (qword_2542E1FE0 != -1)
    swift_once();
  return &qword_2542EDC88;
}

uint64_t *sub_23AFA9934()
{
  if (qword_2542E1FE8 != -1)
    swift_once();
  return &qword_2542EDC90;
}

id sub_23AFA9974(void *a1, uint64_t a2)
{
  id v3;

  v3 = objc_msgSend(a1, sel_stringAtIndex_, a2);
  if (!v3)
  {
    sub_23B1C63E0();
    v3 = (id)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }

  return v3;
}

uint64_t sub_23AFA99E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
    v4 = 0;
  else
    v4 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_23AFA9A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23AFA9AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    v6 = 1;
  }
  else
  {
    v5 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_23AFA9B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;

  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    v6 = 1;
  }
  else
  {
    v5 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_23AFA9C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23B1C63E0();
  v2 = v1;
  if (v0 == sub_23B1C63E0() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

const char *sub_23AFA9CA0()
{
  return "BLOB";
}

uint64_t sub_23AFA9CB0()
{
  uint64_t v0;

  v0 = sub_23B1C63BC();
  swift_bridgeObjectRelease();
  return v0;
}

id sub_23AFA9CE0()
{
  qword_2542EDC88 = *MEMORY[0x24BDC8228];
  return (id)qword_2542EDC88;
}

id sub_23AFA9CF8()
{
  return sub_23AFA9D48(&qword_2542E1FE0, (id *)&qword_2542EDC88);
}

id sub_23AFA9D14()
{
  qword_2542EDC90 = *MEMORY[0x24BDC8230];
  return (id)qword_2542EDC90;
}

id sub_23AFA9D2C()
{
  return sub_23AFA9D48(&qword_2542E1FE8, (id *)&qword_2542EDC90);
}

id sub_23AFA9D48(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_23AFA9D80(sqlite3_value *a1)
{
  return sub_23AFAA0C8(a1);
}

id sub_23AFA9D94@<X0>(void **a1@<X8>)
{
  return sub_23AFA9DCC(&qword_2542E1FE0, (void **)&qword_2542EDC88, a1);
}

id sub_23AFA9DB0@<X0>(void **a1@<X8>)
{
  return sub_23AFA9DCC(&qword_2542E1FE8, (void **)&qword_2542EDC90, a1);
}

id sub_23AFA9DCC@<X0>(_QWORD *a1@<X2>, void **a2@<X3>, void **a3@<X8>)
{
  void *v5;

  if (*a1 != -1)
    swift_once();
  v5 = *a2;
  *a3 = *a2;
  return v5;
}

uint64_t sub_23AFA9E10()
{
  return sub_23B1C63E0();
}

uint64_t sub_23AFA9E18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23B1C63BC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23AFA9E54@<X0>(sqlite3_value *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23AFAA0C8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23AFA9E7C()
{
  sub_23AFAA2B0(&qword_2569E17C0, (uint64_t)&unk_23B1CAD4C);
  return sub_23B1C66BC();
}

uint64_t sub_23AFA9EE8()
{
  sub_23AFAA2B0(&qword_2569E17C0, (uint64_t)&unk_23B1CAD4C);
  return sub_23B1C6668();
}

id sub_23AFA9F44(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  void *v15;
  uint64_t v16;
  _QWORD v17[2];

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v12, v11) & 1) != 0 && (a2 & 1) != 0)
  {
    v13 = (id *)MEMORY[0x24BDC8228];
    return *v13;
  }
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(a3, a4) & 1) != 0 && (a2 & 1) != 0)
  {
    v13 = (id *)MEMORY[0x24BDC8230];
    return *v13;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  type metadata accessor for NSFileProviderItemIdentifier(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v15 = (void *)v17[0];
    sub_23B1C63E0();
    v16 = sub_23B1C63BC();
    swift_bridgeObjectRelease();

  }
  else
  {
    v17[0] = 0x2F73662F70665F5FLL;
    v17[1] = 0xE800000000000000;
    (*(void (**)(uint64_t, uint64_t))(a4 + 80))(a3, a4);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v16 = sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  return (id)v16;
}

uint64_t sub_23AFAA0C8(sqlite3_value *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_23B1C6428();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sqlite3_value_blob(a1);
  result = sqlite3_value_bytes(a1);
  if (v4)
  {
    v6 = sub_23AB3C24C(v4, (int)result);
    v8 = v7;
    sub_23B1C641C();
    v9 = sub_23B1C63F8();
    if (v10)
    {
      v11 = HIBYTE(v10) & 0xF;
      if ((v10 & 0x2000000000000000) == 0)
        v11 = v9 & 0xFFFFFFFFFFFFLL;
      if (v11)
      {
        v1 = sub_23B1C63BC();
        sub_23AAAE53C(v6, v8);
        swift_bridgeObjectRelease();
        return v1;
      }
      swift_bridgeObjectRelease();
    }
    sub_23AB23A94();
    swift_allocError();
    *(_OWORD *)v12 = 0u;
    *(_OWORD *)(v12 + 16) = 0u;
    *(_OWORD *)(v12 + 32) = 0u;
    *(_BYTE *)(v12 + 48) = 8;
    swift_willThrow();
    sub_23AAAE53C(v6, v8);
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AFAA210()
{
  return sub_23AFAA2B0(&qword_2542E7538, (uint64_t)&unk_23B1CC8D0);
}

uint64_t sub_23AFAA234(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23AFAA2B0(&qword_2542E5520, (uint64_t)&unk_23B1E0F04);
  a1[2] = sub_23AFAA2B0(&qword_2542E7540, (uint64_t)&unk_23B1E0F40);
  a1[3] = sub_23AFAA2B0(&qword_2542E7528, (uint64_t)&unk_23B1E0F6C);
  result = sub_23AFAA2B0(&qword_2542E7530, (uint64_t)&unk_23B1CC88C);
  a1[4] = result;
  return result;
}

uint64_t sub_23AFAA2B0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for NSFileProviderItemIdentifier(255);
    result = MEMORY[0x23B8613CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23AFAA2F0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23B1C6050();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  qos_class_self();
  sub_23B1C6038();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5498], v3);
    sub_23AFAA404((uint64_t)v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  }
  return sub_23B1C608C();
}

uint64_t sub_23AFAA404(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23AFAA444(dispatch_time_t a1)
{
  NSObject *v2;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClassUnconditional();
  dispatch_source_set_timer(v2, a1, 0xFFFFFFFFFFFFFFFFLL, 0);
}

void sub_23AFAA490(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD v26[12];
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v10 = v9;
  v30 = a6;
  v31 = a7;
  v32 = a9;
  v17 = a1;
  if (!a1)
    v17 = (id)fpfs_current_log();
  v18 = a1;
  v19 = (id)fpfs_adopt_log();
  v20 = v19;
  v35 = 0;
  v36 = 1;
  if ((a2 & 1) == 0)
  {
    v33 = sub_23B1C6B6C();
    v34 = v21;
    sub_23B1C64F4();
    sub_23B1C6F2C();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C6458();
    swift_bridgeObjectRelease();
    v22 = __fp_log_fork();
    v19 = (id)swift_release();
    v35 = v22;
    v36 = 0;
  }
  v23 = MEMORY[0x24BDAC7A8](v19);
  v26[6] = a8;
  v26[7] = v17;
  v26[8] = &v35;
  v26[9] = v10;
  v26[10] = a3;
  v26[11] = a4;
  v27 = a5;
  v28 = v30;
  v29 = v31;
  MEMORY[0x24BDAC7A8](v23);
  v26[2] = a8;
  sub_23AFAA95C((uint64_t)sub_23AFAACB8, v24, (void (*)(id))sub_23AFAACEC, (uint64_t)v26, a8, v32);
  v25 = (id)fpfs_adopt_log();

}

uint64_t sub_23AFAA668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a5;
  v20 = a3;
  v21 = a4;
  v22 = a1;
  v23 = a2;
  v6 = sub_23B1C6B3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C6AE8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C60A4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v14);
  v17 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v21, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5758], v6);
  v18 = sub_23B1C6B60();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v17, v10);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v20, v14);
  return v18;
}

uint64_t sub_23AFAA7E8(const void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];

  v2 = sub_23B1C602C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C60A4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _Block_copy(a1);
  sub_23B1C6080();
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AA81D34();
  sub_23B1C6DE8();
  sub_23B1C6B9C();
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23AFAA95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(id)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  NSObject *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  void (*v27)(id);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];
  id v32;

  v28 = a6;
  v26[1] = a4;
  v27 = a3;
  v30 = sub_23B1C6C98();
  v10 = *(_QWORD *)(v30 - 8);
  v11 = MEMORY[0x24BDAC7A8](v30);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v26 - v14;
  v16 = *(_QWORD *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))((char *)v26 - v14, 1, 1, a5);
  v32 = 0;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a5;
  v17[3] = v15;
  v17[4] = a1;
  v17[5] = a2;
  v17[6] = &v32;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_23AFAB144;
  *(_QWORD *)(v18 + 24) = v17;
  aBlock[4] = sub_23AB22A20;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1A764C;
  aBlock[3] = &block_descriptor_25_0;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  FPDispatchAsyncAndWait(v6, v19);
  _Block_release(v19);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v22 = v32;
    if (v32)
    {
      v23 = v32;
      v24 = v29;
      v27(v22);
      if (v24)
      {

        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v30);
        return swift_release();
      }

      v25 = v30;
LABEL_8:

      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v25);
      return swift_release();
    }
    v25 = v30;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v30);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, a5);
    if ((_DWORD)result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v28, v13, a5);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23AFAABDC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v14 - v11;
  a2(v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 56))(v12, 0, 1, a5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 40))(a1, v12, v8);
}

void sub_23AFAACB8()
{
  uint64_t v0;

  sub_23ACD1F74(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(void (**)(void))(v0 + 72));
}

id sub_23AFAACEC(void *a1)
{
  swift_willThrow();
  return a1;
}

BOOL sub_23AFAAD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  unsigned int v7;
  void (*v8)(char *, uint64_t);
  unsigned int v9;
  uint64_t v11;

  v0 = sub_23B1C6050();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - v5;
  sub_23B1C6098();
  v7 = sub_23B1C6044();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_23B1C6098();
  v9 = sub_23B1C6044();
  v8(v4, v0);
  return v7 < v9;
}

uint64_t sub_23AFAADFC()
{
  return sub_23AA7E38C((unint64_t *)&unk_2569E7A38, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5500], MEMORY[0x24BEE5510]);
}

BOOL sub_23AFAAE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  unsigned int v7;
  void (*v8)(char *, uint64_t);
  unsigned int v9;
  uint64_t v11;

  v0 = sub_23B1C6050();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - v5;
  sub_23B1C6098();
  v7 = sub_23B1C6044();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_23B1C6098();
  v9 = sub_23B1C6044();
  v8(v4, v0);
  return v7 >= v9;
}

BOOL sub_23AFAAF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  unsigned int v7;
  void (*v8)(char *, uint64_t);
  unsigned int v9;
  uint64_t v11;

  v0 = sub_23B1C6050();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - v5;
  sub_23B1C6098();
  v7 = sub_23B1C6044();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_23B1C6098();
  v9 = sub_23B1C6044();
  v8(v4, v0);
  return v7 >= v9;
}

BOOL sub_23AFAAFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  unsigned int v7;
  void (*v8)(char *, uint64_t);
  unsigned int v9;
  uint64_t v11;

  v0 = sub_23B1C6050();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - v5;
  sub_23B1C6098();
  v7 = sub_23B1C6044();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_23B1C6098();
  v9 = sub_23B1C6044();
  v8(v4, v0);
  return v7 < v9;
}

uint64_t sub_23AFAB0C8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFAB0F4()
{
  return swift_deallocObject();
}

void sub_23AFAB10C()
{
  uint64_t v0;

  sub_23AA851C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void (**)(uint64_t))(v0 + 64));
}

uint64_t sub_23AFAB134()
{
  return swift_deallocObject();
}

uint64_t sub_23AFAB144()
{
  uint64_t v0;

  return sub_23AFAABDC(*(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16));
}

uint64_t sub_23AFAB154()
{
  return swift_deallocObject();
}

void sub_23AFAB16C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23AFCE528();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DBCounters();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

void sub_23AFAB2E4()
{
  type metadata accessor for UserRequest();
}

void sub_23AFAB348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  _BYTE v37[96];

  *(_QWORD *)(v5 - 120) = a1;
  *(_QWORD *)(v5 - 112) = &type metadata for NSecTimestamp;
  *(_QWORD *)(v5 - 104) = sub_23B1C60A4();
  *(_QWORD *)(v5 - 96) = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E21E0);
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  *(_QWORD *)(v5 - 240) = TupleTypeMetadata;
  v7 = *(_QWORD *)(TupleTypeMetadata - 8);
  *(_QWORD *)(v5 - 360) = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v10 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 - 328) = &v37[-v10];
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v5 - 296) = &v37[-v10];
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v5 - 336) = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_23B1C6050();
  *(_QWORD *)(v5 - 256) = v14;
  *(_QWORD *)(v5 - 264) = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v5 - 344) = &v37[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v5 - 312) = &v37[-v17];
  v18 = sub_23B1C60A4();
  *(_QWORD *)(v5 - 200) = v18;
  *(_QWORD *)(v5 - 248) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v5 - 352) = &v37[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v5 - 320) = &v37[-v22];
  MEMORY[0x24BDAC7A8](v21);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 - 192) = AssociatedTypeWitness;
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v24 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v5 - 288) = &v37[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v5 - 304) = &v37[-v27];
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v5 - 216) = &v37[-v28];
  v29 = sub_23B1C60EC();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = &v37[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = *(void **)(v1 + 64);
  *v32 = v33;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x24BEE5610], v29);
  v34 = v33;
  LOBYTE(v33) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x23AFABBF4);
  }
  if (*(_BYTE *)(v1 + 152) != 1)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v5 - 120) = v4;
    *(_QWORD *)(v5 - 112) = v3;
    v36 = *(_QWORD *)(v5 - 280);
    *(_QWORD *)(v5 - 104) = v2;
    *(_QWORD *)(v5 - 96) = v36;
    type metadata accessor for UserRequest();
  }
  v35 = (id)FPDomainUnavailableError();
  (*(void (**)(void))(v5 - 184))();

}

void sub_23AFABBFC(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  int v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  id v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[2];

  v92 = a7;
  v93 = a8;
  v88 = a6;
  v76 = a4;
  v82 = *v10;
  v83 = a5;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v14);
  v91 = (uint64_t)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C5DC8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v75 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v73 - v23;
  v25 = type metadata accessor for Signpost(0);
  v77 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v80 = (uint64_t)&v73 - ((unint64_t)(v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v27;
  MEMORY[0x24BDAC7A8](v26);
  v89 = v10;
  v90 = (uint64_t)&v73 - v28;
  v87 = (id)fpfs_adopt_log();
  if (qword_2542E6818 != -1)
    swift_once();
  v81 = a10;
  v79 = a9;
  v29 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v24, 1, 1, v16);
  strcpy((char *)v94, "async batch ");
  BYTE5(v94[1]) = 0;
  HIWORD(v94[1]) = -5120;
  v84 = a1;
  v85 = a2;
  v86 = a3;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v30 = v94[1];
  v74 = v94[0];
  sub_23AA8EFC8((uint64_t)v24, (uint64_t)v22, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
  {
    v31 = v29;
    v32 = v75;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v32 = v75;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v75, v22, v16);
  }
  v76 &= 1u;
  v33 = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v90, v32, v16);
  *(_QWORD *)(v33 + *(int *)(v25 + 20)) = v29;
  v34 = v33 + *(int *)(v25 + 24);
  *(_QWORD *)v34 = "DB queue wait";
  *(_QWORD *)(v34 + 8) = 13;
  *(_BYTE *)(v34 + 16) = 2;
  v35 = v29;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v36 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v36 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v36 + 32) = v74;
  *(_QWORD *)(v36 + 40) = v30;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v32, v16);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v24, (uint64_t *)&unk_2542E67B8);
  v37 = v33;
  v38 = v33;
  v39 = v80;
  sub_23AA907B0(v37, v80, type metadata accessor for Signpost);
  v40 = *(unsigned __int8 *)(v77 + 80);
  v41 = (v40 + 16) & ~v40;
  v42 = v78 + 7;
  v43 = (unint64_t)&v78[v41 + 7] & 0xFFFFFFFFFFFFFFF8;
  v44 = swift_allocObject();
  v75 = (char *)v44;
  sub_23AA94050(v39, v44 + v41, type metadata accessor for Signpost);
  v45 = (_QWORD *)(v44 + v43);
  v46 = v93;
  *v45 = v92;
  v45[1] = v46;
  v47 = v89;
  v48 = (char *)v89[8];
  v77 = v89[21];
  v78 = v48;
  v49 = sub_23B1C60A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v91, 1, 1, v49);
  sub_23AA907B0(v38, v39, type metadata accessor for Signpost);
  v50 = (v40 + 48) & ~v40;
  v51 = (unint64_t)&v42[v50] & 0xFFFFFFFFFFFFFFF8;
  v52 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  v54 = (v53 + 25) & 0xFFFFFFFFFFFFFFF8;
  v55 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  v57 = v82;
  *(_QWORD *)(v56 + 16) = *(_QWORD *)(v82 + 568);
  *(_OWORD *)(v56 + 24) = *(_OWORD *)(v57 + 576);
  *(_QWORD *)(v56 + 40) = *(_QWORD *)(v57 + 592);
  sub_23AA94050(v39, v56 + v50, type metadata accessor for Signpost);
  v58 = (_QWORD *)(v56 + v51);
  v59 = v88;
  *v58 = v83;
  v58[1] = v59;
  *(_QWORD *)(v56 + v52) = v47;
  v60 = v56 + v53;
  v61 = v85;
  *(_QWORD *)v60 = v84;
  *(_QWORD *)(v60 + 8) = v61;
  *(_BYTE *)(v60 + 16) = v86;
  *(_BYTE *)(v60 + 17) = v76;
  v62 = (_QWORD *)(v56 + v54);
  v63 = v93;
  *v62 = v92;
  v62[1] = v63;
  v64 = (_QWORD *)(v56 + v55);
  v65 = v81;
  *v64 = v79;
  v64[1] = v65;
  v66 = (_QWORD *)(v56 + ((v55 + 23) & 0xFFFFFFFFFFFFFFF8));
  v67 = v75;
  *v66 = sub_23AFDAEF4;
  v66[1] = v67;
  v68 = (_QWORD *)swift_allocObject();
  v68[2] = sub_23AFDAEF4;
  v68[3] = v67;
  v68[4] = v77;
  swift_retain_n();
  swift_retain_n();
  v69 = v78;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v70 = v91;
  sub_23AA9086C(v69, v91, sub_23AC279F4, v68, (uint64_t)sub_23AFDB288, v56);
  swift_release();

  swift_release();
  swift_release();
  sub_23AA8A05C(v70, &qword_2542DD460);
  sub_23AA937BC(v90, type metadata accessor for Signpost);
  v71 = v87;
  v72 = (id)fpfs_adopt_log();

}

void sub_23AFAC27C()
{
  type metadata accessor for UserRequest();
}

void sub_23AFAC2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  _BYTE v37[96];

  *(_QWORD *)(v5 - 120) = a1;
  *(_QWORD *)(v5 - 112) = &type metadata for NSecTimestamp;
  *(_QWORD *)(v5 - 104) = sub_23B1C60A4();
  *(_QWORD *)(v5 - 96) = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E21E0);
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  *(_QWORD *)(v5 - 240) = TupleTypeMetadata;
  v7 = *(_QWORD *)(TupleTypeMetadata - 8);
  *(_QWORD *)(v5 - 360) = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v10 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 - 328) = &v37[-v10];
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v5 - 296) = &v37[-v10];
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v5 - 336) = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_23B1C6050();
  *(_QWORD *)(v5 - 256) = v14;
  *(_QWORD *)(v5 - 264) = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v5 - 344) = &v37[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v5 - 312) = &v37[-v17];
  v18 = sub_23B1C60A4();
  *(_QWORD *)(v5 - 200) = v18;
  *(_QWORD *)(v5 - 248) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v5 - 352) = &v37[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v5 - 320) = &v37[-v22];
  MEMORY[0x24BDAC7A8](v21);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 - 192) = AssociatedTypeWitness;
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v24 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v5 - 288) = &v37[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v5 - 304) = &v37[-v27];
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v5 - 216) = &v37[-v28];
  v29 = sub_23B1C60EC();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = &v37[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = *(void **)(v1 + 64);
  *v32 = v33;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x24BEE5610], v29);
  v34 = v33;
  LOBYTE(v33) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x23AFACB8CLL);
  }
  if (*(_BYTE *)(v1 + 152) != 1)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v5 - 120) = v4;
    *(_QWORD *)(v5 - 112) = v3;
    v36 = *(_QWORD *)(v5 - 280);
    *(_QWORD *)(v5 - 104) = v2;
    *(_QWORD *)(v5 - 96) = v36;
    type metadata accessor for UserRequest();
  }
  v35 = (id)FPDomainUnavailableError();
  (*(void (**)(void))(v5 - 184))();

}

void sub_23AFACB90(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[20];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v11 = a2;
  v3 = (_QWORD *)*v2;
  v10 = sub_23B1C5BDC();
  v9[19] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v9[17] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v3[71];
  v6 = v3[72];
  v7 = v3[73];
  v8 = v3[74];
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

void sub_23AFAEB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v14[3];

  v14[2] = a6;
  v14[1] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C6050();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C60A4();
  MEMORY[0x24BDAC7A8](v13);
  qos_class_self();
  sub_23B1C6038();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5498], v9);
    sub_23AA8A05C((uint64_t)v8, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  }
  sub_23B1C608C();
  sub_23AFD2894();
}

id sub_23AFAED1C()
{
  return (id)sub_23AFD7BC0();
}

void sub_23AFAED34(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t *v8;
  void *v17;

  v17 = (void *)MEMORY[0x23B8601A8]();
  sub_23AFC4B90(v8, a2, a3, a4, a1, a5, a6, a7, a8);
  objc_autoreleasePoolPop(v17);
}

void sub_23AFAEDD8(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  int v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  id v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;

  v77 = a6;
  v78 = a7;
  v80 = a5;
  v11 = *v7;
  v70 = a4;
  v71 = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v12);
  v81 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C5DC8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v67 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v65 - v21;
  v23 = type metadata accessor for Signpost(0);
  v66 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v68 = v25;
  v69 = (uint64_t)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v79 = (uint64_t)&v65 - v26;
  v73 = v7;
  v74 = (id)fpfs_adopt_log();
  if (qword_2542E6818 != -1)
    swift_once();
  v27 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v22, 1, 1, v14);
  v82 = 0x657220636E797361;
  v83 = 0xEB00000000206461;
  v72 = a1;
  v76 = a3;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v28 = v83;
  v65 = v82;
  sub_23AA8EFC8((uint64_t)v22, (uint64_t)v20, (uint64_t *)&unk_2542E67B8);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14);
  v75 = a2;
  if (v29 == 1)
  {
    v30 = v27;
    v31 = v67;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v20, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v31 = v67;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v67, v20, v14);
  }
  v32 = v79;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v79, v31, v14);
  *(_QWORD *)(v32 + *(int *)(v23 + 20)) = v27;
  v33 = v32 + *(int *)(v23 + 24);
  v34 = v32;
  *(_QWORD *)v33 = "DB queue wait";
  *(_QWORD *)(v33 + 8) = 13;
  *(_BYTE *)(v33 + 16) = 2;
  v35 = v27;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v36 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v36 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v36 + 32) = v65;
  *(_QWORD *)(v36 + 40) = v28;
  v37 = v34;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v14);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542E67B8);
  v38 = v69;
  sub_23AA907B0(v34, v69, type metadata accessor for Signpost);
  v39 = *(unsigned __int8 *)(v66 + 80);
  v40 = (v39 + 16) & ~v39;
  v41 = v68;
  v42 = (v68 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v43 = swift_allocObject();
  sub_23AA94050(v38, v43 + v40, type metadata accessor for Signpost);
  v44 = (_QWORD *)(v43 + v42);
  v45 = v80;
  *v44 = v70;
  v44[1] = v45;
  v46 = v73;
  v47 = v73[21];
  v70 = (id)v73[8];
  v48 = sub_23B1C60A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v81, 1, 1, v48);
  sub_23AA907B0(v37, v38, type metadata accessor for Signpost);
  v49 = (v39 + 48) & ~v39;
  v50 = (v49 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = (v49 + v41 + 31) & 0xFFFFFFFFFFFFFFF8;
  v52 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  v53 = swift_allocObject();
  v54 = v71;
  *(_QWORD *)(v53 + 16) = *(_QWORD *)(v71 + 568);
  *(_OWORD *)(v53 + 24) = *(_OWORD *)(v54 + 576);
  *(_QWORD *)(v53 + 40) = *(_QWORD *)(v54 + 592);
  sub_23AA94050(v38, v53 + v49, type metadata accessor for Signpost);
  v55 = v53 + v50;
  v56 = v75;
  *(_QWORD *)v55 = v72;
  *(_QWORD *)(v55 + 8) = v56;
  *(_BYTE *)(v55 + 16) = v76;
  v57 = (_QWORD *)(v53 + v51);
  v58 = v78;
  *v57 = v77;
  v57[1] = v58;
  *(_QWORD *)(v53 + v52) = v46;
  v59 = (_QWORD *)(v53 + ((v52 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v59 = sub_23AFDAEF4;
  v59[1] = v43;
  v60 = (_QWORD *)swift_allocObject();
  v60[2] = sub_23AFDAEF4;
  v60[3] = v43;
  v60[4] = v47;
  swift_retain_n();
  v61 = v70;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v62 = v81;
  sub_23AA9086C(v61, v81, sub_23AC242E0, v60, (uint64_t)sub_23AFDAFC4, v53);
  swift_release();

  swift_release();
  swift_release();
  sub_23AA8A05C(v62, &qword_2542DD460);
  sub_23AA937BC(v79, type metadata accessor for Signpost);
  v63 = v74;
  v64 = (id)fpfs_adopt_log();

}

uint64_t sub_23AFAF3EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E3180);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23B1D2330;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23B1D2330;
  v3 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 0x756F436873756C66;
  *(_QWORD *)(v2 + 40) = 0xEA0000000000746ELL;
  v4 = *v0;
  *(_QWORD *)(v2 + 88) = MEMORY[0x24BEE4568];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E27E0);
  *(_QWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23B1D2330;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 32) = 0x7461447465736572;
  *(_QWORD *)(v6 + 40) = 0xE900000000000065;
  v7 = (char *)v0 + *(int *)(type metadata accessor for DBCounters() + 20);
  v8 = sub_23B1C5BDC();
  *(_QWORD *)(v6 + 88) = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, v7, v8);
  *(_QWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 64) = v6;
  return v1;
}

uint64_t sub_23AFAF540(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  _QWORD v16[2];
  int v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = v1;
  v17 = a1;
  v3 = *v1;
  v21 = sub_23B1C5E4C();
  v18 = *(_QWORD *)(v21 - 8);
  v4 = MEMORY[0x24BDAC7A8](v21);
  v16[0] = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v16[1] = (char *)v16 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23B1C60EC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (void *)v2[8];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  LOBYTE(v13) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v19 = *(_OWORD *)(v3 + 568);
    v20 = *(_OWORD *)(v3 + 584);
    type metadata accessor for FSOrFPJob();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AFAF988(unsigned __int8 a1)
{
  sub_23AFD7C80(a1);
  return swift_retain();
}

uint64_t sub_23AFAF99C()
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  type metadata accessor for DBCounters();
  sub_23B1C5B34();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0x756F436873756C66;
}

void sub_23AFAFA8C()
{
  uint64_t **v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject *v30;
  uint8_t *v31;
  id v32;
  _QWORD *v33;
  uint8_t *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  BOOL v38;
  id v39;
  id v40;
  NSObject *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _QWORD *v45;
  id v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  id v52;
  id v53;
  NSObject *v54;
  NSObject *v55;
  os_log_type_t v56;
  NSObject *v57;
  uint8_t *v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  _QWORD *v62;
  uint8_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  void (*v71)(const char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t (*)(_QWORD), _QWORD, void (*)(), uint64_t);
  uint64_t v72;
  uint64_t v73;
  _OWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  void (*v80)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), _QWORD, void (*)(), uint64_t);
  uint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _QWORD v112[2];
  uint64_t v113;

  v2 = (uint64_t *)v0;
  v3 = *v0;
  v94 = sub_23B1C5E4C();
  v92 = *(void (**)(char *, uint64_t))(v94 - 8);
  v4 = MEMORY[0x24BDAC7A8](v94);
  v91 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v93 = (char *)&v86 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v86 - v8;
  v10 = sub_23B1C60EC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (void *)v2[8];
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  v16 = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  if ((v2[10] & 0x40) != 0)
    return;
  if ((fp_task_tracker_is_cancelled(*(void **)(v2[21] + 16)) & 1) == 0 && *((_BYTE *)v2 + 152) != 1)
  {
    v18 = *(void **)((char *)v2 + qword_2542EDF90);
    v19 = type metadata accessor for FileTreeChangeAggregator(255, v3[71], v3[73], v17);
    v20 = v3[72];
    v21 = v3[74];
    v22 = v19;
    v89 = type metadata accessor for FileTreeChangeAggregator(255, v20, v21, v23);
    swift_getTupleTypeMetadata2();
    sub_23AC45210(v18, (void (*)(void))sub_23AFDAE10);
    v95 = v1;
    v108 = v96;
    v109 = v97;
    v110 = v98;
    v111 = v99;
    v104 = v100;
    v105 = v101;
    v106 = v102;
    v107 = v103;
    v24 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
    v25 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v26 = v24;
    v27 = sub_23B1C5E40();
    v28 = sub_23B1C6A94();
    if (os_log_type_enabled(v27, v28))
    {
      v88 = v22;
      v29 = (uint8_t *)swift_slowAlloc();
      v87 = (_QWORD *)swift_slowAlloc();
      v30 = v26;
      v31 = v29;
      *(_DWORD *)v29 = 138412290;
      v32 = -[NSObject enter](v30, sel_enter, v29 + 4);
      *(_QWORD *)&v96 = v32;
      sub_23B1C6CBC();
      v33 = v87;
      *v87 = v32;
      v22 = v88;

      _os_log_impl(&dword_23AA66000, v27, v28, "%@ 👁  processing ingestion", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v33, -1, -1);
      v34 = v31;
      v26 = v30;
      MEMORY[0x23B8614BC](v34, -1, -1);
    }
    else
    {

      v27 = v26;
    }
    v35 = v94;
    v36 = v92;

    v37 = (void (*)(char *, uint64_t))*((_QWORD *)v36 + 1);
    v37(v9, v35);
    v38 = sub_23AFBC6FC(v22);
    v90 = v26;
    if (!v38)
    {
      v39 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
      v40 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v41 = v39;
      v42 = sub_23B1C5E40();
      v43 = sub_23B1C6A88();
      if (os_log_type_enabled(v42, v43))
      {
        v92 = v37;
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = (_QWORD *)swift_slowAlloc();
        v88 = v22;
        *(_DWORD *)v44 = 138412290;
        v87 = v44 + 4;
        v46 = -[NSObject enter](v41, sel_enter);
        *(_QWORD *)&v96 = v46;
        v22 = v88;
        sub_23B1C6CBC();
        *v45 = v46;
        v37 = v92;

        _os_log_impl(&dword_23AA66000, v42, v43, "%@ 👁  processing FS tree changes", v44, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v45, -1, -1);
        v47 = v44;
        v35 = v94;
        MEMORY[0x23B8614BC](v47, -1, -1);
      }
      else
      {

        v42 = v41;
      }

      v37(v93, v35);
      v48 = v95;
      sub_23AFBE7BC(v2, v22, v49, v50);
      if (v48)
      {
        sub_23ADF25B8((uint64_t)&v104);
        sub_23ADF25B8((uint64_t)&v108);
        sub_23ACA7014(v41, MEMORY[0x24BEE78F0]);

        v51 = v90;
        sub_23ACA7014(v90, MEMORY[0x24BEE7908]);

        return;
      }
      v95 = 0;
      *((_BYTE *)v2 + qword_256A079D0) = v111;
      sub_23ACA7014(v41, MEMORY[0x24BEE78F0]);

      v26 = v90;
    }
    if (!sub_23AFBC6FC(v89))
    {
      v52 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
      v53 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v54 = v52;
      v55 = sub_23B1C5E40();
      v56 = sub_23B1C6A88();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = v54;
        v58 = (uint8_t *)swift_slowAlloc();
        v59 = swift_slowAlloc();
        v92 = v37;
        v60 = (_QWORD *)v59;
        *(_DWORD *)v58 = 138412290;
        v93 = (char *)(v58 + 4);
        v61 = -[NSObject enter](v57, sel_enter);
        *(_QWORD *)&v96 = v61;
        sub_23B1C6CBC();
        *v60 = v61;
        v35 = v94;

        _os_log_impl(&dword_23AA66000, v55, v56, "%@ 👁  processing FP tree changes", v58, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        v62 = v60;
        v37 = v92;
        MEMORY[0x23B8614BC](v62, -1, -1);
        v63 = v58;
        v54 = v57;
        MEMORY[0x23B8614BC](v63, -1, -1);
      }
      else
      {

        v55 = v54;
      }
      v26 = v90;

      v37(v91, v35);
      v64 = (uint64_t *)sub_23AFB8ED0();
      v65 = v95;
      sub_23AFBE7BC(v64, v89, v66, v67);
      if (v65)
      {
        sub_23ADF25B8((uint64_t)&v104);
        sub_23ADF25B8((uint64_t)&v108);
        swift_release();
        sub_23ACA7014(v54, MEMORY[0x24BEE78F0]);

        sub_23ACA7014(v26, MEMORY[0x24BEE7908]);
        return;
      }
      v95 = 0;
      swift_release();
      sub_23ACA7014(v54, MEMORY[0x24BEE78F0]);

    }
    if (*(_BYTE *)(v2[20] + 48) == 1)
    {
      v68 = swift_allocObject();
      v69 = v109;
      *(_OWORD *)(v68 + 16) = v108;
      *(_OWORD *)(v68 + 32) = v69;
      v70 = v111;
      *(_OWORD *)(v68 + 48) = v110;
      *(_OWORD *)(v68 + 64) = v70;
      *(_QWORD *)(v68 + 80) = v2;
      v71 = *(void (**)(const char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t (*)(_QWORD), _QWORD, void (*)(), uint64_t))(*v2 + 416);
      swift_retain();
      v71("processPendingIngestion()", 25, 2, 0, 1, nullsub_1, 0, sub_23AFDAE4C, v68);
      swift_release();
    }
    else
    {
      v72 = *((_QWORD *)&v111 + 1);
      v112[0] = *((_QWORD *)&v111 + 1);
      swift_bridgeObjectRetain();
      sub_23ADF25B8((uint64_t)&v108);
      v73 = *(_QWORD *)(v72 + 16);
      if (v73)
      {
        v74 = (_OWORD *)(v72 + 32);
        while (1)
        {
          v75 = swift_allocObject();
          *(_OWORD *)(v75 + 16) = *v74;
          v76 = swift_retain();
          v16 = MEMORY[0x23B8601A8](v76);
          (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*v2 + 2344))(sub_23ACFF990, v75);
          if (v95)
            goto LABEL_42;
          objc_autoreleasePoolPop((void *)v16);
          swift_release();
          ++v74;
          if (!--v73)
          {
            sub_23AAB7500((uint64_t)v112);
            v26 = v90;
            goto LABEL_32;
          }
        }
      }
      sub_23AAB7500((uint64_t)v112);
    }
LABEL_32:
    if (*(_BYTE *)(v2[20] + 49) == 1)
    {
      v77 = swift_allocObject();
      v78 = v105;
      *(_OWORD *)(v77 + 16) = v104;
      *(_OWORD *)(v77 + 32) = v78;
      v79 = v107;
      *(_OWORD *)(v77 + 48) = v106;
      *(_OWORD *)(v77 + 64) = v79;
      *(_QWORD *)(v77 + 80) = v2;
      v80 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), _QWORD, void (*)(), uint64_t))(*v2 + 416);
      swift_retain();
      v80("processPendingIngestion()", 25, 2, 1, 1, nullsub_1, 0, sub_23AFDAE2C, v77);
      swift_release();
LABEL_40:
      sub_23ACA7014(v26, MEMORY[0x24BEE7908]);

      return;
    }
    v81 = *((_QWORD *)&v107 + 1);
    v113 = *((_QWORD *)&v107 + 1);
    swift_bridgeObjectRetain();
    sub_23ADF25B8((uint64_t)&v104);
    v82 = *(_QWORD *)(v81 + 16);
    if (!v82)
    {
      sub_23AAB7500((uint64_t)&v113);
      goto LABEL_40;
    }
    v83 = (_OWORD *)(v81 + 32);
    while (1)
    {
      v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = *v83;
      v85 = swift_retain();
      v16 = MEMORY[0x23B8601A8](v85);
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*v2 + 2344))(sub_23ACFF990, v84);
      if (v95)
        break;
      objc_autoreleasePoolPop((void *)v16);
      swift_release();
      ++v83;
      if (!--v82)
      {
        sub_23AAB7500((uint64_t)&v113);
        v26 = v90;
        goto LABEL_40;
      }
    }
LABEL_42:
    objc_autoreleasePoolPop((void *)v16);
    __break(1u);
    return;
  }
  sub_23AD2C7F8();
  swift_allocError();
  swift_willThrow();
}

void sub_23AFB04F0(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  id v34;
  char *v35;
  char *v36;
  char *v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;

  v56 = a5;
  v8 = v7;
  v55 = a4;
  LODWORD(v54) = a3;
  v52 = a1;
  v53 = a2;
  v51 = a7;
  v59 = a6;
  v9 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)v50 - v10;
  v11 = sub_23B1C5DC8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v62 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v61 = (uint64_t)v50 - v18;
  v19 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v19);
  v60 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23B1C60EC();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (_QWORD *)((char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = (id)fpfs_adopt_log();
  v25 = *(void **)(v8 + 64);
  *v24 = v25;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x24BEE5610], v21);
  v26 = v25;
  LOBYTE(v25) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v24, v21);
  if ((v25 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_8;
  }
  if ((fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v8 + 168) + 16)) & 1) != 0 || *(_BYTE *)(v8 + 152) == 1)
  {
    sub_23AD2C7F8();
    swift_allocError();
    swift_willThrow();
LABEL_5:
    v27 = v65;
    v28 = (void *)fpfs_adopt_log();
LABEL_6:
    v29 = v28;

    return;
  }
  if (qword_2542E6818 != -1)
    goto LABEL_18;
LABEL_8:
  v30 = (void *)qword_2542EDD28;
  v31 = v61;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v61, 1, 1, v11);
  v63 = 0x63746162206E7572;
  v64 = 0xEA00000000002068;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v32 = v64;
  v53 = v63;
  sub_23AA8EFC8(v31, (uint64_t)v17, (uint64_t *)&unk_2542E67B8);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  v54 = v32;
  if (v33 == 1)
  {
    v34 = v30;
    v35 = v62;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v35 = v62;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v62, v17, v11);
  }
  v36 = v60;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v60, v35, v11);
  v52 = *(int *)(v19 + 20);
  *(_QWORD *)&v36[v52] = v30;
  v37 = &v36[*(int *)(v19 + 24)];
  *(_QWORD *)v37 = "DB queue";
  *((_QWORD *)v37 + 1) = 8;
  v50[1] = v37;
  v37[16] = 2;
  v38 = v30;
  v39 = v54;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v40 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v40 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v40 + 32) = v53;
  *(_QWORD *)(v40 + 40) = v39;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v62, v11);
  swift_bridgeObjectRelease();
  v41 = sub_23AA8A05C(v61, (uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v41);
  v43 = v58;
  v42 = v59;
  v44 = v57;
  (*(void (**)(uint64_t (*)()))(*(_QWORD *)v8 + 2352))(sub_23AFDB33C);
  if (v44)
  {
    v63 = (uint64_t)v44;
    v45 = v44;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    if (swift_dynamicCast())
    {

      sub_23AD2C7F8();
      swift_allocError();
      swift_willThrow();

      sub_23B1C6BD8();
      v46 = (uint64_t)v60;
      sub_23B1C5DA4();
      sub_23AA937BC(v46, type metadata accessor for Signpost);
    }
    else
    {

      (*(void (**)(void *, uint64_t, const char *, uint64_t, uint64_t))(*(_QWORD *)v8 + 456))(v44, 1, "runBatch(function:updateBlock:)", 31, 2);
      sub_23B1C6BD8();
      v49 = (uint64_t)v60;
      sub_23B1C5DA4();
      sub_23AA937BC(v49, type metadata accessor for Signpost);
    }
    goto LABEL_5;
  }
  v47 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v43, 1, v42) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v51, v43, v42);
    sub_23B1C6BD8();
    v48 = (uint64_t)v60;
    sub_23B1C5DA4();
    sub_23AA937BC(v48, type metadata accessor for Signpost);
    v27 = v65;
    v28 = (void *)fpfs_adopt_log();
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_23AFB0B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  void *v12;
  id v13;
  uint64_t ObjectType;
  _BYTE v15[16];

  v1 = sub_23B1C5DC8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v15[-v9];
  result = fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v0 + 168) + 16));
  if ((result & 1) == 0 && (*(_BYTE *)(v0 + 152) & 1) == 0)
  {
    if (qword_2542E6818 != -1)
      swift_once();
    v12 = (void *)qword_2542EDD28;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
    sub_23AA8EFC8((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_2542E67B8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
    {
      v13 = v12;
      sub_23B1C5DB0();
      sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E67B8);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 32))(v4, v8, v1);
    }
    sub_23B1C6BF0();
    sub_23B1C5DA4();
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
    sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E67B8);
    sub_23AC45210((void *)v0, sub_23AFDB3B4);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    MEMORY[0x23B85F548](1, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23AFB0DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = v3[20];
  v7 = *(_QWORD *)(v6 + 16);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v6 + 16) = v9;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = a1;
    *(_QWORD *)(v2 + 24) = a2;
    v4 = (_QWORD **)((char *)v3 + qword_2542EDF80);
    swift_beginAccess();
    v5 = *v4;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v4 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  v5 = sub_23AF98DFC(0, v5[2] + 1, 1, v5);
  *v4 = v5;
LABEL_3:
  v14 = v5[2];
  v13 = v5[3];
  if (v14 >= v13 >> 1)
  {
    v5 = sub_23AF98DFC((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
    *v4 = v5;
  }
  v5[2] = v14 + 1;
  v15 = &v5[2 * v14];
  v15[4] = sub_23AAB64DC;
  v15[5] = v2;
  v16 = swift_endAccess();
  return (*(uint64_t (**)(uint64_t))(*v3 + 2328))(v16);
}

uint64_t sub_23AFB0ECC()
{
  sub_23AABA448();
  return swift_retain();
}

uint64_t sub_23AFB0EE0()
{
  uint64_t v0;

  v0 = sub_23AD01624();

  sub_23AAB7948(*(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_23AA8A05C(v0 + qword_2542EDD58, &qword_2542E4E70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  sub_23AA937BC(v0 + qword_2542EE020, (uint64_t (*)(_QWORD))type metadata accessor for DBCounters);
  swift_release();
  swift_release();
  return v0;
}

void sub_23AFB1124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  NSObject *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  NSObject *v32;
  _QWORD *v33;
  uint8_t *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  char *v41;
  uint8_t *v42;
  uint8_t *v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  NSObject *v48;
  char *v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  id v62;
  char *v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  id v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  id v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  void *v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  id v92;

  v0 = sub_23B1C5E4C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v88 = (char *)&v82 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v87 = (char *)&v82 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v86 = (char *)&v82 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v91 = (char *)&v82 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v90 = (char *)&v82 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v85 = (char *)&v82 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v82 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v82 - v20;
  v22 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v23 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v24 = v22;
  v25 = sub_23B1C5E40();
  v26 = sub_23B1C6AB8();
  if (os_log_type_enabled(v25, v26))
  {
    v83 = v19;
    v27 = swift_slowAlloc();
    v84 = v4;
    v28 = (uint8_t *)v27;
    v29 = swift_slowAlloc();
    v82 = v1;
    v30 = (_QWORD *)v29;
    *(_DWORD *)v28 = 138412290;
    v31 = -[NSObject enter](v24, sel_enter);
    v92 = v31;
    sub_23B1C6CBC();
    *v30 = v31;
    v19 = v83;
    v32 = v24;

    _os_log_impl(&dword_23AA66000, v25, v26, "%@ ✋🏻  invalidating database", v28, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    v33 = v30;
    v1 = v82;
    MEMORY[0x23B8614BC](v33, -1, -1);
    v34 = v28;
    v4 = v84;
    MEMORY[0x23B8614BC](v34, -1, -1);
  }
  else
  {

    v32 = v24;
    v25 = v24;
  }

  v35 = *(void (**)(char *, uint64_t))(v1 + 8);
  v35(v21, v0);
  v36 = v89;
  v37 = *(id *)(v89 + 64);
  sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23AFDB3F8, v36);

  if (qword_2542E6C40 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDD50, sel_removeWatcher_, v36);
  v38 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v39 = sub_23B1C5E40();
  v40 = sub_23B1C6AB8();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = v19;
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    _os_log_impl(&dword_23AA66000, v39, v40, "disable event aggregation", v42, 2u);
    v43 = v42;
    v19 = v41;
    MEMORY[0x23B8614BC](v43, -1, -1);
  }

  v35(v19, v0);
  v44 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v36 + 32) + 16) + 808);
  v45 = swift_retain();
  v44(v45);
  swift_release();
  v46 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v36 + 40) + 16) + 808);
  v47 = swift_retain();
  v46(v47);
  swift_release();
  v48 = v32;
  v49 = v88;
  if (*(_BYTE *)(v36 + 72) == 1)
  {
    v50 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v51 = sub_23B1C5E40();
    v52 = sub_23B1C6AB8();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_23AA66000, v51, v52, "cancel trees", v53, 2u);
      MEMORY[0x23B8614BC](v53, -1, -1);
    }

    v35(v85, v0);
    sub_23AFB958C();
  }
  v54 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v55 = sub_23B1C5E40();
  v56 = sub_23B1C6AB8();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v57 = 0;
    _os_log_impl(&dword_23AA66000, v55, v56, "stopping scheduler", v57, 2u);
    MEMORY[0x23B8614BC](v57, -1, -1);
  }

  v35(v90, v0);
  sub_23AFB965C();
  (*(void (**)(void))(**(_QWORD **)(v36 + 24) + 120))();
  v58 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v59 = sub_23B1C5E40();
  v60 = sub_23B1C6AB8();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v61 = 0;
    _os_log_impl(&dword_23AA66000, v59, v60, "cancelling in-flight requests", v61, 2u);
    MEMORY[0x23B8614BC](v61, -1, -1);
  }

  v35(v91, v0);
  v62 = *(id *)(v36 + 64);
  sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23AFDB410, v36);

  v63 = v87;
  if (*(_BYTE *)(v36 + 72) == 1)
  {
    v64 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v65 = sub_23B1C5E40();
    v66 = sub_23B1C6AB8();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v67 = 0;
      _os_log_impl(&dword_23AA66000, v65, v66, "closing trees", v67, 2u);
      MEMORY[0x23B8614BC](v67, -1, -1);
    }

    v35(v86, v0);
    sub_23AFB958C();
    sub_23AFB95F4();
  }
  v68 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v69 = sub_23B1C5E40();
  v70 = sub_23B1C6AB8();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v71 = 0;
    _os_log_impl(&dword_23AA66000, v69, v70, "waiting for job completion", v71, 2u);
    MEMORY[0x23B8614BC](v71, -1, -1);
  }

  v35(v63, v0);
  v72 = *(id *)(v36 + 176);
  sub_23B1C6AD0();

  v73 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v74 = sub_23B1C5E40();
  v75 = sub_23B1C6AB8();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v76 = 0;
    _os_log_impl(&dword_23AA66000, v74, v75, "stopping tracker", v76, 2u);
    MEMORY[0x23B8614BC](v76, -1, -1);
  }

  v35(v49, v0);
  v77 = *(void **)(*(_QWORD *)(v36 + 168) + 16);
  fp_task_tracker_cancel(v77);
  fp_task_tracker_wait((uint64_t)v77);
  v78 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v79 = sub_23B1C5E40();
  v80 = sub_23B1C6AB8();
  if (os_log_type_enabled(v79, v80))
  {
    v81 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v81 = 0;
    _os_log_impl(&dword_23AA66000, v79, v80, "closing the wharf", v81, 2u);
    MEMORY[0x23B8614BC](v81, -1, -1);
  }

  v35(v4, v0);
  if (*(_BYTE *)(v36 + 72) == 1)
    sub_23B1AAEF8();
  sub_23ACA7014(v48, MEMORY[0x24BEE7928]);

}

void sub_23AFB1A3C()
{
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AFB5A88()
{
  void *v0;

  swift_release();
  JUMPOUT(0x23AFB2EBCLL);
}

uint64_t sub_23AFB5AAC@<X0>(_QWORD *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[4];
  uint64_t v26;
  _QWORD *v27;
  _BYTE v28[16];
  _QWORD *v29;
  char v30;

  v5 = v4;
  v29 = a1;
  v8 = a2 & 1;
  v30 = a2;
  v9 = MEMORY[0x24BEE4AE0];
  v10 = MEMORY[0x24BEE4AE0] + 8;
  sub_23AFAED34(0, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, (uint64_t)sub_23AFDB458, (uint64_t)v28, MEMORY[0x24BEE4AE0] + 8, a4);
  v11 = *(void (**)(_QWORD *))(**(_QWORD **)(*(_QWORD *)(v4 + 32) + 16) + 848);
  swift_retain();
  v11(a1);
  v12 = swift_release();
  if ((a3 & 1) != 0)
  {
    v13 = a1[3];
    v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    sub_23AEBD130(0x662065657274202BLL, 0xEA00000000003A73, v13, v14);
    v15 = a1[3];
    v16 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v15);
    v12 = sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AFDB504, v5, v15, v10, v16);
  }
  v17 = *(void **)(v5 + qword_2542EDF90);
  MEMORY[0x24BDAC7A8](v12);
  v26 = v5;
  v27 = a1;
  v18 = sub_23AC45210(v17, (void (*)(void))sub_23AFDB474);
  MEMORY[0x24BDAC7A8](v18);
  v25[2] = a1;
  v25[3] = v5;
  LOBYTE(v26) = v8;
  sub_23AFAED34(0, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, (uint64_t)sub_23AFDB48C, (uint64_t)v25, v10, (uint64_t)v28);
  if ((a3 & 1) != 0)
  {
    v20 = a1[3];
    v21 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    sub_23AEBD130(0x662065657274202BLL, 0xEA00000000003A70, v20, v21);
    v22 = a1[3];
    v23 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    v19 = sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AFDB4C0, v5, v22, v9 + 8, v23);
  }
  MEMORY[0x24BDAC7A8](v19);
  v26 = v5;
  v27 = a1;
  return sub_23AC45210(v17, (void (*)(void))sub_23AFDB4A8);
}

uint64_t sub_23AFB5D28()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_23AFB5D30()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 90);
}

uint64_t sub_23AFB5D38()
{
  uint64_t v1;

  swift_retain();
  sub_23AEB59F0((uint64_t)&v1);
  swift_release();
  return v1;
}

uint64_t sub_23AFB5D80()
{
  sub_23AFDB428();
  return swift_retain();
}

uint64_t sub_23AFB5D94()
{
  sub_23AFDB430();
  return swift_retain();
}

id sub_23AFB5DA8()
{
  return (id)sub_23AFDB438();
}

void sub_23AFB5DC0()
{
  swift_beginAccess();
  type metadata accessor for FSOrFPJob();
}

uint64_t sub_23AFB5E10()
{
  uint64_t v0;
  uint64_t v1;

  nullsub_1(v0);
  v1 = sub_23B1C6260();
  swift_bridgeObjectRetain();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE03C0], v1);
  return sub_23B1C6EA8();
}

uint64_t sub_23AFB5E98()
{
  void *v0;

  return sub_23AC4514C(v0, (void (*)(uint64_t *__return_ptr))sub_23AFDB380);
}

uint64_t sub_23AFB5ED0()
{
  void *v0;

  return sub_23AC4514C(v0, (void (*)(uint64_t *__return_ptr))sub_23AFDCB88);
}

void sub_23AFB5F08()
{
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AFB5F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = MEMORY[0x24BDAC7A8](a1);
  if (*(_BYTE *)(v1 + qword_2542E6C58) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v7 - v6, v2, a1);
    swift_beginAccess();
    sub_23B1C67DC();
    sub_23B1C67AC();
    return swift_endAccess();
  }
  return result;
}

void sub_23AFB5FEC()
{
  _BYTE *v0;
  _BYTE *v1;
  void *v2;

  v1 = v0;
  if ((sub_23AABC838(v0, (void (*)(uint64_t *__return_ptr))sub_23AABA450) & 1) == 0)
  {
    sub_23AC45210(v0, sub_23AFDB678);
    v2 = (void *)sub_23AC4514C(v0, (void (*)(uint64_t *__return_ptr))sub_23AFDB380);
    objc_msgSend(v2, sel_addWatcher_, v1);

    if ((v1[152] & 1) == 0
      && (fp_task_tracker_is_cancelled(*(void **)(*((_QWORD *)v1 + 21) + 16)) & 1) == 0
      && (v1[152] & 1) == 0
      && (v1[81] & 0x20) != 0)
    {
      type metadata accessor for DiskImport.Monitor();
    }
  }
}

uint64_t sub_23AFB613C()
{
  char *v0;
  void *v1;
  uint64_t result;
  uint64_t v3;
  void *v4;

  v1 = v0;
  result = sub_23AABC838(v0, (void (*)(uint64_t *__return_ptr))sub_23AABA450);
  if ((result & 1) != 0)
  {
    v3 = qword_2542EDFB8;
    if (*(_QWORD *)&v0[qword_2542EDFB8])
    {
      swift_retain();
      sub_23AD6F5D8(1);
      swift_release();
    }
    *(_QWORD *)&v0[v3] = 0;
    swift_release();
    v4 = (void *)sub_23AC4514C(v0, (void (*)(uint64_t *__return_ptr))sub_23AFDB380);
    objc_msgSend(v4, sel_removeWatcher_, v1);

    return sub_23AC45210(v1, sub_23AFDB678);
  }
  return result;
}

_QWORD *sub_23AFB6210()
{
  return sub_23AFB6258(&qword_2542EE010, &qword_2542E7160, (id *)&qword_2542EDE30);
}

_QWORD *sub_23AFB6234()
{
  return sub_23AFB6258(&qword_2542EE120, &qword_2542E6EE0, (id *)&qword_2542EDE00);
}

_QWORD *sub_23AFB6258(_QWORD *result, _QWORD *a2, id *a3)
{
  uint64_t v3;

  if ((*(_BYTE *)(v3 + *result) & 1) == 0)
  {
    *(_BYTE *)(v3 + *result) = 1;
    if (*a2 != -1)
      swift_once();
    return objc_msgSend(*a3, sel_addWatcher_, v3);
  }
  return result;
}

uint64_t sub_23AFB62C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 576);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 592);
  sub_23AF1E3F4(a1, (uint64_t)v7);
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(v7, v8);
    sub_23B1C7304();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    swift_beginAccess();
    swift_retain();
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v4;
    v8 = v5;
    type metadata accessor for FSOrFPJob();
  }
  return sub_23AA8A05C((uint64_t)v7, &qword_2542E16F0);
}

uint64_t sub_23AFB642C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 576);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 592);
  sub_23AF1E3F4(a1, (uint64_t)v7);
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(v7, v8);
    sub_23B1C7304();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    swift_beginAccess();
    v7[0] = v2;
    v7[1] = v3;
    v7[2] = v4;
    v8 = v5;
    type metadata accessor for FSOrFPJob();
  }
  return sub_23AA8A05C((uint64_t)v7, &qword_2542E16F0);
}

uint64_t sub_23AFB6588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 576);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 592);
  sub_23AF1E3F4(a1, (uint64_t)v8);
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(v8, v9);
    sub_23B1C7304();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = v5;
    v9 = v6;
    type metadata accessor for FSOrFPJob();
  }
  sub_23AA8A05C((uint64_t)v8, &qword_2542E16F0);
  swift_retain();
  return a1;
}

void sub_23AFB66D8(void *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  unint64_t v22;
  int v23;
  id v24;
  char *v25;
  char *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  int v58;

  v52 = a6;
  v49 = a4;
  v50 = a5;
  v58 = a3;
  v55 = a2;
  v51 = a7;
  v9 = sub_23B1C5DC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v44 - v16;
  v18 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v7;
  v44 = (id)fpfs_adopt_log();
  if (qword_2542E6818 != -1)
    swift_once();
  v21 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v17, 1, 1, v9);
  v56 = 0x74616220636E7973;
  v57 = 0xEB00000000206863;
  v48 = a1;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v22 = v57;
  v45 = v56;
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  v46 = v17;
  if (v23 == 1)
  {
    v24 = v21;
    v25 = v47;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v25 = v47;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v15, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v25, v9);
  *(_QWORD *)&v20[*(int *)(v18 + 20)] = v21;
  v26 = &v20[*(int *)(v18 + 24)];
  *(_QWORD *)v26 = "DB queue wait";
  *((_QWORD *)v26 + 1) = 13;
  v26[16] = 2;
  v27 = v21;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v28 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v28 + 32) = v45;
  *(_QWORD *)(v28 + 40) = v22;
  v42 = v28;
  LOBYTE(v41) = 2;
  v40 = 2;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
  swift_bridgeObjectRelease();
  v29 = sub_23AA8A05C((uint64_t)v46, (uint64_t *)&unk_2542E67B8);
  v30 = v54;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (uint64_t)v52;
  *(&v44 - 8) = v52;
  *(&v44 - 7) = v20;
  v32 = v55;
  *(&v44 - 6) = v48;
  *(&v44 - 5) = v32;
  LOBYTE(v40) = v58;
  v41 = v30;
  v42 = v49;
  v43 = v50;
  v34 = v33;
  v35 = v53;
  sub_23AFAA490(0, 0, (uint64_t)"syncBatch(function:updateBlock:)", 32, 2, (uint64_t)sub_23AFDB358, (uint64_t)(&v44 - 10), v31, v51);
  if (v35)
  {
    sub_23AA937BC((uint64_t)v20, type metadata accessor for Signpost);

    v56 = (uint64_t)v35;
    v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    if (swift_dynamicCast())
    {

      sub_23AD2C7F8();
      swift_allocError();
      swift_willThrow();

    }
    else
    {

      (*(void (**)(void *, uint64_t, const char *, uint64_t, uint64_t))(*(_QWORD *)v30 + 456))(v35, 1, "syncBatch(function:updateBlock:)", 32, 2);
    }
    v37 = v44;
    v38 = (void *)fpfs_adopt_log();
  }
  else
  {
    sub_23AA937BC((uint64_t)v20, type metadata accessor for Signpost);

    v37 = v44;
    v38 = (void *)fpfs_adopt_log();
  }
  v39 = v38;

}

BOOL sub_23AFB6BD4(char a1)
{
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    v5 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1[5] + 16) + 304);
    v6 = swift_retain();
    LOBYTE(v5) = v5(v6);
    swift_release();
    if ((v5 & 1) != 0)
    {
      v4 = (_QWORD *)(v1[20] + 40);
      return *v4 > 0;
    }
  }
  else
  {
    v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1[4] + 16) + 304);
    v3 = swift_retain();
    LOBYTE(v2) = v2(v3);
    swift_release();
    if ((v2 & 1) != 0)
    {
      v4 = (_QWORD *)(v1[20] + 32);
      return *v4 > 0;
    }
  }
  return 0;
}

void sub_23AFB6C7C()
{
  sub_23AFB9884();
}

void sub_23AFB6C84()
{
  sub_23AFB9884();
}

void sub_23AFB6C8C()
{
  _QWORD *v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[7];
  __int128 v5;
  __int128 v6;

  v1 = (__int128 *)(*v0 + 568);
  v2 = sub_23B1C5E4C();
  v4[4] = *(_QWORD *)(v2 - 8);
  v4[5] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4[6] = (char *)v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = v1[1];
  type metadata accessor for TestingOperation();
}

uint64_t sub_23AFB6FEC(char a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;

  v5 = v4;
  v9 = a1 & 1;
  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (!v9)
    {
      if ((a3 & 1) != 0)
        goto LABEL_4;
      goto LABEL_8;
    }
LABEL_14:
    if ((a3 & 1) != 0)
    {
      v22 = (uint64_t *)(v5 + qword_2542EDFC8);
      v23 = *(_QWORD *)(v5 + qword_2542EDFC8);
      v24 = v23 + 1;
      if (!__OFADD__(v23, 1))
      {
        *v22 = v24;
        goto LABEL_19;
      }
    }
    else
    {
      v22 = (uint64_t *)(v5 + qword_2542EDFC8);
      v25 = *(_QWORD *)(v5 + qword_2542EDFC8);
      v24 = v25 - 1;
      if (!__OFSUB__(v25, 1))
      {
        *v22 = v24;
        v18 = __OFSUB__(0, a2);
        a2 = -a2;
        if (v18)
        {
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
LABEL_19:
        v26 = v22[1];
        v27 = v26 + a2;
        if (!__OFADD__(v26, a2))
        {
          v22[1] = v27;
          v28 = 1;
          if ((a3 & 1) == 0)
            v28 = -1;
          if ((a4 & 1) == 0)
            v28 = 0;
          v29 = qword_2542EE128;
          v30 = *(_QWORD *)(v5 + qword_2542EE128);
          v18 = __OFADD__(v30, v28);
          v31 = v30 + v28;
          if (!v18)
          {
            *(_QWORD *)(v5 + qword_2542EE128) = v31;
            result = sub_23AFBA60C(v24, v27, v9);
            if (*v22 < 1 || v22[1] <= 0)
            {
              *v22 = 0;
              v22[1] = 0;
            }
            else
            {
              if ((*(_QWORD *)(v5 + v29) & 0x8000000000000000) == 0)
                return result;
              if (*(_BYTE *)(v5 + 89) == 1)
              {
LABEL_42:
                result = sub_23B1C704C();
                __break(1u);
                return result;
              }
              v32 = (id)fpfs_current_or_default_log();
              sub_23B1C5E58();
              v33 = sub_23B1C5E40();
              v34 = sub_23B1C6AA0();
              if (os_log_type_enabled(v33, v34))
              {
                v35 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v35 = 0;
                _os_log_impl(&dword_23AA66000, v33, v34, "🤯 [GlobalProgress] pausableDownloadsCounter counter is negative", v35, 2u);
                MEMORY[0x23B8614BC](v35, -1, -1);
              }

              result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
            }
            *(_QWORD *)(v5 + v29) = 0;
            return result;
          }
          goto LABEL_39;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  a2 = 1;
  if (v9)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
LABEL_4:
    v14 = (uint64_t *)(v5 + qword_2542EDFA0);
    v15 = *(_QWORD *)(v5 + qword_2542EDFA0);
    v16 = v15 + 1;
    if (!__OFADD__(v15, 1))
    {
      *v14 = v16;
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_8:
  v14 = (uint64_t *)(v5 + qword_2542EDFA0);
  v17 = *(_QWORD *)(v5 + qword_2542EDFA0);
  v16 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  *v14 = v16;
  v18 = __OFSUB__(0, a2);
  a2 = -a2;
  if (v18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_10:
  v19 = v14[1];
  v20 = v19 + a2;
  if (__OFADD__(v19, a2))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v14[1] = v20;
  result = sub_23AFBA60C(v16, v20, 0);
  if (*v14 < 1 || v14[1] <= 0)
  {
    *v14 = 0;
    v14[1] = 0;
  }
  return result;
}

void sub_23AFB72D8(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD v15[8];
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v15[6] = a2;
  v3 = (_QWORD *)*v2;
  v4 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v4 - 8);
  v18 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v19 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v3[71];
  v7 = v3[73];
  v9 = type metadata accessor for SnapshotItem(0, v6, v7, v8);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v16 = (char *)v15 - v10;
  v20 = sub_23B1C6C98();
  v11 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v11);
  v22 = (char *)v15 - v12;
  v23 = v6;
  v13 = v3[72];
  v14 = v3[74];
  v24 = v13;
  v25 = v7;
  v26 = v14;
  type metadata accessor for Propagation.CreateItem();
}

uint64_t sub_23AFB740C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unsigned __int8 *v20;
  uint64_t v21;
  os_log_type_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  result = swift_dynamicCastClass();
  if (!result)
  {
    *(_QWORD *)(v9 - 112) = v8;
    *(_QWORD *)(v9 - 104) = v3;
    *(_QWORD *)(v9 - 96) = v4;
    *(_QWORD *)(v9 - 88) = v1;
    type metadata accessor for Propagation.UpdateItem();
  }
  v11 = v5;
  if ((*(_BYTE *)(result + 130) & 1) == 0)
  {
    *(_QWORD *)(v9 - 192) = v7;
    v12 = *(_QWORD *)(v9 - 120);
    v13 = v6;
    v14 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 536);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v9 - 128) + 32) + 240))(v14, 1);
    if (!v11)
    {
      *(_QWORD *)(v9 - 208) = v14;
      *(_QWORD *)(v9 - 200) = v13;
      v15 = *(_QWORD *)(v9 - 192);
      v16 = v12;
      v17 = *(_QWORD *)(v9 - 144);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v0, v16, v17);
      v18 = *(_QWORD *)(v9 - 136);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v0, 1, v2) == 1)
      {
        *(_QWORD *)(v9 - 128) = 0;
        v11 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v11(v0, v17);
        v19 = (id)fpfs_current_or_default_log();
        v20 = *(unsigned __int8 **)(v9 - 152);
        sub_23B1C5E58();
        swift_retain();
        v2 = sub_23B1C5E40();
        v21 = v17;
        v22 = sub_23B1C6AA0();
        if (os_log_type_enabled((os_log_t)v2, v22))
        {
          v23 = (_DWORD *)swift_slowAlloc();
          v24 = swift_slowAlloc();
          *(_QWORD *)(v9 - 136) = v24;
          *(_QWORD *)(v9 - 112) = v24;
          *v23 = 136446210;
          *(_QWORD *)(v9 - 184) = v23 + 1;
          *(_QWORD *)(v9 - 176) = v23;
          swift_getAssociatedTypeWitness();
          swift_getAssociatedConformanceWitness();
          v25 = sub_23B1C7304();
          *(_QWORD *)(v9 - 72) = sub_23AABEC68(v25, v26, (uint64_t *)(v9 - 112));
          sub_23B1C6CBC();
          swift_release();
          swift_bridgeObjectRelease();
          v27 = *(uint8_t **)(v9 - 176);
          _os_log_impl(&dword_23AA66000, (os_log_t)v2, v22, "[GlobalProgress] accountUploadJob, snapshot missing for itemID %{public}s", v27, 0xCu);
          v28 = *(_QWORD *)(v9 - 136);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v28, -1, -1);
          MEMORY[0x23B8614BC](v27, -1, -1);

          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 168) + 8))(*(_QWORD *)(v9 - 152), *(_QWORD *)(v9 - 160));
          v29 = *(_QWORD *)(v9 - 120);
          v30 = *(_QWORD *)(v9 - 144);
          return ((uint64_t (*)(uint64_t, uint64_t))v11)(v29, v30);
        }
LABEL_17:
        swift_release();

        (*(void (**)(unsigned __int8 *, _QWORD))(*(_QWORD *)(v9 - 168) + 8))(v20, *(_QWORD *)(v9 - 160));
        v29 = *(_QWORD *)(v9 - 120);
        v30 = v21;
        return ((uint64_t (*)(uint64_t, uint64_t))v11)(v29, v30);
      }
      v31 = *(_QWORD *)(v9 - 176);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v31, v0, v2);
      v20 = (unsigned __int8 *)(v31 + *(int *)(v2 + 48));
      v32 = *v20;
      result = type metadata accessor for ItemMetadata();
      if (v32 == 1)
        goto LABEL_22;
      v33 = *(_QWORD *)&v20[*(int *)(result + 100)];
      v21 = *(_QWORD *)(v9 - 128);
      v34 = *(_DWORD *)(v9 - 184);
      if ((v34 & 1) != 0 || *(_BYTE *)(*(_QWORD *)(v9 - 200) + 104) == 3)
      {
LABEL_21:
        sub_23AFB6FEC(0, v33, v34 & 1, 1);
LABEL_22:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 136) + 8))(v31, v2);
        return (*(uint64_t (**)(_QWORD, uint64_t))(v15 + 8))(*(_QWORD *)(v9 - 120), v17);
      }
      v35 = (_QWORD *)(v21 + qword_2542EDFD0);
      v36 = *(_QWORD *)(v21 + qword_2542EDFD0);
      v37 = __OFADD__(v36, 1);
      v38 = v36 + 1;
      if (v37)
      {
        __break(1u);
      }
      else
      {
        *v35 = v38;
        v39 = v35[1];
        if (v33)
        {
          v37 = __OFADD__(v39, v33);
          v40 = v39 + v33;
          if (v37)
          {
            __break(1u);
            goto LABEL_17;
          }
          goto LABEL_20;
        }
        v37 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (!v37)
        {
LABEL_20:
          v35[1] = v40;
          goto LABEL_21;
        }
      }
      __break(1u);
    }
  }
  return result;
}

void sub_23AFB77BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[14];
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v51 = a2;
  v79 = a1;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 568);
  v7 = *(_QWORD *)(*v4 + 584);
  v8 = type metadata accessor for SnapshotItem(0, v6, v7, a4);
  v49 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v47[7] = (char *)v47 - v9;
  v47[13] = v10;
  v48 = sub_23B1C6C98();
  v47[11] = *(_QWORD *)(v48 - 8);
  v11 = MEMORY[0x24BDAC7A8](v48);
  v47[12] = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v59 = (char *)v47 - v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v64 = sub_23B1C6C98();
  v62 = *(_QWORD *)(v64 - 8);
  v15 = MEMORY[0x24BDAC7A8](v64);
  v63 = (char *)v47 - v16;
  v70 = AssociatedTypeWitness;
  v66 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v47[4] = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v47[6] = (char *)v47 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v60 = (char *)v47 - v21;
  v22 = sub_23B1C5E4C();
  v76 = *(_QWORD *)(v22 - 8);
  v77 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v74 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v61 = (char *)v47 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v47[8] = (char *)v47 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v50 = (char *)v47 - v29;
  v30 = *(_QWORD *)(v5 + 576);
  v31 = *(_QWORD *)(v5 + 592);
  v33 = type metadata accessor for SnapshotItem(0, v30, v31, v32);
  v56 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v47[10] = (char *)v47 - v34;
  v57 = v35;
  v58 = sub_23B1C6C98();
  v54 = *(_QWORD *)(v58 - 8);
  v36 = MEMORY[0x24BDAC7A8](v58);
  v55 = (char *)v47 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v65 = (char *)v47 - v38;
  v39 = swift_getAssociatedTypeWitness();
  v73 = sub_23B1C6C98();
  v71 = *(_QWORD *)(v73 - 8);
  v40 = MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)v47 - v41;
  v78 = v39;
  v75 = *(_QWORD *)(v39 - 8);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v47[5] = (char *)v47 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v47[9] = (char *)v47 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v69 = (char *)v47 - v46;
  v67 = v6;
  v80 = v6;
  v81 = v30;
  v52 = v30;
  v68 = v7;
  v82 = v7;
  v83 = v31;
  v53 = v31;
  type metadata accessor for ItemReconciliation();
}

void sub_23AFB7C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_23B1C6C98();
  *(_QWORD *)(v1 - 216) = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v1 - 176) = v0;
  sub_23AB00114();
}

void sub_23AFB7CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  void (*v61)(uint64_t, uint64_t);
  id v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  NSObject *v67;
  uint64_t v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  NSObject *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  void (*v84)(uint64_t, uint64_t);
  id v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  int v90;
  uint64_t v91;
  _DWORD *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  _QWORD *v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void (*v114)(uint64_t, uint64_t);

  if (v1)
    return;
  *(_QWORD *)(v9 - 496) = v2;
  *(_QWORD *)(v9 - 504) = v0;
  *(_QWORD *)(v9 - 512) = v5;
  v10 = *(_QWORD *)(v9 - 144);
  *(_QWORD *)(v9 - 488) = v7;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v8) == 1)
  {
    *(_QWORD *)(v9 - 136) = 0;
    (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v4, *(_QWORD *)(v9 - 216));
    v11 = (id)fpfs_current_or_default_log();
    v12 = *(_QWORD *)(v9 - 184);
    sub_23B1C5E58();
    swift_retain();
    v13 = sub_23B1C5E40();
    v14 = sub_23B1C6AA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_QWORD *)(v9 - 120) = v16;
      *(_DWORD *)v15 = 136315138;
      swift_getAssociatedConformanceWitness();
      v17 = sub_23B1C7304();
      *(_QWORD *)(v9 - 72) = sub_23AABEC68(v17, v18, (uint64_t *)(v9 - 120));
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v13, v14, "item missing from RT, cannot account for download job: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v16, -1, -1);
      MEMORY[0x23B8614BC](v15, -1, -1);

    }
    else
    {

      swift_release();
    }
    v42 = *(_QWORD *)(v9 - 152);
    v43 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 160) + 8);
    v44 = v12;
    goto LABEL_11;
  }
  v19 = v8;
  v20 = v6;
  v21 = *(_QWORD *)(v9 - 488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v21, v4, v19);
  *(_QWORD *)(v9 - 184) = v19;
  v22 = v21 + *(int *)(v19 + 52);
  v24 = *(_QWORD *)(v9 - 208);
  v23 = *(_QWORD *)(v9 - 200);
  v25 = *(_QWORD *)(v9 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, v22, v25);
  v26 = *(_QWORD *)(v9 - 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v23, 1, v10) != 1)
  {
    v45 = v23;
    v46 = *(_QWORD *)(v9 - 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v46, v45, v10);
    v47 = *(_QWORD *)(v9 - 264);
    (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v9 - 176) + 40) + 240))(v46, 1);
    *(_QWORD *)(v9 - 192) = v20;
    v53 = *(_QWORD *)(v9 - 352);
    v54 = *(_QWORD *)(v9 - 344);
    v55 = v47;
    v56 = v47;
    v57 = *(_QWORD *)(v9 - 320);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v54, v55, v57);
    v58 = *(_QWORD *)(v9 - 336);
    v59 = *(_QWORD *)(v9 - 328);
    v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v54, 1, v59);
    v61 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    if (v60 == 1)
    {
      *(_QWORD *)(v9 - 136) = 0;
      *(_QWORD *)(v9 - 128) = v61;
      v61(v54, v57);
      v62 = (id)fpfs_current_or_default_log();
      v63 = *(_QWORD *)(v9 - 384);
      sub_23B1C5E58();
      v64 = *(_QWORD *)(v9 - 168);
      v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
      v66 = *(_QWORD *)(v9 - 440);
      v65(v66, *(_QWORD *)(v9 - 232), v10);
      v67 = sub_23B1C5E40();
      v68 = v10;
      v69 = sub_23B1C6AA0();
      if (!os_log_type_enabled(v67, v69))
      {
        v103 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v103(v66, v68);

        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 160) + 8))(v63, *(_QWORD *)(v9 - 152));
        (*(void (**)(_QWORD, _QWORD))(v9 - 128))(*(_QWORD *)(v9 - 264), *(_QWORD *)(v9 - 320));
        v103(*(_QWORD *)(v9 - 232), v68);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 192) + 8))(v21, *(_QWORD *)(v9 - 184));
        return;
      }
      v70 = (uint8_t *)swift_slowAlloc();
      v71 = swift_slowAlloc();
      *(_QWORD *)(v9 - 176) = v71;
      *(_QWORD *)(v9 - 120) = v71;
      *(_DWORD *)v70 = 136315138;
      *(_QWORD *)(v9 - 208) = v70 + 4;
      v72 = *(_QWORD *)(v9 - 472);
      v65(v72, v66, v68);
      *(_QWORD *)(v9 - 200) = v67;
      v73 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      v73(v66, v68);
      swift_getAssociatedConformanceWitness();
      v74 = sub_23B1C7304();
      v76 = v75;
      v73(v72, v68);
      *(_QWORD *)(v9 - 72) = sub_23AABEC68(v74, v76, (uint64_t *)(v9 - 120));
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v77 = *(NSObject **)(v9 - 200);
      _os_log_impl(&dword_23AA66000, v77, v69, "item missing from FP snapshot, cannot account for download job: %s", v70, 0xCu);
      v78 = *(_QWORD *)(v9 - 176);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v78, -1, -1);
      MEMORY[0x23B8614BC](v70, -1, -1);

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 160) + 8))(*(_QWORD *)(v9 - 384), *(_QWORD *)(v9 - 152));
      (*(void (**)(_QWORD, _QWORD))(v9 - 128))(*(_QWORD *)(v9 - 264), *(_QWORD *)(v9 - 320));
      v73(*(_QWORD *)(v9 - 232), v68);
      v43 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 192) + 8);
LABEL_33:
      v44 = *(_QWORD *)(v9 - 488);
      v42 = *(_QWORD *)(v9 - 184);
LABEL_11:
      v43(v44, v42);
      return;
    }
    v61(v56, v57);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 - 168) + 8))(*(_QWORD *)(v9 - 232), v10);
    v102 = *(_QWORD *)(v9 - 432);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v102, v54, v59);
    v88 = sub_23AFD7D2C(v102, *(_QWORD *)(v9 - 248), *(_QWORD *)(v9 - 368), *(_QWORD *)(v9 - 368), *(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 360), *(_QWORD *)(v9 - 360));
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v102, v59);
    v52 = *(_QWORD *)(v9 - 192);
    v32 = *(_QWORD *)(v9 - 176);
    goto LABEL_25;
  }
  *(_QWORD *)(v9 - 136) = 0;
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  v27 = *(_QWORD *)(v9 - 288);
  v28 = *(_QWORD *)(v9 - 280);
  v29 = *(_QWORD *)(v9 - 272);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v28, v21, v29);
  v30 = *(_QWORD *)(v9 - 256);
  v10 = *(_QWORD *)(v9 - 224);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v10);
  v32 = *(_QWORD *)(v9 - 176);
  if (v31 != 1)
  {
    v48 = *(_QWORD *)(v9 - 304);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v48, v28, v10);
    v49 = v30;
    v50 = *(_QWORD *)(v9 - 312);
    v51 = *(_QWORD *)(v9 - 136);
    (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v32 + 32) + 240))(v48, 1);
    v52 = v20;
    if (v51)
    {
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v10);
      (*(void (**)(uint64_t, _QWORD))(v20 + 8))(v21, *(_QWORD *)(v9 - 184));
      return;
    }
    v56 = *(_QWORD *)(v9 - 424);
    v80 = *(_QWORD *)(v9 - 416);
    v81 = v50;
    v82 = *(_QWORD *)(v9 - 400);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v80, v81, v82);
    v59 = *(_QWORD *)(v9 - 408);
    v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 392) + 48))(v80, 1, v59);
    v84 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    if (v83 == 1)
    {
      *(_QWORD *)(v9 - 136) = 0;
      *(_QWORD *)(v9 - 128) = v84;
      v84(v80, v82);
      v85 = (id)fpfs_current_or_default_log();
      v59 = *(_QWORD *)(v9 - 448);
      sub_23B1C5E58();
      v56 = *(_QWORD *)(v9 - 256);
      v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
      v87 = *(_QWORD *)(v9 - 464);
      v21 = *(_QWORD *)(v9 - 304);
      v86(v87, v21, v10);
      v88 = sub_23B1C5E40();
      v89 = sub_23B1C6AA0();
      v90 = v89;
      if (os_log_type_enabled(v88, v89))
      {
        v91 = swift_slowAlloc();
        *(_DWORD *)(v9 - 168) = v90;
        v92 = (_DWORD *)v91;
        v93 = swift_slowAlloc();
        *(_QWORD *)(v9 - 144) = v93;
        *(_QWORD *)(v9 - 120) = v93;
        *(_QWORD *)(v9 - 176) = v92;
        *v92 = 136315138;
        *(_QWORD *)(v9 - 192) = v92 + 1;
        v94 = *(_QWORD *)(v9 - 480);
        v86(v94, v87, v10);
        v95 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
        v95(v87, v10);
        swift_getAssociatedConformanceWitness();
        v96 = sub_23B1C7304();
        v97 = v52;
        v99 = v98;
        v95(v94, v10);
        *(_QWORD *)(v9 - 72) = sub_23AABEC68(v96, v99, (uint64_t *)(v9 - 120));
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        v100 = *(uint8_t **)(v9 - 176);
        _os_log_impl(&dword_23AA66000, v88, (os_log_type_t)*(_DWORD *)(v9 - 168), "item missing from FS snapshot, cannot account for download job: %s", v100, 0xCu);
        v101 = *(_QWORD *)(v9 - 144);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v101, -1, -1);
        MEMORY[0x23B8614BC](v100, -1, -1);

        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 160) + 8))(*(_QWORD *)(v9 - 448), *(_QWORD *)(v9 - 152));
        (*(void (**)(_QWORD, _QWORD))(v9 - 128))(*(_QWORD *)(v9 - 312), *(_QWORD *)(v9 - 400));
        v95(*(_QWORD *)(v9 - 304), v10);
        v43 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
        goto LABEL_33;
      }
LABEL_32:
      v114 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v114(v87, v10);

      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 160) + 8))(v59, *(_QWORD *)(v9 - 152));
      (*(void (**)(_QWORD, _QWORD))(v9 - 128))(*(_QWORD *)(v9 - 312), *(_QWORD *)(v9 - 400));
      v114(v21, v10);
      v43 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      goto LABEL_33;
    }
    v84(*(_QWORD *)(v9 - 312), v82);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 - 256) + 8))(*(_QWORD *)(v9 - 304), v10);
    v10 = *(_QWORD *)(v9 - 392);
    v104 = v80;
    v105 = *(_QWORD *)(v9 - 456);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v105, v104, v59);
    v88 = sub_23AFD7D2C(v105, *(_QWORD *)(v9 - 248), *(_QWORD *)(v9 - 368), *(_QWORD *)(v9 - 248), *(_QWORD *)(v9 - 240), *(_QWORD *)(v9 - 360), *(_QWORD *)(v9 - 240));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v105, v59);
LABEL_25:
    v87 = 0;
    v106 = *(_QWORD *)(v9 - 128);
    v107 = *(_DWORD *)(v9 - 372);
    if ((v107 & 1) != 0 || *(_BYTE *)(v106 + 104) == 3)
      goto LABEL_36;
    v108 = (_QWORD *)(v32 + qword_2542EDFE0);
    v109 = *(_QWORD *)(v32 + qword_2542EDFE0);
    v110 = __OFADD__(v109, 1);
    v111 = v109 + 1;
    if (v110)
    {
      __break(1u);
    }
    else
    {
      *v108 = v111;
      v112 = v108[1];
      if (v88)
      {
        v110 = __OFADD__(v112, v88);
        v113 = (char *)v88 + v112;
        if (v110)
        {
          __break(1u);
          goto LABEL_32;
        }
        goto LABEL_35;
      }
      v110 = __OFADD__(v112, 1);
      v113 = (char *)(v112 + 1);
      if (!v110)
      {
LABEL_35:
        v108[1] = v113;
LABEL_36:
        sub_23AFB6FEC(1, (uint64_t)v88, v107 & 1, (*(_QWORD *)(v106 + 128) & 0x4000000000) != 0);
        (*(void (**)(uint64_t, _QWORD))(v52 + 8))(v21, *(_QWORD *)(v9 - 184));
        return;
      }
    }
    __break(1u);
    return;
  }
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
  v33 = (id)fpfs_current_or_default_log();
  v34 = *(_QWORD *)(v9 - 296);
  sub_23B1C5E58();
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v36 = *(_QWORD *)(v9 - 504);
  v37 = *(_QWORD *)(v9 - 184);
  v35(v36, v21, v37);
  v38 = sub_23B1C5E40();
  v39 = sub_23B1C6AA0();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (_DWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    *(_QWORD *)(v9 - 128) = v41;
    *(_QWORD *)(v9 - 120) = v41;
    *v40 = 136315138;
    *(_QWORD *)(v9 - 144) = v40 + 1;
    v35(*(_QWORD *)(v9 - 512), v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v36, v37);
    sub_23B0CA854(v37);
  }
  v79 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v79(v36, v37);

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 160) + 8))(v34, *(_QWORD *)(v9 - 152));
  v79(v21, v37);
}

uint64_t sub_23AFB89A4()
{
  uint64_t v0;

  return (*(unsigned __int8 *)(v0 + 81) >> 1) & 1;
}

uint64_t sub_23AFB89B0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 81) >> 7;
}

uint64_t sub_23AFB89BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  _OWORD v9[3];

  v1 = *v0;
  v2 = sub_23B1C60EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (void *)v0[8];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v9[1] = *(_OWORD *)(v1 + 568);
    v9[0] = *(_OWORD *)(v1 + 584);
    swift_getAssociatedTypeWitness();
    v9[2] = v9[0];
    type metadata accessor for UserRequest();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AFB8BAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];

  v1 = (_QWORD *)*v0;
  v2 = sub_23B1C60EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (void *)v0[8];
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    swift_beginAccess();
    v9 = v1[74];
    v10 = v1[72];
    swift_getAssociatedTypeWitness();
    swift_bridgeObjectRetain();
    v11 = v1[71];
    v12 = v1[73];
    v13[1] = v10;
    v13[2] = v11;
    v13[3] = v9;
    v13[4] = v12;
    type metadata accessor for UserRequest();
  }
  __break(1u);
  return result;
}

id sub_23AFB8D90()
{
  uint64_t v0;
  id result;

  if ((*(_BYTE *)(v0 + qword_256A079E0) & 1) == 0)
  {
    *(_BYTE *)(v0 + qword_256A079E0) = 1;
    if (qword_2569E12A8 != -1)
      swift_once();
    return objc_msgSend((id)qword_256A079A0, sel_addWatcher_, v0);
  }
  return result;
}

id sub_23AFB8E08()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = qword_256A079E0;
  if (*(_BYTE *)(v0 + qword_256A079E0) == 1)
  {
    if (qword_2569E12A8 != -1)
      swift_once();
    result = objc_msgSend((id)qword_256A079A0, sel_removeWatcher_, v0);
    *(_BYTE *)(v0 + v1) = 0;
  }
  return result;
}

uint64_t sub_23AFB8E80(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 90) = a1 & 1;
  return sub_23AFC08F8();
}

uint64_t sub_23AFB8E8C()
{
  void *v0;

  return sub_23AC45210(v0, (void (*)(void))sub_23AFDB718);
}

uint64_t sub_23AFB8ED0()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 216))
    type metadata accessor for SwappedDatabase();
  v1 = *(_QWORD *)(v0 + 216);
  swift_retain();
  return v1;
}

uint64_t (*sub_23AFB8F6C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t (*sub_23AFB8FB0())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

void sub_23AFB8FF4(void *a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, id (*)(void *), void *);
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;

  v3 = (id)fpfs_adopt_log();
  v4 = objc_msgSend(a1, sel_label);
  v5 = sub_23B1C63E0();
  v7 = v6;

  if (qword_2542E6C40 != -1)
    swift_once();
  v8 = objc_msgSend((id)qword_2542EDD50, sel_label);
  v9 = sub_23B1C63E0();
  v11 = v10;

  if (v9 == v5 && v11 == v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v13 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    v19 = *(void (**)(_QWORD, id (*)(void *), void *))(*(_QWORD *)v1 + 2432);
    swift_retain();
    v19(0, sub_23AFDB710, v1);
    goto LABEL_15;
  }
  v14 = (void *)sub_23AC4514C(v1, (void (*)(uint64_t *__return_ptr))sub_23AFDB380);
  v15 = objc_msgSend(v14, sel_label);

  v16 = sub_23B1C63E0();
  v18 = v17;

  if (v16 == v5 && v18 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    swift_retain();
    sub_23ACFFA68((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AFDB6F8, (uint64_t)v1);
    goto LABEL_15;
  }
  v20 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_14;
  if (qword_2542E6EE0 != -1)
    swift_once();
  v21 = objc_msgSend((id)qword_2542EDE00, sel_label);
  v22 = sub_23B1C63E0();
  v24 = v23;

  if (v22 == v5 && v24 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    swift_retain();
    sub_23ACFFA68((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AFDB6DC, (uint64_t)v1);
    goto LABEL_15;
  }
  v25 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_23;
  if (qword_2542E7160 != -1)
    swift_once();
  v26 = objc_msgSend((id)qword_2542EDE30, sel_label);
  v27 = sub_23B1C63E0();
  v29 = v28;

  if (v27 == v5 && v29 == v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      if (qword_2542E6EC8 != -1)
        swift_once();
      v31 = objc_msgSend((id)qword_2542EDD70, sel_label);
      v32 = sub_23B1C63E0();
      v34 = v33;

      if (v32 == v5 && v34 == v7)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {
          if (qword_2569E12A8 != -1)
            swift_once();
          v36 = objc_msgSend((id)qword_256A079A0, sel_label);
          v37 = sub_23B1C63E0();
          v39 = v38;

          if (v37 == v5 && v39 == v7)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v40 = sub_23B1C7388();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v40 & 1) == 0)
              sub_23AFF1BE0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 106, 2, 803, a1);
          }
          swift_retain();
          sub_23ACFFA68((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AFDB6A8, (uint64_t)v1);
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      sub_23AFBA50C(0);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23ACFFA68((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AFDB6C4, (uint64_t)v1);
LABEL_15:
  swift_release();
LABEL_16:
  v41 = (id)fpfs_adopt_log();

}

uint64_t sub_23AFB958C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 32) + 16) + 816);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  v3 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 40) + 16) + 816);
  v4 = swift_retain();
  v3(v4);
  return swift_release();
}

uint64_t sub_23AFB95F4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 32) + 16) + 824);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  v3 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 40) + 16) + 824);
  v4 = swift_retain();
  v3(v4);
  return swift_release();
}

void sub_23AFB965C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = v0;
  v2 = *(id *)(v0 + 64);
  sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23AFDB690, v1);

  v3 = *(id *)(v1 + 64);
  sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);

}

uint64_t sub_23AFB9704()
{
  void *v0;

  return sub_23AC45210(v0, sub_23AFDB678);
}

id sub_23AFB9744()
{
  uint64_t v0;
  id result;

  if (qword_2542E6EE0 != -1)
    swift_once();
  result = objc_msgSend((id)qword_2542EDE00, sel_removeWatcher_, v0);
  *(_BYTE *)(v0 + qword_2542EE120) = 0;
  return result;
}

void sub_23AFB97A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  if (*(_BYTE *)(v0 + qword_2542EE120) == 1 && !*(_QWORD *)(v0 + qword_2542E6C98))
  {
    v2 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 24) + 496))();
    if (!v1 && (v2 & 1) == 0)
      sub_23AFB9744();
  }
}

id sub_23AFB9818()
{
  return sub_23AFB9830((SEL *)&selRef_addWatcher_);
}

id sub_23AFB9824()
{
  return sub_23AFB9830((SEL *)&selRef_removeWatcher_);
}

id sub_23AFB9830(SEL *a1)
{
  uint64_t v1;

  if (qword_2542E6EC8 != -1)
    swift_once();
  return objc_msgSend((id)qword_2542EDD70, *a1, v1);
}

void sub_23AFB9884()
{
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

void sub_23AFB98DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;

  v9[20] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9[21] = (char *)&a9 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = sub_23B1C6C98();
  v9[6] = *(_QWORD *)(v17 - 8);
  v9[7] = v17;
  MEMORY[0x24BDAC7A8](v17);
  v9[10] = (char *)&a9 - v18;
  v19 = swift_getAssociatedTypeWitness();
  v9[14] = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v9[12] = (char *)&a9 - v21;
  v9[26] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  *v9 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v9[8] = (char *)&a9 - v24;
  v9[2] = v11;
  v9[4] = v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9[1] = v13;
  v9[3] = v12;
  v26 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v14 - 192) = AssociatedTypeWitness;
  *(_QWORD *)(v14 - 184) = v19;
  v9[23] = v19;
  *(_QWORD *)(v14 - 176) = AssociatedConformanceWitness;
  *(_QWORD *)(v14 - 168) = v26;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AFB9A7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _BYTE *v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[96];

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = &v42[-v8];
  v10 = sub_23B1C6C98();
  v1[18] = *(_QWORD *)(v10 - 8);
  v1[19] = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v1[16] = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v1[17] = &v42[-v13];
  v14 = (uint64_t *)(v1[27] + qword_2542EDFF0);
  swift_beginAccess();
  v15 = *(_QWORD *)(v2 + 32);
  v16 = swift_bridgeObjectRetain();
  v1[22] = v4;
  v17 = v4;
  v18 = v15;
  LOBYTE(v15) = MEMORY[0x23B85EB94](v16, v3, v17, v15);
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 16))(v9, v1[24], a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = v1[14];
      v20 = v1[12];
      (*(void (**)(uint64_t, _BYTE *, _QWORD))(v19 + 32))(v20, v9, v1[23]);
      v21 = v1[10];
      (*(void (**)(uint64_t))(**(_QWORD **)(v1[27] + 16) + 152))(v20);
      v22 = v1[26];
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v3) == 1)
      {
        (*(void (**)(uint64_t, _QWORD))(v19 + 8))(v20, v1[23]);
        (*(void (**)(uint64_t, _QWORD))(v1[6] + 8))(v21, v1[7]);
        return 0;
      }
      v38 = *(void (**)(_QWORD, uint64_t, uint64_t))(v22 + 32);
      v1[27] = 0;
      v39 = *v1;
      v38(*v1, v21, v3);
      v40 = *v14;
      swift_bridgeObjectRetain();
      v41 = v20;
      v26 = v1[17];
      v27 = v1[22];
      MEMORY[0x23B85EBD0](v39, v40, v3, v27, v18);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v39, v3);
      (*(void (**)(uint64_t, _QWORD))(v19 + 8))(v41, v1[23]);
    }
    else
    {
      v23 = v1[26];
      v24 = v1[8];
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v23 + 32))(v24, v9, v3);
      v25 = *v14;
      swift_bridgeObjectRetain();
      v26 = v1[17];
      v27 = v1[22];
      MEMORY[0x23B85EBD0](v24, v25, v3, v27, v18);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v3);
    }
    v29 = v1[18];
    v28 = v1[19];
    v30 = v1[16];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v30, v26, v28);
    v31 = v1[20];
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v30, 1, v27);
    v33 = (_BYTE *)v1[21];
    if (v32 == 1)
    {
      v34 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v34(v26, v28);
      v34(v30, v28);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v31 + 32))(v1[21], v30, v27);
      if (!*v33)
      {
        v1[36] = *(_QWORD *)&v33[*(int *)(v27 + 56)];
        v36 = v1[3];
        *(_QWORD *)(v5 - 192) = v1[4];
        *(_QWORD *)(v5 - 184) = v36;
        v37 = v1[1];
        *(_QWORD *)(v5 - 176) = v1[2];
        *(_QWORD *)(v5 - 168) = v37;
        type metadata accessor for UserRequest();
      }
      (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v33, v27);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v28);
    }
  }
  return 0;
}

void sub_23AFBA50C(char a1)
{
  _BYTE v1[24];

  v1[16] = a1 & 1;
  sub_23AFB66D8("updateSchedulingState(_:)", (void *)0x19, 2, (uint64_t)sub_23AFDB5C8, (uint64_t)v1, (void *)(MEMORY[0x24BEE4AE0] + 8), MEMORY[0x24BEE4AE0]);
}

uint64_t sub_23AFBA55C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_23AEBD130(0xD000000000000015, 0x800000023B205090, v4, v5);
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  return sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AFDB5B0, v2, v6, MEMORY[0x24BEE4AE0] + 8, v7);
}

uint64_t sub_23AFBA60C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];
  uint64_t v44;

  v4 = v3;
  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - v13;
  v15 = 0x64616F6C6E776F64;
  if ((a3 & 1) == 0)
    v15 = 0x64616F6C7075;
  v42 = v15;
  if ((a3 & 1) != 0)
    v16 = 0xE800000000000000;
  else
    v16 = 0xE600000000000000;
  if (a1 <= 0)
  {
    if (!(a1 | a2))
    {
LABEL_8:
      if (a1 < 0)
        goto LABEL_18;
      goto LABEL_16;
    }
  }
  else if (a2 > 0)
  {
    goto LABEL_8;
  }
  if (*(_BYTE *)(v4 + 89) == 1)
  {
LABEL_22:
    v43[0] = 0;
    v43[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23B1C64F4();
    sub_23B1C64F4();
    sub_23B075910();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    result = sub_23B1C704C();
    __break(1u);
    return result;
  }
  v17 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v18 = sub_23B1C5E40();
  v19 = sub_23B1C6AA0();
  v38 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v39 = a2;
    v21 = v20;
    v37 = swift_slowAlloc();
    v43[0] = v37;
    *(_DWORD *)v21 = 136315394;
    v41 = v8;
    swift_bridgeObjectRetain();
    v44 = sub_23AABEC68(v42, v16, v43);
    v40 = v9;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    v22 = sub_23B075910();
    v36 = v18;
    v44 = sub_23AABEC68(v22, v23, v43);
    v9 = v40;
    v8 = v41;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v24 = v36;
    _os_log_impl(&dword_23AA66000, v36, (os_log_type_t)v38, "🤯 [GlobalProgress] %s counter in unexpected state: %s", (uint8_t *)v21, 0x16u);
    v25 = v37;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v25, -1, -1);
    v26 = v21;
    a2 = v39;
    MEMORY[0x23B8614BC](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  if ((a1 & 0x8000000000000000) == 0)
  {
LABEL_16:
    if ((a2 & 0x8000000000000000) == 0)
      return swift_bridgeObjectRelease();
  }
LABEL_18:
  if (*(_BYTE *)(v4 + 89) == 1)
    goto LABEL_22;
  v28 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain();
  v29 = sub_23B1C5E40();
  v30 = sub_23B1C6AA0();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v40 = v9;
    v32 = v31;
    v33 = swift_slowAlloc();
    v43[0] = v33;
    *(_DWORD *)v32 = 136315394;
    v41 = v8;
    swift_bridgeObjectRetain();
    v44 = sub_23AABEC68(v42, v16, v43);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2080;
    v34 = sub_23B075910();
    v44 = sub_23AABEC68(v34, v35, v43);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v29, v30, "🤯 [GlobalProgress] %s counter in unexpected negative counter: %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v33, -1, -1);
    MEMORY[0x23B8614BC](v32, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v12, v41);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

void sub_23AFBABB4()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AFBAC10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  void (*v29)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v30)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v31)(_BYTE *, uint64_t);
  _BYTE *v32;
  _BYTE *v33;
  void (*v34)(_BYTE *, _BYTE *, uint64_t);
  _BYTE v36[96];

  v6 = sub_23B1C6C98();
  *(_QWORD *)(v4 - 184) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 - 176) = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v4 - 152) = a1;
  *(_QWORD *)(v4 - 144) = &v36[-v8];
  *(_QWORD *)(v4 - 160) = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v4 - 200) = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v4 - 168) = &v36[-v11];
  *(_QWORD *)(v4 - 216) = v2;
  *(_QWORD *)(v4 - 208) = v1;
  v13 = type metadata accessor for SnapshotItem(255, v1, v2, v12);
  v14 = sub_23B1C6C98();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = &v36[-v20];
  v22 = *(_QWORD *)(v13 - 8);
  v23 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v4 - 192) = &v36[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v4 - 128) = &v36[-v26];
  MEMORY[0x24BDAC7A8](v25);
  v28 = &v36[-v27];
  v29 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16);
  v29(v21, v3, v14);
  v30 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48);
  if (v30(v21, 1, v13) == 1)
  {
    v31 = *(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8);
    v32 = v21;
  }
  else
  {
    v33 = v21;
    v34 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 32);
    v34(v28, v33, v13);
    v29(v18, *(_QWORD *)(v4 - 120), v14);
    if (v30(v18, 1, v13) != 1)
    {
      v34(*(_BYTE **)(v4 - 128), v18, v13);
      sub_23AB00114();
    }
    (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v28, v13);
    v31 = *(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8);
    v32 = v18;
  }
  return v31(v32, v14);
}

void sub_23AFBAE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  if (v1)
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
LABEL_3:
    v8(v0, v2);
    v8(v4, v2);
    goto LABEL_36;
  }
  v9 = v0;
  *(_QWORD *)(v7 - 72) = 0;
  v11 = *(_QWORD *)(v7 - 160);
  v10 = *(_QWORD *)(v7 - 152);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1)
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v12(v9, v2);
    v12(v4, v2);
    JUMPOUT(0x23AFBAE18);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v11 + 32))(*(_QWORD *)(v7 - 168), v3, v10);
  *(_DWORD *)(v7 - 120) = sub_23B0CA570(v10);
  v13 = v9 + *(int *)(v2 + 48);
  v14 = type metadata accessor for ItemMetadata();
  v15 = *(unsigned __int8 *)(v13 + *(int *)(v14 + 68));
  if (v15 == 2)
  {
    v16 = *(_QWORD *)(v7 - 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v16, v4, v2);
  }
  else
  {
    v16 = *(_QWORD *)(v7 - 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v16, v4, v2);
    if ((v15 & 1) != 0)
    {
      v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v8(v16, v2);
      goto LABEL_16;
    }
  }
  v17 = *(_BYTE *)(v16 + *(int *)(v2 + 48) + *(int *)(v14 + 68));
  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v8(v16, v2);
  if ((v17 & 1) != 0)
  {
    v19 = *(_DWORD *)(v7 - 120);
    if (v19 != 2 && (v19 & 1) == 0)
      goto LABEL_13;
    v35 = *(_QWORD *)(v7 - 72);
    v36 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v5 + 24) + 216))(v4);
    if (v35)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 160) + 8))(*(_QWORD *)(v7 - 168), *(_QWORD *)(v7 - 152));
      v0 = *(_QWORD *)(v7 - 128);
      goto LABEL_3;
    }
    if ((v36 & 1) != 0)
LABEL_13:
      sub_23AFB6FEC(0, *(_QWORD *)(v13 + *(int *)(v14 + 100)), 0, 1);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 160) + 8))(*(_QWORD *)(v7 - 168), *(_QWORD *)(v7 - 152));
    v8(*(_QWORD *)(v7 - 128), v2);
    v8(v4, v2);
LABEL_36:
    JUMPOUT(0x23AFBAE20);
  }
  v9 = *(_QWORD *)(v7 - 128);
LABEL_16:
  v20 = *(int *)(v14 + 100);
  *(_QWORD *)(v7 - 128) = v13;
  v21 = *(_QWORD *)(v13 + v20);
  v22 = v4;
  v23 = v4 + *(int *)(v2 + 48);
  v24 = *(_QWORD *)(v7 - 200);
  if (v21 == *(_QWORD *)(v23 + v20))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 160) + 8))(*(_QWORD *)(v7 - 168), *(_QWORD *)(v7 - 152));
    v8(v9, v2);
    v8(v22, v2);
    JUMPOUT(0x23AFBAE1CLL);
  }
  *(_QWORD *)(v7 - 144) = v22;
  *(_QWORD *)(v7 - 176) = v2;
  v25 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v7 - 208), *(_QWORD *)(v7 - 216), v18);
  v26 = *(_QWORD *)(v7 - 160);
  v27 = *(_QWORD *)(*(_QWORD *)(v7 - 168) + *(int *)(v25 + 76));
  v28 = *(_QWORD *)(v7 - 152);
  (*(void (**)(uint64_t))(v26 + 16))(v24);
  if ((v27 & 4) != 0)
  {
    v32 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v32(v24, v28);
    v34 = v28;
  }
  else
  {
    v30 = v24 + *(int *)(v28 + 52);
    v31 = *(_QWORD *)(v30
                    + *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v7 - 224), *(_QWORD *)(v7 - 232), v29)+ 76));
    v32 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v32(v24, v28);
    if ((v31 & 4) == 0)
    {
      v33 = *(_DWORD *)(v7 - 120);
      v0 = v9;
      if (v33 != 2 && (v33 & 1) == 0)
        goto LABEL_22;
      v38 = *(_QWORD *)(v7 - 72);
      v39 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(v7 - 136) + 24) + 224))(*(_QWORD *)(v7 - 144));
      if (v38)
      {
        v32(*(_QWORD *)(v7 - 168), *(_QWORD *)(v7 - 152));
        v2 = *(_QWORD *)(v7 - 176);
        v4 = *(_QWORD *)(v7 - 144);
        goto LABEL_3;
      }
      if ((v39 & 1) != 0)
      {
LABEL_22:
        sub_23AFB6FEC(0, *(_QWORD *)(v23 + v20), 1, 1);
        sub_23AFB6FEC(0, *(_QWORD *)(*(_QWORD *)(v7 - 128) + v20), 0, 1);
      }
      v34 = *(_QWORD *)(v7 - 152);
      goto LABEL_29;
    }
    v34 = *(_QWORD *)(v7 - 152);
  }
  v0 = v9;
LABEL_29:
  v32(*(_QWORD *)(v7 - 168), v34);
  v37 = *(_QWORD *)(v7 - 176);
  v8(v0, v37);
  v8(*(_QWORD *)(v7 - 144), v37);
  goto LABEL_36;
}

void sub_23AFBB23C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a2;
  v35 = a1;
  v3 = (_QWORD *)*v2;
  v4 = sub_23B1C5E4C();
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v28 = (char *)v21 - v7;
  v8 = v3[71];
  v9 = v3[73];
  v11 = type metadata accessor for SnapshotItem(255, v8, v9, v10);
  v22 = sub_23B1C6C98();
  v21[2] = *(_QWORD *)(v22 - 8);
  v12 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v21 - v13;
  v24 = v11;
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v25 = (char *)v21 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = sub_23B1C6C98();
  v29 = *(_QWORD *)(v31 - 8);
  v16 = MEMORY[0x24BDAC7A8](v31);
  v30 = (char *)v21 - v17;
  v33 = AssociatedTypeWitness;
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v16);
  v26 = (char *)v21 - v18;
  v39 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v39);
  v34 = (char *)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v3[74];
  v41 = v3[72];
  v42 = v8;
  v43 = v20;
  v44 = v9;
  type metadata accessor for ItemReconciliation();
}

void sub_23AFBB480(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 - 152) = a1;
  v6 = sub_23B1C6C98();
  *(_QWORD *)(v5 - 232) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 224) = v6;
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AFBB4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);
  _BYTE v33[96];

  *(_QWORD *)(v3 - 192) = a1;
  *(_QWORD *)(v3 - 160) = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v3 - 344) = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v3 - 368) = &v33[-v7];
  v8 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v3 - 336) = &v33[-v9];
  v10 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v3 - 256) = &v33[-v11];
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v3 - 168) = &v33[-v12];
  v14 = type metadata accessor for SnapshotItem(255, v1, v2, v13);
  v15 = sub_23B1C6C98();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v3 - 240) = &v33[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = &v33[-v20];
  v22 = *(_QWORD *)(v14 - 8);
  v23 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v3 - 312) = &v33[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v3 - 248) = &v33[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v3 - 320) = &v33[-v28];
  MEMORY[0x24BDAC7A8](v27);
  v30 = &v33[-v29];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 16))(v21, *(_QWORD *)(v3 - 136), v15);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v14) != 1)
  {
    *(_QWORD *)(v3 - 136) = v22;
    v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 32);
    *(_QWORD *)(v3 - 384) = v14;
    v32(v30, v21, v14);
    sub_23AB003A0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v21, v15);
}

void sub_23AFBB968()
{
  unsigned int (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  char v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  void (*v50)(uint64_t, _QWORD);
  uint64_t v51;
  void (*v52)(_QWORD, uint64_t);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 424) + 8))(v5, v1);
  v9 = *(_QWORD *)(v8 - 168);
  v10 = *(_QWORD *)(v8 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 160) + 32))(v9, v7, v10);
  v11 = *(_QWORD *)(v8 - 384);
  *(_QWORD *)(v8 - 152) = *(_QWORD *)(v4 + *(int *)(v11 + 48) + *(int *)(*(_QWORD *)(v8 - 176) + 100));
  v12 = *(_QWORD *)(v8 - 240);
  v2(v12, *(_QWORD *)(v8 - 216), v3);
  if (v0(v12, 1, v11) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v3);
    v13 = *(_QWORD *)(v8 - 304);
    v14 = *(_QWORD *)(v8 - 296);
    v15 = *(_QWORD *)(v8 - 288);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v9, v15);
    v16 = *(_QWORD *)(v8 - 280);
    v17 = *(_QWORD *)(v8 - 272);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v17) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
      v18 = *(_QWORD *)(v8 - 168);
      v19 = *(_QWORD *)(v8 - 160);
LABEL_4:
      v20 = (id)fpfs_current_or_default_log();
      v21 = *(_QWORD *)(v8 - 328);
      sub_23B1C5E58();
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
      v23 = *(_QWORD *)(v8 - 336);
      v22(v23, v18, v10);
      v24 = v10;
      v25 = sub_23B1C5E40();
      v26 = sub_23B1C6AA0();
      *(_QWORD *)(v8 - 144) = v25;
      *(_DWORD *)(v8 - 152) = v26;
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (_DWORD *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        *(_QWORD *)(v8 - 160) = v28;
        *(_QWORD *)(v8 - 120) = v28;
        *v27 = 136315138;
        *(_QWORD *)(v8 - 176) = v27 + 1;
        v22(*(_QWORD *)(v8 - 368), v23, v24);
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v24);
        sub_23B0CA854(v24);
      }
      v40 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v40(v23, v24);

      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 208) + 8))(v21, *(_QWORD *)(v8 - 200));
      v40(v18, v24);
LABEL_26:
      JUMPOUT(0x23AFBB6D4);
    }
    v36 = v14;
    v29 = v10;
    v37 = *(_QWORD *)(v8 - 360);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v37, v36, v17);
    v38 = *(_QWORD *)(v8 - 352);
    v39 = *(_QWORD *)(v8 - 128);
    (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v8 - 144) + 32) + 240))(v37, 1);
    v32 = v39;
    if (v39)
    {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v37, v17);
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v8 - 160) + 8))(*(_QWORD *)(v8 - 168), v29);
      JUMPOUT(0x23AFBB730);
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v37, v17);
    v46 = *(_QWORD *)(v8 - 400);
    v47 = *(_QWORD *)(v8 - 392);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v38, 1, v47);
    v18 = *(_QWORD *)(v8 - 168);
    v19 = *(_QWORD *)(v8 - 160);
    if (v48 == 1)
    {
      *(_QWORD *)(v8 - 128) = 0;
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 416) + 8))(v38, *(_QWORD *)(v8 - 408));
      v10 = v29;
      goto LABEL_4;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v46 + 32))(*(_QWORD *)(v8 - 376), v38, v47);
    v51 = *(_QWORD *)(v8 - 264);
    sub_23AA907B0(*(_QWORD *)(v8 - 376) + *(int *)(v47 + 48), v51, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v52 = *(void (**)(_QWORD, uint64_t))(v46 + 8);
    v31 = v51;
    v52(*(_QWORD *)(v8 - 376), v47);
  }
  else
  {
    v29 = v10;
    v30 = *(_QWORD *)(v8 - 320);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 184))(v30, v12, v11);
    v31 = *(_QWORD *)(v8 - 264);
    sub_23AA907B0(v30 + *(int *)(v11 + 48), v31, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 136) + 8))(v30, v11);
    v32 = *(_QWORD *)(v8 - 128);
    v18 = v9;
    v19 = *(_QWORD *)(v8 - 160);
  }
  v33 = *(_QWORD *)(v31 + *(int *)(*(_QWORD *)(v8 - 176) + 100));
  sub_23AA937BC(v31, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  if (v33 == *(_QWORD *)(v8 - 152))
  {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v29);
    goto LABEL_27;
  }
  *(_QWORD *)(v8 - 128) = v32;
  v34 = sub_23B0CA570(v29);
  if (v34 == 2)
  {
    v35 = *(_QWORD *)(v8 - 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v35, v18, v29);
  }
  else
  {
    v41 = v34;
    v35 = *(_QWORD *)(v8 - 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v35, v18, v29);
    if ((v41 & 1) != 0)
    {
      v50 = *(void (**)(uint64_t, _QWORD))(v19 + 8);
      v50(v35, *(_QWORD *)(v8 - 192));
      goto LABEL_22;
    }
  }
  v42 = *(_QWORD *)(v8 - 128);
  v43 = sub_23AFD4A14(v35);
  *(_QWORD *)(v8 - 128) = v42;
  if (v42)
  {
    v44 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v45 = *(_QWORD *)(v8 - 192);
    v44(v35, v45);
    v44(v18, v45);
LABEL_27:
    JUMPOUT(0x23AFBB734);
  }
  v49 = v43;
  v50 = *(void (**)(uint64_t, _QWORD))(v19 + 8);
  v50(v35, *(_QWORD *)(v8 - 192));
  if ((v49 & 1) == 0)
  {
LABEL_23:
    v50(*(_QWORD *)(v8 - 168), *(_QWORD *)(v8 - 192));
    goto LABEL_26;
  }
LABEL_22:
  sub_23AFB6FEC(1, *(_QWORD *)(v8 - 152), 1, 0);
  sub_23AFB6FEC(1, v33, 0, 0);
  goto LABEL_23;
}

void sub_23AFBBF88()
{
  uint64_t *v0;
  _QWORD v1[6];

  sub_23AEAD4C0(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_23AFBBFC0()
{
  uint64_t v1;

  sub_23AC04DA4((uint64_t)&v1);
  return 1;
}

unint64_t sub_23AFBC0B0()
{
  uint64_t *v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[3];
  uint64_t v17;
  unsigned __int8 v18;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  *(_QWORD *)(inited + 32) = sub_23B1C63E0();
  *(_QWORD *)(inited + 40) = v2;
  sub_23AEAD4C0(v0, (uint64_t)v16);
  v3 = sub_23B1C6434();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  v5 = sub_23AAE9EB4(inited);
  sub_23AEAD4C0(v0, (uint64_t)v16);
  if (v18 - 1 > 1)
  {
    sub_23AC04DA4((uint64_t)v16);
  }
  else
  {
    v6 = (void *)v16[0];
    v7 = sub_23B1C63E0();
    v9 = v8;
    swift_getErrorValue();
    v17 = v15;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(boxed_opaque_existential_0, v14, v15);
    sub_23AAA159C(v16, v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23AD1A024(v13, v7, v9, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  return v5;
}

uint64_t sub_23AFBC220()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7B80);
  return sub_23B1C644C();
}

uint64_t sub_23AFBC25C()
{
  sub_23AFDE074();
  return sub_23B1C7430();
}

uint64_t sub_23AFBC284()
{
  sub_23AFDE074();
  return sub_23B1C7424();
}

uint64_t sub_23AFBC2AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  unint64_t v22;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_23B1C6C98();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v20 - v8;
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + *(int *)(a1 + 40));
  if (v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v2 + *(int *)(a1 + 36), v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
      v21 = 0;
      v22 = 0xE000000000000000;
      swift_retain();
      sub_23B1C6EFC();
      sub_23B1C64F4();
      v16 = *(_QWORD *)(a1 + 24);
      sub_23B1C7340();
      sub_23B1C64F4();
      v20[1] = v13;
      v18 = type metadata accessor for JobLockAggregator(0, v4, v16, v17);
      MEMORY[0x23B8613CC](&unk_23B1D1650, v18);
      sub_23B1C7340();
      swift_release();
      v15 = v21;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v4);
      return v15;
    }
    v14 = *(void (**)(char *, uint64_t))(v6 + 8);
    swift_retain();
    v14(v9, v5);
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_23B1C64F4();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_23B1C7340();
    swift_release();
  }
  else
  {
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_23B1C7340();
  }
  return v21;
}

uint64_t sub_23AFBC5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_23B1C6C98();
  type metadata accessor for JobLockAggregator(255, v7, v6, v10);
  sub_23B1C6C98();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v12 = a2 + *(int *)(TupleTypeMetadata3 + 48);
  v13 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v3, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v12, v3 + *(int *)(a1 + 36), v9);
  *(_QWORD *)(a2 + v13) = *(_QWORD *)(v3 + *(int *)(a1 + 40));
  type metadata accessor for FileTreeWriter.FileTreeChange(0, v7, v6, v14);
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

BOOL sub_23AFBC6FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t);
  _BYTE v13[24];
  _BYTE v14[24];

  v2 = *v1;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for FileTreeChangeAggregator.Change(0, v4, v3, v6);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if ((MEMORY[0x23B85EB94](v2, AssociatedTypeWitness, v7, *(_QWORD *)(AssociatedConformanceWitness + 32)) & 1) == 0)
    return 0;
  type metadata accessor for FileTreeWriter.StreamResetReason(255, v4, v3, v9);
  swift_getTupleTypeMetadata2();
  v10 = sub_23B1C6C98();
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v13, (uint64_t)(v1 + 2), v10);
  v11(v14, (uint64_t)v13, v10);
  return v14[0] == 2 && (*((_BYTE *)v1 + 49) & 1) == 0 && (v1[6] & 1) == 0 && (*((_BYTE *)v1 + 50) & 1) == 0;
}

uint64_t sub_23AFBC848(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

void sub_23AFBC86C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[55];

  v3 = *a1;
  v4 = type metadata accessor for SyncState();
  v11[10] = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v11[9] = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v11[8] = (char *)v11 - v7;
  v8 = *(_QWORD *)(v3 + 88);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(v3 + 104);
  v11[51] = *(_QWORD *)(a2 + 16);
  v11[52] = v8;
  v11[34] = v8;
  v11[53] = v9;
  v11[54] = v10;
  v11[35] = v10;
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AFBE7BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t *v31;

  v31 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v27 = a2;
  v7 = type metadata accessor for FileTreeChangeAggregator.Change(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - v12;
  v28 = v4;
  v14 = *v4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v15 = nullsub_1(v14);
  v16 = *(_QWORD *)(v15 + 64);
  v29 = (_QWORD *)(v15 + 64);
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v30 = (unint64_t)(v17 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  if (v19)
  {
    v21 = __clz(__rbit64(v19));
    goto LABEL_15;
  }
  v22 = 1;
  if (v30 <= 1)
    goto LABEL_20;
  v23 = v29[1];
  if (v23)
  {
LABEL_14:
    v21 = __clz(__rbit64(v23)) + (v22 << 6);
LABEL_15:
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, *(_QWORD *)(v15 + 56) + *(_QWORD *)(v8 + 72) * v21, v7);
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    MEMORY[0x23B8601A8](v25);
    sub_23AFBEA98((uint64_t)v11, v31);
  }
  v24 = 2;
  if (v30 <= 2)
    goto LABEL_20;
  v23 = v29[2];
  if (v23)
    goto LABEL_13;
  v24 = 3;
  if (v30 <= 3)
    goto LABEL_20;
  v23 = v29[3];
  if (v23)
  {
LABEL_13:
    v22 = v24;
    goto LABEL_14;
  }
  v24 = 4;
  if (v30 <= 4)
  {
LABEL_20:
    v26 = v27;
    swift_release();
    sub_23AFBC86C(v31, v26);
  }
  v23 = v29[4];
  if (v23)
    goto LABEL_13;
  while (1)
  {
    v22 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v22 >= v30)
      goto LABEL_20;
    v23 = v29[v22];
    ++v24;
    if (v23)
      goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_23AFBEA98(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a2;
  v3 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v3);
  v5 = type metadata accessor for FileTreeWriter.FileTreeChange(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 96), v4);
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for ConcreteJobResult();
}

void sub_23AFBEB60()
{
  sub_23AEB6FD8();
}

uint64_t sub_23AFBEB68(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  double v16;
  double v17;
  double v18;

  v13 = type metadata accessor for FileTreeChangeAggregator.Change(0, v5, v6, a4);
  sub_23AFBC5D0(v13, v10);
  v14 = *(_QWORD *)(v11 - 120);
  sub_23B0FB994(v10, 0, a1, v9);
  if (v14)
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v10, v8);
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v8);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v17 = v16;
  result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v11 - 144) + 8))(v7, *(_QWORD *)(v11 - 136));
  v18 = v17 * 1000000000.0;
  if ((~COERCE__INT64(v17 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v18 > -9.22337204e18)
    {
      if (v18 < 9.22337204e18)
        sub_23AEBF200((uint64_t)a1, (uint64_t)v18);
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

void sub_23AFBECAC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v47 = a1;
  v38 = a2;
  v4 = *a2;
  v40 = sub_23B1C5BDC();
  v44 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a3 + 16);
  v33 = sub_23B1C6C98();
  v35 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v28 = (char *)&v26 - v7;
  v8 = *(_QWORD *)(a3 + 24);
  type metadata accessor for SnapshotItem(255, v6, v8, v9);
  v27 = sub_23B1C6C98();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v26 - v10;
  v12 = type metadata accessor for FileTreeChangeAggregator.Change(255, v6, v8, v11);
  v13 = sub_23B1C6C98();
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v31 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v32 = (char *)&v26 - v17;
  v41 = *(_QWORD *)(v12 - 8);
  v42 = v12;
  MEMORY[0x24BDAC7A8](v16);
  v30 = (char *)&v26 - v18;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v45 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v46 = AssociatedTypeWitness;
  v20 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v39 = (char *)&v26 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v34 = (char *)&v26 - v23;
  v24 = *(_QWORD *)(v4 + 88);
  v25 = *(_QWORD *)(v4 + 104);
  v48 = v6;
  v49 = v24;
  v50 = v8;
  v51 = v25;
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AFBEF2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v1;
  type metadata accessor for ConcreteJobResult();
}

void sub_23AFBEF6C()
{
  sub_23AEB6FD8();
}

uint64_t sub_23AFBEF74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;

  *(_QWORD *)(v8 - 144) = a1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v8 - 128), v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 7)
  {
    if (EnumCaseMultiPayload == 6)
    {
      v10 = *(_QWORD *)(v8 - 152);
      v11 = *(_QWORD *)(v8 - 264);
      *(_QWORD *)(v8 - 128) = v1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      v12 = *(_QWORD *)(v8 - 160);
      v13 = *(_QWORD *)(v8 - 256);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, v1, v10);
      swift_getAssociatedConformanceWitness();
      v14 = *(_QWORD *)(v8 - 184);
      sub_23B1C629C();
      v15 = *(_QWORD *)(v8 - 272);
      sub_23B1C6224();
      v16 = *(_QWORD *)(v8 - 192);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v15, 1, v14) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v10);
        swift_release();
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 240) + 8))(v15, *(_QWORD *)(v8 - 232));
        return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v8 - 248) + 8))(*(_QWORD *)(v8 - 128), v11);
      }
      v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
      v25 = *(_QWORD *)(v8 - 288);
      v24(v25, v15, v14);
      v26 = v25 + *(int *)(v14 + 36);
      v27 = *(_QWORD *)(v8 - 304);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 248) + 16))(v27, v26, v11);
      v28 = *(_QWORD *)(v8 - 296);
      sub_23AF17160(v27, v6, v7, v28);
      v29 = *(_QWORD *)(v8 - 176);
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v31 = v30;
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 168) + 8))(v29, *(_QWORD *)(v8 - 208));
      v32 = v31 * 1000000000.0;
      if ((~COERCE__INT64(v31 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v32 > -9.22337204e18)
        {
          if (v32 < 9.22337204e18)
            sub_23B0F7398(v28, *(_QWORD *)(v8 - 256), 0, 0, 1, *(_QWORD *)(v8 - 224), 0x2000000000000000, (uint64_t)v32);
LABEL_22:
          __break(1u);
          JUMPOUT(0x23AFBF584);
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
    v22 = *(_QWORD *)(v8 - 144);
    v23 = *(_QWORD *)(v8 - 208);
    v35 = *(_QWORD *)(v8 - 176);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v37 = v36;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 168) + 8))(v35, v23);
    v38 = v37 * 1000000000.0;
    if ((~COERCE__INT64(v37 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v38 > -9.22337204e18)
      {
        if (v38 < 9.22337204e18)
          sub_23AEBF200(v22, (uint64_t)v38);
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(_QWORD *)(v8 - 248) = v5;
  *(_QWORD *)(v8 - 128) = v3;
  v19 = *(_QWORD *)(v8 - 160);
  v18 = *(_QWORD *)(v8 - 152);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v19 + 32))(*(_QWORD *)(v8 - 216), v1, v18);
  swift_getAssociatedConformanceWitness();
  v20 = *(_QWORD *)(v8 - 184);
  sub_23B1C629C();
  v21 = *(_QWORD *)(v8 - 280);
  sub_23B1C6224();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 192) + 48))(v21, 1, v20) != 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 240) + 8))(v21, *(_QWORD *)(v8 - 232));
    v33 = *(_QWORD *)(v8 - 248);
    *(_QWORD *)(v8 - 120) = v6;
    *(_QWORD *)(v8 - 112) = v33;
    v34 = *(_QWORD *)(v8 - 128);
    *(_QWORD *)(v8 - 104) = v7;
    *(_QWORD *)(v8 - 96) = v34;
    type metadata accessor for Ingestion.FetchItemMetadata();
  }
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 240) + 8))(v21, *(_QWORD *)(v8 - 232));
  return (*(uint64_t (**)(_QWORD, uint64_t))(v19 + 8))(*(_QWORD *)(v8 - 216), v18);
}

uint64_t sub_23AFBF590(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  _BYTE v47[24];
  _BYTE v48[8];
  uint64_t v49;
  char v50;

  v5 = v4;
  v7 = *(_QWORD *)(a2 + 24);
  v42 = *(_QWORD *)(a2 + 16);
  v8 = type metadata accessor for FileTreeWriter.StreamResetReason(255, v42, v7, a4);
  swift_getTupleTypeMetadata2();
  v9 = sub_23B1C6C98();
  v10 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v47, v4 + 16, v9);
  v10(v48, v47, v9);
  if (v48[0] != 2)
  {
    v11 = v49;
    v12 = v50;
    v14 = a1[3];
    v13 = a1[4];
    v41 = __swift_project_boxed_opaque_existential_1(a1, v14);
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    v43 = v11;
    v44 = v12;
    MEMORY[0x23B8613CC](&unk_23B1D93E8, v8);
    sub_23B1C7340();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0, 0xE000000000000000, v14, v13);
    swift_bridgeObjectRelease();
  }
  if ((v4[48] & 1) != 0 || (v4[49] & 1) != 0)
  {
    v15 = a1[3];
    v16 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v15);
    v45 = 0x3A656C6469202BLL;
    v46 = 0xE700000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0x3A656C6469202BLL, 0xE700000000000000, v15, v16);
    swift_bridgeObjectRelease();
  }
  if ((v4[50] & 1) != 0)
  {
    v17 = a1[3];
    v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    sub_23AEBD130(0x6C616E676973202BLL, 0xEA00000000006465, v17, v18);
  }
  v19 = *v5;
  v20 = v42;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = type metadata accessor for FileTreeChangeAggregator.Change(0, v42, v7, v22);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  result = MEMORY[0x23B85EB94](v19, AssociatedTypeWitness, v23, *(_QWORD *)(AssociatedConformanceWitness + 32));
  v26 = MEMORY[0x24BEE4AE0];
  if ((result & 1) == 0)
  {
    v27 = a1[3];
    v28 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v27);
    sub_23AEBD130(0x65676E616863202BLL, 0xEA00000000003A73, v27, v28);
    v29 = a1[3];
    v30 = a1[4];
    v31 = __swift_project_boxed_opaque_existential_1(a1, v29);
    MEMORY[0x24BDAC7A8](v31);
    v38 = v42;
    v39 = v7;
    v40 = v5;
    result = sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AFDB560, (uint64_t)v37, v29, v26 + 8, v30);
  }
  if (*(_QWORD *)(v5[1] + 16))
  {
    v32 = a1[3];
    v33 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v32);
    sub_23AEBD130(0x697469736F70202BLL, 0xEC0000003A736E6FLL, v32, v33);
    v34 = a1[3];
    v35 = a1[4];
    v36 = __swift_project_boxed_opaque_existential_1(a1, v34);
    MEMORY[0x24BDAC7A8](v36);
    v38 = v20;
    v39 = v7;
    v40 = v5;
    return sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AFDB57C, (uint64_t)v37, v34, v26 + 8, v35);
  }
  return result;
}

uint64_t sub_23AFBFA38(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  v32 = a1;
  v5 = type metadata accessor for FileTreeChangeAggregator.Change(0, a3, a4, a4);
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)&v26 - v6;
  v7 = *a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v29 = v5;
  v8 = nullsub_1(v7);
  v9 = *(_QWORD *)(v8 + 64);
  v27 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v28 = (unint64_t)(v10 + 63) >> 6;
  v33 = v8;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  v15 = v30;
  v16 = v31;
  v17 = v29;
  while (1)
  {
    if (v12)
    {
      v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v36 = v14;
      v19 = v18 | (v14 << 6);
      goto LABEL_5;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v22 >= v28)
      return swift_release();
    v23 = *(_QWORD *)(v27 + 8 * v22);
    v24 = v14 + 1;
    if (!v23)
    {
      v24 = v14 + 2;
      if (v14 + 2 >= v28)
        return swift_release();
      v23 = *(_QWORD *)(v27 + 8 * v24);
      if (!v23)
      {
        v24 = v14 + 3;
        if (v14 + 3 >= v28)
          return swift_release();
        v23 = *(_QWORD *)(v27 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_20:
    v12 = (v23 - 1) & v23;
    v36 = v24;
    v19 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v15, *(_QWORD *)(v33 + 56) + *(_QWORD *)(v16 + 72) * v19, v17);
    v20 = v32[3];
    v21 = v32[4];
    __swift_project_boxed_opaque_existential_1(v32, v20);
    v34 = 0;
    v35 = 0xE000000000000000;
    MEMORY[0x23B8613CC](&unk_23B1E1738, v17);
    sub_23B1C7340();
    sub_23AEBD130(v34, v35, v20, v21);
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v15, v17);
    v14 = v36;
  }
  v25 = v14 + 4;
  if (v14 + 4 >= v28)
    return swift_release();
  v23 = *(_QWORD *)(v27 + 8 * v25);
  if (v23)
  {
    v24 = v14 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v28)
      return swift_release();
    v23 = *(_QWORD *)(v27 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

double sub_23AFBFD04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  swift_getAssociatedTypeWitness();
  type metadata accessor for FileTreeChangeAggregator.Change(255, a1, a2, v6);
  swift_getTupleTypeMetadata2();
  sub_23B1C6758();
  swift_getAssociatedConformanceWitness();
  v7 = sub_23B1C623C();
  v8 = MEMORY[0x24BEE4AF8];
  v9 = sub_23AAEAEC4(MEMORY[0x24BEE4AF8]);
  type metadata accessor for FileTreeWriter.StreamResetReason(255, a1, a2, v10);
  swift_getTupleTypeMetadata2();
  sub_23B1C6758();
  v11 = sub_23B1C623C();
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v9;
  *(_QWORD *)&result = 2;
  *(_OWORD *)(a3 + 16) = xmmword_23B1DAA80;
  *(_BYTE *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = v11;
  *(_WORD *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 50) = 0;
  *(_QWORD *)(a3 + 56) = v8;
  return result;
}

uint64_t sub_23AFBFE58()
{
  xpc_object_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t result;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5F0], *MEMORY[0x24BDAC600]);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC698], (const char *)*MEMORY[0x24BDAC6A0]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 0);
  v1 = objc_allocWithZone(MEMORY[0x24BE313D0]);
  v2 = (void *)sub_23B1C63BC();
  v3 = objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

  result = swift_unknownObjectRelease();
  qword_2542EDD50 = (uint64_t)v3;
  return result;
}

uint64_t sub_23AFBFF40()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t result;
  _QWORD v5[6];

  v0 = objc_allocWithZone(MEMORY[0x24BE313D0]);
  v1 = (void *)sub_23B1C63BC();
  v5[4] = sub_23AFC0018;
  v5[5] = 0;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_23AFD4C7C;
  v5[3] = &block_descriptor_79_0;
  v2 = _Block_copy(v5);
  v3 = objc_msgSend(v0, sel_initWithLabel_options_criteriaBuilder_, v1, 2, v2);

  _Block_release(v2);
  result = swift_release();
  qword_2542EDD70 = (uint64_t)v3;
  return result;
}

xpc_object_t sub_23AFC0018()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  xpc_object_t v17;
  double v18;
  char *v19;
  double v20;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23B1C5CA8();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5C90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5690();
  v25 = *(_QWORD *)(v10 - 8);
  v26 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C5BDC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = xpc_dictionary_create(0, 0, 0);
  sub_23B1C5BD0();
  sub_23B1C5C84();
  sub_23B1C5C9C();
  v29 = v16;
  sub_23B1C5C78();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_23B1C566C();
  sub_23B1C5678();
  sub_23B1C5684();
  sub_23B1C5654();
  if ((sub_23B1C5648() & 1) == 0)
LABEL_23:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 106, 2, 345);
  sub_23B1C5660();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v2, 1, v13) == 1)
  {
    sub_23AA8A05C((uint64_t)v2, (uint64_t *)&unk_2542E4310);
    v18 = 0.0;
    v19 = v29;
  }
  else
  {
    v19 = v29;
    sub_23B1C5B4C();
    v18 = v20;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v2, v13);
    if (v18 > 0.0)
      goto LABEL_6;
  }
  v18 = v18 + 86400.0;
LABEL_6:
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v18 < 9.22337204e18)
  {
    xpc_dictionary_set_int64(v17, (const char *)*MEMORY[0x24BDAC5B8], (uint64_t)v18);
    xpc_dictionary_set_int64(v17, (const char *)*MEMORY[0x24BDAC5D8], *MEMORY[0x24BDAC608]);
    xpc_dictionary_set_BOOL(v17, (const char *)*MEMORY[0x24BDAC6B8], 0);
    xpc_dictionary_set_string(v17, (const char *)*MEMORY[0x24BDAC698], (const char *)*MEMORY[0x24BDAC6A8]);
    if (qword_2542E76D8 == -1)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  swift_once();
LABEL_10:
  v22 = dword_2542EE108 == 3 || dword_2542EE108 == 9;
  xpc_dictionary_set_BOOL(v17, (const char *)*MEMORY[0x24BDAC598], v22);
  if (!*MEMORY[0x24BDAC6D8])
  {
    __break(1u);
    goto LABEL_23;
  }
  xpc_dictionary_set_BOOL(v17, (const char *)*MEMORY[0x24BDAC6D8], 1);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v26);
  return v17;
}

uint64_t sub_23AFC03F4()
{
  uint64_t *v0;

  return sub_23AFD4DB4(*v0, &qword_2569E7AB0);
}

unint64_t *sub_23AFC0414(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v3;

  return sub_23AFD5954(a1, a2, a3, *v3);
}

uint64_t sub_23AFC042C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_23AFD7C48(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_23AFC0468(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7AD0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AFD7BCC();
  sub_23B1C7538();
  v8[15] = 0;
  sub_23B1C72E0();
  if (!v1)
  {
    type metadata accessor for DBCounters();
    v8[14] = 1;
    sub_23B1C5BDC();
    sub_23AA7E38C(&qword_2569E2418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23B1C72A4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23AFC05BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v20 = a2;
  v23 = sub_23B1C5BDC();
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v22 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7AB8);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DBCounters();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v11 = 0;
  v12 = (char *)v11 + *(int *)(v9 + 20);
  sub_23B1C5BB8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AFD7BCC();
  sub_23B1C7520();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v17 = (uint64_t)v11;
  }
  else
  {
    v19 = v12;
    v14 = v22;
    v13 = v23;
    v26 = 0;
    v15 = v24;
    *v11 = sub_23B1C71FC();
    v25 = 1;
    sub_23AA7E38C(&qword_2569E2468, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
    v16 = v20;
    (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v19, v14, v13);
    sub_23AA907B0((uint64_t)v11, v16, (uint64_t (*)(_QWORD))type metadata accessor for DBCounters);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v17 = (uint64_t)v11;
  }
  return sub_23AA937BC(v17, (uint64_t (*)(_QWORD))type metadata accessor for DBCounters);
}

uint64_t sub_23AFC0814()
{
  _BYTE *v0;

  if (*v0)
    return 0x7461447465736572;
  else
    return 0x756F436873756C66;
}

uint64_t sub_23AFC0858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AFDDF6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AFC087C()
{
  sub_23AFD7BCC();
  return sub_23B1C7544();
}

uint64_t sub_23AFC08A4()
{
  sub_23AFD7BCC();
  return sub_23B1C7550();
}

uint64_t sub_23AFC08CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23AFC05BC(a1, a2);
}

uint64_t sub_23AFC08E0(_QWORD *a1)
{
  return sub_23AFC0468(a1);
}

uint64_t sub_23AFC08F8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t result;

  v1 = *(void (**)(uint64_t))(v0 + 96);
  if (v1)
  {
    v2 = *(unsigned __int8 *)(v0 + 90);
    swift_retain();
    v1(v2);
    return sub_23AAB7948((uint64_t)v1);
  }
  return result;
}

void sub_23AFC0954(char a1@<W0>, _BYTE *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

uint64_t sub_23AFC0990(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = v3 + *(int *)(a1 + 52);
  v6 = sub_23B1C60A4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v2, v6);
  *(_QWORD *)(v3 + *(int *)(a1 + 56)) = v1;
  return result;
}

uint64_t sub_23AFC09DC(void *a1)
{
  return sub_23ACA7014(a1, MEMORY[0x24BEE7908]);
}

id sub_23AFC09E8()
{
  void *v0;

  sub_23AFDC8C0();
  swift_bridgeObjectRetain();
  v0 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  return v0;
}

id sub_23AFC0A34(id result, uint64_t a2)
{
  if ((result & 1) != 0)
  {
    if (qword_2542E6C40 != -1)
      swift_once();
    return objc_msgSend((id)qword_2542EDD50, sel_markWatcherDone_, a2);
  }
  return result;
}

void sub_23AFC0A94()
{
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AFC0AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[96];

  *(_QWORD *)(v7 - 136) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v7 - 128) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v7 - 144) = &v20[-v8];
  v9 = sub_23B1C5BDC();
  *(_QWORD *)(v7 - 160) = v9;
  *(_QWORD *)(v7 - 176) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v7 - 168) = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_23B1C5E4C();
  *(_QWORD *)(v7 - 200) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 - 192) = v11;
  MEMORY[0x24BDAC7A8](v11);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v7 - 152) = AssociatedTypeWitness;
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v7 - 184) = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v7 - 120) = v1;
  v16 = *(_QWORD *)(v1 + 16);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 240))(v15);
  if (!v3)
  {
    if ((result & 1) == 0 && ((*(uint64_t (**)(void))(*(_QWORD *)v16 + 248))() & 1) != 0)
    {
      v18 = *(_QWORD *)(v7 - 120);
      v19 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v7 - 208) = *(_QWORD *)(v18 + 24);
      *(_QWORD *)(v7 - 240) = v19;
      sub_23B0EB9DC();
      *(_QWORD *)(v7 - 112) = v5;
      *(_QWORD *)(v7 - 104) = v4;
      *(_QWORD *)(v7 - 96) = v2;
      *(_QWORD *)(v7 - 88) = v6;
      type metadata accessor for ItemJob();
    }
    swift_storeEnumTagMultiPayload();
    sub_23AFB5F08();
  }
  return result;
}

void sub_23AFC0CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t MetatypeMetadata;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 232) = a1;
  MetatypeMetadata = swift_getMetatypeMetadata();
  sub_23AFD4CB4(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  v7 = sub_23B1C6728();
  *(_QWORD *)(v5 - 224) = v8;
  *(_QWORD *)(v5 - 216) = v7;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v1;
  *(_QWORD *)(v5 - 88) = v4;
  type metadata accessor for DiskImport.ContinueDiskImport();
}

void sub_23AFC0D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;

  **(_QWORD **)(v5 - 224) = a1;
  v7 = sub_23AD7D55C(*(_QWORD *)(v5 - 216));
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v5 - 208) + 272))(v4, v7);
  if (v3)
  {
    (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v4, *(_QWORD *)(v5 - 152));
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v9 = v8;
  v10 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v11 = v4;
  v12 = *(_QWORD *)(v5 - 152);
  v10(v11, v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 - 112) = v9;
  v13 = sub_23B1C67DC();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v13);
  v14 = sub_23B1C69B0();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
LABEL_20:
    JUMPOUT(0x23AFC0C24);
  *(_QWORD *)(v5 - 208) = a1;
  v15 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v16 = sub_23B1C5E40();
  v17 = sub_23B1C6AAC();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_23AA66000, v16, v17, "👽  missing continue-disk-import job, adding a new one", v18, 2u);
    MEMORY[0x23B8614BC](v18, -1, -1);
  }

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 200) + 8))(v2, *(_QWORD *)(v5 - 192));
  v19 = *(_QWORD *)(v5 - 184);
  sub_23B0EB9DC();
  v20 = *(_QWORD *)(v5 - 168);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v22 = v21;
  v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 176) + 8);
  v24 = *(_QWORD *)(v5 - 160);
  v23(v20, v24);
  v25 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v25 > -9.22337204e18)
    {
      if (v25 < 9.22337204e18)
      {
        v26 = sub_23AD3B900(v19, 0x2000000000000000, (uint64_t)v25, 0x20000);
        v10(v19, v12);
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v28 = v27;
        v23(v20, v24);
        v29 = v28 * 1000000000.0;
        if ((~COERCE__INT64(v28 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v29 > -9.22337204e18)
          {
            if (v29 < 9.22337204e18)
            {
              sub_23AEBEFD4(v26);
              swift_release();
              goto LABEL_20;
            }
LABEL_18:
            __break(1u);
LABEL_19:
            JUMPOUT(0x23AFC0C78);
          }
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_15;
}

id sub_23AFC0FC8(uint64_t a1)
{
  uint64_t v1;
  id result;

  result = (id)(*(uint64_t (**)(void))(**(_QWORD **)(a1 + 24) + 416))();
  if (!v1)
  {
    if (qword_2542E7160 != -1)
      swift_once();
    result = objc_msgSend((id)qword_2542EDE30, sel_removeWatcher_, a1);
    *(_BYTE *)(a1 + qword_2542EE010) = 0;
  }
  return result;
}

void sub_23AFC104C()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23AFC1094(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  swift_storeEnumTagMultiPayload();
  sub_23AFB5F08();
}

uint64_t sub_23AFC10D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23AFC1104(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  swift_retain();
  sub_23AFB8FF4(v3);

  return swift_release();
}

uint64_t sub_23AFC1144(uint64_t a1)
{
  swift_getObjectType();
  sub_23B1C6BCC();
  sub_23B1C6BA8();
  if ((*(_BYTE *)(a1 + 88) & 1) == 0)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B1C6BB4();
    swift_unknownObjectRelease();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_23B1C6BCC();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_23B1C6BA8();
  return swift_unknownObjectRelease();
}

uint64_t sub_23AFC1214(void *a1)
{
  return sub_23ACA7014(a1, MEMORY[0x24BEE7928]);
}

uint64_t sub_23AFC1220(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(a1 + 152) = 1;
  v2 = qword_2542EDFB8;
  if (*(_QWORD *)(a1 + qword_2542EDFB8))
  {
    swift_retain();
    sub_23AD6F5D8(0);
    swift_release();
  }
  *(_QWORD *)(a1 + v2) = 0;
  swift_release();
  v3 = qword_256A079D8;
  if (*(_QWORD *)(a1 + qword_256A079D8))
  {
    v4 = swift_retain();
    sub_23AF5131C(v4);
    swift_release();
  }
  *(_QWORD *)(a1 + v3) = 0;
  return swift_release();
}

void sub_23AFC12C8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[7];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (_QWORD *)*a1;
  v10 = sub_23B1C5E4C();
  v9[0] = *(_QWORD *)(v10 - 8);
  v2 = MEMORY[0x24BDAC7A8](v10);
  v9[6] = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v9[3] = (char *)v9 - v4;
  v5 = v1[71];
  v6 = v1[72];
  v7 = v1[73];
  v8 = v1[74];
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  type metadata accessor for UserRequest();
}

uint64_t sub_23AFC3CD0(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

uint64_t sub_23AFC3D00(uint64_t **a1)
{
  uint64_t **v1;
  uint64_t *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_OWORD *);
  void *v8;
  __int128 v9;
  __int128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_OWORD *);
  void *v16;
  __int128 v17;
  __int128 v18;
  uint64_t **v20;
  _OWORD v21[4];
  _OWORD v22[4];
  uint64_t *v23;

  v1 = a1;
  v2 = *a1;
  v3 = (char *)a1 + qword_2542E6CB0;
  swift_beginAccess();
  v4 = *((_QWORD *)v3 + 7);
  v5 = *(_QWORD *)(v4 + 16);
  v23 = v2;
  if (v5)
  {
    v20 = v1;
    sub_23AD2C7F8();
    swift_bridgeObjectRetain();
    v6 = v4 + 40;
    do
    {
      v7 = *(void (**)(_OWORD *))(v6 - 8);
      v8 = (void *)swift_allocError();
      *(_QWORD *)&v22[0] = v8;
      swift_retain();
      v7(v22);

      swift_release();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v2 = v23;
    v1 = v20;
  }
  sub_23AFBFD04(v2[71], v2[73], (uint64_t)v21);
  v9 = v21[1];
  *(_OWORD *)v3 = v21[0];
  *((_OWORD *)v3 + 1) = v9;
  v10 = v21[3];
  *((_OWORD *)v3 + 2) = v21[2];
  *((_OWORD *)v3 + 3) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (char *)v1 + qword_2542E6CA8;
  swift_beginAccess();
  v12 = *((_QWORD *)v11 + 7);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    sub_23AD2C7F8();
    swift_bridgeObjectRetain();
    v14 = v12 + 40;
    do
    {
      v15 = *(void (**)(_OWORD *))(v14 - 8);
      v16 = (void *)swift_allocError();
      *(_QWORD *)&v22[0] = v16;
      swift_retain();
      v15(v22);

      swift_release();
      v14 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v2 = v23;
  }
  sub_23AFBFD04(v2[72], v2[74], (uint64_t)v22);
  v17 = v22[1];
  *(_OWORD *)v11 = v22[0];
  *((_OWORD *)v11 + 1) = v17;
  v18 = v22[3];
  *((_OWORD *)v11 + 2) = v22[2];
  *((_OWORD *)v11 + 3) = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_23AFC3F3C()
{
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AFC3F88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  int v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  NSObject *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _BYTE v56[64];

  *(_QWORD *)(v2 - 160) = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v2 - 248) = &v56[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v2 - 208) = &v56[-v6];
  v7 = sub_23B1C5E4C();
  *(_QWORD *)(v2 - 192) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v2 - 184) = v7;
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v2 - 152) = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_23B1C5DC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v2 - 216) = &v56[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v56[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v56[-v16];
  v18 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v2 - 136) = &v56[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2542E6818 != -1)
    swift_once();
  v20 = (void *)qword_2542EDD28;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v17, 1, 1, v9);
  *(_QWORD *)(v2 - 128) = 0;
  *(_QWORD *)(v2 - 120) = 0xE000000000000000;
  sub_23B1C64F4();
  sub_23B1C7334();
  v21 = *(_QWORD *)(v2 - 120);
  *(_QWORD *)(v2 - 240) = *(_QWORD *)(v2 - 128);
  *(_QWORD *)(v2 - 232) = v17;
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  v22 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  *(_QWORD *)(v2 - 144) = v1;
  *(_QWORD *)(v2 - 200) = a1;
  if (v22 == 1)
  {
    v23 = v20;
    v24 = *(_QWORD *)(v2 - 216);
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v24 = *(_QWORD *)(v2 - 216);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 32))(v24, v15, v9);
  }
  v25 = *(_QWORD *)(v2 - 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v25, v24, v9);
  v26 = *(int *)(v18 + 20);
  *(_QWORD *)(v2 - 224) = v26;
  *(_QWORD *)(v25 + v26) = v20;
  v27 = v25 + *(int *)(v18 + 24);
  *(_QWORD *)v27 = "SQLDB: React to trigger";
  *(_QWORD *)(v27 + 8) = 23;
  *(_QWORD *)(v2 - 216) = v27;
  *(_BYTE *)(v27 + 16) = 2;
  v28 = v20;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v29 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v2 - 240);
  *(_QWORD *)(v29 + 40) = v21;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v24, v9);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(*(_QWORD *)(v2 - 232), (uint64_t *)&unk_2542E67B8);
  v30 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v31 = (id)fpfs_current_or_default_log();
  v32 = *(_QWORD *)(v2 - 152);
  sub_23B1C5E58();
  v33 = *(_QWORD *)(v2 - 160);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  v36 = *(_QWORD *)(v2 - 208);
  v35 = *(_QWORD *)(v2 - 200);
  v37 = *(_QWORD *)(v2 - 144);
  v34(v36, v37, v35);
  v38 = v30;
  v39 = sub_23B1C5E40();
  v40 = sub_23B1C6A88();
  v41 = v40;
  if (os_log_type_enabled(v39, v40))
  {
    v42 = swift_slowAlloc();
    *(_QWORD *)(v2 - 256) = v39;
    v43 = v42;
    v44 = swift_slowAlloc();
    *(_DWORD *)(v2 - 260) = v41;
    v45 = (_QWORD *)v44;
    v46 = swift_slowAlloc();
    *(_QWORD *)(v2 - 232) = v46;
    *(_QWORD *)(v2 - 128) = v46;
    *(_DWORD *)v43 = 138412546;
    *(_QWORD *)(v2 - 240) = v38;
    v47 = v36;
    v48 = objc_msgSend(v38, sel_enter);
    *(_QWORD *)(v2 - 72) = v48;
    sub_23B1C6CBC();
    *v45 = v48;

    *(_WORD *)(v43 + 12) = 2082;
    v34(*(_QWORD *)(v2 - 248), v47, v35);
    v49 = sub_23B1C6434();
    *(_QWORD *)(v2 - 72) = sub_23AABEC68(v49, v50, (uint64_t *)(v2 - 128));
    sub_23B1C6CBC();
    v37 = *(_QWORD *)(v2 - 144);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(v47, v35);
    v51 = *(NSObject **)(v2 - 256);
    _os_log_impl(&dword_23AA66000, v51, (os_log_type_t)*(_DWORD *)(v2 - 260), "%@  💡 trigger: %{public}s", (uint8_t *)v43, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v45, -1, -1);
    v52 = *(_QWORD *)(v2 - 232);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v52, -1, -1);
    MEMORY[0x23B8614BC](v43, -1, -1);

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 192) + 8))(*(_QWORD *)(v2 - 152), *(_QWORD *)(v2 - 184));
    v53 = *(void **)(v2 - 240);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v35);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 192) + 8))(v32, *(_QWORD *)(v2 - 184));
    v53 = v38;
  }
  (*(void (**)(uint64_t))(**(_QWORD **)(v2 - 176) + 2384))(v37);
  sub_23ACA7014(v53, MEMORY[0x24BEE78F0]);

  sub_23B1C6BD8();
  v54 = *(_QWORD *)(v2 - 136);
  sub_23B1C5DA4();
  return sub_23AA937BC(v54, type metadata accessor for Signpost);
}

uint64_t sub_23AFC45E8(void *a1)
{
  return sub_23ACA7014(a1, MEMORY[0x24BEE78F0]);
}

void sub_23AFC45F4()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AFC4654@<X0>(int a1@<W3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  int v20;
  uint64_t v21;
  char *v22;
  id v23;
  char *v24;
  char *v25;
  char *v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t is_cancelled;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  _QWORD v38[4];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;

  v38[2] = a4;
  v38[0] = a6;
  v38[1] = a3;
  v46 = a2;
  LODWORD(v44) = a1;
  v40 = a5;
  v6 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)v38 - v7;
  v8 = sub_23B1C5DC8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v38 - v15;
  v17 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v17);
  v49 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  if (qword_2542E6818 != -1)
    swift_once();
  v19 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v8);
  v47 = 0x74616220636E7973;
  v48 = 0xEB00000000206863;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v42 = v47;
  v43 = v48;
  v44 = v16;
  sub_23AA8EFC8((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_2542E67B8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
  v21 = v9;
  v22 = (char *)v8;
  if (v20 == 1)
  {
    v23 = v19;
    v24 = v45;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v24 = v45;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v45, v14, v8);
  }
  v25 = v49;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v49, v24, v8);
  v41 = *(int *)(v17 + 20);
  *(_QWORD *)&v25[v41] = v19;
  v26 = &v25[*(int *)(v17 + 24)];
  *(_QWORD *)v26 = "DB queue";
  *((_QWORD *)v26 + 1) = 8;
  v26[16] = 2;
  v27 = v19;
  v45 = v22;
  v28 = v43;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v29 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v29 + 32) = v42;
  *(_QWORD *)(v29 + 40) = v28;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(v21 + 8))(v24, v45);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v44, (uint64_t *)&unk_2542E67B8);
  v30 = v46;
  is_cancelled = fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v46 + 168) + 16));
  if ((_DWORD)is_cancelled)
  {
    sub_23AD2C7F8();
    swift_allocError();
    swift_willThrow();
LABEL_11:
    sub_23B1C6BD8();
    v37 = (uint64_t)v49;
    sub_23B1C5DA4();
    return sub_23AA937BC(v37, type metadata accessor for Signpost);
  }
  MEMORY[0x24BDAC7A8](is_cancelled);
  v33 = v39;
  v32 = v40;
  v34 = v38[3];
  (*(void (**)(uint64_t (*)()))(*(_QWORD *)v30 + 2352))(sub_23AFDE178);
  if (v34)
    goto LABEL_11;
  v35 = *(_QWORD *)(v32 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v32);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(_QWORD, char *, uint64_t))(v35 + 32))(v38[0], v33, v32);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AFC4B1C(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t result;

  result = a1();
  if (!v1)
    return sub_23AABA3E0();
  return result;
}

void sub_23AFC4B90(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  unint64_t v25;
  int v26;
  id v27;
  char *v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  char *v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  int v59;

  v55 = a8;
  v53 = a7;
  v54 = a9;
  v58 = a5;
  v59 = a4;
  v50 = *a1;
  v51 = a6;
  v12 = sub_23B1C5DC8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v47 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v43 - v19;
  v21 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = a1;
  v52 = (id)fpfs_adopt_log();
  if (qword_2542E6818 != -1)
    swift_once();
  v45 = (_OWORD *)(v50 + 568);
  v24 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v20, 1, 1, v12);
  v56 = 0x61657220636E7973;
  v57 = 0xEA00000000002064;
  v49 = a2;
  v50 = a3;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v25 = v57;
  v44 = v56;
  sub_23AA8EFC8((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_2542E67B8);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
  v46 = v20;
  if (v26 == 1)
  {
    v27 = v24;
    v28 = v47;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v28 = v47;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v47, v18, v12);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v23, v28, v12);
  *(_QWORD *)&v23[*(int *)(v21 + 20)] = v24;
  v29 = &v23[*(int *)(v21 + 24)];
  *(_QWORD *)v29 = "DB queue wait";
  *((_QWORD *)v29 + 1) = 13;
  v29[16] = 2;
  v30 = v24;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v31 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v31 + 32) = v44;
  *(_QWORD *)(v31 + 40) = v25;
  v42 = v31;
  LOBYTE(v41) = 2;
  v40 = 2;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v12);
  swift_bridgeObjectRelease();
  v32 = sub_23AA8A05C((uint64_t)v46, (uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v32);
  v33 = v45;
  *((_OWORD *)&v43 - 6) = *v45;
  v34 = v55;
  *(&v43 - 10) = v55;
  *(_OWORD *)(&v43 - 9) = v33[1];
  v35 = v49;
  *(&v43 - 7) = (uint64_t)v23;
  *(&v43 - 6) = v35;
  *(&v43 - 5) = v50;
  LOBYTE(v40) = v59;
  v41 = v51;
  v42 = v53;
  v37 = v36;
  sub_23AFAA490(0, v58 & 1, (uint64_t)"syncRead(quiet:function:block:)", 31, 2, (uint64_t)sub_23AFDB04C, (uint64_t)(&v43 - 14), v34, v54);
  sub_23AA937BC((uint64_t)v23, type metadata accessor for Signpost);

  v38 = v52;
  v39 = (id)fpfs_adopt_log();

}

uint64_t sub_23AFC5000(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_23B1C6BD8();
  type metadata accessor for Signpost(0);
  sub_23B1C5DA4();
  return a3(a1);
}

void sub_23AFC5078()
{
  type metadata accessor for UserRequest();
}

uint64_t sub_23AFC50BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t *v42;
  char *v43;
  uint64_t (**v44)(uint64_t);
  id v45;
  void (*v46)(_QWORD, uint64_t);
  id v47;
  unint64_t v48;
  void *v49;
  void *v50;
  _BYTE v52[96];

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = sub_23AA9F52C(255, (unint64_t *)&unk_2542E1F20);
  *(_QWORD *)(v2 - 96) = sub_23B1C60A4();
  *(_QWORD *)(v2 - 88) = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E21E0);
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v2 - 168) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v5 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v2 - 176) = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v52[-v8];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (uint64_t *)&v52[-v11];
  v13 = *(int *)(v10 + 48);
  v14 = v10;
  *(_QWORD *)(v2 - 200) = v10;
  v15 = (unint64_t *)&v52[v13 - v11];
  v16 = *(int *)(TupleTypeMetadata + 64);
  v17 = (char *)v15 + v16;
  v18 = *(int *)(TupleTypeMetadata + 80);
  v19 = (unint64_t *)((char *)v15 + v18);
  v20 = (unint64_t *)((char *)v1 + v13);
  v21 = *v1;
  *v12 = *v1;
  *(_QWORD *)(v2 - 224) = (char *)v15 + v16;
  *(_QWORD *)(v2 - 216) = v21;
  v22 = (char *)v20 + v16;
  v23 = (uint64_t *)((char *)v20 + v18);
  v25 = *v20;
  v24 = (void *)v20[1];
  *v15 = *v20;
  v15[1] = (unint64_t)v24;
  v26 = sub_23B1C60A4();
  v27 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)(v2 - 120) = v27;
  v28 = *(void (**)(char *, char *))(v27 + 16);
  *(_QWORD *)(v2 - 192) = v28;
  v29 = v22;
  v30 = v26;
  v28(v17, v29);
  v32 = *v23;
  v31 = v23[1];
  *(_QWORD *)(v2 - 208) = v31;
  *v19 = v32;
  v19[1] = v31;
  v33 = *(int *)(v14 + 48);
  *(_QWORD *)(v2 - 184) = v9;
  v34 = (_QWORD *)((char *)v9 + v33);
  v35 = (char *)v9 + v33 + *(int *)(TupleTypeMetadata + 64);
  *v9 = v21;
  *v34 = v25;
  v34[1] = (unint64_t)v24;
  v36 = v30;
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 120) + 32))(v35, *(_QWORD *)(v2 - 224), v30);
  v37 = (uint64_t (**)(uint64_t))((char *)v34 + *(int *)(TupleTypeMetadata + 80));
  v38 = swift_allocObject();
  v40 = *(_QWORD *)(v2 - 208);
  v39 = *(_QWORD *)(v2 - 200);
  *(_QWORD *)(v38 + 16) = v32;
  *(_QWORD *)(v38 + 24) = v40;
  *v37 = sub_23ACFF990;
  v37[1] = (uint64_t (*)(uint64_t))v38;
  v41 = *(_QWORD **)(v2 - 176);
  v42 = (_QWORD *)((char *)v41 + *(int *)(v39 + 48));
  *v41 = *(_QWORD *)(v2 - 216);
  v43 = (char *)v42 + *(int *)(TupleTypeMetadata + 64);
  v44 = (uint64_t (**)(uint64_t))((char *)v42 + *(int *)(TupleTypeMetadata + 80));
  *v42 = v25;
  v42[1] = (unint64_t)v24;
  (*(void (**)(char *, char *, uint64_t))(v2 - 192))(v43, v35, v36);
  sub_23AA93780(v25);
  v45 = v24;
  sub_23AA93780(v25);
  v46 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 168) + 8);
  v47 = v45;
  swift_retain();
  swift_retain();
  v46(*(_QWORD *)(v2 - 184), v39);
  *v44 = sub_23ACFF990;
  v44[1] = (uint64_t (*)(uint64_t))v38;
  v48 = *v42;
  v49 = (void *)v42[1];
  swift_release();

  v50 = sub_23AF9DAF0(v48);
  sub_23AAB47B0(v48);
  **(_QWORD **)(v2 - 128) = v50;
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v43, v36);
}

uint64_t sub_23AFC5374(id *a1)
{
  return objc_msgSend(*a1, sel_isFromPOSIX) ^ 1;
}

BOOL sub_23AFC5398(id *a1)
{
  return objc_msgSend(*a1, sel_requestedExtent) == (id)-1;
}

BOOL sub_23AFC53C0(id *a1, void **a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a2;
  objc_msgSend(*a1, sel_requestedExtent);
  v4 = v3;
  objc_msgSend(v2, sel_requestedExtent);
  return v4 < v5;
}

void sub_23AFC5414()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AFC7690(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[25];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = a2;
  v11 = a1;
  v3 = (_QWORD *)*v2;
  v10 = sub_23B1C5E4C();
  v9[24] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v3[71];
  v6 = v3[72];
  v7 = v3[73];
  v8 = v3[74];
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  type metadata accessor for UserRequest();
}

void sub_23AFC89F4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[23];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = a2;
  v11 = a1;
  v3 = (_QWORD *)*v2;
  v10 = sub_23B1C5E4C();
  v9[22] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v3[72];
  v6 = v3[71];
  v7 = v3[74];
  v8 = v3[73];
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  type metadata accessor for UserRequest();
}

void sub_23AFC9DC0(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[17];
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v18 = a4;
  v22 = a3;
  LODWORD(v23) = a2;
  v5 = (_QWORD *)*v4;
  v17 = sub_23B1C5E4C();
  v16[16] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v5[73];
  v8 = v5[71];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v19 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v16[10] = (char *)v16 - v12;
  v13 = (char *)v4 + qword_2542EDFE8;
  swift_beginAccess();
  v21 = v13;
  swift_bridgeObjectRetain();
  v14 = v5[72];
  v15 = v5[74];
  v24 = v8;
  v25 = v14;
  v26 = v7;
  v27 = v15;
  type metadata accessor for UserRequest();
}

void sub_23AFCA878(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  swift_beginAccess();
  v6 = type metadata accessor for FileTreeChangeAggregator(0, *(_QWORD *)(v4 + 568), *(_QWORD *)(v4 + 584), v5);
  sub_23AFBECAC(a2, a1, v6);
}

uint64_t sub_23AFCA8E8()
{
  return swift_endAccess();
}

void sub_23AFCA910(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = (_QWORD *)sub_23AFB8ED0();
  swift_beginAccess();
  v6 = type metadata accessor for FileTreeChangeAggregator(0, *(_QWORD *)(v3 + 576), *(_QWORD *)(v3 + 592), v5);
  sub_23AFBECAC(a2, v4, v6);
}

uint64_t sub_23AFCA984()
{
  swift_endAccess();
  return swift_release();
}

uint64_t sub_23AFCA9B4(char a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD);
  uint64_t v34;
  void (*v35)(uint64_t);
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52[2];
  uint64_t *v53;
  uint64_t v54;

  v3 = v2;
  v50 = a1 & 1;
  v5 = v50 == 0;
  v6 = *a2;
  v7 = sub_23B1C5BDC();
  v46 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(uint64_t **)(v6 + 584);
  v45 = v6;
  v43 = *(_QWORD *)(v6 + 568);
  v44 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v42 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v47 = (char *)&v36 - v11;
  v49 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v49);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B1C5E4C();
  v15 = *(_QWORD *)(v14 - 8);
  result = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((v5 ^ *((unsigned __int8 *)a2 + 90)) & 1) == 0)
  {
    v39 = v7;
    v40 = a2;
    v19 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v20 = sub_23B1C5E40();
    v21 = sub_23B1C6AB8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v37 = v23;
      *(_DWORD *)v22 = 136315138;
      v52[0] = v23;
      if ((_BYTE)v50)
        v24 = 0xD000000000000019;
      else
        v24 = 0x676E696E6E7572;
      v38 = v2;
      if ((_BYTE)v50)
        v25 = 0x800000023B205360;
      else
        v25 = 0xE700000000000000;
      v36 = v22 + 4;
      v51 = sub_23AABEC68(v24, v25, v52);
      sub_23B1C6CBC();
      v3 = v38;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v20, v21, "changing scheduling state to %s", v22, 0xCu);
      v26 = v37;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v26, -1, -1);
      MEMORY[0x23B8614BC](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    v27 = v40;
    v28 = v40[7];
    ObjectType = swift_getObjectType();
    *v13 = v50;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v28 + 8))(v13, ObjectType, v28);
    result = sub_23AA937BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    if (!v3)
    {
      v53 = v27;
      LOBYTE(v54) = v50;
      v30 = sub_23AC45210(v27, (void (*)(void))sub_23AFDB718);
      if ((*((_BYTE *)v27 + 90) & 1) == 0)
      {
        sub_23AFB9824();
        v31 = *(_QWORD *)(v45 + 576);
        v32 = *(_QWORD *)(v45 + 592);
        v52[0] = v43;
        v52[1] = v31;
        v53 = v44;
        v54 = v32;
        type metadata accessor for Maintenance.UnpauseReconciliations();
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v27[3] + 536))(v30);
      sub_23AFB9818();
      v33 = *(void (**)(_QWORD))(**(_QWORD **)(v27[4] + 16) + 840);
      swift_retain();
      v34 = v50;
      v33(v50);
      swift_release();
      v35 = *(void (**)(uint64_t))(**(_QWORD **)(v27[5] + 16) + 840);
      swift_retain();
      v35(v34);
      return swift_release();
    }
  }
  return result;
}

void sub_23AFCAF18()
{
  type metadata accessor for UserRequest();
}

uint64_t sub_23AFCDD98(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_23AFBA55C(a2);
  (*(void (**)(_QWORD *, uint64_t))(**(_QWORD **)(a1 + 16) + 488))(a2, a3);
  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  sub_23AEBD130(0, 0xE000000000000000, v6, v7);
  (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 24) + 504))(0, a2);
  return sub_23B0ECDB4(a2, a3);
}

uint64_t sub_23AFCDE4C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[4];

  v4 = *a1;
  v5 = (_OWORD *)((char *)a1 + qword_2542E6CB0);
  swift_beginAccess();
  v6 = v5[1];
  v15[0] = *v5;
  v15[1] = v6;
  v7 = v5[3];
  v15[2] = v5[2];
  v15[3] = v7;
  sub_23ADF2564((uint64_t)v15);
  v9 = type metadata accessor for FileTreeChangeAggregator(0, *(_QWORD *)(v4 + 568), *(_QWORD *)(v4 + 584), v8);
  LOBYTE(v5) = sub_23AFBC6FC(v9);
  result = sub_23ADF25B8((uint64_t)v15);
  if ((v5 & 1) == 0)
  {
    v11 = a2[3];
    v12 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v11);
    sub_23AEBD130(0x73746E657665202BLL, 0xEC0000003A736620, v11, v12);
    v13 = a2[3];
    v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    return sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AFDB598, (uint64_t)a1, v13, MEMORY[0x24BEE4AE0] + 8, v14);
  }
  return result;
}

uint64_t sub_23AFCDF7C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[4];

  v3 = *a2;
  v4 = (_OWORD *)((char *)a2 + qword_2542E6CB0);
  swift_beginAccess();
  v5 = v4[1];
  v12[0] = *v4;
  v12[1] = v5;
  v6 = v4[3];
  v12[2] = v4[2];
  v12[3] = v6;
  sub_23ADF2564((uint64_t)v12);
  v8 = type metadata accessor for FileTreeChangeAggregator(0, *(_QWORD *)(v3 + 568), *(_QWORD *)(v3 + 584), v7);
  sub_23AFBF590(a1, v8, v9, v10);
  return sub_23ADF25B8((uint64_t)v12);
}

uint64_t sub_23AFCE014(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  sub_23AEBD130(0, 0xE000000000000000, v6, v7);
  (*(void (**)(uint64_t, _QWORD *))(**(_QWORD **)(a2 + 24) + 504))(1, a1);
  return sub_23B0ECDB4(a1, a3);
}

uint64_t sub_23AFCE0A0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[4];

  v4 = *a1;
  v5 = (_OWORD *)((char *)a1 + qword_2542E6CA8);
  swift_beginAccess();
  v6 = v5[1];
  v15[0] = *v5;
  v15[1] = v6;
  v7 = v5[3];
  v15[2] = v5[2];
  v15[3] = v7;
  sub_23ADF2564((uint64_t)v15);
  v9 = type metadata accessor for FileTreeChangeAggregator(0, *(_QWORD *)(v4 + 576), *(_QWORD *)(v4 + 592), v8);
  LOBYTE(v5) = sub_23AFBC6FC(v9);
  result = sub_23ADF25B8((uint64_t)v15);
  if ((v5 & 1) == 0)
  {
    v11 = a2[3];
    v12 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v11);
    sub_23AEBD130(0x73746E657665202BLL, 0xEC0000003A706620, v11, v12);
    v13 = a2[3];
    v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    return sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AFDB548, (uint64_t)a1, v13, MEMORY[0x24BEE4AE0] + 8, v14);
  }
  return result;
}

uint64_t sub_23AFCE1D0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[4];

  v3 = *a2;
  v4 = (_OWORD *)((char *)a2 + qword_2542E6CA8);
  swift_beginAccess();
  v5 = v4[1];
  v12[0] = *v4;
  v12[1] = v5;
  v6 = v4[3];
  v12[2] = v4[2];
  v12[3] = v6;
  sub_23ADF2564((uint64_t)v12);
  v8 = type metadata accessor for FileTreeChangeAggregator(0, *(_QWORD *)(v3 + 576), *(_QWORD *)(v3 + 592), v7);
  sub_23AFBF590(a1, v8, v9, v10);
  return sub_23ADF25B8((uint64_t)v12);
}

void sub_23AFCE268()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AFCE2C8()
{
  uint64_t v0;

  sub_23AAB7948(*(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_23AA8A05C(v0 + qword_2542EDD58, &qword_2542E4E70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  sub_23AA937BC(v0 + qword_2542EE020, (uint64_t (*)(_QWORD))type metadata accessor for DBCounters);
  swift_release();
  return swift_release();
}

uint64_t sub_23AFCE4FC()
{
  sub_23AFB0EE0();
  return swift_deallocClassInstance();
}

void type metadata accessor for ConcreteDatabase()
{
  JUMPOUT(0x23B861318);
}

void sub_23AFCE528()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542E6EC0)
  {
    type metadata accessor for TelemetrySignposter(255);
    v0 = sub_23B1C6C98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542E6EC0);
  }
}

uint64_t type metadata accessor for DBCounters()
{
  uint64_t result;

  result = qword_2542E43C0;
  if (!qword_2542E43C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23AFCE5B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AFCE5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23AFCE66C(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_23AFCE734(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23AFCE7B8(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23AFCE800(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FileTreeChangeAggregator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeChangeAggregator);
}

uint64_t sub_23AFCE85C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C60A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23AFCE8DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 52);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23B1C60A4();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 56)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 56));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23AFCE984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 52);
  v3 = sub_23B1C60A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_23AFCE9D8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 52);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23B1C60A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 56)] = *(_QWORD *)&a2[*(int *)(a3 + 56)];
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_23AFCEA54(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 52);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23B1C60A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 56)] = *(_QWORD *)&a2[*(int *)(a3 + 56)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_23AFCEADC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 52);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23B1C60A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 56)] = *(_QWORD *)&a2[*(int *)(a3 + 56)];
  return a1;
}

_BYTE *sub_23AFCEB54(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 52);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23B1C60A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 56)] = *(_QWORD *)&a2[*(int *)(a3 + 56)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23AFCEBD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AFCEBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23B1C60A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 52), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 56));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23AFCEC60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AFCEC6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23B1C60A4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 52), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 56)) = (a2 - 1);
  return result;
}

void type metadata accessor for ConcreteDatabase.MaterializationRequest()
{
  JUMPOUT(0x23B861318);
}

ValueMetadata *type metadata accessor for ConcreteDatabaseOptions()
{
  return &type metadata for ConcreteDatabaseOptions;
}

uint64_t *sub_23AFCED04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23B1C5BDC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_23AFCED8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23B1C5BDC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_23AFCEDC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23B1C5BDC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23AFCEE20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23B1C5BDC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23AFCEE7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23B1C5BDC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23AFCEED8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23B1C5BDC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_23AFCEF34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AFCEF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_23B1C5BDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_23AFCEF80()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AFCEF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_23B1C5BDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23AFCEFD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5BDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23AFCF04C()
{
  unint64_t result;

  result = qword_2569E7A48;
  if (!qword_2569E7A48)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E141C, &type metadata for ConcreteDatabaseOptions);
    atomic_store(result, (unint64_t *)&qword_2569E7A48);
  }
  return result;
}

unint64_t sub_23AFCF094()
{
  unint64_t result;

  result = qword_2569E7A50;
  if (!qword_2569E7A50)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E13EC, &type metadata for ConcreteDatabaseOptions);
    atomic_store(result, (unint64_t *)&qword_2569E7A50);
  }
  return result;
}

uint64_t sub_23AFCF0D8()
{
  return sub_23AAB5A28(&qword_2569E7A58, &qword_2569E7A60, (uint64_t)&unk_23B1DD070);
}

unint64_t sub_23AFCF108()
{
  unint64_t result;

  result = qword_2569E7A68;
  if (!qword_2569E7A68)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1444, &type metadata for ConcreteDatabaseOptions);
    atomic_store(result, (unint64_t *)&qword_2569E7A68);
  }
  return result;
}

unint64_t sub_23AFCF150()
{
  unint64_t result;

  result = qword_2569E7A70;
  if (!qword_2569E7A70)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E147C, &type metadata for ConcreteDatabaseOptions);
    atomic_store(result, (unint64_t *)&qword_2569E7A70);
  }
  return result;
}

unint64_t sub_23AFCF194(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23AFCF1C0();
  result = sub_23AFCF204();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23AFCF1C0()
{
  unint64_t result;

  result = qword_2569E7AA0;
  if (!qword_2569E7AA0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E15AC, &type metadata for ConcreteDatabaseOptions);
    atomic_store(result, (unint64_t *)&qword_2569E7AA0);
  }
  return result;
}

unint64_t sub_23AFCF204()
{
  unint64_t result;

  result = qword_2569E7AA8;
  if (!qword_2569E7AA8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1544, &type metadata for ConcreteDatabaseOptions);
    atomic_store(result, (unint64_t *)&qword_2569E7AA8);
  }
  return result;
}

void sub_23AFCF248(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[10];
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *a2;
  v5 = *(_QWORD *)(*a2 + 80);
  v6 = *(_QWORD *)(*a2 + 96);
  v23 = type metadata accessor for ItemReconciliationHalf(0, v5, v6, a4);
  v17[8] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v17[5] = (char *)v17 - v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v17[4] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v17[7] = (char *)v17 - v10;
  v11 = sub_23B1C5E4C();
  v19 = *(_QWORD *)(v11 - 8);
  v20 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v17[9] = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v22 = (char *)v17 - v14;
  v15 = *(_QWORD *)(v4 + 88);
  v16 = *(_QWORD *)(v4 + 104);
  v26 = v6;
  v27 = v5;
  v28 = v5;
  v29 = v15;
  v24 = v15;
  v25 = v16;
  v30 = v6;
  v31 = v16;
  type metadata accessor for ItemReconciliation();
}

void sub_23AFCF3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23B1C6C98();
  *(_QWORD *)(v0 - 184) = v1;
  *(_QWORD *)(v0 - 152) = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  sub_23AB00114();
}

uint64_t sub_23AFCF484@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  int v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;
  uint64_t v65;
  _BOOL4 v66;

  if (!v2)
  {
    v12 = *(_QWORD *)(v10 - 152);
    *(_QWORD *)(v10 - 296) = v3;
    *(_QWORD *)(v10 - 304) = v9;
    *(_QWORD *)(v10 - 288) = v4;
    *(_QWORD *)(v10 - 128) = v8;
    v13 = v1;
    v14 = *(_QWORD *)(v10 - 144);
    v15 = *(_QWORD *)(v10 - 136);
    *(_QWORD *)(v10 - 280) = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v7) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(v12 + 8))(v5, *(_QWORD *)(v10 - 184));
      *(_QWORD *)(v10 - 176) = 0;
      *(_DWORD *)(v10 - 152) = 1;
      v16 = v14;
      v18 = *(_QWORD *)(v10 - 168);
      v17 = *(_QWORD *)(v10 - 160);
      goto LABEL_5;
    }
    v19 = v6;
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v21 = v13;
    v20(v13, v5, v7);
    v22 = *(_QWORD *)(v10 - 176);
    if (*(_BYTE *)(v13 + *(int *)(v22 + 64) + 16) == 2)
    {
      *(_QWORD *)(v10 - 152) = v19;
      v23 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v24 = *(_QWORD *)(v10 - 200);
      v25 = *(_QWORD *)(v10 - 248);
      v26 = *(_QWORD *)(v10 - 224);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 16))(v25, *(_QWORD *)(v10 - 128), v26);
      v27 = sub_23B1C5E40();
      v28 = sub_23B1C6A94();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        *(_DWORD *)(v10 - 168) = v29;
        v30 = swift_slowAlloc();
        *(_QWORD *)(v10 - 128) = v21;
        v31 = (uint8_t *)v30;
        v32 = swift_slowAlloc();
        *(_QWORD *)(v10 - 160) = v7;
        v33 = v32;
        *(_QWORD *)(v10 - 120) = v32;
        *(_DWORD *)v31 = 136315138;
        *(_QWORD *)(v10 - 176) = v31 + 4;
        swift_getAssociatedConformanceWitness();
        v34 = sub_23B1C7304();
        *(_QWORD *)(v10 - 72) = sub_23AABEC68(v34, v35, (uint64_t *)(v10 - 120));
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 200) + 8))(v25, v26);
        _os_log_impl(&dword_23AA66000, v27, (os_log_type_t)*(_DWORD *)(v10 - 168), "%s did not propagate: propagating is still in progress", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v33, -1, -1);
        MEMORY[0x23B8614BC](v31, -1, -1);

        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 216) + 8))(*(_QWORD *)(v10 - 192), *(_QWORD *)(v10 - 208));
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 152) + 8))(*(_QWORD *)(v10 - 128), *(_QWORD *)(v10 - 160));
        a1 = 0;
        return a1 & 1;
      }

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 216) + 8))(*(_QWORD *)(v10 - 192), *(_QWORD *)(v10 - 208));
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 152) + 8))(v21, v7);
    }
    else
    {
      v36 = *(_QWORD *)(v13 + *(int *)(v22 + 36));
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
      v38 = *(_QWORD *)(v10 - 296);
      v37(v38, v21, v7);
      v39 = *(_QWORD *)(v10 - 128);
      if (v36)
      {
        v40 = sub_23B0C6AC4(v7);
        v41 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
        v41(v38, v7);
        if (!v40)
        {
          v41(v21, v7);
          a1 = 1;
          return a1 & 1;
        }
      }
      else
      {
        v41 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
        v41(v38, v7);
      }
      *(_QWORD *)(v10 - 184) = v41;
      if (sub_23B0C6AC4(v7))
      {
        v42 = *(_QWORD *)(v10 - 176);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 240) + 16))(*(_QWORD *)(v10 - 264), v21, v42);
        v43 = *(_QWORD *)(v21 + *(int *)(v42 + 76));
        v44 = *(_QWORD *)(v10 - 304);
        v37(v44, v21, v7);
        v16 = v14;
        if ((v43 & 4) != 0)
        {
          v47 = 1;
          v18 = *(_QWORD *)(v10 - 168);
          v17 = *(_QWORD *)(v10 - 160);
        }
        else
        {
          v46 = v44 + *(int *)(v7 + 52);
          v18 = *(_QWORD *)(v10 - 168);
          v17 = *(_QWORD *)(v10 - 160);
          v47 = (*(unsigned __int8 *)(v46
                                    + *(int *)(type metadata accessor for ItemReconciliationHalf(0, v18, v17, v45) + 76)) >> 2) & 1;
        }
        (*(void (**)(uint64_t, uint64_t))(v10 - 184))(v44, v7);
        if (qword_2542E7190 != -1)
          swift_once();
        v62 = v47;
        v63 = *(_QWORD *)(v10 - 264);
        v64 = sub_23B0C8954(qword_2542EDE38 | 0x10, v62, v42);
        v65 = v42;
        v66 = v64;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 240) + 8))(v63, v65);
        if (v66)
          *(_QWORD *)(v10 - 176) = *(_QWORD *)(v21 + *(int *)(v7 + 64) + 8);
        else
          *(_QWORD *)(v10 - 176) = 0;
        *(_DWORD *)(v10 - 152) = !v66;
        (*(void (**)(uint64_t, uint64_t))(v10 - 184))(v21, v7);
LABEL_5:
        *(_QWORD *)(v10 - 120) = v15;
        *(_QWORD *)(v10 - 112) = v18;
        *(_QWORD *)(v10 - 104) = v16;
        *(_QWORD *)(v10 - 96) = v17;
        type metadata accessor for ItemJob();
      }
      v48 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v49 = *(_QWORD *)(v10 - 200);
      v50 = v39;
      v51 = *(_QWORD *)(v10 - 272);
      v52 = *(_QWORD *)(v10 - 224);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v51, v50, v52);
      v53 = sub_23B1C5E40();
      v54 = sub_23B1C6A94();
      v55 = v54;
      if (os_log_type_enabled(v53, v54))
      {
        v56 = swift_slowAlloc();
        *(_QWORD *)(v10 - 128) = v21;
        *(_DWORD *)(v10 - 168) = v55;
        v57 = (uint8_t *)v56;
        v58 = swift_slowAlloc();
        *(_QWORD *)(v10 - 152) = v58;
        *(_QWORD *)(v10 - 120) = v58;
        *(_DWORD *)v57 = 136315138;
        *(_QWORD *)(v10 - 160) = v7;
        swift_getAssociatedConformanceWitness();
        v59 = sub_23B1C7304();
        *(_QWORD *)(v10 - 72) = sub_23AABEC68(v59, v60, (uint64_t *)(v10 - 120));
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v52);
        _os_log_impl(&dword_23AA66000, v53, (os_log_type_t)*(_DWORD *)(v10 - 168), "%s did not propagate: item is not bound", v57, 0xCu);
        v61 = *(_QWORD *)(v10 - 152);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v61, -1, -1);
        MEMORY[0x23B8614BC](v57, -1, -1);

        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 216) + 8))(*(_QWORD *)(v10 - 232), *(_QWORD *)(v10 - 208));
        (*(void (**)(_QWORD, _QWORD))(v10 - 184))(*(_QWORD *)(v10 - 128), *(_QWORD *)(v10 - 160));
        a1 = 0;
        return a1 & 1;
      }

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v52);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 216) + 8))(*(_QWORD *)(v10 - 232), *(_QWORD *)(v10 - 208));
      (*(void (**)(uint64_t, uint64_t))(v10 - 184))(v21, v7);
    }
    a1 = 0;
  }
  return a1 & 1;
}

void sub_23AFCFCD8()
{
  type metadata accessor for UserRequest();
}

BOOL sub_23AFCFD18(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t (**v24)(uint64_t);
  uint64_t v25;
  void (*v26)(unint64_t *, uint64_t);
  _BYTE v28[96];

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = &type metadata for NSecTimestamp;
  *(_QWORD *)(v2 - 96) = sub_23B1C60A4();
  *(_QWORD *)(v2 - 88) = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E21E0);
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  *(_QWORD *)(v2 - 128) = *(_QWORD *)(TupleTypeMetadata - 8);
  v4 = MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v6 = (unint64_t *)&v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (unint64_t *)&v28[-v8];
  v10 = *(int *)(v7 + 64);
  v11 = &v28[v10 - v8];
  v12 = *(int *)(v7 + 80);
  v13 = (uint64_t *)&v28[v12 - v8];
  v14 = (char *)v1 + v10;
  v15 = (uint64_t *)((char *)v1 + v12);
  v17 = *v1;
  v16 = v1[1];
  *(_QWORD *)(v2 - 144) = v11;
  *(_QWORD *)(v2 - 136) = v16;
  *v9 = v17;
  v9[1] = v16;
  v18 = sub_23B1C60A4();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(_BYTE *, char *, uint64_t))(v19 + 16))(v11, v14, v18);
  v20 = *v15;
  v21 = v15[1];
  *v13 = *v15;
  v13[1] = v21;
  v22 = *(_QWORD *)(v2 - 144);
  v23 = *(_QWORD *)(v2 - 136);
  *v6 = v17;
  v6[1] = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))((char *)v6 + *(int *)(TupleTypeMetadata + 64), v22, v18);
  v24 = (uint64_t (**)(uint64_t))((char *)v6 + *(int *)(TupleTypeMetadata + 80));
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v21;
  *v24 = sub_23ACFF990;
  v24[1] = (uint64_t (*)(uint64_t))v25;
  sub_23AA93780(v17);
  v26 = *(void (**)(unint64_t *, uint64_t))(*(_QWORD *)(v2 - 128) + 8);
  swift_retain();
  v26(v6, TupleTypeMetadata);
  return v23 < *(_QWORD *)(v2 - 120);
}

void sub_23AFCFE94()
{
  type metadata accessor for UserRequest();
}

BOOL sub_23AFCFED4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t (**v24)(uint64_t);
  uint64_t v25;
  void (*v26)(unint64_t *, uint64_t);
  _BYTE v28[96];

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = &type metadata for NSecTimestamp;
  *(_QWORD *)(v2 - 96) = sub_23B1C60A4();
  *(_QWORD *)(v2 - 88) = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E21E0);
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  *(_QWORD *)(v2 - 128) = *(_QWORD *)(TupleTypeMetadata - 8);
  v4 = MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v6 = (unint64_t *)&v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (unint64_t *)&v28[-v8];
  v10 = *(int *)(v7 + 64);
  v11 = &v28[v10 - v8];
  v12 = *(int *)(v7 + 80);
  v13 = (uint64_t *)&v28[v12 - v8];
  v14 = (char *)v1 + v10;
  v15 = (uint64_t *)((char *)v1 + v12);
  v17 = *v1;
  v16 = v1[1];
  *(_QWORD *)(v2 - 144) = v11;
  *(_QWORD *)(v2 - 136) = v16;
  *v9 = v17;
  v9[1] = v16;
  v18 = sub_23B1C60A4();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(_BYTE *, char *, uint64_t))(v19 + 16))(v11, v14, v18);
  v20 = *v15;
  v21 = v15[1];
  *v13 = *v15;
  v13[1] = v21;
  v22 = *(_QWORD *)(v2 - 144);
  v23 = *(_QWORD *)(v2 - 136);
  *v6 = v17;
  v6[1] = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))((char *)v6 + *(int *)(TupleTypeMetadata + 64), v22, v18);
  v24 = (uint64_t (**)(uint64_t))((char *)v6 + *(int *)(TupleTypeMetadata + 80));
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v21;
  *v24 = sub_23ACFF990;
  v24[1] = (uint64_t (*)(uint64_t))v25;
  sub_23AA93780(v17);
  v26 = *(void (**)(unint64_t *, uint64_t))(*(_QWORD *)(v2 - 128) + 8);
  swift_retain();
  v26(v6, TupleTypeMetadata);
  return v23 < *(_QWORD *)(v2 - 120);
}

uint64_t sub_23AFD0054(void *a1)
{
  id v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[128];
  _BYTE v5[128];
  _BYTE v6[128];
  _BYTE v7[128];
  _BYTE v8[128];
  void *v9;

  v9 = a1;
  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    nullsub_1(v8);
    sub_23AA724E8((uint64_t)v8, (uint64_t)v6, &qword_2569E6170);
    sub_23AA724E8((uint64_t)v6, (uint64_t)v7, &qword_2569E6170);
    if (sub_23AEB3C04((uint64_t)v7) == 1)
      return 0;
    sub_23AA724E8((uint64_t)v8, (uint64_t)v4, (uint64_t *)&unk_2542E0950);
    sub_23AA724E8((uint64_t)v4, (uint64_t)v5, (uint64_t *)&unk_2542E0950);
    if (sub_23AC050A4((uint64_t)v5))
    {
      sub_23AC04F64((uint64_t)v4);
      return 0;
    }
    nullsub_1(v5);
    v3 = nullsub_1(v8);

    sub_23AAAEE68(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80));
    return 1;
  }
  return result;
}

BOOL sub_23AFD017C(uint64_t a1, char a2, uint64_t a3)
{
  return qword_23B1E17F8[*(char *)(a1 + 8)] == qword_23B1E17F8[a2] && *(_QWORD *)(a1 + 16) > a3;
}

void sub_23AFD01A8(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, void (*a7)(void *), uint64_t a8)
{
  uint64_t v8;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  unint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  objc_class *v36;
  objc_class *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  dispatch_group_t v47;
  uint64_t v48;
  void (*v49)(void *);
  uint64_t v50;
  char *v51;
  dispatch_group_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  NSObject *v58;
  NSObject *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  _QWORD *v66;
  char v67;
  NSObject *v68;
  NSObject *v69;
  uint64_t v70;
  char v71;
  _QWORD *v72;
  NSObject *v73;
  NSObject *v74;
  char v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  _BOOL8 v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t (*v91)();
  _QWORD *v92;
  uint64_t (*v93)();
  _QWORD **v94;
  uint64_t v95;
  _QWORD *v96;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  void *v103;
  uint64_t v104;
  dispatch_group_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t);
  char *v108;
  id v109;
  void *v110;
  void *v111;
  uint64_t (*v112)(uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(void *);
  uint64_t v120;
  dispatch_group_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unsigned __int8 *v127;
  uint64_t v128;
  _QWORD v129[4];
  uint64_t v130[4];
  uint64_t v131;
  char v132;
  char *v133;

  v120 = a8;
  v126 = a2;
  v15 = sub_23B1C5E4C();
  v16 = *(unsigned __int8 **)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v133 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5(v17);
  if (v8)
    return;
  v127 = v16;
  v128 = v15;
  v116 = v20;
  v119 = a7;
  v122 = a1;
  v117 = a4;
  v112 = a5;
  v113 = a6;
  v21 = v19;
  v22 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v23 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v24 = v22;
  v25 = v126;
  swift_bridgeObjectRetain();
  sub_23AA93780(a3);
  swift_bridgeObjectRetain();
  v26 = v24;
  swift_bridgeObjectRetain();
  sub_23AA93780(a3);
  swift_bridgeObjectRetain();
  v27 = sub_23B1C5E40();
  v28 = sub_23B1C6A94();
  v29 = v28;
  v30 = os_log_type_enabled(v27, v28);
  v31 = v124;
  v125 = a3;
  v32 = v21;
  v33 = v120;
  v114 = 0;
  v111 = v26;
  if (v30)
  {
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v121 = v35;
    v123 = swift_slowAlloc();
    v130[0] = v123;
    *(_DWORD *)v34 = 138413314;
    v36 = (objc_class *)objc_msgSend(v26, sel_enter);
    LODWORD(v118) = v29;
    v37 = v36;
    v129[0] = v36;
    sub_23B1C6CBC();
    v35->isa = v37;

    *(_WORD *)(v34 + 12) = 2082;
    swift_bridgeObjectRetain();
    v129[0] = sub_23AABEC68(v122, v25, v130);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 22) = 2080;
    v38 = sub_23B1C686C();
    v129[0] = sub_23AABEC68(v38, v39, v130);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 32) = 2080;
    sub_23AE5BC48(v125);
    v41 = v40;
    v43 = v42;
    sub_23AAB47B0(v125);
    v129[0] = sub_23AABEC68(v41, v43, v130);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v125);
    *(_WORD *)(v34 + 42) = 2080;
    v44 = MEMORY[0x23B85F02C](v32, &type metadata for VFSItemID);
    v46 = v45;
    swift_bridgeObjectRelease();
    v31 = v124;
    v129[0] = sub_23AABEC68(v44, v46, v130);
    a3 = v125;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v33 = v120;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v27, (os_log_type_t)v118, "%@ 🚧  waiting for ingestion of %{public}s prior to %s for %s: %s", (uint8_t *)v34, 0x34u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    v47 = v121;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v47, -1, -1);
    v48 = v123;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v48, -1, -1);
    MEMORY[0x23B8614BC](v34, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a3);
    swift_bridgeObjectRelease_n();

    sub_23AAB47B0(a3);
    swift_bridgeObjectRelease();
  }
  (*((void (**)(char *, uint64_t))v127 + 1))(v133, v128);
  v49 = v119;
  v50 = swift_allocObject();
  *(_BYTE *)(v50 + 16) = 0;
  v51 = (char *)swift_allocObject();
  *((_QWORD *)v51 + 2) = v50;
  *((_QWORD *)v51 + 3) = v49;
  v133 = v51;
  *((_QWORD *)v51 + 4) = v33;
  v118 = v50;
  swift_retain_n();
  swift_retain_n();
  v52 = dispatch_group_create();
  v115 = v32;
  v53 = *(_QWORD *)(v32 + 16);
  v54 = v126;
  v55 = v122;
  v56 = v31;
  if (!v53)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    v103 = *(void **)(v56 + 64);
    v104 = v56;
    v105 = v52;
    v106 = swift_allocObject();
    *(_QWORD *)(v106 + 16) = v118;
    *(_BYTE *)(v106 + 24) = v116 & 1;
    *(_QWORD *)(v106 + 32) = v104;
    *(_QWORD *)(v106 + 40) = v55;
    *(_QWORD *)(v106 + 48) = v54;
    *(_QWORD *)(v106 + 56) = a3;
    v107 = v112;
    *(_QWORD *)(v106 + 64) = v117;
    *(_QWORD *)(v106 + 72) = v107;
    v108 = v133;
    *(_QWORD *)(v106 + 80) = v113;
    *(_QWORD *)(v106 + 88) = sub_23AFDE0B8;
    *(_QWORD *)(v106 + 96) = v108;
    swift_bridgeObjectRetain();
    sub_23AA93780(a3);
    swift_retain();
    swift_retain();
    v109 = v103;
    swift_retain();
    swift_retain();
    sub_23AA81A30((uint64_t)"waitForIngestion(of:request:barrierTimestamp:jobs:completionHandler:)", 69, 2, 0, v109, (uint64_t)sub_23AFDCA7C, v106);
    swift_release();
    swift_release_n();
    swift_release();

    swift_release();
    v110 = v111;
    sub_23ACA7014(v111, MEMORY[0x24BEE7908]);

    return;
  }
  v123 = v31 + qword_2542EDFE8;
  swift_beginAccess();
  v57 = (unsigned __int8 *)(v115 + 40);
  v121 = v52;
  while (1)
  {
    v127 = v57;
    v128 = v53;
    v64 = *((_QWORD *)v57 - 1);
    v65 = *v57;
    dispatch_group_enter(v52);
    v131 = v64;
    v132 = v65;
    v66 = (_QWORD *)swift_allocObject();
    v66[2] = v52;
    v66[3] = v55;
    v66[4] = v54;
    sub_23AA9F454(&v131, (uint64_t)(v66 + 5));
    v66[7] = a3;
    v66[8] = sub_23AFDE0B8;
    v66[9] = v133;
    if (*(_BYTE *)(v56 + 152) == 1)
    {
      swift_bridgeObjectRetain();
      sub_23AA93780(a3);
      v58 = v52;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_23AA93780(a3);
      v59 = v58;
      swift_retain();
      v60 = (id)FPDomainUnavailableError();
      v61 = v118;
      swift_retain();
      v62 = v120;
      swift_retain();
      sub_23AFDB74C(v60, v59, v55, v126, v64, v65, v125, v61, v119, v62);

      swift_release();
      v54 = v126;
      v52 = v121;
      swift_release();
      a3 = v125;
      swift_release();
      v56 = v124;
      goto LABEL_8;
    }
    if (!*(_QWORD *)(*(_QWORD *)v123 + 16))
      break;
    sub_23AA97254(v64, v65);
    if ((v67 & 1) == 0)
      break;
    swift_bridgeObjectRetain();
    sub_23AA93780(a3);
    v68 = v52;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23AA93780(a3);
    v69 = v68;
    swift_retain();
    v70 = v124;
    v71 = v65;
LABEL_26:
    v91 = sub_23AFB8FB0();
    v93 = sub_23B148EB8(v129, v64, v71);
    if (*v92)
    {
      v94 = (_QWORD **)v92;
      v95 = swift_allocObject();
      *(_QWORD *)(v95 + 16) = sub_23AFDCA74;
      *(_QWORD *)(v95 + 24) = v66;
      v96 = *v94;
      sub_23AA93780(a3);
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v94 = v96;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v96 = sub_23AF99204(0, v96[2] + 1, 1, v96);
        *v94 = v96;
      }
      v99 = v96[2];
      v98 = v96[3];
      v100 = v117;
      if (v99 >= v98 >> 1)
      {
        v102 = sub_23AF99204((_QWORD *)(v98 > 1), v99 + 1, 1, v96);
        v100 = v117;
        v96 = v102;
        *v94 = v102;
      }
      v63 = v128;
      v96[2] = v99 + 1;
      v101 = &v96[5 * v99];
      a3 = v125;
      v101[4] = v125;
      *((_BYTE *)v101 + 40) = BYTE1(v116);
      v101[6] = v100;
      v101[7] = sub_23AAB64DC;
      v101[8] = v95;
      ((void (*)(_QWORD *, _QWORD))v93)(v129, 0);
      ((void (*)(uint64_t *, _QWORD))v91)(v130, 0);
      v52 = v121;

      swift_release();
      v56 = v124;
      v54 = v126;
      goto LABEL_9;
    }
    ((void (*)(_QWORD *, _QWORD))v93)(v129, 0);
    ((void (*)(uint64_t *, _QWORD))v91)(v130, 0);
    v52 = v121;

    swift_release();
    v56 = v70;
LABEL_8:
    v63 = v128;
LABEL_9:
    v57 = v127 + 16;
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a3);
    swift_release();
    v53 = v63 - 1;
    v55 = v122;
    if (!v53)
      goto LABEL_33;
  }
  v72 = (_QWORD *)v123;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23AA93780(a3);
  v73 = v52;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23AA93780(a3);
  v74 = v73;
  swift_retain();
  v75 = swift_isUniquelyReferenced_nonNull_native();
  v129[0] = *v72;
  v76 = v129[0];
  *v72 = 0x8000000000000000;
  v71 = v65;
  v78 = sub_23AA97254(v64, v65);
  v79 = *(_QWORD *)(v76 + 16);
  v80 = (v77 & 1) == 0;
  v81 = v79 + v80;
  if (!__OFADD__(v79, v80))
  {
    v82 = v77;
    if (*(_QWORD *)(v76 + 24) < v81)
    {
      sub_23AD152B4(v81, v75);
      v83 = sub_23AA97254(v64, v65);
      if ((v82 & 1) != (v84 & 1))
        goto LABEL_37;
      v78 = v83;
      v85 = (_QWORD *)v129[0];
      if ((v82 & 1) == 0)
        goto LABEL_23;
LABEL_21:
      v86 = v85[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v86 + 8 * v78) = MEMORY[0x24BEE4AF8];
LABEL_25:
      *(_QWORD *)v123 = v85;
      swift_bridgeObjectRelease();
      swift_endAccess();
      v70 = v124;
      a3 = v125;
      v54 = v126;
      goto LABEL_26;
    }
    if ((v75 & 1) != 0)
    {
      v85 = (_QWORD *)v129[0];
      if ((v77 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_23B1891E8();
      v85 = (_QWORD *)v129[0];
      if ((v82 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v85[(v78 >> 6) + 8] |= 1 << v78;
    v87 = v85[6] + 16 * v78;
    *(_QWORD *)v87 = v64;
    *(_BYTE *)(v87 + 8) = v65;
    *(_QWORD *)(v85[7] + 8 * v78) = MEMORY[0x24BEE4AF8];
    v88 = v85[2];
    v89 = __OFADD__(v88, 1);
    v90 = v88 + 1;
    if (v89)
      goto LABEL_36;
    v85[2] = v90;
    goto LABEL_25;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  swift_release();
  swift_release();
  sub_23B1C7418();
  __break(1u);
}

uint64_t sub_23AFD0D54(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _BYTE *v6;
  uint64_t result;

  v6 = (_BYTE *)(a2 + 16);
  result = swift_beginAccess();
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *v6 = 1;
    return a3(a1);
  }
  return result;
}

void sub_23AFD0DD8(void *a1, NSObject *a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, unint64_t a7, void (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  _QWORD *v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *boxed_opaque_existential_0;
  void *v46;
  uint64_t v47;
  os_log_t v48;
  _QWORD *v49;
  uint64_t v50;
  NSObject *v51;
  int v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];

  v55 = a9;
  v17 = sub_23B1C5E4C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_4;
  v54 = v19;
  v22 = a1;
  if ((sub_23AFD0054(a1) & 1) != 0)
  {

LABEL_4:
    dispatch_group_leave(a2);
    return;
  }
  v53 = a8;
  v23 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v24 = a1;
  swift_bridgeObjectRetain();
  sub_23AA93780(a7);
  v25 = a1;
  swift_bridgeObjectRetain();
  sub_23AA93780(a7);
  v26 = sub_23B1C5E40();
  v27 = sub_23B1C6AB8();
  v52 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v51 = a2;
    v29 = v28;
    v49 = (_QWORD *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v60[0] = v50;
    *(_DWORD *)v29 = 136446978;
    v48 = v26;
    swift_bridgeObjectRetain();
    v59 = sub_23AABEC68(a3, a4, v60);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 2080;
    v30 = sub_23AA96F18(a5, a6);
    v59 = sub_23AABEC68(v30, v31, v60);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2080;
    sub_23AE5BC48(a7);
    v33 = v32;
    v35 = v34;
    sub_23AAB47B0(a7);
    v59 = sub_23AABEC68(v33, v35, v60);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a7);
    *(_WORD *)(v29 + 32) = 2112;
    swift_getErrorValue();
    v36 = sub_23B0D9CF0(v56);
    v59 = (uint64_t)v36;
    sub_23B1C6CBC();
    v37 = v49;
    *v49 = v36;

    v38 = v48;
    _os_log_impl(&dword_23AA66000, v48, (os_log_type_t)v52, "🚧  %{public}s of %s failed for %s: %@", (uint8_t *)v29, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v37, -1, -1);
    v39 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v39, -1, -1);
    v40 = v29;
    a2 = v51;
    MEMORY[0x23B8614BC](v40, -1, -1);

  }
  else
  {
    sub_23AAB47B0(a7);
    swift_bridgeObjectRelease_n();
    sub_23AAB47B0(a7);

  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v54);
  type metadata accessor for NSFileProviderError(0);
  v59 = -2005;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  *(_QWORD *)(inited + 32) = sub_23B1C63E0();
  *(_QWORD *)(inited + 40) = v42;
  swift_getErrorValue();
  v43 = v57;
  v44 = v58;
  *(_QWORD *)(inited + 72) = v58;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(boxed_opaque_existential_0, v43, v44);
  sub_23AAE9EB4(inited);
  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  sub_23B1C5864();
  v46 = (void *)v60[0];
  v53(v60[0]);

  dispatch_group_leave(a2);
}

void sub_23AFD12B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, void (*a10)(void *), uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_log_t v30;
  uint64_t v31;
  void (*v32)(void *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = sub_23B1C5E4C();
  v18 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    if ((a2 & 1) != 0)
    {
      sub_23AFD01A8(a4, a5, a6, a7, a8, a9, a10, a11);
    }
    else
    {
      v32 = a10;
      v21 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      swift_bridgeObjectRetain();
      sub_23AA93780(a6);
      swift_bridgeObjectRetain();
      sub_23AA93780(a6);
      v22 = sub_23B1C5E40();
      v23 = sub_23B1C6AB8();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v31 = swift_slowAlloc();
        v35 = v31;
        *(_DWORD *)v24 = 136446466;
        v30 = v22;
        swift_bridgeObjectRetain();
        v34 = sub_23AABEC68(a4, a5, &v35);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        sub_23AE5BC48(a6);
        v26 = v25;
        v28 = v27;
        sub_23AAB47B0(a6);
        v34 = sub_23AABEC68(v26, v28, &v35);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        sub_23AAB47B0(a6);
        v22 = v30;
        _os_log_impl(&dword_23AA66000, v30, v23, "🚧  finished ingestions of %{public}s for %s", (uint8_t *)v24, 0x16u);
        v29 = v31;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v29, -1, -1);
        MEMORY[0x23B8614BC](v24, -1, -1);
      }
      else
      {
        sub_23AAB47B0(a6);
        swift_bridgeObjectRelease_n();
        sub_23AAB47B0(a6);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v33);
      v32(0);
    }
  }
}

void sub_23AFD15B0(uint64_t a1, int a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t AssociatedTypeWitness;
  _BYTE *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v21 = a6;
  v22 = a1;
  v24 = a5;
  v23 = a2;
  v6 = (_QWORD *)*a3;
  v16 = a3;
  v27 = sub_23B1C602C();
  v30 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_23B1C60A4();
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v25 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = v6[73];
  v19 = v6[71];
  v20 = v10;
  v11 = v19;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = &v13[-v12];
  v17 = v6[72];
  v18 = v6[74];
  v31 = v11;
  v32 = v17;
  v33 = v10;
  v34 = v18;
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

uint64_t sub_23AFD1700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v11 = &v29[-v10];
  *(_QWORD *)(v6 - 232) = *(_QWORD *)(v1 + 64);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(&v29[-v10], v4, a1);
  *(_QWORD *)(v6 - 296) = v5;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v2, *(_QWORD *)(v6 - 224), v3);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = (*(unsigned __int8 *)(v5 + 80) + v14 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v16 = swift_allocObject();
  v17 = *(_QWORD *)(v6 - 264);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v6 - 248);
  *(_QWORD *)(v16 + 24) = v17;
  v18 = *(_QWORD *)(v6 - 256);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v6 - 240);
  *(_QWORD *)(v16 + 40) = v18;
  v19 = *(void **)(v6 - 216);
  *(_QWORD *)(v16 + 48) = v19;
  v20 = *(_DWORD *)(v6 - 204) & 1;
  *(_BYTE *)(v16 + 56) = v20;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v8 + 32))(v16 + v12, v11, a1);
  v21 = *(void **)(v6 - 200);
  *(_QWORD *)(v16 + v13) = v21;
  *(_QWORD *)(v16 + v14) = *(_QWORD *)(v6 - 272);
  (*(void (**)(unint64_t, _QWORD, _QWORD))(*(_QWORD *)(v6 - 296) + 32))(v16 + v15, *(_QWORD *)(v6 - 280), *(_QWORD *)(v6 - 288));
  *(_QWORD *)(v6 - 104) = sub_23AFDACDC;
  *(_QWORD *)(v6 - 96) = v16;
  *(_QWORD *)(v6 - 136) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v6 - 128) = 1107296256;
  *(_QWORD *)(v6 - 120) = sub_23AA698FC;
  *(_QWORD *)(v6 - 112) = &block_descriptor_29;
  v22 = _Block_copy((const void *)(v6 - 136));
  v23 = *(id *)(v6 - 232);
  sub_23AA724DC(v19, v20);
  v24 = v21;
  swift_retain();
  v25 = *(_QWORD *)(v6 - 192);
  sub_23B1C6068();
  *(_QWORD *)(v6 - 144) = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
  v26 = *(_QWORD *)(v6 - 184);
  v27 = *(_QWORD *)(v6 - 176);
  sub_23B1C6DE8();
  MEMORY[0x23B85F470](0, v25, v26, v22);
  _Block_release(v22);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 152) + 8))(v26, v27);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 168) + 8))(v25, *(_QWORD *)(v6 - 160));
  return swift_release();
}

void sub_23AFD1998()
{
  type metadata accessor for UserRequest();
}

void sub_23AFD2894()
{
  type metadata accessor for UserRequest();
}

uint64_t sub_23AFD44E4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11, void (*a12)(uint64_t), uint64_t a13, uint64_t (*a14)(uint64_t))
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
    a2();
  v16 = a4();
  v17 = a6(v16);
  v18 = a8(v17);
  v19 = a10(v18);
  a12(v19);
  return a14(a1);
}

uint64_t sub_23AFD459C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[4];
  _OWORD v34[4];
  _QWORD *v35;

  v35 = (_QWORD *)*a1;
  v4 = (char *)a1 + qword_2542E6CB0;
  swift_beginAccess();
  v19 = *((_QWORD *)v4 + 1);
  v20 = *(_QWORD *)v4;
  v31 = *((_QWORD *)v4 + 3);
  v32 = *((_QWORD *)v4 + 2);
  v29 = v4[48];
  v30 = v4[32];
  v27 = v4[50];
  v28 = v4[49];
  v17 = *((_QWORD *)v4 + 7);
  v18 = *((_QWORD *)v4 + 5);
  v5 = (char *)a1 + qword_2542E6CA8;
  swift_beginAccess();
  v6 = *((_QWORD *)v5 + 1);
  v16 = *(_QWORD *)v5;
  v25 = *((_QWORD *)v5 + 3);
  v26 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 5);
  v23 = v5[48];
  v24 = v5[32];
  v21 = v5[50];
  v22 = v5[49];
  v13 = *((_QWORD *)v5 + 7);
  v14 = v35[73];
  v15 = v35[71];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23AFBFD04(v15, v14, (uint64_t)v33);
  v8 = v33[1];
  *(_OWORD *)v4 = v33[0];
  *((_OWORD *)v4 + 1) = v8;
  v9 = v33[3];
  *((_OWORD *)v4 + 2) = v33[2];
  *((_OWORD *)v4 + 3) = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AFBFD04(v35[72], v35[74], (uint64_t)v34);
  v10 = v34[1];
  *(_OWORD *)v5 = v34[0];
  *((_OWORD *)v5 + 1) = v10;
  v11 = v34[3];
  *((_OWORD *)v5 + 2) = v34[2];
  *((_OWORD *)v5 + 3) = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v19;
  *(_QWORD *)(a2 + 16) = v32;
  *(_QWORD *)(a2 + 24) = v31;
  *(_BYTE *)(a2 + 32) = v30;
  *(_QWORD *)(a2 + 40) = v18;
  *(_BYTE *)(a2 + 48) = v29;
  *(_BYTE *)(a2 + 49) = v28;
  *(_BYTE *)(a2 + 50) = v27;
  *(_QWORD *)(a2 + 56) = v17;
  *(_QWORD *)(a2 + 64) = v16;
  *(_QWORD *)(a2 + 72) = v6;
  *(_QWORD *)(a2 + 80) = v26;
  *(_QWORD *)(a2 + 88) = v25;
  *(_BYTE *)(a2 + 96) = v24;
  *(_QWORD *)(a2 + 104) = v7;
  *(_BYTE *)(a2 + 112) = v23;
  *(_BYTE *)(a2 + 113) = v22;
  *(_BYTE *)(a2 + 114) = v21;
  *(_QWORD *)(a2 + 120) = v13;
  return result;
}

void sub_23AFD4820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 56);
  v10 = v3;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v6 = (_OWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = *v6;
      v8 = swift_retain();
      v9 = (void *)MEMORY[0x23B8601A8](v8);
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(_QWORD *)a2 + 2344))(sub_23ACFF990, v7);
      if (v2)
        break;
      objc_autoreleasePoolPop(v9);
      swift_release();
      ++v6;
      if (!--v4)
      {
        sub_23AAB7500((uint64_t)&v10);
        return;
      }
    }
    objc_autoreleasePoolPop(v9);
    __break(1u);
  }
}

void sub_23AFD48FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 56);
  v10 = v3;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v6 = (_OWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = *v6;
      v8 = swift_retain();
      v9 = (void *)MEMORY[0x23B8601A8](v8);
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(_QWORD *)a2 + 2344))(sub_23ACFF990, v7);
      if (v2)
        break;
      objc_autoreleasePoolPop(v9);
      swift_release();
      ++v6;
      if (!--v4)
      {
        sub_23AAB7500((uint64_t)&v10);
        return;
      }
    }
    objc_autoreleasePoolPop(v9);
    __break(1u);
  }
}

uint64_t sub_23AFD49D8()
{
  void *v0;

  return sub_23AC452C4(v0, (void (*)(uint64_t *__return_ptr))sub_23AFD4C70) & 1;
}

uint64_t sub_23AFD4A14(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 584);
  v17 = *(_QWORD *)(*v1 + 568);
  v18 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v17 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, AssociatedTypeWitness);
    v14 = *(_QWORD *)(v3 + 576);
    v15 = *(_QWORD *)(v3 + 592);
    v19 = v17;
    v20 = v14;
    v21 = v18;
    v22 = v15;
    type metadata accessor for Materialization.MaterializeItem();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return 0;
}

uint64_t sub_23AFD4BCC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_2542EDFD0);
}

uint64_t sub_23AFD4BE0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + qword_2542EDFD0);
  *v3 = result;
  v3[1] = a2;
  return result;
}

uint64_t sub_23AFD4BF4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_2542EDFA0);
}

uint64_t sub_23AFD4C08()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_2542EDFE0);
}

uint64_t sub_23AFD4C1C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + qword_2542EDFE0);
  *v3 = result;
  v3[1] = a2;
  return result;
}

uint64_t sub_23AFD4C30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_2542EDFC8);
}

uint64_t sub_23AFD4C44()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_2542EE128);
}

void sub_23AFD4C58(char a1)
{
  sub_23AFBA50C(a1 & 1);
}

void sub_23AFD4C70(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 90);
}

id sub_23AFD4C7C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_23AFD4CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
  else
    return sub_23B1C7310();
}

uint64_t sub_23AFD4D00(uint64_t a1)
{
  return sub_23AFD4DB4(a1, &qword_2569E7BA8);
}

uint64_t sub_23AFD4D0C(uint64_t a1)
{
  return sub_23AFD4DB4(a1, &qword_2569E22A8);
}

uint64_t sub_23AFD4D18(uint64_t a1)
{
  return sub_23AFD4DB4(a1, (uint64_t *)&unk_2569E7B90);
}

uint64_t sub_23AFD4D24(uint64_t a1)
{
  return sub_23AFD4DB4(a1, (uint64_t *)&unk_2542E2100);
}

uint64_t sub_23AFD4D30(uint64_t a1)
{
  return sub_23AFD4DB4(a1, &qword_2569E7BA0);
}

uint64_t sub_23AFD4D3C(uint64_t a1)
{
  return sub_23AFD4DB4(a1, &qword_2569E7B88);
}

uint64_t sub_23AFD4D48(uint64_t a1)
{
  return sub_23AFD4F30(a1, &qword_2569E7B30);
}

uint64_t sub_23AFD4D54(uint64_t a1)
{
  return sub_23AFD4DB4(a1, &qword_2569E7AF0);
}

uint64_t sub_23AFD4D60(uint64_t a1)
{
  return sub_23AFD4F30(a1, (uint64_t *)&unk_2569E7B40);
}

uint64_t sub_23AFD4D6C(uint64_t a1)
{
  return sub_23AFD4DB4(a1, &qword_2569E7AD8);
}

uint64_t sub_23AFD4D78(uint64_t a1)
{
  return sub_23AFD4DB4(a1, &qword_2569E7AE8);
}

uint64_t sub_23AFD4D84(uint64_t a1)
{
  return sub_23AFD4DB4(a1, &qword_2569E7AE0);
}

uint64_t sub_23AFD4D90(uint64_t a1)
{
  return sub_23AFD4DB4(a1, qword_2569E5178);
}

uint64_t sub_23AFD4D9C(uint64_t a1)
{
  return sub_23AFD4F30(a1, (uint64_t *)&unk_2542E2120);
}

uint64_t sub_23AFD4DA8(uint64_t a1)
{
  return sub_23AFD4DB4(a1, (uint64_t *)&unk_2542E2140);
}

uint64_t sub_23AFD4DB4(uint64_t result, uint64_t *a2)
{
  _QWORD *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (result)
  {
    v4 = result;
    v5 = 0;
    v6 = (uint64_t *)(MEMORY[0x24BEE4AF8] + 32);
    while (1)
    {
      v7 = __clz(__rbit64(v4));
      v8 = v4 & ~(1 << v7);
      if (((1 << v7) & v4) == 0)
        v8 = v4;
      if (v7 >= 0x40)
        v9 = 0;
      else
        v9 = 1 << v7;
      if (v7 < 0x40)
        v4 = v8;
      if (!v5)
      {
        v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(a2);
        v13 = (_QWORD *)swift_allocObject();
        v14 = _swift_stdlib_malloc_size(v13);
        v15 = v14 - 32;
        if (v14 < 32)
          v15 = v14 - 25;
        v16 = v15 >> 3;
        v13[2] = v12;
        v13[3] = 2 * (v15 >> 3);
        v17 = (unint64_t)(v13 + 4);
        v18 = v2[3] >> 1;
        if (v2[2])
        {
          if (v13 != v2 || v17 >= (unint64_t)&v2[v18 + 4])
            memmove(v13 + 4, v2 + 4, 8 * v18);
          v2[2] = 0;
        }
        v6 = (uint64_t *)(v17 + 8 * v18);
        v5 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v18;
        result = swift_release();
        v2 = v13;
      }
      v20 = __OFSUB__(v5--, 1);
      if (v20)
        break;
      *v6++ = v9;
      if (!v4)
        goto LABEL_30;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = 0;
LABEL_30:
  v21 = v2[3];
  if (v21 < 2)
    return (uint64_t)v2;
  v22 = v21 >> 1;
  v20 = __OFSUB__(v22, v5);
  v23 = v22 - v5;
  if (!v20)
  {
    v2[2] = v23;
    return (uint64_t)v2;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23AFD4F18(uint64_t a1)
{
  return sub_23AFD4F30(a1, &qword_2569E7B38);
}

uint64_t sub_23AFD4F24(uint64_t a1)
{
  return sub_23AFD4F30(a1, (uint64_t *)&unk_2569E7B20);
}

uint64_t sub_23AFD4F30(uint64_t result, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (result)
  {
    v4 = result;
    v5 = 0;
    v6 = (uint64_t *)(MEMORY[0x24BEE4AF8] + 32);
    while (1)
    {
      if (!v5)
      {
        v7 = v2[3];
        if ((uint64_t)((v7 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
        if (v8 <= 1)
          v9 = 1;
        else
          v9 = v8;
        __swift_instantiateConcreteTypeFromMangledName(a2);
        v10 = (_QWORD *)swift_allocObject();
        v11 = _swift_stdlib_malloc_size(v10);
        v12 = v11 - 32;
        if (v11 < 32)
          v12 = v11 - 25;
        v13 = v12 >> 3;
        v10[2] = v9;
        v10[3] = 2 * (v12 >> 3);
        v14 = (unint64_t)(v10 + 4);
        v15 = v2[3] >> 1;
        if (v2[2])
        {
          if (v10 != v2 || v14 >= (unint64_t)&v2[v15 + 4])
            memmove(v10 + 4, v2 + 4, 8 * v15);
          v2[2] = 0;
        }
        v6 = (uint64_t *)(v14 + 8 * v15);
        v5 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        result = swift_release();
        v2 = v10;
      }
      v17 = __OFSUB__(v5--, 1);
      if (v17)
        break;
      v18 = v4 & -v4;
      *v6++ = v18;
      v4 ^= v18;
      if (!v4)
        goto LABEL_23;
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v5 = 0;
LABEL_23:
  v19 = v2[3];
  if (v19 < 2)
    return (uint64_t)v2;
  v20 = v19 >> 1;
  v17 = __OFSUB__(v20, v5);
  v21 = v20 - v5;
  if (!v17)
  {
    v2[2] = v21;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23AFD5078(uint64_t *a1)
{
  uint64_t (*v1)(void **);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  size_t v33;
  char *v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(__int128 *__return_ptr, void **);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void **);
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  void *v53;
  void *v54;
  void *v55;
  char v56;
  __int128 v57;
  uint64_t v58;

  v1 = (uint64_t (*)(void **))a1[1];
  v58 = *a1;
  v2 = v58;
  v46 = v58 + 64;
  v47 = v1;
  v3 = -1 << *(_BYTE *)(v58 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v58 + 64);
  v40 = (void (*)(__int128 *__return_ptr, void **))a1[3];
  sub_23AAB7528((uint64_t)&v58);
  v45 = (unint64_t)(63 - v3) >> 6;
  swift_retain();
  result = swift_retain();
  v42 = 0;
  v7 = 0;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v41 = (char *)MEMORY[0x24BEE4AF8];
LABEL_5:
  v44 = v8 + 32;
  if (v5)
  {
LABEL_6:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v7 << 6);
    goto LABEL_17;
  }
  while (1)
  {
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v11 >= v45)
      goto LABEL_45;
    v12 = *(_QWORD *)(v46 + 8 * v11);
    if (!v12)
      break;
LABEL_16:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v11 << 6);
    v7 = v11;
LABEL_17:
    v15 = *(_QWORD *)(v2 + 48) + 32 * v10;
    v17 = *(void **)v15;
    v16 = *(void **)(v15 + 8);
    v18 = *(void **)(v15 + 16);
    v48 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v10);
    v19 = *(_BYTE *)(v15 + 24);
    v53 = v17;
    v54 = v16;
    v55 = v18;
    v56 = v19;
    v57 = v48;
    sub_23AAFA44C(v17, v16, v18, v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v47(&v53) & 1) != 0)
    {
      v53 = v17;
      v54 = v16;
      v55 = v18;
      v56 = v19;
      v57 = v48;
      v40(&v50, &v53);
      sub_23ABE4D94(v17, v16, v18, v19);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v20 = v50;
      v21 = v51;
      v22 = v52;
      v23 = v42;
      if (!v42)
      {
        v24 = *((_QWORD *)v41 + 3);
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) >= 0)
        {
          v43 = v51;
          v49 = v50;
          v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
          if (v25 <= 1)
            v26 = 1;
          else
            v26 = v25;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E67E8);
          v27 = (char *)swift_allocObject();
          v28 = _swift_stdlib_malloc_size(v27);
          v29 = v28 - 32;
          if (v28 < 32)
            v29 = v28 - 1;
          v30 = v29 >> 5;
          *((_QWORD *)v27 + 2) = v26;
          *((_QWORD *)v27 + 3) = 2 * (v29 >> 5);
          v31 = v27 + 32;
          v32 = *((_QWORD *)v41 + 3) >> 1;
          v33 = 32 * v32;
          if (*((_QWORD *)v41 + 2))
          {
            v34 = v41 + 32;
            if (v27 != v41 || v31 >= &v34[v33])
              memmove(v27 + 32, v34, v33);
            *((_QWORD *)v41 + 2) = 0;
          }
          v44 = &v31[v33];
          result = swift_release();
          v23 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
          v41 = v27;
          v20 = v49;
          v21 = v43;
          goto LABEL_43;
        }
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
LABEL_43:
      v35 = __OFSUB__(v23, 1);
      v36 = v23 - 1;
      if (!v35)
      {
        v42 = v36;
        v8 = v44;
        *(_OWORD *)v44 = v20;
        *((_QWORD *)v44 + 2) = v21;
        v44[24] = v22;
        goto LABEL_5;
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    sub_23ABE4D94(v17, v16, v18, v19);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_6;
  }
  v13 = v7 + 2;
  if (v7 + 2 >= v45)
    goto LABEL_45;
  v12 = *(_QWORD *)(v46 + 8 * v13);
  if (v12)
    goto LABEL_12;
  v14 = v7 + 3;
  if (v7 + 3 >= v45)
    goto LABEL_45;
  v12 = *(_QWORD *)(v46 + 8 * v14);
  if (v12)
    goto LABEL_15;
  v13 = v7 + 4;
  if (v7 + 4 >= v45)
    goto LABEL_45;
  v12 = *(_QWORD *)(v46 + 8 * v13);
  if (v12)
  {
LABEL_12:
    v11 = v13;
    goto LABEL_16;
  }
  v14 = v7 + 5;
  if (v7 + 5 >= v45)
    goto LABEL_45;
  v12 = *(_QWORD *)(v46 + 8 * v14);
  if (v12)
  {
LABEL_15:
    v11 = v14;
    goto LABEL_16;
  }
  v13 = v7 + 6;
  if (v7 + 6 < v45)
  {
    v12 = *(_QWORD *)(v46 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v11 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_51;
        if (v11 >= v45)
          goto LABEL_45;
        v12 = *(_QWORD *)(v46 + 8 * v11);
        ++v13;
        if (v12)
          goto LABEL_16;
      }
    }
    goto LABEL_12;
  }
LABEL_45:
  sub_23ACF19B8();
  swift_release();
  swift_release();
  result = (uint64_t)v41;
  v37 = *((_QWORD *)v41 + 3);
  if (v37 < 2)
    return result;
  v38 = v37 >> 1;
  v35 = __OFSUB__(v38, v42);
  v39 = v38 - v42;
  if (!v35)
  {
    *((_QWORD *)v41 + 2) = v39;
    return result;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_23AFD54C8(uint64_t *a1)
{
  uint64_t (*v1)(uint64_t *);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  unint64_t i;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  void (*v39)(__int128 *__return_ptr, uint64_t *);
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  int64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t *);
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  __int128 v64;
  uint64_t v65;

  v1 = (uint64_t (*)(uint64_t *))a1[1];
  v65 = *a1;
  v45 = v65 + 64;
  v46 = v1;
  v47 = v65;
  v2 = -1 << *(_BYTE *)(v65 + 32);
  if (-v2 < 64)
    v3 = ~(-1 << -(char)v2);
  else
    v3 = -1;
  v4 = v3 & *(_QWORD *)(v65 + 64);
  v39 = (void (*)(__int128 *__return_ptr, uint64_t *))a1[3];
  sub_23AAB7528((uint64_t)&v65);
  v44 = (unint64_t)(63 - v2) >> 6;
  swift_retain();
  result = swift_retain();
  v40 = 0;
  v48 = 0;
  v43 = (char *)MEMORY[0x24BEE4AF8];
  v42 = MEMORY[0x24BEE4AF8] + 32;
  if (!v4)
    goto LABEL_6;
LABEL_5:
  v49 = (v4 - 1) & v4;
  for (i = __clz(__rbit64(v4)) | (v48 << 6); ; i = __clz(__rbit64(v8)) + (v7 << 6))
  {
    v11 = *(_QWORD *)(v47 + 48) + 48 * i;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    v16 = *(_QWORD *)(v11 + 32);
    v17 = *(_BYTE *)(v11 + 40);
    v18 = *(_BYTE *)(v11 + 41);
    v50 = *(_OWORD *)(*(_QWORD *)(v47 + 56) + 16 * i);
    v57 = *(_QWORD *)v11;
    v58 = v13;
    v59 = v14;
    v60 = v15;
    v61 = v16;
    v62 = v17;
    v63 = v18;
    v64 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v46(&v57) & 1) != 0)
    {
      v57 = v12;
      v58 = v13;
      v59 = v14;
      v60 = v15;
      v61 = v16;
      v62 = v17;
      v63 = v18;
      v64 = v50;
      v39(&v52, &v57);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v19 = v52;
      v20 = v53;
      v21 = v54;
      v22 = v55;
      v23 = v56;
      if (v40)
      {
        v24 = v43;
        v4 = v49;
        v25 = v40 - 1;
        if (__OFSUB__(v40, 1))
          goto LABEL_50;
      }
      else
      {
        v26 = *((_QWORD *)v43 + 3);
        if ((uint64_t)((v26 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_52;
        v41 = v53;
        v51 = v52;
        v27 = v26 & 0xFFFFFFFFFFFFFFFELL;
        if (v27 <= 1)
          v28 = 1;
        else
          v28 = v27;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20E0);
        v24 = (char *)swift_allocObject();
        v29 = (uint64_t)(_swift_stdlib_malloc_size(v24) - 32) / 48;
        *((_QWORD *)v24 + 2) = v28;
        *((_QWORD *)v24 + 3) = 2 * v29;
        v30 = v24 + 32;
        v31 = *((_QWORD *)v43 + 3) >> 1;
        v32 = 48 * v31;
        if (*((_QWORD *)v43 + 2))
        {
          v33 = v43 + 32;
          if (v24 != v43 || v30 >= &v33[v32])
            memmove(v24 + 32, v33, 48 * v31);
          *((_QWORD *)v43 + 2) = 0;
        }
        v42 = (uint64_t)&v30[v32];
        v34 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
        result = swift_release();
        v4 = v49;
        v19 = v51;
        v20 = v41;
        v25 = v34 - 1;
        if (__OFSUB__(v34, 1))
          goto LABEL_50;
      }
      v40 = v25;
      v43 = v24;
      *(_OWORD *)v42 = v19;
      *(_OWORD *)(v42 + 16) = v20;
      *(_QWORD *)(v42 + 32) = v21;
      *(_BYTE *)(v42 + 40) = v22;
      *(_BYTE *)(v42 + 41) = v23;
      v42 += 48;
      if (v4)
        goto LABEL_5;
    }
    else
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v4 = v49;
      if (v49)
        goto LABEL_5;
    }
LABEL_6:
    v7 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    if (v7 >= v44)
      goto LABEL_45;
    v8 = *(_QWORD *)(v45 + 8 * v7);
    if (!v8)
      break;
LABEL_15:
    v48 = v7;
    v49 = (v8 - 1) & v8;
  }
  v9 = v48 + 2;
  if (v48 + 2 >= v44)
    goto LABEL_45;
  v8 = *(_QWORD *)(v45 + 8 * v9);
  if (v8)
    goto LABEL_11;
  v10 = v48 + 3;
  if (v48 + 3 >= v44)
    goto LABEL_45;
  v8 = *(_QWORD *)(v45 + 8 * v10);
  if (v8)
    goto LABEL_14;
  v9 = v48 + 4;
  if (v48 + 4 >= v44)
    goto LABEL_45;
  v8 = *(_QWORD *)(v45 + 8 * v9);
  if (v8)
    goto LABEL_11;
  v10 = v48 + 5;
  if (v48 + 5 >= v44)
    goto LABEL_45;
  v8 = *(_QWORD *)(v45 + 8 * v10);
  if (v8)
  {
LABEL_14:
    v7 = v10;
    goto LABEL_15;
  }
  v9 = v48 + 6;
  if (v48 + 6 < v44)
  {
    v8 = *(_QWORD *)(v45 + 8 * v9);
    if (!v8)
    {
      while (1)
      {
        v7 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_51;
        if (v7 >= v44)
          goto LABEL_45;
        v8 = *(_QWORD *)(v45 + 8 * v7);
        ++v9;
        if (v8)
          goto LABEL_15;
      }
    }
LABEL_11:
    v7 = v9;
    goto LABEL_15;
  }
LABEL_45:
  sub_23ACF19B8();
  swift_release();
  swift_release();
  result = (uint64_t)v43;
  v35 = *((_QWORD *)v43 + 3);
  if (v35 < 2)
    return result;
  v36 = v35 >> 1;
  v37 = __OFSUB__(v36, v40);
  v38 = v36 - v40;
  if (!v37)
  {
    result = (uint64_t)v43;
    *((_QWORD *)v43 + 2) = v38;
    return result;
  }
LABEL_53:
  __break(1u);
  return result;
}

unint64_t *sub_23AFD5954(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t i;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  if (!a2)
  {
    i = 0;
    goto LABEL_17;
  }
  if (!a3)
  {
LABEL_16:
    i = a3;
    goto LABEL_17;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    for (i = 0; a4; ++i)
    {
      v5 = __clz(__rbit64(a4));
      v6 = a4 & ~(1 << v5);
      if (((1 << v5) & a4) == 0)
        v6 = a4;
      v7 = v5 >= 0x40;
      v8 = v5 >= 0x40 ? 0 : 1 << v5;
      if (!v7)
        a4 = v6;
      *(_QWORD *)(a2 + 8 * i) = v8;
      if (a3 - 1 == i)
        goto LABEL_16;
    }
LABEL_17:
    *result = a4;
    return (unint64_t *)i;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23AFD59C8(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t i;
  uint64_t v5;

  if (!a2)
  {
    i = 0;
    goto LABEL_10;
  }
  if (!a3)
  {
LABEL_9:
    i = a3;
    goto LABEL_10;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    for (i = 0; a4; ++i)
    {
      v5 = a4 & -a4;
      a4 ^= v5;
      *(_QWORD *)(a2 + 8 * i) = v5;
      if (a3 - 1 == i)
        goto LABEL_9;
    }
LABEL_10:
    *result = a4;
    return (_QWORD *)i;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AFD5A24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 32);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_23AA907B0(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v12, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    sub_23AA94050((uint64_t)v12, (uint64_t)v15, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    result = sub_23AA94050((uint64_t)v15, a2, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD5CE0(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD5ED8(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v21 = *(void **)v20;
    v22 = *(_QWORD *)(v20 + 8);
    LOBYTE(v20) = *(_BYTE *)(v20 + 16);
    *(_QWORD *)v11 = v21;
    *(_QWORD *)(v11 + 8) = v22;
    *(_BYTE *)(v11 + 16) = v20;
    if (v13 == v10)
    {
      v23 = v21;
      goto LABEL_38;
    }
    v11 += 24;
    result = v21;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23AFD60E4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD62E4(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  uint64_t v26;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    v21 = *(_QWORD *)(a4 + 56) + 24 * v16;
    v22 = *(_QWORD *)v21;
    v23 = *(_BYTE *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    *(_QWORD *)v11 = v20;
    *(_QWORD *)(v11 + 8) = v22;
    *(_BYTE *)(v11 + 16) = v23;
    *(_QWORD *)(v11 + 24) = v24;
    if (v13 == v10)
    {
      v25 = v20;
      goto LABEL_38;
    }
    v11 += 32;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v26;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD64FC(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(a4 + 48) + 16 * v12;
    v14 = *(_QWORD *)v13;
    LOBYTE(v13) = *(_BYTE *)(v13 + 8);
    v15 = *(_QWORD *)(a4 + 56) + 24 * v12;
    v16 = *(_QWORD *)v15;
    v17 = *(_BYTE *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    *(_QWORD *)a2 = v14;
    *(_BYTE *)(a2 + 8) = v13;
    *(_QWORD *)(a2 + 16) = v16;
    *(_BYTE *)(a2 + 24) = v17;
    *(_QWORD *)(a2 + 32) = v18;
    a2 += 40;
    if (v9 == a3)
      goto LABEL_35;
  }
  v19 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v19 >= v10)
    goto LABEL_30;
  v20 = *(_QWORD *)(v4 + 8 * v19);
  if (v20)
    goto LABEL_19;
  v8 += 2;
  if (v19 + 1 >= v10)
  {
    v7 = 0;
    v8 = v19;
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(v4 + 8 * v8);
  if (v20)
  {
LABEL_15:
    v19 = v8;
LABEL_19:
    v22 = __clz(__rbit64(v20));
    v7 = (v20 - 1) & v20;
    v12 = v22 + (v19 << 6);
    v8 = v19;
    goto LABEL_8;
  }
  v21 = v19 + 2;
  if (v19 + 2 >= v10)
    goto LABEL_30;
  v20 = *(_QWORD *)(v4 + 8 * v21);
  if (v20)
  {
LABEL_18:
    v19 = v21;
    goto LABEL_19;
  }
  v8 = v19 + 3;
  if (v19 + 3 >= v10)
  {
    v7 = 0;
    v8 = v19 + 2;
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(v4 + 8 * v8);
  if (v20)
    goto LABEL_15;
  v21 = v19 + 4;
  if (v19 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v4 + 8 * v21);
  if (v20)
    goto LABEL_18;
  while (1)
  {
    v19 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v19 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v20 = *(_QWORD *)(v4 + 8 * v19);
    ++v21;
    if (v20)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD66C0(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD68B8(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(a4 + 48) + 16 * v12;
    v14 = *(_QWORD *)v13;
    LOBYTE(v13) = *(_BYTE *)(v13 + 8);
    *(_QWORD *)a2 = v14;
    *(_BYTE *)(a2 + 8) = v13;
    a2 += 16;
    if (v9 == a3)
      goto LABEL_35;
  }
  v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v10)
    goto LABEL_30;
  v16 = *(_QWORD *)(v4 + 8 * v15);
  if (v16)
    goto LABEL_19;
  v8 += 2;
  if (v15 + 1 >= v10)
  {
    v7 = 0;
    v8 = v15;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v4 + 8 * v8);
  if (v16)
  {
LABEL_15:
    v15 = v8;
LABEL_19:
    v18 = __clz(__rbit64(v16));
    v7 = (v16 - 1) & v16;
    v12 = v18 + (v15 << 6);
    v8 = v15;
    goto LABEL_8;
  }
  v17 = v15 + 2;
  if (v15 + 2 >= v10)
    goto LABEL_30;
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v15 = v17;
    goto LABEL_19;
  }
  v8 = v15 + 3;
  if (v15 + 3 >= v10)
  {
    v7 = 0;
    v8 = v15 + 2;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v4 + 8 * v8);
  if (v16)
    goto LABEL_15;
  v17 = v15 + 4;
  if (v15 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
    goto LABEL_18;
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD6A5C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  char v24;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 32 * v16;
    v21 = *(void **)v20;
    v22 = *(void **)(v20 + 8);
    v23 = *(void **)(v20 + 16);
    v24 = *(_BYTE *)(v20 + 24);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v22;
    *(_QWORD *)(v11 + 16) = v23;
    *(_BYTE *)(v11 + 24) = v24;
    if (v13 == v10)
    {
      sub_23AAFA44C(v21, v22, v23, v24);
      goto LABEL_38;
    }
    v11 += 32;
    result = sub_23AAFA44C(v21, v22, v23, v24);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD6C68(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(a4 + 48) + 48 * v12;
    v14 = *(_QWORD *)(v13 + 32);
    v15 = *(_WORD *)(v13 + 40);
    v16 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(_OWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 32) = v14;
    *(_WORD *)(a2 + 40) = v15;
    a2 += 48;
    if (v9 == a3)
      goto LABEL_35;
  }
  v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v17 >= v10)
    goto LABEL_30;
  v18 = *(_QWORD *)(v4 + 8 * v17);
  if (v18)
    goto LABEL_19;
  v8 += 2;
  if (v17 + 1 >= v10)
  {
    v7 = 0;
    v8 = v17;
    goto LABEL_34;
  }
  v18 = *(_QWORD *)(v4 + 8 * v8);
  if (v18)
  {
LABEL_15:
    v17 = v8;
LABEL_19:
    v20 = __clz(__rbit64(v18));
    v7 = (v18 - 1) & v18;
    v12 = v20 + (v17 << 6);
    v8 = v17;
    goto LABEL_8;
  }
  v19 = v17 + 2;
  if (v17 + 2 >= v10)
    goto LABEL_30;
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
LABEL_18:
    v17 = v19;
    goto LABEL_19;
  }
  v8 = v17 + 3;
  if (v17 + 3 >= v10)
  {
    v7 = 0;
    v8 = v17 + 2;
    goto LABEL_34;
  }
  v18 = *(_QWORD *)(v4 + 8 * v8);
  if (v18)
    goto LABEL_15;
  v19 = v17 + 4;
  if (v17 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
    goto LABEL_18;
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23AFD6E18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_23AA77B28(*(_QWORD *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_23ABD76F0(v21, (uint64_t)v22);
    result = sub_23ABD76F0(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v20;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_23;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v17 = v19;
LABEL_23:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23AFD7024(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _BYTE v20[16];
  _BYTE v21[16];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_35:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
LABEL_32:
    v13 = a3;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_23ACF17F0(*(_QWORD *)(a4 + 56) + 16 * v16, (uint64_t)v20);
    sub_23AABABF4((uint64_t)v20, (uint64_t)v21);
    result = sub_23AABABF4((uint64_t)v21, v11);
    v11 += 16;
    if (v13 == a3)
      goto LABEL_32;
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
  {
LABEL_23:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_9;
  }
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v17 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23AFD7220(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 32);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_23AA8EFC8(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v12, &qword_2542DDDB0);
    sub_23AA724E8((uint64_t)v12, (uint64_t)v15, &qword_2542DDDB0);
    result = sub_23AA724E8((uint64_t)v15, a2, &qword_2542DDDB0);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23AFD74E0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    v22 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_23AFD76F8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23AFD78F0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AFD7908(a1, a2, a3, a4, type metadata accessor for VFSItem);
}

uint64_t sub_23AFD78FC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AFD7908(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
}

uint64_t sub_23AFD7908(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v33 - v16;
  v38 = a4;
  v20 = *(_QWORD *)(a4 + 64);
  v19 = a4 + 64;
  v18 = v20;
  v37 = v19;
  v21 = -1 << *(_BYTE *)(v19 - 32);
  if (-v21 < 64)
    v22 = ~(-1 << -(char)v21);
  else
    v22 = -1;
  v23 = v22 & v18;
  if (!a2)
  {
    v24 = 0;
    a3 = 0;
LABEL_38:
    v32 = v37;
    *a1 = v38;
    a1[1] = v32;
    a1[2] = ~v21;
    a1[3] = v24;
    a1[4] = v23;
    return a3;
  }
  if (!a3)
  {
    v24 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v19 - 32);
  v35 = a1;
  v24 = 0;
  v25 = 0;
  v36 = (unint64_t)(63 - v21) >> 6;
  v33 = v36 - 1;
  if (!v23)
    goto LABEL_9;
LABEL_8:
  v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    v31 = *(_QWORD *)(v11 + 72);
    sub_23AA907B0(*(_QWORD *)(v38 + 56) + v31 * v27, (uint64_t)v14, a5);
    sub_23AA94050((uint64_t)v14, (uint64_t)v17, a5);
    result = sub_23AA94050((uint64_t)v17, a2, a5);
    if (v25 == a3)
      goto LABEL_37;
    a2 += v31;
    if (v23)
      goto LABEL_8;
LABEL_9:
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v28 >= v36)
      goto LABEL_32;
    v29 = *(_QWORD *)(v37 + 8 * v28);
    if (!v29)
      break;
LABEL_18:
    v23 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v28 << 6);
    v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v36)
  {
    v23 = 0;
    v24 = v28;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v37 + 8 * v24);
  if (v29)
    goto LABEL_14;
  v30 = v28 + 2;
  if (v28 + 2 >= v36)
    goto LABEL_32;
  v29 = *(_QWORD *)(v37 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v24 = v28 + 3;
  if (v28 + 3 >= v36)
  {
    v23 = 0;
    v24 = v28 + 2;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v37 + 8 * v24);
  if (v29)
  {
LABEL_14:
    v28 = v24;
    goto LABEL_18;
  }
  v30 = v28 + 4;
  if (v28 + 4 >= v36)
  {
LABEL_32:
    v23 = 0;
LABEL_36:
    a3 = v25;
LABEL_37:
    v21 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v29 = *(_QWORD *)(v37 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v36)
    {
      v23 = 0;
      v24 = v33;
      goto LABEL_36;
    }
    v29 = *(_QWORD *)(v37 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23AFD7BC0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

unint64_t sub_23AFD7BCC()
{
  unint64_t result;

  result = qword_2569E7AC0;
  if (!qword_2569E7AC0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E17A0, &type metadata for DBCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7AC0);
  }
  return result;
}

uint64_t sub_23AFD7C10(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_23AFD7C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_23AFD7C80(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_23AFD7C9C + 4 * byte_23B1E105B[a1]))();
}

uint64_t sub_23AFD7C9C()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 104);
}

uint64_t sub_23AFD7CB4()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 88);
}

uint64_t sub_23AFD7CCC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 96);
}

uint64_t sub_23AFD7CE4()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) + 80);
}

uint64_t sub_23AFD7CFC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t sub_23AFD7D08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFD7D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE *v7;

  v7 = (_BYTE *)(a1 + *(int *)(type metadata accessor for SnapshotItem(0, a4, a7, a4) + 48));
  if (*v7 == 1)
    return 1;
  else
    return *(_QWORD *)&v7[*(int *)(type metadata accessor for ItemMetadata() + 100)];
}

void sub_23AFD7D84(uint64_t a1, unsigned int a2, unint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t (**v53)(uint64_t);
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  _QWORD *v57;
  uint64_t v58;
  unint64_t *v59;
  char isUniquelyReferenced_nonNull_native;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t *v65;
  char *v66;
  char *v67;
  uint64_t (**v68)(uint64_t);
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  char *v86;
  unint64_t *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  unint64_t v104;

  v94 = a4;
  v99 = a3;
  v103 = a2;
  v101 = a1;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F0);
  v92 = *(_QWORD *)(v95 - 8);
  v10 = MEMORY[0x24BDAC7A8](v95);
  v88 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v87 = (unint64_t *)((char *)&v84 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (unint64_t *)((char *)&v84 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v90 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v84 - v19;
  v21 = sub_23B1C6050();
  v96 = *(_QWORD *)(v21 - 8);
  v97 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v86 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v91 = (char *)&v84 - v24;
  v98 = sub_23B1C60A4();
  v93 = *(_QWORD *)(v98 - 8);
  v25 = MEMORY[0x24BDAC7A8](v98);
  v89 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v84 - v27;
  v29 = sub_23B1C60EC();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (unint64_t)&v84 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = a6;
  *(_QWORD *)(v33 + 24) = a7;
  v102 = v33;
  v34 = *(void **)(a5 + 64);
  *(_QWORD *)v32 = v34;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x24BEE5610], v29);
  v100 = a7;
  swift_retain();
  v35 = v34;
  LOBYTE(v34) = sub_23B1C6104();
  (*(void (**)(unint64_t, uint64_t))(v30 + 8))(v32, v29);
  if ((v34 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    a5 = sub_23AF9898C(0, *(_QWORD *)(a5 + 16) + 1, 1, a5);
LABEL_21:
    v83 = *(_QWORD *)(a5 + 16);
    v82 = *(_QWORD *)(a5 + 24);
    if (v83 >= v82 >> 1)
      a5 = sub_23AF9898C(v82 > 1, v83 + 1, 1, a5);
    *(_QWORD *)(a5 + 16) = v83 + 1;
    sub_23AA724E8(v30, a5+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v83, &qword_2542DF1F0);
    *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v32) = a5;
    *(_QWORD *)a6 = v29;
    swift_endAccess();
LABEL_24:
    swift_release();
    return;
  }
  if (*(_BYTE *)(a5 + 152) == 1)
  {
    v36 = (id)FPDomainUnavailableError();
    a6();
    swift_release();

    return;
  }
  v37 = a5 + qword_2542EE008;
  swift_beginAccess();
  v38 = *(_QWORD *)(*(_QWORD *)v37 + 16);
  v85 = (unint64_t *)v37;
  if (!v38 || (sub_23AA97254(v101, v103), (v39 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C40);
    v44 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_23B1CA760;
    v100 = v45;
    v46 = (unint64_t *)(v45 + v44);
    v47 = v99;
    sub_23AA93780(v99);
    qos_class_self();
    sub_23B1C6038();
    v49 = v96;
    v48 = v97;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v20, 1, v97) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v91, *MEMORY[0x24BEE5498], v48);
      sub_23AA8A05C((uint64_t)v20, qword_2542E02D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v91, v20, v48);
    }
    sub_23B1C608C();
    v51 = v94;
    v50 = v95;
    v52 = (char *)v15 + *(int *)(v95 + 64);
    v53 = (uint64_t (**)(uint64_t))((char *)v15 + *(int *)(v95 + 80));
    *v15 = v47;
    v15[1] = v51;
    v54 = *(void (**)(char *, char *, uint64_t))(v93 + 32);
    v55 = v98;
    v54(v52, v28, v98);
    v56 = (uint64_t (*)(uint64_t))v102;
    *v53 = sub_23AA698D4;
    v53[1] = v56;
    *v46 = v47;
    v46[1] = v51;
    v54((char *)v46 + *(int *)(v50 + 64), v52, v55);
    v57 = (unint64_t *)((char *)v46 + *(int *)(v50 + 80));
    v58 = swift_allocObject();
    *(_QWORD *)(v58 + 16) = sub_23AA698D4;
    *(_QWORD *)(v58 + 24) = v56;
    *v57 = sub_23AAB64DC;
    v57[1] = v58;
    v59 = v85;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v104 = *v59;
    *v59 = 0x8000000000000000;
    sub_23AD25380(v100, v101, v103, isUniquelyReferenced_nonNull_native);
    *v59 = v104;
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_24;
  }
  v40 = v99;
  sub_23AA93780(v99);
  qos_class_self();
  v41 = (uint64_t)v90;
  sub_23B1C6038();
  v43 = v96;
  v42 = v97;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v41, 1, v97) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v86, *MEMORY[0x24BEE5498], v42);
    sub_23AA8A05C(v41, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v86, v41, v42);
  }
  v61 = (uint64_t (*)(uint64_t))v102;
  v30 = (uint64_t)v88;
  v63 = v94;
  v62 = v95;
  v64 = v93;
  v65 = v87;
  v66 = v89;
  sub_23B1C608C();
  v67 = (char *)v65 + *(int *)(v62 + 64);
  v68 = (uint64_t (**)(uint64_t))((char *)v65 + *(int *)(v62 + 80));
  *v65 = v40;
  v65[1] = v63;
  v69 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  v70 = v66;
  v71 = v98;
  v69(v67, v70, v98);
  *v68 = sub_23AA698D4;
  v68[1] = v61;
  *(_QWORD *)v30 = v40;
  *(_QWORD *)(v30 + 8) = v63;
  v69((char *)(v30 + *(int *)(v62 + 64)), v67, v71);
  v72 = (_QWORD *)(v30 + *(int *)(v62 + 80));
  v73 = swift_allocObject();
  *(_QWORD *)(v73 + 16) = sub_23AA698D4;
  *(_QWORD *)(v73 + 24) = v61;
  *v72 = sub_23AAB64DC;
  v72[1] = v73;
  a6 = (void (*)(void))v85;
  swift_beginAccess();
  swift_retain();
  v74 = swift_isUniquelyReferenced_nonNull_native();
  v104 = *(_QWORD *)a6;
  a5 = v104;
  *(_QWORD *)a6 = 0x8000000000000000;
  v29 = v103;
  v32 = sub_23AA97254(v101, v103);
  v76 = *(_QWORD *)(a5 + 16);
  v77 = (v75 & 1) == 0;
  v78 = v76 + v77;
  if (__OFADD__(v76, v77))
    goto LABEL_26;
  v79 = v75;
  if (*(_QWORD *)(a5 + 24) >= v78)
    goto LABEL_18;
  sub_23AD11C34(v78, v74);
  v80 = sub_23AA97254(v101, v29);
  if ((v79 & 1) == (v81 & 1))
  {
    v32 = v80;
    while ((v79 & 1) == 0)
    {
      while (1)
      {
        swift_release();
        __break(1u);
LABEL_18:
        if ((v74 & 1) == 0)
          break;
        if ((v79 & 1) != 0)
          goto LABEL_20;
      }
      sub_23B1878CC();
    }
LABEL_20:
    v29 = v104;
    a5 = *(_QWORD *)(*(_QWORD *)(v104 + 56) + 8 * v32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_21;
    goto LABEL_27;
  }
  swift_release();
  swift_release();
  sub_23B1C7418();
  __break(1u);
}

void sub_23AFD855C(void *a1, unint64_t a2, unint64_t a3, uint64_t *a4, void (*a5)(void), unint64_t *a6, uint64_t a7, uint64_t *a8, unsigned __int8 a9, unint64_t a10)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t *v37;
  uint64_t isUniquelyReferenced_nonNull_native;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  char v44;
  char v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  void (*v59)(void *);
  char *v60;
  _QWORD *v61;
  char *v62;
  void (**v63)(void *);
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  _QWORD *v68;
  uint64_t v69;
  uint64_t *v70;
  char v71;
  unint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  char *v77;
  void (**v78)(void *);
  unint64_t v79;
  unint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  void (*v83)(void *);
  _QWORD *v84;
  uint64_t v85;
  id v86;
  char v87;
  uint64_t v88;
  _BOOL8 v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  unint64_t *v99;
  char *v100;
  char *v101;
  char *v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;

  v116 = a2;
  v117 = a4;
  v113 = a3;
  v109 = a1;
  v14 = a10;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF200);
  v105 = *(_QWORD *)(v107 - 8);
  v15 = MEMORY[0x24BDAC7A8](v107);
  v99 = (unint64_t *)((char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v98 = (char *)&v96 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v103 = (char **)((char *)&v96 - v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v100 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v102 = (char *)&v96 - v23;
  v24 = sub_23B1C6050();
  v110 = *(_QWORD *)(v24 - 8);
  v111 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v97 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v104 = (char *)&v96 - v27;
  v112 = sub_23B1C60A4();
  v106 = *(_QWORD *)(v112 - 8);
  v28 = MEMORY[0x24BDAC7A8](v112);
  v96 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v101 = (char *)&v96 - v30;
  v31 = sub_23B1C60EC();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char **)((char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = swift_allocObject();
  v36 = a5;
  *(_QWORD *)(v35 + 16) = a5;
  *(_QWORD *)(v35 + 24) = a6;
  *(_QWORD *)(v35 + 32) = a7;
  *(_QWORD *)(v35 + 40) = a8;
  v37 = a8;
  LODWORD(v108) = a9;
  *(_BYTE *)(v35 + 48) = a9;
  isUniquelyReferenced_nonNull_native = (uint64_t)v117;
  v118 = v35;
  *(_QWORD *)(v35 + 56) = a10;
  v39 = *(void **)(isUniquelyReferenced_nonNull_native + 64);
  *v34 = v39;
  (*(void (**)(_QWORD *, _QWORD, unint64_t))(v32 + 104))(v34, *MEMORY[0x24BEE5610], v31);
  v114 = a6;
  swift_retain();
  swift_retain();
  v115 = a10;
  sub_23AA93780(a10);
  v40 = v39;
  LOBYTE(v39) = sub_23B1C6104();
  (*(void (**)(_QWORD *, unint64_t))(v32 + 8))(v34, v31);
  if ((v39 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (*(_BYTE *)(isUniquelyReferenced_nonNull_native + 152) == 1)
  {
    v34 = (id)FPDomainUnavailableError();
    sub_23ACC5BDC(v34, v36, (uint64_t)v114, a7, (uint64_t)v37, v108, v115);
LABEL_24:
    swift_release();

    return;
  }
  v41 = isUniquelyReferenced_nonNull_native + qword_2542EE000;
  swift_beginAccess();
  v42 = *(_QWORD *)(*(_QWORD *)v41 + 16);
  v43 = v109;
  v117 = (uint64_t *)v41;
  if (v42)
  {
    swift_bridgeObjectRetain();
    sub_23AA88CF8(v43);
    v45 = v44;
    swift_bridgeObjectRelease();
    if ((v45 & 1) != 0)
    {
      v108 = a7;
      v46 = v43;
      sub_23AA93780(v116);
      qos_class_self();
      v47 = (uint64_t)v100;
      sub_23B1C6038();
      v49 = v110;
      v48 = v111;
      v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v47, 1, v111);
      v109 = v46;
      if (v50 == 1)
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v97, *MEMORY[0x24BEE5498], v48);
        sub_23AA8A05C(v47, qword_2542E02D0);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v97, v47, v48);
      }
      a6 = v99;
      v73 = v106;
      v74 = v107;
      v75 = v98;
      v76 = v96;
      sub_23B1C608C();
      v77 = (char *)v75 + *(int *)(v74 + 64);
      v78 = (void (**)(void *))((char *)v75 + *(int *)(v74 + 80));
      v79 = v116;
      v80 = v113;
      *v75 = v116;
      v75[1] = v80;
      v81 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
      v82 = v112;
      v81(v77, v76, v112);
      v83 = (void (*)(void *))v118;
      *v78 = sub_23AFDC944;
      v78[1] = v83;
      *a6 = v79;
      a6[1] = v80;
      v81((char *)a6 + *(int *)(v74 + 64), v77, v82);
      v84 = (unint64_t *)((char *)a6 + *(int *)(v74 + 80));
      v85 = swift_allocObject();
      *(_QWORD *)(v85 + 16) = sub_23AFDC944;
      *(_QWORD *)(v85 + 24) = v83;
      *v84 = sub_23AAB64DC;
      v84[1] = v85;
      v37 = v117;
      swift_beginAccess();
      v86 = v109;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v120 = *v37;
      v14 = v120;
      *v37 = 0x8000000000000000;
      v34 = v86;
      v31 = sub_23AA88CF8(v34);
      v88 = *(_QWORD *)(v14 + 16);
      v89 = (v87 & 1) == 0;
      v90 = v88 + v89;
      if (!__OFADD__(v88, v89))
      {
        v91 = v87;
        if (*(_QWORD *)(v14 + 24) >= v90)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v87 & 1) == 0)
              goto LABEL_29;
          }
          else
          {
            sub_23B187724();
            if ((v91 & 1) == 0)
              goto LABEL_29;
          }
        }
        else
        {
          sub_23AD11918(v90, isUniquelyReferenced_nonNull_native);
          v92 = sub_23AA88CF8(v34);
          if ((v91 & 1) != (v93 & 1))
          {
LABEL_30:
            swift_release();
            swift_release();
            swift_release();
            type metadata accessor for NSFileProviderItemIdentifier(0);
            sub_23AAB47B0(v115);
            sub_23B1C7418();
            __break(1u);
            return;
          }
          v31 = v92;
          if ((v91 & 1) == 0)
          {
LABEL_29:
            swift_release();
            swift_release();
            sub_23AAB47B0(v115);
            __break(1u);
            goto LABEL_30;
          }
        }
        isUniquelyReferenced_nonNull_native = v120;
        v14 = *(_QWORD *)(*(_QWORD *)(v120 + 56) + 8 * v31);
        v119 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
LABEL_21:
          v95 = *(_QWORD *)(v14 + 16);
          v94 = *(_QWORD *)(v14 + 24);
          if (v95 >= v94 >> 1)
            v14 = sub_23AF98978(v94 > 1, v95 + 1, 1, v14);
          *(_QWORD *)(v14 + 16) = v95 + 1;
          sub_23AA724E8((uint64_t)a6, v14+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v95, &qword_2542DF200);
          v119 = v14;
          sub_23B18CD60((uint64_t *)&v119, 1, &v120, v31, v34);

          swift_bridgeObjectRelease();
          *v37 = isUniquelyReferenced_nonNull_native;

          swift_endAccess();
          goto LABEL_24;
        }
LABEL_27:
        v14 = sub_23AF98978(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
        goto LABEL_21;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6450);
  v51 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
  v115 = v52;
  v53 = (unint64_t *)(v52 + v51);
  v114 = (unint64_t *)v43;
  sub_23AA93780(v116);
  qos_class_self();
  v54 = (uint64_t)v102;
  sub_23B1C6038();
  v56 = v110;
  v55 = v111;
  v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v54, 1, v111);
  v58 = v107;
  v59 = (void (*)(void *))v118;
  if (v57 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v104, *MEMORY[0x24BEE5498], v55);
    sub_23AA8A05C(v54, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v104, v54, v55);
  }
  v60 = v101;
  sub_23B1C608C();
  v61 = v103;
  v62 = (char *)v103 + *(int *)(v58 + 64);
  v63 = (void (**)(void *))((char *)v103 + *(int *)(v58 + 80));
  v64 = v116;
  v65 = v112;
  v66 = v113;
  *v103 = v116;
  v61[1] = v66;
  v67 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
  v67(v62, v60, v65);
  *v63 = sub_23AFDC944;
  v63[1] = v59;
  *v53 = v64;
  v53[1] = v66;
  v67((char *)v53 + *(int *)(v58 + 64), v62, v65);
  v68 = (unint64_t *)((char *)v53 + *(int *)(v58 + 80));
  v69 = swift_allocObject();
  *(_QWORD *)(v69 + 16) = sub_23AFDC944;
  *(_QWORD *)(v69 + 24) = v59;
  *v68 = sub_23AAB64DC;
  v68[1] = v69;
  v70 = v117;
  swift_beginAccess();
  swift_retain();
  v71 = swift_isUniquelyReferenced_nonNull_native();
  v120 = *v70;
  *v70 = 0x8000000000000000;
  v72 = v114;
  sub_23AD25230(v115, v114, v71);
  *v70 = v120;

  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
}

void sub_23AFD8E44(uint64_t a1, int a2, unint64_t a3, unint64_t a4, unint64_t a5, _QWORD *a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(void *);
  void *v36;
  unint64_t *v37;
  id v38;
  id v39;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  void (**v55)(void *);
  unint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(void *);
  _QWORD *v60;
  uint64_t v61;
  unint64_t **v62;
  char isUniquelyReferenced_nonNull_native;
  id v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  void (**v70)(void *);
  unint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  void (*v74)(void *);
  _QWORD *v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  _BOOL8 v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t *v87;
  char *v88;
  char *v89;
  char *v90;
  unint64_t *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  int v105;
  void (*v106)(void *);
  unint64_t *v107;
  uint64_t v108;

  v95 = a4;
  v103 = a1;
  v104 = a3;
  v105 = a2;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F0);
  v94 = *(_QWORD *)(v96 - 8);
  v12 = MEMORY[0x24BDAC7A8](v96);
  v91 = (unint64_t *)((char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v12);
  v90 = (char *)&v87 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (unint64_t **)((char *)&v87 - v16);
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v92 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v87 - v21;
  v99 = sub_23B1C6050();
  v97 = *(_QWORD *)(v99 - 8);
  v23 = MEMORY[0x24BDAC7A8](v99);
  v89 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v93 = (char *)&v87 - v25;
  v26 = sub_23B1C60A4();
  v100 = *(_QWORD *)(v26 - 8);
  v101 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v88 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v87 - v29;
  v31 = sub_23B1C60EC();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (unint64_t)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (void (*)(void *))swift_allocObject();
  v98 = a6;
  *((_QWORD *)v35 + 2) = a6;
  *((_QWORD *)v35 + 3) = a7;
  v106 = v35;
  *((_QWORD *)v35 + 4) = a8;
  v36 = *(void **)(a5 + 64);
  *(_QWORD *)v34 = v36;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x24BEE5610], v31);
  v102 = a7;
  swift_retain();
  v37 = a8;
  v38 = v36;
  LOBYTE(a8) = sub_23B1C6104();
  (*(void (**)(unint64_t, uint64_t))(v32 + 8))(v34, v31);
  if ((a8 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    a5 = sub_23AF9898C(0, *(_QWORD *)(a5 + 16) + 1, 1, a5);
LABEL_26:
    v86 = *(_QWORD *)(a5 + 16);
    v85 = *(_QWORD *)(a5 + 24);
    if (v86 >= v85 >> 1)
      a5 = sub_23AF9898C(v85 > 1, v86 + 1, 1, a5);
    *(_QWORD *)(a5 + 16) = v86 + 1;
    sub_23AA724E8(v32, a5+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(_QWORD *)(v94 + 72) * v86, &qword_2542DF1F0);
    *(_QWORD *)(v37[7] + 8 * v34) = a5;
    *(_QWORD *)v36 = v37;
    swift_endAccess();
LABEL_29:
    swift_release();
    return;
  }
  if (*(_BYTE *)(a5 + 152) == 1)
  {
    v39 = (id)FPDomainUnavailableError();
    if (v39)
    {
      _s3__C4CodeOMa_1(0);
      v108 = -1004;
      v40 = v39;
      sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
      if ((sub_23B1C575C() & 1) == 0)
      {
        v64 = v39;
        ((void (*)(_QWORD, id))v98)(0, v39);
        swift_release();

        goto LABEL_16;
      }

    }
    ((void (*)(unint64_t *, _QWORD))v98)(v37, 0);
    swift_release();
LABEL_16:

    return;
  }
  v36 = (void *)(a5 + qword_2542EE008);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v36 + 16) || (sub_23AA97254(v103, v105), (v41 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C40);
    v46 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_23B1CA760;
    v102 = v47;
    v48 = (unint64_t *)(v47 + v46);
    sub_23AA93780(v104);
    qos_class_self();
    sub_23B1C6038();
    v49 = v97;
    v50 = v99;
    v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48))(v22, 1, v99);
    v98 = v36;
    if (v51 == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v93, *MEMORY[0x24BEE5498], v50);
      sub_23AA8A05C((uint64_t)v22, qword_2542E02D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v93, v22, v50);
    }
    sub_23B1C608C();
    v52 = v95;
    v53 = v96;
    v54 = (char *)v17 + *(int *)(v96 + 64);
    v55 = (void (**)(void *))((char *)v17 + *(int *)(v96 + 80));
    v56 = v104;
    *v17 = v104;
    v17[1] = v52;
    v57 = v101;
    v58 = *(void (**)(char *, char *, uint64_t))(v100 + 32);
    v58(v54, v30, v101);
    v59 = v106;
    *v55 = sub_23AFDC9D0;
    v55[1] = v59;
    *v48 = v56;
    v48[1] = v52;
    v58((char *)v48 + *(int *)(v53 + 64), v54, v57);
    v60 = (unint64_t *)((char *)v48 + *(int *)(v53 + 80));
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = sub_23AFDC9D0;
    *(_QWORD *)(v61 + 24) = v59;
    *v60 = sub_23AAB64DC;
    v60[1] = v61;
    v62 = (unint64_t **)v98;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v107 = *v62;
    *v62 = (unint64_t *)0x8000000000000000;
    sub_23AD25380(v102, v103, v105, isUniquelyReferenced_nonNull_native);
    *v62 = v107;
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_29;
  }
  sub_23AA93780(v104);
  qos_class_self();
  v42 = (uint64_t)v92;
  sub_23B1C6038();
  v43 = v97;
  v44 = v99;
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v42, 1, v99);
  v87 = v37;
  if (v45 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v89, *MEMORY[0x24BEE5498], v44);
    sub_23AA8A05C(v42, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v89, v42, v44);
  }
  v37 = v91;
  v66 = v95;
  v65 = v96;
  v67 = v90;
  v68 = v88;
  sub_23B1C608C();
  v69 = (char *)v67 + *(int *)(v65 + 64);
  v70 = (void (**)(void *))((char *)v67 + *(int *)(v65 + 80));
  v71 = v104;
  *v67 = v104;
  v67[1] = v66;
  v72 = *(void (**)(char *, char *, uint64_t))(v100 + 32);
  v73 = v68;
  v32 = v101;
  v72(v69, v73, v101);
  v74 = v106;
  *v70 = sub_23AFDC9D0;
  v70[1] = v74;
  *v37 = v71;
  v37[1] = v66;
  v72((char *)v37 + *(int *)(v65 + 64), v69, v32);
  v75 = (unint64_t *)((char *)v37 + *(int *)(v65 + 80));
  v76 = swift_allocObject();
  *(_QWORD *)(v76 + 16) = sub_23AFDC9D0;
  *(_QWORD *)(v76 + 24) = v74;
  *v75 = sub_23AAB64DC;
  v75[1] = v76;
  swift_beginAccess();
  swift_retain();
  v77 = swift_isUniquelyReferenced_nonNull_native();
  v107 = *(unint64_t **)v36;
  a5 = (unint64_t)v107;
  *(_QWORD *)v36 = 0x8000000000000000;
  v34 = sub_23AA97254(v103, v105);
  v79 = *(_QWORD *)(a5 + 16);
  v80 = (v78 & 1) == 0;
  v81 = v79 + v80;
  if (__OFADD__(v79, v80))
    goto LABEL_31;
  v82 = v78;
  v32 = (uint64_t)v37;
  if (*(_QWORD *)(a5 + 24) >= v81)
    goto LABEL_23;
  sub_23AD11C34(v81, v77);
  v83 = sub_23AA97254(v103, v105);
  if ((v82 & 1) == (v84 & 1))
  {
    v34 = v83;
    while ((v82 & 1) == 0)
    {
      while (1)
      {

        swift_release();
        __break(1u);
LABEL_23:
        if ((v77 & 1) == 0)
          break;
        if ((v82 & 1) != 0)
          goto LABEL_25;
      }
      sub_23B1878CC();
    }
LABEL_25:
    v37 = v107;
    a5 = *(_QWORD *)(v107[7] + 8 * v34);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_26;
    goto LABEL_32;
  }

  swift_release();
  swift_release();
  sub_23B1C7418();
  __break(1u);
}

void sub_23AFD96F0(uint64_t a1, int a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, void (*a8)(id, _QWORD), unint64_t *a9, void *a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t **v33;
  void (*v34)(void *);
  uint64_t *v35;
  id v36;
  uint64_t *v37;
  char v38;
  id v39;
  id v40;
  unint64_t *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t *v57;
  char *v58;
  void (**v59)(void *);
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t *v64;
  char isUniquelyReferenced_nonNull_native;
  id v66;
  uint64_t v67;
  unint64_t *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  void (**v73)(void *);
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  unint64_t *v76;
  _QWORD *v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  _BOOL8 v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t *v92;
  char *v93;
  char *v94;
  void (*v95)(_QWORD, id);
  uint64_t v96;
  unint64_t *v97;
  char *v98;
  char *v99;
  void (*v100)(id, _QWORD);
  unint64_t *v101;
  unint64_t *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  int v113;
  unint64_t v114;
  uint64_t v115;

  v109 = a3;
  v110 = a4;
  v113 = a2;
  v112 = (uint64_t *)a1;
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F0);
  v104 = *(_QWORD *)(v111 - 8);
  v14 = MEMORY[0x24BDAC7A8](v111);
  v97 = (unint64_t *)((char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v14);
  v92 = (unint64_t *)((char *)&v90 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v101 = (unint64_t *)((char *)&v90 - v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v94 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v99 = (char *)&v90 - v22;
  v23 = sub_23B1C6050();
  v106 = *(_QWORD *)(v23 - 8);
  v107 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v91 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v103 = (char *)&v90 - v26;
  v108 = sub_23B1C60A4();
  v105 = *(_QWORD *)(v108 - 8);
  v27 = MEMORY[0x24BDAC7A8](v108);
  v93 = (char *)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v98 = (char *)&v90 - v29;
  v30 = sub_23B1C60EC();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (uint64_t **)((char *)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = (void (*)(void *))swift_allocObject();
  v95 = (void (*)(_QWORD, id))a6;
  *((_QWORD *)v34 + 2) = a6;
  *((_QWORD *)v34 + 3) = a7;
  v100 = a8;
  *((_QWORD *)v34 + 4) = a8;
  *((_QWORD *)v34 + 5) = a9;
  *((_QWORD *)v34 + 6) = a10;
  v35 = *(uint64_t **)(a5 + 64);
  *v33 = v35;
  (*(void (**)(uint64_t **, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x24BEE5610], v30);
  v96 = a7;
  swift_retain();
  v102 = a9;
  swift_retain();
  v36 = a10;
  v37 = v35;
  v38 = sub_23B1C6104();
  (*(void (**)(uint64_t **, uint64_t))(v31 + 8))(v33, v30);
  if ((v38 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (*(_BYTE *)(a5 + 152) == 1)
  {
    v39 = (id)FPDomainUnavailableError();
    if (v39)
    {
      _s3__C4CodeOMa_1(0);
      v115 = -1004;
      v40 = v39;
      sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
      if ((sub_23B1C575C() & 1) == 0)
      {
        v66 = v39;
        v95(0, v39);
        swift_release();

        goto LABEL_16;
      }

    }
    v100(v36, 0);
    swift_release();
LABEL_16:

    return;
  }
  v100 = (void (*)(id, _QWORD))v36;
  v41 = (unint64_t *)(a5 + qword_2542EE008);
  swift_beginAccess();
  if (!*(_QWORD *)(*v41 + 16) || (sub_23AA97254((uint64_t)v112, v113), (v42 & 1) == 0))
  {
    v102 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C40);
    v47 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_23B1CA760;
    v104 = v48;
    v49 = (unint64_t *)(v48 + v47);
    v50 = v109;
    sub_23AA93780(v109);
    qos_class_self();
    v51 = (uint64_t)v99;
    sub_23B1C6038();
    v53 = v106;
    v52 = v107;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v51, 1, v107) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v103, *MEMORY[0x24BEE5498], v52);
      sub_23AA8A05C(v51, qword_2542E02D0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v103, v51, v52);
    }
    v54 = v98;
    sub_23B1C608C();
    v56 = v110;
    v55 = v111;
    v57 = v101;
    v58 = (char *)v101 + *(int *)(v111 + 64);
    v59 = (void (**)(void *))((char *)v101 + *(int *)(v111 + 80));
    *v101 = v50;
    v57[1] = v56;
    v60 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
    v61 = v108;
    v60(v58, v54, v108);
    *v59 = sub_23AFDC900;
    v59[1] = v34;
    *v49 = v50;
    v49[1] = v56;
    v60((char *)v49 + *(int *)(v55 + 64), v58, v61);
    v62 = (unint64_t *)((char *)v49 + *(int *)(v55 + 80));
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = sub_23AFDC900;
    *(_QWORD *)(v63 + 24) = v34;
    *v62 = sub_23AAB64DC;
    v62[1] = v63;
    v64 = v102;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v114 = *v64;
    *v64 = 0x8000000000000000;
    sub_23AD25380(v104, (uint64_t)v112, v113, isUniquelyReferenced_nonNull_native);
    *v64 = v114;
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v43 = v109;
  sub_23AA93780(v109);
  qos_class_self();
  v44 = (uint64_t)v94;
  sub_23B1C6038();
  v46 = v106;
  v45 = v107;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v44, 1, v107) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v91, *MEMORY[0x24BEE5498], v45);
    sub_23AA8A05C(v44, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v91, v44, v45);
  }
  v67 = v105;
  v68 = v92;
  v69 = v93;
  sub_23B1C608C();
  v71 = v110;
  v70 = v111;
  v72 = (char *)v68 + *(int *)(v111 + 64);
  v73 = (void (**)(void *))((char *)v68 + *(int *)(v111 + 80));
  *v68 = v43;
  v68[1] = v71;
  v74 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
  v75 = v108;
  v74(v72, v69, v108);
  *v73 = sub_23AFDC900;
  v73[1] = v34;
  v76 = v97;
  *v97 = v43;
  v76[1] = v71;
  v74((char *)v76 + *(int *)(v70 + 64), v72, v75);
  v77 = (unint64_t *)((char *)v76 + *(int *)(v70 + 80));
  v78 = swift_allocObject();
  *(_QWORD *)(v78 + 16) = sub_23AFDC900;
  *(_QWORD *)(v78 + 24) = v34;
  *v77 = sub_23AAB64DC;
  v77[1] = v78;
  swift_beginAccess();
  swift_retain();
  v31 = swift_isUniquelyReferenced_nonNull_native();
  v114 = *v41;
  a5 = v114;
  *v41 = 0x8000000000000000;
  v35 = v112;
  v79 = v113;
  a6 = sub_23AA97254((uint64_t)v112, v113);
  v81 = *(_QWORD *)(a5 + 16);
  v82 = (v80 & 1) == 0;
  v83 = v81 + v82;
  if (__OFADD__(v81, v82))
    goto LABEL_31;
  v84 = v80;
  if (*(_QWORD *)(a5 + 24) >= v83)
  {
    if ((v31 & 1) != 0)
    {
      if ((v80 & 1) != 0)
        goto LABEL_25;
    }
    else
    {
      sub_23B1878CC();
      if ((v84 & 1) != 0)
        goto LABEL_25;
    }
LABEL_34:

    swift_release();
    swift_release();
    __break(1u);
    goto LABEL_35;
  }
  sub_23AD11C34(v83, v31);
  v85 = sub_23AA97254((uint64_t)v35, v79);
  if ((v84 & 1) == (v86 & 1))
  {
    a6 = v85;
    if ((v84 & 1) == 0)
      goto LABEL_34;
LABEL_25:
    v31 = v114;
    a5 = *(_QWORD *)(*(_QWORD *)(v114 + 56) + 8 * a6);
    v35 = (uint64_t *)v41;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_26:
      v87 = v104;
      v89 = *(_QWORD *)(a5 + 16);
      v88 = *(_QWORD *)(a5 + 24);
      if (v89 >= v88 >> 1)
        a5 = sub_23AF9898C(v88 > 1, v89 + 1, 1, a5);
      *(_QWORD *)(a5 + 16) = v89 + 1;
      sub_23AA724E8((uint64_t)v97, a5+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(_QWORD *)(v87 + 72) * v89, &qword_2542DF1F0);
      *(_QWORD *)(*(_QWORD *)(v31 + 56) + 8 * a6) = a5;
      *v35 = v31;
LABEL_29:
      swift_endAccess();
      swift_release();
      return;
    }
LABEL_32:
    a5 = sub_23AF9898C(0, *(_QWORD *)(a5 + 16) + 1, 1, a5);
    goto LABEL_26;
  }
LABEL_35:

  swift_release();
  swift_release();
  swift_release();
  sub_23B1C7418();
  __break(1u);
}

void sub_23AFD9FE4(uint64_t a1, int a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t *a6, void (*a7)(_QWORD, id), void (*a8)(void *a1), void (*a9)(id, _QWORD), uint64_t a10, void *a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(void *);
  void (*v36)(void *);
  void *v37;
  id v38;
  id v39;
  char v40;
  id v41;
  unint64_t *v42;
  id v43;
  void (*v44)(void *);
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t *v60;
  char *v61;
  void (**v62)(void *);
  unint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t *v68;
  char isUniquelyReferenced_nonNull_native;
  id v70;
  uint64_t v71;
  unint64_t *v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  void (**v77)(void *);
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  unint64_t *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  char *v96;
  unint64_t *v97;
  char *v98;
  char *v99;
  void (*v100)(id, _QWORD);
  uint64_t v101;
  void (*v102)(_QWORD, id);
  void (*v103)(void *);
  unint64_t *v104;
  unint64_t *v105;
  char *v106;
  char *v107;
  unint64_t *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  unint64_t v120;
  uint64_t v121;

  v115 = a3;
  v116 = a4;
  v119 = a2;
  v118 = a1;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F0);
  v110 = *(_QWORD *)(v117 - 8);
  v15 = MEMORY[0x24BDAC7A8](v117);
  v104 = (unint64_t *)((char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v97 = (unint64_t *)((char *)&v96 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v108 = (unint64_t *)((char *)&v96 - v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v99 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v107 = (char *)&v96 - v23;
  v24 = sub_23B1C6050();
  v112 = *(_QWORD *)(v24 - 8);
  v113 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v96 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v109 = (char *)&v96 - v27;
  v114 = sub_23B1C60A4();
  v111 = *(_QWORD *)(v114 - 8);
  v28 = MEMORY[0x24BDAC7A8](v114);
  v98 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v106 = (char *)&v96 - v30;
  v31 = sub_23B1C60EC();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (unint64_t)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (void (*)(void *))swift_allocObject();
  *((_QWORD *)v35 + 2) = a6;
  *((_QWORD *)v35 + 3) = a7;
  v102 = a7;
  *((_QWORD *)v35 + 4) = a8;
  *((_QWORD *)v35 + 5) = a9;
  v100 = a9;
  v36 = v35;
  *((_QWORD *)v35 + 6) = a10;
  *((_QWORD *)v35 + 7) = a11;
  v37 = *(void **)(a5 + 64);
  *(_QWORD *)v34 = v37;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v32 + 104))(v34, *MEMORY[0x24BEE5610], v31);
  v105 = a6;
  swift_retain();
  v103 = a8;
  swift_retain();
  v101 = a10;
  swift_retain();
  v38 = a11;
  v39 = v37;
  v40 = sub_23B1C6104();
  (*(void (**)(unint64_t, uint64_t))(v32 + 8))(v34, v31);
  if ((v40 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    a5 = sub_23AF9898C(0, *(_QWORD *)(a5 + 16) + 1, 1, a5);
LABEL_26:
    v92 = v110;
    v94 = *(_QWORD *)(a5 + 16);
    v93 = *(_QWORD *)(a5 + 24);
    if (v94 >= v93 >> 1)
      a5 = sub_23AF9898C(v93 > 1, v94 + 1, 1, a5);
    *(_QWORD *)(a5 + 16) = v94 + 1;
    sub_23AA724E8((uint64_t)v104, a5+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v94, &qword_2542DF1F0);
    *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v34) = a5;
    *(_QWORD *)a8 = v32;
LABEL_29:
    swift_endAccess();
    swift_release();
    return;
  }
  if (*(_BYTE *)(a5 + 152) == 1)
  {
    v41 = (id)FPDomainUnavailableError();
    if (v41)
    {
      v42 = v105;
      swift_beginAccess();
      if (v42[2])
      {
        v43 = v41;
        v102(0, v41);
        swift_release();
LABEL_31:

        goto LABEL_32;
      }
      _s3__C4CodeOMa_1(0);
      v121 = -1004;
      v70 = v41;
      sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
      if ((sub_23B1C575C() & 1) == 0)
      {
        v95 = v41;
        v102(0, v41);
        swift_release();

        goto LABEL_31;
      }

    }
    v100(v38, 0);
    swift_release();
LABEL_32:

    return;
  }
  v102 = (void (*)(_QWORD, id))v38;
  v44 = (void (*)(void *))(a5 + qword_2542EE008);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v44 + 16) || (sub_23AA97254(v118, v119), (v45 & 1) == 0))
  {
    v105 = (unint64_t *)v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C40);
    v50 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
    v110 = v51;
    v52 = (unint64_t *)(v51 + v50);
    v53 = v115;
    sub_23AA93780(v115);
    qos_class_self();
    v54 = (uint64_t)v107;
    sub_23B1C6038();
    v56 = v112;
    v55 = v113;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v54, 1, v113) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v109, *MEMORY[0x24BEE5498], v55);
      sub_23AA8A05C(v54, qword_2542E02D0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v109, v54, v55);
    }
    v57 = v106;
    sub_23B1C608C();
    v59 = v116;
    v58 = v117;
    v60 = v108;
    v61 = (char *)v108 + *(int *)(v117 + 64);
    v62 = (void (**)(void *))((char *)v108 + *(int *)(v117 + 80));
    *v108 = v53;
    v60[1] = v59;
    v63 = v53;
    v64 = *(void (**)(char *, char *, uint64_t))(v111 + 32);
    v65 = v114;
    v64(v61, v57, v114);
    *v62 = sub_23AFDC994;
    v62[1] = v36;
    *v52 = v63;
    v52[1] = v59;
    v64((char *)v52 + *(int *)(v58 + 64), v61, v65);
    v66 = (unint64_t *)((char *)v52 + *(int *)(v58 + 80));
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = sub_23AFDC994;
    *(_QWORD *)(v67 + 24) = v36;
    *v66 = sub_23AAB64DC;
    v66[1] = v67;
    v68 = v105;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v120 = *v68;
    *v68 = 0x8000000000000000;
    sub_23AD25380(v110, v118, v119, isUniquelyReferenced_nonNull_native);
    *v68 = v120;
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v46 = v115;
  sub_23AA93780(v115);
  qos_class_self();
  v47 = (uint64_t)v99;
  sub_23B1C6038();
  v49 = v112;
  v48 = v113;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v47, 1, v113) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v96, *MEMORY[0x24BEE5498], v48);
    sub_23AA8A05C(v47, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v96, v47, v48);
  }
  v71 = v111;
  v72 = v97;
  v73 = v98;
  sub_23B1C608C();
  v75 = v116;
  v74 = v117;
  v76 = (char *)v72 + *(int *)(v117 + 64);
  v77 = (void (**)(void *))((char *)v72 + *(int *)(v117 + 80));
  *v72 = v46;
  v72[1] = v75;
  v78 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
  v79 = v114;
  v78(v76, v73, v114);
  a8 = sub_23AFDC994;
  *v77 = sub_23AFDC994;
  v77[1] = v36;
  v80 = v104;
  *v104 = v46;
  v80[1] = v75;
  v78((char *)v80 + *(int *)(v74 + 64), v76, v79);
  v81 = (unint64_t *)((char *)v80 + *(int *)(v74 + 80));
  v82 = swift_allocObject();
  *(_QWORD *)(v82 + 16) = sub_23AFDC994;
  *(_QWORD *)(v82 + 24) = v36;
  *v81 = sub_23AAB64DC;
  v81[1] = v82;
  swift_beginAccess();
  swift_retain();
  v32 = swift_isUniquelyReferenced_nonNull_native();
  v120 = *(_QWORD *)v44;
  a5 = v120;
  *(_QWORD *)v44 = 0x8000000000000000;
  v83 = v118;
  v84 = v119;
  v34 = sub_23AA97254(v118, v119);
  v86 = *(_QWORD *)(a5 + 16);
  v87 = (v85 & 1) == 0;
  v88 = v86 + v87;
  if (__OFADD__(v86, v87))
    goto LABEL_34;
  v89 = v85;
  if (*(_QWORD *)(a5 + 24) >= v88)
    goto LABEL_23;
  sub_23AD11C34(v88, v32);
  v90 = sub_23AA97254(v83, v84);
  if ((v89 & 1) == (v91 & 1))
  {
    v34 = v90;
    while ((v89 & 1) == 0)
    {
      while (1)
      {

        swift_release();
        swift_release();
        swift_release();
        __break(1u);
LABEL_23:
        if ((v32 & 1) == 0)
          break;
        if ((v89 & 1) != 0)
          goto LABEL_25;
      }
      sub_23B1878CC();
    }
LABEL_25:
    v32 = v120;
    a5 = *(_QWORD *)(*(_QWORD *)(v120 + 56) + 8 * v34);
    a8 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_26;
    goto LABEL_35;
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23B1C7418();
  __break(1u);
}

BOOL sub_23AFDA978(uint64_t a1)
{
  uint64_t v1;

  return sub_23AFD017C(a1, *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_23AFDA9A0()
{
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

uint64_t sub_23AFDA9D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_release();
  v9 = v1 + v4 + *(int *)(a1 + 52);
  v10 = sub_23B1C60A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v1 + v8, AssociatedTypeWitness);
  return swift_deallocObject();
}

void sub_23AFDAAD0()
{
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

void sub_23AFDAB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  sub_23AFD15B0(v1, v3, *(_QWORD **)(v2 + 48), v2 + v5, *(_QWORD *)(v2 + v6), v2 + ((v6 + v7 + 8) & ~v7));
}

void sub_23AFDAB94()
{
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

uint64_t sub_23AFDABCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  sub_23AEB29C0(*(id *)(v1 + 48), *(_BYTE *)(v1 + 56));
  v9 = v1 + v4 + *(int *)(a1 + 52);
  v10 = sub_23B1C60A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v1 + v8, AssociatedTypeWitness);
  return swift_deallocObject();
}

void sub_23AFDACDC()
{
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

void sub_23AFDAD08()
{
  swift_getAssociatedTypeWitness();
  sub_23AFD1998();
}

uint64_t sub_23AFDAD98@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 120);
  return result;
}

uint64_t sub_23AFDADA8(uint64_t a1)
{
  return sub_23AFDADE8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AFCFE94) & 1;
}

uint64_t sub_23AFDADC8(uint64_t a1)
{
  return sub_23AFDADE8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AFCFCD8) & 1;
}

uint64_t sub_23AFDADE8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]) & 1;
}

uint64_t sub_23AFDAE10@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_23AFD459C(v1, a1);
}

void sub_23AFDAE2C()
{
  uint64_t v0;

  sub_23AFD48FC(v0 + 16, *(_QWORD *)(v0 + 80));
}

void sub_23AFDAE4C()
{
  uint64_t v0;

  sub_23AFD4820(v0 + 16, *(_QWORD *)(v0 + 80));
}

uint64_t type metadata accessor for FileTreeChangeAggregator.Change(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeChangeAggregator.Change);
}

uint64_t sub_23AFDAE78()
{
  void *v0;

  return sub_23AC45210(v0, sub_23AFDAEB4);
}

void sub_23AFDAEB4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + qword_2542E6C70);
  *(_QWORD *)(v1 + qword_2542E6C70) = v2;
  v4 = v2;

}

uint64_t sub_23AFDAEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 48) & ~v2);
  v4 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFDAFC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v3 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AA85580(v0 + v2, *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(unsigned __int8 *)(v0 + v4 + 16), *(void (**)(uint64_t))(v0 + v5), *(_QWORD *)(v0 + v5 + 8), *(_QWORD *)(v0 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23AFDB04C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23ADDAF4C(*(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), *(void (**)(uint64_t))(v1 + 88), *(_QWORD *)(v1 + 96), a1);
}

uint64_t objectdestroy_123Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFDB12C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23AFC5000(a1, v1 + v4, *(uint64_t (**)(uint64_t))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23AFDB184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 48) & ~v2);
  v4 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFDB288()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 25) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AA774A4(v0 + v2, *(uint64_t (**)(uint64_t))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v5 + 8), *(unsigned __int8 *)(v0 + v5 + 16), *(unsigned __int8 *)(v0 + v5 + 17), *(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8), *(_BYTE **)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE **)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23AFDB33C()
{
  uint64_t v0;

  return sub_23AFC4B1C(*(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_23AFDB358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AFC4654(*(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 16), a1);
}

id sub_23AFDB380@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_2542E6C60);
  *a1 = v2;
  return v2;
}

void sub_23AFDB3B4()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 208))
  {
    *(_QWORD *)(v0 + 208) = os_transaction_create();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_23AFDB3F8()
{
  uint64_t v0;

  return sub_23AFC1220(v0);
}

void sub_23AFDB410()
{
  _QWORD *v0;

  sub_23AFC12C8(v0);
}

uint64_t sub_23AFDB428()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t sub_23AFDB430()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t sub_23AFDB438()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t sub_23AFDB440()
{
  uint64_t **v0;

  return sub_23AFC3D00(v0);
}

uint64_t sub_23AFDB458()
{
  uint64_t v0;

  return sub_23AFCDD98(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_23AFDB474()
{
  uint64_t v0;

  return sub_23AFCDE4C(*(uint64_t **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_23AFDB48C()
{
  uint64_t v0;

  return sub_23AFCE014(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_23AFDB4A8()
{
  uint64_t v0;

  return sub_23AFCE0A0(*(uint64_t **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

void sub_23AFDB4C0(uint64_t a1)
{
  swift_retain();
  sub_23B0708F4(a1);
}

uint64_t sub_23AFDB4EC()
{
  return swift_release();
}

void sub_23AFDB504(uint64_t a1)
{
  swift_retain();
  sub_23B0708F4(a1);
}

uint64_t sub_23AFDB530()
{
  return swift_release();
}

uint64_t sub_23AFDB548(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23AFCE1D0(a1, v1);
}

uint64_t sub_23AFDB560(_QWORD *a1)
{
  uint64_t v1;

  return sub_23AFBFA38(a1, *(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AFDB57C(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADD7D94(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_23AFDB598(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23AFCDF7C(a1, v1);
}

void sub_23AFDB5B0()
{
  sub_23AFCAF18();
}

uint64_t sub_23AFDB5C8()
{
  uint64_t v0;

  return sub_23AFCA9B4(*(_BYTE *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

void sub_23AFDB5E4()
{
  uint64_t v0;

  sub_23AFCA910(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23AFDB5FC()
{
  uint64_t v0;

  sub_23AFCA878(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23AFDB614()
{
  return swift_deallocObject();
}

void sub_23AFDB624()
{
  sub_23AFC5078();
}

uint64_t sub_23AFDB630()
{
  return swift_deallocObject();
}

BOOL sub_23AFDB640(id *a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 16);
  return ((v2 ^ objc_msgSend(*a1, sel_selectedForMaterialization)) & 1) == 0;
}

void sub_23AFDB678()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + qword_2542E6C88) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_23AFDB690()
{
  uint64_t v0;

  return sub_23AFC1144(v0);
}

void sub_23AFDB6A8()
{
  sub_23AFC104C();
}

id sub_23AFDB6C4()
{
  uint64_t v0;

  return sub_23AFC0FC8(v0);
}

void sub_23AFDB6DC()
{
  sub_23AFC104C();
}

void sub_23AFDB6F8()
{
  sub_23AFC0A94();
}

id sub_23AFDB710(void *a1)
{
  uint64_t v1;

  return sub_23AFC0A34(a1, v1);
}

uint64_t sub_23AFDB718()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 90) = *(_BYTE *)(v0 + 24);
  return sub_23AFC08F8();
}

void sub_23AFDB74C(void *a1, NSObject *a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6, unint64_t a7, uint64_t a8, void (*a9)(void *), uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  _QWORD *v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t inited;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *boxed_opaque_existential_0;
  void *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  os_log_t v48;
  _QWORD *v49;
  uint64_t v50;
  NSObject *v51;
  int v52;
  uint64_t v53;
  int v54;
  void (*v55)(void *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[4];
  uint64_t v60;
  void *v61;

  v56 = a8;
  v54 = a6;
  v55 = a9;
  v16 = sub_23B1C5E4C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_4;
  v20 = a1;
  if ((sub_23AFD0054(a1) & 1) != 0)
  {

LABEL_4:
    dispatch_group_leave(a2);
    return;
  }
  v53 = a10;
  v21 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v22 = a1;
  swift_bridgeObjectRetain();
  sub_23AA93780(a7);
  v23 = a1;
  swift_bridgeObjectRetain();
  sub_23AA93780(a7);
  v24 = sub_23B1C5E40();
  v25 = sub_23B1C6AB8();
  v52 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v51 = a2;
    v27 = v26;
    v49 = (_QWORD *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v59[0] = v50;
    *(_DWORD *)v27 = 136446978;
    v48 = v24;
    swift_bridgeObjectRetain();
    v58 = sub_23AABEC68(a3, a4, v59);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    v28 = sub_23AA96F18(a5, v54);
    v58 = sub_23AABEC68(v28, v29, v59);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2080;
    sub_23AE5BC48(a7);
    v31 = v30;
    v33 = v32;
    sub_23AAB47B0(a7);
    v58 = sub_23AABEC68(v31, v33, v59);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(a7);
    *(_WORD *)(v27 + 32) = 2112;
    swift_getErrorValue();
    v34 = sub_23B0D9CF0(v57);
    v58 = (uint64_t)v34;
    sub_23B1C6CBC();
    v35 = v49;
    *v49 = v34;

    v36 = v48;
    _os_log_impl(&dword_23AA66000, v48, (os_log_type_t)v52, "🚧  %{public}s of %s failed for %s: %@", (uint8_t *)v27, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v35, -1, -1);
    v37 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v37, -1, -1);
    v38 = v27;
    a2 = v51;
    MEMORY[0x23B8614BC](v38, -1, -1);

  }
  else
  {
    sub_23AAB47B0(a7);
    swift_bridgeObjectRelease_n();
    sub_23AAB47B0(a7);

  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  type metadata accessor for NSFileProviderError(0);
  v59[0] = -2005;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  *(_QWORD *)(inited + 32) = sub_23B1C63E0();
  *(_QWORD *)(inited + 40) = v40;
  swift_getErrorValue();
  v41 = v59[3];
  v42 = v60;
  *(_QWORD *)(inited + 72) = v60;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(boxed_opaque_existential_0, v41, v42);
  sub_23AAE9EB4(inited);
  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  sub_23B1C5864();
  v44 = v61;
  v45 = v56;
  v46 = (_BYTE *)(v56 + 16);
  swift_beginAccess();
  if ((*(_BYTE *)(v45 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *v46 = 1;
    v55(v44);
  }

  dispatch_group_leave(a2);
}

void sub_23AFDBC90(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void *);
  uint64_t v47;
  char *v48;
  dispatch_group_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  NSObject *v54;
  NSObject *v55;
  unint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  _QWORD *v62;
  char v63;
  unint64_t v64;
  NSObject *v65;
  NSObject *v66;
  char v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  NSObject *v71;
  NSObject *v72;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  _BOOL8 v78;
  uint64_t v79;
  char v80;
  unint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t (*v89)();
  _QWORD *v90;
  uint64_t (*v91)();
  _QWORD **v92;
  uint64_t v93;
  _QWORD *v94;
  char v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  dispatch_group_t v101;
  unint64_t v102;
  uint64_t v103;
  void *v104;
  unint64_t v105;
  uint64_t v106;
  id v107;
  void *v108;
  _QWORD v109[2];
  int v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(void *);
  uint64_t v118;
  NSObject *v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 *v125;
  uint64_t v126;
  unint64_t v127;
  _QWORD v128[4];
  uint64_t v129[4];
  uint64_t v130;
  char v131;
  char *v132;

  v123 = a7;
  v118 = a6;
  v117 = a5;
  v115 = a4;
  v127 = a3;
  v121 = a2;
  v12 = sub_23B1C5E4C();
  v13 = *(unsigned __int8 **)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v132 = (char *)v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a8;
  *(_QWORD *)(v15 + 24) = a9;
  v16 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(a8 + 24) + 472);
  swift_retain();
  v17 = v16(a9);
  if (v9)
  {
    swift_release();
    return;
  }
  v19 = v17;
  v125 = v13;
  v126 = v12;
  v110 = v18;
  v109[1] = a8;
  v124 = a1;
  v113 = v15;
  v20 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v21 = (id)fpfs_current_or_default_log();
  v22 = v132;
  sub_23B1C5E58();
  v23 = v20;
  v24 = v121;
  swift_bridgeObjectRetain();
  v25 = v127;
  sub_23AA93780(v127);
  swift_bridgeObjectRetain();
  v26 = v23;
  swift_bridgeObjectRetain();
  sub_23AA93780(v25);
  swift_bridgeObjectRetain();
  v27 = sub_23B1C5E40();
  v28 = sub_23B1C6A94();
  v29 = v28;
  v30 = os_log_type_enabled(v27, v28);
  v114 = v19;
  v31 = v118;
  v112 = 0;
  v111 = v26;
  if (v30)
  {
    v32 = swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    v122 = swift_slowAlloc();
    v129[0] = v122;
    *(_DWORD *)v32 = 138413314;
    LODWORD(v120) = v29;
    v34 = objc_msgSend(v26, sel_enter);
    v128[0] = v34;
    sub_23B1C6CBC();
    *v33 = v34;

    *(_WORD *)(v32 + 12) = 2082;
    swift_bridgeObjectRetain();
    v128[0] = sub_23AABEC68(v124, v24, v129);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 22) = 2080;
    v35 = sub_23B1C686C();
    v128[0] = sub_23AABEC68(v35, v36, v129);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 32) = 2080;
    sub_23AE5BC48(v25);
    v38 = v37;
    v40 = v39;
    sub_23AAB47B0(v25);
    v128[0] = sub_23AABEC68(v38, v40, v129);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v25);
    *(_WORD *)(v32 + 42) = 2080;
    v41 = MEMORY[0x23B85F02C](v114, &type metadata for VFSItemID);
    v43 = v42;
    swift_bridgeObjectRelease();
    v44 = v41;
    v31 = v118;
    v128[0] = sub_23AABEC68(v44, v43, v129);
    v19 = v114;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v27, (os_log_type_t)v120, "%@ 🚧  waiting for ingestion of %{public}s prior to %s for %s: %s", (uint8_t *)v32, 0x34u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v33, -1, -1);
    v45 = v122;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v45, -1, -1);
    MEMORY[0x23B8614BC](v32, -1, -1);

    (*((void (**)(char *, uint64_t))v125 + 1))(v132, v126);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v25);
    swift_bridgeObjectRelease_n();

    sub_23AAB47B0(v25);
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v125 + 1))(v22, v126);
  }
  v46 = v117;
  v47 = swift_allocObject();
  *(_BYTE *)(v47 + 16) = 0;
  v48 = (char *)swift_allocObject();
  *((_QWORD *)v48 + 2) = v47;
  *((_QWORD *)v48 + 3) = v46;
  v132 = v48;
  *((_QWORD *)v48 + 4) = v31;
  v116 = v47;
  swift_retain_n();
  swift_retain_n();
  v49 = dispatch_group_create();
  v50 = *(_QWORD *)(v19 + 16);
  v51 = v121;
  v52 = v124;
  if (!v50)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    v101 = v49;
    v102 = v51;
    v103 = v123;
    v104 = *(void **)(v123 + 64);
    v105 = v25;
    v106 = swift_allocObject();
    *(_QWORD *)(v106 + 16) = v116;
    *(_BYTE *)(v106 + 24) = v110 & 1;
    *(_QWORD *)(v106 + 32) = v103;
    *(_QWORD *)(v106 + 40) = v52;
    *(_QWORD *)(v106 + 48) = v102;
    *(_QWORD *)(v106 + 56) = v105;
    *(_QWORD *)(v106 + 64) = v115;
    *(_QWORD *)(v106 + 72) = sub_23AFDCA00;
    *(_QWORD *)(v106 + 80) = v113;
    *(_QWORD *)(v106 + 88) = sub_23AFDCA54;
    *(_QWORD *)(v106 + 96) = v132;
    swift_bridgeObjectRetain();
    sub_23AA93780(v105);
    swift_retain();
    swift_retain();
    v107 = v104;
    swift_retain();
    swift_retain();
    sub_23AA81A30((uint64_t)"waitForIngestion(of:request:barrierTimestamp:jobs:completionHandler:)", 69, 2, 0, v107, (uint64_t)sub_23AFDCA7C, v106);
    swift_release();
    swift_release_n();
    swift_release();

    swift_release();
    v108 = v111;
    sub_23ACA7014(v111, MEMORY[0x24BEE7908]);
    swift_release();

    return;
  }
  v120 = (_QWORD *)(v123 + qword_2542EDFE8);
  swift_beginAccess();
  v53 = (unsigned __int8 *)(v114 + 40);
  v119 = v49;
  while (1)
  {
    v125 = v53;
    v126 = v50;
    v60 = *((_QWORD *)v53 - 1);
    v61 = *v53;
    dispatch_group_enter(v49);
    v130 = v60;
    v131 = v61;
    v62 = (_QWORD *)swift_allocObject();
    v62[2] = v49;
    v62[3] = v52;
    v62[4] = v51;
    sub_23AA9F454(&v130, (uint64_t)(v62 + 5));
    v62[7] = v25;
    v62[8] = sub_23AFDCA54;
    v62[9] = v132;
    if (*(_BYTE *)(v123 + 152) != 1)
      break;
    swift_bridgeObjectRetain();
    sub_23AA93780(v25);
    swift_retain();
    v54 = v49;
    swift_bridgeObjectRetain();
    sub_23AA93780(v127);
    swift_retain();
    v55 = v54;
    v56 = v51;
    v57 = (id)FPDomainUnavailableError();
    v58 = v116;
    swift_retain();
    v59 = v118;
    swift_retain();
    sub_23AFDB74C(v57, v55, v124, v56, v60, v61, v127, v58, v117, v59);

    v25 = v127;
    swift_release();

    v52 = v124;
    v49 = v119;
    swift_release();
    swift_release();
LABEL_9:
    v53 = v125 + 16;
    swift_bridgeObjectRelease();
    sub_23AAB47B0(v25);
    swift_release();
    v50 = v126 - 1;
    v51 = v56;
    if (v126 == 1)
      goto LABEL_33;
  }
  LODWORD(v122) = v61;
  if (*(_QWORD *)(*v120 + 16))
  {
    sub_23AA97254(v60, v122);
    if ((v63 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      sub_23AA93780(v25);
      swift_retain();
      v64 = v25;
      v65 = v49;
      swift_bridgeObjectRetain();
      sub_23AA93780(v64);
      swift_retain();
      v66 = v65;
      v67 = v122;
      v68 = v60;
      goto LABEL_26;
    }
  }
  v69 = v120;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23AA93780(v25);
  swift_retain();
  v70 = v25;
  v71 = v49;
  swift_bridgeObjectRetain();
  sub_23AA93780(v70);
  swift_retain();
  v72 = v71;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v128[0] = *v69;
  v74 = v128[0];
  *v69 = 0x8000000000000000;
  v68 = v60;
  v67 = v122;
  v76 = sub_23AA97254(v60, v122);
  v77 = *(_QWORD *)(v74 + 16);
  v78 = (v75 & 1) == 0;
  v79 = v77 + v78;
  if (!__OFADD__(v77, v78))
  {
    v80 = v75;
    if (*(_QWORD *)(v74 + 24) < v79)
    {
      sub_23AD152B4(v79, isUniquelyReferenced_nonNull_native);
      v81 = sub_23AA97254(v60, v67);
      if ((v80 & 1) != (v82 & 1))
        goto LABEL_36;
      v76 = v81;
      v83 = (_QWORD *)v128[0];
      if ((v80 & 1) == 0)
        goto LABEL_23;
LABEL_21:
      v84 = v83[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v84 + 8 * v76) = MEMORY[0x24BEE4AF8];
LABEL_25:
      *v120 = v83;
      swift_bridgeObjectRelease();
      swift_endAccess();
      v52 = v124;
LABEL_26:
      v89 = sub_23AFB8FB0();
      v91 = sub_23B148EB8(v128, v68, v67);
      if (*v90)
      {
        v92 = (_QWORD **)v90;
        v93 = swift_allocObject();
        *(_QWORD *)(v93 + 16) = sub_23AFDCA74;
        *(_QWORD *)(v93 + 24) = v62;
        v94 = *v92;
        sub_23AA93780(v127);
        swift_retain();
        v95 = swift_isUniquelyReferenced_nonNull_native();
        *v92 = v94;
        if ((v95 & 1) == 0)
        {
          v94 = sub_23AF99204(0, v94[2] + 1, 1, v94);
          *v92 = v94;
        }
        v97 = v94[2];
        v96 = v94[3];
        v98 = v115;
        if (v97 >= v96 >> 1)
        {
          v100 = sub_23AF99204((_QWORD *)(v96 > 1), v97 + 1, 1, v94);
          v98 = v115;
          v94 = v100;
          *v92 = v100;
        }
        v94[2] = v97 + 1;
        v99 = &v94[5 * v97];
        v25 = v127;
        v99[4] = v127;
        *((_BYTE *)v99 + 40) = 3;
        v99[6] = v98;
        v99[7] = sub_23AAB64DC;
        v99[8] = v93;
        ((void (*)(_QWORD *, _QWORD))v91)(v128, 0);
        ((void (*)(uint64_t *, _QWORD))v89)(v129, 0);
        v49 = v119;

        swift_release();
        v56 = v121;
        v52 = v124;
      }
      else
      {
        ((void (*)(_QWORD *, _QWORD))v91)(v128, 0);
        ((void (*)(uint64_t *, _QWORD))v89)(v129, 0);
        v49 = v119;

        swift_release();
        v25 = v127;
        v56 = v121;
      }
      goto LABEL_9;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v83 = (_QWORD *)v128[0];
      if ((v75 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_23B1891E8();
      v83 = (_QWORD *)v128[0];
      if ((v80 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v83[(v76 >> 6) + 8] |= 1 << v76;
    v85 = v83[6] + 16 * v76;
    *(_QWORD *)v85 = v60;
    *(_BYTE *)(v85 + 8) = v67;
    *(_QWORD *)(v83[7] + 8 * v76) = MEMORY[0x24BEE4AF8];
    v86 = v83[2];
    v87 = __OFADD__(v86, 1);
    v88 = v86 + 1;
    if (v87)
      goto LABEL_35;
    v83[2] = v88;
    goto LABEL_25;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23B1C7418();
  __break(1u);
}

uint64_t sub_23AFDC8C0()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 184) + 16);
}

uint64_t sub_23AFDC8CC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23AFDC900(void *a1)
{
  uint64_t v1;

  sub_23ACC524C(a1, *(void (**)(_QWORD, void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23AFDC910()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AAB47B0(*(_QWORD *)(v0 + 56));
  return swift_deallocObject();
}

void sub_23AFDC944(void *a1)
{
  uint64_t v1;

  sub_23ACC5BDC(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23AFDC958()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23AFDC994(void *a1)
{
  uint64_t v1;

  sub_23ACC5AB4(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, void *))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t, _QWORD))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23AFDC9A4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23AFDC9D0(void *a1)
{
  uint64_t v1;

  sub_23ACC2DA8(a1, *(void (**)(uint64_t, void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23AFDC9DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFDCA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  char v3;

  result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(v0 + 16) + 24) + 472))(*(_QWORD *)(v0 + 24));
  if (v1)
    return v3 & 1 | 0x300u;
  return result;
}

uint64_t sub_23AFDCA40()
{
  return swift_deallocObject();
}

uint64_t sub_23AFDCA54(uint64_t a1)
{
  uint64_t v1;

  return sub_23AFD0D54(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t objectdestroy_246Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23AAB47B0(*(_QWORD *)(v0 + 56));
  swift_release();
  return swift_deallocObject();
}

void sub_23AFDCAC4(void *a1)
{
  uint64_t v1;

  sub_23AFD0DD8(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void (**)(uint64_t))(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t objectdestroy_253Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23AAB47B0(*(_QWORD *)(v0 + 56));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AFDCB48()
{
  uint64_t v0;

  sub_23AFD12B8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(uint64_t (**)(uint64_t))(v0 + 72), *(_QWORD *)(v0 + 80), *(void (**)(void *))(v0 + 88), *(_QWORD *)(v0 + 96));
}

id sub_23AFDCB88@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_2542E6C70);
  *a1 = v2;
  return v2;
}

void destroy for DatabaseError(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 >= 8)
    v1 = *(_DWORD *)a1 + 8;
  switch(v1)
  {
    case 1u:
    case 2u:

      break;
    case 4u:
      if (*(_QWORD *)(a1 + 24))
        __swift_destroy_boxed_opaque_existential_1(a1);
      goto LABEL_7;
    case 5u:
    case 6u:
    case 7u:
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for DatabaseError(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v4 = *((unsigned __int8 *)a2 + 48);
  if (v4 >= 8)
    v4 = *(_DWORD *)a2 + 8;
  switch(v4)
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
      *(_BYTE *)(a1 + 48) = 0;
      return a1;
    case 1u:
      v7 = *a2;
      v8 = (id)*a2;
      *(_QWORD *)a1 = v7;
      v6 = 1;
      goto LABEL_9;
    case 2u:
      v9 = (id)*a2;
      v10 = (id)*a2;
      *(_QWORD *)a1 = v9;
      v6 = 2;
      goto LABEL_9;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v6 = 3;
      goto LABEL_9;
    case 4u:
      v11 = a2[3];
      if (v11)
      {
        *(_QWORD *)(a1 + 24) = v11;
        (**(void (***)(uint64_t, uint64_t *))(v11 - 8))(a1, a2);
      }
      else
      {
        v16 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v16;
      }
      v17 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v17;
      v13 = 4;
      goto LABEL_17;
    case 5u:
      v12 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v12;
      v13 = 5;
      goto LABEL_17;
    case 6u:
      v14 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v14;
      v13 = 6;
      goto LABEL_17;
    case 7u:
      v15 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v15;
      v13 = 7;
LABEL_17:
      *(_BYTE *)(a1 + 48) = v13;
      swift_bridgeObjectRetain();
      break;
    default:
      v5 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      v6 = *((_BYTE *)a2 + 48);
LABEL_9:
      *(_BYTE *)(a1 + 48) = v6;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for DatabaseError(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 v17;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 8)
      v4 = *(_DWORD *)a1 + 8;
    switch(v4)
    {
      case 1u:
      case 2u:

        break;
      case 4u:
        if (*(_QWORD *)(a1 + 24))
          __swift_destroy_boxed_opaque_existential_1(a1);
        goto LABEL_8;
      case 5u:
      case 6u:
      case 7u:
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v5 = *((unsigned __int8 *)a2 + 48);
    if (v5 >= 8)
      v5 = *(_DWORD *)a2 + 8;
    switch(v5)
    {
      case 0u:
        v6 = *a2;
        *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
        *(_OWORD *)a1 = v6;
        *(_BYTE *)(a1 + 48) = 0;
        return a1;
      case 1u:
        v10 = *(void **)a2;
        v11 = v10;
        *(_QWORD *)a1 = v10;
        *(_BYTE *)(a1 + 48) = 1;
        return a1;
      case 2u:
        v12 = *(void **)a2;
        v13 = v12;
        *(_QWORD *)a1 = v12;
        *(_BYTE *)(a1 + 48) = 2;
        return a1;
      case 3u:
        v14 = *a2;
        *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)a1 = v14;
        *(_BYTE *)(a1 + 48) = 3;
        return a1;
      case 4u:
        v15 = *((_QWORD *)a2 + 3);
        if (v15)
        {
          *(_QWORD *)(a1 + 24) = v15;
          (**(void (***)(uint64_t, __int128 *))(v15 - 8))(a1, a2);
        }
        else
        {
          v17 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v17;
        }
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        v16 = 4;
        goto LABEL_24;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v16 = 5;
        goto LABEL_24;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v16 = 6;
        goto LABEL_24;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v16 = 7;
LABEL_24:
        *(_BYTE *)(a1 + 48) = v16;
        swift_bridgeObjectRetain();
        break;
      default:
        v7 = *a2;
        v8 = a2[1];
        v9 = a2[2];
        *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = v9;
        *(_OWORD *)a1 = v7;
        break;
    }
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DatabaseError(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 8)
      v4 = *(_DWORD *)a1 + 8;
    switch(v4)
    {
      case 1u:
      case 2u:

        break;
      case 4u:
        if (*(_QWORD *)(a1 + 24))
          __swift_destroy_boxed_opaque_existential_1(a1);
        goto LABEL_8;
      case 5u:
      case 6u:
      case 7u:
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 8)
      v5 = *(_DWORD *)a2 + 8;
    switch(v5)
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_BYTE *)(a1 + 48) = 0;
        return a1;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = 1;
        goto LABEL_21;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = 2;
        goto LABEL_21;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v7 = 3;
        goto LABEL_21;
      case 4u:
        v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v7 = 4;
        goto LABEL_21;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v7 = 5;
        goto LABEL_21;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v7 = 6;
        goto LABEL_21;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v7 = 7;
        goto LABEL_21;
      default:
        v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v7 = *(_BYTE *)(a2 + 48);
LABEL_21:
        *(_BYTE *)(a1 + 48) = v7;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 9)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DatabaseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 248;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_23AFDD190(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 8)
    return (*(_DWORD *)a1 + 8);
  return result;
}

uint64_t sub_23AFDD1AC(uint64_t result, unsigned int a2)
{
  if (a2 > 7)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 8;
    LOBYTE(a2) = 8;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DatabaseError()
{
  return &type metadata for DatabaseError;
}

uint64_t storeEnumTagSinglePayload for DBCounters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AFDD230 + 4 * byte_23B1E1103[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AFDD264 + 4 * byte_23B1E10FE[v4]))();
}

uint64_t sub_23AFDD264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFDD26C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AFDD274);
  return result;
}

uint64_t sub_23AFDD280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AFDD288);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AFDD28C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFDD294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DBCounters.CodingKeys()
{
  return &type metadata for DBCounters.CodingKeys;
}

uint64_t sub_23AFDD2B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = sub_23B1C6C98();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23AFDD358(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  uint64_t v15;
  uint64_t v16;
  const void *v17;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  if (*(_DWORD *)(v8 + 84))
    v11 = *(_QWORD *)(v8 + 64);
  else
    v11 = *(_QWORD *)(v8 + 64) + 1;
  v12 = v9 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v11 + (v10 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    v17 = (const void *)(((unint64_t)a2 + v10) & v16);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v17, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v16), v17, v11);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v16, v17, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v10) & v16, 0, 1, v5);
    }
    *(_QWORD *)(((((unint64_t)a1 + v10) & v16) + v11 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + v11 + 7) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_23AFDD4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(v3 - 8);
  v8 = (v6 + a1 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v3);
  return swift_release();
}

uint64_t sub_23AFDD58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (void *)((v10 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v5))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v5);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  *(_QWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_23AFDD6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (void *)((v10 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v5);
  v15 = v13(v12, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  *(_QWORD *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23AFDD82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (void *)((v10 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v5))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v5);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  *(_QWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23AFDD94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (void *)((v10 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v5);
  v15 = v13(v12, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  *(_QWORD *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_23AFDDAC0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = v11;
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  v13 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v13;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = *(_QWORD *)(v7 + 64) + v14;
  v16 = v13 + 7;
  if (v12 < a2)
  {
    if (((((v16 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v12 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X4 }
  }
  if (v8 == v12)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), AssociatedTypeWitness);
  v21 = (v15 + a1) & ~v14;
  if (v11 == v12)
  {
    if (v10 < 2)
      return 0;
    v23 = (*(uint64_t (**)(uint64_t))(v9 + 48))(v21);
    if (v23 >= 2)
      return v23 - 1;
    else
      return 0;
  }
  else
  {
    v22 = *(_QWORD *)((v16 + v21) & 0xFFFFFFFFFFFFF8);
    if (v22 >= 0xFFFFFFFF)
      LODWORD(v22) = -1;
    if ((v22 + 1) >= 2)
      return v22;
    else
      return 0;
  }
}

void sub_23AFDDC88(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = 0;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_QWORD *)(v7 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= *(_DWORD *)(v9 + 84))
    v13 = *(_DWORD *)(v9 + 84);
  else
    v13 = v12;
  if (v13 <= 0x7FFFFFFE)
    v13 = 2147483646;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v16 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v16;
  v15 = *(_QWORD *)(v9 + 64) + v14;
  if (v13 < a3)
  {
    if ((((_DWORD)v16 + 7 + (v15 & ~(_DWORD)v14)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v17 = a3 - v13 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v8 = v18;
    else
      v8 = 0;
  }
  if (a2 > v13)
  {
    if ((((_DWORD)v16 + 7 + (v15 & ~(_DWORD)v14)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v19 = ~v13 + a2;
      bzero(a1, ((v16 + 7 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

void sub_23AFDDDCC(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  *(_BYTE *)(v10 + v11) = 0;
  if ((_DWORD)v9)
  {
    if ((_DWORD)a2 == v4)
    {
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 56);
      v13 = v10;
      v14 = v9;
      a1 = a2;
LABEL_6:
      v12(v13, v14, a1);
      return;
    }
    v13 = (v7 + v10) & v8;
    if (v5 == v4)
    {
      v14 = (v9 + 1);
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 56);
      goto LABEL_6;
    }
    v15 = (_QWORD *)((v6 + v13) & 0xFFFFFFFFFFFFFFF8);
    if (v9 > 0x7FFFFFFE)
    {
      *v15 = 0;
      *(_DWORD *)v15 = v9 - 0x7FFFFFFF;
    }
    else
    {
      *v15 = v9;
    }
  }
}

unint64_t sub_23AFDDE94()
{
  unint64_t result;

  result = qword_2569E7B50;
  if (!qword_2569E7B50)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E16D0, &type metadata for DBCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7B50);
  }
  return result;
}

unint64_t sub_23AFDDEE0()
{
  unint64_t result;

  result = qword_2569E7B60;
  if (!qword_2569E7B60)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1640, &type metadata for DBCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7B60);
  }
  return result;
}

unint64_t sub_23AFDDF28()
{
  unint64_t result;

  result = qword_2569E7B68;
  if (!qword_2569E7B68)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1668, &type metadata for DBCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7B68);
  }
  return result;
}

uint64_t sub_23AFDDF6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F436873756C66 && a2 == 0xEA0000000000746ELL;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461447465736572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23AFDE074()
{
  unint64_t result;

  result = qword_2569E7B70;
  if (!qword_2569E7B70)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E16F8, &type metadata for DatabaseError);
    atomic_store(result, (unint64_t *)&qword_2569E7B70);
  }
  return result;
}

uint64_t sub_23AFDE178()
{
  return sub_23AFDB33C();
}

unint64_t sub_23AFDE194()
{
  unint64_t result;

  result = qword_2569E7BB0;
  if (!qword_2569E7BB0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1A78, &_s9SQLFieldsON_3);
    atomic_store(result, (unint64_t *)&qword_2569E7BB0);
  }
  return result;
}

uint64_t sub_23AFDE1D8()
{
  return sub_23AFDF49C(qword_2569E7BB8, MEMORY[0x24BEE12C8]);
}

void sub_23AFDE1FC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23AFDE238()
{
  sub_23B1C64A0();
  return swift_bridgeObjectRelease();
}

void sub_23AFDE348(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23AFDE384()
{
  sub_23B1C64A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AFDE474()
{
  sub_23B1C74A8();
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  return sub_23B1C74E4();
}

void sub_23AFDE510(uint64_t a1, char a2)
{
  sub_23B1C74A8();
  __asm { BR              X10 }
}

uint64_t sub_23AFDE558()
{
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  return sub_23B1C74E4();
}

uint64_t sub_23AFDE65C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AFDE68C + 4 * byte_23B1E1A41[a1]))(0x6574617473, 0xE500000000000000);
}

uint64_t sub_23AFDE68C()
{
  return 0x6F635F7972746572;
}

uint64_t sub_23AFDE6AC()
{
  return 0x7465725F7478656ELL;
}

uint64_t sub_23AFDE6D4()
{
  return 0x7272655F7473616CLL;
}

uint64_t sub_23AFDE6F8()
{
  return 0x7272655F7473616CLL;
}

uint64_t sub_23AFDE714()
{
  return 0x797469726F697270;
}

unint64_t sub_23AFDE72C()
{
  return 0xD000000000000011;
}

unint64_t sub_23AFDE748()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23AFDE768(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AFDE798 + 4 * byte_23B1E1A49[a1]))(0x6574617473, 0xE500000000000000);
}

uint64_t sub_23AFDE798()
{
  return 0x6F635F7972746572;
}

uint64_t sub_23AFDE7B8()
{
  return 0x7465725F7478656ELL;
}

uint64_t sub_23AFDE7E0()
{
  return 0x7272655F7473616CLL;
}

uint64_t sub_23AFDE804()
{
  return 0x7272655F7473616CLL;
}

uint64_t sub_23AFDE820()
{
  return 0x797469726F697270;
}

unint64_t sub_23AFDE838()
{
  return 0xD000000000000011;
}

unint64_t sub_23AFDE854()
{
  return 0xD00000000000001ALL;
}

void sub_23AFDE874(char *a1)
{
  sub_23AC37E30(*a1);
}

void sub_23AFDE880()
{
  char *v0;

  sub_23AFDE510(0, *v0);
}

void sub_23AFDE88C(uint64_t a1)
{
  char *v1;

  sub_23AFDE348(a1, *v1);
}

void sub_23AFDE894(uint64_t a1)
{
  char *v1;

  sub_23AFDE510(a1, *v1);
}

uint64_t sub_23AFDE89C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AFDF2D4();
  *a1 = result;
  return result;
}

uint64_t sub_23AFDE8C8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23AFDE768(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_23AFDE8F0(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC5F0;
}

uint64_t sub_23AFDE900()
{
  unsigned __int8 *v0;

  return sub_23AFDE65C(*v0);
}

void sub_23AFDE908(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23AFDE944()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[16];

  v1 = *v0;
  v6[3] = MEMORY[0x24BEE1768];
  v6[0] = v1;
  v2 = sub_23AA94C90((uint64_t)v6);
  v4 = v3;
  sub_23AA94C08((uint64_t)v6);
  if (!v4)
  {
    sub_23B1C704C();
    __break(1u);
    JUMPOUT(0x23AFDEA84);
  }
  return v2;
}

void sub_23AFDEB5C(char a1)
{
  __asm { BR              X10 }
}

id sub_23AFDEBA0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id result;

  v20[3] = &type metadata for NSecTimestamp;
  result = objc_msgSend(v22, sel_longAtIndex_, v21);
  *v20 = result;
  return result;
}

void sub_23AFDEDF8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  _BYTE v27[3];

  LOBYTE(v20) = 0;
  sub_23AA84870(a1, (uint64_t)&type metadata for JobThrottlingState);
  sub_23AA94830((uint64_t)&v20, (uint64_t)&type metadata for JobThrottlingState, a1, (uint64_t)&type metadata for JobThrottlingState, a2);
  if (!v3)
  {
    v7 = v27[2];
    LOBYTE(v20) = 5;
    sub_23AA84870(a1, (uint64_t)&type metadata for JobSchedulingPriority);
    sub_23AA94830((uint64_t)&v20, (uint64_t)&type metadata for JobSchedulingPriority, a1, (uint64_t)&type metadata for JobSchedulingPriority, a2);
    v8 = v25;
    LOBYTE(v20) = 1;
    v9 = MEMORY[0x24BEE1768];
    sub_23AA84870(a1, MEMORY[0x24BEE1768]);
    sub_23AA94830((uint64_t)&v20, v9, a1, v9, a2);
    v10 = v24;
    LOBYTE(v20) = 2;
    sub_23AA84870(a1, (uint64_t)&type metadata for NSecTimestamp);
    sub_23AA94830((uint64_t)&v20, (uint64_t)&type metadata for NSecTimestamp, a1, (uint64_t)&type metadata for NSecTimestamp, a2);
    v11 = v23;
    LOBYTE(v20) = 3;
    sub_23AA94830((uint64_t)&v20, (uint64_t)&type metadata for NSecTimestamp, a1, (uint64_t)&type metadata for NSecTimestamp, a2);
    v18 = v11;
    v19 = v22;
    LOBYTE(v20) = 4;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7700);
    sub_23AA84870(a1, v12);
    sub_23AA94830((uint64_t)&v20, v12, a1, v12, a2);
    v17 = v21;
    LOBYTE(v20) = 6;
    sub_23AA84870(a1, (uint64_t)&type metadata for JobThrottlingDomainWideError);
    sub_23AA94830((uint64_t)&v20, (uint64_t)&type metadata for JobThrottlingDomainWideError, a1, (uint64_t)&type metadata for JobThrottlingDomainWideError, a2);
    v26 = v27[1];
    v27[0] = 7;
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7460);
    sub_23AA84870(a1, v13);
    sub_23AA94830((uint64_t)v27, v13, a1, v13, a2);
    v14 = v20;
    v15 = v26;
    if (v26 <= 0xB && ((1 << v26) & 0x860) != 0)
      v16 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v16 = v18;
    *(_BYTE *)a3 = v7;
    *(_QWORD *)(a3 + 8) = v8;
    *(_QWORD *)(a3 + 16) = v10;
    *(_QWORD *)(a3 + 24) = v16;
    *(_QWORD *)(a3 + 32) = v19;
    *(_QWORD *)(a3 + 40) = v17;
    *(_BYTE *)(a3 + 48) = v15;
    *(_OWORD *)(a3 + 56) = v14;
  }
}

void sub_23AFDF108(char *a1)
{
  sub_23AFDE908(*a1);
}

void sub_23AFDF14C(char *a1)
{
  sub_23AFDEB5C(*a1);
}

__n128 sub_23AFDF164@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v6;
  _OWORD v7[4];
  uint64_t v8;

  sub_23AFDEDF8(a1, a2, (uint64_t)v7);
  if (!v3)
  {
    v6 = v7[3];
    *(_OWORD *)(a3 + 32) = v7[2];
    *(_OWORD *)(a3 + 48) = v6;
    *(_QWORD *)(a3 + 64) = v8;
    result = (__n128)v7[1];
    *(_OWORD *)a3 = v7[0];
    *(__n128 *)(a3 + 16) = result;
  }
  return result;
}

unint64_t sub_23AFDF1B4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23AFDF1E0();
  result = sub_23AEB4138();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23AFDF1E0()
{
  unint64_t result;

  result = qword_2569E7BF0;
  if (!qword_2569E7BF0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1AFC, &_s9SQLFieldsON_3);
    atomic_store(result, (unint64_t *)&qword_2569E7BF0);
  }
  return result;
}

unint64_t sub_23AFDF228()
{
  unint64_t result;

  result = qword_2542E05D0[0];
  if (!qword_2542E05D0[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1AD4, &_s9SQLFieldsON_3);
    atomic_store(result, qword_2542E05D0);
  }
  return result;
}

unint64_t sub_23AFDF26C(uint64_t a1)
{
  unint64_t result;

  result = sub_23AFDF290();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23AFDF290()
{
  unint64_t result;

  result = qword_2569E7BF8;
  if (!qword_2569E7BF8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1A5C, &type metadata for JobThrottle);
    atomic_store(result, (unint64_t *)&qword_2569E7BF8);
  }
  return result;
}

uint64_t sub_23AFDF2D4()
{
  unint64_t v0;

  v0 = sub_23B1C7118();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t _s9SQLFieldsOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9SQLFieldsOwst_3(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23AFDF3F8 + 4 * byte_23B1E1A56[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23AFDF42C + 4 * byte_23B1E1A51[v4]))();
}

uint64_t sub_23AFDF42C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFDF434(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AFDF43CLL);
  return result;
}

uint64_t sub_23AFDF448(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AFDF450);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23AFDF454(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFDF45C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_4()
{
  return &_s9SQLFieldsON_3;
}

uint64_t sub_23AFDF478()
{
  return sub_23AFDF49C(&qword_2569E7C00, MEMORY[0x24BEE12E0]);
}

uint64_t sub_23AFDF49C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E54A0);
    result = MEMORY[0x23B8613CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23AFDF4E0()
{
  uint64_t v1;

  sub_23B1C6650();
  return v1;
}

uint64_t sub_23AFDF504(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    v14 = objc_msgSend(a1, sel_bindObjectParameter_, 0);
    v15 = sub_23B1C63E0();

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
    v15 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 32))(a1, v5, a3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return v15;
}

void sub_23AFDF648(uint64_t a1, uint64_t a2)
{
  sub_23AFDFAB0(a1, a2, (void (*)(uint64_t, _OWORD *))_s9SQLFieldsOMa);
}

uint64_t sub_23AFDF65C()
{
  swift_getAssociatedTypeWitness();
  return sub_23B1C6F14();
}

void sub_23AFDF6A8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC8C0;
}

uint64_t sub_23AFDF6B8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7C70);
  return sub_23B1C644C();
}

uint64_t sub_23AFDF6EC()
{
  sub_23AFE0170();
  return sub_23B1C7430();
}

uint64_t sub_23AFDF714()
{
  sub_23AFE0170();
  return sub_23B1C7424();
}

void sub_23AFDF73C()
{
  qword_2542DE6D8 = 0;
}

void *sub_23AFDF74C()
{
  void *result;

  result = (void *)sub_23AAEA128(MEMORY[0x24BEE4AF8]);
  off_2542E4780 = result;
  return result;
}

void *sub_23AFDF770()
{
  void *result;

  result = (void *)sub_23AAE9EB4(MEMORY[0x24BEE4AF8]);
  off_2542E48B8 = result;
  return result;
}

uint64_t sub_23AFDF794(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_23AFDF7B8@<X0>(sqlite3_value *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;

  v9 = sub_23B1C6C98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - v11;
  if (sqlite3_value_type(a1) == 5)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a4, 1, 1, a2);
  result = (*(uint64_t (**)(sqlite3_value *, uint64_t, uint64_t))(a3 + 24))(a1, a2, a3);
  if (!v4)
  {
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v12, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v12, v9);
  }
  return result;
}

uint64_t sub_23AFDF8BC(uint64_t a1, uint64_t a2)
{
  return sub_23AFDF794(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

uint64_t sub_23AFDF8C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_23AA9A9B8(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), a5);
}

uint64_t sub_23AFDF8E4@<X0>(sqlite3_value *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23AFDF7B8(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t sub_23AFDF900(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23AFDF504(a1, a2, *(_QWORD *)(a3 - 8));
}

void sub_23AFDF908(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SQLCodableAccessorWrapper();
}

uint64_t sub_23AFDF96C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 52));
  *v4 = v2;
  v4[1] = v1;
  return result;
}

uint64_t sub_23AFDF994()
{
  sub_23AFDFB2C();
  return sub_23AFDF65C();
}

void sub_23AFDF9D8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC938;
}

void sub_23AFDF9E8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC910;
}

void sub_23AFDF9F8()
{
  type metadata accessor for Job();
}

uint64_t sub_23AFDFA28()
{
  sub_23AFDFA58();
  return sub_23AFDF65C();
}

unint64_t sub_23AFDFA58()
{
  unint64_t result;

  result = qword_2542E3230;
  if (!qword_2542E3230)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E3CA0, &type metadata for JobSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E3230);
  }
  return result;
}

void sub_23AFDFA9C(uint64_t a1, uint64_t a2)
{
  sub_23AFDFAB0(a1, a2, (void (*)(uint64_t, _OWORD *))_s9SQLFieldsOMa_5);
}

void sub_23AFDFAB0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _OWORD *))
{
  __int128 v3;
  _OWORD v4[2];

  v3 = *(_OWORD *)(a1 + 32);
  v4[0] = *(_OWORD *)(a1 + 16);
  v4[1] = v3;
  a3(255, v4);
  JUMPOUT(0x23AFDFAE8);
}

void sub_23AFDFB1C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC618;
}

unint64_t sub_23AFDFB2C()
{
  unint64_t result;

  result = qword_2569E7C08;
  if (!qword_2569E7C08)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E3C68, &type metadata for ItemStateSQLFields);
    atomic_store(result, (unint64_t *)&qword_2569E7C08);
  }
  return result;
}

uint64_t sub_23AFDFB70()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23AFDFBE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_23AFDFC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23AFDFD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23AFDFD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_23AFDFDC4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23AFDFE40 + 4 * byte_23B1E1BC0[v10]))();
  }
}

void sub_23AFDFEC4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_23AFDFFB8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23AFE0030);
}

void sub_23AFDFFC0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x23AFDFFC8);
  JUMPOUT(0x23AFE0030);
}

void sub_23AFE0008()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AFE0030);
}

void sub_23AFE0010()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AFE0030);
}

uint64_t sub_23AFE0018(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x23AFE0030);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x23AFE002CLL);
    JUMPOUT(0x23AFE0024);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t storeEnumTagSinglePayload for SQLDecodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AFE0094 + 4 * byte_23B1E1BD4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AFE00C8 + 4 * byte_23B1E1BCF[v4]))();
}

uint64_t sub_23AFE00C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFE00D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AFE00D8);
  return result;
}

uint64_t sub_23AFE00E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AFE00ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AFE00F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFE00F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SQLDecodingError()
{
  return &type metadata for SQLDecodingError;
}

unint64_t sub_23AFE011C()
{
  unint64_t result;

  result = qword_2569E7C10;
  if (!qword_2569E7C10)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1DA4, &type metadata for SQLDecodingError);
    atomic_store(result, (unint64_t *)&qword_2569E7C10);
  }
  return result;
}

uint64_t sub_23AFE0160(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_23AFE0168(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

unint64_t sub_23AFE0170()
{
  unint64_t result;

  result = qword_2569E7C68;
  if (!qword_2569E7C68)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E1D24, &type metadata for SQLDecodingError);
    atomic_store(result, (unint64_t *)&qword_2569E7C68);
  }
  return result;
}

uint64_t sub_23AFE01B4()
{
  return fpfs_xattr_is_syncable();
}

uint64_t sub_23AFE01C8(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  int v16;
  uint64_t v17;
  uint64_t v18;

  v16 = a4 & 1;
  v17 = swift_allocObject();
  sub_23AFE1420(a1, a2, a3, v16, v18, a6, a7, a8 & 0x1FFFFFFFFLL, a9, a10);
  return v17;
}

uint64_t sub_23AFE0264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v4 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  sub_23AA7E38C(&qword_2542E21F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v7 = 0;
  while ((sub_23B1C63A4() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7)
      return 0;
  }
  return v7;
}

uint64_t sub_23AFE0330()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23AFE0338@<X0>(uint64_t a1@<X8>)
{
  return sub_23AFE0360(&OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, a1);
}

uint64_t sub_23AFE0344()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23AFE0354@<X0>(uint64_t a1@<X8>)
{
  return sub_23AFE0360(&OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, a1);
}

uint64_t sub_23AFE0360@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  v5 = sub_23B1C5A08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23AFE03A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  int v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t result;
  char v56;
  __darwin_ino64_t st_ino;
  _QWORD *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  int *v64;
  uint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  int v91;
  stat v92;
  uint64_t v93;

  v73 = a4;
  v75 = a1;
  v76 = a5;
  v93 = *MEMORY[0x24BDAC8D0];
  v71 = sub_23B1C5570();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v69 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v79 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v78 = (char *)&v68 - v11;
  v12 = sub_23B1C5A08();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v72 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v80 = (char *)&v68 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v68 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v68 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v74 = (char *)&v68 - v25;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = MEMORY[0x24BEE4AF8];
  v84 = v24;
  v85 = v13;
  if (v26)
  {
    LODWORD(v77) = a3;
    *(_QWORD *)&v92.st_dev = MEMORY[0x24BEE4AF8];
    sub_23ADACE2C(0, v26, 0);
    v83 = (char *)((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v28 = &v83[a2];
    v29 = *(_QWORD *)(v13 + 72);
    v82 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    do
    {
      v82(v20, v28, v12);
      v30 = (void *)sub_23B1C5954();
      v31 = objc_msgSend(v30, sel_fp_realpathURL);

      sub_23B1C59CC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
      v27 = *(_QWORD *)&v92.st_dev;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23ADACE2C(0, *(_QWORD *)(v27 + 16) + 1, 1);
        v27 = *(_QWORD *)&v92.st_dev;
      }
      v33 = *(_QWORD *)(v27 + 16);
      v32 = *(_QWORD *)(v27 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_23ADACE2C(v32 > 1, v33 + 1, 1);
        v27 = *(_QWORD *)&v92.st_dev;
      }
      *(_QWORD *)(v27 + 16) = v33 + 1;
      v34 = &v83[v27 + v33 * v29];
      v13 = v85;
      v12 = v84;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v34, v23, v84);
      *(_QWORD *)&v92.st_dev = v27;
      v28 += v29;
      --v26;
    }
    while (v26);
    a3 = v77;
  }
  v91 = a3;
  v35 = *(_QWORD *)(v27 + 16);
  v36 = (uint64_t)v78;
  if (!v35)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v78, 1, 1, v12);
LABEL_23:
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v36, (uint64_t *)&unk_2542E6740);
    result = sub_23B1C5918();
    v54 = 0;
    st_ino = 0;
    v56 = 1;
    v27 = MEMORY[0x24BEE4AF8];
    v53 = MEMORY[0x24BEE4AF8];
LABEL_24:
    v58 = v76;
    *v76 = v27;
    v58[1] = v53;
    *((_DWORD *)v58 + 4) = v54;
    v58[3] = st_ino;
    *((_BYTE *)v58 + 32) = v56;
    return result;
  }
  v37 = v85;
  v38 = (char *)(v27 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)));
  v82 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  v82(v78, v38, v12);
  v83 = *(char **)(v37 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v83)(v36, 0, 1, v12);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  v40 = v39(v36, 1, v12);
  v41 = v79;
  if (v40 == 1)
    goto LABEL_23;
  v78 = *(char **)(v37 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v78)(v74, v36, v12);
  v90 = MEMORY[0x24BEE4AF8];
  v77 = *(_QWORD *)(v37 + 72);
  swift_bridgeObjectRetain();
  v42 = v80;
  while (1)
  {
    v82(v41, v38, v12);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v83)(v41, 0, 1, v12);
    if (v39((uint64_t)v41, 1, v12) == 1)
      break;
    ((void (*)(char *, char *, uint64_t))v78)(v42, v41, v12);
    v43 = sub_23B1C59E4();
    v45 = v44;
    MEMORY[0x24BDAC7A8](v43);
    v64 = &v91;
    v65 = &v90;
    v67 = (unint64_t)v42;
    LOBYTE(v92.st_dev) = 1;
    swift_bridgeObjectRetain();
    v46 = v43;
    v47 = v81;
    sub_23B0E1010(4294967294, v46, v45, 1048832, 0, 0, (uint64_t)&v92, (uint64_t)sub_23AFE38C4, (uint64_t)(&v68 - 6));
    v81 = v47;
    if (v47)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v59 = *(void (**)(char *, uint64_t))(v85 + 8);
      v60 = v84;
      v59(v74, v84);
      v59(v80, v60);
      return swift_bridgeObjectRelease();
    }
    if ((v92.st_dev & 1) != 0)
      __break(1u);
    swift_bridgeObjectRelease();
    v12 = v84;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v80, v84);
    v38 += v77;
    --v35;
    v41 = v79;
    if (!v35)
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v83)(v79, 1, 1, v12);
      break;
    }
  }
  swift_bridgeObjectRelease();
  v48 = v72;
  v49 = v85;
  v50 = v74;
  if (qword_2542E5360 != -1)
    swift_once();
  *(_QWORD *)&v92.st_dev = qword_2542EDE40;
  v92.st_ino = *(_QWORD *)algn_2542EDE48;
  v88 = 47;
  v89 = 0xE100000000000000;
  v86 = 58;
  v87 = 0xE100000000000000;
  v66 = sub_23AAA420C();
  v67 = v66;
  v64 = (int *)MEMORY[0x24BEE0D00];
  v65 = (uint64_t *)v66;
  sub_23B1C6CF8();
  sub_23B1C5978();
  swift_bridgeObjectRelease();
  memset(&v92, 0, 28);
  memset(&v92.st_atimespec, 0, 112);
  sub_23B1C59E4();
  v51 = sub_23B1C6458();
  swift_bridgeObjectRelease();
  v52 = lstat((const char *)(v51 + 32), &v92);
  swift_release();
  if (v52 < 0)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v12);
    v53 = v90;
    v54 = v91;
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v78)(v75, v48, v12);
    st_ino = 0;
    v56 = 1;
    goto LABEL_24;
  }
  if (v92.st_dev == v91)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v12);
    v53 = v90;
    v54 = v91;
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v78)(v75, v48, v12);
    v56 = 0;
    st_ino = v92.st_ino;
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  LODWORD(v88) = 18;
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
  v61 = v69;
  v62 = v71;
  sub_23B1C5864();
  sub_23B1C5558();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v61, v62);
  swift_willThrow();
  v63 = *(void (**)(char *, uint64_t))(v49 + 8);
  v63(v48, v12);
  v63(v50, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AFE0CCC(uint64_t a1, _DWORD *a2, uint64_t *a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  int v57;
  uint64_t *v58;
  uint64_t v59[2];

  v39 = a5;
  v59[1] = *MEMORY[0x24BDAC8D0];
  v40 = sub_23B1C5A08();
  v44 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23B1C5E4C();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C5570();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = 0;
  v46 = 0;
  v49 = 0;
  v48 = 0;
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = a1;
  v58 = &v46;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ACFEA08);
  if (!v5)
  {
    if (!*a2 || *a2 == (_DWORD)v46)
    {
      *a2 = v46;
      v18 = v47;
      v19 = (_QWORD *)*a3;
      result = swift_isUniquelyReferenced_nonNull_native();
      *a3 = (uint64_t)v19;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_23AF9A294(0, v19[2] + 1, 1, v19);
        v19 = (_QWORD *)result;
        *a3 = result;
      }
      v21 = v19[2];
      v20 = v19[3];
      if (v21 >= v20 >> 1)
      {
        result = (uint64_t)sub_23AF9A294((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
        v19 = (_QWORD *)result;
      }
      v19[2] = v21 + 1;
      v19[v21 + 4] = v18;
      *a3 = (uint64_t)v19;
      if ((a4 & 1) != 0)
      {
        MEMORY[0x24BDAC7A8](result);
        LODWORD(v37[-2]) = a1;
        sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AFE38E4);
        result = MEMORY[0x23B85E7BC](a1, 64, 3);
        if ((result & 0x80000000) != 0)
        {
          v22 = (id)fpfs_current_or_default_log();
          v23 = v41;
          sub_23B1C5E58();
          v24 = v44;
          v25 = v40;
          (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v11, v39, v40);
          v26 = sub_23B1C5E40();
          v27 = sub_23B1C6AA0();
          v28 = v27;
          if (os_log_type_enabled(v26, v27))
          {
            v29 = swift_slowAlloc();
            v39 = swift_slowAlloc();
            v59[0] = v39;
            *(_DWORD *)v29 = 136315394;
            v37[1] = v29 + 4;
            v38 = v28;
            v30 = (void *)sub_23B1C5954();
            v31 = objc_msgSend(v30, sel_fp_shortDescription);

            v32 = sub_23B1C63E0();
            v34 = v33;

            v45 = sub_23AABEC68(v32, v34, v59);
            sub_23B1C6CBC();
            swift_bridgeObjectRelease();
            v35 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v11, v25);
            *(_WORD *)(v29 + 12) = 1024;
            LODWORD(v45) = MEMORY[0x23B85E7A4](v35);
            sub_23B1C6CBC();
            _os_log_impl(&dword_23AA66000, v26, (os_log_type_t)v38, "Could not set protection class on %s: %d", (uint8_t *)v29, 0x12u);
            v36 = v39;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v36, -1, -1);
            MEMORY[0x23B8614BC](v29, -1, -1);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
          }

          return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v23, v43);
        }
      }
    }
    else
    {
      LODWORD(v59[0]) = 18;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_23AFE11F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, const void *a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  int v35;
  uint64_t v36;
  unsigned __int8 v37;

  v32 = a4;
  v31 = sub_23B1C5A08();
  v13 = *(_QWORD *)(v31 - 8);
  v14 = MEMORY[0x24BDAC7A8](v31);
  v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v27[-v17];
  *(_QWORD *)(v7 + 40) = 0;
  *(_BYTE *)(v7 + 48) = 1;
  *(_QWORD *)(v7 + 72) = sub_23AAF7D10(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v7 + 56) = a5;
  *(_DWORD *)(v7 + 64) = a6;
  *(_BYTE *)(v7 + 68) = BYTE4(a6) & 1;
  type metadata accessor for VFSLookupScope();
  _Block_copy(a5);
  v19 = v33;
  sub_23AFE03A0((uint64_t)v16, a1, a2, a7, v34);
  if (v19)
  {
    _Block_release(a5);
    swift_bridgeObjectRelease();
    swift_release();
    _Block_release(*(const void **)(v7 + 56));
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v7;
  }
  v20 = v34[0];
  v21 = v34[1];
  LODWORD(v33) = v35;
  v29 = v36;
  v28 = v37;
  swift_bridgeObjectRelease();
  v22 = *(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32);
  v30 = v18;
  v23 = v16;
  v24 = v31;
  result = v22(v18, v23, v31);
  *(_DWORD *)(v7 + 16) = v33;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs) = v20;
  if (*(_QWORD *)(v20 + 16))
  {
    result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(v7 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v20 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v24);
    *(_QWORD *)(v7 + 32) = v21;
    if (*(_QWORD *)(v21 + 16))
    {
      v26 = *(_QWORD *)(v21 + 32);
      _Block_release(a5);
      swift_release();
      *(_QWORD *)(v7 + 24) = v26;
      v22((_BYTE *)(v7 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL), v30, v24);
      *(_QWORD *)(v7 + 40) = v29;
      *(_WORD *)(v7 + 48) = v28;
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23AFE1420(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  v32 = a7;
  v33 = a6;
  v31 = a4;
  v30 = a3;
  v34 = a9;
  v35 = a10;
  v29 = sub_23B1C58E8();
  v14 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23B1C5A08();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v10 + 40) = 0;
  *(_BYTE *)(v10 + 48) = 1;
  *(_QWORD *)(v10 + 72) = sub_23AAF7D10(MEMORY[0x24BEE4AF8]);
  *(_DWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 32) = a1;
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
    v24 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v10 + 24) = v24;
  *(_QWORD *)(v10 + 40) = v30;
  *(_BYTE *)(v10 + 48) = v31 & 1;
  *(_QWORD *)(v10 + 56) = v32;
  *(_DWORD *)(v10 + 64) = a8;
  *(_BYTE *)(v10 + 68) = BYTE4(a8) & 1;
  v25 = v34;
  if (*(_QWORD *)(v34 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v23, v34 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), v20);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BDCD7A0], v29);
    sub_23B1C59F0();
  }
  swift_release();
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v26(v10 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v23, v20);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs) = v25;
  v26(v10 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, v35, v20);
  *(_BYTE *)(v10 + 49) = 0;
  return v10;
}

BOOL sub_23AFE1654(uint64_t a1, uint64_t a2)
{
  return sub_23AF1CA74(*(_QWORD **)(a1 + 32), *(_QWORD **)(a2 + 32)) && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16);
}

uint64_t sub_23AFE169C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MEMORY[0x23B85F02C](v0, MEMORY[0x24BEE4568]);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 35;
}

uint64_t sub_23AFE1750(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t sub_23AFE1760(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v4 = 0;
  v5 = 0;
  v7 = 0;
  v6 = 0;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = a1;
  v16 = &v4;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC374EC);
  if (!v2)
  {
    *(_QWORD *)(v1 + 40) = v5;
    *(_BYTE *)(v1 + 48) = 0;
  }
  return result;
}

uint64_t sub_23AFE17F0@<X0>(int a1@<W0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int v21;
  uint64_t *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v10 = 0;
  v11 = 0;
  v13 = 0;
  v12 = 0;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = a1;
  v22 = &v10;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ACFEA08);
  if (!v3)
  {
    v7 = WORD2(v10);
    v8 = sub_23B1C5EB8() & v7;
    result = sub_23B1C5EB8();
    if (v8 == (unsigned __int16)result)
    {
      MEMORY[0x24BDAC7A8](result);
      result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AB6CF4C);
      v9 = 0;
      *(_QWORD *)(a2 + 40) = v11;
      *(_BYTE *)(a2 + 48) = 0;
    }
    else
    {
      v9 = 1;
    }
    *a3 = v9;
  }
  return result;
}

uint64_t sub_23AFE1914@<X0>(_DWORD *a1@<X8>)
{
  void *v2;
  int dataless_fault_at;
  uint64_t result;
  _QWORD v5[6];

  sub_23B1C59E4();
  v5[4] = sub_23AFE01B4;
  v5[5] = 0;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_23AA7E744;
  v5[3] = &block_descriptor_30;
  v2 = _Block_copy(v5);
  swift_release();
  sub_23B1C6458();
  swift_bridgeObjectRelease();
  dataless_fault_at = fpfs_create_dataless_fault_at();
  swift_release();
  _Block_release(v2);
  *a1 = dataless_fault_at;
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23AFE1A20(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v5 = sub_23B1C5E4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AB6CEE0);
  if (!v2)
  {
    v17 = 0;
    v16 = 0;
    v19 = 0;
    v18 = 0;
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    MEMORY[0x24BDAC7A8](result);
    *((_DWORD *)&v16 - 4) = a1;
    *(&v16 - 1) = (uint64_t)&v16;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ACFEA08);
    *(_QWORD *)(a2 + 40) = v17;
    *(_BYTE *)(a2 + 48) = 0;
    v10 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v11 = sub_23B1C5E40();
    v12 = sub_23B1C6A94();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v13 = 134217984;
      v14 = *(_QWORD *)(a2 + 40);
      if (*(_BYTE *)(a2 + 48))
        v14 = 0;
      v16 = v14;
      sub_23B1C6CBC();
      swift_release();
      _os_log_impl(&dword_23AA66000, v11, v12, "🗑  created .Trash with fileID %llu", v13, 0xCu);
      MEMORY[0x23B8614BC](v13, -1, -1);

    }
    else
    {

      swift_release();
    }
    v15 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    MEMORY[0x24BDAC7A8](v15);
    *((_DWORD *)&v16 - 4) = a1;
    return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AFE387C);
  }
  return result;
}

uint64_t sub_23AFE1CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(unint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const void *v39;
  __int128 v40;

  v2 = v1;
  v4 = sub_23B1C5A08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  v9 = *(_QWORD *)(v2 + 32);
  if (*(_QWORD *)(v8 + 16) != *(_QWORD *)(v9 + 16))
    goto LABEL_11;
  swift_bridgeObjectRetain();
  v10 = sub_23AFE0264(a1, v8);
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_11;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5610);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_23B1D2330;
    *(_QWORD *)(result + 32) = *(_QWORD *)(v2 + 24);
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v40 = xmmword_23B1D2330;
      if (v10 < *(_QWORD *)(v9 + 16))
      {
        *(_QWORD *)(result + 40) = *(_QWORD *)(v9 + 8 * v10 + 32);
        LODWORD(v38) = *(_DWORD *)(v2 + 16);
        v37 = *(_QWORD *)(v2 + 40);
        LODWORD(v36) = *(unsigned __int8 *)(v2 + 48);
        v39 = *(const void **)(v2 + 56);
        v34 = *(unsigned int *)(v2 + 64);
        v35 = result;
        v33 = *(unsigned __int8 *)(v2 + 68);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
        v14 = *(_QWORD *)(v5 + 72);
        v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = v40;
        v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
        result = v17(v16 + v15, v2 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v4);
        if (v10 < *(_QWORD *)(v8 + 16))
        {
          v17(v16 + v15 + v14, v8 + v15 + v14 * v10, v4);
          v17((unint64_t)v7, v2 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, v4);
          type metadata accessor for VFSLookupScope();
          v18 = swift_allocObject();
          v19 = (uint64_t)v39;
          _Block_copy(v39);
          v21 = 0x100000000;
          if (!v33)
            v21 = 0;
          sub_23AFE1420(v35, v38, v37, v36, v20, 0, v19, v21 | v34, v16, v7);
LABEL_17:
          swift_beginAccess();
          v31 = *(_QWORD *)(v2 + 72);
          swift_beginAccess();
          *(_QWORD *)(v18 + 72) = v31;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return v18;
        }
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v22 = *(_QWORD *)(v8 + 16);
  if (v22 == 1)
  {
LABEL_11:
    swift_retain();
    return v2;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5610);
  result = swift_allocObject();
  v40 = xmmword_23B1CA760;
  *(_OWORD *)(result + 16) = xmmword_23B1CA760;
  if (!*(_QWORD *)(v9 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v23 = result;
  *(_QWORD *)(result + 32) = *(_QWORD *)(v9 + 32);
  LODWORD(v39) = *(_DWORD *)(v2 + 16);
  v38 = *(_QWORD *)(v2 + 40);
  LODWORD(v37) = *(unsigned __int8 *)(v2 + 48);
  v24 = *(const void **)(v2 + 56);
  v36 = *(unsigned int *)(v2 + 64);
  LODWORD(v35) = *(unsigned __int8 *)(v2 + 68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
  v25 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = v40;
  if (v22)
  {
    v26 = result;
    v27 = v8 + v25;
    v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    v28(result + v25, v27, v4);
    v28((unint64_t)v7, v2 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, v4);
    type metadata accessor for VFSLookupScope();
    v18 = swift_allocObject();
    _Block_copy(v24);
    v30 = 0x100000000;
    if (!(_DWORD)v35)
      v30 = 0;
    sub_23AFE1420(v23, (int)v39, v38, v37, v29, 0, (uint64_t)v24, v30 | v36, v26, v7);
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_23AFE2074(int a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t *v41;
  char v42;
  uint64_t v43;
  char *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  char v128[16];
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  __int128 v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;

  v117 = a4;
  v116 = a3;
  v127 = a5;
  v124 = sub_23B1C5A08();
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v118 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v110 = (uint64_t)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v114 = (char *)&v106 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v12);
  v120 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4FB8);
  MEMORY[0x24BDAC7A8](v14);
  v121 = (uint64_t)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for VFSDetachedRootBookmark();
  v119 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v122 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v112 = *(_QWORD *)(v113 - 8);
  v17 = MEMORY[0x24BDAC7A8](v113);
  v115 = (uint64_t)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v106 - v19;
  v21 = type metadata accessor for VFSItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v111 = (char *)&v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v106 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v106 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v106 - v31;
  v33 = type metadata accessor for VFSFileTree(0);
  v34 = *(_QWORD *)(a2 + 56);
  v35 = *(unsigned int *)(a2 + 64);
  v36 = *(unsigned __int8 *)(a2 + 68);
  v129 = v33;
  v130 = a1;
  v132 = 0;
  v133 = 0;
  v126 = a2;
  v131 = a2;
  v134 = 2;
  v135 = xmmword_23B1CFCA0;
  v136 = -1;
  v137 = 0;
  v37 = v36 == 0;
  v38 = 0x100000000;
  if (v37)
    v38 = 0;
  v39 = v144;
  sub_23B1AA0D0(a1, 0, v34, v38 | v35, (uint64_t)sub_23AA8ABB4, (uint64_t)v128, (uint64_t)v20);
  if (v39)
  {
    v40 = v20;
    v41 = v39;
    LODWORD(v142) = sub_23B1C54A4();
    sub_23AB6CD48();
    v42 = sub_23B1C575C();

    if ((v42 & 1) == 0)
      return;

    v20 = v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v40, 1, 1, v21);
    goto LABEL_8;
  }
  v108 = v27;
  v106 = v33;
  v107 = a1;
  v144 = 0;
  v43 = v126;
  v109 = v32;
  v44 = *(char **)(v22 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v44)(v20, 1, v21) != 1)
  {
    v46 = (uint64_t)v109;
    sub_23AA94050((uint64_t)v20, (uint64_t)v109, type metadata accessor for VFSItem);
    v47 = v46 + *(int *)(v21 + 28);
    LOBYTE(v47) = *(_BYTE *)(v47 + *(int *)(type metadata accessor for ItemMetadata() + 72));
    v48 = (uint64_t)v30;
    sub_23AC03E78(v46, (uint64_t)v30);
    if ((v47 & 1) != 0)
    {
      v49 = *(_QWORD *)v30;
      v50 = v30[8];
      sub_23AA937BC(v48, type metadata accessor for VFSItem);
      v51 = (uint64_t)v108;
      sub_23AC03E78(v46, (uint64_t)v108);
      if (v49 || v50 != 2)
      {
        v52 = *(_QWORD *)v51;
        v53 = *(unsigned __int8 *)(v51 + 8);
        sub_23AA937BC(v51, type metadata accessor for VFSItem);
        if (v53 != 2 || v52 != 1)
        {
          v54 = v43;
          v55 = v123;
          v56 = (uint64_t)v120;
          v57 = v124;
          (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v120, v43 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v124);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v57);
          v58 = v121;
          v59 = v144;
          sub_23AD2AFBC(v107, v56, v121);
          if (v59)
          {

            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v58, 1, 1, v125);
            sub_23AA8A05C(v58, &qword_2542E4FB8);
            v60 = (uint64_t)v109;
            v61 = *(_QWORD *)v109;
            v62 = *((_QWORD *)v109 + 4);
            v63 = *((_QWORD *)v109 + 5);
            v64 = v109[8];
            swift_beginAccess();
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v140 = *(_QWORD *)(v54 + 72);
            *(_QWORD *)(v54 + 72) = 0x8000000000000000;
            sub_23AD270D4(0, 2, v62, v63, v61, v64, isUniquelyReferenced_nonNull_native);
            *(_QWORD *)(v54 + 72) = v140;
            swift_bridgeObjectRelease();
            swift_endAccess();
          }
          else
          {
            v120 = v44;
            v108 = (char *)v22;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v119 + 56))(v58, 0, 1, v125);
            sub_23AA94050(v58, v122, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
            v66 = sub_23B1C59E4();
            v68 = v67;
            v144 = &v106;
            MEMORY[0x24BDAC7A8](v66);
            *(&v106 - 6) = v106;
            *(&v106 - 5) = v43;
            v102 = 0;
            v103 = 0;
            LOBYTE(v104) = 2;
            v105 = 1;
            v69 = v112;
            v70 = (uint64_t)v114;
            v71 = v113;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 56))(v114, 1, 1, v113);
            swift_bridgeObjectRetain();
            v121 = v68;
            sub_23B0E2EA0(4294967294, v66, v68, 2129920, 0, 0, v70, (uint64_t)sub_23AABD5BC, (uint64_t)(&v106 - 8));
            v72 = v110;
            sub_23AA8EFC8(v70, v110, qword_2542E5250);
            v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v72, 1, v71);
            v74 = (uint64_t)v118;
            if (v73 == 1)
            {
              __break(1u);
              return;
            }
            v75 = v115;
            sub_23AA724E8(v72, v115, &qword_2542E72C0);
            sub_23AA8A05C(0, qword_2542E5250);
            swift_bridgeObjectRelease();
            v76 = v75;
            v77 = v122;
            v78 = (uint64_t)v111;
            v79 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v120)(v76, 1, v21);
            v144 = 0;
            if (v79 == 1)
            {
              sub_23AA8A05C(v76, &qword_2542E72C0);
              v87 = *(_QWORD *)v109;
              v88 = (uint64_t *)(v77 + *(int *)(v125 + 20));
              v89 = *v88;
              v90 = v88[1];
              v91 = v109[8];
              swift_beginAccess();
              swift_bridgeObjectRetain();
              v92 = swift_isUniquelyReferenced_nonNull_native();
              v140 = *(_QWORD *)(v54 + 72);
              *(_QWORD *)(v54 + 72) = 0x8000000000000000;
              sub_23AD270D4(0, 2, v89, v90, v87, v91, v92);
              *(_QWORD *)(v54 + 72) = v140;
              swift_bridgeObjectRelease();
              swift_endAccess();
            }
            else
            {
              sub_23AA94050(v76, v78, type metadata accessor for VFSItem);
              v121 = *(_QWORD *)v109;
              v80 = *(_QWORD *)v78;
              v81 = (uint64_t *)(v77 + *(int *)(v125 + 20));
              v82 = *v81;
              v83 = v81[1];
              v84 = *(_BYTE *)(v78 + 8);
              v85 = v109[8];
              swift_beginAccess();
              swift_bridgeObjectRetain();
              v86 = swift_isUniquelyReferenced_nonNull_native();
              v140 = *(_QWORD *)(v54 + 72);
              *(_QWORD *)(v54 + 72) = 0x8000000000000000;
              v74 = (uint64_t)v118;
              sub_23AD270D4(v80, v84, v82, v83, v121, v85, v86);
              *(_QWORD *)(v54 + 72) = v140;
              swift_bridgeObjectRelease();
              swift_endAccess();
              sub_23AA937BC(v78, type metadata accessor for VFSItem);
            }
            v93 = v117;
            v94 = v116;
            if (v116)
            {
              type metadata accessor for InternalPathsManager();
              v95 = v122;
              v96 = (uint64_t *)(v122 + *(int *)(v125 + 20));
              v98 = *v96;
              v97 = v96[1];
              v142 = v98;
              v143 = v97;
              v140 = 47;
              v141 = 0xE100000000000000;
              v138 = 58;
              v139 = 0xE100000000000000;
              v99 = sub_23AAA420C();
              v100 = v94;
              v104 = v99;
              v105 = v99;
              v102 = MEMORY[0x24BEE0D00];
              v103 = v99;
              sub_23B1C6CF8();
              sub_23B1C5978();
              swift_bridgeObjectRelease();
              sub_23AB645A0(v93, v74, (uint64_t)v100);

              (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v74, v124);
              v101 = v95;
            }
            else
            {
              v101 = v122;
            }
            sub_23AA937BC(v101, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
            v60 = (uint64_t)v109;
          }
          sub_23AA937BC(v60, type metadata accessor for VFSItem);
          goto LABEL_9;
        }
LABEL_19:
        sub_23AA937BC(v46, type metadata accessor for VFSItem);
        v45 = v127;
        goto LABEL_20;
      }
    }
    else
    {
      sub_23AA937BC((uint64_t)v30, type metadata accessor for VFSItem);
      v51 = (uint64_t)v108;
      sub_23AC03E78(v46, (uint64_t)v108);
    }
    sub_23AA937BC(v51, type metadata accessor for VFSItem);
    goto LABEL_19;
  }
LABEL_8:
  sub_23AA8A05C((uint64_t)v20, &qword_2542E72C0);
LABEL_9:
  v45 = v127;
LABEL_20:
  *v45 = 0;
}

uint64_t sub_23AFE2C80(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  const void *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t *, _QWORD);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t *v60;
  int EnumCaseMultiPayload;
  uint64_t v62;
  uint64_t result;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, unint64_t, uint64_t);
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[5];
  uint64_t v87;

  v4 = v3;
  v5 = v2;
  v71 = a2;
  v73 = a1;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7C78);
  v7 = MEMORY[0x24BDAC7A8](v78);
  v77 = (uint64_t *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v76 = (uint64_t)&v67 - v9;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7C80);
  v10 = MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v79 = (uint64_t)&v67 - v12;
  v13 = sub_23B1C5A08();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v67 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7C88);
  v80 = *(_QWORD *)(v20 - 8);
  v81 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v75 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v74 = (char *)&v67 - v23;
  v24 = *(_QWORD *)(a1 + 16);
  v25 = MEMORY[0x24BEE4AF8];
  v84 = v14;
  v85 = v13;
  if (v24)
  {
    v70 = v5;
    v72 = v3;
    v86[0] = MEMORY[0x24BEE4AF8];
    sub_23ADACE2C(0, v24, 0);
    v26 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v27 = v73 + v26;
    v28 = *(_QWORD *)(v14 + 72);
    v82 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    v83 = v26;
    do
    {
      v82(v17, v27, v13);
      v29 = (void *)sub_23B1C5954();
      v30 = objc_msgSend(v29, sel_fp_realpathURL);

      sub_23B1C59CC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      v25 = v86[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23ADACE2C(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v86[0];
      }
      v32 = *(_QWORD *)(v25 + 16);
      v31 = *(_QWORD *)(v25 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_23ADACE2C(v31 > 1, v32 + 1, 1);
        v25 = v86[0];
      }
      *(_QWORD *)(v25 + 16) = v32 + 1;
      v33 = v25 + v83 + v32 * v28;
      v14 = v84;
      v13 = v85;
      (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v33, v19, v85);
      v86[0] = v25;
      v27 += v28;
      --v24;
    }
    while (v24);
    v4 = v72;
    v5 = v70;
  }
  v86[0] = *(_QWORD *)(v5 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs);
  v87 = v25;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7C90);
  sub_23AAB5A28(&qword_2569E7C98, &qword_2569E7C90, MEMORY[0x24BEE12B0]);
  v34 = v74;
  sub_23B1C62FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AAB5A28(&qword_2569E7CA0, &qword_2569E7C88, MEMORY[0x24BEE3150]);
  v35 = v81;
  sub_23B1C695C();
  sub_23B1C6974();
  if (v86[0] == v87)
  {
    v36 = *(void (**)(char *, uint64_t))(v80 + 8);
    swift_retain();
    v36(v34, v35);
    return v5;
  }
  LODWORD(v83) = *(_DWORD *)(v5 + 16);
  v37 = *(const void **)(v5 + 56);
  v38 = *(unsigned int *)(v5 + 64);
  v39 = *(unsigned __int8 *)(v5 + 68);
  type metadata accessor for VFSLookupScope();
  v40 = swift_allocObject();
  v41 = v4;
  v42 = v73;
  swift_bridgeObjectRetain();
  _Block_copy(v37);
  v44 = 0x100000000;
  if (!v39)
    v44 = 0;
  sub_23AFE11F0(v42, v83, v43, 0, v37, v44 | v38, v71 & 1);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v34, v81);
    return v5;
  }
  v83 = v40;
  v87 = MEMORY[0x24BEE4B08];
  v45 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  v46 = (uint64_t)v68;
  v45(v68, v34, v81);
  sub_23B1C695C();
  v47 = v69;
  *(_QWORD *)(v46 + *(int *)(v69 + 36)) = v86[0];
  v48 = v79;
  sub_23AA724E8(v46, v79, &qword_2569E7C80);
  v49 = (uint64_t *)(v48 + *(int *)(v47 + 36));
  v50 = *v49;
  sub_23B1C6974();
  if (v50 == v86[0])
    goto LABEL_26;
  v51 = 0;
  v72 = 0;
  while (2)
  {
    LODWORD(v82) = v51;
    v52 = v79;
    v53 = v81;
    while (1)
    {
      v55 = (void (*)(uint64_t *, _QWORD))sub_23B1C69E0();
      v56 = v76;
      sub_23AA8EFC8(v57, v76, &qword_2569E7C78);
      v55(v86, 0);
      v58 = v75;
      v45(v75, (char *)v52, v53);
      sub_23B1C6980();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v58, v53);
      v59 = v56;
      v60 = v77;
      sub_23AA724E8(v59, (uint64_t)v77, &qword_2569E7C78);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v62 = *v60;
      result = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7CA8);
      v64 = (char *)v60 + *(int *)(result + 48);
      if (EnumCaseMultiPayload == 1)
        break;
      if (!v62)
        goto LABEL_25;
LABEL_19:
      (*(void (**)(char *, uint64_t))(v84 + 8))(v64, v85);
      v54 = *v49;
      v52 = v79;
      v53 = v81;
      sub_23B1C6974();
      if (v54 == v86[0])
        goto LABEL_26;
    }
    if (v62)
    {
      v65 = *(_QWORD *)(v5 + 32);
      if (v62 < *(_QWORD *)(v65 + 16))
      {
        if (v62 < 0)
        {
          __break(1u);
          return result;
        }
        sub_23ADE11A4(v86, *(_QWORD *)(v65 + 8 * v62 + 32));
      }
      goto LABEL_19;
    }
LABEL_25:
    (*(void (**)(char *, uint64_t))(v84 + 8))(v64, v85);
    v66 = *v49;
    sub_23B1C6974();
    v51 = 1;
    if (v66 != v86[0])
      continue;
    break;
  }
LABEL_26:
  sub_23AA8A05C(v79, &qword_2569E7C80);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v74, v81);
  return v83;
}

BOOL sub_23AFE33A0()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)sub_23B1C5954();
  v1 = (void *)sub_23B1C5954();
  v2 = objc_msgSend(v0, sel_fp_relationshipToItemAtURL_, v1);

  return v2 == (id)1;
}

void sub_23AFE3404(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;

  v19 = a4;
  v20 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C59E4();
  v11 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  sub_23AA8EFC8(a3, (uint64_t)v10, (uint64_t *)&unk_2542E4320);
  v12 = sub_23B1C5C54();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v14 = (void *)sub_23B1C5C0C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v21 = 0x54656C6946534656;
  v22 = 0xEF20746120656572;
  v15 = (void *)sub_23B1C5954();
  v16 = objc_msgSend(v15, sel_fp_shortDescription);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(a1, sel_subscribeToEventsAtPath_fd_sinceEventID_streamUUID_ignoreOwnEvents_delegate_purpose_, v11, 0xFFFFFFFFLL, a2, v14, 1, v19, v17);

  *v20 = v18;
}

uint64_t sub_23AFE3610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  _Block_release(*(const void **)(v0 + 56));
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL;
  v2 = sub_23B1C5A08();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  v3(v0 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, v2);
  return v0;
}

uint64_t sub_23AFE369C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  _Block_release(*(const void **)(v0 + 56));
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL;
  v2 = sub_23B1C5A08();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  v3(v0 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23AFE3734@<X0>(int a1@<W0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_23AFE17F0(a1, v2, a2);
}

uint64_t sub_23AFE374C()
{
  return type metadata accessor for VFSLookupScope();
}

uint64_t type metadata accessor for VFSLookupScope()
{
  uint64_t result;

  result = qword_2542E48A8;
  if (!qword_2542E48A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23AFE3790()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5A08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23AFE384C@<X0>(_DWORD *a1@<X8>)
{
  return sub_23AFE1914(a1);
}

uint64_t sub_23AFE3864(int a1)
{
  uint64_t v1;

  return sub_23AFE1A20(a1, v1);
}

uint64_t sub_23AFE387C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = fsetxattr(*(_DWORD *)(v1 + 16), "com.apple.fileprovider.trash", 0, 0, 0, 0);
  *a1 = result;
  return result;
}

uint64_t sub_23AFE38C4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AFE0CCC(a1, *(_DWORD **)(v1 + 16), *(uint64_t **)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23AFE38E4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_fset_syncroot();
  *a1 = result;
  return result;
}

uint64_t sub_23AFE3918()
{
  return swift_initClassMetadata2();
}

unint64_t sub_23AFE3964()
{
  return 0xD00000000000011ELL;
}

unint64_t sub_23AFE3980()
{
  return 0xD000000000000052;
}

unint64_t sub_23AFE399C()
{
  return 0xD000000000000051;
}

unint64_t sub_23AFE39B8()
{
  return 0xD000000000000054;
}

unint64_t sub_23AFE39D4()
{
  return 0xD00000000000004BLL;
}

unint64_t sub_23AFE39F0()
{
  return 0xD0000000000000EBLL;
}

void sub_23AFE3A0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  unsigned int v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char **v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t Strong;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  char *v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  __int128 aBlock;
  id (*v67)(uint64_t, void *);
  void *v68;
  unint64_t (*v69)();
  uint64_t v70;
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5C54();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v55 - v11;
  v62 = v1;
  v13 = *(void **)(v1 + 16);
  v69 = sub_23AFE39F0;
  v70 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v67 = sub_23AA9432C;
  v68 = &block_descriptor_41;
  v14 = _Block_copy(&aBlock);
  swift_release();
  *(_QWORD *)&aBlock = 0;
  v15 = objc_msgSend(v13, sel_fetchSwift_error_, v14, &aBlock);
  _Block_release(v14);
  v16 = (id)aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (!v15)
  {
    v25 = (void *)sub_23B1C587C();

    swift_willThrow();
    return;
  }
  if (!objc_msgSend(v15, sel_next))
  {

    return;
  }
  v17 = objc_msgSend(v13, sel_userVersion);
  v18 = objc_msgSend(v17, sel_unsignedIntValue);

  v19 = objc_msgSend(v15, sel_unsignedLongAtIndex_, 1);
  if (objc_msgSend(v15, sel_isNullAtIndex_, 0))
LABEL_26:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  v57 = v18;
  v58 = (uint64_t)v19;
  v59 = v7;
  v56 = v10;
  v60 = a1;
  v61 = v12;
  if (swift_dynamicCastMetatype())
    goto LABEL_27;
  sub_23B1C5780();
  swift_allocObject();
  sub_23B1C5774();
  v20 = objc_msgSend(v15, sel_dataAtIndex_, 0);
  v21 = sub_23B1C5AD4();
  v23 = v22;

  v24 = sub_23AEB6C8C(&qword_2542E0270, MEMORY[0x24BDCEAA8]);
  sub_23B1C5768();
  sub_23AAAE53C(v21, v23);
  v55[1] = v24;
  swift_release();
  v27 = v60[3];
  v26 = v60[4];
  v55[2] = __swift_project_boxed_opaque_existential_1(v60, v27);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23AE2E2DC();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v64 = 114;
  v65 = 0xE100000000000000;
  v63 = v58;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v58 = sub_23AEB6C8C((unint64_t *)&qword_2542DD440, MEMORY[0x24BDCEAB8]);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v27, v26);
  swift_bridgeObjectRelease();
  v28 = &selRef_defaultManager;
  v29 = v6;
  if ((objc_msgSend(v15, sel_isNullAtIndex_, 2) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v5, 1, 1, v6);
LABEL_11:
    sub_23AEBCC04((uint64_t)v5);
    goto LABEL_12;
  }
  if (objc_msgSend(v15, sel_isNullAtIndex_, 2))
    goto LABEL_26;
  if (swift_dynamicCastMetatype())
LABEL_27:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  swift_allocObject();
  sub_23B1C5774();
  v30 = objc_msgSend(v15, sel_dataAtIndex_, 2);
  v31 = sub_23B1C5AD4();
  v33 = v32;

  sub_23B1C5768();
  sub_23AAAE53C(v31, v33);
  swift_release();
  v34 = v59;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v5, 1, v6) == 1)
    goto LABEL_11;
  v35 = v56;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v56, v5, v29);
  v36 = v60[3];
  v37 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v36);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000010;
  *((_QWORD *)&aBlock + 1) = 0x800000023B205380;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v64 = (uint64_t)objc_msgSend(v15, sel_unsignedLongAtIndex_, 3);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v28 = &selRef_defaultManager;
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v36, v37);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v29);
LABEL_12:
  if ((objc_msgSend(v15, v28[398], 4) & 1) == 0)
  {
    v38 = (void *)sub_23AC3A1AC(4);
    v40 = v39;
    v41 = v60[3];
    v42 = v60[4];
    __swift_project_boxed_opaque_existential_1(v60, v41);
    strcpy((char *)&aBlock, "+ FP anchor: ");
    HIWORD(aBlock) = -4864;
    sub_23AFEEE58((uint64_t)v38, (uint64_t)v40);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v41, v42);
    swift_bridgeObjectRelease();

  }
  v43 = v60;
  v44 = v60[3];
  v45 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v44);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000012;
  *((_QWORD *)&aBlock + 1) = 0x800000023B2052C0;
  v64 = (uint64_t)objc_msgSend(v15, sel_unsignedLongAtIndex_, 5);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v44, v45);
  swift_bridgeObjectRelease();
  v46 = v43[3];
  v47 = v43[4];
  __swift_project_boxed_opaque_existential_1(v43, v46);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000011;
  *((_QWORD *)&aBlock + 1) = 0x800000023B2052E0;
  sub_23AF157D0((unint64_t)objc_msgSend(v15, sel_integerAtIndex_, 6));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v46, v47);
  swift_bridgeObjectRelease();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_26;
  }
  v49 = *(_BYTE *)(Strong + 88);
  swift_release();
  v50 = v43[3];
  v51 = v43[4];
  __swift_project_boxed_opaque_existential_1(v43, v50);
  if ((v49 & 1) != 0)
  {
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&aBlock = 0xD000000000000014;
    *((_QWORD *)&aBlock + 1) = 0x800000023B205340;
    objc_msgSend(v15, sel_integerAtIndex_, 7);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v50, v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23AEBD130(0xD00000000000001ALL, 0x800000023B205300, v50, v51);
  }
  v52 = v59;
  v53 = v60[3];
  v54 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v53);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000014;
  *((_QWORD *)&aBlock + 1) = 0x800000023B205320;
  v64 = (uint64_t)objc_msgSend(v15, sel_unsignedLongAtIndex_, 8);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v53, v54);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v61, v29);
}

void sub_23AFE4610(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23B1C5C54();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  __asm { BR              X10 }
}

uint64_t sub_23AFE4708(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;

  v27 = objc_msgSend(v23, sel_stringAtIndex_, v22);
  sub_23B1C63E0();

  sub_23B1C5BE8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v24, 1, v20) == 1)
  {
    sub_23AEBCC04(v24);
    sub_23AB23A94();
    swift_allocError();
    *(_OWORD *)v29 = 0u;
    *(_OWORD *)(v29 + 16) = 0u;
    *(_OWORD *)(v29 + 32) = 0u;
    *(_BYTE *)(v29 + 48) = 8;
    return swift_willThrow();
  }
  else
  {
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
    v28(v25, v24, v20);
    v28(*(_QWORD *)(v26 - 88), v25, v20);
    type metadata accessor for SyncState();
    return swift_storeEnumTagMultiPayload();
  }
}

void sub_23AFE4BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23B1C5C54();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v4);
  sub_23AEBC894(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)&loc_23AFE4CCC + *((int *)qword_23AFE4FA8 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23AFE4CDC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v1);
  sub_23B1C5BF4();
  v5 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v0, sel_bindStringParameter_, v5);

  v7 = sub_23B1C63E0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
  return v7;
}

void sub_23AFE4FCC(char a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *(void **)(v1 + 16);
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = a1;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = sub_23AFE6648;
  v5[3] = v4;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v5;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_38_0;
  v6 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v7 = objc_msgSend(v3, sel_fetchSwift_error_, v6, aBlock);
  _Block_release(v6);
  v8 = aBlock[0];
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  if (v7)
  {
    if (objc_msgSend(v7, sel_next))
    {
      sub_23AFE4610((uint64_t)v7, 0, a1);
    }
    else
    {
      sub_23AB23A94();
      swift_allocError();
      *(_OWORD *)v9 = 0u;
      *(_OWORD *)(v9 + 16) = 0u;
      *(_OWORD *)(v9 + 32) = 0u;
      *(_BYTE *)(v9 + 48) = 8;
      swift_willThrow();
    }
    swift_release();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
  }
}

void sub_23AFE51F0(uint64_t a1, char a2)
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_23AFE5270()
{
  uint64_t v1;

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v1;
}

void sub_23AFE5384(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  void *v21;
  void *v22;
  char v23;
  id v24;
  id v25;
  _QWORD *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint8_t *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  os_log_t v50;
  void *v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  unsigned int v57;
  id v58;
  char isEscapingClosureAtFileLocation;
  id *v60;
  void *v61;
  os_log_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id aBlock[7];

  v3 = v1;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = sub_23B1C5E4C();
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v60 - v9;
  v11 = type metadata accessor for SyncState();
  v68 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v60 - v16;
  v69 = v18;
  MEMORY[0x24BDAC7A8](v15);
  v20 = (void **)((char *)&v60 - v19);
  sub_23AEBC894(a1, (uint64_t)&v60 - v19);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    v67 = v2;
    sub_23AEBB3E8((uint64_t)v20);
    v34 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AEBC894(a1, (uint64_t)v17);
    v35 = sub_23B1C5E40();
    v36 = sub_23B1C6A94();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v66 = v14;
      v38 = (uint8_t *)v37;
      v39 = (void *)swift_slowAlloc();
      v65 = a1;
      v40 = v39;
      aBlock[0] = v39;
      *(_DWORD *)v38 = 136315138;
      v64 = v3;
      sub_23AEBC25C();
      v72 = sub_23AABEC68(v41, v42, (uint64_t *)aBlock);
      v3 = v64;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AEBB3E8((uint64_t)v17);
      _os_log_impl(&dword_23AA66000, v35, v36, "🔑  updating %s", v38, 0xCu);
      swift_arrayDestroy();
      v43 = v40;
      a1 = v65;
      MEMORY[0x23B8614BC](v43, -1, -1);
      v44 = v38;
      v14 = v66;
      MEMORY[0x23B8614BC](v44, -1, -1);
    }
    else
    {
      sub_23AEBB3E8((uint64_t)v17);
    }

    (*(void (**)(char *, uint64_t))(v70 + 8))(v8, v71);
    goto LABEL_21;
  }
  v21 = *v20;
  if (!swift_weakLoadStrong())
  {
    __break(1u);
    goto LABEL_27;
  }
  v22 = (void *)sub_23AFB5ED0();
  swift_release();
  v23 = sub_23AC42EA4(v21, v22);

  if ((v23 & 1) == 0)
  {

    return;
  }
  v24 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v25 = v21;
  swift_retain_n();
  v26 = v25;
  v27 = sub_23B1C5E40();
  LODWORD(v67) = sub_23B1C6A94();
  if (os_log_type_enabled(v27, (os_log_type_t)v67))
  {
    v62 = v27;
    v64 = v26;
    v66 = v14;
    v28 = swift_slowAlloc();
    v61 = (void *)swift_slowAlloc();
    aBlock[0] = v61;
    *(_DWORD *)v28 = 136315394;
    v63 = v3 + 3;
    if (!swift_weakLoadStrong())
    {
LABEL_28:
      swift_release();

      __break(1u);
      return;
    }
    v65 = a1;
    v29 = (void *)sub_23AFB5ED0();
    swift_release();
    if (v29)
    {
      v30 = objc_msgSend(v29, sel_description);

      v31 = sub_23B1C63E0();
      v33 = v32;

    }
    else
    {
      v33 = 0xE500000000000000;
      v31 = 0x3E6C696E3CLL;
    }
    v72 = sub_23AABEC68(v31, v33, (uint64_t *)aBlock);
    v60 = aBlock;
    sub_23B1C6CBC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    if (v21)
    {
      v45 = objc_msgSend(v64, sel_description);
      v46 = sub_23B1C63E0();
      v48 = v47;

      v14 = v66;
    }
    else
    {
      v48 = 0xE500000000000000;
      v14 = v66;
      v46 = 0x3E6C696E3CLL;
    }
    v72 = sub_23AABEC68(v46, v48, (uint64_t *)aBlock);
    sub_23B1C6CBC();
    v49 = v64;

    swift_bridgeObjectRelease();
    v50 = v62;
    _os_log_impl(&dword_23AA66000, v62, (os_log_type_t)v67, "🌍  domain version updated %s -> %s", (uint8_t *)v28, 0x16u);
    v51 = v61;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v51, -1, -1);
    MEMORY[0x23B8614BC](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v10, v71);
    a1 = v65;
    v26 = v49;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v10, v71);
  }
  if (!swift_weakLoadStrong())
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_23AFDAE78();
  swift_release();

LABEL_21:
  v52 = (void *)v3[2];
  sub_23AEBC894(a1, (uint64_t)v14);
  v53 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v54 = swift_allocObject();
  sub_23AFE6574((uint64_t)v14, v54 + v53);
  v55 = (_QWORD *)swift_allocObject();
  v55[2] = sub_23AFE65B8;
  v55[3] = v54;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v55;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_28_1;
  v56 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v57 = objc_msgSend(v52, sel_executeSwift_error_, v56, aBlock);
  _Block_release(v56);
  v58 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (!v57)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  swift_release();
}

void sub_23AFE5AC8()
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23AEBC168();
  __asm { BR              X10 }
}

uint64_t sub_23AFE5B60()
{
  uint64_t v1;

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AFE4BBC();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23AFE5C8C()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

uint64_t sub_23AFE5CB0()
{
  uint64_t v0;

  swift_weakDestroy();
  return swift_deallocClassInstance();
}

void type metadata accessor for SQLSyncStateTable()
{
  JUMPOUT(0x23B861318);
}

void sub_23AFE5CE8(uint64_t a1)
{
  sub_23AFE5384(a1);
}

void sub_23AFE5CFC(char a1)
{
  sub_23AFE4FCC(a1);
}

void sub_23AFE5D10()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unsigned __int8 v11;
  id v12;
  id aBlock;
  uint64_t v14;
  id (*v15)(uint64_t, void *);
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1880]), sel_init);
  v2 = *(void **)(v0 + 16);
  v17 = sub_23AFE3964;
  v18 = 0;
  v3 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_12_2;
  v4 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v5 = objc_msgSend(v2, sel_executeSwift_error_, v4, &aBlock);
  _Block_release(v4);
  v6 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v5)
  {
    sub_23B1C587C();

    swift_willThrow();
    goto LABEL_8;
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_23AFE645C;
  *(_QWORD *)(v8 + 24) = v7;
  v17 = sub_23AA698D4;
  v18 = v8;
  aBlock = v3;
  v14 = 1107296256;
  v15 = sub_23AA9432C;
  v16 = &block_descriptor_18_1;
  v9 = _Block_copy(&aBlock);
  v10 = v1;
  swift_retain();
  swift_release();
  aBlock = 0;
  v11 = objc_msgSend(v2, sel_executeSwift_error_, v9, &aBlock);
  _Block_release(v9);
  v12 = aBlock;
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v9 & 1) != 0)
LABEL_10:
    __break(1u);
  if ((v11 & 1) != 0)
  {
    swift_release();

    return;
  }
  sub_23B1C587C();

  swift_willThrow();
  swift_release();
LABEL_8:

}

uint64_t sub_23AFE5F9C(void *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v7;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  v4 = objc_msgSend(a2, sel_UUIDString);
  if (!v4)
  {
    sub_23B1C63E0();
    v4 = (id)sub_23B1C63BC();
    swift_bridgeObjectRelease();
  }
  v5 = objc_msgSend(a1, sel_bindStringParameter_, v4, 0, 0xE000000000000000);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v7;
}

uint64_t sub_23AFE60B8()
{
  return sub_23AFE6228(sub_23AFE3980, &block_descriptor_9_3);
}

uint64_t sub_23AFE6114()
{
  return sub_23AFE6228(sub_23AFE399C, &block_descriptor_6_2);
}

uint64_t sub_23AFE6170()
{
  return sub_23AFE6228(sub_23AFE39B8, &block_descriptor_3_2);
}

uint64_t sub_23AFE61CC()
{
  return sub_23AFE6228(sub_23AFE39D4, &block_descriptor_31);
}

uint64_t sub_23AFE6228(void *a1, void *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;
  uint64_t result;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *(void **)(v2 + 16);
  aBlock[4] = a1;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = a2;
  v4 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v5 = objc_msgSend(v3, sel_executeSwift_error_, v4, aBlock);
  _Block_release(v4);
  v6 = aBlock[0];
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  if (!v5)
  {
    sub_23B1C587C();

    return swift_willThrow();
  }
  return result;
}

void sub_23AFE6348()
{
  sub_23AFE5D10();
}

uint64_t sub_23AFE6368()
{
  return sub_23AFE6228(sub_23AFE3980, &block_descriptor_9_3);
}

uint64_t sub_23AFE639C()
{
  return sub_23AFE6228(sub_23AFE399C, &block_descriptor_6_2);
}

uint64_t sub_23AFE63D0()
{
  return sub_23AFE6228(sub_23AFE39B8, &block_descriptor_3_2);
}

uint64_t sub_23AFE6404()
{
  return sub_23AFE6228(sub_23AFE39D4, &block_descriptor_31);
}

uint64_t sub_23AFE6438()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AFE645C(void *a1)
{
  uint64_t v1;

  return sub_23AFE5F9C(a1, *(void **)(v1 + 16));
}

uint64_t sub_23AFE6464()
{
  return swift_deallocObject();
}

uint64_t sub_23AFE6474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SyncState() - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = v0 + v2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = sub_23B1C5C54();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
      break;
    case 2u:
      v5 = sub_23B1C5C54();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v2, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v2, v5);
      break;
    case 4u:

      v7 = *(id *)(v3 + 8);
      goto LABEL_7;
    case 5u:
      v7 = *(id *)v3;
LABEL_7:

      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

uint64_t sub_23AFE6574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23AFE65B8()
{
  type metadata accessor for SyncState();
  sub_23AFE5AC8();
}

uint64_t sub_23AFE65F4()
{
  return swift_deallocObject();
}

uint64_t sub_23AFE6604(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE0D00] - 8) + 8))();
  return a1;
}

uint64_t sub_23AFE6638()
{
  return swift_deallocObject();
}

void sub_23AFE6648(uint64_t a1)
{
  uint64_t v1;

  sub_23AFE51F0(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_23AFE6650()
{
  return swift_deallocObject();
}

uint64_t sub_23AFE6698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = sub_23B1C6B3C();
  v22 = *(_QWORD *)(v0 - 8);
  v23 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v21 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23B1C6AE8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  v20 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - v7;
  v9 = sub_23B1C60A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - v14;
  v19 = sub_23AD40D68();
  sub_23B1C6068();
  v24 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&qword_2542E7500, v3, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74C0);
  sub_23AAB6960((unint64_t *)&qword_2542E74D0, (uint64_t *)&unk_2542E74C0);
  sub_23B1C6DE8();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v16 = v20;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v6, v8, v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v21, *MEMORY[0x24BEE5758], v23);
  v17 = sub_23B1C6B60();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v2);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  qword_2542EDCE0 = v17;
  return result;
}

dispatch_semaphore_t sub_23AFE68F0()
{
  dispatch_semaphore_t result;

  result = dispatch_semaphore_create(0);
  qword_256A079E8 = (uint64_t)result;
  return result;
}

uint64_t sub_23AFE6910(uint64_t (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  os_log_type_t v18;
  uint64_t v20;

  v3 = sub_23B1C5E4C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - v8;
  if (*(_BYTE *)(v1 + 73) != 1)
  {
    v17 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v14 = sub_23B1C5E40();
    v18 = sub_23B1C6A88();
    if (!os_log_type_enabled(v14, v18))
    {
      v12 = 1;
      goto LABEL_10;
    }
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_23AA66000, v14, v18, "🧹 Periodic FPCK is paused because it has been unregistered", v16, 2u);
    v12 = 1;
LABEL_7:
    MEMORY[0x23B8614BC](v16, -1, -1);
LABEL_10:

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return a1(v12 & 1, 0);
  }
  v10 = *(uint64_t (**)(uint64_t))(v1 + 88);
  v11 = swift_retain();
  v12 = v10(v11);
  swift_release();
  if ((v12 & 1) != 0)
  {
    v13 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v14 = sub_23B1C5E40();
    v15 = sub_23B1C6A88();
    if (!os_log_type_enabled(v14, v15))
    {
      v7 = v9;
      goto LABEL_10;
    }
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_23AA66000, v14, v15, "🧹 Periodic FPCK is paused because system indicated", v16, 2u);
    v7 = v9;
    goto LABEL_7;
  }
  return a1(v12 & 1, 0);
}

uint64_t sub_23AFE6B54()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_23AFE6B84(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*sub_23AFE6BC0())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t (*sub_23AFE6BFC())()
{
  return sub_23AABA6B4;
}

uint64_t sub_23AFE6C0C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 73);
}

void sub_23AFE6C14()
{
  uint64_t v0;

  *(_WORD *)(v0 + 72) = 256;
}

void sub_23AFE6C20()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 73) = 0;
}

BOOL sub_23AFE6C28()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 72) == 2;
}

uint64_t sub_23AFE6C38(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v9 = v8;
  v32 = a7;
  v33 = a8;
  v30 = a5;
  v31 = a6;
  v29 = a2;
  v13 = sub_23B1C602C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C60A4();
  v18 = *(_QWORD *)(v17 - 8);
  result = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v9 + 73) == 1)
  {
    v28 = v14;
    *(_QWORD *)(v9 + 88) = a3;
    *(_QWORD *)(v9 + 96) = a4;
    swift_retain();
    result = swift_release();
    if (*(_BYTE *)(v9 + 72))
    {
      if (*(_BYTE *)(v9 + 72) == 2)
      {
        if (qword_2569E12F0 != -1)
          swift_once();
        result = sub_23B1C6C08();
        *(_BYTE *)(v9 + 72) = 1;
      }
    }
    else
    {
      *(_BYTE *)(v9 + 72) = 1;
      if (qword_2542E1068 != -1)
        swift_once();
      v27 = qword_2542EDCE0;
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v9;
      *(_QWORD *)(v22 + 24) = a1;
      *(_DWORD *)(v22 + 32) = v29;
      *(_QWORD *)(v22 + 40) = a3;
      *(_QWORD *)(v22 + 48) = a4;
      v23 = v31;
      *(_QWORD *)(v22 + 56) = v30;
      *(_QWORD *)(v22 + 64) = v23;
      v25 = v32;
      v24 = v33;
      *(_QWORD *)(v22 + 72) = v32;
      *(_QWORD *)(v22 + 80) = v24;
      aBlock[4] = sub_23AFE92C0;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_32;
      v30 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_23AAFA320(v25);
      sub_23B1C6068();
      v34 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB6960((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470);
      sub_23B1C6DE8();
      v26 = v30;
      MEMORY[0x23B85F470](0, v21, v16, v30);
      _Block_release(v26);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v13);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_23AFE6F24(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, id (*a5)(), void (*a6)(_QWORD), void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id (*v33)();
  void (*v34)(_QWORD);
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a3;
  v38 = a2;
  v14 = a9;
  v15 = sub_23B1C5E4C();
  v36 = *(_QWORD *)(v15 - 8);
  v37 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_retain_n();
  v19 = sub_23B1C5E40();
  v20 = sub_23B1C6A88();
  if (os_log_type_enabled(v19, v20))
  {
    v32 = a9;
    v21 = swift_slowAlloc();
    v33 = a5;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v34 = a6;
    v24 = v23;
    v41 = v23;
    v35 = a7;
    *(_DWORD *)v22 = 136315138;
    v25 = sub_23B1C63E0();
    v31 = a4;
    v40 = sub_23AABEC68(v25, v26, &v41);
    v14 = v32;
    a7 = v35;
    sub_23B1C6CBC();
    swift_release_n();
    a4 = v31;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v19, v20, "starting to run periodic FPCK for %s", v22, 0xCu);
    swift_arrayDestroy();
    v27 = v24;
    a6 = v34;
    MEMORY[0x23B8614BC](v27, -1, -1);
    v28 = v22;
    a5 = v33;
    MEMORY[0x23B8614BC](v28, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v37);
  return sub_23AFE715C(v38, v39, a4, a5, a6, a7, a8, v14);
}

uint64_t sub_23AFE715C(uint64_t a1, unsigned int a2, uint64_t a3, id (*a4)(), void (*a5)(_QWORD), void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  void (*v48)(_QWORD);
  uint64_t v49;
  id (*v50)();
  id (*v51)();
  id (*v52)();
  void *v53;
  id v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  void *v65;
  unint64_t v66;
  unint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  id v74;
  void *v75;
  uint64_t v76;
  void (*v77)(_QWORD);
  id v78;
  _QWORD *v79;
  char *v80;
  char *v81;
  id v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  void *v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char *v100;
  id v101;
  id v102;
  _QWORD *v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  id v109;
  void *v110;
  id v111;
  char *v112;
  id v113;
  id v114;
  NSObject *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  id v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  char *v124;
  uint64_t Strong;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  char *v140;
  _QWORD *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t);
  uint64_t v146;
  id (**v147)();
  id (*v148)();
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  void *v153;
  id v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  unsigned int v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t, uint64_t);
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  void (*v180)(char *, uint64_t);
  _QWORD *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  unsigned int (*v185)(char *, uint64_t, uint64_t);
  char *v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  id (*v191)();
  uint64_t v192;
  char *v193;
  _QWORD *v194;
  uint64_t v195;
  id v196;
  void (*v197)(_QWORD);
  char *v198;
  uint64_t v199;
  id aBlock;
  unint64_t v201;
  uint64_t (*v202)(uint64_t, uint64_t, void *, void *);
  void *v203;
  void (*v204)(uint64_t, uint64_t, void *);
  char *v205;
  uint64_t v206;
  uint64_t v207;

  v167 = a8;
  v166 = a7;
  v196 = a6;
  v197 = a5;
  v191 = a4;
  v192 = a3;
  v207 = *MEMORY[0x24BDAC8D0];
  v190 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v190 - 8);
  v11 = MEMORY[0x24BDAC7A8](v190);
  v13 = (char *)&v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v187 = (uint64_t *)((char *)&v161 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v171 = (char *)&v161 - v16;
  v17 = sub_23B1C5BDC();
  v173 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v172 = (char *)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = (_QWORD *)sub_23B1C5C54();
  v180 = (void (*)(char *, uint64_t))*(v181 - 1);
  MEMORY[0x24BDAC7A8](v181);
  v179 = (char *)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23B1C58E8();
  v178 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v182 = (char *)&v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v161 - v26;
  v28 = sub_23B1C5A08();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v165 = (char *)&v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v162 = (char *)&v161 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v177 = (char *)&v161 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v184 = (char *)&v161 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v193 = (char *)&v161 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v186 = (char *)&v161 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v198 = (char *)&v161 - v43;
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
LABEL_35:
    sub_23AD2BAF8((uint64_t)v27);
    sub_23AFF3BD4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/fpck/PeriodicFPCK.swift", 96, 2, 118);
  }
  v174 = v17;
  v183 = v20;
  v176 = v13;
  v163 = v42;
  v168 = a2;
  v189 = v10;
  v164 = *(unsigned __int8 *)(v29 + 80);
  v175 = a1;
  v170 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v170(v27, a1 + ((v164 + 32) & ~v164), v28);
  v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
  v44(v27, 0, 1, v28);
  v185 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v185(v27, 1, v28) == 1)
    goto LABEL_35;
  v45 = *(unsigned int (**)(char *, char *, uint64_t))(v29 + 32);
  v45(v198, v27, v28);
  v46 = swift_allocObject();
  v188 = v46 + 16;
  swift_weakInit();
  v47 = (_QWORD *)swift_allocObject();
  v48 = v197;
  v47[2] = v46;
  v47[3] = v48;
  v194 = v47;
  v47[4] = v196;
  v49 = swift_allocObject();
  swift_weakInit();
  v50 = (id (*)())swift_allocObject();
  *((_QWORD *)v50 + 2) = v49;
  v51 = v50;
  v52 = v191;
  *((_QWORD *)v50 + 3) = v192;
  *((_QWORD *)v50 + 4) = v52;
  v53 = (void *)objc_opt_self();
  v192 = v46;
  swift_retain();
  swift_retain();
  swift_retain();
  v54 = objc_msgSend(v53, sel_fp_secureTempDirectory);
  if (v54)
  {
    v55 = v54;
    v56 = v193;
    sub_23B1C59CC();

    v45(v25, v56, v28);
    v44(v25, 0, 1, v28);
    if (v185(v25, 1, v28) != 1)
    {
      v191 = v51;
      v185 = (unsigned int (*)(char *, uint64_t, uint64_t))v45;
      v45(v186, v25, v28);
      aBlock = (id)0xD000000000000011;
      v201 = 0x800000023B211EC0;
      v57 = *MEMORY[0x24BDCD790];
      v58 = v178;
      v59 = *(void (**)(char *, uint64_t, uint64_t))(v178 + 104);
      v169 = v28;
      v60 = v182;
      v61 = v183;
      v59(v182, v57, v183);
      v62 = sub_23AAA420C();
      sub_23B1C59FC();
      v63 = *(void (**)(char *, uint64_t))(v58 + 8);
      v63(v60, v61);
      swift_bridgeObjectRelease();
      v64 = v179;
      sub_23B1C5C48();
      v65 = (void *)sub_23B1C5BF4();
      v67 = v66;
      (*((void (**)(char *, _QWORD *))v180 + 1))(v64, v181);
      aBlock = v65;
      v201 = v67;
      v68 = v59;
      v59(v60, v57, v61);
      v69 = v184;
      v187 = (_QWORD *)v62;
      v70 = v63;
      v71 = v193;
      sub_23B1C59FC();
      v63(v60, v61);
      swift_bridgeObjectRelease();
      v72 = *(void (**)(char *, uint64_t))(v29 + 8);
      v73 = v69;
      v72(v71, v169);
      v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
      v75 = (void *)sub_23B1C5954();
      aBlock = 0;
      LODWORD(v59) = objc_msgSend(v74, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v75, 1, 0, &aBlock);

      if ((_DWORD)v59)
      {
        v76 = v195;
        v77 = *(void (**)(_QWORD))(v195 + 16);
        v78 = aBlock;
        v79 = sub_23AB60D98();
        aBlock = 0;
        v201 = 0xE000000000000000;
        v181 = v79;
        sub_23B1C63E0();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        v80 = v172;
        sub_23B1C5BB8();
        sub_23B1C5B94();
        (*(void (**)(char *, uint64_t))(v173 + 8))(v80, v174);
        sub_23B1C6884();
        v68(v60, *MEMORY[0x24BDCD7A0], v61);
        v81 = v177;
        sub_23B1C59FC();
        v70(v60, v61);
        swift_bridgeObjectRelease();
        if (((*(uint64_t (**)(char *))(v76 + 40))(v81) & 1) != 0)
        {
          v197 = v77;
          swift_release();
          v82 = (id)fpfs_current_or_default_log();
          v83 = v171;
          sub_23B1C5E58();
          v84 = v162;
          v85 = v169;
          v86 = (void (*)(char *, char *, uint64_t))v170;
          v170(v162, (uint64_t)v81, v169);
          swift_retain_n();
          v87 = sub_23B1C5E40();
          v88 = sub_23B1C6A88();
          v89 = v88;
          if (os_log_type_enabled(v87, v88))
          {
            v90 = v84;
            v91 = swift_slowAlloc();
            v196 = (id)swift_slowAlloc();
            aBlock = v196;
            *(_DWORD *)v91 = 136315394;
            LODWORD(v192) = v89;
            v92 = sub_23B1C63E0();
            v206 = sub_23AABEC68(v92, v93, (uint64_t *)&aBlock);
            sub_23B1C6CBC();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v91 + 12) = 2080;
            v94 = (void *)sub_23B1C5954();
            v95 = v85;
            v96 = objc_msgSend(v94, sel_fp_shortDescription);

            v97 = sub_23B1C63E0();
            v99 = v98;

            v85 = v95;
            v206 = sub_23AABEC68(v97, v99, (uint64_t *)&aBlock);
            v81 = v177;
            sub_23B1C6CBC();
            v76 = v195;
            swift_bridgeObjectRelease();
            v100 = v90;
            v86 = (void (*)(char *, char *, uint64_t))v170;
            v72(v100, v95);
            _os_log_impl(&dword_23AA66000, v87, (os_log_type_t)v192, "🧹 Periodic FPCK starting for %s with DB at %s", (uint8_t *)v91, 0x16u);
            v101 = v196;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v101, -1, -1);
            MEMORY[0x23B8614BC](v91, -1, -1);

            (*(void (**)(char *, uint64_t))(v189 + 8))(v171, v190);
          }
          else
          {
            swift_release_n();
            v72(v84, v85);

            (*(void (**)(char *, uint64_t))(v189 + 8))(v83, v190);
          }
          v196 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
          v128 = v164;
          if (*(_QWORD *)(v76 + 24))
            v195 = sub_23B1C61F4();
          else
            v195 = 0;
          v129 = ~v128;
          v192 = sub_23B1C5954();
          v190 = sub_23B1C5954();
          v130 = v85;
          v189 = sub_23B1C66F8();
          v131 = *(_QWORD *)(v76 + 64);
          v180 = v72;
          if (v131)
            v188 = sub_23B1C63BC();
          else
            v188 = 0;
          swift_beginAccess();
          v187 = *(_QWORD **)(v76 + 80);
          v132 = v193;
          v86(v193, v198, v85);
          v133 = v165;
          v86(v165, v81, v130);
          v134 = (v128 + 40) & v129;
          v135 = (v163 + v128 + v134) & v129;
          v136 = (v163 + v135 + 7) & 0xFFFFFFFFFFFFFFF8;
          v137 = (v136 + 11) & 0xFFFFFFFFFFFFFFF8;
          v138 = (v137 + 11) & 0xFFFFFFFFFFFFFFF8;
          v139 = (v138 + 23) & 0xFFFFFFFFFFFFFFF8;
          v140 = (char *)swift_allocObject();
          v141 = v194;
          *((_QWORD *)v140 + 2) = sub_23AFE9450;
          *((_QWORD *)v140 + 3) = v141;
          *((_QWORD *)v140 + 4) = v76;
          v142 = &v140[v134];
          v143 = v132;
          v144 = v169;
          v145 = (void (*)(char *, char *, uint64_t))v185;
          v185(v142, (uint64_t)v143, v169);
          v145(&v140[v135], v133, v144);
          *(_QWORD *)&v140[v136] = v175;
          v146 = v168;
          *(_DWORD *)&v140[v137] = v168;
          v147 = (id (**)())&v140[v138];
          v148 = v191;
          *v147 = sub_23AFE9460;
          v147[1] = v148;
          v149 = (uint64_t *)&v140[v139];
          v150 = v166;
          v151 = v167;
          *v149 = v166;
          v149[1] = v151;
          v204 = sub_23AFE9554;
          v205 = v140;
          aBlock = (id)MEMORY[0x24BDAC760];
          v201 = 1107296256;
          v202 = sub_23AFE916C;
          v203 = &block_descriptor_17_1;
          v152 = _Block_copy(&aBlock);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          sub_23AAFA320(v150);
          swift_release();
          LOBYTE(v160) = 0;
          LOWORD(v159) = 1;
          v153 = (void *)v188;
          v154 = v196;
          v155 = (void *)v195;
          v156 = (void *)v192;
          v157 = (void *)v190;
          v158 = (void *)v189;
          objc_msgSend(v196, sel_prepareFPCKRun_domainUserInfo_domainRootURL_databaseBackupPath_urls_volumeRole_personaIdentifier_options_reason_fpfs_iCDPackageDetection_launchType_runOnWorkQueue_completionHandler_, v197, v195, v192, v190, v189, v146, v188, 0, 20, v159, v187, v160, v152);
          _Block_release(v152);

          v121 = v169;
          v72 = v180;
          v180(v177, v169);
          v73 = v184;
          sub_23AFE8708();
          swift_release();
        }
        else
        {
          swift_beginAccess();
          Strong = swift_weakLoadStrong();
          v121 = v169;
          if (Strong)
          {
            *(_BYTE *)(Strong + 72) = 0;
            Strong = swift_release();
          }
          v197(Strong);
          swift_release();

          v72(v81, v121);
          sub_23AFE8708();
          swift_release();
        }
        swift_release();
        v72(v73, v121);
        v127 = v186;
      }
      else
      {
        v109 = aBlock;
        v110 = (void *)sub_23B1C587C();

        swift_willThrow();
        v111 = (id)fpfs_current_or_default_log();
        v112 = v176;
        sub_23B1C5E58();
        swift_retain();
        v113 = v110;
        swift_retain();
        v114 = v110;
        v115 = sub_23B1C5E40();
        v116 = sub_23B1C6AA0();
        if (os_log_type_enabled(v115, (os_log_type_t)v116))
        {
          v117 = swift_slowAlloc();
          v187 = (_QWORD *)swift_slowAlloc();
          v193 = (char *)swift_slowAlloc();
          aBlock = v193;
          *(_DWORD *)v117 = 136315394;
          v118 = sub_23B1C63E0();
          v206 = sub_23AABEC68(v118, v119, (uint64_t *)&aBlock);
          sub_23B1C6CBC();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v117 + 12) = 2112;
          swift_getErrorValue();
          v120 = sub_23B0D9CF0(v199);
          v206 = (uint64_t)v120;
          v121 = v169;
          v73 = v184;
          sub_23B1C6CBC();
          v122 = v187;
          *v187 = v120;

          _os_log_impl(&dword_23AA66000, v115, (os_log_type_t)v116, "Failed to mkdir for DB backup on %s : %@", (uint8_t *)v117, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
          swift_arrayDestroy();
          v123 = v186;
          MEMORY[0x23B8614BC](v122, -1, -1);
          v124 = v193;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v124, -1, -1);
          MEMORY[0x23B8614BC](v117, -1, -1);

          (*(void (**)(char *, uint64_t))(v189 + 8))(v176, v190);
        }
        else
        {
          swift_release_n();

          (*(void (**)(char *, uint64_t))(v189 + 8))(v112, v190);
          v121 = v169;
          v123 = v186;
        }
        swift_beginAccess();
        v126 = swift_weakLoadStrong();
        if (v126)
        {
          *(_BYTE *)(v126 + 72) = 0;
          v126 = swift_release();
        }
        v197(v126);
        swift_release();
        swift_release();

        swift_release();
        v72(v73, v121);
        v127 = v123;
      }
      v72(v127, v121);
      return ((uint64_t (*)(char *, uint64_t))v72)(v198, v121);
    }
  }
  else
  {
    v44(v25, 1, 1, v28);
  }
  sub_23AD2BAF8((uint64_t)v25);
  v102 = (id)fpfs_current_or_default_log();
  v103 = v187;
  sub_23B1C5E58();
  v104 = sub_23B1C5E40();
  v105 = sub_23B1C6AAC();
  if (os_log_type_enabled(v104, v105))
  {
    v106 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v106 = 0;
    _os_log_impl(&dword_23AA66000, v104, v105, "Couldn't get secure temp URL for periodic FPCK", v106, 2u);
    MEMORY[0x23B8614BC](v106, -1, -1);
  }

  (*(void (**)(_QWORD *, uint64_t))(v189 + 8))(v103, v190);
  swift_beginAccess();
  v107 = swift_weakLoadStrong();
  if (v107)
  {
    *(_BYTE *)(v107 + 72) = 0;
    v107 = swift_release();
  }
  v197(v107);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v198, v28);
}

uint64_t sub_23AFE84D0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_BYTE *)(Strong + 72) = 0;
    Strong = swift_release();
  }
  return a2(Strong);
}

id sub_23AFE8530(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  _BYTE *v7;
  id v8;
  id v9;
  objc_class *v10;
  _BYTE *v11;
  id v12;
  objc_class *v13;
  _BYTE *v14;
  objc_class *v15;
  _BYTE *v16;
  objc_super v18;
  objc_super v19;
  objc_super v20;
  objc_super v21;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v4 = Strong;
    if ((*(_BYTE *)(Strong + 73) & 1) != 0)
    {
      if ((a2() & 1) != 0)
      {
        *(_BYTE *)(v4 + 72) = 2;
        if (qword_2569E12F0 != -1)
          swift_once();
        v5 = (void *)qword_256A079E8;
        v6 = (objc_class *)type metadata accessor for FPShouldPauseResult();
        v7 = objc_allocWithZone(v6);
        v7[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] = 1;
        *(_QWORD *)&v7[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore] = v5;
        v18.receiver = v7;
        v18.super_class = v6;
        v8 = v5;
        v9 = objc_msgSendSuper2(&v18, sel_init);
      }
      else
      {
        v15 = (objc_class *)type metadata accessor for FPShouldPauseResult();
        v16 = objc_allocWithZone(v15);
        v16[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] = 0;
        *(_QWORD *)&v16[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore] = 0;
        v19.receiver = v16;
        v19.super_class = v15;
        v9 = objc_msgSendSuper2(&v19, sel_init);
      }
    }
    else
    {
      v13 = (objc_class *)type metadata accessor for FPShouldPauseResult();
      v14 = objc_allocWithZone(v13);
      v14[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] = 1;
      *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore] = 0;
      v20.receiver = v14;
      v20.super_class = v13;
      v9 = objc_msgSendSuper2(&v20, sel_init);
    }
    v12 = v9;
    swift_release();
  }
  else
  {
    v10 = (objc_class *)type metadata accessor for FPShouldPauseResult();
    v11 = objc_allocWithZone(v10);
    v11[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] = 1;
    *(_QWORD *)&v11[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore] = 0;
    v21.receiver = v11;
    v21.super_class = v10;
    return objc_msgSendSuper2(&v21, sel_init);
  }
  return v12;
}

void sub_23AFE8708()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v3;
  id v4;
  void *v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  v1 = (void *)sub_23B1C5954();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    v5 = (void *)sub_23B1C587C();

    swift_willThrow();
  }
}

void sub_23AFE880C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, void *a11, _QWORD *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  _QWORD *v39;
  uint8_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  char *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  id aBlock;
  uint64_t v72;
  uint64_t (*v73)();
  void *v74;
  void *v75;
  _QWORD *v76;
  uint64_t v77;

  v19 = sub_23B1C602C();
  v69 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v68 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)sub_23B1C60A4();
  v66 = *(v21 - 1);
  v67 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v65 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23B1C5E4C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v28 = v25;
    v62 = v19;
    v29 = a3;
    v30 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v31 = a3;
    v32 = sub_23B1C5E40();
    v33 = sub_23B1C6AA0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v63 = a4;
      v35 = (uint8_t *)v34;
      v36 = swift_slowAlloc();
      v64 = a5;
      v37 = (_QWORD *)v36;
      *(_DWORD *)v35 = 138412290;
      v61 = (uint64_t)(v35 + 4);
      swift_getErrorValue();
      v38 = sub_23B0D9CF0(v70);
      aBlock = v38;
      sub_23B1C6CBC();
      *v37 = v38;

      _os_log_impl(&dword_23AA66000, v32, v33, "Failed to prepare FPCK run: %@", v35, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      v39 = v37;
      a5 = v64;
      MEMORY[0x23B8614BC](v39, -1, -1);
      v40 = v35;
      a4 = v63;
      MEMORY[0x23B8614BC](v40, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v28);
    v43 = v62;
    if (qword_2542E1068 != -1)
      swift_once();
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = a4;
    *(_QWORD *)(v44 + 24) = a5;
    v75 = sub_23AA698DC;
    v76 = (_QWORD *)v44;
    aBlock = (id)MEMORY[0x24BDAC760];
    v72 = 1107296256;
    v73 = sub_23AA698FC;
    v74 = &block_descriptor_32_0;
    v45 = _Block_copy(&aBlock);
    swift_retain();
    v46 = v65;
    sub_23B1C6068();
    v77 = MEMORY[0x24BEE4AF8];
    sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
    sub_23AAB6960((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470);
    v47 = v68;
    sub_23B1C6DE8();
    MEMORY[0x23B85F470](0, v46, v47, v45);
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v43);
    (*(void (**)(char *, id))(v66 + 8))(v46, v67);
    swift_release();
  }
  else
  {
    v69 = a1;
    v66 = a14;
    LODWORD(v68) = a10;
    v67 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
    v42 = (char *)a6[2];
    v41 = a6[3];
    v64 = a5;
    v65 = v42;
    v63 = a4;
    if (v41)
      v62 = sub_23B1C61F4();
    else
      v62 = 0;
    v61 = sub_23B1C5954();
    v48 = (void *)sub_23B1C5954();
    sub_23B1C5A08();
    v49 = (void *)sub_23B1C66F8();
    swift_beginAccess();
    v60 = a6[10];
    v75 = a11;
    v76 = a12;
    v50 = (void *)MEMORY[0x24BDAC760];
    aBlock = (id)MEMORY[0x24BDAC760];
    v72 = 1107296256;
    v73 = (uint64_t (*)())sub_23AFD4C7C;
    v74 = &block_descriptor_20_0;
    v51 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v52 = (_QWORD *)swift_allocObject();
    v53 = v66;
    v52[2] = a13;
    v52[3] = v53;
    v54 = v64;
    v52[4] = v63;
    v52[5] = v54;
    v75 = sub_23AFE9650;
    v76 = v52;
    aBlock = v50;
    v72 = 1107296256;
    v73 = (uint64_t (*)())sub_23AFE9098;
    v74 = &block_descriptor_26_0;
    v55 = _Block_copy(&aBlock);
    swift_retain();
    sub_23AAFA320(a13);
    swift_release();
    LOWORD(v59) = 1;
    v56 = v67;
    v57 = (void *)v62;
    v58 = (void *)v61;
    objc_msgSend(v67, sel_scheduleFPCKRun_domainUserInfo_domainRootURL_databaseBackupPath_urls_volumeRole_options_reason_fpfs_iCDPackageDetection_launchType_pauseChecker_shouldPause_proxy_completionHandler_, v65, v62, v61, v48, v49, v68, 0, 20, v59, v60, a6, v51, v69, v55);

    _Block_release(v55);
    _Block_release(v51);
  }
}

uint64_t sub_23AFE8E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v14 = sub_23B1C602C();
  v25 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23B1C60A4();
  v17 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E1068 != -1)
    swift_once();
  v23 = qword_2542EDCE0;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a6;
  v20[3] = a7;
  v20[4] = a1;
  v20[5] = a2;
  v20[6] = a8;
  v20[7] = a9;
  aBlock[4] = sub_23AFE96D8;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698FC;
  aBlock[3] = &block_descriptor_38_1;
  v21 = _Block_copy(aBlock);
  sub_23AAFA320(a6);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23B1C6068();
  v26 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
  sub_23AAB6960((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470);
  sub_23B1C6DE8();
  MEMORY[0x23B85F470](0, v19, v16, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v24);
  return swift_release();
}

void sub_23AFE9098(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  void (*v7)(uint64_t, uint64_t, id, uint64_t, void *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v7 = *(void (**)(uint64_t, uint64_t, id, uint64_t, void *))(a1 + 32);
  v8 = sub_23B1C63E0();
  v10 = v9;
  v11 = sub_23B1C620C();
  swift_retain();
  v13 = a3;
  v12 = a5;
  v7(v8, v10, v13, v11, a5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_23AFE916C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (*v7)(uint64_t, id, void *);
  id v8;
  id v9;

  v7 = *(void (**)(uint64_t, id, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v8 = a3;
  v9 = a4;
  v7(a2, v8, a4);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_23AFE91F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_23AFE9230()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23AFE9274()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFE92C0()
{
  uint64_t v0;

  return sub_23AFE6F24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_DWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(id (**)())(v0 + 48), *(void (**)(_QWORD))(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t type metadata accessor for PeriodicFPCK()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PeriodicFPCK.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23AFE9360 + 4 * byte_23B1E1FAD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23AFE9394 + 4 * byte_23B1E1FA8[v4]))();
}

uint64_t sub_23AFE9394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFE939C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AFE93A4);
  return result;
}

uint64_t sub_23AFE93B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AFE93B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23AFE93BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFE93C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeriodicFPCK.State()
{
  return &type metadata for PeriodicFPCK.State;
}

unint64_t sub_23AFE93E4()
{
  unint64_t result;

  result = qword_2569E7CB0;
  if (!qword_2569E7CB0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2060, &type metadata for PeriodicFPCK.State);
    atomic_store(result, (unint64_t *)&qword_2569E7CB0);
  }
  return result;
}

uint64_t sub_23AFE9428()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23AFE9450()
{
  uint64_t v0;

  return sub_23AFE84D0(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

id sub_23AFE9460()
{
  uint64_t v0;

  return sub_23AFE8530(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_23AFE946C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (v5 + v3 + v4) & ~v3;
  v7 = (((((((v5 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v0 + v4, v1);
  v8(v0 + v6, v1);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + v7))
    swift_release();
  return swift_deallocObject();
}

void sub_23AFE9554(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v7 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 40) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = (v10 + v8 + v9) & ~v8;
  v12 = (v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 11) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 11) & 0xFFFFFFFFFFFFFFF8;
  sub_23AFE880C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD **)(v3 + 32), v3 + v9, v3 + v11, *(_QWORD *)(v3 + v12), *(_DWORD *)(v3 + v13), *(void **)(v3 + v14), *(_QWORD **)(v3 + v14 + 8), *(_QWORD *)(v3 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23AFE961C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFE9650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return sub_23AFE8E54(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], v5[5]);
}

uint64_t sub_23AFE9678()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFE969C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFE96D8()
{
  _QWORD *v0;
  void (*v1)(_QWORD, _QWORD);
  uint64_t (*v2)(void);

  v1 = (void (*)(_QWORD, _QWORD))v0[2];
  v2 = (uint64_t (*)(void))v0[6];
  if (v1)
    v1(v0[4], v0[5]);
  return v2();
}

uint64_t sub_23AFE9718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  os_log_type_t v19;
  uint64_t v21;

  v4 = sub_23B1C5E4C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  if (*(_BYTE *)(a1 + 73) != 1)
  {
    v18 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v15 = sub_23B1C5E40();
    v19 = sub_23B1C6A88();
    if (!os_log_type_enabled(v15, v19))
    {
      v13 = 1;
      goto LABEL_10;
    }
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_23AA66000, v15, v19, "🧹 Periodic FPCK is paused because it has been unregistered", v17, 2u);
    v13 = 1;
LABEL_7:
    MEMORY[0x23B8614BC](v17, -1, -1);
LABEL_10:

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, v13 & 1, 0);
  }
  v11 = *(uint64_t (**)(uint64_t))(a1 + 88);
  v12 = swift_retain();
  v13 = v11(v12);
  swift_release();
  if ((v13 & 1) != 0)
  {
    v14 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v15 = sub_23B1C5E40();
    v16 = sub_23B1C6A88();
    if (!os_log_type_enabled(v15, v16))
    {
      v10 = v8;
      goto LABEL_10;
    }
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_23AA66000, v15, v16, "🧹 Periodic FPCK is paused because system indicated", v17, 2u);
    v10 = v8;
    goto LABEL_7;
  }
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, v13 & 1, 0);
}

uint64_t destroy for ThrottlingParameters()
{
  return swift_release();
}

uint64_t initializeWithCopy for ThrottlingParameters(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ThrottlingParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for ThrottlingParameters(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThrottlingParameters(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThrottlingParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThrottlingParameters()
{
  return &type metadata for ThrottlingParameters;
}

void sub_23AFE9B98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD v5[2];

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v3 + 16))((char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = *(_OWORD *)(a1 + 32);
  v5[0] = *(_OWORD *)(a1 + 16);
  v5[1] = v4;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AFE9C00(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void sub_23AFE9C24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD v5[3];

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v3 + 16))((char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = *(_OWORD *)(a1 + 32);
  v5[0] = *(_OWORD *)(a1 + 16);
  v5[1] = v5[0];
  v5[2] = v4;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AFE9C9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = *(_QWORD *)(v3 - 96);
  v7 = *(_QWORD *)(v6 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v7 + 56))(v1, 1, 1, *(_QWORD *)(v3 - 96));
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v7 + 32))(v1, v2, *(_QWORD *)(v3 - 96));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  }
}

void sub_23AFE9D34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD v5[2];

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v3 + 16))((char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = *(_OWORD *)(a1 + 32);
  v5[0] = *(_OWORD *)(a1 + 16);
  v5[1] = v4;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AFE9DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(v1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_23AFE9DF4(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  unsigned __int8 v12;

  v12 = 3;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23AFED0D4;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_23AA698DC;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1A764C;
  aBlock[3] = &block_descriptor_33;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_runIfPossible_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_23AFE9F34(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  unsigned __int8 v12;

  v12 = 2;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23AFED12C;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1A764C;
  aBlock[3] = &block_descriptor_13_1;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_runIfPossible_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_23AFEA074(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  unsigned __int8 v12;

  v12 = 2;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23AFED12C;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1A764C;
  aBlock[3] = &block_descriptor_33;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_runIfPossible_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_23AFEA1B4(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  int v10;
  int v11;
  _QWORD aBlock[6];
  __int16 v13;

  v13 = 256;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v13;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23AFED150;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1A764C;
  aBlock[3] = &block_descriptor_23_0;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_runIfPossible_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v13;
    v11 = HIBYTE(v13);
    swift_release();
    return v10 | (v11 << 8);
  }
  return result;
}

uint64_t sub_23AFEA2F8(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  unsigned __int8 v12;

  v12 = 1;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23AFED1CC;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1A764C;
  aBlock[3] = &block_descriptor_43_1;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_runIfPossible_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_23AFEA438(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[6];
  uint64_t v12;
  char v13;

  v12 = 0;
  v13 = 1;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23AFED220;
  *(_QWORD *)(v6 + 24) = v5;
  v11[4] = sub_23AA8A65C;
  v11[5] = v6;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23B1A764C;
  v11[3] = &block_descriptor_53_0;
  v7 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_runIfPossible_, v7);
  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

void sub_23AFEA584()
{
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
}

void sub_23AFEA620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = sub_23B1C6C98();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v9 - 128) = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  sub_23AF1E4C8();
}

uint64_t sub_23AFEA6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v0) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v0);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 16))(*(_QWORD *)(v6 - 128), v4, v0);
    v8 = *(_QWORD *)(v6 - 136);
    *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 144);
    *(_QWORD *)(v6 - 104) = v8;
    v9 = *(_QWORD *)(v6 - 160);
    *(_QWORD *)(v6 - 96) = *(_QWORD *)(v6 - 152);
    *(_QWORD *)(v6 - 88) = v9;
    type metadata accessor for ReconciliationID();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v5);
  return sub_23B1C6758();
}

void sub_23AFEA844(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  int v15;
  id v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  id v75;
  id v76;
  BOOL v77;
  char v78;
  id v79;
  id v80;
  unint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  id v85;
  unint64_t *v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v102[8];
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  char v111[8];
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  char v126;
  uint64_t v127;
  uint64_t v128;

  v7 = v5[4];
  v8 = a3 - v7;
  if (__OFSUB__(a3, v7))
  {
    __break(1u);
    goto LABEL_48;
  }
  v6 = a3;
  v12 = v5[2];
  v13 = v5[3];
  v14 = (void *)v5[5];
  v15 = *(unsigned __int8 *)v5;
  v16 = v14;
  v98 = v13;
  sub_23AFECF10(v15, a2, v12, v13, v7, v14, v6, 0, (uint64_t)v102, 0, 0, 1);
  v99 = a4;
  v100 = a2;
  if (!v15)
    goto LABEL_8;
  v17 = *(_QWORD *)(a4 + 16);
  v18 = __OFSUB__(v17, v8);
  v19 = v17 - v8;
  if (v18)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
LABEL_9:
    v28 = xmmword_2542EDBB0;
    v29 = *((_QWORD *)&xmmword_2542EDBB0 + 1);
    v20 = unk_2542EDBC0;
    v26 = qword_2542EDBC8;
    v25 = (void *)*((_QWORD *)&xmmword_2542EDBD0 + 1);
    v24 = xmmword_2542EDBD0;
    v23 = byte_2542EDBE0;
    v22 = qword_2542EDBE8;
    v21 = qword_2542EDBF0;
    v30 = *((id *)&xmmword_2542EDBD0 + 1);
    swift_bridgeObjectRetain();
    sub_23AB7B844((uint64_t)v102);
    v27 = v29;
    a5 = v94;
    if (!v25)
      goto LABEL_35;
LABEL_10:
    v93 = v28;
    v87 = v27;
    v96 = v24;
    v88 = v23;
    v89 = v22;
    v90 = v20;
    v91 = v6;
    v92 = v21;
    sub_23AB7BFCC();
    v31 = (void *)swift_allocError();
    *(_QWORD *)v32 = 0;
    *(_QWORD *)(v32 + 8) = 0;
    *(_BYTE *)(v32 + 16) = -1;
    v33 = v25;
    v34 = v25;
    v35 = (void *)sub_23B1C5870();

    v36 = (void *)sub_23B1C5870();
    v37 = objc_msgSend(v35, sel_domain);
    v38 = sub_23B1C63E0();
    v40 = v39;

    v41 = objc_msgSend(v36, sel_domain);
    v42 = sub_23B1C63E0();
    v44 = v43;

    if (v38 == v42 && v40 == v44)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v45 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v45 & 1) == 0)
      {

        goto LABEL_19;
      }
    }
    v46 = objc_msgSend(v35, sel_code);
    v47 = objc_msgSend(v36, sel_code);

    if (v46 == v47)
    {
      v48 = (void *)swift_allocError();
      *(_QWORD *)v49 = 0;
      *(_QWORD *)(v49 + 8) = 0;
      *(_BYTE *)(v49 + 16) = -1;
      v50 = a1;
      v51 = (void *)sub_23B1C5870();

      v52 = (void *)sub_23B1C5870();
      v53 = objc_msgSend(v51, sel_domain);
      v54 = sub_23B1C63E0();
      v56 = v55;

      v57 = objc_msgSend(v52, sel_domain);
      v58 = sub_23B1C63E0();
      v60 = v59;

      if (v54 == v58 && v56 == v60)
      {
        swift_bridgeObjectRelease_n();
        v28 = v93;
      }
      else
      {
        v78 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = v93;
        if ((v78 & 1) == 0)
        {

LABEL_32:
          v95 = a5;
          v6 = v91;
          if (qword_2542E05C0 != -1)
            swift_once();
          v28 = xmmword_2542EDBB0;
          v81 = *((_QWORD *)&xmmword_2542EDBB0 + 1);
          v20 = unk_2542EDBC0;
          v26 = qword_2542EDBC8;
          v82 = (void *)*((_QWORD *)&xmmword_2542EDBD0 + 1);
          v97 = xmmword_2542EDBD0;
          v23 = byte_2542EDBE0;
          v22 = qword_2542EDBE8;
          v21 = qword_2542EDBF0;
          v83 = *((id *)&xmmword_2542EDBD0 + 1);
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          v27 = v81;
          v25 = v82;
          a5 = v95;
          v24 = v97;
          goto LABEL_35;
        }
      }
      v79 = objc_msgSend(v51, sel_code);
      v80 = objc_msgSend(v52, sel_code);

      if (v79 != v80)
        goto LABEL_32;
      goto LABEL_30;
    }
LABEL_19:
    v61 = (void *)swift_allocError();
    *(_QWORD *)v62 = 0;
    *(_QWORD *)(v62 + 8) = 0;
    *(_BYTE *)(v62 + 16) = -1;
    v63 = a1;
    v64 = (void *)sub_23B1C5870();

    v65 = (void *)sub_23B1C5870();
    v66 = objc_msgSend(v64, sel_domain);
    v67 = sub_23B1C63E0();
    v69 = v68;

    v70 = objc_msgSend(v65, sel_domain);
    v71 = sub_23B1C63E0();
    v73 = v72;

    if (v67 == v71 && v69 == v73)
    {
      swift_bridgeObjectRelease_n();
      v28 = v93;
    }
    else
    {
      v74 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v93;
      if ((v74 & 1) == 0)
      {

LABEL_30:
        v6 = v91;
        v21 = v92;
        v22 = v89;
        v20 = v90;
        v23 = v88;
        v24 = v96;
        v27 = v87;
        goto LABEL_35;
      }
    }
    v75 = objc_msgSend(v64, sel_code);
    v76 = objc_msgSend(v65, sel_code);

    v77 = v75 == v76;
    v6 = v91;
    v21 = v92;
    v22 = v89;
    v20 = v90;
    v23 = v88;
    v24 = v96;
    v27 = v87;
    if (v77)
      goto LABEL_46;
    goto LABEL_35;
  }
  v20 = v104;
  if (v19 <= 0 && v104)
  {
LABEL_8:
    v94 = a5;
    if (qword_2542E05C0 == -1)
      goto LABEL_9;
    goto LABEL_49;
  }
  v22 = v109;
  v21 = v110;
  v23 = v108;
  v24 = v106;
  v25 = v107;
  v26 = v105;
  v27 = v103;
  v28 = v102[0];
  if (v107)
    goto LABEL_10;
LABEL_35:
  v120 = v28;
  v121 = v27;
  v122 = v20;
  v123 = v26;
  v124 = v24;
  v125 = v25;
  v126 = v23;
  v127 = v22;
  v128 = v21;
  if (v26 <= v6 || v26 == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (v20 < *(_QWORD *)(v99 + 24))
      v86 = sub_23AFEB744((unint64_t *)v99);
    else
      v86 = *(unint64_t **)(v99 + 16);
    sub_23AFEB5D4(a1, v100, v6, (uint64_t)v86, *(_BYTE *)(v99 + 32), (uint64_t)v111);
  }
  else
  {
    if (v27 <= v100)
      v84 = v100;
    else
      v84 = v27;
    v85 = a1;
    sub_23AFECF10(1, v84, v20, v98, v6, a1, v6, 0, (uint64_t)v111, 0, 0, 1);
  }

  swift_bridgeObjectRelease();
  v22 = v118;
  v21 = v119;
  v23 = v117;
  v24 = v115;
  v25 = v116;
  v20 = v113;
  v26 = v114;
  v27 = v112;
  v28 = v111[0];
LABEL_46:
  *(_BYTE *)a5 = v28;
  *(_QWORD *)(a5 + 8) = v27;
  *(_QWORD *)(a5 + 16) = v20;
  *(_QWORD *)(a5 + 24) = v26;
  *(_QWORD *)(a5 + 32) = v24;
  *(_QWORD *)(a5 + 40) = v25;
  *(_BYTE *)(a5 + 48) = v23;
  *(_QWORD *)(a5 + 56) = v22;
  *(_QWORD *)(a5 + 64) = v21;
}

void sub_23AFEAF88()
{
  type metadata accessor for ReconciliationID();
}

void sub_23AFEAFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;

  v17 = *(_QWORD *)(a1 - 8);
  v18 = MEMORY[0x24BDAC7A8](a1);
  v20 = (char *)&a9 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v22, v10, v11);
  swift_getTupleTypeMetadata2();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v22, a1);
  *(_QWORD *)(v15 - 112) = v14;
  *(_QWORD *)(v15 - 104) = v12;
  *(_QWORD *)(v15 - 96) = v9;
  *(_QWORD *)(v15 - 88) = v13;
  type metadata accessor for ReconciliationID();
}

void sub_23AFEB08C()
{
  int8x16_t *v0;
  uint64_t v1;

  swift_getTupleTypeMetadata2();
  sub_23AEFF3FC(v0, *(_QWORD *)(v1 - 120));
}

uint64_t sub_23AFEB0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
  *(_BYTE *)(v3 + v0) = v4;
  return result;
}

void sub_23AFEB0EC()
{
  void *v0;
  id v1;
  signed int v2;
  id v3;
  signed int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  signed int v16;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_defaultStore);
  v2 = objc_msgSend(v1, sel_speculativeSetRecencyDays);

  v3 = objc_msgSend(v0, sel_defaultStore);
  v4 = objc_msgSend(v3, sel_speculativeSetPageSize);

  v5 = objc_msgSend(v0, sel_defaultStore);
  v6 = (uint64_t)objc_msgSend(v5, sel_speculativeSetRefreshInterval);

  v7 = 1000000000 * v6;
  if ((unsigned __int128)(v6 * (__int128)1000000000) >> 64 != (1000000000 * v6) >> 63)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = objc_msgSend(v0, sel_defaultStore);
  v9 = (uint64_t)objc_msgSend(v8, sel_speculativeSetCancelDownloadDelay);

  v10 = 1000000000 * v9;
  if ((unsigned __int128)(v9 * (__int128)1000000000) >> 64 != (1000000000 * v9) >> 63)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = objc_msgSend(v0, sel_defaultStore);
  v12 = (uint64_t)objc_msgSend(v11, sel_speculativeSetMaximumDownloadsRefreshInterval);

  v13 = 1000000000 * v12;
  if ((unsigned __int128)(v12 * (__int128)1000000000) >> 64 == (1000000000 * v12) >> 63)
  {
    v14 = v2;
    v15 = objc_msgSend(v0, sel_defaultStore);
    v16 = objc_msgSend(v15, sel_speculativeSetMaximumDownloadsAllowed);

    xmmword_2542EDD80 = xmmword_23B1E2090;
    *(_OWORD *)algn_2542EDD90 = xmmword_23B1E20A0;
    LOBYTE(xmmword_2542EDDA0) = 1;
    *(__int128 *)((char *)&xmmword_2542EDDA0 + 8) = xmmword_23B1E20B0;
    qword_2542EDDB8 = (uint64_t)sub_23AFEB2E4;
    *(_QWORD *)&xmmword_2542EDDC0 = 0;
    *((_QWORD *)&xmmword_2542EDDC0 + 1) = v14;
    unk_2542EDDD0 = v4;
    qword_2542EDDD8 = v7;
    *(_QWORD *)&xmmword_2542EDDE0 = v10;
    *((_QWORD *)&xmmword_2542EDDE0 + 1) = v13;
    unk_2542EDDF0 = 90000000000;
    qword_2542EDDF8 = v16;
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_23AFEB2E4(int a1)
{
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  sub_23ADB47EC(a1);
  v3 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_temporaryFileTrackingDelayForVariant_, v3);
  v5 = v4;

  v6 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 >= 9.22337204e18)
LABEL_7:
    __break(1u);
}

uint64_t sub_23AFEB3C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AFEB3F0 + 4 * byte_23B1E20C0[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_23AFEB3F0()
{
  return 1752462689;
}

unint64_t sub_23AFEB3FC()
{
  return 0xD000000000000013;
}

unint64_t sub_23AFEB530@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23AFEC560(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23AFEB558()
{
  unsigned __int8 *v0;

  return sub_23AFEB3C4(*v0);
}

double sub_23AFEB560()
{
  double result;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  sub_23AFECF10(0, 0, 0, 0, 0, 0, 0, 0, (uint64_t)&v1, 0, 0, 1);
  xmmword_2542EDBD0 = v3;
  *(_OWORD *)&byte_2542EDBE0 = v4;
  qword_2542EDBF0 = v5;
  result = *(double *)&v2;
  xmmword_2542EDBB0 = v1;
  unk_2542EDBC0 = v2;
  return result;
}

void sub_23AFEB5D4(id a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[4];
  uint64_t v27;

  v8 = a4 / 10;
  v9 = a4 + a4 / -10;
  if (__OFADD__(a4, a4 / -10))
  {
    __break(1u);
    goto LABEL_18;
  }
  v10 = a4 + v8;
  if (__OFADD__(a4, v8))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (__OFSUB__(v9, v10))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 - v10 > 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v11 = *(_QWORD *)(v6 + 16);
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = *(_QWORD *)(v6 + 8);
  if ((a5 & 1) != 0)
  {
    v17 = v10 - v9;
    if (__OFSUB__(v10, v9))
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v18 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    if ((v18 & 0x8000000000000000) != 0)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    if (v17 == -1)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v19 = sub_23AFEC440(v18);
    v20 = sub_23AFEC4C8(v9, 0, v19, v9, v10);
    if ((v21 & 1) != 0)
    {
LABEL_27:
      __break(1u);
      return;
    }
    a4 = v20;
  }
  v22 = a3 + a4;
  if (__OFADD__(a3, a4))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v16 > a2)
    a2 = v16;
  v23 = a1;
  sub_23AFECF10(1, a2, v12, v22, a3, a1, a3, 0, (uint64_t)v26, 0, 0, 1);
  v24 = v26[3];
  *(_OWORD *)(a6 + 32) = v26[2];
  *(_OWORD *)(a6 + 48) = v24;
  *(_QWORD *)(a6 + 64) = v27;
  v25 = v26[1];
  *(_OWORD *)a6 = v26[0];
  *(_OWORD *)(a6 + 16) = v25;
}

unint64_t *sub_23AFEB744(unint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_12;
  }
  v4 = *result;
  if (__OFSUB__(0, *result))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = 0;
  if (!v4 || (v3 & 0x8000000000000000) != 0)
    return (unint64_t *)v5;
  if (v3 >= __clz(v4))
    return (unint64_t *)result[1];
  v5 = v4 << v3;
  v6 = result[1];
  if (!__OFSUB__(v6, v5))
  {
    if ((uint64_t)(v6 - v5) <= 0)
      return (unint64_t *)result[1];
    return (unint64_t *)v5;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_23AFEB7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28[7];
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE v32[8];
  uint64_t v33;

  v1 = v0;
  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)v1)
    return 8756450;
  if (*(_BYTE *)v1 == 1)
  {
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v7 = v6;
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9 = v7 * 1000000000.0;
    if ((~COERCE__INT64(v7 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
        {
          v10 = (uint64_t)v9;
          sub_23ADB27CC(v1 + 40, (uint64_t)v32);
          sub_23ADB27CC((uint64_t)v32, (uint64_t)&v33);
          if (v33)
          {
            swift_getErrorValue();
            v11 = (uint64_t)sub_23B0D9CF0(v28[2]);
          }
          else
          {
            sub_23AA9F52C(0, &qword_2569E27C0);
            v11 = sub_23B1C6C74();
          }
          v17 = (void *)v11;
          v30 = 0x73616C20919B9FF0;
          v31 = 0xAB00000000273A74;
          sub_23AF3E2AC(v10, *(_QWORD *)(v1 + 32));
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          v19 = v30;
          v18 = v31;
          v30 = 0;
          v31 = 0xE000000000000000;
          sub_23B1C6EFC();
          swift_bridgeObjectRelease();
          v30 = 0x273A7478656ELL;
          v31 = 0xE600000000000000;
          sub_23AF3E2AC(v10, *(_QWORD *)(v1 + 24));
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          v29 = *(_QWORD *)(v1 + 16);
          sub_23B1C7304();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          v30 = v19;
          v31 = v18;
          swift_bridgeObjectRetain();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v21 = v30;
          v20 = v31;
          v30 = 0;
          v31 = 0xE000000000000000;
          sub_23B1C6EFC();
          swift_bridgeObjectRelease();
          v30 = 0x273A726F727265;
          v31 = 0xE700000000000000;
          v22 = objc_msgSend(v17, sel_description);
LABEL_18:
          v25 = v22;
          sub_23B1C63E0();

          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          sub_23AFEB3C4(*(_BYTE *)(v1 + 48));
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          swift_bridgeObjectRetain();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          v30 = v21;
          v31 = v20;
          swift_bridgeObjectRetain();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v27 = v30;
          v26 = v31;
          v30 = 0x3A6F697270;
          v31 = 0xE500000000000000;
          sub_23ADA7D88(*(_QWORD *)(v1 + 8));
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          v30 = v27;
          v31 = v26;
          swift_bridgeObjectRetain();
          sub_23B1C64F4();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v30;
        }
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v13 = v12;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = v13 * 1000000000.0;
  if ((~COERCE__INT64(v13 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v14 < 9.22337204e18)
  {
    v15 = (uint64_t)v14;
    sub_23ADB27CC(v1 + 40, (uint64_t)v32);
    sub_23ADB27CC((uint64_t)v32, (uint64_t)&v33);
    if (v33)
    {
      swift_getErrorValue();
      v16 = (uint64_t)sub_23B0D9CF0(v28[6]);
    }
    else
    {
      sub_23AA9F52C(0, &qword_2569E27C0);
      v16 = sub_23B1C6C74();
    }
    v17 = (void *)v16;
    v30 = 0x73616C20B6949FF0;
    v31 = 0xAB00000000273A74;
    sub_23AF3E2AC(v15, *(_QWORD *)(v1 + 32));
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v24 = v30;
    v23 = v31;
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v30 = 0x3A64657269707865;
    v31 = 0xE900000000000027;
    sub_23AF3E2AC(v15, *(_QWORD *)(v1 + 24));
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v29 = *(_QWORD *)(v1 + 16);
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v30 = v24;
    v31 = v23;
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v30;
    v20 = v31;
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v30 = 0x273A726F727265;
    v31 = 0xE700000000000000;
    v22 = objc_msgSend(v17, sel_description);
    goto LABEL_18;
  }
LABEL_24:
  __break(1u);
  return result;
}

BOOL sub_23AFEBE2C(uint64_t a1)
{
  return a1 != 0;
}

uint64_t sub_23AFEBE38()
{
  return sub_23AFEB7A8();
}

uint64_t sub_23AFEBE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B8613CC](&unk_23B1E2428, a3);
  return sub_23B1C73B8();
}

uint64_t sub_23AFEBECC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1E2428, a1);
  return sub_23B1C6698();
}

uint64_t sub_23AFEBF18()
{
  MEMORY[0x23B8613CC](&unk_23B1E2428);
  return sub_23B1C66B0();
}

uint64_t sub_23AFEBF68()
{
  MEMORY[0x23B8613CC](&unk_23B1E2428);
  return sub_23B1C66A4();
}

BOOL sub_23AFEBFB8@<W0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_23AFEBE2C(*a1);
  *a2 = result;
  return result;
}

void sub_23AFEBFE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[6];

  v2 = a1[3];
  v3 = MEMORY[0x24BDAC7A8](a1);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *))(v7 + 16))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = a1[4];
  v8 = a1[5];
  v10[2] = v4;
  v10[3] = v2;
  v10[4] = v9;
  v10[5] = v8;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AFEC0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)(v7 - 116) = *(unsigned __int8 *)(v1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v1, v0);
    *(_QWORD *)(v7 - 112) = 0;
    *(_QWORD *)(v7 - 104) = 0xE000000000000000;
    sub_23B1C64F4();
    sub_23B1C7340();
    sub_23B1C64F4();
    v8 = sub_23AE063CC(*(_DWORD *)(v7 - 116));
    (*(void (**)(void))(v8 + 168))();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v7 - 112);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v1, v3);
    *(_QWORD *)(v7 - 112) = 0;
    *(_QWORD *)(v7 - 104) = 0xE000000000000000;
    sub_23B1C64F4();
    sub_23B1C7340();
    sub_23B1C64F4();
    v10 = sub_23AE063CC(*(_DWORD *)(v7 - 116));
    (*(void (**)(void))(v10 + 168))();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v7 - 112);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v3);
  }
  return v9;
}

void sub_23AFEC234()
{
  type metadata accessor for ReconciliationID();
}

void sub_23AFEC284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for ThrottlingKey();
}

void sub_23AFEC2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, _QWORD, uint64_t);
  void (*v23)(uint64_t, char *, uint64_t);

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v18 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v20 = (char *)&a9 - v19;
  v21 = (char *)&a9 + *(int *)(v18 + 48) - v19;
  v22 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(a1 - 8) + 16);
  v22((char *)&a9 - v19, *(_QWORD *)(v15 - 144), a1);
  v22(v21, *(_QWORD *)(v15 - 120), a1);
  *(_QWORD *)(v15 - 120) = v20[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  v23 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v23(v14, v20, v9);
  v23(v12, v21, v9);
  sub_23AAB1264(v14, v12, v13, v11);
}

BOOL sub_23AFEC3C4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  void (*v8)(uint64_t, uint64_t);

  v7 = (a1 & 1) != 0 && qword_23B1E2468[*(_QWORD *)(v6 - 120)] == qword_23B1E2468[v2];
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v3, v1);
  v8(v4, v1);
  return v7;
}

void sub_23AFEC430()
{
  sub_23AFEC234();
}

unint64_t sub_23AFEC440(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x23B8614D4](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x23B8614D4](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23AFEC4C8(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  BOOL v6;

  if ((a2 & 1) != 0)
  {
    if (!a3)
      return result;
    if (a3 < 0)
      return sub_23AFEC4C8(a5, 0, a3 + 1);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v5 = a5 - result;
  if (__OFSUB__(a5, result))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v5 < a3)
  {
    if (v5 + 1 == a3)
      return 0;
    goto LABEL_16;
  }
  v6 = __OFADD__(result, a3);
  result += a3;
  if (v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFSUB__(a4, result))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a4 - result > 0)
LABEL_19:
    __break(1u);
  return result;
}

unint64_t sub_23AFEC560(unint64_t result)
{
  if (result >= 0xD)
    return 13;
  return result;
}

uint64_t sub_23AFEC570(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  char v4;
  id v5;
  id v6;
  char v7;
  id v8;
  char v9;
  id v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  char v27;
  id v28;
  id v30;
  char v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  __int128 v54;
  __int128 v55;
  id v56;
  id v57;

  v1 = a1;
  if (!a1)
    return v1;
  _s3__C4CodeOMa_1(0);
  *(_QWORD *)&v54 = -1000;
  v2 = (id)v1;
  v3 = (id)v1;
  sub_23AEC3774();
  v4 = sub_23B1C575C();

  if ((v4 & 1) != 0)
  {

    return 1;
  }
  v57 = (id)v1;
  v5 = (id)v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  if (swift_dynamicCast())
  {
    if (v55 <= 0xFBu)
    {

      sub_23AB7C0B0(v54, *((uint64_t *)&v54 + 1), v55);
      return 2;
    }
    sub_23AB7C0B0(v54, *((uint64_t *)&v54 + 1), v55);
  }

  *(_QWORD *)&v54 = -1003;
  v6 = (id)v1;
  v7 = sub_23B1C575C();

  if ((v7 & 1) != 0)
  {

    return 3;
  }
  *(_QWORD *)&v54 = -1004;
  v8 = (id)v1;
  v9 = sub_23B1C575C();

  if ((v9 & 1) != 0)
  {

    return 4;
  }
  *(_QWORD *)&v54 = -2005;
  v10 = (id)v1;
  v11 = sub_23B1C575C();

  if ((v11 & 1) != 0)
  {
    v12 = (void *)sub_23B1C5870();
    v13 = objc_msgSend(v12, sel_userInfo);
    v14 = sub_23B1C620C();

    v15 = sub_23B1C63E0();
    if (*(_QWORD *)(v14 + 16) && (v17 = sub_23AAAF4C4(v15, v16), (v18 & 1) != 0))
    {
      sub_23AAA15AC(*(_QWORD *)(v14 + 56) + 32 * v17, (uint64_t)&v54);
    }
    else
    {
      v54 = 0u;
      v55 = 0u;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v55 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0 && (v57 & 1) != 0)
        return 10;
    }
    else
    {
      sub_23AA94C08((uint64_t)&v54);
    }
    return 5;
  }
  *(_QWORD *)&v54 = -2010;
  v19 = (id)v1;
  v20 = sub_23B1C575C();

  if ((v20 & 1) != 0)
  {
    v21 = (void *)sub_23B1C5870();
    v22 = objc_msgSend(v21, sel_userInfo);
    v23 = sub_23B1C620C();

    if (*(_QWORD *)(v23 + 16) && (v24 = sub_23AAAF4C4(0xD000000000000016, 0x800000023B201580), (v25 & 1) != 0))
    {
      sub_23AAA15AC(*(_QWORD *)(v23 + 56) + 32 * v24, (uint64_t)&v54);
    }
    else
    {
      v54 = 0u;
      v55 = 0u;
    }

    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v55 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        if ((_BYTE)v57)
          return 0;
        else
          return 6;
      }
    }
    else
    {
      sub_23AA94C08((uint64_t)&v54);
    }
    return 6;
  }
  *(_QWORD *)&v54 = -2011;
  v26 = (id)v1;
  v27 = sub_23B1C575C();

  if ((v27 & 1) != 0)
  {

    return 8;
  }
  v57 = (id)v1;
  v28 = (id)v1;
  if (swift_dynamicCast())
  {
    if (v55 == 253 || v55 == 254)
    {

      return 7;
    }
    sub_23AB7C0B0(v54, *((uint64_t *)&v54 + 1), v55);
  }

  v30 = (id)v1;
  LODWORD(v54) = sub_23B1C54B0();
  sub_23AB6CD48();
  v31 = sub_23B1C575C();

  if ((v31 & 1) == 0)
  {
    v57 = (id)v1;
    v37 = (id)v1;
    sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
    if (!swift_dynamicCast())
    {
LABEL_61:

      return 0;
    }
    v38 = v56;
    v39 = objc_msgSend(v56, sel_domain);
    v40 = sub_23B1C63E0();
    v42 = v41;

    if (v40 == sub_23B1C63E0() && v42 == v43)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v45 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v45 & 1) == 0)
      {
LABEL_60:

        goto LABEL_61;
      }
    }
    v46 = objc_msgSend(v56, sel_code);
    if (v46 == (id)*MEMORY[0x24BDC81C8])
    {
      v47 = objc_msgSend(v56, sel_userInfo);
      v48 = sub_23B1C620C();

      v49 = sub_23B1C63E0();
      if (*(_QWORD *)(v48 + 16) && (v51 = sub_23AAAF4C4(v49, v50), (v52 & 1) != 0))
      {
        sub_23AAA15AC(*(_QWORD *)(v48 + 56) + 32 * v51, (uint64_t)&v54);
      }
      else
      {
        v54 = 0u;
        v55 = 0u;
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v55 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0 && (v53 & 1) != 0)
        {
          v1 = 12;
LABEL_69:

          return v1;
        }
      }
      else
      {
        sub_23AA94C08((uint64_t)&v54);
      }
      v1 = 11;
      goto LABEL_69;
    }
    goto LABEL_60;
  }
  v32 = (void *)sub_23B1C5870();
  v33 = objc_msgSend(v32, sel_userInfo);
  v34 = sub_23B1C620C();

  if (*(_QWORD *)(v34 + 16) && (v35 = sub_23AAAF4C4(0xD000000000000013, 0x800000023B1FC400), (v36 & 1) != 0))
  {
    sub_23AAA15AC(*(_QWORD *)(v34 + 56) + 32 * v35, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }

  swift_bridgeObjectRelease();
  v44 = *((_QWORD *)&v55 + 1);
  sub_23AA94C08((uint64_t)&v54);
  if (v44)
    return 9;
  else
    return 0;
}

uint64_t sub_23AFECD80(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  id v12;
  __int128 v13;
  __int128 v14;

  v2 = a1;
  v3 = sub_23AFEC570((uint64_t)a1);
  if ((_BYTE)v3)
  {
    if (a1
      && (v4 = a1,
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880),
          sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000),
          (swift_dynamicCast() & 1) != 0))
    {
      v5 = objc_msgSend(v12, sel_userInfo);

      v6 = sub_23B1C620C();
      v7 = sub_23B1C63E0();
      if (*(_QWORD *)(v6 + 16) && (v9 = sub_23AAAF4C4(v7, v8), (v10 & 1) != 0))
      {
        sub_23AAA15AC(*(_QWORD *)(v6 + 56) + 32 * v9, (uint64_t)&v13);
      }
      else
      {
        v13 = 0u;
        v14 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v14 + 1))
      {
        swift_dynamicCast();
        return v3;
      }
    }
    else
    {
      v13 = 0u;
      v14 = 0u;
    }
    sub_23AA94C08((uint64_t)&v13);
  }
  return v3;
}

void sub_23AFECF10(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD v30[5];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a7;
  v15 = a2;
  v18 = a12;
  if (a12 == 1)
  {
    v19 = a5;
    v21 = a3;
    v22 = sub_23AFECD80(a6);
    a5 = v19;
    v24 = v22;
    v18 = v25;
    a3 = v21;
    v15 = a2;
  }
  else
  {
    v24 = a10;
    v23 = a11;
  }
  if (v24 > 0xBu || ((1 << v24) & 0x860) == 0)
    v27 = a4;
  else
    v27 = 0x7FFFFFFFFFFFFFFFLL;
  if ((a8 & 1) == 0 && a1 == 1)
  {
    if (v24 == 7)
    {
      v28 = v23;
      v31 = a3;
      v32 = a5;
      v29 = a6;
      if (qword_2542E7160 != -1)
        v29 = (id)swift_once();
      MEMORY[0x24BDAC7A8](v29);
      v30[2] = a4;
      v30[3] = v33;
      a1 = sub_23AFE9DF4((uint64_t)sub_23AFED0AC, (uint64_t)v30);

      if (a1 == 3)
        a1 = 1;
      a3 = v31;
      a5 = v32;
      v23 = v28;
    }
    else if (v27 > v33)
    {
      a1 = 1;
    }
    else
    {
      a1 = 2;
    }
  }
  *(_BYTE *)a9 = a1;
  *(_QWORD *)(a9 + 8) = v15;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = v27;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = v24;
  *(_QWORD *)(a9 + 56) = v23;
  *(_QWORD *)(a9 + 64) = v18;
}

void sub_23AFED0AC(char *a1@<X8>)
{
  uint64_t v1;
  char v2;

  if (*(_QWORD *)(v1 + 24) < *(_QWORD *)(v1 + 16))
    v2 = 1;
  else
    v2 = 2;
  *a1 = v2;
}

uint64_t sub_23AFED0C4()
{
  return swift_deallocObject();
}

_QWORD *sub_23AFED0D4()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = *(_BYTE **)(v0 + 16);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  *v1 = v3;
  return result;
}

uint64_t sub_23AFED10C()
{
  return swift_deallocObject();
}

uint64_t sub_23AFED11C()
{
  return swift_deallocObject();
}

uint64_t sub_23AFED130()
{
  return swift_deallocObject();
}

uint64_t sub_23AFED140()
{
  return swift_deallocObject();
}

_QWORD *sub_23AFED150()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = *(_BYTE **)(v0 + 16);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  *v1 = v3;
  v1[1] = 0;
  return result;
}

uint64_t sub_23AFED18C()
{
  return swift_deallocObject();
}

uint64_t sub_23AFED19C()
{
  return swift_deallocObject();
}

uint64_t sub_23AFED1AC()
{
  return swift_deallocObject();
}

uint64_t sub_23AFED1BC()
{
  return swift_deallocObject();
}

_QWORD *sub_23AFED1CC()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = *(_BYTE **)(v0 + 16);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  *v1 = 0;
  return result;
}

uint64_t sub_23AFED200()
{
  return swift_deallocObject();
}

uint64_t sub_23AFED210()
{
  return swift_deallocObject();
}

_QWORD *sub_23AFED220()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  *(_QWORD *)v1 = v3;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_23AFED25C()
{
  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for JobThrottlingDomainWideError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for JobThrottlingDomainWideError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_23AFED348 + 4 * byte_23B1E20D2[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_23AFED37C + 4 * byte_23B1E20CD[v4]))();
}

uint64_t sub_23AFED37C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFED384(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AFED38CLL);
  return result;
}

uint64_t sub_23AFED398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AFED3A0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_23AFED3A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFED3AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JobThrottlingDomainWideError()
{
  return &type metadata for JobThrottlingDomainWideError;
}

uint64_t storeEnumTagSinglePayload for JobThrottlingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23AFED414 + 4 * byte_23B1E20DC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23AFED448 + 4 * byte_23B1E20D7[v4]))();
}

uint64_t sub_23AFED448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFED450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AFED458);
  return result;
}

uint64_t sub_23AFED464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AFED46CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23AFED470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFED478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JobThrottlingState()
{
  return &type metadata for JobThrottlingState;
}

uint64_t sub_23AFED494(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23AFED4D4 + 4 * byte_23B1E20E1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23AFED4F4 + 4 * byte_23B1E20E6[v4]))();
}

_BYTE *sub_23AFED4D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23AFED4F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23AFED4FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23AFED504(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23AFED50C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23AFED514(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for ThrottlingKey.Kind()
{
  JUMPOUT(0x23B861318);
}

uint64_t destroy for JobThrottle(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JobThrottle(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 40);
  v5 = v4;
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JobThrottle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(void **)(a1 + 40);
  v5 = *(void **)(a2 + 40);
  v6 = v5;
  *(_QWORD *)(a1 + 40) = v5;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JobThrottle(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JobThrottle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JobThrottle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JobThrottle()
{
  return &type metadata for JobThrottle;
}

void sub_23AFED788()
{
  type metadata accessor for ReconciliationID();
}

_QWORD *sub_23AFED80C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v7 + 64) <= *(_QWORD *)(v6 + 64))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v6 + 80));
  if (v9 <= 7
    && (unint64_t)(v8 + 2) <= 0x18
    && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) == 0)
  {
    v13 = *((unsigned __int8 *)a2 + v8);
    if (v13 >= 2)
    {
      if (v8 <= 3)
        v14 = v8;
      else
        v14 = 4;
      __asm { BR              X16 }
    }
    v15 = v13 == 1;
    if (v13 == 1)
    {
      v6 = *(_QWORD *)(v5 - 8);
      v16 = *(_QWORD *)(a3 + 24);
    }
    else
    {
      v16 = *(_QWORD *)(a3 + 16);
    }
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v16);
    *((_BYTE *)v4 + v8) = v15;
    *((_BYTE *)v4 + v8 + 1) = *((_BYTE *)a2 + v8 + 1);
  }
  else
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v9 + 16) & ~v9));
    swift_retain();
  }
  return v4;
}

uint64_t sub_23AFED940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v2 - 8);
  if (*(_QWORD *)(v5 + 64) > v4)
    v4 = *(_QWORD *)(v5 + 64);
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (v6 < 2)
  {
    if (v6 == 1)
      v3 = *(_QWORD *)(v2 - 8);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    if (v4 <= 3)
      v7 = v4;
    else
      v7 = 4;
    return ((uint64_t (*)(void))((char *)&loc_23AFED98C + 4 * byte_23B1E20F0[v7]))();
  }
}

uint64_t sub_23AFED9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v7 + 64) <= *(_QWORD *)(v6 + 64))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *(unsigned __int8 *)(a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X16 }
  }
  v11 = v9 == 1;
  if (v9 == 1)
  {
    v6 = *(_QWORD *)(v5 - 8);
    v12 = *(_QWORD *)(a3 + 24);
  }
  else
  {
    v12 = *(_QWORD *)(a3 + 16);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v12);
  *(_BYTE *)(a1 + v8) = v11;
  *(_BYTE *)(v8 + 1 + a1) = *(_BYTE *)(v8 + 1 + a2);
  return a1;
}

uint64_t sub_23AFEDAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64);
  if (a1 != a2)
  {
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 24);
    else
      v13 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  *(_BYTE *)(v9 + 1 + a1) = *(_BYTE *)(v9 + 1 + a2);
  return a1;
}

uint64_t sub_23AFEDC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v7 + 64) <= *(_QWORD *)(v6 + 64))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *(unsigned __int8 *)(a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X16 }
  }
  v11 = v9 == 1;
  if (v9 == 1)
  {
    v6 = *(_QWORD *)(v5 - 8);
    v12 = *(_QWORD *)(a3 + 24);
  }
  else
  {
    v12 = *(_QWORD *)(a3 + 16);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v12);
  *(_BYTE *)(a1 + v8) = v11;
  *(_BYTE *)(v8 + 1 + a1) = *(_BYTE *)(v8 + 1 + a2);
  return a1;
}

uint64_t sub_23AFEDD38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64);
  if (a1 != a2)
  {
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 24);
    else
      v13 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  *(_BYTE *)(v9 + 1 + a1) = *(_BYTE *)(v9 + 1 + a2);
  return a1;
}

uint64_t sub_23AFEDEC0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v3 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 2;
  v5 = 8 * (v3 + 2);
  if ((v3 + 2) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23AFEDF88 + 4 * byte_23B1E2113[(v4 - 1)]))();
}

void sub_23AFEDFD4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  v6 = v5 + 2;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -2)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 2);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

void sub_23AFEE180()
{
  JUMPOUT(0x23B8613CCLL);
}

unint64_t sub_23AFEE194()
{
  unint64_t result;

  result = qword_2569E7CB8;
  if (!qword_2569E7CB8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E22E8, &type metadata for JobThrottlingState);
    atomic_store(result, (unint64_t *)&qword_2569E7CB8);
  }
  return result;
}

unint64_t sub_23AFEE1DC()
{
  unint64_t result;

  result = qword_2569E7CC0;
  if (!qword_2569E7CC0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E23B0, &type metadata for JobThrottlingDomainWideError);
    atomic_store(result, (unint64_t *)&qword_2569E7CC0);
  }
  return result;
}

unint64_t sub_23AFEE24C()
{
  unint64_t v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  if (qword_2542E1F68 != -1)
    swift_once();
  v0 = 0xD000000000000017;
  v1 = (id)qword_2542EDD10;
  v2 = sub_23B1C5AD4();
  v4 = v3;
  v5 = sub_23B1C5AD4();
  v7 = v6;
  sub_23AAAE6AC(v2, v4);
  v9 = v8;
  sub_23AAAE53C(v5, v7);
  sub_23AAAE53C(v2, v4);

  if ((v9 & 1) == 0)
  {
    if (qword_2542E1F60 != -1)
      swift_once();
    v10 = (id)qword_2542EDC80;
    v11 = sub_23B1C5AD4();
    v13 = v12;
    v14 = sub_23B1C5AD4();
    v16 = v15;
    sub_23AAAE6AC(v11, v13);
    v18 = v17;
    sub_23AAAE53C(v14, v16);
    sub_23AAAE53C(v11, v13);

    if ((v18 & 1) == 0)
    {
      v19 = sub_23B1C5AD4();
      v21 = v20;
      sub_23AEBDC3C(v19, v20);
      v0 = v22;
      sub_23AAAE53C(v19, v21);
    }
  }
  return v0;
}

uint64_t sub_23AFEE3F8(uint64_t a1)
{
  return sub_23AFEE4C4(a1);
}

uint64_t sub_23AFEE40C()
{
  return sub_23AFEE550();
}

uint64_t sub_23AFEE420(uint64_t a1)
{
  return sub_23AFEE448(a1, MEMORY[0x24BDC81E8], &qword_2542EDD10);
}

uint64_t sub_23AFEE434(uint64_t a1)
{
  return sub_23AFEE448(a1, MEMORY[0x24BDC81E0], &qword_2542EDC80);
}

uint64_t sub_23AFEE448(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_23B1C5AD4();
  v6 = v5;
  v7 = sub_23B1C5AA4();
  result = sub_23AAAE53C(v4, v6);
  *a3 = v7;
  return result;
}

uint64_t sub_23AFEE494@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23AFEE5FC(a1, a2);
}

uint64_t sub_23AFEE4A8()
{
  return sub_23AFEE68C();
}

unint64_t sub_23AFEE4BC()
{
  return sub_23AFEE24C();
}

uint64_t sub_23AFEE4C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v9[40];

  sub_23AA77B28(a1, (uint64_t)v9);
  v4 = sub_23B1C5AE0();
  if (!v1)
  {
    v6 = v4;
    v7 = v5;
    v2 = sub_23B1C5AA4();
    sub_23AAAE53C(v6, v7);
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t sub_23AFEE550()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = sub_23B1C5AD4();
  v2 = v1;
  sub_23B1C5B10();
  return sub_23AAAE53C(v0, v2);
}

uint64_t sub_23AFEE5B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_23B1C5AD4();
  v2 = v1;
  sub_23AEBDC3C(v0, v1);
  v4 = v3;
  sub_23AAAE53C(v0, v2);
  return v4;
}

uint64_t sub_23AFEE5FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE v11[40];

  sub_23AA77B28(a1, (uint64_t)v11);
  v5 = sub_23B1C5AE0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v8 = v5;
  v9 = v6;
  v10 = sub_23B1C5AA4();
  sub_23AAAE53C(v8, v9);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v10;
  return result;
}

uint64_t sub_23AFEE68C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = sub_23B1C5AD4();
  v2 = v1;
  sub_23B1C5B10();
  return sub_23AAAE53C(v0, v2);
}

uint64_t sub_23AFEE6EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_23B1C5AD4();
  v2 = v1;
  sub_23AEBDC3C(v0, v1);
  v4 = v3;
  sub_23AAAE53C(v0, v2);
  return v4;
}

uint64_t sub_23AFEE73C(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_23AFEE788(a1);
  return v2;
}

uint64_t sub_23AFEE788(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[5];
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7CD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AFEF924();
  swift_retain();
  sub_23B1C7520();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for FileProviderPageToken();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for NSFileProviderItemIdentifier(0);
    v15 = 0;
    sub_23AA7E38C(&qword_2542E7540, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_23B1E0F40);
    sub_23B1C71C0();
    *(_QWORD *)(v1 + 16) = v14[0];
    v15 = 1;
    sub_23AB5EC6C();
    sub_23B1C71C0();
    v10 = v14[0];
    v11 = v14[1];
    v12 = sub_23B1C5AA4();
    sub_23AAAE53C(v10, v11);
    *(_QWORD *)(v3 + 24) = v12;
    swift_release();
    sub_23B1C7124();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_23AFEEA04()
{
  _BYTE *v0;

  if (*v0)
    return 1701273968;
  else
    return 0x726F746365726964;
}

uint64_t sub_23AFEEA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AFEF51C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AFEEA64()
{
  sub_23AFEF924();
  return sub_23B1C7544();
}

uint64_t sub_23AFEEA8C()
{
  sub_23AFEF924();
  return sub_23B1C7550();
}

uint64_t sub_23AFEEAB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  char v21;

  v2 = v1;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E24F0);
  v4 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7CC8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AFEF924();
  sub_23B1C7538();
  v20[0] = *(_QWORD *)(v2 + 16);
  v21 = 0;
  type metadata accessor for NSFileProviderItemIdentifier(0);
  sub_23AA7E38C(&qword_2542E7528, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_23B1E0F6C);
  v11 = v19;
  sub_23B1C72A4();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v13 = v8;
  v14 = sub_23B1C5AD4();
  v16 = v15;
  v20[0] = v14;
  v20[1] = v15;
  v21 = 1;
  sub_23AB5EB5C();
  sub_23B1C72A4();
  sub_23AAAE53C(v14, v16);
  sub_23B1C7214();
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  sub_23AB6E3F4();
  sub_23B1C7538();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v7);
}

uint64_t sub_23AFEECE8()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = *(id *)(v0 + 16);
  sub_23AA7B734();
  sub_23B1C64F4();

  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v2 = *(id *)(v0 + 24);
  sub_23AFEE24C();
  sub_23B1C64F4();

  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 3826793;
}

void sub_23AFEEDA4()
{
  uint64_t v0;

}

uint64_t sub_23AFEEDC0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_23AFEEDEC()
{
  return sub_23AFEECE8();
}

id sub_23AFEEE0C()
{
  if (qword_2542E1F60 != -1)
    swift_once();
  qword_2542EDCE8 = qword_2542EDC80;
  unk_2542EDCF0 = 0;
  return (id)qword_2542EDC80;
}

uint64_t sub_23AFEEE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  if (a1)
    sub_23AFEE24C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (a2)
  {
    v4 = sub_23B1C5AD4();
    v6 = v5;
    sub_23AEBDC3C(v4, v5);
    sub_23AAAE53C(v4, v6);
  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0x3A656761703CLL;
}

uint64_t sub_23AFEEF78(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7F8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AFEF8E0();
  sub_23B1C7538();
  v14 = a2;
  v13 = 0;
  type metadata accessor for NSFileProviderPage(0);
  sub_23AA7E38C(&qword_2542E1F70, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderPage, (uint64_t)&unk_23B1E26E0);
  sub_23B1C7238();
  if (!v3)
  {
    v14 = a3;
    v13 = 1;
    type metadata accessor for NSFileProviderSyncAnchor(0);
    sub_23AA7E38C(&qword_2542E1FA8, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderSyncAnchor, (uint64_t)&unk_23B1E2764);
    sub_23B1C7238();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23AFEF100()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F68636E61;
  else
    return 1701273968;
}

uint64_t sub_23AFEF130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AFEF614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AFEF154()
{
  sub_23AFEF8E0();
  return sub_23B1C7544();
}

uint64_t sub_23AFEF17C()
{
  sub_23AFEF8E0();
  return sub_23B1C7550();
}

id sub_23AFEF1A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;
  uint64_t v5;

  result = sub_23AFEF6EC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_23AFEF1CC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23AFEEF78(a1, *v1, v1[1]);
}

uint64_t sub_23AFEF1E4(void **a1, void **a2)
{
  return sub_23AFEF3C4(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_23AFEF1F8()
{
  uint64_t *v0;

  return sub_23AFEEE58(*v0, v0[1]);
}

uint64_t type metadata accessor for FileProviderPageToken()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for WorkingSetSyncAnchor(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for WorkingSetSyncAnchor(id *a1)
{

}

uint64_t assignWithCopy for WorkingSetSyncAnchor(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for WorkingSetSyncAnchor(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for WorkingSetSyncAnchor(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkingSetSyncAnchor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkingSetSyncAnchor()
{
  return &type metadata for WorkingSetSyncAnchor;
}

uint64_t sub_23AFEF3C4(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  char v26;

  if (a1)
  {
    if (!a3)
      return 0;
    v7 = a1;
    v8 = a3;
    v9 = sub_23B1C5AD4();
    v11 = v10;
    v12 = sub_23B1C5AD4();
    v14 = v13;
    sub_23AAAE6AC(v9, v11);
    v16 = v15;
    sub_23AAAE53C(v12, v14);
    sub_23AAAE53C(v9, v11);

    if ((v16 & 1) == 0)
      return 0;
  }
  else if (a3)
  {
    return 0;
  }
  if (a2)
  {
    if (a4)
    {
      v17 = a2;
      v18 = a4;
      v19 = sub_23B1C5AD4();
      v21 = v20;
      v22 = sub_23B1C5AD4();
      v24 = v23;
      sub_23AAAE6AC(v19, v21);
      v26 = v25;
      sub_23AAAE53C(v22, v24);
      sub_23AAAE53C(v19, v21);

      if ((v26 & 1) != 0)
        return 1;
    }
  }
  else if (!a4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_23AFEF51C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F746365726964 && a2 == 0xEB00000000444979;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701273968 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AFEF614(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701273968 && a2 == 0xE400000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F68636E61 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_23AFEF6EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v9;
  id v10;
  uint64_t v11;
  char v12;
  id v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E20C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v7);
  sub_23AFEF8E0();
  sub_23B1C7520();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for NSFileProviderPage(0);
    v12 = 0;
    sub_23AA7E38C(&qword_2542E1F78, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderPage, (uint64_t)&unk_23B1E26B4);
    sub_23B1C7160();
    v7 = v13;
    type metadata accessor for NSFileProviderSyncAnchor(0);
    v12 = 1;
    sub_23AA7E38C((unint64_t *)&unk_2542E1FB0, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderSyncAnchor, (uint64_t)&unk_23B1E2738);
    v9 = v7;
    sub_23B1C7160();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v10 = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  }
  return v7;
}

unint64_t sub_23AFEF8E0()
{
  unint64_t result;

  result = qword_2542E1360;
  if (!qword_2542E1360)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2AD4, &type metadata for WorkingSetSyncAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E1360);
  }
  return result;
}

unint64_t sub_23AFEF924()
{
  unint64_t result;

  result = qword_2569E7CD0;
  if (!qword_2569E7CD0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2A84, &type metadata for FileProviderPageToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7CD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileProviderPageToken.CodingKeys()
{
  return &type metadata for FileProviderPageToken.CodingKeys;
}

uint64_t _s9libfssync21FileProviderPageTokenC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AFEF9C8 + 4 * byte_23B1E26A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AFEF9FC + 4 * byte_23B1E26A0[v4]))();
}

uint64_t sub_23AFEF9FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFEFA04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AFEFA0CLL);
  return result;
}

uint64_t sub_23AFEFA18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AFEFA20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AFEFA24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFEFA2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkingSetSyncAnchor.CodingKeys()
{
  return &type metadata for WorkingSetSyncAnchor.CodingKeys;
}

unint64_t sub_23AFEFA4C()
{
  unint64_t result;

  result = qword_2569E7CE0;
  if (!qword_2569E7CE0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E296C, &type metadata for WorkingSetSyncAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7CE0);
  }
  return result;
}

unint64_t sub_23AFEFA94()
{
  unint64_t result;

  result = qword_2569E7CE8;
  if (!qword_2569E7CE8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2A5C, &type metadata for FileProviderPageToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7CE8);
  }
  return result;
}

unint64_t sub_23AFEFADC()
{
  unint64_t result;

  result = qword_2569E7CF0;
  if (!qword_2569E7CF0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2994, &type metadata for FileProviderPageToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7CF0);
  }
  return result;
}

unint64_t sub_23AFEFB24()
{
  unint64_t result;

  result = qword_2569E7CF8;
  if (!qword_2569E7CF8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E29BC, &type metadata for FileProviderPageToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E7CF8);
  }
  return result;
}

unint64_t sub_23AFEFB6C()
{
  unint64_t result;

  result = qword_2542E1370;
  if (!qword_2542E1370)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E28DC, &type metadata for WorkingSetSyncAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E1370);
  }
  return result;
}

unint64_t sub_23AFEFBB4()
{
  unint64_t result;

  result = qword_2542E1368;
  if (!qword_2542E1368)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2904, &type metadata for WorkingSetSyncAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E1368);
  }
  return result;
}

uint64_t sub_23AFEFBFC()
{
  return 1;
}

uint64_t type metadata accessor for StagedContext()
{
  return objc_opt_self();
}

uint64_t sub_23AFEFC2C(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  result = a1();
  if ((result & 1) == 0)
    sub_23AFF0A2C(a3, a4, a5, a6);
  return result;
}

uint64_t sub_23AFEFCA0(uint64_t (*a1)(void), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  result = a1();
  if ((result & 1) == 0)
    sub_23AFF0D24(a5, a6, a7, a8, a3);
  return result;
}

void sub_23AFEFD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23AFEFD3C(a1, a2, a3, a4, a5);
}

void sub_23AFEFD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23AFEFD3C(a1, a2, a3, a4, a5);
}

void sub_23AFEFD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v7 = sub_23B1C5E4C();
  v27 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  v28 = a5;
  sub_23B1C7028();
  sub_23B1C64F4();
  v10 = v29;
  v11 = v30;
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v26 = v9;
  v13 = sub_23B1C5E40();
  v14 = sub_23B1C6AAC();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v25 = v10;
    v17 = v16;
    v22 = swift_slowAlloc();
    v29 = v22;
    *(_DWORD *)v17 = 136315650;
    v24 = a5;
    v18 = sub_23B1C6F2C();
    v23 = v7;
    v28 = sub_23AABEC68(v18, v19, &v29);
    HIDWORD(v21) = v15;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    v28 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    v28 = sub_23AABEC68(v25, v11, &v29);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v13, BYTE4(v21), "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v17, 0x20u);
    v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v20, -1, -1);
    MEMORY[0x23B8614BC](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v7);
  }
  swift_unknownObjectRelease();
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF0050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23AFF0A2C(a1, a2, a3, a4);
}

void sub_23AFF005C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD000000000000010, 0x800000023B212140, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF02CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0x20676E6968746F6ELL, 0xED00006F64206F74, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF0544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0x2064696C61766E69, 0xED00004449626F6ALL, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF07BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD000000000000026, 0x800000023B212160, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF0A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v6 = sub_23B1C5E4C();
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  v9 = v28;
  v10 = v29;
  v11 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v12 = sub_23B1C5E40();
  v13 = sub_23B1C6AAC();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v24 = v6;
    v16 = v15;
    v22 = swift_slowAlloc();
    v28 = v22;
    *(_DWORD *)v16 = 136315650;
    v23 = v8;
    v17 = sub_23B1C6F2C();
    v21 = v14;
    v27 = sub_23AABEC68(v17, v18, &v28);
    v25 = a1;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    v27 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v16 + 22) = 2080;
    swift_bridgeObjectRetain();
    v27 = sub_23AABEC68(v9, v10, &v28);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v12, (os_log_type_t)v21, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v16, 0x20u);
    v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v19, -1, -1);
    MEMORY[0x23B8614BC](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF0D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v8 = sub_23B1C5E4C();
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_23B1C6EFC();
  v11 = sub_23B1C64F4();
  a5(v11);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = v30;
  v13 = v31;
  v14 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v15 = sub_23B1C5E40();
  v16 = sub_23B1C6AAC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v26 = v8;
    v18 = v17;
    v24 = swift_slowAlloc();
    v30 = v24;
    *(_DWORD *)v18 = 136315650;
    v23 = a4;
    v19 = sub_23B1C6F2C();
    v25 = v10;
    v29 = sub_23AABEC68(v19, v20, &v30);
    v27 = a1;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2048;
    v29 = v23;
    sub_23B1C6CBC();
    *(_WORD *)(v18 + 22) = 2080;
    swift_bridgeObjectRetain();
    v29 = sub_23AABEC68(v12, v13, &v30);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v15, v16, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v18, 0x20u);
    v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v21, -1, -1);
    MEMORY[0x23B8614BC](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v26);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF102C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD00000000000002DLL, 0x800000023B2122B0, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF12A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v7 = sub_23B1C5E4C();
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  LOBYTE(v27) = a5;
  sub_23B1C7028();
  sub_23B1C64F4();
  v10 = v28;
  v11 = v29;
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v13 = sub_23B1C5E40();
  v14 = sub_23B1C6AAC();
  v25 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v24 = v7;
    v16 = v15;
    v22 = swift_slowAlloc();
    v28 = v22;
    *(_DWORD *)v16 = 136315650;
    v21 = a4;
    v17 = sub_23B1C6F2C();
    v23 = v9;
    v27 = sub_23AABEC68(v17, v18, &v28);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    v27 = v21;
    sub_23B1C6CBC();
    *(_WORD *)(v16 + 22) = 2080;
    swift_bridgeObjectRetain();
    v27 = sub_23AABEC68(v10, v11, &v28);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v13, (os_log_type_t)v25, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v16, 0x20u);
    v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v19, -1, -1);
    MEMORY[0x23B8614BC](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF15B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9, uint64_t a10, void *a11, unsigned __int8 a12)
{
  sub_23AFF15CC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_23AFF15CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9, uint64_t a10, void *a11, unsigned __int8 a12)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  int v42;
  void *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v39 = a4;
  v45 = a3;
  v44 = a2;
  v46 = a1;
  v16 = sub_23B1C5E4C();
  v34 = *(_QWORD *)(v16 - 8);
  v35 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  v36 = a5;
  v38 = a6;
  v40 = a7;
  v42 = a8;
  sub_23AFF5A04(a5, a6, a7, a8);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v37 = a9;
  v41 = a10;
  v43 = a11;
  sub_23AFF5A04(a9, a10, a11, a12);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v19 = v48;
  v20 = v49;
  v21 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v22 = sub_23B1C5E40();
  v23 = sub_23B1C6AAC();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v33 = a12;
    v25 = v24;
    v32 = swift_slowAlloc();
    v48 = v32;
    *(_DWORD *)v25 = 136315650;
    v26 = v19;
    v27 = v39;
    v28 = sub_23B1C6F2C();
    v47 = sub_23AABEC68(v28, v29, &v48);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    v47 = v27;
    sub_23B1C6CBC();
    *(_WORD *)(v25 + 22) = 2080;
    swift_bridgeObjectRetain();
    v47 = sub_23AABEC68(v26, v20, &v48);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v22, v23, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v25, 0x20u);
    v30 = v32;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v30, -1, -1);
    MEMORY[0x23B8614BC](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
    sub_23AFF60F0(v36, v38, v40, v42);
    sub_23AFF60F0(v37, v41, v43, v33);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
    sub_23AFF60F0(v36, v38, v40, v42);
    sub_23AFF60F0(v37, v41, v43, a12);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF1970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD00000000000001BLL, 0x800000023B2125A0, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF1BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_23AFF40EC(a1, a2, a3, a4, a5, 23, 0xD000000000000015, 0x800000023B2124D0, (const char **)&selRef_label);
}

void sub_23AFF1C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD000000000000021, 0x800000023B212520, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF1E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD000000000000024, 0x800000023B2123B0, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF2108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD00000000000001BLL, 0x800000023B212660, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF2378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD00000000000001BLL, 0x800000023B212640, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF25E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD00000000000003DLL, 0x800000023B212600, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF2858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_23AFF40EC(a1, a2, a3, a4, a5, 30, 0xD00000000000001CLL, 0x800000023B2125E0, (const char **)&selRef_description);
}

void sub_23AFF289C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  sub_23AFF28C4(a1, a2, a3, a4, a5);
}

void sub_23AFF28B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  sub_23AFF28C4(a1, a2, a3, a4, a5);
}

void sub_23AFF28C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  int v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v26 = a1;
  v27 = a2;
  v8 = sub_23B1C5E4C();
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_23B1C6EFC();
  v31 = v29;
  v32 = v30;
  sub_23B1C64F4();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v11 = v31;
  v12 = v32;
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v24 = v10;
  v14 = sub_23B1C5E40();
  v15 = sub_23B1C6AAC();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v23 = v11;
    v17 = v16;
    v18 = swift_slowAlloc();
    v31 = v18;
    *(_DWORD *)v17 = 136315650;
    v21[1] = a5;
    v19 = sub_23B1C6F2C();
    v21[0] = v8;
    v28 = sub_23AABEC68(v19, v20, &v31);
    v22 = a3;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    v28 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    v28 = sub_23AABEC68(v23, v12, &v31);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v14, v15, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v17, -1, -1);

    (*(void (**)(char *, _QWORD))(v25 + 8))(v24, v21[0]);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v8);
  }
  swift_release();
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF2BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD00000000000001BLL, 0x800000023B2121B0, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF2E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_23AFF53C4(a1, a2, a3, a4, a5, a6);
}

void sub_23AFF2E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  os_log_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v7 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23AF157D0(a5);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v11 = v30;
  v12 = v31;
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v14 = sub_23B1C5E40();
  v15 = sub_23B1C6AAC();
  v28 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v27 = v10;
    v17 = v16;
    v25 = swift_slowAlloc();
    v30 = v25;
    *(_DWORD *)v17 = 136315650;
    v26 = v7;
    v18 = sub_23B1C6F2C();
    v23 = v14;
    v29 = sub_23AABEC68(v18, v19, &v30);
    v24 = v8;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    v29 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    v29 = sub_23AABEC68(v11, v12, &v30);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    v20 = v23;
    _os_log_impl(&dword_23AA66000, v23, (os_log_type_t)v28, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v17, 0x20u);
    v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v21, -1, -1);
    MEMORY[0x23B8614BC](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v26);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF3164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_23AFF4760(a1, a2, a3, a4, a5);
}

void sub_23AFF3184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0x2064696C61766E69, 0xED000065756C6176, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF33FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v10 = sub_23B1C5E4C();
  v29 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = 0;
  v33 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  v13 = v32;
  v14 = v33;
  v15 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v16 = sub_23B1C5E40();
  v17 = sub_23B1C6AAC();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v27 = v13;
    v19 = v18;
    v20 = swift_slowAlloc();
    v28 = a4;
    v21 = v20;
    v32 = v20;
    *(_DWORD *)v19 = 136315650;
    v24 = a6;
    v25 = a3;
    v22 = sub_23B1C6F2C();
    v31 = sub_23AABEC68(v22, v23, &v32);
    v26 = a2;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2048;
    v31 = v28;
    sub_23B1C6CBC();
    *(_WORD *)(v19 + 22) = 2080;
    swift_bridgeObjectRetain();
    v31 = sub_23AABEC68(v27, v14, &v32);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v16, v17, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v21, -1, -1);
    MEMORY[0x23B8614BC](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  swift_bridgeObjectRelease();
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF36F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD000000000000010, 0x800000023B212190, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF3964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD000000000000014, 0x800000023B1FCA20, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF3BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD000000000000025, 0x800000023B2124F0, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF3E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  os_log_t v23;
  uint64_t v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a5(v10);
  v15 = v14;
  v16 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v17 = sub_23B1C5E40();
  v18 = sub_23B1C6AAC();
  v30 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v28 = v9;
    v20 = v19;
    v26 = swift_slowAlloc();
    v32 = v26;
    *(_DWORD *)v20 = 136315650;
    v27 = v8;
    v21 = sub_23B1C6F2C();
    v25 = v17;
    v31 = sub_23AABEC68(v21, v22, &v32);
    v29 = a2;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2048;
    v31 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v20 + 22) = 2080;
    swift_bridgeObjectRetain();
    v31 = sub_23AABEC68(v13, v15, &v32);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    v23 = v25;
    _os_log_impl(&dword_23AA66000, v25, (os_log_type_t)v30, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v20, 0x20u);
    v24 = v26;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v24, -1, -1);
    MEMORY[0x23B8614BC](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v27);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF40EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, const char **a9)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  const char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v31 = a4;
  v11 = sub_23B1C5E4C();
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = 0;
  v34 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  v14 = *a9;
  v30 = a5;
  v15 = objc_msgSend(a5, v14);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v16 = v33;
  v17 = v34;
  v18 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v19 = sub_23B1C5E40();
  v20 = sub_23B1C6AAC();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v27 = v16;
    v22 = v21;
    v26[0] = swift_slowAlloc();
    v33 = v26[0];
    *(_DWORD *)v22 = 136315650;
    v23 = sub_23B1C6F2C();
    v32 = sub_23AABEC68(v23, v24, &v33);
    v26[1] = a1;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    v32 = v31;
    sub_23B1C6CBC();
    *(_WORD *)(v22 + 22) = 2080;
    swift_bridgeObjectRetain();
    v32 = sub_23AABEC68(v27, v17, &v33);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v19, v20, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v22, 0x20u);
    v25 = v26[0];
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v25, -1, -1);
    MEMORY[0x23B8614BC](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);

  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF4414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v7 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  v28 = *(_QWORD *)(a5 + 24);
  type metadata accessor for FileOperationKind(0);
  sub_23B1C7028();
  sub_23B1C64F4();
  v11 = v30;
  v26 = v29;
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v27 = v10;
  v13 = sub_23B1C5E40();
  v14 = sub_23B1C6AAC();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v25 = a5;
    v17 = v16;
    v22 = swift_slowAlloc();
    v29 = v22;
    *(_DWORD *)v17 = 136315650;
    v24 = v8;
    v18 = sub_23B1C6F2C();
    v23 = v7;
    v28 = sub_23AABEC68(v18, v19, &v29);
    HIDWORD(v21) = v15;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    v28 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    v28 = sub_23AABEC68(v26, v11, &v29);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v13, BYTE4(v21), "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v17, 0x20u);
    v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v20, -1, -1);
    MEMORY[0x23B8614BC](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v27, v7);
  }
  swift_release();
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF4740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_23AFF4760(a1, a2, a3, a4, a5);
}

void sub_23AFF4760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v26 = a4;
  v7 = sub_23B1C5E4C();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  v25 = a5;
  v27 = (uint64_t)a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  sub_23B1C7028();
  sub_23B1C64F4();
  v10 = v28;
  v11 = v29;
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v13 = sub_23B1C5E40();
  v14 = sub_23B1C6AAC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v21 = v10;
    v16 = v15;
    v20 = swift_slowAlloc();
    v28 = v20;
    *(_DWORD *)v16 = 136315650;
    v22 = a1;
    v17 = sub_23B1C6F2C();
    v27 = sub_23AABEC68(v17, v18, &v28);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    v27 = v26;
    sub_23B1C6CBC();
    *(_WORD *)(v16 + 22) = 2080;
    swift_bridgeObjectRetain();
    v27 = sub_23AABEC68(v21, v11, &v28);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v13, v14, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v16, 0x20u);
    v19 = v20;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v19, -1, -1);
    MEMORY[0x23B8614BC](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);

  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF4A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v11 = sub_23B1C5E4C();
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = 0;
  v36 = 0xE000000000000000;
  sub_23B1C6EFC();
  v37 = v35;
  v38 = v36;
  sub_23B1C64F4();
  sub_23AA96F18(a5, a6);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_beginAccess();
  v34 = *(_QWORD *)(a7 + 24);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v14 = v37;
  v15 = v38;
  v16 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v31 = v13;
  v17 = sub_23B1C5E40();
  v18 = sub_23B1C6AAC();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v28 = v17;
    v21 = v20;
    v29 = swift_slowAlloc();
    v37 = v29;
    *(_DWORD *)v21 = 136315650;
    v30 = a7;
    v22 = sub_23B1C6F2C();
    v27 = v19;
    v34 = sub_23AABEC68(v22, v23, &v37);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2048;
    v34 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v21 + 22) = 2080;
    swift_bridgeObjectRetain();
    v34 = sub_23AABEC68(v14, v15, &v37);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    v24 = v28;
    _os_log_impl(&dword_23AA66000, v28, (os_log_type_t)v27, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v21, 0x20u);
    v25 = v29;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v25, -1, -1);
    MEMORY[0x23B8614BC](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
  swift_release();
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF4DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6AAC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v13;
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v14 = 136315650;
    v20 = v6;
    v15 = sub_23B1C6F2C();
    v17 = sub_23AABEC68(v15, v16, &v24);
    v22 = a1;
    v23 = v17;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v23 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v14 + 22) = 2080;
    v23 = sub_23AABEC68(0xD000000000000017, 0x800000023B212200, &v24);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v11, v12, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v14, 0x20u);
    v18 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v18, -1, -1);
    MEMORY[0x23B8614BC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF505C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v7 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  v28 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7D00);
  sub_23B1C7028();
  sub_23B1C64F4();
  v11 = v30;
  v26 = v29;
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v27 = v10;
  v13 = sub_23B1C5E40();
  v14 = sub_23B1C6AAC();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v25 = a5;
    v17 = v16;
    v22 = swift_slowAlloc();
    v29 = v22;
    *(_DWORD *)v17 = 136315650;
    v24 = v8;
    v18 = sub_23B1C6F2C();
    v23 = v7;
    v28 = sub_23AABEC68(v18, v19, &v29);
    HIDWORD(v21) = v15;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    v28 = a4;
    sub_23B1C6CBC();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    v28 = sub_23AABEC68(v26, v11, &v29);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v13, BYTE4(v21), "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v17, 0x20u);
    v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v20, -1, -1);
    MEMORY[0x23B8614BC](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v27, v7);
  }
  swift_release();
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF5388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_23AFF53C4(a1, a2, a3, a4, a5, a6);
}

void sub_23AFF53C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v27 = a4;
  v9 = sub_23B1C5E4C();
  v25 = *(_QWORD *)(v9 - 8);
  v26 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23AA96F18(a5, a6);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = v29;
  v13 = v30;
  v14 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v15 = sub_23B1C5E40();
  v16 = sub_23B1C6AAC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v29 = v22;
    *(_DWORD *)v17 = 136315650;
    v24 = a1;
    v18 = sub_23B1C6F2C();
    v23 = v12;
    v28 = sub_23AABEC68(v18, v19, &v29);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    v28 = v27;
    sub_23B1C6CBC();
    *(_WORD *)(v17 + 22) = 2080;
    swift_bridgeObjectRetain();
    v28 = sub_23AABEC68(v23, v13, &v29);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v15, v16, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v17, 0x20u);
    v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v20, -1, -1);
    MEMORY[0x23B8614BC](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v26);
  sub_23B1C704C();
  __break(1u);
}

void sub_23AFF56B8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint64_t v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;

  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1(v11);
  v16 = v15;
  v17 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v18 = sub_23B1C5E40();
  v19 = sub_23B1C6AAC();
  v31 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v29 = v10;
    v21 = v20;
    v27 = swift_slowAlloc();
    v33 = v27;
    *(_DWORD *)v21 = 136315650;
    v28 = v9;
    v22 = sub_23B1C6F2C();
    v26 = v18;
    v32 = sub_23AABEC68(v22, v23, &v33);
    v30 = a4;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2048;
    v32 = a6;
    sub_23B1C6CBC();
    *(_WORD *)(v21 + 22) = 2080;
    swift_bridgeObjectRetain();
    v32 = sub_23AABEC68(v14, v16, &v33);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    v24 = v26;
    _os_log_impl(&dword_23AA66000, v26, (os_log_type_t)v31, "[ASSERT] ‼️  %s:%lu: %s", (uint8_t *)v21, 0x20u);
    v25 = v27;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v25, -1, -1);
    MEMORY[0x23B8614BC](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v28);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AFF5960(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  result = a1();
  if ((result & 1) == 0)
    sub_23AFF0D24(a5, a6, a7, a8, (void (*)(uint64_t))sub_23AA698DC);
  return result;
}

void sub_23AFF59D4(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_23AFF3E44(a3, a4, a5, a6, a1);
}

unint64_t sub_23AFF5A04(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v12;

  v8 = 0xD000000000000012;
  if (a4 >> 6)
  {
    if (a4 >> 6 != 1)
      return v8;
    v9 = a3;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    LOBYTE(v12) = a1;
    sub_23B1C7028();
    sub_23B1C64F4();
    sub_23AF16528(a2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    if (a3)
    {
      v10 = objc_msgSend(v9, sel_description, v12);
      sub_23B1C63E0();

    }
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AFF60F0(a1, a2, a3, a4);
  }
  else
  {
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23B1C64F4();
    sub_23B1C64F4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E7D08);
    sub_23B1C7028();
  }
  return 0;
}

uint64_t sub_23AFF5C30()
{
  return swift_slowAlloc();
}

void sub_23AFF5C38()
{
  JUMPOUT(0x23B8614BCLL);
}

uint64_t sub_23AFF5C44(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_23AFF5C54(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_23AFF5C88(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_23AFF5C98(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_23AABEC68(v6, v7, a3);
  v8 = *a1 + 8;
  sub_23B1C6CBC();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_23AFF5D08(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23AFF5D9C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23AFF5F10(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23AFF5F10(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23AFF5D9C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23B181E18(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23B1C6F08();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23B1C7040();
      __break(1u);
LABEL_10:
      v2 = sub_23B1C6524();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23B1C70B8();
    __break(1u);
LABEL_14:
    result = sub_23B1C7040();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23AFF5F10(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5608);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

void *sub_23AFF605C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_23B1C70B8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

void sub_23AFF60F0(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 >> 6 == 1)
  {

  }
  else if (!(a4 >> 6))
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AFF6110()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23AFF6194(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  _BYTE v12[16];
  _BYTE v13[16];
  _BYTE v14[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3658);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AFF9FFC();
  sub_23B1C7538();
  v12[0] = 0;
  sub_23B1C7280();
  if (!v2)
  {
    sub_23AFFA040(v3 + 8, (uint64_t)v14);
    sub_23AFFA040((uint64_t)v14, (uint64_t)v12);
    v11 = 1;
    sub_23AD7D418();
    sub_23B1C7238();
    v12[0] = 2;
    sub_23B1C728C();
    sub_23AFFA040(v3 + 32, (uint64_t)v13);
    sub_23AFFA040((uint64_t)v13, (uint64_t)v12);
    v11 = 3;
    sub_23B1C7238();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23AFF6348()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AFF6380 + 4 * byte_23B1E2B40[*v0]))(0x666552736465656ELL, 0xEC00000068736572);
}

uint64_t sub_23AFF6380()
{
  return 0x726665527473616CLL;
}

unint64_t sub_23AFF63A4()
{
  return 0xD000000000000012;
}

unint64_t sub_23AFF63C0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23AFF63E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AFF9C10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AFF6404()
{
  sub_23AFF9FFC();
  return sub_23B1C7544();
}

uint64_t sub_23AFF642C()
{
  sub_23AFF9FFC();
  return sub_23B1C7550();
}

double sub_23AFF6454@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_23AFF9DF8(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_23AFF6494(_QWORD *a1)
{
  return sub_23AFF6194(a1);
}

void sub_23AFF64CC(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
}

id sub_23AFF64E8()
{
  void *v0;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23AFF6528()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 160))
    return 1;
  else
    return *(unsigned __int8 *)(v0 + 185);
}

void sub_23AFF6540()
{
  sub_23B0DDA20();
  sub_23AFF81EC();
}

uint64_t sub_23AFF656C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = swift_beginAccess();
  if ((*(_BYTE *)(v0 + 88) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 128);
    result = v2 + v3;
    if (__OFADD__(v2, v3))
      __break(1u);
    else
      return sub_23AFF7638(result);
  }
  return result;
}

uint64_t sub_23AFF65D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  uint64_t result;
  double v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v40 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v40 - v10;
  v12 = sub_23B1C5BDC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v17 = v16;
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v19 = v17 * 1000000000.0;
  if ((~COERCE__INT64(v17 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v20 = (uint64_t)v19;
  result = swift_beginAccess();
  if ((*(_BYTE *)(v1 + 88) & 1) != 0)
  {
    v21 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v22 = sub_23B1C5E40();
    v23 = sub_23B1C6A94();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_23AA66000, v22, v23, "🔮 setting maximum downloads allowed", v24, 2u);
      MEMORY[0x23B8614BC](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
LABEL_13:
    v33 = 0;
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = v20;
    *(_BYTE *)(v1 + 88) = 0;
    *(_BYTE *)(v1 + 40) = 1;
    goto LABEL_15;
  }
  v25 = *(_QWORD *)(v1 + 80);
  v26 = *(_QWORD *)(v1 + 128);
  v27 = __OFADD__(v25, v26);
  v28 = v25 + v26;
  if (v27)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v28 < v20)
  {
    v29 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v30 = sub_23B1C5E40();
    v31 = sub_23B1C6A94();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23AA66000, v30, v31, "🔮 resetting maximum downloads allowed", v32, 2u);
      MEMORY[0x23B8614BC](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    goto LABEL_13;
  }
  v33 = *(_QWORD *)(v1 + 72);
LABEL_15:
  v34 = *(_QWORD *)(v1 + 152);
  if (v33 < v34)
  {
    result = v34 - v33;
    if (!__OFSUB__(v34, v33))
      return result;
LABEL_27:
    __break(1u);
    return result;
  }
  v35 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v36 = sub_23B1C5E40();
  v37 = sub_23B1C6A94();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_23AA66000, v36, v37, "🔮 reached maximum downloads allowed", v38, 2u);
    MEMORY[0x23B8614BC](v38, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v39 = v40;
  result = sub_23AFF656C();
  if (!v39)
    return 0;
  return result;
}

uint64_t sub_23AFF6980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 72);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 72) = v9;
    *(_BYTE *)(v1 + 40) = 1;
    v10 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    swift_retain();
    v11 = sub_23B1C5E40();
    v12 = sub_23B1C6A94();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v13 = 134217984;
      v14 = *(_QWORD *)(v1 + 72);
      sub_23B1C6CBC();
      swift_release();
      _os_log_impl(&dword_23AA66000, v11, v12, "⏰  finished new download for speculative set <total: %ld>", v13, 0xCu);
      MEMORY[0x23B8614BC](v13, -1, -1);

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_23AFF6B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  v1 = sub_23B1C5BDC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23B1C5BB8();
  if ((unsigned __int128)(*(uint64_t *)(v0 + 136) * (__int128)-86400) >> 64 == (-86400 * *(_QWORD *)(v0 + 136)) >> 63)
  {
    sub_23B1C5B58();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23AFF6BB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  v15 = *(int *)(type metadata accessor for SnapshotItem(0, *(_QWORD *)(v3 + 232), *(_QWORD *)(v3 + 248), v14) + 48);
  v16 = type metadata accessor for ItemMetadata();
  sub_23AB6E30C(a1 + *(int *)(v16 + 116) + v15, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23AB6E2CC((uint64_t)v6);
    v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    sub_23AFF6B00();
    sub_23AA7E38C(&qword_2569E2A10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v17 = sub_23B1C6344() ^ 1;
    v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v11, v7);
    v18(v13, v7);
  }
  return v17 & 1;
}

void sub_23AFF6D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[2];
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v2 = sub_23B1C5E4C();
  v24 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v20 - v10;
  v25 = v1;
  sub_23AFF6B00();
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  v13 = sub_23B1C5E40();
  v14 = sub_23B1C6A94();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v28 = v22;
    v23 = v2;
    *(_DWORD *)v15 = 136446210;
    v20[1] = v15 + 4;
    v21 = v15;
    sub_23AA7E38C((unint64_t *)&unk_2542E0240, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v16 = sub_23B1C7304();
    v27 = sub_23AABEC68(v16, v17, &v28);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v18 = v21;
    _os_log_impl(&dword_23AA66000, v13, v14, "🔮  refreshing speculative set with threshold %{public}s", v21, 0xCu);
    v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v19, -1, -1);
    MEMORY[0x23B8614BC](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  }
  sub_23B07B19C((uint64_t)v11, *(_QWORD *)(v25 + 144), v26);
}

uint64_t sub_23AFF6FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  uint64_t result;
  uint64_t v8;

  v8 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v8);
  v1 = sub_23B1C60EC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23AFD7BC0();
  *v4 = v5;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = (id)v5;
  LOBYTE(v5) = sub_23B1C6104();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    result = sub_23AFF65D0();
    if (!v0 && result >= 1)
      sub_23AFF6D48(result);
  }
  else
  {
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
  }
  return result;
}

uint64_t sub_23AFF7230(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v2 = v1;
  v4 = objc_msgSend(a1, sel_label);
  v5 = sub_23B1C63E0();
  v7 = v6;

  if (qword_2542E4C20 != -1)
    swift_once();
  v8 = objc_msgSend((id)qword_2542EDD60, sel_label);
  v9 = sub_23B1C63E0();
  v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      sub_23AFF1BE0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SpeculativeSetPacer.swift", 138, 2, 202, a1);
  }
  swift_retain();
  sub_23AFABBFC((uint64_t)"sharedSchedulerCanRun(_:)", 25, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AFFA0F4, v2);
  return swift_release();
}

uint64_t sub_23AFF73A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  swift_retain();
  sub_23AFF7230(v3);

  return swift_release();
}

uint64_t sub_23AFF73E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  uint64_t result;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[2];

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C60EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_23AFD7BC0();
  *v9 = v10;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = (id)v10;
  LOBYTE(v10) = sub_23B1C6104();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
LABEL_4:
    result = sub_23AFE9F34((uint64_t)sub_23AB6FFCC, 0);
    if ((result & 1) != 0)
      return sub_23AFF6FFC();
    return result;
  }
  sub_23AE81544();
  if (*(_BYTE *)(v1 + 185) == 1)
  {
    if (qword_2542E4C20 == -1)
      goto LABEL_4;
    goto LABEL_13;
  }
  v13 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v14 = sub_23B1C5E40();
  v15 = sub_23B1C6A94();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_23AA66000, v14, v15, "🔮  waiting for background scheduler", v16, 2u);
    MEMORY[0x23B8614BC](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_BYTE *)(v1 + 185) = 1;
  if (qword_2542E4C20 != -1)
    swift_once();
  return (uint64_t)objc_msgSend((id)qword_2542EDD60, sel_addWatcher_, v1);
}

uint64_t sub_23AFF7638(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  double v22;
  uint64_t result;
  double v24;
  int64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  dispatch_time_t v49;
  dispatch_time_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint8_t *v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v2 = v1;
  v58 = *v1;
  v4 = sub_23B1C60A4();
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C6B78();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v65 - 8);
  v9 = MEMORY[0x24BDAC7A8](v65);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v55 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v55 - v15;
  v17 = sub_23B1C5BDC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v22 = v21;
  result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v24 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v25 = a1 - (uint64_t)v24;
  if (__OFSUB__(a1, (uint64_t)v24))
  {
LABEL_24:
    __break(1u);
    return result;
  }
  if ((v2[23] & 1) != 0 || v2[22] > a1)
  {
    v26 = v2[24];
    v27 = (id)fpfs_current_or_default_log();
    if (v26 < 1)
    {
      sub_23B1C5E58();
      v32 = sub_23B1C5E40();
      v33 = sub_23B1C6A94();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v56 = v35;
        v57 = v25;
        *(_DWORD *)v34 = 136446210;
        v55 = v34 + 4;
        v66 = a1 / 1000000000;
        v67 = v35;
        sub_23AB55910();
        v36 = sub_23B1C6D70();
        v66 = sub_23AABEC68(v36, v37, &v67);
        v25 = v57;
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v32, v33, "🔮  pacing scheduler until %{public}s", v34, 0xCu);
        v38 = v56;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v38, -1, -1);
        MEMORY[0x23B8614BC](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v65);
      sub_23AE81544();
      v2[22] = a1;
      *((_BYTE *)v2 + 184) = 0;
      sub_23B1C6458();
      v39 = os_transaction_create();
      swift_release();
      v2[21] = v39;
      swift_unknownObjectRelease();
      sub_23AAB62D8();
      v40 = (void *)sub_23AFD7BC0();
      v67 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&qword_2542E1F80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
      v41 = v40;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1EF0);
      sub_23AEFECB0();
      v42 = v62;
      v43 = v64;
      sub_23B1C6DE8();
      v44 = sub_23B1C6B84();

      (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v43);
      v2[20] = v44;
      result = swift_unknownObjectRelease();
      if (v2[20])
      {
        swift_getObjectType();
        v45 = swift_allocObject();
        swift_weakInit();
        v46 = swift_allocObject();
        v47 = v58;
        *(_QWORD *)(v46 + 16) = *(_QWORD *)(v58 + 224);
        *(_OWORD *)(v46 + 24) = *(_OWORD *)(v47 + 232);
        *(_QWORD *)(v46 + 40) = *(_QWORD *)(v47 + 248);
        *(_QWORD *)(v46 + 48) = v45;
        swift_unknownObjectRetain();
        swift_retain();
        v48 = (uint64_t)v59;
        sub_23ADFA2F4();
        sub_23AA78928(0, v48, (uint64_t)sub_23AFFA0D0, v46);
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v48, v61);
        result = swift_release();
        if (v2[20])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v49 = dispatch_time(0x8000000000000000, 0);
          v50 = dispatch_time(v49, v25);
          sub_23AFAA444(v50);
          result = swift_unknownObjectRelease();
          if (v2[20])
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            sub_23B1C6BB4();
            return swift_unknownObjectRelease();
          }
        }
      }
    }
    else
    {
      sub_23B1C5E58();
      v28 = sub_23B1C5E40();
      v29 = sub_23B1C6A94();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_23AA66000, v28, v29, "🔮  pacing scheduler timer bypassed", v30, 2u);
        MEMORY[0x23B8614BC](v30, -1, -1);
      }

      v31 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v65);
      return sub_23AFF73E4(v31);
    }
  }
  else
  {
    v51 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v52 = sub_23B1C5E40();
    v53 = sub_23B1C6A94();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_23AA66000, v52, v53, "🔮  pacer already registered", v54, 2u);
      MEMORY[0x23B8614BC](v54, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v16, v65);
  }
  return result;
}

uint64_t sub_23AFF7D18()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  v0 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v2 = result;
    sub_23AE81544();
    swift_retain();
    sub_23AFB04F0((uint64_t)"timerRefresh(nextRefreshDate:)", 30, 2, (uint64_t)sub_23AFFA0E0, v2, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23AFF7FA8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  uint64_t result;
  uint64_t v9;

  v2 = sub_23B1C60EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_23AFD7BC0();
  *v5 = v6;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = (id)v6;
  LOBYTE(v6) = sub_23B1C6104();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if ((a1 & 1) != 0)
      return sub_23AFF73E4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23AFF808C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v7 = v6;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = v7 * 1000000000.0;
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  result = swift_beginAccess();
  if ((*(_BYTE *)(v1 + 64) & 1) != 0)
    return sub_23AFF73E4();
  v10 = (uint64_t)v9;
  v11 = *(_QWORD *)(v1 + 56);
  if (v11 >= (uint64_t)v9)
    return sub_23AFF73E4();
  v12 = v10 - v11;
  if (__OFSUB__(v10, v11))
    goto LABEL_15;
  v13 = *(_QWORD *)(v1 + 120);
  v14 = __OFSUB__(v13, v12);
  v15 = v13 - v12;
  if (!v14)
  {
    if (v15 >= 1)
    {
      result = v11 + v13;
      if (!__OFADD__(v11, v13))
        return sub_23AFF7638(result);
      goto LABEL_17;
    }
    return sub_23AFF73E4();
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

void sub_23AFF81EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;

  v2 = v0;
  v3 = sub_23B1C5E4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C60EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_23AFD7BC0();
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5610], v7);
  v12 = (id)v11;
  LOBYTE(v11) = sub_23B1C6104();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
    v14 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v15 = v13;
    v27 = v6;
    v16 = sub_23B1C5E40();
    v17 = sub_23B1C6A94();
    if (os_log_type_enabled(v16, v17))
    {
      v25 = v1;
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23 = v4;
      v20 = (_QWORD *)v19;
      *(_DWORD *)v18 = 138543362;
      v24 = v3;
      v21 = -[NSObject enter](v15, sel_enter);
      v26 = v21;
      v3 = v24;
      sub_23B1C6CBC();
      *v20 = v21;

      _os_log_impl(&dword_23AA66000, v16, v17, "%{public}@ 🔮  reevaluating speculative scheduler state", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      v22 = v20;
      v4 = v23;
      MEMORY[0x23B8614BC](v22, -1, -1);
      MEMORY[0x23B8614BC](v18, -1, -1);
    }
    else
    {

      v16 = v15;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v27, v3);
    swift_beginAccess();
    if ((*(_BYTE *)(v2 + 48) & 1) != 0)
      sub_23AFF808C();
    else
      sub_23AE815EC();
    sub_23AFF84B8(v15);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23AFF84B8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint8_t *v14;
  _QWORD v16[2];

  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v7 = a1;
  v8 = sub_23B1C5E40();
  v9 = sub_23B1C6A94();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v16[0] = v2;
    v11 = (uint8_t *)v10;
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138543362;
    v13 = -[NSObject leave](v7, sel_leave);
    v16[1] = v13;
    sub_23B1C6CBC();
    *v12 = v13;

    _os_log_impl(&dword_23AA66000, v8, v9, "%{public}@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v12, -1, -1);
    v14 = v11;
    v2 = v16[0];
    MEMORY[0x23B8614BC](v14, -1, -1);
  }
  else
  {

    v8 = v7;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_23AFF8670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v1 = v0;
  v2 = sub_23B1C60EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_23AFD7BC0();
  *v5 = v6;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = (id)v6;
  LOBYTE(v6) = sub_23B1C6104();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    swift_beginAccess();
    if ((*(_BYTE *)(v1 + 48) & 1) == 0)
    {
      *(_BYTE *)(v1 + 48) = 1;
      *(_BYTE *)(v1 + 40) = 1;
      sub_23AFF81EC();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_23AFF8770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[14];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = (_QWORD *)*v4;
  v6 = v5[28];
  v7 = v5[30];
  v8 = type metadata accessor for SnapshotItem(0, v6, v7, a4);
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41[11] = (char *)v41 - v9;
  v43 = sub_23B1C6C98();
  v48 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v49 = (char *)v41 - v10;
  v50 = sub_23B1C5BDC();
  v46 = *(_QWORD *)(v50 - 8);
  v11 = MEMORY[0x24BDAC7A8](v50);
  v41[1] = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v41[2] = (char *)v41 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v41[12] = (char *)v41 - v15;
  v42 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v42);
  v41[13] = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v41[4] = (char *)v41 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v41[5] = (char *)v41 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v41[7] = (char *)v41 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v41[10] = (char *)v41 - v25;
  v26 = v5[29];
  v27 = v5[31];
  v45 = type metadata accessor for SnapshotItem(255, v26, v27, v28);
  v44 = sub_23B1C6C98();
  v52 = *(_QWORD *)(v44 - 8);
  v29 = MEMORY[0x24BDAC7A8](v44);
  v41[3] = (char *)v41 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v41[6] = (char *)v41 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v41[8] = (char *)v41 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v41[9] = (char *)v41 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v53 = (char *)v41 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v51 = (char *)v41 - v40;
  v54 = v6;
  v55 = v26;
  v56 = v7;
  v57 = v27;
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AFF8AFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v17;
  int EnumCaseMultiPayload;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, _BYTE *, uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t TupleTypeMetadata3;
  _BYTE *v39;
  uint64_t v40;
  unsigned int (*v41)(_BYTE *, uint64_t, uint64_t);
  void (*v42)(_BYTE *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, _QWORD);
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  void (*v62)(_QWORD, uint64_t);
  int v64;
  void (*v65)(uint64_t, _QWORD, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, uint64_t);
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  _BYTE v105[96];

  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = &v105[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = &v105[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v105[-v13];
  *(_QWORD *)(v5 - 136) = v15;
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16);
  v16(&v105[-v13], v2, a1);
  v17 = v14;
  *(_QWORD *)(v5 - 72) = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    v36 = *(_BYTE **)(v5 - 176);
    v19 = v17;
    v16(v9, (uint64_t)v17, *(_QWORD *)(v5 - 72));
    v37 = *(_QWORD *)(v5 - 232);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v39 = &v9[*(int *)(TupleTypeMetadata3 + 48)];
    *(_QWORD *)(v5 - 144) = *(_QWORD *)&v9[*(int *)(TupleTypeMetadata3 + 64)];
    v40 = *(_QWORD *)(v5 - 192);
    v41 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v40 + 48);
    if (v41(v39, 1, v4) == 1)
    {
      v42 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 184) + 8);
      v42(v39, v37);
      v42(v9, v37);
      goto LABEL_25;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 184) + 32))(v36, v9, v37);
    v45 = *(_QWORD *)(v5 - 264);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v40 + 32))(v45, v39, v4);
    if (v41(v36, 1, v4) != 1)
    {
      v46 = MEMORY[0x23B8613CC](&unk_23B1DD478, v4);
      if (sub_23AF219A4(v4, v46) == 1
        && (sub_23AF21910(v4, v46) & 1) == 0
        && (*(_QWORD *)(v5 - 144) & 0x10) != 0)
      {
        v47 = *(_QWORD *)(v5 - 128);
        sub_23AFF8670();
        v43 = *(_QWORD *)(v5 - 136);
        if (v47)
        {
          (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 192) + 8))(*(_QWORD *)(v5 - 264), v4);
LABEL_31:
          (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 184) + 8))(*(_QWORD *)(v5 - 176), v37);
          v44 = *(_QWORD *)(v5 - 72);
          return (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v19, v44);
        }
        goto LABEL_29;
      }
    }
    v48 = MEMORY[0x23B8613CC](&unk_23B1DD478, v4);
    if (sub_23AF219A4(v4, v48))
    {
LABEL_17:
      v43 = *(_QWORD *)(v5 - 136);
      v49 = *(_QWORD *)(v5 - 192);
LABEL_30:
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v45, v4);
      goto LABEL_31;
    }
    sub_23AB6E30C(v45 + *(int *)(v4 + 48) + (uint64_t)*(int *)(*(_QWORD *)(v5 - 240) + 116), v3);
    v64 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 208) + 48))(v3, 1, *(_QWORD *)(v5 - 168));
    sub_23AB6E2CC(v3);
    if (v64 == 1)
    {
      v43 = *(_QWORD *)(v5 - 136);
LABEL_29:
      v49 = *(_QWORD *)(v5 - 192);
      v45 = *(_QWORD *)(v5 - 264);
      goto LABEL_30;
    }
    if (v41(*(_BYTE **)(v5 - 176), 1, v4) == 1 || (*(_QWORD *)(v5 - 144) & 0x10) == 0)
    {
      v45 = *(_QWORD *)(v5 - 264);
      if ((sub_23AF21910(v4, v48) & 1) == 0)
        goto LABEL_17;
      v49 = *(_QWORD *)(v5 - 192);
      if ((*(_QWORD *)(v5 - 144) & 0x20) == 0 || (v100 = *(_QWORD *)(v5 - 128), sub_23AFF8670(), !v100))
      {
        v43 = *(_QWORD *)(v5 - 136);
        goto LABEL_30;
      }
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v45, v4);
    }
    else
    {
      v86 = *(_QWORD *)(v5 - 128);
      sub_23AFF8670();
      if (!v86)
      {
        v43 = *(_QWORD *)(v5 - 136);
        goto LABEL_29;
      }
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 192) + 8))(*(_QWORD *)(v5 - 264), v4);
    }
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 184) + 8))(*(_QWORD *)(v5 - 176), v37);
    v43 = *(_QWORD *)(v5 - 136);
    v44 = *(_QWORD *)(v5 - 72);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v19, v44);
  }
  if (EnumCaseMultiPayload == 39)
  {
    sub_23AE24470();
    v43 = *(_QWORD *)(v5 - 136);
    v44 = *(_QWORD *)(v5 - 72);
    v19 = v14;
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v19, v44);
  }
  v19 = v14;
  if (EnumCaseMultiPayload != 6)
  {
LABEL_25:
    v43 = *(_QWORD *)(v5 - 136);
    v44 = *(_QWORD *)(v5 - 72);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v19, v44);
  }
  *(_QWORD *)(v5 - 176) = v14;
  v16(v12, (uint64_t)v14, *(_QWORD *)(v5 - 72));
  v20 = *(_QWORD *)(v5 - 224);
  v21 = swift_getTupleTypeMetadata3();
  v22 = &v12[*(int *)(v21 + 48)];
  v23 = *(_QWORD *)&v12[*(int *)(v21 + 64)];
  v24 = *(_QWORD *)(v5 - 160);
  v25 = *(_QWORD *)(v5 - 152);
  v26 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v25 + 32);
  v26(v24, v12, v20);
  v27 = *(_QWORD *)(v5 - 144);
  v26(v27, v22, v20);
  if ((v23 & 0x40200000000002ALL) != 0)
  {
    *(_QWORD *)(v5 - 192) = v26;
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    v28(v1, v24, v20);
    v29 = *(_QWORD *)(v5 - 216);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    *(_QWORD *)(v5 - 184) = v31;
    v32 = v31(v1, 1, v29);
    *(_QWORD *)(v5 - 232) = v28;
    if (v32 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v20);
      v33 = *(_QWORD *)(v5 - 208);
      v34 = *(_QWORD *)(v5 - 272);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v33 + 56))(v34, 1, 1, *(_QWORD *)(v5 - 168));
      sub_23AB6E2CC(v34);
      v35 = *(_QWORD *)(v5 - 280);
      v28(v35, *(_QWORD *)(v5 - 144), v20);
      v19 = *(_BYTE **)(v5 - 176);
    }
    else
    {
      v51 = *(_QWORD *)(v5 - 248);
      sub_23AA9BA80(v1 + *(int *)(v29 + 48), v51);
      v52 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      *(_QWORD *)(v5 - 264) = v52;
      v52(v1, v29);
      v53 = *(_QWORD *)(v5 - 272);
      sub_23AB6E30C(v51 + *(int *)(*(_QWORD *)(v5 - 240) + 116), v53);
      sub_23AA9F854(v51);
      v33 = *(_QWORD *)(v5 - 208);
      v54 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v33 + 48);
      LODWORD(v51) = v54(v53, 1, *(_QWORD *)(v5 - 168));
      sub_23AB6E2CC(v53);
      v35 = *(_QWORD *)(v5 - 280);
      v28(v35, *(_QWORD *)(v5 - 144), v20);
      v55 = (_DWORD)v51 == 1;
      v19 = *(_BYTE **)(v5 - 176);
      v56 = *(_QWORD *)(v5 - 304);
      if (!v55)
      {
        *(_QWORD *)(v5 - 192) = v54;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v35, v20);
        v43 = *(_QWORD *)(v5 - 136);
        v44 = *(_QWORD *)(v5 - 72);
        v65 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 232);
        v66 = *(_QWORD *)(v5 - 168);
        goto LABEL_33;
      }
    }
    v57 = *(_QWORD *)(v5 - 288);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 192))(v57, v35, v20);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 - 184))(v57, 1, v29) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v57, v20);
      v58 = *(_QWORD *)(v5 - 296);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v33 + 56))(v58, 1, 1, *(_QWORD *)(v5 - 168));
LABEL_24:
      sub_23AB6E2CC(v58);
      v62 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 152) + 8);
      v62(*(_QWORD *)(v5 - 144), v20);
      v62(*(_QWORD *)(v5 - 160), v20);
      goto LABEL_25;
    }
    v59 = *(_QWORD *)(v5 - 248);
    sub_23AA9BA80(v57 + *(int *)(v29 + 48), v59);
    v60 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v60(v57, v29);
    v58 = *(_QWORD *)(v5 - 296);
    sub_23AB6E30C(v59 + *(int *)(*(_QWORD *)(v5 - 240) + 116), v58);
    sub_23AA9F854(v59);
    v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 208) + 48);
    v66 = *(_QWORD *)(v5 - 168);
    if (v61(v58, 1, v66) == 1)
      goto LABEL_24;
    *(_QWORD *)(v5 - 192) = v61;
    *(_QWORD *)(v5 - 264) = v60;
    sub_23AB6E2CC(v58);
    v43 = *(_QWORD *)(v5 - 136);
    v44 = *(_QWORD *)(v5 - 72);
    v56 = *(_QWORD *)(v5 - 304);
    v65 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 232);
LABEL_33:
    sub_23AFF6B00();
    v65(v56, *(_QWORD *)(v5 - 160), v20);
    v67 = v56;
    v68 = v56;
    v69 = *(_QWORD *)(v5 - 216);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 - 184))(v67, 1, v69) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v68, v20);
      v70 = *(_QWORD *)(v5 - 208);
      v71 = *(_QWORD *)(v5 - 312);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v71, 1, 1, v66);
    }
    else
    {
      v72 = v20;
      v73 = v66;
      v74 = *(_QWORD *)(v5 - 248);
      sub_23AA9BA80(v68 + *(int *)(v69 + 48), v74);
      (*(void (**)(uint64_t, uint64_t))(v5 - 264))(v68, v69);
      v71 = *(_QWORD *)(v5 - 312);
      sub_23AB6E30C(v74 + *(int *)(*(_QWORD *)(v5 - 240) + 116), v71);
      sub_23AA9F854(v74);
      v75 = v73;
      v20 = v72;
      v65 = *(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 232);
      v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 - 192))(v71, 1, v75);
      v70 = *(_QWORD *)(v5 - 208);
      if (v76 != 1)
      {
        v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32);
        v88 = *(_QWORD *)(v5 - 336);
        v89 = v71;
        v90 = *(_QWORD *)(v5 - 208);
        v91 = *(_QWORD *)(v5 - 168);
        v87(v88, v89, v91);
        sub_23AA7E38C(&qword_2569E2A10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
        if ((sub_23B1C6344() & 1) == 0)
        {
          sub_23AFF8670();
          v101 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 208) + 8);
          v102 = *(_QWORD *)(v5 - 168);
          v101(v88, v102);
          v101(*(_QWORD *)(v5 - 256), v102);
          v97 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8);
          v98 = *(_QWORD *)(v5 - 224);
          v97(*(_QWORD *)(v5 - 144), v98);
          v99 = *(_QWORD *)(v5 - 160);
          goto LABEL_56;
        }
        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v88, v91);
        v20 = *(_QWORD *)(v5 - 224);
        v77 = *(_QWORD *)(v5 - 328);
        v70 = v90;
LABEL_37:
        v65(v77, *(_QWORD *)(v5 - 144), v20);
        v78 = *(_QWORD *)(v5 - 216);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 - 184))(v77, 1, v78) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v77, v20);
          v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56);
          v80 = v70;
          v81 = v20;
          v82 = *(_QWORD *)(v5 - 320);
          v83 = *(_QWORD *)(v5 - 168);
          v79(v82, 1, 1, v83);
LABEL_40:
          (*(void (**)(_QWORD, uint64_t))(v80 + 8))(*(_QWORD *)(v5 - 256), v83);
          v85 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 152) + 8);
          v85(*(_QWORD *)(v5 - 144), v81);
          v85(*(_QWORD *)(v5 - 160), v81);
          sub_23AB6E2CC(v82);
          return (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v19, v44);
        }
        v84 = *(_QWORD *)(v5 - 248);
        sub_23AA9BA80(v77 + *(int *)(v78 + 48), v84);
        (*(void (**)(uint64_t, uint64_t))(v5 - 264))(v77, v78);
        v80 = v70;
        v81 = v20;
        v82 = *(_QWORD *)(v5 - 320);
        sub_23AB6E30C(v84 + *(int *)(*(_QWORD *)(v5 - 240) + 116), v82);
        sub_23AA9F854(v84);
        v83 = *(_QWORD *)(v5 - 168);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 - 192))(v82, 1, v83) == 1)
          goto LABEL_40;
        v92 = *(_QWORD *)(v5 - 344);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v92, v82, v83);
        sub_23AA7E38C(&qword_2569E2A10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
        v93 = *(_QWORD *)(v5 - 256);
        if ((sub_23B1C6344() & 1) != 0)
        {
          v94 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
          v95 = v92;
          v96 = *(_QWORD *)(v5 - 160);
          v94(v95, v83);
          v94(v93, v83);
          v97 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8);
          v98 = *(_QWORD *)(v5 - 224);
          v97(*(_QWORD *)(v5 - 144), v98);
          v99 = v96;
        }
        else
        {
          v103 = *(_QWORD *)(v5 - 160);
          sub_23AFF8670();
          v104 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 208) + 8);
          v104(v92, v83);
          v104(*(_QWORD *)(v5 - 256), v83);
          v97 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8);
          v98 = *(_QWORD *)(v5 - 224);
          v97(*(_QWORD *)(v5 - 144), v98);
          v99 = v103;
        }
LABEL_56:
        v97(v99, v98);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v19, v44);
      }
    }
    sub_23AB6E2CC(v71);
    v77 = *(_QWORD *)(v5 - 328);
    goto LABEL_37;
  }
  v50 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v50(v27, v20);
  v50(v24, v20);
  v43 = *(_QWORD *)(v5 - 136);
  v44 = *(_QWORD *)(v5 - 72);
  v19 = *(_BYTE **)(v5 - 176);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v19, v44);
}

uint64_t sub_23AFF9608()
{
  _BYTE *v0;

  swift_beginAccess();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  if ((v0[64] & 1) == 0)
  {
    sub_23AB55910();
    sub_23B1C6D70();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  if ((v0[184] & 1) == 0)
  {
    sub_23AB55910();
    sub_23B1C6D70();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  if ((v0[88] & 1) == 0)
  {
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AB55910();
    sub_23B1C6D70();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0x3A79747269643CLL;
}

uint64_t sub_23AFF98B4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_23AFF98E0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_23AFF9924()
{
  sub_23AFF98E0();
  return swift_deallocClassInstance();
}

void type metadata accessor for SpeculativeSetPacer()
{
  JUMPOUT(0x23B861318);
}

uint64_t getEnumTagSinglePayload for SpeculativeSetPacerState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[41])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeculativeSetPacerState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeculativeSetPacerState()
{
  return &type metadata for SpeculativeSetPacerState;
}

uint64_t sub_23AFF9A04()
{
  return sub_23AFF9608();
}

uint64_t sub_23AFF9A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(a7 + 160) = 0;
  *(_QWORD *)(a7 + 168) = 0;
  *(_QWORD *)(a7 + 176) = 0;
  *(_WORD *)(a7 + 184) = 1;
  *(_QWORD *)(a7 + 192) = 0;
  *(_QWORD *)(a7 + 96) = a1;
  swift_retain();
  swift_retain();
  sub_23B1C6EFC();
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 16) + 136);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(_QWORD *)(v14 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(a7 + 104) = v15;
  *(_QWORD *)(a7 + 112) = v16;
  *(_QWORD *)(a7 + 120) = a2;
  *(_QWORD *)(a7 + 128) = a3;
  *(_QWORD *)(a7 + 136) = a4;
  *(_QWORD *)(a7 + 144) = a5;
  *(_QWORD *)(a7 + 152) = a6;
  v17 = *(_QWORD *)(*(_QWORD *)(v13 + 16) + 136);
  *(_BYTE *)(a7 + 40) = 0;
  *(_BYTE *)(a7 + 48) = 1;
  *(_QWORD *)(a7 + 56) = 0;
  *(_BYTE *)(a7 + 64) = 1;
  *(_QWORD *)(a7 + 72) = 0;
  *(_QWORD *)(a7 + 80) = 0;
  *(_BYTE *)(a7 + 88) = 1;
  *(_QWORD *)(a7 + 16) = v17;
  *(_QWORD *)(a7 + 24) = 0xD00000000000001BLL;
  *(_QWORD *)(a7 + 32) = 0x800000023B212A80;
  swift_retain();
  return a7;
}

void sub_23AFF9B6C()
{
  type metadata accessor for SpeculativeSetPacer();
}

uint64_t sub_23AFF9BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  v7 = sub_23AFF9A24(v5, v4, v3, v2, v1, v0, v6);
  swift_release();
  return v7;
}

uint64_t sub_23AFF9C10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x666552736465656ELL && a2 == 0xEC00000068736572;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726665527473616CLL && a2 == 0xEF65746144687365 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023B212B80 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023B212BA0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23AFF9DF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  int v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E22C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AFF9FFC();
  sub_23B1C7520();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v15) = 0;
  v9 = sub_23B1C71A8();
  v18 = 1;
  sub_23AD7D3D4();
  sub_23B1C7160();
  v14 = v15;
  v17 = v16;
  LOBYTE(v15) = 2;
  v13 = sub_23B1C71B4();
  v18 = 3;
  sub_23B1C7160();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v15;
  v11 = v16;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_BYTE *)a2 = v9 & 1;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v10;
  *(_BYTE *)(a2 + 40) = v11;
  return result;
}

unint64_t sub_23AFF9FFC()
{
  unint64_t result;

  result = qword_2542E2298;
  if (!qword_2542E2298)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2DC8, &type metadata for SpeculativeSetPacerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E2298);
  }
  return result;
}

uint64_t sub_23AFFA040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AFFA088()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23AFFA0AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AFFA0D0()
{
  return sub_23AFF7D18();
}

uint64_t sub_23AFFA0E0()
{
  return sub_23AFF73E4();
}

uint64_t sub_23AFFA0F4()
{
  return sub_23AFF6FFC();
}

uint64_t storeEnumTagSinglePayload for SpeculativeSetPacerState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23AFFA154 + 4 * byte_23B1E2B49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23AFFA188 + 4 * byte_23B1E2B44[v4]))();
}

uint64_t sub_23AFFA188(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFFA190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AFFA198);
  return result;
}

uint64_t sub_23AFFA1A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AFFA1ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23AFFA1B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AFFA1B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpeculativeSetPacerState.CodingKeys()
{
  return &type metadata for SpeculativeSetPacerState.CodingKeys;
}

unint64_t sub_23AFFA1D8()
{
  unint64_t result;

  result = qword_2569E7D18[0];
  if (!qword_2569E7D18[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2DA0, &type metadata for SpeculativeSetPacerState.CodingKeys);
    atomic_store(result, qword_2569E7D18);
  }
  return result;
}

unint64_t sub_23AFFA220()
{
  unint64_t result;

  result = qword_2542E22B0;
  if (!qword_2542E22B0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2D10, &type metadata for SpeculativeSetPacerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E22B0);
  }
  return result;
}

unint64_t sub_23AFFA268()
{
  unint64_t result;

  result = qword_2542E22A8;
  if (!qword_2542E22A8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E2D38, &type metadata for SpeculativeSetPacerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542E22A8);
  }
  return result;
}

void sub_23AFFA2AC()
{
  type metadata accessor for ItemReconciliation();
}

_QWORD *sub_23AFFA330@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  _OWORD v7[31];
  _BYTE v8[504];
  _BYTE v9[504];
  uint64_t v10;
  char v11;
  char v12;
  _QWORD __src[63];

  v10 = a1;
  v11 = a2;
  v12 = 0;
  result = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v3 + 168))(__src, &v10, 1);
  if (!v4)
  {
    sub_23AA724E8((uint64_t)__src, (uint64_t)v8, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v9) == 1)
    {
      sub_23ACFC784(v7);
      return (_QWORD *)sub_23AA724E8((uint64_t)v7, (uint64_t)a3, qword_2542E6E20);
    }
    else
    {
      memcpy(a3, __src, 0x1F0uLL);
      return (_QWORD *)nullsub_1(a3);
    }
  }
  return result;
}

void sub_23AFFA3FC(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void (*v5)(_QWORD *__return_ptr, void **, uint64_t);
  id v6;
  _OWORD v7[31];
  _BYTE v8[504];
  _BYTE v9[504];
  void *v10;
  __int16 v11;
  _QWORD __src[63];

  v10 = a1;
  v11 = 0;
  v5 = *(void (**)(_QWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v2 + 168);
  v6 = a1;
  v5(__src, &v10, 1);
  if (v3)
  {

  }
  else
  {

    sub_23AA724E8((uint64_t)__src, (uint64_t)v8, &qword_2569E6458);
    sub_23AA724E8((uint64_t)v8, (uint64_t)v9, &qword_2569E6458);
    if (sub_23AAFC2A4((uint64_t)v9) == 1)
    {
      sub_23ACFC784(v7);
      sub_23AA724E8((uint64_t)v7, (uint64_t)a2, (uint64_t *)&unk_2569E63E0);
    }
    else
    {
      memcpy(a2, __src, 0x1F0uLL);
      nullsub_1(a2);
    }
  }
}

uint64_t sub_23AFFA4E8()
{
  return sub_23AFFA500((uint64_t *)&unk_2542E6B00);
}

uint64_t sub_23AFFA4F4()
{
  return sub_23AFFA500((uint64_t *)&unk_2542E4760);
}

uint64_t sub_23AFFA500(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a1) + 48);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for ItemMetadata() + 80));
}

void sub_23AFFA534(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void (*v5)(_QWORD *__return_ptr, void **, uint64_t);
  id v6;
  _OWORD v7[31];
  _BYTE v8[504];
  _BYTE v9[504];
  void *v10;
  __int16 v11;
  _QWORD __src[63];
  _BYTE __dst[496];

  v10 = a1;
  v11 = 256;
  v5 = *(void (**)(_QWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v2 + 168);
  v6 = a1;
  v5(__src, &v10, 1);
  if (v3)
  {

  }
  else
  {

    sub_23AA724E8((uint64_t)__src, (uint64_t)v8, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v9) == 1)
    {
      sub_23ACFC784(v7);
      sub_23AA724E8((uint64_t)v7, a2, (uint64_t *)&unk_2569E63E0);
    }
    else
    {
      memcpy(__dst, __src, sizeof(__dst));
      sub_23AFFD9BC(a2);
      sub_23AAFC3AC((uint64_t)__dst);
      nullsub_1(a2);
    }
  }
}

_QWORD *sub_23AFFA638@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  _OWORD v7[31];
  _BYTE v8[504];
  _BYTE v9[504];
  uint64_t v10;
  char v11;
  char v12;
  _QWORD __src[63];
  _BYTE __dst[496];

  v10 = a1;
  v11 = a2;
  v12 = 1;
  result = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v3 + 168))(__src, &v10, 1);
  if (!v4)
  {
    sub_23AA724E8((uint64_t)__src, (uint64_t)v8, &qword_2569E6458);
    sub_23AA724E8((uint64_t)v8, (uint64_t)v9, &qword_2569E6458);
    if (sub_23AAFC2A4((uint64_t)v9) == 1)
    {
      sub_23ACFC784(v7);
      return (_QWORD *)sub_23AA724E8((uint64_t)v7, a3, qword_2542E6E20);
    }
    else
    {
      memcpy(__dst, __src, sizeof(__dst));
      sub_23AFFDC50(a3);
      sub_23AAFCF50((uint64_t)__dst);
      return (_QWORD *)nullsub_1(a3);
    }
  }
  return result;
}

uint64_t sub_23AFFA71C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t i;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  uint64_t result;
  char v14;
  _BYTE __src[1536];
  _BYTE v16[1536];
  _BYTE v17[1536];
  _BYTE v18[1536];
  _BYTE v19[120];
  _BYTE v20[1536];
  _BYTE v21[1536];
  _BYTE v22[1544];

  v2 = MEMORY[0x24BDAC7A8](a1);
  v4 = v3;
  v5 = v2;
  sub_23AA724E8(v3, (uint64_t)v17, &qword_2569E7DA0);
  sub_23AA724E8((uint64_t)v17, (uint64_t)v22, &qword_2569E7DA0);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    sub_23B056250(v4, sub_23B055AD8);
    swift_bridgeObjectRetain();
    sub_23AA724E8((uint64_t)v22, (uint64_t)v16, &qword_2569E7DA0);
    sub_23AA724E8((uint64_t)v16, (uint64_t)v20, &qword_2569E7DA0);
    sub_23AA724E8(v5 + 32, (uint64_t)v19, qword_2542E1408);
    v7 = sub_23AEB3270((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEAD544);
    v8 = (void *)MEMORY[0x23B8601A8](v7);
    sub_23B056250(v16, sub_23B055AD8);
    sub_23AFFAA8C((uint64_t)v19);
    if (v1)
    {
      sub_23B056250(v16, sub_23B0566F0);
      objc_autoreleasePoolPop(v8);
      swift_bridgeObjectRelease();
      sub_23AEB3270((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
      v11 = v16;
      return sub_23B056250(v11, sub_23B0566F0);
    }
    for (i = v5 + 152; ; i += 120)
    {
      sub_23B056250(v16, sub_23B0566F0);
      nullsub_1(__src);
      sub_23B056250(v16, sub_23B0566F0);
      sub_23AA724E8((uint64_t)__src, (uint64_t)&v14, &qword_2569E7DA0);
      objc_autoreleasePoolPop(v8);
      sub_23AEB3270((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEB2410);
      if (!--v6)
        break;
      sub_23AA724E8((uint64_t)&v14, (uint64_t)v16, &qword_2569E7DA0);
      sub_23AA724E8((uint64_t)v16, (uint64_t)v20, &qword_2569E7DA0);
      sub_23AA724E8(i, (uint64_t)v19, qword_2542E1408);
      v10 = sub_23AEB3270((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEAD544);
      v8 = (void *)MEMORY[0x23B8601A8](v10);
      sub_23B056250(v16, sub_23B055AD8);
      sub_23AFFAA8C((uint64_t)v19);
    }
    swift_bridgeObjectRelease();
    v12 = &v14;
  }
  else
  {
    sub_23B056250(v4, sub_23B055AD8);
    v12 = v22;
  }
  sub_23AA724E8((uint64_t)v12, (uint64_t)v21, &qword_2569E7DA0);
  sub_23AA724E8((uint64_t)v21, (uint64_t)v16, &qword_2569E7DA0);
  result = sub_23B056E6C((uint64_t)v16);
  if ((_DWORD)result == 1)
    return result;
  sub_23AA724E8((uint64_t)v21, (uint64_t)__src, &qword_2569E7DA0);
  memcpy(v18, __src, sizeof(v18));
  sub_23B056E84((uint64_t)__src);
  sub_23AFFC4B0((uint64_t)v18);
  sub_23B056250(v21, sub_23B0566F0);
  v11 = v21;
  return sub_23B056250(v11, sub_23B0566F0);
}

uint64_t sub_23AFFAA8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  _BYTE *v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  void (*v49)(_QWORD *__return_ptr, _QWORD, _QWORD);
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  char v60;
  void *v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  BOOL v74;
  unint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  unint64_t v79;
  char v80;
  char v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  void *v87;
  uint64_t result;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void (*v92)(_QWORD);
  id v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  int v162;
  int v163;
  int v164;
  _BYTE v165[12];
  uint64_t v166;
  uint64_t v167;
  void *v168;
  __int16 v169;
  _OWORD v170[96];
  _BYTE v171[496];
  void *v172;
  __int16 v173;
  _OWORD v174[12];
  uint64_t v175;
  _OWORD v176[96];
  _BYTE v177[496];
  _QWORD v178[192];
  _BYTE v179[1536];
  _QWORD v180[62];
  uint64_t v181;
  _BYTE v182[1536];
  _QWORD v183[192];
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  void *v187;
  uint64_t v188;
  unsigned __int8 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unsigned __int8 v202;
  unsigned __int8 v203;
  unsigned __int8 v204;
  uint64_t v205;
  uint64_t v206;
  unsigned __int8 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unsigned __int8 v229;
  unsigned __int8 v230;
  unsigned __int8 v231;
  uint64_t v232;
  uint64_t v233;
  unsigned __int8 v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unsigned __int8 v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unsigned __int8 v249;
  void *v250;
  void *v251;
  _QWORD v252[129];
  char v253;
  uint64_t v254;
  _QWORD v255[62];
  _BYTE v256[1536];
  _BYTE v257[120];
  _BYTE v258[1536];
  _BYTE v259[1536];
  _BYTE v260[1536];
  _BYTE v261[1536];
  _BYTE v262[1552];
  uint64_t v263;

  v3 = MEMORY[0x24BDAC7A8](a1);
  v4 = v1;
  v6 = v5;
  v7 = v3;
  v9 = v8;
  sub_23AA724E8(v5, (uint64_t)v256, (uint64_t *)&qword_2569E7DA0);
  sub_23AA724E8((uint64_t)v256, (uint64_t)v262, (uint64_t *)&qword_2569E7DA0);
  v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v127);
  v128 = (uint64_t *)((char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA724E8(v6, (uint64_t)v252, (uint64_t *)&qword_2569E7DA0);
  sub_23AA724E8(v6, (uint64_t)v258, (uint64_t *)&qword_2569E7DA0);
  if (sub_23B056E6C((uint64_t)v258) == 1)
  {
    v11 = v262;
  }
  else
  {
    sub_23AA724E8((uint64_t)v262, (uint64_t)v183, (uint64_t *)&qword_2569E7DA0);
    memcpy(v259, v183, sizeof(v259));
    sub_23AA724E8((uint64_t)v262, (uint64_t)&v185, (uint64_t *)&qword_2569E7DA0);
    sub_23B056E84((uint64_t)&v185);
    sub_23B056E84((uint64_t)v183);
    if ((sub_23B0088D4(v7) & 1) != 0)
    {
      v119 = v2;
      v167 = v7;
      v263 = v1;
      v102 = v9;
      sub_23ACFC940((uint64_t)&v183[2]);
      sub_23ACFC940((uint64_t)&v183[64]);
      sub_23B056250(v6, sub_23B0566F0);
      memcpy(v255, &v183[64], sizeof(v255));
      v104 = LOBYTE(v183[1]);
      v121 = LOBYTE(v183[62]);
      v156 = (void *)v183[63];
      v116 = v183[59];
      v117 = v183[61];
      v113 = LOBYTE(v183[57]);
      v120 = v183[23];
      v118 = v183[24];
      v114 = v183[26];
      v115 = v183[25];
      v110 = v183[60];
      v111 = v183[27];
      v155 = v183[30];
      v18 = v183[29];
      v122 = v183[20];
      v160 = v183[21];
      v163 = LOBYTE(v183[22]);
      v109 = BYTE2(v183[19]);
      v162 = BYTE1(v183[19]);
      *(_DWORD *)v165 = LOBYTE(v183[19]);
      v106 = v183[7];
      v107 = v183[28];
      v112 = v183[8];
      v108 = v183[9];
      v105 = v183[10];
      v157 = v183[12];
      v158 = v183[11];
      v19 = v183[13];
      v126 = v183[14];
      v151 = BYTE2(v183[44]);
      v149 = v183[17];
      v150 = v183[16];
      v20 = v183[5];
      v129 = v183[4];
      v103 = (void *)v183[0];
      v123 = v183[2];
      v124 = LOBYTE(v183[6]);
      v125 = LOBYTE(v183[3]);
      v153 = v183[58];
      v154 = v183[15];
      v147 = v183[56];
      v148 = v183[18];
      v132 = v183[50];
      v143 = v183[52];
      v144 = v183[51];
      v141 = v183[48];
      v142 = v183[53];
      v145 = v183[55];
      v146 = v183[49];
      v159 = v183[45];
      v21 = v183[46];
      v161 = LOBYTE(v183[47]);
      v131 = BYTE1(v183[44]);
      v164 = LOBYTE(v183[44]);
      v139 = v183[37];
      v140 = v183[54];
      v130 = v183[38];
      v137 = v183[40];
      v138 = v183[39];
      v136 = v183[41];
      v134 = v183[36];
      v135 = v183[42];
      v133 = v183[43];
      v22 = v183[35];
      *(_QWORD *)&v165[4] = v183[33];
      v166 = v183[34];
      v152 = v183[31];
      v23 = (void *)v183[32];
      v24 = v262;
      goto LABEL_17;
    }
    sub_23B056250(v6, sub_23B0566F0);
    sub_23B056E84((uint64_t)v183);
    sub_23AFFC4B0((uint64_t)v259);
    if (v2)
    {
      sub_23B056250(v6, sub_23B0566F0);
      goto LABEL_71;
    }
    sub_23B056250(v6, sub_23B0566F0);
    sub_23B056250(v6, sub_23B0566F0);
    sub_23B055AD0(v182);
    sub_23AA724E8((uint64_t)v182, (uint64_t)v252, (uint64_t *)&qword_2569E7DA0);
    v11 = v182;
  }
  sub_23AA724E8((uint64_t)v11, (uint64_t)v261, (uint64_t *)&qword_2569E7DA0);
  sub_23B008BB8();
  v13 = v12;
  v15 = v14;
  v16 = sub_23AFFDEDC(v179, v12, v14 & 0x1FF);
  if (v2)
  {
    sub_23AA862DC(v13, v15, BYTE1(v15) & 1);
LABEL_71:
    sub_23AA724E8((uint64_t)v252, (uint64_t)&v185, (uint64_t *)&qword_2569E7DA0);
    v99 = &v185;
    return sub_23B056250(v99, sub_23B0566F0);
  }
  v25 = v17;
  v103 = v16;
  v263 = v4;
  sub_23AA862DC(v13, v15, BYTE1(v15) & 1);
  memcpy(v178, v179, 0x1F0uLL);
  memcpy(v255, v179, sizeof(v255));
  if ((v25 & 1) != 0)
  {
    sub_23AA724E8(v7, (uint64_t)&v185, qword_2542E1408);
    sub_23AA724E8(v7, (uint64_t)v257, qword_2542E1408);
    if (v257[115] == 1)
    {
      v23 = v187;
      v172 = v187;
      v173 = 256;
      v49 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(*(_QWORD *)v263 + 168);
      sub_23AEB3270(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEAD544);
      v49(&v185, &v172, 1);
      v102 = v9;
      sub_23AA724E8((uint64_t)&v185, (uint64_t)v182, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v182, (uint64_t)v183, (uint64_t *)&unk_2542E4CB0);
      v69 = sub_23AAFC2A4((uint64_t)v183);
      v104 = v69 == 1;
      v167 = v7;
      v119 = 0;
      if (v69 == 1)
      {
        sub_23AFFE14C((uint64_t)v176);
        v174[10] = v176[25];
        v174[11] = v176[26];
        v175 = *(_QWORD *)&v176[27];
        v174[6] = v176[21];
        v174[7] = v176[22];
        v174[9] = v176[24];
        v174[8] = v176[23];
        v174[2] = v176[17];
        v174[3] = v176[18];
        v174[5] = v176[20];
        v174[4] = v176[19];
        v174[1] = v176[16];
        v174[0] = v176[15];
        sub_23AAFC540((uint64_t)v174);
        sub_23AAFC3AC((uint64_t)v178);
        v103 = 0;
        *(_DWORD *)&v165[8] = 0;
        v166 = 0;
        v134 = 0;
        v135 = 0;
        v138 = 0;
        v139 = 0;
        v136 = 0;
        v137 = 0;
        v133 = 0;
        v164 = 0;
        v151 = 0;
        v129 = 0;
        v141 = 0;
        v142 = 0;
        v145 = 0;
        v146 = 0;
        v143 = 0;
        v144 = 0;
        v140 = 0;
        v147 = 0;
        v47 = BYTE8(v176[0]);
        v46 = *(_QWORD *)&v176[0];
        v45 = *(void **)&v176[1];
        v43 = LOBYTE(v176[2]);
        v20 = *((_QWORD *)&v176[1] + 1);
        v39 = *((_QWORD *)&v176[3] + 1);
        v38 = *(_QWORD *)&v176[3];
        v158 = *((_QWORD *)&v176[4] + 1);
        v40 = *(_QWORD *)&v176[4];
        v101 = *((_QWORD *)&v176[5] + 1);
        v157 = *(_QWORD *)&v176[5];
        v126 = *(_QWORD *)&v176[6];
        v44 = *((_QWORD *)&v176[2] + 1);
        v154 = *((_QWORD *)&v176[6] + 1);
        v149 = *((_QWORD *)&v176[7] + 1);
        v150 = *(_QWORD *)&v176[7];
        *(_QWORD *)v165 = BYTE8(v176[8]);
        v162 = BYTE9(v176[8]);
        v37 = BYTE10(v176[8]);
        v148 = *(_QWORD *)&v176[8];
        v42 = *(_QWORD *)&v176[9];
        v163 = LOBYTE(v176[10]);
        v160 = *((_QWORD *)&v176[9] + 1);
        v36 = *((_QWORD *)&v176[10] + 1);
        v32 = *((_QWORD *)&v176[11] + 1);
        v31 = *(_QWORD *)&v176[11];
        v34 = *((_QWORD *)&v176[12] + 1);
        v33 = *(_QWORD *)&v176[12];
        v100 = *((_QWORD *)&v176[13] + 1);
        v35 = *(_QWORD *)&v176[13];
        v155 = *(_QWORD *)&v176[14];
        v30 = BYTE8(v176[27]);
        v152 = *((_QWORD *)&v176[14] + 1);
        v29 = *((_QWORD *)&v176[28] + 1);
        v153 = *(_QWORD *)&v176[28];
        v132 = 0xB000000000000000;
        v27 = *((_QWORD *)&v176[29] + 1);
        v28 = *(_QWORD *)&v176[29];
        v161 = 4;
        v131 = 6;
        v26 = LOBYTE(v176[30]);
        v22 = 3;
        v130 = 1;
        v159 = 1;
        v156 = (void *)*((_QWORD *)&v176[30] + 1);
      }
      else
      {

        sub_23AAFC3AC((uint64_t)v178);
        v47 = v186;
        v46 = v185;
        v45 = v187;
        v43 = v189;
        v20 = v188;
        v44 = v190;
        v38 = v191;
        v39 = v192;
        v40 = v193;
        v158 = v194;
        v157 = v195;
        v101 = v196;
        v126 = v197;
        v154 = v198;
        v150 = v199;
        v149 = v200;
        *(_DWORD *)v165 = v202;
        v162 = v203;
        v37 = v204;
        v148 = v201;
        v42 = v205;
        v163 = v207;
        v160 = v206;
        v36 = v208;
        v31 = v209;
        v32 = v210;
        v33 = v211;
        v34 = v212;
        v151 = v231;
        v26 = v249;
        v35 = v213;
        v100 = v214;
        v155 = v215;
        v152 = v216;
        v23 = v217;
        *(_QWORD *)&v165[4] = v218;
        v22 = v220;
        v166 = v219;
        v134 = v221;
        v139 = v222;
        v130 = v223;
        v138 = v224;
        v137 = v225;
        v136 = v226;
        v135 = v227;
        v164 = v229;
        v131 = v230;
        v133 = v228;
        v159 = v232;
        v161 = v234;
        v129 = v233;
        v141 = v235;
        v146 = v236;
        v132 = v237;
        v144 = v238;
        v143 = v239;
        v142 = v240;
        v140 = v241;
        v145 = v242;
        v147 = v243;
        v30 = v244;
        v153 = v245;
        v29 = v246;
        v28 = v247;
        v27 = v248;
        v156 = v250;
        v103 = v251;
      }
      LOBYTE(v255[1]) = v47;
      v255[0] = v46;
      v255[2] = v45;
      LOBYTE(v255[4]) = v43;
      v255[3] = v20;
      v255[5] = v44;
      v255[6] = v38;
      v255[7] = v39;
      v255[8] = v40;
      v255[9] = v158;
      v255[10] = v157;
      v255[11] = v101;
      v41 = v126;
      v255[12] = v126;
      v255[13] = v154;
      v255[14] = v150;
      v255[15] = v149;
      LOBYTE(v255[17]) = v165[0];
      BYTE1(v255[17]) = v162;
      BYTE2(v255[17]) = v37;
      v255[16] = v148;
      v255[18] = v42;
      LOBYTE(v255[20]) = v163;
      v255[19] = v160;
      v255[21] = v36;
      v255[22] = v31;
      v255[23] = v32;
      v255[24] = v33;
      v255[25] = v34;
      v255[26] = v35;
      v255[27] = v100;
      v255[28] = v155;
      v255[29] = v152;
      v255[30] = v23;
      v255[31] = *(_QWORD *)&v165[4];
      LOBYTE(v255[33]) = v22;
      v255[32] = v166;
      v255[34] = v134;
      v255[35] = v139;
      v255[36] = v130;
      v255[37] = v138;
      v255[38] = v137;
      v255[39] = v136;
      v255[40] = v135;
      LOBYTE(v255[42]) = v164;
      BYTE1(v255[42]) = v131;
      BYTE2(v255[42]) = v151;
      v255[41] = v133;
      v255[43] = v159;
      LOBYTE(v255[45]) = v161;
      v255[44] = v129;
      v255[46] = v141;
      v255[47] = v146;
      v255[48] = v132;
      v255[49] = v144;
      v255[50] = v143;
      v255[51] = v142;
      v255[52] = v140;
      v255[53] = v145;
      v255[54] = v147;
      LOBYTE(v255[55]) = v30;
      v255[56] = v153;
      v255[57] = v29;
      v255[58] = v28;
      v255[59] = v27;
      LOBYTE(v255[60]) = v26;
      v255[61] = v156;
      v48 = v129;
      goto LABEL_16;
    }
    v119 = 0;
    v167 = v7;
    v102 = v9;
    v26 = LOBYTE(v178[60]);
    v27 = v178[59];
    v28 = v178[58];
    v29 = v178[57];
    v30 = LOBYTE(v178[55]);
    v152 = v178[29];
    v153 = v178[56];
    v155 = v178[28];
    v156 = (void *)v178[61];
    v31 = v178[22];
    v32 = v178[23];
    v33 = v178[24];
    v34 = v178[25];
    v35 = v178[26];
    v36 = v178[21];
    v160 = v178[19];
    v163 = LOBYTE(v178[20]);
    v37 = BYTE2(v178[17]);
    v162 = BYTE1(v178[17]);
    *(_DWORD *)v165 = LOBYTE(v178[17]);
    v38 = v178[6];
    v39 = v178[7];
    v40 = v178[8];
    v157 = v178[10];
    v158 = v178[9];
    v100 = v178[27];
    v101 = v178[11];
    v41 = v178[12];
    v154 = v178[13];
    v151 = BYTE2(v178[42]);
    v149 = v178[15];
    v150 = v178[14];
    v42 = v178[18];
    v148 = v178[16];
    v43 = LOBYTE(v178[4]);
    v44 = v178[5];
    v20 = v178[3];
    v45 = (void *)v178[2];
    v46 = v178[0];
    v47 = LOBYTE(v178[1]);
    v147 = v178[54];
    v145 = v178[53];
    v146 = v178[47];
    v132 = v178[48];
    v144 = v178[49];
    v143 = v178[50];
    v142 = v178[51];
    v140 = v178[52];
    v141 = v178[46];
    v48 = v178[44];
    v161 = LOBYTE(v178[45]);
    v131 = BYTE1(v178[42]);
    v164 = LOBYTE(v178[42]);
    v139 = v178[35];
    v130 = v178[36];
    v138 = v178[37];
    v137 = v178[38];
    v136 = v178[39];
    v135 = v178[40];
    v159 = v178[43];
    v133 = v178[41];
    v22 = v178[33];
    v134 = v178[34];
    v166 = v178[32];
    v104 = 1;
  }
  else
  {
    v119 = 0;
    v167 = v7;
    v102 = v9;
    v104 = 0;
    v26 = LOBYTE(v178[60]);
    v27 = v178[59];
    v28 = v178[58];
    v29 = v178[57];
    v30 = LOBYTE(v178[55]);
    v152 = v178[29];
    v153 = v178[56];
    v155 = v178[28];
    v156 = (void *)v178[61];
    v31 = v178[22];
    v32 = v178[23];
    v33 = v178[24];
    v34 = v178[25];
    v35 = v178[26];
    v36 = v178[21];
    v160 = v178[19];
    v163 = LOBYTE(v178[20]);
    v37 = BYTE2(v178[17]);
    v162 = BYTE1(v178[17]);
    *(_DWORD *)v165 = LOBYTE(v178[17]);
    v38 = v178[6];
    v39 = v178[7];
    v40 = v178[8];
    v157 = v178[10];
    v158 = v178[9];
    v100 = v178[27];
    v101 = v178[11];
    v41 = v178[12];
    v154 = v178[13];
    v151 = BYTE2(v178[42]);
    v149 = v178[15];
    v150 = v178[14];
    v42 = v178[18];
    v148 = v178[16];
    v43 = LOBYTE(v178[4]);
    v44 = v178[5];
    v20 = v178[3];
    v45 = (void *)v178[2];
    v46 = v178[0];
    v47 = LOBYTE(v178[1]);
    v147 = v178[54];
    v145 = v178[53];
    v146 = v178[47];
    v132 = v178[48];
    v144 = v178[49];
    v143 = v178[50];
    v142 = v178[51];
    v140 = v178[52];
    v141 = v178[46];
    v48 = v178[44];
    v161 = LOBYTE(v178[45]);
    v131 = BYTE1(v178[42]);
    v164 = LOBYTE(v178[42]);
    v139 = v178[35];
    v130 = v178[36];
    v138 = v178[37];
    v137 = v178[38];
    v136 = v178[39];
    v135 = v178[40];
    v159 = v178[43];
    v133 = v178[41];
    v22 = v178[33];
    v134 = v178[34];
    v166 = v178[32];
  }
  *(_QWORD *)&v165[4] = v178[31];
  v23 = (void *)v178[30];
LABEL_16:
  v124 = v43;
  v125 = v47;
  v122 = v42;
  v123 = v46;
  v129 = (uint64_t)v45;
  v186 = v47;
  v185 = v46;
  v187 = v45;
  v189 = v43;
  v188 = v20;
  v105 = v40;
  v106 = v44;
  v190 = v44;
  v112 = v38;
  v191 = v38;
  v108 = v39;
  v192 = v39;
  v193 = v40;
  v194 = v158;
  v195 = v157;
  v19 = v101;
  v196 = v101;
  v126 = v41;
  v197 = v41;
  v198 = v154;
  v199 = v150;
  v200 = v149;
  v202 = v165[0];
  v203 = v162;
  v109 = v37;
  v204 = v37;
  v201 = v148;
  v205 = v42;
  v207 = v163;
  v206 = v160;
  v120 = v36;
  v208 = v36;
  v118 = v31;
  v209 = v31;
  v114 = v33;
  v115 = v32;
  v210 = v32;
  v211 = v33;
  v111 = v34;
  v212 = v34;
  v107 = v35;
  v213 = v35;
  v18 = v100;
  v214 = v100;
  v215 = v155;
  v216 = v152;
  v217 = v23;
  v218 = *(_QWORD *)&v165[4];
  v220 = v22;
  v219 = v166;
  v221 = v134;
  v222 = v139;
  v223 = v130;
  v224 = v138;
  v225 = v137;
  v226 = v136;
  v227 = v135;
  v229 = v164;
  v230 = v131;
  v231 = v151;
  v228 = v133;
  v232 = v159;
  v234 = v161;
  v233 = v48;
  v235 = v141;
  v236 = v146;
  v237 = v132;
  v238 = v144;
  v239 = v143;
  v240 = v142;
  v241 = v140;
  v242 = v145;
  v243 = v147;
  v113 = v30;
  v244 = v30;
  v245 = v153;
  v116 = v29;
  v117 = v27;
  v246 = v29;
  v110 = v28;
  v247 = v28;
  v248 = v27;
  v121 = v26;
  v249 = v26;
  v250 = v156;
  v21 = v48;
  sub_23ACFC940((uint64_t)&v185);
  v24 = v261;
LABEL_17:
  sub_23AA724E8((uint64_t)v24, (uint64_t)v260, (uint64_t *)&qword_2569E7DA0);
  sub_23AA724E8((uint64_t)v260, (uint64_t)&v185, (uint64_t *)&qword_2569E7DA0);
  v50 = sub_23B056E6C((uint64_t)&v185);
  v51 = v252[126];
  if (v50 == 1)
    v51 = 0;
  v184 = v51;
  sub_23AA724E8((uint64_t)v252, (uint64_t)v182, (uint64_t *)&qword_2569E7DA0);
  sub_23AA724E8((uint64_t)v182, (uint64_t)v183, (uint64_t *)&qword_2569E7DA0);
  v52 = sub_23B056E6C((uint64_t)v183);
  v180[6] = v112;
  v180[7] = v108;
  v180[8] = v105;
  v180[9] = v158;
  v180[10] = v157;
  v180[11] = v19;
  v180[12] = v126;
  v180[13] = v154;
  v180[14] = v150;
  v180[15] = v149;
  v180[16] = v148;
  BYTE2(v180[17]) = v109;
  v180[22] = v118;
  v180[23] = v115;
  v180[24] = v114;
  v180[25] = v111;
  v180[26] = v107;
  v180[27] = v18;
  v180[28] = v155;
  v180[29] = v152;
  v53 = v252[127];
  if (v52 == 1)
    v53 = 0;
  v181 = v53;
  LOBYTE(v180[1]) = v125;
  v180[0] = v123;
  v180[2] = v129;
  LOBYTE(v180[4]) = v124;
  v54 = v20;
  v180[3] = v20;
  v180[5] = v106;
  LOBYTE(v180[17]) = v165[0];
  BYTE1(v180[17]) = v162;
  v180[18] = v122;
  LOBYTE(v180[20]) = v163;
  v180[19] = v160;
  v180[21] = v120;
  v180[30] = v23;
  v180[31] = *(_QWORD *)&v165[4];
  LOBYTE(v180[33]) = v22;
  v180[32] = v166;
  v180[34] = v134;
  v180[35] = v139;
  v180[36] = v130;
  v180[37] = v138;
  v180[38] = v137;
  v180[39] = v136;
  v180[40] = v135;
  LOBYTE(v180[42]) = v164;
  BYTE1(v180[42]) = v131;
  BYTE2(v180[42]) = v151;
  v180[41] = v133;
  v180[43] = v159;
  LOBYTE(v180[45]) = v161;
  v180[44] = v21;
  v180[46] = v141;
  v180[47] = v146;
  v180[48] = v132;
  v180[49] = v144;
  v180[50] = v143;
  v180[51] = v142;
  v180[52] = v140;
  v180[53] = v145;
  v180[54] = v147;
  LOBYTE(v180[55]) = v113;
  v180[56] = v153;
  v180[57] = v116;
  v180[58] = v110;
  v180[59] = v117;
  LOBYTE(v180[60]) = v121;
  v180[61] = v156;
  v55 = v167;
  v56 = v263;
  v57 = v119;
  sub_23B000DC8(v167, (uint64_t)v255);
  if (v57)
  {
    memcpy(v179, v255, 0x1F0uLL);
    sub_23AAFC3AC((uint64_t)v179);
    sub_23AAFC3AC((uint64_t)v180);
    goto LABEL_71;
  }
  LODWORD(v157) = v59;
  v158 = v58;
  v60 = v129;
  v156 = v23;
  v61 = sub_23B00B814();
  v167 = v55;
  if ((v63 & 1) == 0)
  {
    v64 = (unint64_t)v61;
    v65 = v62;
    if ((v104 & 1) != 0)
    {
LABEL_25:
      v255[57] = v64;
      v255[58] = v65;
      goto LABEL_55;
    }
    v66 = v21;
    if (qword_2542E7190 != -1)
    {
      swift_once();
      v66 = v21;
    }
    v67 = qword_2542EDE38;
    if (qword_2542EDE38)
    {
      if ((qword_2542EDE38 & 0x10) != 0)
      {
        if (!(qword_2542EDE38 & v54 | v60 & 0x51))
        {
LABEL_38:
          if ((v67 & v166) == 0
            && (v165[4] & 0x51) == 0
            && *(_DWORD *)v165 != 1
            && v164 != 1
            && v124 == 3
            && v162 == 6
            && (v163 == 3 || v163 == 4 && !(v122 & 0xFFFFFFFFFFFFFFFELL | v160))
            && (v161 == 3 || v161 == 4 && !(v159 & 0xFFFFFFFFFFFFFFFELL | v66)))
          {
            goto LABEL_25;
          }
        }
LABEL_50:
        v70 = v255[57];
        v71 = v255[58];
        if (v64 > v255[57])
          v70 = v64;
        if (v65 < v255[58])
          v71 = v65;
        v255[57] = v70;
        v255[58] = v71;
        goto LABEL_55;
      }
      v68 = (qword_2542EDE38 | 0x10) & v54;
    }
    else
    {
      v68 = v54 & 0x10;
    }
    if (!(v68 | v60 & 0x51))
    {
      v67 = qword_2542EDE38 | 0x10;
      goto LABEL_38;
    }
    goto LABEL_50;
  }
LABEL_55:
  v263 = v56;
  memcpy(v177, v255, sizeof(v177));
  v166 = v184;
  v72 = v181;
  sub_23AA724E8((uint64_t)v252, (uint64_t)v178, (uint64_t *)&qword_2569E7DA0);
  sub_23AA724E8((uint64_t)v178, (uint64_t)v179, (uint64_t *)&qword_2569E7DA0);
  v73 = sub_23B056E6C((uint64_t)v179);
  v74 = v73 == 1;
  if (v73 == 1)
    v75 = 0;
  else
    v75 = v252[128];
  if (v74)
    v76 = -1;
  else
    v76 = v253;
  v77 = v158;
  v78 = v157;
  v79 = sub_23AFFE2FC(v75, v76, v158, v157);
  v81 = v80;
  sub_23AA724E8((uint64_t)v252, (uint64_t)&v172, (uint64_t *)&qword_2569E7DA0);
  sub_23AA724E8((uint64_t)&v172, (uint64_t)v174, (uint64_t *)&qword_2569E7DA0);
  if (sub_23B056E6C((uint64_t)v174) == 1)
  {
    sub_23ACFC784(v170);
  }
  else
  {
    sub_23AA724E8((uint64_t)&v254, (uint64_t)v170, qword_2542E6E20);
    sub_23ADF2D34((uint64_t)v170, (voidsub_23AA88348);
  }
  sub_23AA724E8((uint64_t)v170, (uint64_t)v171, qword_2542E6E20);
  memcpy(&v176[1], v180, 0x1F0uLL);
  memcpy(&v176[32], v177, 0x1F0uLL);
  sub_23AA724E8((uint64_t)v171, (uint64_t)&v176[65], qword_2542E6E20);
  BYTE8(v176[0]) = v104;
  *(_QWORD *)&v176[0] = v103;
  *(_QWORD *)&v176[63] = v166;
  *((_QWORD *)&v176[63] + 1) = v72;
  *(_QWORD *)&v176[64] = v79;
  BYTE8(v176[64]) = v81;
  if (v78 == 1)
  {
    *(_QWORD *)&v165[4] = v72;
    sub_23ACFC940((uint64_t)v180);
    sub_23ACFC940((uint64_t)v177);
    sub_23B008BB8();
    v95 = v94;
    v97 = v96;
    v168 = v94;
    v169 = v96 & 0x1FF;
    v98 = (v96 >> 8) & 1;
    (*(void (**)(void **, unint64_t))(*(_QWORD *)v263 + 208))(&v168, v77);
    sub_23AA862DC(v95, v97, v98);
    sub_23AAFC3AC((uint64_t)v177);
    sub_23AAFC3AC((uint64_t)v180);
    v87 = v102;
LABEL_75:
    memcpy(v87, v176, 0x600uLL);
    sub_23AA724E8((uint64_t)v252, (uint64_t)v170, (uint64_t *)&qword_2569E7DA0);
    v99 = (uint64_t *)v170;
    return sub_23B056250(v99, sub_23B0566F0);
  }
  if (v78)
  {
    sub_23ACFC940((uint64_t)v180);
    sub_23ACFC940((uint64_t)v177);
    v87 = v102;
    goto LABEL_74;
  }
  *(_QWORD *)&v165[4] = v72;
  sub_23ACFC940((uint64_t)v180);
  sub_23ACFC940((uint64_t)v177);
  sub_23B008BB8();
  v83 = v82;
  v85 = v84;
  v168 = v82;
  v169 = v84 & 0x1FF;
  v86 = (v84 >> 8) & 1;
  (*(void (**)(void **, unint64_t))(*(_QWORD *)v263 + 216))(&v168, v77);
  sub_23AA862DC(v83, v85, v86);
  v87 = v102;
  if (v125 == 255 || !v156)
    goto LABEL_74;
  result = swift_weakLoadStrong();
  if (result)
  {
    v89 = result;
    v90 = (uint64_t)v128;
    *v128 = v123;
    *(_BYTE *)(v90 + 8) = v125;
    v91 = v156;
    *(_QWORD *)(v90 + 16) = v156;
    swift_storeEnumTagMultiPayload();
    v92 = *(void (**)(_QWORD))(*(_QWORD *)v89 + 312);
    v93 = v91;
    v92(v90);
    swift_release();
    sub_23AA8A05C(v90, (uint64_t *)&unk_2542DDFB0);
LABEL_74:
    memcpy(v170, v255, 0x1F0uLL);
    sub_23AAFC3AC((uint64_t)v170);
    sub_23AAFC3AC((uint64_t)v180);
    goto LABEL_75;
  }
  __break(1u);
  return result;
}

void sub_23AFFC4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BOOL4 v21;
  _BOOL4 v22;
  _BOOL4 v23;
  uint64_t v24;
  unsigned int v25;
  _QWORD v26[38];
  _BOOL4 v27;
  uint64_t v28;
  char *v29;
  _BOOL4 v30;
  uint64_t v31;
  _BOOL4 v32;
  _BOOL4 v33;
  uint64_t v34;
  _BYTE v35[496];
  uint64_t v36;
  _BYTE v37[1536];
  _QWORD v38[62];
  _QWORD v39[62];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[8096];
  _BYTE v56[272];
  _BYTE v57[496];

  v1 = MEMORY[0x24BDAC7A8](a1);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v2 = MEMORY[0x24BDAC7A8](v34);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)v26 - v6;
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v26 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v29 = (char *)v26 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v26[36] = (char *)v26 - v13;
  memcpy(v39, (const void *)(v1 + 16), sizeof(v39));
  memcpy(v57, (const void *)(v1 + 16), sizeof(v57));
  v14 = *(_OWORD *)(v1 + 224);
  v52 = *(_OWORD *)(v1 + 208);
  v53 = v14;
  v54 = *(_OWORD *)(v1 + 240);
  v15 = *(_OWORD *)(v1 + 160);
  v48 = *(_OWORD *)(v1 + 144);
  v49 = v15;
  v16 = *(_OWORD *)(v1 + 176);
  v51 = *(_OWORD *)(v1 + 192);
  v50 = v16;
  v17 = *(_OWORD *)(v1 + 96);
  v44 = *(_OWORD *)(v1 + 80);
  v45 = v17;
  v18 = *(_OWORD *)(v1 + 112);
  v47 = *(_OWORD *)(v1 + 128);
  v46 = v18;
  v19 = *(_OWORD *)(v1 + 32);
  v40 = *(_OWORD *)(v1 + 16);
  v41 = v19;
  v20 = *(_OWORD *)(v1 + 48);
  v43 = *(_OWORD *)(v1 + 64);
  v42 = v20;
  sub_23AA724E8((uint64_t)&v40, (uint64_t)v55, (uint64_t *)&unk_2542E7420);
  memcpy(v37, (const void *)v1, sizeof(v37));
  sub_23AA724E8((uint64_t)v55, (uint64_t)v56, (uint64_t *)&unk_2542E7420);
  v26[34] = v10;
  v26[35] = v7;
  v26[33] = v4;
  if (v56[8] == 255)
  {
    v22 = 0;
    v21 = 0;
  }
  else
  {
    v21 = 0;
    v22 = v39[30] != 0;
    if (v39[30] && !(_QWORD)v41)
    {
      v21 = v39[31] == 0;
      v22 = 1;
    }
  }
  memcpy(v38, (const void *)(v1 + 512), sizeof(v38));
  v27 = v21;
  v33 = v22;
  if (LOBYTE(v38[1]) == 255)
  {
    v32 = 0;
    v30 = 0;
  }
  else
  {
    v32 = v38[30] != 0;
    if (v38[2])
      v23 = 0;
    else
      v23 = v38[30] != 0;
    if (v38[31])
      v23 = 0;
    v30 = v23;
  }
  sub_23AA724E8(v1 + 1040, (uint64_t)&v36, qword_2542E6E20);
  v28 = *(_QWORD *)(v1 + 1008);
  v31 = *(_QWORD *)(v1 + 1016);
  v26[37] = *(_QWORD *)v1;
  v24 = *(_QWORD *)(v1 + 1024);
  v25 = *(unsigned __int8 *)(v1 + 1032);
  memcpy(v35, v38, sizeof(v35));
  if (v25 >= 2)
    __asm { BR              X9 }
  sub_23B1C704C();
  __break(1u);
  JUMPOUT(0x23AFFD9ACLL);
}

double sub_23AFFD9BC@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  void *v23;
  int v24;
  id v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  double result;
  uint64_t v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;

  v2 = a1;
  v3 = v1[24];
  v4 = v1[26];
  v76 = v1[25];
  v77 = v4;
  v5 = v1[20];
  v6 = v1[22];
  v7 = v1[23];
  v72 = v1[21];
  v73 = v6;
  v74 = v7;
  v75 = v3;
  v8 = v1[16];
  v9 = v1[18];
  v10 = v1[19];
  v68 = v1[17];
  v69 = v9;
  v78 = *((_QWORD *)v1 + 54);
  v70 = v10;
  v71 = v5;
  v11 = v1[14];
  v66 = v1[15];
  v67 = v8;
  v12 = v1[5];
  v55 = v1[4];
  v56 = v12;
  v13 = v1[3];
  v53 = v1[2];
  v54 = v13;
  v14 = v1[9];
  v59 = v1[8];
  v60 = v14;
  v15 = v1[7];
  v57 = v1[6];
  v58 = v15;
  v16 = v1[12];
  v64 = v1[13];
  v65 = v11;
  v17 = v1[11];
  v61 = v1[10];
  v62 = v17;
  v63 = v16;
  v18 = v1[1];
  v51 = *v1;
  v52 = v18;
  v19 = *((_QWORD *)v1 + 56);
  v50 = v19;
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    sub_23AAFC2BC((uint64_t)&v66);
    sub_23ACF4048((uint64_t)&v51);
    sub_23AAB7528((uint64_t)&v50);
    v47 = MEMORY[0x24BEE4AF8];
    sub_23ADACE74(0, v20, 0);
    v21 = v47;
    v22 = (unsigned __int8 *)(v19 + 41);
    do
    {
      v23 = *(void **)(v22 - 9);
      v24 = *v22;
      if (v24 == 1)
      {
        v25 = v23;
        v26 = 0;
      }
      else
      {
        v26 = *(v22 - 1);
      }
      v28 = *(_QWORD *)(v47 + 16);
      v27 = *(_QWORD *)(v47 + 24);
      if (v28 >= v27 >> 1)
        sub_23ADACE74(v27 > 1, v28 + 1, 1);
      v22 += 16;
      *(_QWORD *)(v47 + 16) = v28 + 1;
      v29 = v47 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v23;
      *(_BYTE *)(v29 + 40) = v26;
      *(_BYTE *)(v29 + 41) = v24 ^ 1;
      --v20;
    }
    while (v20);
    sub_23AAB7500((uint64_t)&v50);
    v2 = a1;
  }
  else
  {
    sub_23AAFC2BC((uint64_t)&v66);
    sub_23ACF4048((uint64_t)&v51);
    v21 = MEMORY[0x24BEE4AF8];
  }
  sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v49, &qword_2542E4690);
  v48 = *(__int128 *)((char *)v1 + 456);
  v30 = v77;
  *(_OWORD *)(v2 + 160) = v76;
  *(_OWORD *)(v2 + 176) = v30;
  v31 = v73;
  *(_OWORD *)(v2 + 96) = v72;
  *(_OWORD *)(v2 + 112) = v31;
  v32 = v75;
  *(_OWORD *)(v2 + 128) = v74;
  *(_OWORD *)(v2 + 144) = v32;
  v33 = v69;
  *(_OWORD *)(v2 + 32) = v68;
  *(_OWORD *)(v2 + 48) = v33;
  v34 = v71;
  *(_OWORD *)(v2 + 64) = v70;
  *(_OWORD *)(v2 + 80) = v34;
  v35 = v67;
  *(_OWORD *)v2 = v66;
  *(_OWORD *)(v2 + 16) = v35;
  v36 = v64;
  *(_OWORD *)(v2 + 392) = v63;
  *(_OWORD *)(v2 + 408) = v36;
  *(_OWORD *)(v2 + 424) = v65;
  v37 = v60;
  *(_OWORD *)(v2 + 328) = v59;
  *(_OWORD *)(v2 + 344) = v37;
  v38 = v62;
  *(_OWORD *)(v2 + 360) = v61;
  *(_OWORD *)(v2 + 376) = v38;
  v39 = v53;
  *(_OWORD *)(v2 + 248) = v54;
  v40 = v56;
  *(_OWORD *)(v2 + 264) = v55;
  *(_OWORD *)(v2 + 280) = v40;
  v41 = v58;
  *(_OWORD *)(v2 + 296) = v57;
  *(_OWORD *)(v2 + 312) = v41;
  v42 = v52;
  *(_OWORD *)(v2 + 200) = v51;
  *(_OWORD *)(v2 + 216) = v42;
  v43 = *((_BYTE *)v1 + 480);
  v44 = *((_QWORD *)v1 + 61);
  *(_QWORD *)(v2 + 192) = v78;
  *(_OWORD *)(v2 + 232) = v39;
  sub_23AA724E8((uint64_t)&v49, v2 + 440, &qword_2542E4690);
  *(_QWORD *)(v2 + 448) = v21;
  result = *(double *)&v48;
  *(_OWORD *)(v2 + 456) = v48;
  *(_QWORD *)(v2 + 472) = 0;
  *(_BYTE *)(v2 + 480) = v43;
  *(_QWORD *)(v2 + 488) = v44;
  return result;
}

double sub_23AFFDC50@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  char v21;
  char v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  double result;
  __int128 *v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v3 = *(__int128 *)((char *)v1 + 408);
  v77 = *(__int128 *)((char *)v1 + 392);
  v78 = v3;
  v79 = *(__int128 *)((char *)v1 + 424);
  v4 = *(__int128 *)((char *)v1 + 344);
  v73 = *(__int128 *)((char *)v1 + 328);
  v74 = v4;
  v5 = *(__int128 *)((char *)v1 + 376);
  v75 = *(__int128 *)((char *)v1 + 360);
  v76 = v5;
  v6 = *(__int128 *)((char *)v1 + 248);
  v7 = *(__int128 *)((char *)v1 + 280);
  v69 = *(__int128 *)((char *)v1 + 264);
  v70 = v7;
  v8 = *(__int128 *)((char *)v1 + 312);
  v71 = *(__int128 *)((char *)v1 + 296);
  v72 = v8;
  v9 = *(__int128 *)((char *)v1 + 216);
  v65 = *(__int128 *)((char *)v1 + 200);
  v66 = v9;
  v67 = *(__int128 *)((char *)v1 + 232);
  v68 = v6;
  v10 = v1[3];
  v54 = v1[2];
  v55 = v10;
  v11 = v1[7];
  v58 = v1[6];
  v59 = v11;
  v12 = v1[5];
  v56 = v1[4];
  v57 = v12;
  v64 = *((_QWORD *)v1 + 24);
  v13 = v1[11];
  v62 = v1[10];
  v63 = v13;
  v14 = v1[9];
  v60 = v1[8];
  v61 = v14;
  v15 = v1[1];
  v52 = *v1;
  v53 = v15;
  v16 = *((_QWORD *)v1 + 56);
  v51 = v16;
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    sub_23ACF4048((uint64_t)&v65);
    sub_23AAFC2BC((uint64_t)&v52);
    sub_23AAB7528((uint64_t)&v51);
    v48 = MEMORY[0x24BEE4AF8];
    sub_23ADACD84(0, v17, 0);
    v18 = v48;
    v19 = (char *)(v16 + 41);
    do
    {
      v20 = *(void **)(v19 - 9);
      v21 = *v19;
      if ((*v19 & 1) != 0)
      {
        v22 = *(v19 - 1);
      }
      else
      {
        v23 = v20;
        v22 = 0;
      }
      v25 = *(_QWORD *)(v48 + 16);
      v24 = *(_QWORD *)(v48 + 24);
      if (v25 >= v24 >> 1)
        sub_23ADACD84(v24 > 1, v25 + 1, 1);
      v19 += 16;
      *(_QWORD *)(v48 + 16) = v25 + 1;
      v26 = v48 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v20;
      *(_BYTE *)(v26 + 40) = v22;
      *(_BYTE *)(v26 + 41) = v21 ^ 1;
      --v17;
    }
    while (v17);
    sub_23AAB7500((uint64_t)&v51);
    v1 = v47;
  }
  else
  {
    sub_23ACF4048((uint64_t)&v65);
    sub_23AAFC2BC((uint64_t)&v52);
    v18 = MEMORY[0x24BEE4AF8];
  }
  sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v50, &qword_2542E4690);
  v49 = *(__int128 *)((char *)v1 + 456);
  v27 = v78;
  *(_OWORD *)(a1 + 192) = v77;
  *(_OWORD *)(a1 + 208) = v27;
  v28 = v74;
  *(_OWORD *)(a1 + 128) = v73;
  *(_OWORD *)(a1 + 144) = v28;
  v29 = v76;
  *(_OWORD *)(a1 + 160) = v75;
  *(_OWORD *)(a1 + 176) = v29;
  v30 = v70;
  *(_OWORD *)(a1 + 64) = v69;
  *(_OWORD *)(a1 + 80) = v30;
  v31 = v72;
  *(_OWORD *)(a1 + 96) = v71;
  *(_OWORD *)(a1 + 112) = v31;
  v32 = v66;
  *(_OWORD *)a1 = v65;
  *(_OWORD *)(a1 + 16) = v32;
  v33 = v68;
  *(_OWORD *)(a1 + 32) = v67;
  *(_OWORD *)(a1 + 48) = v33;
  v34 = v62;
  v35 = v63;
  v36 = v60;
  *(_OWORD *)(a1 + 384) = v61;
  *(_OWORD *)(a1 + 400) = v34;
  *(_OWORD *)(a1 + 416) = v35;
  v37 = v58;
  v38 = v59;
  v39 = v56;
  *(_OWORD *)(a1 + 320) = v57;
  *(_OWORD *)(a1 + 336) = v37;
  *(_OWORD *)(a1 + 352) = v38;
  *(_OWORD *)(a1 + 368) = v36;
  v40 = v54;
  v41 = v55;
  v42 = v52;
  *(_OWORD *)(a1 + 256) = v53;
  *(_OWORD *)(a1 + 272) = v40;
  v43 = *((_BYTE *)v1 + 480);
  v44 = *((_QWORD *)v1 + 61);
  *(_OWORD *)(a1 + 288) = v41;
  *(_OWORD *)(a1 + 304) = v39;
  v45 = v79;
  *(_QWORD *)(a1 + 432) = v64;
  *(_OWORD *)(a1 + 224) = v45;
  *(_OWORD *)(a1 + 240) = v42;
  sub_23AA724E8((uint64_t)&v50, a1 + 440, &qword_2542E4690);
  *(_QWORD *)(a1 + 448) = v18;
  result = *(double *)&v49;
  *(_OWORD *)(a1 + 456) = v49;
  *(_QWORD *)(a1 + 472) = 0;
  *(_BYTE *)(a1 + 480) = v43;
  *(_QWORD *)(a1 + 488) = v44;
  return result;
}

void *sub_23AFFDEDC(void *a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v6;
  id v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD v25[31];
  _BYTE v26[504];
  _BYTE v27[504];
  _QWORD __src[63];
  void *v29;
  __int16 v30;

  v6 = a2;
  v29 = a2;
  v30 = a3 & 0x1FF;
  (*(void (**)(_QWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v3 + 168))(__src, &v29, 1);
  if (!v4)
  {
    sub_23AA724E8((uint64_t)__src, (uint64_t)v26, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v27) == 1)
    {
      sub_23AFFE14C((uint64_t)v25);
      if ((a3 & 0x100) != 0)
      {
        v20 = v25[25];
        v21 = v25[26];
        *(_QWORD *)&v22 = *(_QWORD *)&v25[27];
        v16 = v25[21];
        v17 = v25[22];
        v18 = v25[23];
        v19 = v25[24];
        v12 = v25[17];
        v13 = v25[18];
        v14 = v25[19];
        v15 = v25[20];
        v10 = v25[15];
        v11 = v25[16];
        v8 = v6;
        sub_23AAFC540((uint64_t)&v10);
        *(_QWORD *)&v25[16] = 0;
        BYTE8(v25[16]) = 3;
        v25[17] = 0uLL;
        *(_OWORD *)((char *)&v25[18] + 8) = 0u;
        *(_OWORD *)((char *)&v25[19] + 8) = 0u;
        *(_OWORD *)((char *)&v25[20] + 1) = 0u;
        *(_WORD *)((char *)&v25[21] + 1) = 6;
        *(_QWORD *)&v25[18] = 1;
        *((_QWORD *)&v25[21] + 1) = 1;
        *(_QWORD *)&v25[22] = 0;
        BYTE8(v25[22]) = 4;
        v25[23] = 0uLL;
        *(_QWORD *)&v25[24] = 0xB000000000000000;
        *(_OWORD *)((char *)&v25[24] + 8) = 0u;
        *(_OWORD *)((char *)&v25[25] + 8) = 0u;
        *(_OWORD *)((char *)&v25[26] + 8) = 0u;
        v25[15] = (unint64_t)v6;
      }
      else
      {
        v22 = v25[12];
        v23 = v25[13];
        v24 = v25[14];
        v18 = v25[8];
        v19 = v25[9];
        v20 = v25[10];
        v21 = v25[11];
        v14 = v25[4];
        v15 = v25[5];
        v16 = v25[6];
        v17 = v25[7];
        v10 = v25[0];
        v11 = v25[1];
        v12 = v25[2];
        v13 = v25[3];
        sub_23ACF410C((uint64_t)&v10);
        v25[1] = 0uLL;
        LOBYTE(v25[2]) = 3;
        *(_OWORD *)((char *)&v25[2] + 8) = 0u;
        *(_OWORD *)((char *)&v25[3] + 8) = 0u;
        *(_OWORD *)((char *)&v25[4] + 8) = 0u;
        *(_OWORD *)((char *)&v25[5] + 8) = 0u;
        *(_OWORD *)((char *)&v25[6] + 8) = 0u;
        *(_OWORD *)((char *)&v25[7] + 8) = 0u;
        BYTE8(v25[8]) = 0;
        *(_WORD *)((char *)&v25[8] + 9) = 6;
        v25[9] = xmmword_23B1CFCA0;
        LOBYTE(v25[10]) = 4;
        *((_QWORD *)&v25[10] + 1) = 0;
        *(_QWORD *)&v25[11] = 0;
        *((_QWORD *)&v25[11] + 1) = 0xB000000000000000;
        memset(&v25[12], 0, 48);
        *(_QWORD *)&v25[0] = v6;
        BYTE8(v25[0]) = a3;
      }
      memcpy(a1, v25, 0x1F0uLL);
      return 0;
    }
    else
    {
      v6 = (void *)__src[62];
      memcpy(a1, __src, 0x1F0uLL);
    }
  }
  return v6;
}

uint64_t sub_23AFFE14C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  uint64_t v10;

  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = -1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 3;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_BYTE *)(a1 + 136) = 0;
  *(_WORD *)(a1 + 137) = 6;
  *(_OWORD *)(a1 + 144) = xmmword_23B1CFCA0;
  *(_BYTE *)(a1 + 160) = 4;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0xB000000000000000;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_QWORD *)(a1 + 256) = 0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_BYTE *)(a1 + 264) = 3;
  *(_QWORD *)(a1 + 272) = 0;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 288) = 1;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 321) = 0u;
  *(_WORD *)(a1 + 337) = 6;
  *(_QWORD *)(a1 + 344) = 1;
  *(_QWORD *)(a1 + 352) = 0;
  *(_BYTE *)(a1 + 360) = 4;
  *(_QWORD *)(a1 + 368) = 0;
  *(_QWORD *)(a1 + 376) = 0;
  *(_QWORD *)(a1 + 384) = 0xB000000000000000;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_BYTE *)(a1 + 440) = 4;
  *(_QWORD *)(a1 + 448) = MEMORY[0x24BEE4AF8];
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v7 = v6;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = v7 * 1000000000.0;
  if ((~COERCE__INT64(v7 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v9 < 9.22337204e18)
  {
    *(_QWORD *)(a1 + 456) = 0x2000000000000000;
    *(_QWORD *)(a1 + 464) = (uint64_t)v9;
    *(_QWORD *)(a1 + 472) = 0;
    *(_BYTE *)(a1 + 480) = 0;
    *(_QWORD *)(a1 + 488) = 0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_23AFFE2FC(unint64_t result, char a2, unint64_t a3, unsigned __int8 a4)
{
  if (a2 == -1 || a2 == 2 && result == 3)
  {
    if (!a4)
      return 3;
    result = a3;
    if (a4 == 1)
      return 3;
  }
  else if (a4 >= 2u)
  {
    if (a4 == 2)
    {
      switch(a3)
      {
        case 0uLL:
          if (a2 != 2 || result >= 2)
            goto LABEL_19;
          break;
        case 1uLL:
          if (a2 != 2 || result >= 2)
            goto LABEL_19;
          result = 1;
          break;
        case 2uLL:
          result = 2;
          break;
        case 3uLL:
          return result;
        default:
          goto LABEL_19;
      }
    }
    else
    {
LABEL_19:
      result = sub_23B1C704C();
      __break(1u);
    }
  }
  return result;
}

void sub_23AFFE414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  int v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[6];
  _QWORD v29[8];

  v15 = a8;
  v14[2] = a7;
  v20 = a6;
  v19 = a5;
  v26 = a2;
  v18 = a9;
  sub_23AA724E8(a1, (uint64_t)v28, &qword_2569E7DD8);
  v25 = v28[0];
  v22 = v28[4];
  v23 = v28[5];
  v24 = v28[1];
  v10 = sub_23B1C5E4C();
  v14[3] = *(_QWORD *)(v10 - 8);
  v14[4] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v12 = MEMORY[0x24BDAC7A8](v21);
  v17 = (char *)v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  sub_23AA724E8(a1, (uint64_t)&v27, &qword_2569E7DD8);
  sub_23AA724E8(a1, (uint64_t)v29, &qword_2569E7DD8);
  __asm { BR              X11 }
}

uint64_t sub_23AFFE570()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!**(_QWORD **)(v0 + 136))
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 398);
  v2 = *(_QWORD *)(v0 + 352);
  if ((v2 & ~*v1) != 0)
    *v1 |= v2;
  v3 = v2 & 0xFFFFFFFFFF7FFFEFLL;
  if (qword_2542E7190 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v4 + 16) |= v3 & (qword_2542EDE38 | 0x409000000C000);
  if ((v5 & 9) != 0)
    *(_QWORD *)(v4 + 8) = v5 & 0xFFFFFFFFFFFFFFF6;
  return 1;
}

void sub_23AFFF8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  int v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[11];
  _QWORD v31[12];

  v15 = a8;
  v14[0] = a7;
  v25 = a6;
  v19 = a5;
  v28 = a2;
  v18 = a9;
  sub_23AA724E8(a1, (uint64_t)v30, &qword_2569E7DD0);
  v27 = v30[0];
  v24 = v30[1];
  v26 = v30[4];
  v20 = v30[6];
  v21 = v30[8];
  v22 = v30[9];
  v10 = sub_23B1C5E4C();
  v14[1] = *(_QWORD *)(v10 - 8);
  v14[2] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v12 = MEMORY[0x24BDAC7A8](v23);
  v17 = (char *)v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  sub_23AA724E8(a1, (uint64_t)&v29, &qword_2569E7DD0);
  sub_23AA724E8(a1, (uint64_t)v31, &qword_2569E7DD0);
  __asm { BR              X11 }
}

uint64_t sub_23AFFFA6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(unsigned __int8 *)(*(_QWORD *)(v0 + 136) + 8) == 255)
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 398);
  v2 = *(_QWORD *)(v0 + 416);
  if ((v2 & ~*v1) != 0)
    *v1 |= v2;
  v3 = v2 & 0xFFFFFFFFFF7FFFEFLL;
  if (qword_2542E7190 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 24) |= v3 & (qword_2542EDE38 | 0x409000000C000);
  if ((v5 & 9) != 0)
    *(_QWORD *)(v4 + 16) = v5 & 0xFFFFFFFFFFFFFFF6;
  return 1;
}

uint64_t sub_23B000D8C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (result)
  {
    v2 = result;
    result = sub_23B091A38((uint64_t)&v2, &v3);
    if (!v1)
      return v3;
  }
  return result;
}

void sub_23B000DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[312];
  uint64_t v7;

  v7 = a2;
  sub_23AA724E8(a1, (uint64_t)&v5, qword_2542E1408);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23AA724E8(a1, (uint64_t)&v4, qword_2542E1408);
  sub_23AA724E8(a1, (uint64_t)v6, qword_2542E1408);
  __asm { BR              X10 }
}

uint64_t sub_23B000F04()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;

  *(_BYTE *)(*(_QWORD *)(v1 - 72) + 440) = *(_BYTE *)(v0 + 3218);
  v2 = *(void **)(v0 + 3208);
  v3 = *(_BYTE *)(v0 + 3217);
  v4 = *(unsigned __int8 *)(v0 + 3216);
  sub_23AA88218(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), BYTE1(*(_QWORD *)(v0 + 160)) & 1);
  sub_23AA862DC(v2, v4, v3);
  return 1;
}

void sub_23B0022CC(uint64_t a1, uint64_t a2)
{
  void (*v2)(char *, uint64_t);
  void (*v3)(char *, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t Strong;
  double v19;
  double v20;
  double v21;
  int v22;
  double v23;
  double v24;
  void (*v25)(char *, uint64_t);
  double v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  _QWORD *v42;
  char v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  char v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int16 v54;
  char v55;
  __int128 v56;
  char v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  char v80;
  uint64_t v81;
  _BYTE v82[496];
  uint64_t v83;
  char v84;
  __int128 v85;
  char v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int16 v93;
  char v94;
  __int128 v95;
  char v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  char v119;
  uint64_t v120;
  _BYTE v121[496];
  _BYTE v122[496];
  _BYTE v123[504];

  v3 = v2;
  sub_23AA724E8(a2, (uint64_t)v121, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v121, (uint64_t)v123, qword_2542E6E20);
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD **)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  sub_23AA724E8(a2, (uint64_t)&v83, qword_2542E6E20);
  sub_23AA724E8(a2, (uint64_t)v122, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v122) == 1)
  {
    if ((v10 & 0x10) == 0)
      return;
    goto LABEL_3;
  }
  v73 = v112;
  v74 = v113;
  v75 = v114;
  v69 = v108;
  v70 = v109;
  v72 = v111;
  v71 = v110;
  v65 = v104;
  v66 = v105;
  v68 = v107;
  v67 = v106;
  v64 = v103;
  v63 = v102;
  v44 = v83;
  v45 = v84;
  v41 = v85;
  v46 = v85;
  v47 = v86;
  v48 = v87;
  v49 = v88;
  v50 = v89;
  v51 = v90;
  v52 = v91;
  v53 = v92;
  v54 = v93;
  v55 = v94;
  v56 = v95;
  v57 = v96;
  v58 = v97;
  v59 = v98;
  v60 = v99;
  v61 = v100;
  v62 = v101;
  v76 = v115;
  v77 = v116;
  v78 = v117;
  v79 = v118;
  v80 = v119;
  v81 = v120;
  sub_23AA724E8((uint64_t)v123, (uint64_t)v82, qword_2542E6E20);
  sub_23ACFC940((uint64_t)v82);
  sub_23AAFC3AC((uint64_t)&v44);
  if ((v10 & 0x10) != 0)
  {
    if ((v41 & 0x10) != 0)
      return;
    if (!v82[137])
    {
      v11 = 0x40000000;
LABEL_4:
      *(_QWORD *)&v41 = v2;
      v12 = *(unsigned __int8 *)(a1 + 8);
      if ((_DWORD)v12 != 255)
      {
        a1 = *(_QWORD *)a1;
        sub_23B1C5BD0();
        v13 = (int)v9;
        sub_23B1C5B94();
        v15 = v14;
        v3 = (void (*)(char *, uint64_t))v7[1];
        v3(v9, v6);
        v16 = v15 * 1000000000.0;
        if ((~COERCE__INT64(v15 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v16 > -9.22337204e18)
          {
            if (v16 < 9.22337204e18)
            {
              v17 = (uint64_t)v16;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6090);
              swift_allocObject();
              a1 = sub_23B051E60(a1, v12, 0, v17, v11);
              Strong = swift_weakLoadStrong();
              if (Strong)
              {
                v7 = (_QWORD *)Strong;
                sub_23B1C5BD0();
                v13 = (int)v9;
                sub_23B1C5B94();
                v20 = v19;
                v3(v9, v6);
                v21 = v20 * 1000000000.0;
                if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v21 > -9.22337204e18)
                  {
                    if (v21 < 9.22337204e18)
                    {
                      sub_23ADF3A98(a1, (uint64_t)v21);
                      swift_release();
LABEL_13:
                      swift_release();
                      return;
                    }
                    goto LABEL_54;
                  }
LABEL_53:
                  __break(1u);
LABEL_54:
                  __break(1u);
LABEL_55:
                  swift_once();
                  goto LABEL_34;
                }
LABEL_52:
                __break(1u);
                goto LABEL_53;
              }
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_51;
      }
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
LABEL_3:
    v11 = 0x2000000;
    goto LABEL_4;
  }
  if ((v41 & 0x10) == 0)
    return;
  v12 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 440) == 1)
  {
    *(_QWORD *)&v41 = v2;
    v22 = *(unsigned __int8 *)(a1 + 8);
    if (v22 == 255)
    {
      v3 = (void (*)(char *, uint64_t))v41;
      goto LABEL_31;
    }
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v24 = v23;
    v25 = (void (*)(char *, uint64_t))v7[1];
    v25(v9, v6);
    v26 = v24 * 1000000000.0;
    if ((~COERCE__INT64(v24 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          v27 = (uint64_t)v26;
          __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
          v28 = swift_allocObject();
          *(_BYTE *)(v28 + 144) = v22;
          *(_QWORD *)(v28 + 24) = 0;
          *(_QWORD *)(v28 + 32) = 0;
          *(_QWORD *)(v28 + 16) = 0;
          *(_BYTE *)(v28 + 40) = 1;
          *(_OWORD *)(v28 + 48) = 0u;
          *(_OWORD *)(v28 + 64) = 0u;
          *(_QWORD *)(v28 + 80) = 0;
          *(_QWORD *)(v28 + 112) = 0;
          *(_QWORD *)(v28 + 120) = v27;
          *(_QWORD *)(v28 + 128) = 0x4000000;
          *(_QWORD *)(v28 + 136) = v12;
          *(_OWORD *)(v28 + 88) = xmmword_23B1CA750;
          *(_BYTE *)(v28 + 104) = 0;
          sub_23AAAEE10((void *)0x40100, 0, 0);
          if (!swift_weakLoadStrong())
          {
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v30 = v29;
          v25(v9, v6);
          v31 = v30 * 1000000000.0;
          v32 = (void (*)(char *, uint64_t))v41;
          if ((~COERCE__INT64(v30 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v31 > -9.22337204e18)
            {
              if (v31 < 9.22337204e18)
              {
                sub_23ADF3A98(v28, (uint64_t)v31);
                v3 = v32;
                swift_release();
                swift_release();
                if (v32)
                  return;
                v12 = *(_QWORD *)a1;
                goto LABEL_31;
              }
LABEL_61:
              __break(1u);
              goto LABEL_62;
            }
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_58;
  }
LABEL_31:
  v13 = *(unsigned __int8 *)(a1 + 8);
  v7 = *(_QWORD **)(a1 + 240);
  if (v13 != 255 && v7)
    goto LABEL_36;
  if (qword_2542E7190 != -1)
    goto LABEL_55;
LABEL_34:
  v33 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 24) |= qword_2542EDE38 & 0xFFFFFFFFFF7FFFEFLL;
  if ((v33 & 9) != 0)
    *(_QWORD *)(a1 + 16) = v33 & 0xFFFFFFFFFFFFFFF6;
LABEL_36:
  v34 = *(unsigned __int8 *)(a1 + 440);
  if (v34 != 1)
  {
    if (v34 != 4)
      goto LABEL_41;
    __break(1u);
  }
  v35 = *(_QWORD *)(a1 + 24);
  if ((v35 & 0x100000000000) == 0)
    *(_QWORD *)(a1 + 24) = v35 | 0x100000000000;
LABEL_41:
  if (v13 == 255)
    goto LABEL_45;
  v42 = (_QWORD *)v12;
  v43 = v13;
  v36 = swift_weakLoadStrong();
  if (!v36)
    goto LABEL_64;
  v37 = *(_QWORD *)(v36 + 24);
  swift_retain();
  swift_release();
  (*(void (**)(_QWORD **))(*(_QWORD *)v37 + 360))(&v42);
  if (v3)
    goto LABEL_13;
  swift_release();
LABEL_45:
  if (!v7)
    return;
  v42 = v7;
  v38 = swift_weakLoadStrong();
  if (!v38)
  {
LABEL_66:
    __break(1u);
    return;
  }
  v39 = *(_QWORD *)(v38 + 24);
  v40 = v7;
  swift_retain();
  swift_release();
  (*(void (**)(_QWORD **))(*(_QWORD *)v39 + 368))(&v42);
  swift_release();

}

uint64_t sub_23B002A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23B002A84(a1, a2, a3, a4, a5, &qword_2569E6090, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23B051E60);
}

uint64_t sub_23B002A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23B002A84(a1, a2, a3, a4, a5, qword_2542E1BE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23AEA220C);
}

uint64_t sub_23B002A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  swift_allocObject();
  return a7(a1, a2, a3, a4, a5);
}

BOOL sub_23B002AF8()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[12];
  uint64_t v9;
  _BYTE v10[8];
  uint64_t v11;

  v1 = *(_OWORD *)(v0 + 176);
  v8[10] = *(_OWORD *)(v0 + 160);
  v8[11] = v1;
  v9 = *(_QWORD *)(v0 + 192);
  v2 = *(_OWORD *)(v0 + 112);
  v8[6] = *(_OWORD *)(v0 + 96);
  v8[7] = v2;
  v3 = *(_OWORD *)(v0 + 144);
  v8[8] = *(_OWORD *)(v0 + 128);
  v8[9] = v3;
  v4 = *(_OWORD *)(v0 + 48);
  v8[2] = *(_OWORD *)(v0 + 32);
  v8[3] = v4;
  v5 = *(_OWORD *)(v0 + 80);
  v8[4] = *(_OWORD *)(v0 + 64);
  v8[5] = v5;
  v6 = *(_OWORD *)(v0 + 16);
  v8[0] = *(_OWORD *)v0;
  v8[1] = v6;
  sub_23AA724E8((uint64_t)v8, (uint64_t)v10, &qword_2542E7550);
  sub_23AA724E8((uint64_t)v10, (uint64_t)&v11, &qword_2542E7550);
  return v11 && *(unsigned __int8 *)(v0 + 208) != 255;
}

void sub_23B002B94(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char *v34;
  char *v35;
  id v36;
  uint64_t v37;
  char v38;
  char v39;
  __int16 v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t Strong;
  uint64_t v59;
  id v60;
  void *v61;
  int v62;
  uint64_t v63;
  id v64;
  void *v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  int v99;
  void *v100;
  uint64_t v101;
  int v102;
  char v103;
  char v104;
  uint64_t v105;
  char v106;
  __int16 v107;
  char v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  int v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  id v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  double v132;
  double v133;
  uint64_t v134;
  char v135;
  unsigned __int8 v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  __int128 v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  void *v153;
  id v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t);
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  int v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  uint64_t v191;
  int v192;
  int v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  id v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  _BYTE v237[496];
  _OWORD v238[31];
  _OWORD v239[31];
  _OWORD v240[31];
  _OWORD v241[31];
  _BYTE v242[496];
  _BYTE v243[496];
  _BYTE v244[496];
  _BYTE v245[496];
  _BYTE v246[496];
  _BYTE v247[496];
  _BYTE v248[496];
  _BYTE v249[496];
  _BYTE v250[496];
  _BYTE v251[496];
  uint64_t v252[62];
  _BYTE v253[496];
  _BYTE v254[496];
  uint64_t v255;
  char v256;
  __int128 v257;
  char v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  char v265;
  char v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  uint64_t v275;
  void *v276;
  __int128 v277;
  char v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int16 v283;
  char v284;
  id v285;
  id v286;
  char v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  uint64_t v292;
  char v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char v298;
  uint64_t v299;
  uint64_t v300[62];
  _BYTE v301[496];
  uint64_t v302;
  char v303;
  __int128 v304;
  char v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int16 v312;
  char v313;
  id v314;
  uint64_t v315;
  char v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  uint64_t v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  uint64_t v334;
  char v335;
  uint64_t v336;
  __int128 v337;
  uint64_t v338;
  char v339;
  uint64_t v340;
  _BYTE v341[496];
  _BYTE v342[496];
  _BYTE v343[512];

  v3 = MEMORY[0x24BDAC7A8](a1);
  v236 = v2;
  v232 = v1;
  LODWORD(v233) = v4;
  v230 = v6;
  v231 = v5;
  v7 = (char *)v3;
  v235 = v8;
  sub_23AA724E8(v8, (uint64_t)v244, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v244, (uint64_t)v343, qword_2542E6E20);
  v234 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v229 = *(_QWORD *)(v234 - 8);
  MEMORY[0x24BDAC7A8](v234);
  v228 = (uint64_t *)((char *)&v165 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v165 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F10);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v165 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DD0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v165 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v342, v7, sizeof(v342));
  v20 = v236;
  sub_23B00440C();
  if (v20)
    return;
  v21 = v232;
  v226 = v11;
  v227 = v16;
  v224 = v10;
  v225 = v13;
  v236 = v7;
  v22 = v235;
  if ((v233 & 1) != 0)
    sub_23B0022CC((uint64_t)v236, v235);
  v23 = v234;
  v24 = (uint64_t)v19;
  v25 = v21 + 16;
  if (!swift_weakLoadStrong())
  {
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v26 = v236;
  v27 = sub_23B0048FC(v22);
  swift_release();
  memcpy(v341, v26, sizeof(v341));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v229 + 56))(v24, 1, 1, v23);
  sub_23ACFC940((uint64_t)v341);
  if (qword_2542E0F80 != -1)
    swift_once();
  v28 = qword_2542EDC08;
  v232 = v25;
  if (!swift_weakLoadStrong())
    goto LABEL_100;
  v29 = sub_23B004C70((uint64_t)v341, v24, v28);
  v233 = 0;
  v31 = v30;
  v33 = v32;
  LODWORD(v229) = v27;
  v34 = v236;
  v35 = v236 + 338;
  v36 = v29;
  swift_release();
  sub_23AA8A05C(v24, &qword_2569E5DD0);
  sub_23AAFC3AC((uint64_t)v341);
  sub_23AAAEE10(*((void **)v34 + 18), *((id *)v34 + 19), v34[160]);
  *((_QWORD *)v34 + 18) = v36;
  *((_QWORD *)v34 + 19) = v31;
  v34[160] = v33;
  v37 = *(_QWORD *)v34;
  v38 = v34[8];
  v39 = v34[32];
  v40 = *((_WORD *)v34 + 68);
  v41 = v34[138];
  v42 = *((_QWORD *)v34 + 29);
  v43 = *((_OWORD *)v34 + 26);
  v332 = *((_OWORD *)v34 + 25);
  v333 = v43;
  v44 = *((_QWORD *)v34 + 54);
  v45 = *((_OWORD *)v34 + 22);
  v328 = *((_OWORD *)v34 + 21);
  v329 = v45;
  v46 = *((_OWORD *)v34 + 23);
  v331 = *((_OWORD *)v34 + 24);
  v330 = v46;
  v47 = *((_OWORD *)v34 + 18);
  v324 = *((_OWORD *)v34 + 17);
  v325 = v47;
  v48 = *((_OWORD *)v34 + 19);
  v327 = *((_OWORD *)v34 + 20);
  v326 = v48;
  v49 = *((_OWORD *)v34 + 15);
  v323 = *((_OWORD *)v34 + 16);
  v322 = v49;
  v50 = v34[440];
  v51 = *((_QWORD *)v34 + 56);
  v52 = *((_QWORD *)v34 + 59);
  v53 = v34[480];
  v302 = v37;
  v54 = *((_QWORD *)v34 + 61);
  v303 = v38;
  v304 = *((_OWORD *)v34 + 1);
  v305 = v39;
  v306 = *(_OWORD *)(v34 + 40);
  v307 = *(_OWORD *)(v34 + 56);
  v308 = *(_OWORD *)(v34 + 72);
  v309 = *(_OWORD *)(v34 + 88);
  v310 = *(_OWORD *)(v34 + 104);
  v311 = *(_OWORD *)(v34 + 120);
  v312 = v40;
  v313 = v41;
  v314 = v36;
  v315 = v31;
  v316 = v33;
  v317 = *(_OWORD *)(v34 + 168);
  v318 = *(_OWORD *)(v34 + 184);
  v319 = *(_OWORD *)(v34 + 200);
  v320 = *(_OWORD *)(v34 + 216);
  v321 = v42;
  v335 = v50;
  v334 = v44;
  v336 = v51;
  v337 = *(_OWORD *)(v34 + 456);
  v339 = v53;
  v338 = v52;
  v340 = v54;
  sub_23AFFD9BC((uint64_t)v243);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  v56 = (uint64_t)v227;
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v227, 1, 1, v55);
  v57 = qword_2542EDC08;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  (*(void (**)(void))(*(_QWORD *)Strong + 176))();
  swift_release();
  memcpy(v301, v243, sizeof(v301));
  v59 = v233;
  v60 = sub_23B004DB0((uint64_t)v301, v56, v57);
  v63 = v235;
  if (v59)
  {
    swift_release();
    sub_23AA8A05C(v56, (uint64_t *)&unk_2569E5F10);
    memcpy(v242, v243, sizeof(v242));
    sub_23AAFCF50((uint64_t)v242);
    return;
  }
  v64 = v60;
  v65 = v61;
  v66 = v62;
  swift_release();
  sub_23AA8A05C(v56, (uint64_t *)&unk_2569E5F10);
  memcpy(v242, v243, sizeof(v242));
  sub_23AAFCF50((uint64_t)v242);
  v67 = v236;
  sub_23AAAEE10(*((void **)v236 + 43), *((id *)v236 + 44), v236[360]);
  *((_QWORD *)v67 + 43) = v64;
  *((_QWORD *)v67 + 44) = v65;
  v227 = v65;
  LODWORD(v233) = v66;
  v67[360] = v66;
  v68 = *((_QWORD *)v67 + 18);
  v69 = *((_QWORD *)v67 + 19);
  v70 = v67[160];
  if (v67[160])
  {
    v72 = v230;
    v71 = v231;
    goto LABEL_13;
  }
  v72 = v230;
  v71 = v231;
  if ((v68 & 0x100) != 0)
  {
    v77 = *((_QWORD *)v67 + 58);
    if (*((_QWORD *)v67 + 57) >= 0x2000000000000000uLL)
      v78 = 0x2000000000000000;
    else
      v78 = *((_QWORD *)v67 + 57);
    *((_QWORD *)v67 + 57) = v78;
    if (v71)
    {
      v220 = v77;
      v221 = v70;
      v222 = v69;
      v223 = v68;
      v191 = *(_QWORD *)v67;
      v190 = v67[8];
      v79 = *((_QWORD *)v67 + 2);
      v188 = *((_QWORD *)v67 + 3);
      v189 = v79;
      v187 = v67[32];
      v80 = *((_QWORD *)v67 + 5);
      v185 = *((_QWORD *)v67 + 6);
      v186 = v80;
      v81 = *((_QWORD *)v67 + 7);
      v183 = *((_QWORD *)v67 + 8);
      v184 = v81;
      v82 = *((_QWORD *)v67 + 9);
      v181 = *((_QWORD *)v67 + 10);
      v182 = v82;
      v83 = *((_QWORD *)v67 + 11);
      v179 = *((_QWORD *)v67 + 12);
      v180 = v83;
      v84 = *((_QWORD *)v67 + 13);
      v177 = *((_QWORD *)v67 + 14);
      v178 = v84;
      v85 = *((_QWORD *)v67 + 15);
      v175 = *((_QWORD *)v67 + 16);
      v176 = v85;
      LODWORD(v85) = v67[136];
      v173 = v67[137];
      v174 = v85;
      v172 = v67[138];
      v86 = *((_QWORD *)v67 + 21);
      v170 = *((_QWORD *)v67 + 22);
      v171 = v86;
      v87 = *((_QWORD *)v67 + 23);
      v168 = *((_QWORD *)v67 + 24);
      v169 = v87;
      v88 = *((_QWORD *)v67 + 25);
      v166 = *((_QWORD *)v67 + 26);
      v167 = v88;
      v89 = *((_QWORD *)v67 + 28);
      v165 = *((_QWORD *)v67 + 27);
      v90 = v67;
      v91 = *((_QWORD *)v67 + 29);
      v92 = *((_QWORD *)v67 + 30);
      v205 = *((_QWORD *)v90 + 31);
      v204 = *((_QWORD *)v90 + 32);
      v203 = v90[264];
      v202 = *((_QWORD *)v90 + 34);
      v201 = *((_QWORD *)v90 + 35);
      v200 = *((_QWORD *)v90 + 36);
      v199 = *((_QWORD *)v90 + 37);
      v198 = *((_QWORD *)v90 + 38);
      v197 = *((_QWORD *)v90 + 39);
      v196 = *((_QWORD *)v90 + 40);
      v195 = *((_QWORD *)v90 + 41);
      v194 = v90[336];
      v193 = v90[337];
      v192 = *v35;
      v216 = *((_QWORD *)v90 + 46);
      v215 = *((_QWORD *)v90 + 47);
      v214 = *((_QWORD *)v90 + 48);
      v213 = *((_QWORD *)v90 + 49);
      v212 = *((_QWORD *)v90 + 50);
      v211 = *((_QWORD *)v90 + 51);
      v210 = *((_QWORD *)v90 + 52);
      v209 = *((_QWORD *)v90 + 53);
      v208 = *((_QWORD *)v90 + 54);
      v207 = v90[440];
      v206 = *((_QWORD *)v90 + 56);
      v219 = *((_QWORD *)v90 + 59);
      v218 = v35[142];
      v217 = *((_QWORD *)v90 + 61);
      v93 = swift_weakLoadStrong();
      if (!v93)
      {
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
      v94 = v93;
      *(_QWORD *)&v241[0] = v191;
      BYTE8(v241[0]) = v190;
      *(_QWORD *)&v241[1] = v189;
      *((_QWORD *)&v241[1] + 1) = v188;
      LOBYTE(v241[2]) = v187;
      *((_QWORD *)&v241[2] + 1) = v186;
      *(_QWORD *)&v241[3] = v185;
      *((_QWORD *)&v241[3] + 1) = v184;
      *(_QWORD *)&v241[4] = v183;
      *((_QWORD *)&v241[4] + 1) = v182;
      *(_QWORD *)&v241[5] = v181;
      *((_QWORD *)&v241[5] + 1) = v180;
      *(_QWORD *)&v241[6] = v179;
      *((_QWORD *)&v241[6] + 1) = v178;
      *(_QWORD *)&v241[7] = v177;
      *((_QWORD *)&v241[7] + 1) = v176;
      *(_QWORD *)&v241[8] = v175;
      BYTE8(v241[8]) = v174;
      BYTE9(v241[8]) = v173;
      BYTE10(v241[8]) = v172;
      *((_QWORD *)&v241[10] + 1) = v171;
      *(_QWORD *)&v241[11] = v170;
      *((_QWORD *)&v241[11] + 1) = v169;
      *(_QWORD *)&v241[12] = v168;
      *((_QWORD *)&v241[12] + 1) = v167;
      *(_QWORD *)&v241[13] = v166;
      *((_QWORD *)&v241[13] + 1) = v165;
      *(_QWORD *)&v241[14] = v89;
      *((_QWORD *)&v241[14] + 1) = v91;
      *(_QWORD *)&v241[15] = v92;
      v96 = v222;
      v95 = v223;
      *(_QWORD *)&v241[9] = v223;
      *((_QWORD *)&v241[9] + 1) = v222;
      LOBYTE(v241[10]) = 0;
      *((_QWORD *)&v241[15] + 1) = v205;
      *(_QWORD *)&v241[16] = v204;
      BYTE8(v241[16]) = v203;
      *(_QWORD *)&v241[17] = v202;
      *((_QWORD *)&v241[17] + 1) = v201;
      *(_QWORD *)&v241[18] = v200;
      *((_QWORD *)&v241[18] + 1) = v199;
      *(_QWORD *)&v241[19] = v198;
      *((_QWORD *)&v241[19] + 1) = v197;
      *(_QWORD *)&v241[20] = v196;
      *((_QWORD *)&v241[20] + 1) = v195;
      LOBYTE(v241[21]) = v194;
      BYTE1(v241[21]) = v193;
      BYTE2(v241[21]) = v192;
      *((_QWORD *)&v241[21] + 1) = v64;
      *(_QWORD *)&v241[22] = v227;
      BYTE8(v241[22]) = v233;
      *(_QWORD *)&v241[23] = v216;
      *((_QWORD *)&v241[23] + 1) = v215;
      *(_QWORD *)&v241[24] = v214;
      *((_QWORD *)&v241[24] + 1) = v213;
      *(_QWORD *)&v241[25] = v212;
      *((_QWORD *)&v241[25] + 1) = v211;
      *(_QWORD *)&v241[26] = v210;
      *((_QWORD *)&v241[26] + 1) = v209;
      *(_QWORD *)&v241[27] = v208;
      BYTE8(v241[27]) = v207;
      *(_QWORD *)&v241[28] = v206;
      *((_QWORD *)&v241[28] + 1) = v78;
      *(_QWORD *)&v241[29] = v220;
      *((_QWORD *)&v241[29] + 1) = v219;
      LOBYTE(v241[30]) = v218;
      *((_QWORD *)&v241[30] + 1) = v217;
      memcpy(v300, v241, sizeof(v300));
      sub_23ACFC940((uint64_t)v241);
      v63 = v235;
      sub_23B053204(v300, v235, v94);
      sub_23AAFC3AC((uint64_t)v241);
      swift_release();
      v67 = v236;
      v69 = v96;
      v68 = v95;
      v72 = v230;
      v71 = v231;
      v70 = v221;
    }
    else
    {
      v63 = v235;
    }
  }
  if ((v68 & 0x200) == 0)
    goto LABEL_13;
  v221 = v70;
  v222 = v69;
  v223 = v68;
  sub_23AA724E8(v63, (uint64_t)v241, qword_2542E6E20);
  sub_23AA724E8(v63, (uint64_t)v247, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v247) == 1)
    goto LABEL_76;
  v239[12] = v241[12];
  v239[13] = v241[13];
  v239[14] = v241[14];
  v239[8] = v241[8];
  v239[9] = v241[9];
  v239[11] = v241[11];
  v239[10] = v241[10];
  v239[4] = v241[4];
  v239[5] = v241[5];
  v239[7] = v241[7];
  v239[6] = v241[6];
  v239[0] = v241[0];
  v239[1] = v241[1];
  v239[3] = v241[3];
  v239[2] = v241[2];
  v240[24] = v241[24];
  v240[25] = v241[25];
  v240[26] = v241[26];
  v240[20] = v241[20];
  v240[21] = v241[21];
  v240[22] = v241[22];
  v240[23] = v241[23];
  v240[16] = v241[16];
  v240[17] = v241[17];
  v240[18] = v241[18];
  v240[19] = v241[19];
  v240[12] = v241[12];
  v240[13] = v241[13];
  v240[15] = v241[15];
  v240[14] = v241[14];
  v240[8] = v241[8];
  v240[9] = v241[9];
  v240[11] = v241[11];
  v240[10] = v241[10];
  v240[4] = v241[4];
  v240[5] = v241[5];
  v240[7] = v241[7];
  v240[6] = v241[6];
  v240[0] = v241[0];
  v240[1] = v241[1];
  *(_QWORD *)&v240[27] = *(_QWORD *)&v241[27];
  v240[3] = v241[3];
  v240[2] = v241[2];
  BYTE8(v240[27]) = BYTE8(v241[27]);
  v240[28] = v241[28];
  v240[29] = v241[29];
  LOBYTE(v240[30]) = v241[30];
  *((_QWORD *)&v240[30] + 1) = *((_QWORD *)&v241[30] + 1);
  sub_23ADF2D34(v63, (voidsub_23AA88348);
  sub_23ACF4048((uint64_t)v239);
  sub_23AAFC3AC((uint64_t)v240);
  v141 = v239[9];
  v142 = LOBYTE(v239[10]);
  sub_23AAAE478(*(id *)&v239[9], *((id *)&v239[9] + 1), v239[10]);
  sub_23ACF410C((uint64_t)v239);
  if (v142)
  {
    sub_23AAAEE10((void *)v141, *((id *)&v141 + 1), v142);
    v63 = v235;
LABEL_76:
    v143 = swift_weakLoadStrong();
    if (!v143)
    {
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    v144 = *(_QWORD *)(v143 + 32);
    swift_retain();
    swift_release();
    v145 = *(_QWORD *)(v144 + 16);
    swift_retain();
    v146 = swift_release();
    (*(void (**)(uint64_t))(*(_QWORD *)v145 + 832))(v146);
    swift_release();
    v71 = v231;
    goto LABEL_78;
  }
  sub_23AAAEE10((void *)v141, *((id *)&v141 + 1), 0);
  v63 = v235;
  v71 = v231;
  if ((v141 & 0x200) == 0)
    goto LABEL_76;
LABEL_78:
  v69 = v222;
  v68 = v223;
  v70 = v221;
LABEL_13:
  if (!(_BYTE)v233 && ((unsigned __int16)v64 & 0x100) != 0)
  {
    v221 = v70;
    v222 = v69;
    v223 = v68;
    sub_23AA724E8(v63, (uint64_t)v241, qword_2542E6E20);
    sub_23AA724E8(v63, (uint64_t)v246, qword_2542E6E20);
    if (sub_23AAFC2A4((uint64_t)v246) != 1)
    {
      v238[10] = v241[25];
      v238[11] = v241[26];
      v238[6] = v241[21];
      v238[7] = v241[22];
      v238[9] = v241[24];
      v238[8] = v241[23];
      v238[2] = v241[17];
      v238[3] = v241[18];
      v238[5] = v241[20];
      v238[4] = v241[19];
      v238[1] = v241[16];
      v238[0] = v241[15];
      v239[12] = v241[12];
      v239[13] = v241[13];
      v239[8] = v241[8];
      v239[9] = v241[9];
      v239[11] = v241[11];
      v239[10] = v241[10];
      v239[4] = v241[4];
      v239[5] = v241[5];
      v239[7] = v241[7];
      v239[6] = v241[6];
      v239[0] = v241[0];
      v239[1] = v241[1];
      v239[3] = v241[3];
      v239[2] = v241[2];
      v239[24] = v241[24];
      v239[25] = v241[25];
      v239[26] = v241[26];
      v239[20] = v241[20];
      v239[21] = v241[21];
      v239[22] = v241[22];
      v239[23] = v241[23];
      v239[16] = v241[16];
      v239[17] = v241[17];
      v239[18] = v241[18];
      v239[19] = v241[19];
      *(_QWORD *)&v238[12] = *(_QWORD *)&v241[27];
      *(_QWORD *)&v239[27] = *(_QWORD *)&v241[27];
      v239[14] = v241[14];
      v239[15] = v241[15];
      BYTE8(v239[27]) = BYTE8(v241[27]);
      v239[28] = v241[28];
      v239[29] = v241[29];
      LOBYTE(v239[30]) = v241[30];
      *((_QWORD *)&v239[30] + 1) = *((_QWORD *)&v241[30] + 1);
      sub_23AA724E8((uint64_t)v343, (uint64_t)v240, qword_2542E6E20);
      sub_23ACFC940((uint64_t)v240);
      sub_23ADF2D34(v63, (voidsub_23AA88348);
      sub_23AAFC2BC((uint64_t)v238);
      sub_23AAFC3AC((uint64_t)v239);
      v73 = (void *)*((_QWORD *)&v238[6] + 1);
      v74 = *(void **)&v238[7];
      v75 = v63;
      v76 = BYTE8(v238[7]);
      sub_23AAAE478(*((id *)&v238[6] + 1), *(id *)&v238[7], SBYTE8(v238[7]));
      sub_23AAFC540((uint64_t)v238);
      sub_23ADF2D34(v75, (voidsub_23AAAEC3C);
      if (v76)
      {
        sub_23AAAEE10(v73, v74, v76);
        v72 = v230;
      }
      else
      {
        sub_23AAAEE10(v73, v74, 0);
        v72 = v230;
        if (((unsigned __int16)v73 & 0x100) != 0)
        {
          v124 = v224;
          v123 = v225;
          v125 = v226;
          goto LABEL_73;
        }
      }
      v71 = v231;
    }
    v98 = *((_QWORD *)v67 + 57);
    v97 = *((_QWORD *)v67 + 58);
    if (v98 >= 0x2000000000000000)
      v98 = 0x2000000000000000;
    *((_QWORD *)v67 + 57) = v98;
    v99 = v67[8];
    if (v99 != 255)
    {
      v100 = (void *)*((_QWORD *)v67 + 30);
      if (v100)
      {
        v101 = *(_QWORD *)v67;
        *(_QWORD *)&v240[0] = *((_QWORD *)v67 + 30);
        v102 = v67[32];
        if (v102 != 3 && v67[137] == 6)
        {
          v103 = v67[136];
          v104 = v67[138];
          v105 = *((_QWORD *)v67 + 29);
          v106 = v67[264];
          v107 = *((_WORD *)v67 + 168);
          v108 = *v35;
          v109 = *((_QWORD *)v67 + 54);
          v110 = v67[440];
          v111 = *((_QWORD *)v67 + 56);
          v112 = *((_QWORD *)v67 + 59);
          v113 = v35[142];
          v114 = *((_QWORD *)v67 + 61);
          v233 = v101;
          v255 = v101;
          v256 = v99;
          v257 = *((_OWORD *)v67 + 1);
          v115 = v102;
          v258 = v102;
          v259 = *(_OWORD *)(v67 + 40);
          v260 = *(_OWORD *)(v67 + 56);
          v261 = *(_OWORD *)(v67 + 72);
          v262 = *(_OWORD *)(v67 + 88);
          v263 = *(_OWORD *)(v67 + 104);
          v264 = *(_OWORD *)(v67 + 120);
          v265 = v103;
          v266 = 6;
          v267 = v104;
          v268 = v223;
          v269 = v222;
          v270 = v221;
          v271 = *(_OWORD *)(v67 + 168);
          v272 = *(_OWORD *)(v67 + 184);
          v273 = *(_OWORD *)(v67 + 200);
          v274 = *(_OWORD *)(v67 + 216);
          v275 = v105;
          v276 = v100;
          v277 = *(_OWORD *)(v67 + 248);
          v278 = v106;
          v116 = *((_OWORD *)v67 + 18);
          v279 = *((_OWORD *)v67 + 17);
          v280 = v116;
          v117 = *((_OWORD *)v67 + 20);
          v281 = *((_OWORD *)v67 + 19);
          v282 = v117;
          v283 = v107;
          v284 = v108;
          v285 = v64;
          v286 = v227;
          v287 = 0;
          v118 = *((_OWORD *)v67 + 24);
          v288 = *((_OWORD *)v67 + 23);
          v289 = v118;
          v119 = *((_OWORD *)v67 + 26);
          v290 = *((_OWORD *)v67 + 25);
          v291 = v119;
          v293 = v110;
          v292 = v109;
          v294 = v111;
          v295 = v98;
          v296 = v97;
          v298 = v113;
          v297 = v112;
          v299 = v114;
          v120 = v100;
          sub_23AFFD9BC((uint64_t)v241);
          v121 = swift_weakLoadStrong();
          if (!v121)
          {
LABEL_113:
            __break(1u);
            goto LABEL_114;
          }
          v122 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v121 + 176))(v121);
          swift_release();
          memcpy(v254, v241, sizeof(v254));
          v147 = sub_23B004EF0(v122);
          sub_23AAFCF50((uint64_t)v254);
          swift_release();
          if (v147 == 70)
          {

            v124 = v224;
LABEL_94:
            v123 = v225;
            v125 = v226;
            v72 = v230;
LABEL_73:
            if (!v231)
              goto LABEL_38;
            goto LABEL_36;
          }
          v148 = swift_weakLoadStrong();
          if (!v148)
          {
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
            goto LABEL_116;
          }
          v149 = *(_QWORD *)(v148 + 24);
          swift_retain();
          swift_release();
          v150 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(_QWORD *)v149 + 344))(v240, v147);
          swift_release();
          if (*(_QWORD *)(v150 + 16))
          {
            v151 = *(unsigned __int8 *)(v150 + 40);
            v152 = *(unsigned __int8 *)(v150 + 41);
            v153 = *(void **)(v150 + 88);
            v227 = *(id *)(v150 + 32);
            LODWORD(v223) = v152;
            sub_23AB5692C(v227, v151, v152);
            v154 = v153;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v153 != (void *)1)
            {
              v155 = v153;

              swift_bridgeObjectRelease();
              sub_23AB7C6B4(v227, v151, v223);
              if (v153)
              {
                if (v115)
                {
                  if (v115 != 1)
                  {
                    sub_23AB23A94();
                    swift_allocError();
                    v163 = v162;
                    *(_QWORD *)&v241[0] = 0;
                    *((_QWORD *)&v241[0] + 1) = 0xE000000000000000;
                    sub_23B1C6EFC();
                    sub_23B1C64F4();
                    memcpy(v253, v236, sizeof(v253));
                    sub_23B02F54C();
                    sub_23B1C64F4();
                    swift_bridgeObjectRelease();
                    v164 = *((_QWORD *)&v241[0] + 1);
                    *(_QWORD *)v163 = *(_QWORD *)&v241[0];
                    *(_QWORD *)(v163 + 8) = v164;
                    *(_BYTE *)(v163 + 48) = 7;
                    swift_willThrow();

                    return;
                  }
                  v156 = swift_weakLoadStrong();
                  if (!v156)
                    goto LABEL_115;
                  v157 = v156;
                }
                else
                {
                  v158 = swift_weakLoadStrong();
                  if (!v158)
                  {
LABEL_116:
                    __break(1u);
                    return;
                  }
                  v157 = v158;
                }
                v159 = (uint64_t)v228;
                *v228 = v233;
                *(_BYTE *)(v159 + 8) = v99;
                *(_BYTE *)(v159 + 9) = 0;
                *(_QWORD *)(v159 + 16) = v153;
                swift_storeEnumTagMultiPayload();
                v160 = *(void (**)(uint64_t))(*(_QWORD *)v157 + 312);
                v161 = v153;
                v160(v159);
                swift_release();

                sub_23AA8A05C(v159, (uint64_t *)&unk_2542DDFB0);
                goto LABEL_93;
              }
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }

LABEL_93:
          v124 = v224;
          v67 = v236;
          goto LABEL_94;
        }
      }
    }
  }
  v124 = v224;
  v123 = v225;
  v125 = v226;
  if (!v71)
    goto LABEL_38;
LABEL_36:
  memcpy(v252, v67, sizeof(v252));
  v126 = swift_weakLoadStrong();
  if (!v126)
  {
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  v127 = v126;
  sub_23ACFC940((uint64_t)v252);
  sub_23B053204(v252, v235, v127);
  sub_23AAFC3AC((uint64_t)v252);
  swift_release();
LABEL_38:
  if (v72)
  {
    memcpy(v251, v67, sizeof(v251));
    sub_23AFFD9BC((uint64_t)v240);
    v128 = v235;
    sub_23AA724E8(v235, (uint64_t)v245, qword_2542E6E20);
    if (sub_23AAFC2A4((uint64_t)v245) == 1)
    {
      sub_23ACFC784(v239);
    }
    else
    {
      sub_23AA724E8((uint64_t)v343, (uint64_t)v237, qword_2542E6E20);
      memcpy(v250, v237, sizeof(v250));
      sub_23ACFC940((uint64_t)v237);
      sub_23AFFD9BC((uint64_t)v238);
      sub_23ADF2D34(v128, (voidsub_23AAAEC3C);
      memcpy(v239, v238, sizeof(v239));
      nullsub_1(v239);
    }
    sub_23AA724E8((uint64_t)v239, (uint64_t)v241, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8((uint64_t)v241, (uint64_t)v249, (uint64_t *)&unk_2569E63E0);
    v129 = swift_weakLoadStrong();
    if (!v129)
      goto LABEL_106;
    v130 = (*(uint64_t (**)(void))(*(_QWORD *)v129 + 176))();
    swift_release();
    memcpy(v248, v240, sizeof(v248));
    sub_23B052FA0((uint64_t)v248, (uint64_t)v249, v130);
    swift_release();
    sub_23ADF2D34((uint64_t)v241, (voidsub_23AEB1930);
    sub_23AAFCF50((uint64_t)v248);
  }
  if (v67[8] != 255 && *((_QWORD *)v67 + 30))
  {
    if (qword_2542E7190 != -1)
      swift_once();
    if (!(*((_QWORD *)v67 + 3) & (qword_2542EDE38 | 0x10) | *((_QWORD *)v67 + 2) & 0x51)
      && !(*((_QWORD *)v67 + 32) & (qword_2542EDE38 | 0x10) | *((_QWORD *)v67 + 31) & 0x51)
      && v67[32] == 3
      && v67[160] != 2
      && v67[360] != 2)
    {
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v132 = v131;
      (*(void (**)(char *, uint64_t))(v125 + 8))(v123, v124);
      v133 = v132 * 1000000000.0;
      if ((~COERCE__INT64(v132 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v133 > -9.22337204e18)
        {
          if (v133 < 9.22337204e18)
          {
            *((_QWORD *)v67 + 57) = 0x2000000000000000;
            *((_QWORD *)v67 + 58) = (uint64_t)v133;
            goto LABEL_57;
          }
          goto LABEL_103;
        }
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
        goto LABEL_104;
      }
LABEL_101:
      __break(1u);
      goto LABEL_102;
    }
  }
LABEL_57:
  v134 = swift_weakLoadStrong();
  if (!v134)
  {
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  v135 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v134 + 152))(v134);
  swift_release();
  v136 = v229;
  if ((((v135 & 8) != 0) & v229) == 1 && v67[160] == 1)
  {
    v137 = swift_weakLoadStrong();
    if (!v137)
    {
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    (*(void (**)(uint64_t))(*(_QWORD *)v137 + 304))(v137);
    swift_release();
  }
  v138 = swift_weakLoadStrong();
  if (!v138)
    goto LABEL_108;
  v139 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v138 + 152))(v138);
  swift_release();
  if ((((v139 & 8) != 0) & v136) == 1 && v67[360] == 1)
  {
    v140 = swift_weakLoadStrong();
    if (v140)
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v140 + 304))(v140);
      swift_release();
      return;
    }
    goto LABEL_112;
  }
}

uint64_t sub_23B00440C()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _OWORD v23[12];
  uint64_t v24;
  _BYTE v25[8];
  _OWORD v26[15];
  _BYTE v27[16];
  _BYTE v28[16];
  uint64_t v29;
  char v30;

  v1 = *(_OWORD *)(v0 + 208);
  v26[12] = *(_OWORD *)(v0 + 192);
  v26[13] = v1;
  v26[14] = *(_OWORD *)(v0 + 224);
  v2 = *(_OWORD *)(v0 + 144);
  v26[8] = *(_OWORD *)(v0 + 128);
  v26[9] = v2;
  v3 = *(_OWORD *)(v0 + 176);
  v26[10] = *(_OWORD *)(v0 + 160);
  v26[11] = v3;
  v4 = *(_OWORD *)(v0 + 80);
  v26[4] = *(_OWORD *)(v0 + 64);
  v26[5] = v4;
  v5 = *(_OWORD *)(v0 + 112);
  v26[6] = *(_OWORD *)(v0 + 96);
  v26[7] = v5;
  v6 = *(_OWORD *)(v0 + 16);
  v26[0] = *(_OWORD *)v0;
  v26[1] = v6;
  v7 = *(_OWORD *)(v0 + 48);
  v26[2] = *(_OWORD *)(v0 + 32);
  v26[3] = v7;
  sub_23AA724E8((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_2542E7420);
  sub_23AA724E8((uint64_t)v27, (uint64_t)v28, (uint64_t *)&unk_2542E7420);
  if (v28[8] != 255)
    goto LABEL_3;
  v8 = *(_OWORD *)(v0 + 400);
  v9 = *(_OWORD *)(v0 + 416);
  v10 = *(_OWORD *)(v0 + 368);
  v23[9] = *(_OWORD *)(v0 + 384);
  v23[10] = v8;
  v23[11] = v9;
  v12 = *(_OWORD *)(v0 + 336);
  v11 = *(_OWORD *)(v0 + 352);
  v24 = *(_QWORD *)(v0 + 432);
  v23[7] = v11;
  v23[8] = v10;
  v13 = *(_OWORD *)(v0 + 288);
  v23[2] = *(_OWORD *)(v0 + 272);
  v23[3] = v13;
  v14 = *(_OWORD *)(v0 + 304);
  v23[5] = *(_OWORD *)(v0 + 320);
  v23[6] = v12;
  v23[4] = v14;
  v15 = *(_OWORD *)(v0 + 256);
  v23[0] = *(_OWORD *)(v0 + 240);
  v23[1] = v15;
  sub_23AA724E8((uint64_t)v23, (uint64_t)v25, &qword_2542E7550);
  sub_23AA724E8((uint64_t)v25, (uint64_t)&v29, &qword_2542E7550);
  if (!v29)
  {
    sub_23AB23A94();
    swift_allocError();
    v18 = v21;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23B02F54C();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v19 = 0x800000023B218470;
    *(_QWORD *)v18 = 0xD000000000000011;
    v20 = 5;
  }
  else
  {
LABEL_3:
    sub_23AA724E8(v0 + 440, (uint64_t)&v22, &qword_2542E4690);
    result = sub_23AA724E8((uint64_t)&v22, (uint64_t)&v30, &qword_2542E4690);
    if (v30 != 4)
      return result;
    sub_23AB23A94();
    swift_allocError();
    v18 = v17;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23B02F54C();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v19 = 0x800000023B218490;
    *(_QWORD *)v18 = 0xD000000000000014;
    v20 = 6;
  }
  *(_QWORD *)(v18 + 8) = v19;
  *(_BYTE *)(v18 + 48) = v20;
  return swift_willThrow();
}

uint64_t sub_23B004680()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  _OWORD v24[15];
  _BYTE v25[16];
  _OWORD v26[12];
  uint64_t v27;
  _BYTE v28[8];
  uint64_t v29;
  _BYTE v30[15];
  char v31;

  v1 = *(_OWORD *)(v0 + 176);
  v26[10] = *(_OWORD *)(v0 + 160);
  v26[11] = v1;
  v27 = *(_QWORD *)(v0 + 192);
  v2 = *(_OWORD *)(v0 + 112);
  v26[6] = *(_OWORD *)(v0 + 96);
  v26[7] = v2;
  v3 = *(_OWORD *)(v0 + 144);
  v26[8] = *(_OWORD *)(v0 + 128);
  v26[9] = v3;
  v4 = *(_OWORD *)(v0 + 48);
  v26[2] = *(_OWORD *)(v0 + 32);
  v26[3] = v4;
  v5 = *(_OWORD *)(v0 + 80);
  v26[4] = *(_OWORD *)(v0 + 64);
  v26[5] = v5;
  v6 = *(_OWORD *)(v0 + 16);
  v26[0] = *(_OWORD *)v0;
  v26[1] = v6;
  sub_23AA724E8((uint64_t)v26, (uint64_t)v28, &qword_2542E7550);
  sub_23AA724E8((uint64_t)v28, (uint64_t)&v29, &qword_2542E7550);
  if (v29)
    goto LABEL_3;
  v7 = *(_OWORD *)(v0 + 248);
  v8 = *(_OWORD *)(v0 + 216);
  v24[0] = *(_OWORD *)(v0 + 200);
  v24[1] = v8;
  v24[2] = *(_OWORD *)(v0 + 232);
  v24[3] = v7;
  v9 = *(_OWORD *)(v0 + 392);
  v10 = *(_OWORD *)(v0 + 408);
  v11 = *(_OWORD *)(v0 + 360);
  v24[11] = *(_OWORD *)(v0 + 376);
  v24[12] = v9;
  v12 = *(_OWORD *)(v0 + 424);
  v24[13] = v10;
  v24[14] = v12;
  v13 = *(_OWORD *)(v0 + 328);
  v14 = *(_OWORD *)(v0 + 344);
  v15 = *(_OWORD *)(v0 + 296);
  v24[7] = *(_OWORD *)(v0 + 312);
  v24[8] = v13;
  v24[9] = v14;
  v24[10] = v11;
  v16 = *(_OWORD *)(v0 + 280);
  v24[4] = *(_OWORD *)(v0 + 264);
  v24[5] = v16;
  v24[6] = v15;
  sub_23AA724E8((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_2542E7420);
  sub_23AA724E8((uint64_t)v25, (uint64_t)v30, (uint64_t *)&unk_2542E7420);
  if (v30[8] == 255)
  {
    sub_23AB23A94();
    swift_allocError();
    v19 = v22;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23B02FE34();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v20 = 0x800000023B218470;
    *(_QWORD *)v19 = 0xD000000000000011;
    v21 = 5;
  }
  else
  {
LABEL_3:
    sub_23AA724E8(v0 + 440, (uint64_t)&v23, &qword_2542E4690);
    result = sub_23AA724E8((uint64_t)&v23, (uint64_t)&v31, &qword_2542E4690);
    if (v31 != 4)
      return result;
    sub_23AB23A94();
    swift_allocError();
    v19 = v18;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23B02FE34();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v20 = 0x800000023B218490;
    *(_QWORD *)v19 = 0xD000000000000014;
    v21 = 6;
  }
  *(_QWORD *)(v19 + 8) = v20;
  *(_BYTE *)(v19 + 48) = v21;
  return swift_willThrow();
}

uint64_t sub_23B0048FC(uint64_t a1)
{
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  unint64_t v30;
  char v32;
  char v33;
  _BYTE v34[496];
  _BYTE __src[496];
  _BYTE v36[496];
  _BYTE v37[496];
  _BYTE v38[496];
  _BYTE v39[496];
  _BYTE v40[496];
  _BYTE v41[496];
  _BYTE __dst[496];
  _BYTE v43[496];
  _BYTE v44[496];
  _BYTE v45[504];
  uint64_t v46;

  v3 = MEMORY[0x24BDAC7A8](a1);
  v4 = v1;
  v6 = v5;
  v8 = v7;
  v9 = v3;
  sub_23AA724E8(v3, (uint64_t)v36, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v36, (uint64_t)v45, qword_2542E6E20);
  sub_23AA724E8(v9, (uint64_t)v38, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v38) == 1)
  {
    v46 = v8;
    v10 = 0;
    v11 = 0;
    v12 = 70;
  }
  else
  {
    sub_23AA724E8((uint64_t)v45, (uint64_t)__src, qword_2542E6E20);
    memcpy(v44, __src, sizeof(v44));
    sub_23ACFC940((uint64_t)__src);
    v13 = sub_23B00592C(v6);
    if (v2)
    {
      sub_23ADF2D34(v9, (voidsub_23AAAEC3C);
      return v16 & 1;
    }
    LOBYTE(v12) = v13;
    v17 = v14;
    v18 = v15;
    v46 = v8;
    sub_23ADF2D34(v9, (voidsub_23AAAEC3C);
    v12 = v12;
    if (v12 == 70)
      v10 = 0;
    else
      v10 = v17;
    if (v12 == 70)
      v11 = 0;
    else
      v11 = v18;
  }
  memcpy(v43, v4, sizeof(v43));
  v19 = sub_23B00592C(v6);
  if (!v2)
  {
    v20 = sub_23B050A34(v12, v10, v11, v19);
    sub_23AA724E8(v9, (uint64_t)v37, qword_2542E6E20);
    if (sub_23AAFC2A4((uint64_t)v37) == 1)
    {
      v33 = v20;
      v21 = 0;
      v22 = 0;
      v23 = 70;
    }
    else
    {
      sub_23AA724E8((uint64_t)v45, (uint64_t)__src, qword_2542E6E20);
      memcpy(__dst, __src, sizeof(__dst));
      sub_23ACFC940((uint64_t)__src);
      sub_23AFFD9BC((uint64_t)v34);
      v24 = sub_23ADF2D34(v9, (voidsub_23AAAEC3C);
      v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 176))(v24);
      memcpy(v41, v34, sizeof(v41));
      LOBYTE(v23) = sub_23B004EF0(v25);
      v21 = v26;
      v28 = v27;
      v33 = v20;
      sub_23AAFCF50((uint64_t)v41);
      swift_release();
      v23 = v23;
      if (v23 == 70)
      {
        v21 = 0;
        v22 = 0;
      }
      else
      {
        v22 = v28;
      }
    }
    memcpy(v40, v4, sizeof(v40));
    v29 = sub_23AFFD9BC((uint64_t)__src);
    v30 = (*(uint64_t (**)(double))(*(_QWORD *)v6 + 176))(v29);
    memcpy(v39, __src, sizeof(v39));
    v32 = sub_23B004EF0(v30);
    sub_23AAFCF50((uint64_t)v39);
    swift_release();
    v16 = v33 | sub_23B050BC0(v23, v21, v22, v32);
  }
  return v16 & 1;
}

id sub_23B004C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v12;
  void *v14;
  void *v15;
  unsigned __int16 v16;
  id v17;

  v4 = *(_QWORD *)(a1 + 144);
  if (*(_BYTE *)(a1 + 160))
  {
    sub_23AAAE478(*(id *)(a1 + 144), *(id *)(a1 + 152), *(_BYTE *)(a1 + 160));
  }
  else
  {
    v5 = v4 & a3;
    v17 = *(id *)(a1 + 152);
    if ((v4 & a3) != 0)
    {
      swift_retain();
      v14 = (void *)v4;
      while (1)
      {
        v6 = __clz(__rbit64(v5));
        v7 = v5 & ~(1 << v6);
        if (((1 << v6) & v5) == 0)
          v7 = v5;
        if (v6 >= 0x40)
          v8 = 0;
        else
          v8 = 1 << v6;
        if (v6 < 0x40)
          v5 = v7;
        sub_23B015BD0((uint64_t)&v15);
        if (v3)
          break;
        v10 = v9 & 1;
        sub_23ADF1CFC(v15, v16);
        if ((v8 & v4) == 0 || v10 == 0)
          v12 = -1;
        else
          v12 = ~v8;
        v4 &= v12;
        if (!v5)
          goto LABEL_22;
      }
      sub_23AAAEE10(v14, v17, 0);
    }
    else
    {
      swift_retain();
LABEL_22:
      if (!v4)
        return v17;
    }
  }
  return (id)v4;
}

id sub_23B004DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v12;
  void *v14;
  void *v15;
  unsigned __int16 v16;
  id v17;

  v4 = *(_QWORD *)(a1 + 104);
  if (*(_BYTE *)(a1 + 120))
  {
    sub_23AAAE478(*(id *)(a1 + 104), *(id *)(a1 + 112), *(_BYTE *)(a1 + 120));
  }
  else
  {
    v5 = v4 & a3;
    v17 = *(id *)(a1 + 112);
    if ((v4 & a3) != 0)
    {
      swift_retain();
      v14 = (void *)v4;
      while (1)
      {
        v6 = __clz(__rbit64(v5));
        v7 = v5 & ~(1 << v6);
        if (((1 << v6) & v5) == 0)
          v7 = v5;
        if (v6 >= 0x40)
          v8 = 0;
        else
          v8 = 1 << v6;
        if (v6 < 0x40)
          v5 = v7;
        sub_23B00D7D8((uint64_t)&v15);
        if (v3)
          break;
        v10 = v9 & 1;
        sub_23ADF1CB4(v15, v16);
        if ((v8 & v4) == 0 || v10 == 0)
          v12 = -1;
        else
          v12 = ~v8;
        v4 &= v12;
        if (!v5)
          goto LABEL_22;
      }
      sub_23AAAEE10(v14, v17, 0);
    }
    else
    {
      swift_retain();
LABEL_22:
      if (!v4)
        return v17;
    }
  }
  return (id)v4;
}

uint64_t sub_23B004EF0(unint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int16 v33;
  int v34;
  int v35;
  unint64_t v36;
  int v37;
  char v38;
  char v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[16];
  _BYTE v58[16];
  _BYTE v59[16];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[6];
  uint64_t v67;
  char v68;
  char v69[8];
  __n128 v70;
  __n128 v71;
  char v72;
  uint64_t v73;
  char v74;
  _BYTE v75[16];
  _BYTE v76[16];
  _BYTE v77[16];
  _BYTE v78[11];
  char v79;
  char v80;
  char v81;
  char v82;
  unint64_t v83;

  v3 = v1;
  result = sub_23B004680();
  if (v2)
    return result;
  v6 = v1[11];
  v66[4] = v1[10];
  v66[5] = v6;
  v67 = *((_QWORD *)v1 + 24);
  v7 = v1[7];
  v66[0] = v1[6];
  v66[1] = v7;
  v8 = v1[9];
  v66[2] = v1[8];
  v66[3] = v8;
  v9 = v1[3];
  v62 = v1[2];
  v63 = v9;
  v10 = v1[5];
  v64 = v1[4];
  v65 = v10;
  v11 = v1[1];
  v60 = *v1;
  v61 = v11;
  sub_23ADF1BC0((__n128 *)((char *)v66 + 8), &v70);
  sub_23ADF1BC0(&v70, &v71);
  if (v72 == 2)
    return 70;
  v12 = LOBYTE(v66[0]);
  sub_23AA724E8((uint64_t)&v60, (uint64_t)v69, &qword_2542E7550);
  sub_23AA724E8((uint64_t)v69, (uint64_t)&v73, &qword_2542E7550);
  if (!v73)
  {
    if ((*((_BYTE *)v1 + 216) & 1) != 0)
      goto LABEL_26;
    return 70;
  }
  if (*(_QWORD *)(*((_QWORD *)v1 + 56) + 16))
    return 70;
  v13 = *(__int128 *)((char *)v1 + 248);
  v14 = *(__int128 *)((char *)v1 + 216);
  v42 = *(__int128 *)((char *)v1 + 200);
  v43 = v14;
  v44 = *(__int128 *)((char *)v1 + 232);
  v45 = v13;
  v15 = *(__int128 *)((char *)v1 + 408);
  v54 = *(__int128 *)((char *)v1 + 392);
  v55 = v15;
  v56 = *(__int128 *)((char *)v1 + 424);
  v16 = *(__int128 *)((char *)v1 + 344);
  v50 = *(__int128 *)((char *)v1 + 328);
  v51 = v16;
  v17 = *(__int128 *)((char *)v1 + 376);
  v52 = *(__int128 *)((char *)v1 + 360);
  v53 = v17;
  v18 = *(__int128 *)((char *)v1 + 280);
  v46 = *(__int128 *)((char *)v1 + 264);
  v47 = v18;
  v19 = *(__int128 *)((char *)v1 + 312);
  v48 = *(__int128 *)((char *)v1 + 296);
  v49 = v19;
  LOBYTE(v20) = BYTE8(v56);
  if ((BYTE8(v56) & 3) != 0)
    return 70;
  v21 = BYTE8(v60);
  if ((BYTE8(v60) & 0x55) != 0)
  {
    if ((BYTE8(v60) & 0x51) != 0)
    {
      if ((BYTE8(v60) & 0x41) == 0x40)
      {
        if (qword_2542E7190 != -1)
          swift_once();
        return 12;
      }
      if ((v43 & 0x51) != 0)
        goto LABEL_26;
      if ((BYTE8(v60) & 0x10) == 0)
      {
        sub_23AA724E8((uint64_t)&v42, (uint64_t)v57, (uint64_t *)&unk_2542E7420);
        sub_23AA724E8((uint64_t)v57, (uint64_t)v78, (uint64_t *)&unk_2542E7420);
        if (v78[8] != 255)
        {
          if ((v21 & 2) != 0)
          {
            if (qword_2542E7190 != -1)
              swift_once();
            return 2;
          }
          else
          {
            if (qword_2542E7190 != -1)
              swift_once();
            return 2;
          }
        }
LABEL_26:
        if (qword_2542E7190 != -1)
          swift_once();
        return 2;
      }
      sub_23AA724E8((uint64_t)&v42, (uint64_t)v58, (uint64_t *)&unk_2542E7420);
      sub_23AA724E8((uint64_t)v58, (uint64_t)v77, (uint64_t *)&unk_2542E7420);
      if (v77[8] != 255)
      {
        if (qword_2542E7190 != -1)
          swift_once();
        return 2;
      }
    }
    return 70;
  }
  v22 = v61;
  v83 = v61;
  v37 = BYTE9(v50);
  if (BYTE9(v50) == 4 || BYTE1(v66[0]) == 3)
  {
    if (v12 == 2)
    {
      result = 70;
      if (BYTE9(v50) != 4 || (_BYTE)v44)
        return result;
    }
    v23 = 0;
  }
  else
  {
    sub_23AA724E8((uint64_t)v66 + 1, (uint64_t)&v68, &qword_2542E6CC0);
    sub_23AA724E8((uint64_t)&v68, (uint64_t)&v74, &qword_2542E6CC0);
    v23 = 3;
    if (BYTE9(v50) == 6)
    {
      v22 = v83;
      if (v74 == 6)
        v23 = v44;
    }
    else
    {
      v22 = v83;
    }
  }
  v24 = 1843460;
  if ((v22 & 0x10000000000) != 0)
  {
    sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v41, &qword_2542E4690);
    sub_23AA724E8((uint64_t)&v41, (uint64_t)&v79, &qword_2542E4690);
    if (v79 == 4)
    {
      __break(1u);
      goto LABEL_123;
    }
    v22 = v83;
    if (!v12 && v79 == 2)
      goto LABEL_48;
  }
  if ((v23 - 2) >= 2)
  {
    if (!v23)
    {
LABEL_48:
      v25 = 24;
      goto LABEL_49;
    }
    if ((v22 & 0x10000) != 0)
    {
      sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v40, &qword_2542E4690);
      sub_23AA724E8((uint64_t)&v40, (uint64_t)&v80, &qword_2542E4690);
      if (v80 != 1)
      {
        if (v80 != 4)
          return 1;
LABEL_125:
        __break(1u);
        JUMPOUT(0x23B0058FCLL);
      }
    }
    sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v39, &qword_2542E4690);
    sub_23AA724E8((uint64_t)&v39, (uint64_t)&v81, &qword_2542E4690);
    if (v81 != 4)
    {
      if (v81 == 1)
        v24 = 1876244;
      else
        v24 = 1876224;
LABEL_99:
      v25 = 16;
      goto LABEL_49;
    }
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  v24 = 1876224;
  if ((v12 | 4) == 4 || (BYTE8(v50) | 4) == 4)
  {
    v25 = v22 & 0xFFFFFFFFFFFFFFF7;
    if ((v22 & 0xFFFFFFFFFFFFFFF7) == 0)
    {
      if (v22)
        return 1;
      goto LABEL_110;
    }
LABEL_49:
    v36 = v25;
    goto LABEL_50;
  }
  if (v22)
  {
    v36 = v22;
    goto LABEL_50;
  }
LABEL_110:
  if ((~(_BYTE)v20 & 0xC) != 0)
    return 70;
  v36 = 0;
LABEL_50:
  sub_23AA724E8((uint64_t)&v42, (uint64_t)v59, (uint64_t *)&unk_2542E7420);
  v26 = sub_23AA724E8((uint64_t)v59, (uint64_t)v76, (uint64_t *)&unk_2542E7420);
  if (v76[8] == 255)
  {
LABEL_80:
    v34 = BYTE1(v66[0]);
    if (BYTE1(v66[0]) == 5)
      return 70;
    v35 = *((unsigned __int8 *)v3 + 440);
    if (v35 == 1)
    {
      sub_23AA724E8((uint64_t)v59, (uint64_t)v75, (uint64_t *)&unk_2542E7420);
      if (v34 != 6 && v75[8] != 255 && !v83)
        return 70;
      return 0;
    }
    if (v35 != 4)
    {
      if (v12)
        return 70;
      if (v35 == 2)
        return 23;
      return 0;
    }
    goto LABEL_124;
  }
  v27 = v43;
  if ((v43 & 1) != 0)
  {
    if ((v83 & 8) == 0)
    {
      v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 152))(v26);
      result = 70;
      if ((v27 & 0x80) == 0 || (v33 & 0x4000) == 0 || (v36 & 2) == 0)
        return result;
    }
    goto LABEL_80;
  }
  v28 = v24 | 0x402;
  if ((v36 & 2) == 0)
    v28 = v24;
  v29 = (v28 >> 10) & 1;
  if ((v36 & 1) == 0)
    LODWORD(v29) = 1;
  if (!(_DWORD)v29)
    v28 |= 0x400uLL;
  v30 = (v36 >> 4) & 1;
  if (v83 != 0x10000)
    LODWORD(v30) = 1;
  if (v30 | (v28 >> 12) & 1)
    a1 = v28;
  else
    a1 = v28 | 0x1000;
  if ((v83 & 0x100000000000) != 0 && BYTE8(v61) != 3)
  {
    v31 = (a1 >> 14) & 1;
    if (BYTE8(v61))
      LODWORD(v31) = 1;
    if (!(_DWORD)v31)
      a1 |= 0x4000uLL;
  }
  v20 &= 0xCu;
  if (v20 == 4 || (v67 & 4) != 0)
  {
    if (qword_2542E7190 != -1)
      swift_once();
    if ((v36 & 0xFFFFDFFFFFFEF6E7 & (qword_2542EDE38 | 0x6409000000C000)) == 0)
      return 70;
    return 1;
  }
  v24 = 0x60000000000008;
  if (v20 == 12)
    v32 = v36 | 8;
  else
    v32 = v36;
  if ((v32 & 8) == 0)
    return 1;
  result = 70;
  switch(v12)
  {
    case 0:
      if (v37 == 3)
        return 70;
      sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v38, &qword_2542E4690);
      sub_23AA724E8((uint64_t)&v38, (uint64_t)&v82, &qword_2542E4690);
      if (v82 == 1)
      {
        result = 6;
      }
      else
      {
        if (v82 == 4)
        {
          __break(1u);
          JUMPOUT(0x23B005904);
        }
        result = 23;
      }
      break;
    case 1:
      return result;
    default:
      goto LABEL_99;
  }
  return result;
}

uint64_t sub_23B00592C(unint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t result;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int16 v33;
  int v34;
  int v35;
  unint64_t v36;
  int v37;
  char v38;
  char v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55[8];
  char v56[8];
  char v57[8];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __n128 v67[5];
  __int128 v68;
  char v69;
  _BYTE v70[16];
  __n128 v71;
  __n128 v72;
  char v73;
  _BYTE v74[16];
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  char v82;
  char v83;
  unint64_t v84;

  v3 = v1;
  result = sub_23B00440C();
  if (v2)
    return result;
  v6 = (__n128)v1[13];
  v67[3] = (__n128)v1[12];
  v67[4] = v6;
  v68 = v1[14];
  v7 = (__n128)v1[9];
  v66 = v1[8];
  v67[0] = v7;
  v8 = (__n128)v1[11];
  v67[1] = (__n128)v1[10];
  v67[2] = v8;
  v9 = v1[5];
  v62 = v1[4];
  v63 = v9;
  v10 = v1[7];
  v64 = v1[6];
  v65 = v10;
  v11 = v1[1];
  v58 = *v1;
  v59 = v11;
  v12 = v1[3];
  v60 = v1[2];
  v61 = v12;
  sub_23ADF1BC0(v67, &v71);
  sub_23ADF1BC0(&v71, &v72);
  if (v73 == 2)
    return 70;
  v13 = BYTE8(v66);
  sub_23AA724E8((uint64_t)&v58, (uint64_t)v70, (uint64_t *)&unk_2542E7420);
  sub_23AA724E8((uint64_t)v70, (uint64_t)v74, (uint64_t *)&unk_2542E7420);
  if (v74[8] == 255)
  {
    if ((*((_BYTE *)v1 + 248) & 1) != 0)
      goto LABEL_26;
    return 70;
  }
  if (*(_QWORD *)(*((_QWORD *)v1 + 56) + 16))
    return 70;
  v14 = v1[26];
  v52 = v1[25];
  v53 = v14;
  v54 = *((_QWORD *)v1 + 54);
  v15 = v1[22];
  v48 = v1[21];
  v49 = v15;
  v16 = v1[24];
  v50 = v1[23];
  v51 = v16;
  v17 = v1[18];
  v44 = v1[17];
  v45 = v17;
  v18 = v1[20];
  v46 = v1[19];
  v47 = v18;
  v19 = v1[16];
  v42 = v1[15];
  v43 = v19;
  LOBYTE(v20) = v54;
  if ((v54 & 3) != 0)
    return 70;
  v21 = v59;
  if ((v59 & 0x55) != 0)
  {
    if ((v59 & 0x51) != 0)
    {
      if ((v59 & 0x41) == 0x40)
      {
        if (qword_2542E7190 != -1)
          swift_once();
        return 12;
      }
      if ((BYTE8(v42) & 0x51) != 0)
        goto LABEL_26;
      if ((v59 & 0x10) == 0)
      {
        sub_23AA724E8((uint64_t)&v42, (uint64_t)v55, &qword_2542E7550);
        sub_23AA724E8((uint64_t)v55, (uint64_t)&v79, &qword_2542E7550);
        if (v79)
        {
          if ((v21 & 2) != 0)
          {
            if (qword_2542E7190 != -1)
              swift_once();
            return 2;
          }
          else
          {
            if (qword_2542E7190 != -1)
              swift_once();
            return 2;
          }
        }
LABEL_26:
        if (qword_2542E7190 != -1)
          swift_once();
        return 2;
      }
      sub_23AA724E8((uint64_t)&v42, (uint64_t)v56, &qword_2542E7550);
      sub_23AA724E8((uint64_t)v56, (uint64_t)&v78, &qword_2542E7550);
      if (v78)
      {
        if (qword_2542E7190 != -1)
          swift_once();
        return 2;
      }
    }
    return 70;
  }
  v22 = *((_QWORD *)&v59 + 1);
  v84 = *((_QWORD *)&v59 + 1);
  v37 = BYTE1(v48);
  if (BYTE1(v48) == 4 || BYTE9(v66) == 3)
  {
    if (v13 == 2)
    {
      result = 70;
      if (BYTE1(v48) != 4 || BYTE8(v43))
        return result;
    }
    v23 = 0;
  }
  else
  {
    sub_23AA724E8((uint64_t)&v66 + 9, (uint64_t)&v69, &qword_2542E6CC0);
    sub_23AA724E8((uint64_t)&v69, (uint64_t)&v75, &qword_2542E6CC0);
    v23 = 3;
    if (BYTE1(v48) == 6)
    {
      v22 = v84;
      if (v75 == 6)
        v23 = BYTE8(v43);
    }
    else
    {
      v22 = v84;
    }
  }
  v24 = 1843460;
  if ((v22 & 0x10000000000) != 0)
  {
    sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v41, &qword_2542E4690);
    sub_23AA724E8((uint64_t)&v41, (uint64_t)&v80, &qword_2542E4690);
    if (v80 == 4)
    {
      __break(1u);
      goto LABEL_123;
    }
    v22 = v84;
    if (!v13 && v80 == 2)
      goto LABEL_48;
  }
  if ((v23 - 2) >= 2)
  {
    if (!v23)
    {
LABEL_48:
      v25 = 24;
      goto LABEL_49;
    }
    if ((v22 & 0x10000) != 0)
    {
      sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v40, &qword_2542E4690);
      sub_23AA724E8((uint64_t)&v40, (uint64_t)&v81, &qword_2542E4690);
      if (v81 != 1)
      {
        if (v81 != 4)
          return 1;
LABEL_125:
        __break(1u);
        JUMPOUT(0x23B00631CLL);
      }
    }
    sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v39, &qword_2542E4690);
    sub_23AA724E8((uint64_t)&v39, (uint64_t)&v82, &qword_2542E4690);
    if (v82 != 4)
    {
      if (v82 == 1)
        v24 = 1876244;
      else
        v24 = 1876224;
LABEL_99:
      v25 = 16;
      goto LABEL_49;
    }
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  v24 = 1876224;
  if ((v13 | 4) == 4 || (v48 | 4) == 4)
  {
    v25 = v22 & 0xFFFFFFFFFFFFFFF7;
    if ((v22 & 0xFFFFFFFFFFFFFFF7) == 0)
    {
      if (v22)
        return 1;
      goto LABEL_110;
    }
LABEL_49:
    v36 = v25;
    goto LABEL_50;
  }
  if (v22)
  {
    v36 = v22;
    goto LABEL_50;
  }
LABEL_110:
  if ((~(_BYTE)v20 & 0xC) != 0)
    return 70;
  v36 = 0;
LABEL_50:
  sub_23AA724E8((uint64_t)&v42, (uint64_t)v57, &qword_2542E7550);
  v26 = sub_23AA724E8((uint64_t)v57, (uint64_t)&v77, &qword_2542E7550);
  if (!v77)
  {
LABEL_80:
    v34 = BYTE9(v66);
    if (BYTE9(v66) == 5)
      return 70;
    v35 = *((unsigned __int8 *)v3 + 440);
    if (v35 == 1)
    {
      sub_23AA724E8((uint64_t)v57, (uint64_t)&v76, &qword_2542E7550);
      if (v34 != 6 && v76 && !v84)
        return 70;
      return 0;
    }
    if (v35 != 4)
    {
      if (v13)
        return 70;
      if (v35 == 2)
        return 23;
      return 0;
    }
    goto LABEL_124;
  }
  v27 = BYTE8(v42);
  if ((BYTE8(v42) & 1) != 0)
  {
    if ((v84 & 8) == 0)
    {
      v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 152))(v26);
      result = 70;
      if ((v27 & 0x80) == 0 || (v33 & 0x4000) == 0 || (v36 & 2) == 0)
        return result;
    }
    goto LABEL_80;
  }
  v28 = v24 | 0x402;
  if ((v36 & 2) == 0)
    v28 = v24;
  v29 = (v28 >> 10) & 1;
  if ((v36 & 1) == 0)
    LODWORD(v29) = 1;
  if (!(_DWORD)v29)
    v28 |= 0x400uLL;
  v30 = (v36 >> 4) & 1;
  if (v84 != 0x10000)
    LODWORD(v30) = 1;
  if (v30 | (v28 >> 12) & 1)
    a1 = v28;
  else
    a1 = v28 | 0x1000;
  if ((v84 & 0x100000000000) != 0 && v60 != 3)
  {
    v31 = (a1 >> 14) & 1;
    if ((_BYTE)v60)
      LODWORD(v31) = 1;
    if (!(_DWORD)v31)
      a1 |= 0x4000uLL;
  }
  v20 &= 0xCu;
  if (v20 == 4 || (BYTE8(v68) & 4) != 0)
  {
    if (qword_2542E7190 != -1)
      swift_once();
    if ((v36 & 0xFFFFDFFFFFFEF6E7 & (qword_2542EDE38 | 0x6409000000C000)) == 0)
      return 70;
    return 1;
  }
  v24 = 0x60000000000008;
  if (v20 == 12)
    v32 = v36 | 8;
  else
    v32 = v36;
  if ((v32 & 8) == 0)
    return 1;
  result = 70;
  switch(v13)
  {
    case 0:
      if (v37 == 3)
        return 70;
      sub_23AA724E8((uint64_t)v1 + 440, (uint64_t)&v38, &qword_2542E4690);
      sub_23AA724E8((uint64_t)&v38, (uint64_t)&v83, &qword_2542E4690);
      if (v83 == 1)
      {
        result = 6;
      }
      else
      {
        if (v83 == 4)
        {
          __break(1u);
          JUMPOUT(0x23B006324);
        }
        result = 23;
      }
      break;
    case 1:
      return result;
    default:
      goto LABEL_99;
  }
  return result;
}

uint64_t sub_23B006350()
{
  if (qword_2542E7190 != -1)
    swift_once();
  return qword_2542EDE38 | 0x10;
}

BOOL sub_23B006398(uint64_t a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1 & 0xFFFFDFFFFFFEF6E7;
    if (qword_2542E7190 != -1)
      swift_once();
    a1 = v3 & (qword_2542EDE38 | 0x6409000000C000);
  }
  return (*(_QWORD *)(v2 + 16) & a1) != 0 || (*(_BYTE *)(v2 + 8) & 0x51) != 0;
}

BOOL sub_23B006430(uint64_t a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1 & 0xFFFFDFFFFFFEF6E7;
    if (qword_2542E7190 != -1)
      swift_once();
    a1 = v3 & (qword_2542EDE38 | 0x6409000000C000);
  }
  return (*(_QWORD *)(v2 + 24) & a1) != 0 || (*(_BYTE *)(v2 + 16) & 0x51) != 0;
}

uint64_t sub_23B0064C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  _BYTE *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  NSObject *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t Strong;
  uint64_t v75;
  void (*v76)(id *, uint64_t);
  id v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void (*v107)(id *, uint64_t);
  id v108;
  char v109;
  void *v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  id v126;
  _QWORD *v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  _QWORD *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  char v150;
  char v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  char v157;
  char v158;
  uint64_t v159;
  int *v160;
  _QWORD *v161;
  uint64_t v162;
  char *v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  NSObject *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  char v180;
  char v181;
  id v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int *v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  NSObject *v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  _QWORD *v230;
  _QWORD *v231;
  uint64_t v232;
  id v233;
  char v234;
  _QWORD v235[62];
  _BYTE v236[496];
  _BYTE v237[496];
  _BYTE v238[496];
  _BYTE v239[504];
  uint64_t v240;
  uint64_t v241;

  v231 = a3;
  sub_23AA724E8(a1, (uint64_t)v236, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v236, (uint64_t)v239, qword_2542E6E20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v228 = (uint64_t)&v208 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v227 = (uint64_t)&v208 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v224 = *(_QWORD *)(v10 - 8);
  v225 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v221 = (uint64_t)&v208 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v220 = (unint64_t)&v208 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v226 = (uint64_t)&v208 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v230 = (uint64_t *)((char *)&v208 - v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v222 = *(_QWORD *)(v18 - 8);
  v223 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v218 = (uint64_t)&v208 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v219 = (uint64_t)&v208 - v21;
  v22 = sub_23B1C5E4C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v208 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v208 - v27;
  v232 = a1;
  sub_23AA724E8(a1, (uint64_t)v237, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v237) == 1)
  {
    v29 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v30 = sub_23B1C5E40();
    v31 = sub_23B1C6A94();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23AA66000, v30, v31, "[interactive] testingOperationForEntry, missing entry", v32, 2u);
      MEMORY[0x23B8614BC](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
LABEL_5:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
    v34 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v35 = v231;
    v36 = 1;
    return v34(v35, v36, 1, v33);
  }
  sub_23AA724E8((uint64_t)v239, (uint64_t)v235, qword_2542E6E20);
  memcpy(v238, v235, sizeof(v238));
  sub_23ACFC940((uint64_t)v235);
  v38 = sub_23B007C14(a2);
  if (!v3)
  {
    v42 = (unint64_t)v38;
    v43 = v39;
    v44 = v40;
    v217 = 0;
    v45 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v46 = v232;
    sub_23ADF2D34(v232, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88348);
    v216 = v42 >> 62;
    sub_23AB2277C(v42, v43, v44);
    sub_23ADF2D34(v46, (voidsub_23AA88348);
    sub_23AB2277C(v42, v43, v44);
    v47 = sub_23B1C5E40();
    v48 = sub_23B1C6A94();
    v215 = v47;
    LODWORD(v214) = v48;
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v212 = v43;
      v50 = v49;
      v211 = swift_slowAlloc();
      v233 = (id)v211;
      *(_DWORD *)v50 = 136315394;
      v209 = v50 + 4;
      v51 = sub_23B02F54C();
      v53 = v52;
      sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
      v240 = sub_23AABEC68(v51, v53, (uint64_t *)&v233);
      v210 = &v241;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
      v213 = v50;
      *(_WORD *)(v50 + 12) = 2080;
      v209 = v50 + 14;
      v43 = v212;
      sub_23AB2277C(v42, v212, v44);
      v54 = sub_23B0CD320(v42, v43, (unint64_t)v44);
      v56 = v55;
      sub_23AB22788(v42, v43, v44);
      v57 = sub_23AABEC68(v54, v56, (uint64_t *)&v233);
      v58 = (uint8_t *)v213;
      v240 = v57;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AB22788(v42, v43, v44);
      sub_23AB22788(v42, v43, v44);
      v59 = v215;
      _os_log_impl(&dword_23AA66000, v215, (os_log_type_t)v214, "[interactive] testingOperationForEntry, entry=%s, status=%s", v58, 0x16u);
      v60 = v211;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v60, -1, -1);
      v46 = v232;
      MEMORY[0x23B8614BC](v213, -1, -1);

    }
    else
    {
      sub_23ADF2D34(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
      sub_23ADF2D34(v46, (voidsub_23AAAEC3C);
      sub_23AB22788(v42, v43, v44);
      sub_23AB22788(v42, v43, v44);

    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    v61 = v43;
    v62 = v46;
    v63 = v217;
    v64 = v230;
    if ((_DWORD)v216 == 1)
    {
      switch((char)v42)
      {
        case 0:
          v72 = v61;
          v73 = v42;
          Strong = swift_weakLoadStrong();
          if (!Strong)
            goto LABEL_99;
          v75 = *(_QWORD *)(Strong + 40);
          swift_retain();
          swift_release();
          if (!v235[30])
          {
            swift_release();
            v79 = v42;
            v61 = v72;
            goto LABEL_26;
          }
          v229 = v44;
          v233 = (id)v235[30];
          v76 = *(void (**)(id *, uint64_t))(*(_QWORD *)v75 + 240);
          v77 = (id)v235[30];
          v78 = v227;
          v76(&v233, 1);
          if (v63)
          {
            swift_release();
            sub_23AB22788(v73, v72, v229);

            goto LABEL_43;
          }
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v78, 1, v225) == 1)
          {
            swift_release();
            sub_23AB22788(v73, v72, v229);

            goto LABEL_70;
          }
          sub_23AA724E8(v78, v220, (uint64_t *)&unk_2542E4760);
          v140 = (*(uint64_t (**)(id *))(*(_QWORD *)v75 + 296))(&v233);
          v181 = v180;
          v182 = v77;
          v183 = v140;
          swift_release();
          sub_23AB22788(v73, v72, v229);
          if ((v181 & 1) != 0)
          {
            v191 = v220;
            goto LABEL_94;
          }
          v184 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31B0);
          v185 = v184[12];
          v143 = v231;
          v186 = (char *)v231 + v185;
          v187 = v184[16];
          v188 = v184[20];
          *v231 = v182;
          sub_23AA724E8(v220, (uint64_t)v143 + v185, (uint64_t *)&unk_2542E4760);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v224 + 56))(v186, 0, 1, v225);
          *(_QWORD *)((char *)v143 + v187) = v183;
          sub_23AAFC2BC((uint64_t)&v235[30]);
          sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
          v189 = v235[53];
          v190 = (id)v235[53];
          sub_23AAFC540((uint64_t)&v235[30]);
          *(_QWORD *)((char *)v143 + v188) = v189;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
          swift_storeEnumTagMultiPayload();
          v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
LABEL_88:
          swift_storeEnumTagMultiPayload();
          v34 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56);
          v35 = v143;
LABEL_55:
          v36 = 0;
          v33 = v130;
          return v34(v35, v36, 1, v33);
        case 1:
          v102 = v61;
          v103 = v42;
          v104 = swift_weakLoadStrong();
          if (!v104)
            goto LABEL_101;
          v105 = *(_QWORD *)(v104 + 40);
          swift_retain();
          swift_release();
          if (!v235[30])
          {
            swift_release();
            v79 = v42;
            v61 = v102;
            goto LABEL_26;
          }
          v106 = v44;
          v212 = v102;
          v233 = (id)v235[30];
          v107 = *(void (**)(id *, uint64_t))(*(_QWORD *)v105 + 240);
          v108 = (id)v235[30];
          v78 = v228;
          v107(&v233, 1);
          if (v63)
          {
            swift_release();
            sub_23AB22788(v103, v212, v106);

LABEL_43:
            v41 = v62;
            return sub_23ADF2D34(v41, (voidsub_23AAAEC3C);
          }
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v78, 1, v225) == 1)
          {
            swift_release();
            sub_23AB22788(v103, v212, v106);

LABEL_70:
            sub_23ADF2D34(v62, (voidsub_23AAAEC3C);
            v134 = &qword_2542E4770;
            v135 = v78;
LABEL_71:
            sub_23AA8A05C(v135, v134);
            goto LABEL_5;
          }
          sub_23AA724E8(v78, v221, (uint64_t *)&unk_2542E4760);
          v155 = (*(uint64_t (**)(id *))(*(_QWORD *)v105 + 296))(&v233);
          v157 = v156;
          swift_release();
          sub_23AB22788(v103, v212, v106);
          if ((v157 & 1) != 0 || (v158 = v235[1], LOBYTE(v235[1]) == 255))
          {
            v191 = v221;
LABEL_94:
            sub_23AA8A05C(v191, (uint64_t *)&unk_2542E4760);

            goto LABEL_60;
          }
          v217 = 0;
          v230 = (_QWORD *)v235[13];
          if (v235[13])
          {
            v229 = &v235[30];
            v226 = v235[15];
            v227 = v235[16];
            v222 = v235[12];
            v223 = v235[14];
            v219 = v235[10];
            v220 = v235[11];
            v218 = v235[9];
            v215 = v235[7];
            v216 = v235[8];
            v159 = v235[5];
            v214 = v235[6];
            v210 = (uint64_t *)v235[0];
            v160 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5EE0);
            v161 = v231;
            v162 = (uint64_t)v231 + v160[12];
            v163 = (char *)v231 + v160[16];
            v164 = (_QWORD *)((char *)v231 + v160[20]);
            v213 = v160[24];
            v211 = v160[28];
            v228 = v160[32];
            *v231 = v108;
            sub_23AA724E8(v221, v162, (uint64_t *)&unk_2542E4760);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v224 + 56))(v162, 0, 1, v225);
            *(_QWORD *)v163 = v210;
            v163[8] = v158;
            v165 = v159;
            v166 = v214;
            v167 = v215;
            *v164 = v159;
            v164[1] = v166;
            v168 = v216;
            v164[2] = (uint64_t)v167;
            v164[3] = v168;
            v169 = v218;
            v170 = v219;
            v164[4] = v218;
            v164[5] = v170;
            v171 = v220;
            v172 = v222;
            v173 = v223;
            v164[6] = v220;
            v164[7] = v172;
            v174 = v230;
            v164[8] = (uint64_t)v230;
            v164[9] = v173;
            v175 = v227;
            v164[10] = v226;
            v164[11] = v175;
            *(_QWORD *)((char *)v161 + v213) = v212;
            *(_QWORD *)((char *)v161 + v211) = v155;
            sub_23AAA7638(v165, v166, (uint64_t)v167, v168, v169, v170, v171, v172, (uint64_t)v174);
            v176 = (uint64_t)v229;
            sub_23AAFC2BC((uint64_t)v229);
            sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
            v177 = v235[53];
            v178 = (id)v235[53];
            sub_23AAFC540(v176);
            *(_QWORD *)((char *)v161 + v228) = v177;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
            swift_storeEnumTagMultiPayload();
            v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
            swift_storeEnumTagMultiPayload();
            return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 56))(v161, 0, 1, v179);
          }
          sub_23AA8A05C(v221, (uint64_t *)&unk_2542E4760);

          v154 = v232;
LABEL_97:
          sub_23ADF2D34(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
          break;
        case 2:
          sub_23AB22788(v42, v61, v44);
          v110 = (void *)v235[30];
          if (!v235[30])
            goto LABEL_27;
          v111 = v235[1];
          if (LOBYTE(v235[1]) == 255)
            goto LABEL_27;
          v112 = v235[13];
          if (!v235[13])
            goto LABEL_27;
          v114 = v235[15];
          v113 = v235[16];
          v115 = v235[14];
          v117 = v235[11];
          v116 = v235[12];
          v229 = (_QWORD *)v235[12];
          v230 = &v235[30];
          v119 = v235[9];
          v118 = v235[10];
          v227 = v235[10];
          v228 = v235[11];
          v121 = v235[7];
          v120 = v235[8];
          v225 = v235[8];
          v226 = v235[9];
          v122 = v235[5];
          v123 = v235[6];
          v124 = v235[0];
          v125 = v231;
          *v231 = v235[30];
          v125[1] = v124;
          *((_BYTE *)v125 + 16) = v111;
          v125[3] = v122;
          v125[4] = v123;
          v125[5] = v121;
          v125[6] = v120;
          v125[7] = v119;
          v125[8] = v118;
          v125[9] = v117;
          v125[10] = v116;
          v125[11] = v112;
          v125[12] = v115;
          v125[13] = v114;
          v125[14] = v113;
          *((_BYTE *)v125 + 120) = 0;
          v126 = v110;
          sub_23AAA7638(v122, v123, v121, v225, v226, v227, v228, (uint64_t)v229, v112);
          v127 = v230;
          sub_23AAFC2BC((uint64_t)v230);
          sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
          v128 = v235[53];
          v129 = (id)v235[53];
          sub_23AAFC540((uint64_t)v127);
          v125[16] = v128;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
          swift_storeEnumTagMultiPayload();
          v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
          swift_storeEnumTagMultiPayload();
          v34 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56);
          v35 = v125;
          goto LABEL_55;
        case 6:
          sub_23AB22788(v42, v61, v44);
          sub_23AAFC2BC((uint64_t)&v235[30]);
          sub_23ADF2D34(v62, (voidsub_23AAAEC3C);
          v94 = v235[30];
          v95 = (id)v235[30];
          sub_23AAFC540((uint64_t)&v235[30]);
          if (v94)
            goto LABEL_51;
          goto LABEL_5;
        case 12:
          goto LABEL_25;
        case 23:
          sub_23AB22788(v42, v61, v44);
          sub_23AAFC2BC((uint64_t)&v235[30]);
          sub_23ADF2D34(v62, (voidsub_23AAAEC3C);
          v131 = v235[30];
          v95 = (id)v235[30];
          sub_23AAFC540((uint64_t)&v235[30]);
          if (!v131)
            goto LABEL_5;
LABEL_51:
          v90 = v231;
          *v231 = v95;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
LABEL_54:
          swift_storeEnumTagMultiPayload();
          v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
          swift_storeEnumTagMultiPayload();
          v34 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56);
          v35 = v90;
          goto LABEL_55;
        default:
          sub_23AFF129C("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 1046, v42);
      }
    }
    else if ((_DWORD)v216)
    {
LABEL_25:
      v79 = v42;
LABEL_26:
      sub_23AB22788(v79, v61, v44);
LABEL_27:
      sub_23ADF2D34(v62, (voidsub_23AAAEC3C);
    }
    else
    {
      switch((char)v42)
      {
        case 0:
          v65 = v61;
          v66 = swift_weakLoadStrong();
          if (!v66)
          {
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            sub_23AFF129C("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 995, v42);
          }
          v67 = *(_QWORD *)(v66 + 32);
          swift_retain();
          swift_release();
          v68 = v235[1];
          if (LOBYTE(v235[1]) == 255)
          {
            swift_release();
            v132 = v42;
            v133 = v65;
LABEL_59:
            sub_23AB22788(v132, v133, v44);
          }
          else
          {
            v69 = v235[0];
            v233 = (id)v235[0];
            v234 = v235[1];
            (*(void (**)(id *, uint64_t))(*(_QWORD *)v67 + 240))(&v233, 1);
            if (v63)
            {
              swift_release();
              v70 = v42;
              v71 = v65;
LABEL_38:
              sub_23AB22788(v70, v71, v44);
              goto LABEL_8;
            }
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v222 + 48))(v64, 1, v223) == 1)
            {
              swift_release();
              sub_23AB22788(v42, v65, v44);
              sub_23ADF2D34(v232, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
              v134 = (uint64_t *)&unk_2542E4750;
              v135 = (uint64_t)v64;
              goto LABEL_71;
            }
            v229 = v44;
            v212 = v65;
            sub_23AA724E8((uint64_t)v64, v219, (uint64_t *)&unk_2542E6B00);
            v136 = (*(uint64_t (**)(id *))(*(_QWORD *)v67 + 296))(&v233);
            v138 = v137;
            swift_release();
            sub_23AB22788(v42, v212, v229);
            if ((v138 & 1) == 0)
            {
              v141 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3190);
              v142 = v141[12];
              v143 = v231;
              v144 = (char *)v231 + v142;
              v145 = v141[16];
              v146 = v141[20];
              *v231 = v69;
              *((_BYTE *)v143 + 8) = v68;
              sub_23AA724E8(v219, (uint64_t)v143 + v142, (uint64_t *)&unk_2542E6B00);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v144, 0, 1, v223);
              *(_QWORD *)((char *)v143 + v145) = v136;
              sub_23ACF4048((uint64_t)v235);
              sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
              v147 = v235[28];
              v148 = (id)v235[28];
              sub_23ACF410C((uint64_t)v235);
              *(_QWORD *)((char *)v143 + v146) = v147;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
              swift_storeEnumTagMultiPayload();
              v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
              goto LABEL_88;
            }
            v192 = v219;
LABEL_92:
            sub_23AA8A05C(v192, (uint64_t *)&unk_2542E6B00);
          }
          break;
        case 1:
          v96 = v61;
          v97 = swift_weakLoadStrong();
          if (!v97)
            goto LABEL_100;
          v98 = *(_QWORD *)(v97 + 32);
          swift_retain();
          swift_release();
          v99 = v235[1];
          if (LOBYTE(v235[1]) == 255)
          {
            swift_release();
            v132 = v42;
            v133 = v96;
            goto LABEL_59;
          }
          v100 = (_QWORD *)v235[0];
          v233 = (id)v235[0];
          v234 = v235[1];
          v101 = v226;
          (*(void (**)(id *, uint64_t))(*(_QWORD *)v98 + 240))(&v233, 1);
          if (v63)
          {
            swift_release();
            v70 = v42;
            v71 = v96;
            goto LABEL_38;
          }
          v230 = v100;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48))(v101, 1, v223) == 1)
          {
            swift_release();
            sub_23AB22788(v42, v96, v44);
            sub_23ADF2D34(v232, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
            v134 = (uint64_t *)&unk_2542E4750;
            v135 = v101;
            goto LABEL_71;
          }
          v229 = v44;
          v212 = v96;
          v139 = v218;
          sub_23AA724E8(v101, v218, (uint64_t *)&unk_2542E6B00);
          v149 = (*(uint64_t (**)(id *))(*(_QWORD *)v98 + 296))(&v233);
          v151 = v150;
          swift_release();
          sub_23AB22788(v42, v212, v229);
          if ((v151 & 1) != 0)
          {
            v192 = v139;
            goto LABEL_92;
          }
          v217 = 0;
          v152 = (void *)v235[30];
          v153 = v232;
          if (!v235[30] || (v229 = (_QWORD *)v235[36], v235[36] == 1))
          {
            sub_23AA8A05C(v139, (uint64_t *)&unk_2542E6B00);
            v154 = v153;
            goto LABEL_97;
          }
          v224 = v235[40];
          v225 = v235[41];
          v220 = v235[38];
          v221 = v235[39];
          v193 = v235[35];
          v215 = v235[35];
          v227 = v235[34];
          v228 = v235[37];
          v194 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3198);
          v195 = v231;
          v196 = v139;
          v197 = (uint64_t)v231 + v194[12];
          v198 = v194[16];
          v199 = (_QWORD *)((char *)v231 + v194[20]);
          v219 = v194[24];
          v216 = v194[28];
          v226 = v194[32];
          *v231 = v230;
          *((_BYTE *)v195 + 8) = v99;
          sub_23AA724E8(v196, v197, (uint64_t *)&unk_2542E6B00);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v222 + 56))(v197, 0, 1, v223);
          *(_QWORD *)((char *)v195 + v198) = v152;
          *v199 = v227;
          v199[1] = v193;
          v200 = v228;
          v199[2] = v229;
          v199[3] = v200;
          v201 = v220;
          v202 = v221;
          v199[4] = v220;
          v199[5] = v202;
          v203 = v225;
          v199[6] = v224;
          v199[7] = v203;
          *(_QWORD *)((char *)v195 + v219) = v212;
          *(_QWORD *)((char *)v195 + v216) = v149;
          v204 = v152;
          sub_23AAAE5C0(v227, (unint64_t)v215, (uint64_t)v229, v228, v201);
          sub_23ACF4048((uint64_t)v235);
          sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
          v205 = v235[28];
          v206 = (id)v235[28];
          sub_23ACF410C((uint64_t)v235);
          *(_QWORD *)((char *)v195 + v226) = v205;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
          swift_storeEnumTagMultiPayload();
          v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
          swift_storeEnumTagMultiPayload();
          return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 56))(v195, 0, 1, v207);
        case 2:
          sub_23AB22788(v42, v61, v44);
          v80 = v235[1];
          if (LOBYTE(v235[1]) == 255)
            goto LABEL_27;
          v81 = (void *)v235[30];
          if (!v235[30])
            goto LABEL_27;
          v82 = v235[36];
          if (v235[36] == 1)
            goto LABEL_27;
          v83 = v235[41];
          v230 = (_QWORD *)v235[41];
          v84 = v235[40];
          v85 = v235[39];
          v86 = v235[38];
          v87 = v235[37];
          v89 = v235[34];
          v88 = v235[35];
          v90 = v231;
          *v231 = v235[0];
          *((_BYTE *)v90 + 8) = v80;
          v90[2] = v81;
          v90[3] = v89;
          v90[4] = v88;
          v90[5] = v82;
          v90[6] = v87;
          v90[7] = v86;
          v90[8] = v85;
          v90[9] = v84;
          v90[10] = v83;
          *((_BYTE *)v90 + 88) = 1;
          v91 = v81;
          sub_23AAAE5C0(v89, v88, v82, v87, v86);
          sub_23ACF4048((uint64_t)v235);
          sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
          v92 = v235[28];
          v93 = (id)v235[28];
          sub_23ACF410C((uint64_t)v235);
          v90[12] = v92;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
          goto LABEL_54;
        case 6:
          sub_23AB22788(v42, v61, v44);
          sub_23ADF2D34(v62, (voidsub_23AAAEC3C);
          v109 = v235[1];
          if (LOBYTE(v235[1]) != 255)
            goto LABEL_53;
          goto LABEL_5;
        case 12:
          goto LABEL_25;
        case 23:
          sub_23AB22788(v42, v61, v44);
          sub_23ADF2D34(v62, (voidsub_23AAAEC3C);
          v109 = v235[1];
          if (LOBYTE(v235[1]) == 255)
            goto LABEL_5;
LABEL_53:
          v90 = v231;
          *v231 = v235[0];
          *((_BYTE *)v90 + 8) = v109;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
          goto LABEL_54;
        default:
          goto LABEL_102;
      }
LABEL_60:
      sub_23ADF2D34(v232, (voidsub_23AAAEC3C);
    }
    goto LABEL_5;
  }
LABEL_8:
  v41 = v232;
  return sub_23ADF2D34(v41, (voidsub_23AAAEC3C);
}

_BYTE *sub_23B007C14(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  char v13;
  void *v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  unint64_t v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD __src[31];
  _BYTE __dst[504];
  uint64_t v63;

  v3 = *(_QWORD *)(v1 + 144);
  v2 = *(void **)(v1 + 152);
  v4 = *(_BYTE *)(v1 + 160);
  v58 = *(_OWORD *)(v1 + 40);
  v59 = *(_OWORD *)(v1 + 16);
  v56 = *(_OWORD *)(v1 + 72);
  v57 = *(_OWORD *)(v1 + 56);
  v54 = *(_OWORD *)(v1 + 104);
  v55 = *(_OWORD *)(v1 + 88);
  v53 = *(_OWORD *)(v1 + 120);
  v52 = *(_QWORD *)v1;
  v51 = *(_BYTE *)(v1 + 8);
  v49 = *(_BYTE *)(v1 + 136);
  v50 = *(_BYTE *)(v1 + 32);
  v48 = *(_BYTE *)(v1 + 137);
  v46 = *(_OWORD *)(v1 + 184);
  v47 = *(_OWORD *)(v1 + 168);
  v44 = *(_OWORD *)(v1 + 216);
  v45 = *(_OWORD *)(v1 + 200);
  v43 = *(_QWORD *)(v1 + 232);
  v41 = *(_BYTE *)(v1 + 138) & 1;
  if (v4)
  {
    v42 = *(_OWORD *)(v1 + 144);
    sub_23ACFC940(v1);
  }
  else
  {
    sub_23ACFC940(v1);
    if (v3 == 0x2000)
    {
      sub_23AAAEE10((void *)0x2000, v2, 0);
      v42 = 0uLL;
      v4 = 1;
    }
    else
    {
      *(_QWORD *)&v42 = v3;
      *((_QWORD *)&v42 + 1) = v2;
      v4 = 0;
    }
  }
  v5 = *(_OWORD *)(v1 + 240);
  v6 = *(_QWORD *)(v1 + 256);
  v7 = *(_BYTE *)(v1 + 264);
  v8 = *(_OWORD *)(v1 + 272);
  v9 = *(_OWORD *)(v1 + 288);
  v10 = *(_OWORD *)(v1 + 304);
  v11 = *(_OWORD *)(v1 + 320);
  v12 = *(_BYTE *)(v1 + 336);
  v13 = *(_BYTE *)(v1 + 337);
  v15 = *(_QWORD *)(v1 + 344);
  v14 = *(void **)(v1 + 352);
  v16 = *(_BYTE *)(v1 + 360);
  v17 = *(_OWORD *)(v1 + 368);
  v18 = *(_OWORD *)(v1 + 384);
  v19 = *(_OWORD *)(v1 + 400);
  v20 = *(_OWORD *)(v1 + 416);
  v21 = *(_BYTE *)(v1 + 338) & 1;
  v22 = *(_QWORD *)(v1 + 432);
  if (!v16)
  {
    if (v15 == 0x2000)
    {
      v39 = *(_OWORD *)(v1 + 272);
      v40 = *(_OWORD *)(v1 + 240);
      v37 = *(_OWORD *)(v1 + 304);
      v38 = *(_OWORD *)(v1 + 288);
      v35 = *(_OWORD *)(v1 + 368);
      v36 = *(_OWORD *)(v1 + 320);
      v33 = *(_OWORD *)(v1 + 400);
      v34 = *(_OWORD *)(v1 + 384);
      v32 = *(_OWORD *)(v1 + 416);
      sub_23AAAEE10((void *)0x2000, v14, 0);
      v20 = v32;
      v19 = v33;
      v18 = v34;
      v17 = v35;
      v11 = v36;
      v10 = v37;
      v9 = v38;
      v8 = v39;
      v5 = v40;
      v15 = 0;
      v14 = 0;
      v16 = 1;
    }
    else
    {
      v16 = 0;
    }
  }
  v23 = *(_QWORD *)(v1 + 488);
  v24 = *(_BYTE *)(v1 + 480);
  v25 = *(_BYTE *)(v1 + 440);
  v27 = *(_QWORD *)(v1 + 448);
  v26 = *(_QWORD *)(v1 + 456);
  *(_QWORD *)&__src[0] = v52;
  BYTE8(__src[0]) = v51;
  __src[1] = v59;
  LOBYTE(__src[2]) = v50;
  *(_OWORD *)((char *)&__src[2] + 8) = v58;
  *(_OWORD *)((char *)&__src[3] + 8) = v57;
  *(_OWORD *)((char *)&__src[4] + 8) = v56;
  *(_OWORD *)((char *)&__src[5] + 8) = v55;
  *(_OWORD *)((char *)&__src[6] + 8) = v54;
  *(_OWORD *)((char *)&__src[7] + 8) = v53;
  BYTE8(__src[8]) = v49;
  BYTE9(__src[8]) = v48;
  BYTE10(__src[8]) = v41;
  __src[9] = v42;
  LOBYTE(__src[10]) = v4;
  *(_OWORD *)((char *)&__src[10] + 8) = v47;
  *(_OWORD *)((char *)&__src[11] + 8) = v46;
  *(_OWORD *)((char *)&__src[12] + 8) = v45;
  *(_OWORD *)((char *)&__src[13] + 8) = v44;
  *((_QWORD *)&__src[14] + 1) = v43;
  __src[15] = v5;
  *(_QWORD *)&__src[16] = v6;
  BYTE8(__src[16]) = v7;
  __src[17] = v8;
  __src[18] = v9;
  __src[19] = v10;
  __src[20] = v11;
  LOBYTE(__src[21]) = v12;
  BYTE1(__src[21]) = v13;
  BYTE2(__src[21]) = v21;
  *((_QWORD *)&__src[21] + 1) = v15;
  *(_QWORD *)&__src[22] = v14;
  BYTE8(__src[22]) = v16;
  __src[23] = v17;
  __src[24] = v18;
  __src[25] = v19;
  __src[26] = v20;
  *(_QWORD *)&__src[27] = v22;
  BYTE8(__src[27]) = v25;
  *(_QWORD *)&__src[28] = v27;
  *((_QWORD *)&__src[28] + 1) = v26;
  __src[29] = *(_OWORD *)(v1 + 464);
  LOBYTE(__src[30]) = v24;
  *((_QWORD *)&__src[30] + 1) = v23;
  memcpy(__dst, __src, 0x1F0uLL);
  v28 = __dst;
  v29 = v63;
  v30 = sub_23B009CF4(a1);
  if (!v29)
    v28 = (_BYTE *)v30;
  sub_23AAFC3AC((uint64_t)__src);
  return v28;
}

_BYTE *sub_23B007F6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  char v16;
  void *v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  unint64_t v33;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _OWORD __src[31];
  _BYTE __dst[504];
  uint64_t v66;

  v3 = *(_QWORD *)(v1 + 104);
  v2 = *(void **)(v1 + 112);
  v4 = *(_BYTE *)(v1 + 120);
  v61 = *(_OWORD *)(v1 + 32);
  v62 = *(_OWORD *)v1;
  v59 = *(_OWORD *)(v1 + 64);
  v60 = *(_OWORD *)(v1 + 48);
  v58 = *(_OWORD *)(v1 + 80);
  v57 = *(_QWORD *)(v1 + 16);
  v56 = *(_BYTE *)(v1 + 24);
  v55 = *(_BYTE *)(v1 + 96);
  v54 = *(_BYTE *)(v1 + 97);
  v52 = *(_OWORD *)(v1 + 144);
  v53 = *(_OWORD *)(v1 + 128);
  v50 = *(_OWORD *)(v1 + 176);
  v51 = *(_OWORD *)(v1 + 160);
  v49 = *(_QWORD *)(v1 + 192);
  v46 = *(_BYTE *)(v1 + 98) & 1;
  if (v4)
  {
    v47 = *(_QWORD *)(v1 + 104);
    v48 = *(void **)(v1 + 112);
    sub_23AEB34A4(v1);
  }
  else
  {
    sub_23AEB34A4(v1);
    if (v3 == 0x2000)
    {
      sub_23AAAEE10((void *)0x2000, v2, 0);
      v47 = 0;
      v48 = 0;
      v4 = 1;
    }
    else
    {
      v47 = v3;
      v48 = v2;
      v4 = 0;
    }
  }
  v5 = *(_QWORD *)(v1 + 200);
  v6 = *(_BYTE *)(v1 + 208);
  v7 = *(_OWORD *)(v1 + 216);
  v8 = *(_BYTE *)(v1 + 232);
  v9 = *(_OWORD *)(v1 + 240);
  v10 = *(_OWORD *)(v1 + 256);
  v11 = *(_OWORD *)(v1 + 272);
  v12 = *(_OWORD *)(v1 + 288);
  v13 = *(_OWORD *)(v1 + 304);
  v14 = *(_OWORD *)(v1 + 320);
  v15 = *(_BYTE *)(v1 + 336);
  v16 = *(_BYTE *)(v1 + 337);
  v18 = *(_QWORD *)(v1 + 344);
  v17 = *(void **)(v1 + 352);
  v19 = *(_BYTE *)(v1 + 360);
  v20 = *(_OWORD *)(v1 + 368);
  v21 = *(_OWORD *)(v1 + 384);
  v22 = *(_OWORD *)(v1 + 400);
  v23 = *(_OWORD *)(v1 + 416);
  v24 = *(_BYTE *)(v1 + 338) & 1;
  v25 = *(_QWORD *)(v1 + 432);
  if (!v19)
  {
    if (v18 == 0x2000)
    {
      v44 = *(_OWORD *)(v1 + 240);
      v45 = *(_OWORD *)(v1 + 216);
      v42 = *(_OWORD *)(v1 + 272);
      v43 = *(_OWORD *)(v1 + 256);
      v40 = *(_OWORD *)(v1 + 304);
      v41 = *(_OWORD *)(v1 + 288);
      v38 = *(_OWORD *)(v1 + 368);
      v39 = *(_OWORD *)(v1 + 320);
      v36 = *(_OWORD *)(v1 + 400);
      v37 = *(_OWORD *)(v1 + 384);
      v35 = *(_OWORD *)(v1 + 416);
      sub_23AAAEE10((void *)0x2000, v17, 0);
      v23 = v35;
      v22 = v36;
      v21 = v37;
      v20 = v38;
      v14 = v39;
      v13 = v40;
      v12 = v41;
      v11 = v42;
      v10 = v43;
      v9 = v44;
      v7 = v45;
      v18 = 0;
      v17 = 0;
      v19 = 1;
    }
    else
    {
      v19 = 0;
    }
  }
  v26 = *(_QWORD *)(v1 + 488);
  v27 = *(_BYTE *)(v1 + 480);
  v28 = *(_BYTE *)(v1 + 440);
  v30 = *(_QWORD *)(v1 + 448);
  v29 = *(_QWORD *)(v1 + 456);
  __src[0] = v62;
  *(_QWORD *)&__src[1] = v57;
  BYTE8(__src[1]) = v56;
  __src[2] = v61;
  __src[3] = v60;
  __src[4] = v59;
  __src[5] = v58;
  LOBYTE(__src[6]) = v55;
  BYTE1(__src[6]) = v54;
  BYTE2(__src[6]) = v46;
  *((_QWORD *)&__src[6] + 1) = v47;
  *(_QWORD *)&__src[7] = v48;
  BYTE8(__src[7]) = v4;
  __src[8] = v53;
  __src[9] = v52;
  __src[10] = v51;
  __src[11] = v50;
  *(_QWORD *)&__src[12] = v49;
  *((_QWORD *)&__src[12] + 1) = v5;
  LOBYTE(__src[13]) = v6;
  *(_OWORD *)((char *)&__src[13] + 8) = v7;
  BYTE8(__src[14]) = v8;
  __src[15] = v9;
  __src[16] = v10;
  __src[17] = v11;
  __src[18] = v12;
  __src[19] = v13;
  __src[20] = v14;
  LOBYTE(__src[21]) = v15;
  BYTE1(__src[21]) = v16;
  BYTE2(__src[21]) = v24;
  *((_QWORD *)&__src[21] + 1) = v18;
  *(_QWORD *)&__src[22] = v17;
  BYTE8(__src[22]) = v19;
  __src[23] = v20;
  __src[24] = v21;
  __src[25] = v22;
  __src[26] = v23;
  *(_QWORD *)&__src[27] = v25;
  BYTE8(__src[27]) = v28;
  *(_QWORD *)&__src[28] = v30;
  *((_QWORD *)&__src[28] + 1) = v29;
  __src[29] = *(_OWORD *)(v1 + 464);
  LOBYTE(__src[30]) = v27;
  *((_QWORD *)&__src[30] + 1) = v26;
  memcpy(__dst, __src, 0x1F0uLL);
  v31 = __dst;
  v32 = v66;
  v33 = sub_23B00A738(a1);
  if (!v32)
    v31 = (_BYTE *)v33;
  sub_23AAFCF50((uint64_t)__src);
  return v31;
}

uint64_t sub_23B008250(void *__src, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD *, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[496];
  _BYTE v61[496];
  _BYTE v62[496];
  _BYTE v63[496];
  _BYTE v64[496];
  _BYTE v65[504];
  uint64_t v66;

  memcpy(v64, __src, sizeof(v64));
  sub_23AA724E8(a2, (uint64_t)v61, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v61, (uint64_t)v65, qword_2542E6E20);
  v5 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C5474();
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7DB8);
  MEMORY[0x24BDAC7A8](v54);
  v55 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0FB8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v49 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v57 = (uint64_t *)((char *)&v47 - v14);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v56 = (uint64_t)&v47 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v47 - v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v48 = (uint64_t)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v58 = (uint64_t)&v47 - v23;
  v59 = v2 + 16;
  result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_30;
  }
  v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 152))(result);
  result = swift_release();
  if ((v25 & 0x80) == 0)
    return result;
  sub_23AA724E8(a2, (uint64_t)v62, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v62) != 1)
  {
    result = sub_23AA724E8((uint64_t)v65, (uint64_t)v60, qword_2542E6E20);
    if (v60[160] == 2 || v60[360] == 2 || v60[136] == 1 || v60[336] == 1)
      return result;
  }
  result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v26 = result;
  memcpy(v60, v64, sizeof(v60));
  nullsub_1(v60);
  sub_23AA724E8((uint64_t)v60, (uint64_t)v63, qword_2542E6E20);
  sub_23ACFC940((uint64_t)__src);
  v27 = v66;
  sub_23B0064C8((uint64_t)v63, v26, v18);
  sub_23AAFC3AC((uint64_t)__src);
  result = swift_release();
  if (!v27)
  {
    v28 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
    if (v28(v18, 1, v19) == 1)
    {
      v29 = &qword_2542E0FB8;
      v30 = (uint64_t)v18;
      return sub_23AA8A05C(v30, v29);
    }
    v66 = 0;
    v31 = v58;
    sub_23AA724E8((uint64_t)v18, v58, &qword_2542DDDB0);
    v32 = v31;
    v33 = v56;
    sub_23AA8EFC8(v32, v56, &qword_2542DDDB0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v33, 0, 1, v19);
    result = swift_weakLoadStrong();
    if (result)
    {
      v34 = v57;
      v35 = v66;
      sub_23B0064C8(a2, result, v57);
      swift_release();
      if (v35)
      {
        sub_23AA8A05C(v33, &qword_2542E0FB8);
        v29 = &qword_2542DDDB0;
        v30 = v58;
        return sub_23AA8A05C(v30, v29);
      }
      v36 = v55;
      v37 = v55 + *(int *)(v54 + 48);
      sub_23AA8EFC8(v33, v55, &qword_2542E0FB8);
      sub_23AA8EFC8((uint64_t)v34, v37, &qword_2542E0FB8);
      if (v28((_QWORD *)v36, 1, v19) == 1)
      {
        sub_23AA8A05C((uint64_t)v34, &qword_2542E0FB8);
        sub_23AA8A05C(v33, &qword_2542E0FB8);
        v38 = v28((_QWORD *)v37, 1, v19);
        v39 = v58;
        if (v38 == 1)
        {
          sub_23AA8A05C(v36, &qword_2542E0FB8);
LABEL_25:
          v29 = &qword_2542DDDB0;
          v30 = v39;
          return sub_23AA8A05C(v30, v29);
        }
      }
      else
      {
        v40 = v49;
        sub_23AA8EFC8(v36, v49, &qword_2542E0FB8);
        if (v28((_QWORD *)v37, 1, v19) != 1)
        {
          v45 = v48;
          sub_23AA724E8(v37, v48, &qword_2542DDDB0);
          v46 = sub_23B0298D4(v40, v45);
          sub_23AA8A05C(v45, &qword_2542DDDB0);
          sub_23AA8A05C((uint64_t)v57, &qword_2542E0FB8);
          sub_23AA8A05C(v33, &qword_2542E0FB8);
          sub_23AA8A05C(v40, &qword_2542DDDB0);
          sub_23AA8A05C(v36, &qword_2542E0FB8);
          v39 = v58;
          if ((v46 & 1) != 0)
            goto LABEL_25;
LABEL_23:
          result = swift_weakLoadStrong();
          if (result)
          {
            v41 = result;
            sub_23B1C53E4();
            sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
            sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
            v42 = v50;
            v43 = v53;
            sub_23B1C5864();
            v44 = (void *)sub_23B1C5354();
            (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v43);
            (*(void (**)(uint64_t, void *))(*(_QWORD *)v41 + 480))(v39, v44);
            swift_release();

            goto LABEL_25;
          }
          goto LABEL_32;
        }
        sub_23AA8A05C((uint64_t)v57, &qword_2542E0FB8);
        sub_23AA8A05C(v33, &qword_2542E0FB8);
        sub_23AA8A05C(v40, &qword_2542DDDB0);
        v39 = v58;
      }
      sub_23AA8A05C(v36, &qword_2569E7DB8);
      goto LABEL_23;
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  return result;
}

uint64_t sub_23B0088D4(uint64_t a1)
{
  uint64_t v1;
  int v3;
  void *v4;
  void *v5;
  void *v6;
  __int16 v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _QWORD v32[15];
  _BYTE v33[16];
  void *v34;
  char v35;
  _BYTE v36[128];

  v3 = *(unsigned __int8 *)(v1 + 520);
  v4 = *(void **)(v1 + 752);
  if (v3 != 255)
  {
    v5 = *(void **)(v1 + 512);
    sub_23B008BB8();
    if ((v7 & 0x100) != 0)
    {

    }
    else if ((_BYTE)v7)
    {
      if (v7 == 1)
      {
        if (v3 == 1 && v6 == v5)
          return 1;
      }
      else if (v6)
      {
        if (v3 == 2 && v5 == (void *)1)
          return 1;
      }
      else if (v3 == 2 && !v5)
      {
        return 1;
      }
    }
    else if (!v3 && (_DWORD)v6 == (_DWORD)v5)
    {
      return 1;
    }
    sub_23AA724E8(a1, (uint64_t)v33, qword_2542E1408);
    sub_23AA724E8(a1, (uint64_t)v36, qword_2542E1408);
    if (v36[115] == 1)
    {
      v8 = v34;
      sub_23AEB3270(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEAD544);

    }
  }
  if (!v4)
    return 0;
  v9 = v4;
  sub_23B008BB8();
  if ((v11 & 0x100) == 0)
    goto LABEL_19;
  v12 = v10;
  v13 = v11;
  v14 = sub_23B1C63E0();
  v16 = v15;
  if (v14 == sub_23B1C63E0() && v16 == v17)
    v18 = 1;
  else
    v18 = sub_23B1C7388();
  v19 = v9;
  sub_23AA88218(v12, v13, 1);
  v20 = v19;
  sub_23AA88218(v12, v13, 1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23AA862DC(v12, v13, 1);

  sub_23AA862DC(v12, v13, 1);
  if ((v18 & 1) == 0)
  {
LABEL_19:
    sub_23AA724E8(a1, (uint64_t)v32, qword_2542E1408);
    sub_23AA724E8(a1, (uint64_t)v33, qword_2542E1408);
    if (v35 == 1)
    {
      v21 = (void *)v32[2];
      v22 = sub_23B1C63E0();
      v24 = v23;
      if (v22 == sub_23B1C63E0() && v24 == v25)
        v26 = 1;
      else
        v26 = sub_23B1C7388();
      v27 = v21;
      v28 = v9;
      v29 = v27;
      sub_23AEB3270(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEAD544);
      v30 = v28;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
        return 1;
    }
    else
    {

    }
    return 0;
  }

  return 1;
}

void sub_23B008BB8()
{
  uint64_t v0;
  _BYTE v1[120];
  _QWORD v2[14];
  _BYTE v3[128];

  sub_23AA724E8(v0, (uint64_t)v2, qword_2542E1408);
  sub_23AA724E8(v0, (uint64_t)v1, qword_2542E1408);
  sub_23AA724E8(v0, (uint64_t)v3, qword_2542E1408);
  __asm { BR              X10 }
}

uint64_t sub_23B008C74()
{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  sub_23AA88218(v0, v1, BYTE1(v1) & 1);
  return v3;
}

uint64_t sub_23B008ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  char v10;
  __n128 v11;
  __n128 v12;
  __int128 v13;
  __n128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  BOOL v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  BOOL v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  os_log_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t i;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  os_log_t v78;
  uint64_t v79;
  _QWORD *v80;
  __int128 v81;
  uint64_t v82;
  void *v83;
  void *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _BYTE v89[496];
  _OWORD v90[96];
  _BYTE v91[496];
  uint64_t v92[192];
  _BYTE v93[496];
  os_log_t v94;
  char v95;
  _BYTE v96[496];
  _BYTE v97[496];
  __int128 v98;
  uint64_t v99;
  char v100;
  _BYTE v101[496];
  _BYTE v102[496];
  _QWORD v103[64];
  _BYTE v104[496];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  _BYTE v110[496];
  _BYTE v111[496];
  _BYTE v112[496];
  _BYTE v113[496];
  _OWORD v114[31];
  _OWORD v115[9];
  __n128 v116[6];
  __n128 v117;
  _BYTE v118[16];
  _OWORD v119[6];
  _OWORD v120[6];
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125[62];
  _BYTE v126[496];
  uint64_t v127;
  __n128 v128;
  char v129;
  _BYTE v130[16];
  __n128 v131;
  char v132;
  uint64_t v133;

  v3 = MEMORY[0x24BDAC7A8](a1);
  v133 = sub_23B1C5E4C();
  v88 = *(_QWORD **)(v133 - 8);
  v4 = MEMORY[0x24BDAC7A8](v133);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v75 - v7;
  result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 152))(result);
  swift_release();
  if ((v10 & 8) != 0)
  {
    v18 = 0;
    return v18 & 1;
  }
  v86 = v1;
  v87 = v1 + 16;
  memcpy(v114, (const void *)(v3 + 512), sizeof(v114));
  memcpy(v113, (const void *)(v3 + 512), sizeof(v113));
  v11 = *(__n128 *)(v3 + 672);
  v116[2] = *(__n128 *)(v3 + 688);
  v12 = *(__n128 *)(v3 + 720);
  v116[3] = *(__n128 *)(v3 + 704);
  v116[4] = v12;
  v116[5] = *(__n128 *)(v3 + 736);
  v13 = *(_OWORD *)(v3 + 608);
  v115[7] = *(_OWORD *)(v3 + 624);
  v14 = *(__n128 *)(v3 + 656);
  v115[8] = *(_OWORD *)(v3 + 640);
  v116[0] = v14;
  v116[1] = v11;
  v15 = *(_OWORD *)(v3 + 544);
  v115[3] = *(_OWORD *)(v3 + 560);
  v16 = *(_OWORD *)(v3 + 592);
  v115[4] = *(_OWORD *)(v3 + 576);
  v115[5] = v16;
  v115[6] = v13;
  v17 = *(_OWORD *)(v3 + 528);
  v115[0] = *(_OWORD *)(v3 + 512);
  v115[1] = v17;
  v115[2] = v15;
  sub_23AA724E8((uint64_t)v115, (uint64_t)v118, (uint64_t *)&unk_2542E7420);
  sub_23AA724E8((uint64_t)v118, (uint64_t)v130, (uint64_t *)&unk_2542E7420);
  if (v130[8] == 255 || (sub_23ADF1BC0(v116, &v117), sub_23ADF1BC0(&v117, &v131), v132 != 1))
  {
    v120[3] = v114[24];
    v120[4] = v114[25];
    v120[5] = v114[26];
    v121 = *(_QWORD *)&v114[27];
    v119[5] = v114[20];
    v120[0] = v114[21];
    v120[1] = v114[22];
    v120[2] = v114[23];
    v119[1] = v114[16];
    v119[2] = v114[17];
    v119[3] = v114[18];
    v119[4] = v114[19];
    v119[0] = v114[15];
    sub_23AA724E8((uint64_t)v119, (uint64_t)&v123, &qword_2542E7550);
    sub_23AA724E8((uint64_t)&v123, (uint64_t)&v127, &qword_2542E7550);
    if (!v127 || (sub_23ADF1BC0((__n128 *)((char *)v120 + 8), &v122), sub_23ADF1BC0(&v122, &v128), v129 != 1))
    {
      v18 = 0;
      return v18 & 1;
    }
  }
  sub_23AA724E8(v3 + 1040, (uint64_t)v110, qword_2542E6E20);
  memcpy(v111, v113, sizeof(v111));
  nullsub_1(v111);
  sub_23AA724E8((uint64_t)v110, (uint64_t)v112, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v112) == 1)
  {
    sub_23AA724E8((uint64_t)v110, (uint64_t)v103, qword_2542E6E20);
    sub_23AA724E8((uint64_t)v111, (uint64_t)&v103[62], qword_2542E6E20);
    sub_23ACFC940((uint64_t)v114);
    sub_23B057474((uint64_t)v103);
  }
  else
  {
    sub_23AA724E8((uint64_t)v110, (uint64_t)v103, qword_2542E6E20);
    memcpy(v126, v103, sizeof(v126));
    sub_23ADF2D34((uint64_t)v110, (voidsub_23AA88348);
    sub_23ACFC940((uint64_t)v114);
    v19 = sub_23B051C7C((uint64_t)v126, (uint64_t)v114);
    sub_23AAFC3AC((uint64_t)v114);
    sub_23ADF2D34((uint64_t)v110, (voidsub_23AAAEC3C);
    if (v19)
    {
      v20 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v21 = sub_23B1C5E40();
      v22 = sub_23B1C6A94();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_23AA66000, v21, v22, "item is still runnable after reconciliation, breaking loop", v23, 2u);
        MEMORY[0x23B8614BC](v23, -1, -1);
      }

      ((void (*)(char *, uint64_t))v88[1])(v8, v133);
      v18 = 0;
      return v18 & 1;
    }
  }
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_37;
  v24 = result;
  sub_23ACFC940((uint64_t)v114);
  v25 = sub_23B009CF4(v24);
  if (v2)
  {
    sub_23AAFC3AC((uint64_t)v114);
    swift_release();
    return v18 & 1;
  }
  v28 = v26;
  v29 = v27;
  v85 = v25;
  sub_23AAFC3AC((uint64_t)v114);
  swift_release();
  if (v85 >> 62 == 2 && v85 <= 0x8000000000000001)
  {
    v18 = v28 | v29;
    if (!(v28 | v29))
      return v18 & 1;
  }
  v82 = v28;
  v83 = (void *)v29;
  v78 = *(os_log_t *)v3;
  LODWORD(v84) = *(unsigned __int8 *)(v3 + 8);
  v30 = (const void *)(v3 + 16);
  memcpy(v102, (const void *)(v3 + 16), sizeof(v102));
  v79 = *(_QWORD *)(v3 + 1008);
  v31 = v79;
  v32 = *(_QWORD *)(v3 + 1016);
  v77 = *(_QWORD *)(v3 + 1024);
  v33 = *(unsigned __int8 *)(v3 + 1032);
  LODWORD(v80) = v33;
  v75 = v96;
  memcpy(v96, v30, sizeof(v96));
  *(_QWORD *)&v81 = v97;
  memcpy(v97, v114, sizeof(v97));
  v76 = v101;
  sub_23AA724E8((uint64_t)v111, (uint64_t)v101, qword_2542E6E20);
  v95 = (char)v84;
  v34 = v78;
  v94 = v78;
  *(_QWORD *)&v98 = v31;
  *((_QWORD *)&v98 + 1) = v32;
  v35 = v32;
  v36 = v77;
  v99 = v77;
  v100 = v33;
  v37 = objc_allocWithZone((Class)FPLoggerScope);
  sub_23ACFC940((uint64_t)v114);
  sub_23ACFC940((uint64_t)v114);
  sub_23ACFC940((uint64_t)v102);
  v38 = objc_msgSend(v37, sel_init);
  v39 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v103[0] = v34;
  LOBYTE(v103[1]) = (_BYTE)v84;
  memcpy(&v103[2], v102, 0x1F0uLL);
  memcpy(v104, v113, sizeof(v104));
  v105 = v79;
  v106 = v35;
  v107 = v36;
  v108 = (char)v80;
  sub_23AA724E8((uint64_t)v111, (uint64_t)&v109, qword_2542E6E20);
  sub_23B056E84((uint64_t)v103);
  v40 = v38;
  v41 = sub_23B1C5E40();
  v42 = sub_23B1C6A88();
  v43 = v42;
  v44 = os_log_type_enabled(v41, v42);
  v84 = v40;
  if (v44)
  {
    v45 = swift_slowAlloc();
    v80 = (_QWORD *)swift_slowAlloc();
    v79 = swift_slowAlloc();
    v92[0] = v79;
    *(_DWORD *)v45 = 138412546;
    v78 = v41;
    v46 = objc_msgSend(v40, sel_enter, v75);
    *(_QWORD *)&v90[0] = v46;
    LODWORD(v77) = v43;
    sub_23B1C6CBC();
    *v80 = v46;

    *(_WORD *)(v45 + 12) = 2082;
    sub_23ACFC940((uint64_t)v114);
    v47 = sub_23B02F54C();
    v49 = v48;
    sub_23AAFC3AC((uint64_t)v114);
    *(_QWORD *)&v90[0] = sub_23AABEC68(v47, v49, v92);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AEB0870((uint64_t)v103);
    v41 = v78;
    _os_log_impl(&dword_23AA66000, v78, (os_log_type_t)v77, "%@  ⚙️ reconciling: %{public}s", (uint8_t *)v45, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    v50 = v80;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v50, -1, -1);
    v51 = v79;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v51, -1, -1);
    MEMORY[0x23B8614BC](v45, -1, -1);
  }
  else
  {

    sub_23AEB0870((uint64_t)v103);
  }

  ((void (*)(char *, uint64_t))v88[1])(v6, v133);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  v52 = (_QWORD *)swift_allocObject();
  v53 = MEMORY[0x24BEE4AF8];
  v52[2] = MEMORY[0x24BEE4AF8];
  v52[3] = v53;
  v88 = v52 + 3;
  v52[4] = v53;
  v52[5] = v53;
  v80 = v52 + 5;
  v52[6] = 0;
  memcpy(v125, (const void *)v81, sizeof(v125));
  memcpy(v93, (const void *)v81, sizeof(v93));
  result = swift_weakLoadStrong();
  v54 = v83;
  if (!result)
    goto LABEL_38;
  v55 = result;
  sub_23ACFC940((uint64_t)v125);
  v56 = v85;
  v57 = v82;
  sub_23AB2277C(v85, v82, v54);
  sub_23B00B178(v125, v56, v57, v54, v55, (uint64_t)v52);
  v133 = 0;
  swift_release();
  sub_23AB22788(v56, v57, v54);
  sub_23AAFC3AC((uint64_t)v125);
  swift_beginAccess();
  v58 = v94;
  v59 = v95;
  memcpy(v89, v75, sizeof(v89));
  v81 = v98;
  v60 = v99;
  v61 = v100;
  sub_23AA724E8((uint64_t)v76, (uint64_t)v91, qword_2542E6E20);
  *(_QWORD *)&v90[0] = v58;
  BYTE8(v90[0]) = v59;
  memcpy(&v90[1], v89, 0x1F0uLL);
  memcpy(&v90[32], v93, 0x1F0uLL);
  v90[63] = v81;
  *(_QWORD *)&v90[64] = v60;
  BYTE8(v90[64]) = v61;
  sub_23AA724E8((uint64_t)v91, (uint64_t)&v90[65], qword_2542E6E20);
  memcpy(v92, v90, sizeof(v92));
  nullsub_1(v92);
  sub_23AA724E8((uint64_t)v92, (uint64_t)&v124, &qword_2569E7DA0);
  sub_23B056E84((uint64_t)v90);
  v62 = swift_bridgeObjectRetain();
  v63 = v133;
  sub_23AFFA71C(v62);
  if (v63)
  {
    swift_release();
    sub_23AEB0870((uint64_t)v90);
    swift_bridgeObjectRelease();
    v64 = v84;
    sub_23AB12138(v84);
    sub_23AB22788(v56, v57, v83);

    sub_23AEB0870((uint64_t)v90);
    return v18 & 1;
  }
  sub_23AEB0870((uint64_t)v90);
  swift_bridgeObjectRelease();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    v65 = swift_bridgeObjectRetain();
    sub_23ADF6FF0(v65, MEMORY[0x24BEE4AF8]);
    v66 = v83;
    swift_release();
    swift_bridgeObjectRelease();
    v67 = v80;
    swift_beginAccess();
    v68 = *v67;
    v69 = *(_QWORD *)(v68 + 16);
    if (v69)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v69; ++i)
      {
        v71 = *(_QWORD *)(v68 + 8 * i + 32);
        v72 = swift_retain();
        v73 = (void *)MEMORY[0x23B8601A8](v72);
        sub_23B00B614(v71);
        objc_autoreleasePoolPop(v73);
        swift_release();
      }
      swift_release();
      swift_bridgeObjectRelease();
      v66 = v83;
    }
    else
    {
      swift_release();
    }
    v74 = v84;
    sub_23AB12138(v84);
    sub_23AB22788(v85, v82, v66);

    sub_23AEB0870((uint64_t)v90);
    v18 = 1;
    return v18 & 1;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_23B009CF4(uint64_t a1)
{
  uint64_t v1;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 v10;
  __n128 v11;
  __n128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  double v17;
  _OWORD __src[40];
  __n128 v20[5];
  __int128 v21;
  _QWORD v22[27];
  uint64_t v23;
  _QWORD __dst[62];
  __n128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[6];
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  unsigned int v53;

  if (*(_QWORD *)(*(_QWORD *)(v1 + 448) + 16))
    return 0x8000000000000001;
  v4 = *(_OWORD *)(v1 + 416);
  *(_OWORD *)&v22[23] = *(_OWORD *)(v1 + 400);
  *(_OWORD *)&v22[25] = v4;
  v23 = *(_QWORD *)(v1 + 432);
  v5 = *(_OWORD *)(v1 + 352);
  *(_OWORD *)&v22[15] = *(_OWORD *)(v1 + 336);
  *(_OWORD *)&v22[17] = v5;
  v6 = *(_OWORD *)(v1 + 384);
  *(_OWORD *)&v22[19] = *(_OWORD *)(v1 + 368);
  *(_OWORD *)&v22[21] = v6;
  v7 = *(_OWORD *)(v1 + 288);
  *(_OWORD *)&v22[7] = *(_OWORD *)(v1 + 272);
  *(_OWORD *)&v22[9] = v7;
  v8 = *(_OWORD *)(v1 + 320);
  *(_OWORD *)&v22[11] = *(_OWORD *)(v1 + 304);
  *(_OWORD *)&v22[13] = v8;
  v9 = *(_OWORD *)(v1 + 256);
  *(_OWORD *)&v22[3] = *(_OWORD *)(v1 + 240);
  *(_OWORD *)&v22[5] = v9;
  if ((v23 & 3) == 0)
  {
    v10 = *(__n128 *)(v1 + 208);
    v20[3] = *(__n128 *)(v1 + 192);
    v20[4] = v10;
    v21 = *(_OWORD *)(v1 + 224);
    v11 = *(__n128 *)(v1 + 144);
    __src[39] = *(_OWORD *)(v1 + 128);
    v20[0] = v11;
    v12 = *(__n128 *)(v1 + 176);
    v20[1] = *(__n128 *)(v1 + 160);
    v20[2] = v12;
    v13 = *(_OWORD *)(v1 + 80);
    __src[35] = *(_OWORD *)(v1 + 64);
    __src[36] = v13;
    v14 = *(_OWORD *)(v1 + 112);
    __src[37] = *(_OWORD *)(v1 + 96);
    __src[38] = v14;
    v15 = *(_OWORD *)(v1 + 16);
    __src[31] = *(_OWORD *)v1;
    __src[32] = v15;
    v16 = *(_OWORD *)(v1 + 48);
    __src[33] = *(_OWORD *)(v1 + 32);
    __src[34] = v16;
    if ((BYTE8(v21) & 2) == 0)
    {
      sub_23ADF1BC0(v20, (__n128 *)v22);
      sub_23ADF1BC0((__n128 *)v22, &v25);
      __asm { BR              X10 }
    }
  }
  v53 = 128;
  v17 = sub_23AFFD9BC((uint64_t)__src);
  (*(void (**)(double))(*(_QWORD *)a1 + 176))(v17);
  memcpy(__dst, __src, sizeof(__dst));
  v39 = *(_OWORD *)&__dst[49];
  v40 = *(_OWORD *)&__dst[51];
  v41 = *(_OWORD *)&__dst[53];
  v35 = *(_OWORD *)&__dst[41];
  v36 = *(_OWORD *)&__dst[43];
  v38 = *(_OWORD *)&__dst[47];
  v37 = *(_OWORD *)&__dst[45];
  v31 = *(_OWORD *)&__dst[33];
  v32 = *(_OWORD *)&__dst[35];
  v34 = *(_OWORD *)&__dst[39];
  v33 = *(_OWORD *)&__dst[37];
  v27 = *(_OWORD *)&__dst[25];
  v28 = *(_OWORD *)&__dst[27];
  v30 = *(_OWORD *)&__dst[31];
  v29 = *(_OWORD *)&__dst[29];
  if ((__dst[54] & 3) == 0)
  {
    v48[4] = __src[10];
    v48[5] = __src[11];
    v49 = *(_QWORD *)&__src[12];
    v48[0] = __src[6];
    v48[1] = __src[7];
    v48[3] = __src[9];
    v48[2] = __src[8];
    v44 = __src[2];
    v45 = __src[3];
    v47 = __src[5];
    v46 = __src[4];
    v43 = __src[1];
    v42 = __src[0];
    if ((__src[12] & 2) == 0)
    {
      sub_23ADF1BC0((__n128 *)((char *)v48 + 8), &v50);
      sub_23ADF1BC0(&v50, &v51);
      __asm { BR              X10 }
    }
  }
  sub_23AAFCF50((uint64_t)__dst);
  swift_release();
  if (v53 >> 6 == 2)
    return 0x8000000000000000;
  else
    return 0;
}

unint64_t sub_23B00A738(uint64_t a1)
{
  uint64_t v1;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  double v17;
  _OWORD __src[37];
  _OWORD v20[6];
  uint64_t v21;
  _QWORD v22[31];
  __int128 v23;
  _OWORD __dst[31];
  __n128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __n128 v49[6];
  __n128 v50;
  __n128 v51;
  unsigned int v53;

  if (*(_QWORD *)(*(_QWORD *)(v1 + 448) + 16))
    return 0x8000000000000001;
  v4 = *(_OWORD *)(v1 + 248);
  v5 = *(_OWORD *)(v1 + 216);
  *(_OWORD *)&v22[3] = *(_OWORD *)(v1 + 200);
  *(_OWORD *)&v22[5] = v5;
  *(_OWORD *)&v22[7] = *(_OWORD *)(v1 + 232);
  *(_OWORD *)&v22[9] = v4;
  v6 = *(_OWORD *)(v1 + 408);
  *(_OWORD *)&v22[27] = *(_OWORD *)(v1 + 392);
  *(_OWORD *)&v22[29] = v6;
  v23 = *(_OWORD *)(v1 + 424);
  v7 = *(_OWORD *)(v1 + 344);
  *(_OWORD *)&v22[19] = *(_OWORD *)(v1 + 328);
  *(_OWORD *)&v22[21] = v7;
  v8 = *(_OWORD *)(v1 + 376);
  *(_OWORD *)&v22[23] = *(_OWORD *)(v1 + 360);
  *(_OWORD *)&v22[25] = v8;
  v9 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)&v22[11] = *(_OWORD *)(v1 + 264);
  *(_OWORD *)&v22[13] = v9;
  v10 = *(_OWORD *)(v1 + 312);
  *(_OWORD *)&v22[15] = *(_OWORD *)(v1 + 296);
  *(_OWORD *)&v22[17] = v10;
  if ((BYTE8(v23) & 3) == 0)
  {
    v11 = *(_OWORD *)(v1 + 176);
    v20[4] = *(_OWORD *)(v1 + 160);
    v20[5] = v11;
    v21 = *(_QWORD *)(v1 + 192);
    v12 = *(_OWORD *)(v1 + 112);
    v20[0] = *(_OWORD *)(v1 + 96);
    v20[1] = v12;
    v13 = *(_OWORD *)(v1 + 144);
    v20[2] = *(_OWORD *)(v1 + 128);
    v20[3] = v13;
    v14 = *(_OWORD *)(v1 + 48);
    __src[33] = *(_OWORD *)(v1 + 32);
    __src[34] = v14;
    v15 = *(_OWORD *)(v1 + 80);
    __src[35] = *(_OWORD *)(v1 + 64);
    __src[36] = v15;
    v16 = *(_OWORD *)(v1 + 16);
    __src[31] = *(_OWORD *)v1;
    __src[32] = v16;
    if ((v21 & 2) == 0)
    {
      sub_23ADF1BC0((__n128 *)((char *)v20 + 8), (__n128 *)v22);
      sub_23ADF1BC0((__n128 *)v22, &v25);
      __asm { BR              X10 }
    }
  }
  v53 = 128;
  v17 = sub_23AFFDC50((uint64_t)__src);
  (*(void (**)(double))(*(_QWORD *)a1 + 176))(v17);
  memcpy(__dst, __src, sizeof(__dst));
  v37 = __dst[25];
  v38 = __dst[26];
  v39 = *(_QWORD *)&__dst[27];
  v33 = __dst[21];
  v34 = __dst[22];
  v36 = __dst[24];
  v35 = __dst[23];
  v29 = __dst[17];
  v30 = __dst[18];
  v32 = __dst[20];
  v31 = __dst[19];
  v28 = __dst[16];
  v27 = __dst[15];
  if ((__dst[27] & 3) == 0)
  {
    v49[3] = (__n128)__src[12];
    v49[4] = (__n128)__src[13];
    v49[5] = (__n128)__src[14];
    v48 = __src[8];
    v49[0] = (__n128)__src[9];
    v49[2] = (__n128)__src[11];
    v49[1] = (__n128)__src[10];
    v44 = __src[4];
    v45 = __src[5];
    v47 = __src[7];
    v46 = __src[6];
    v40 = __src[0];
    v41 = __src[1];
    v43 = __src[3];
    v42 = __src[2];
    if ((BYTE8(__src[14]) & 2) == 0)
    {
      sub_23ADF1BC0(v49, &v50);
      sub_23ADF1BC0(&v50, &v51);
      __asm { BR              X10 }
    }
  }
  sub_23AAFC3AC((uint64_t)__dst);
  swift_release();
  if (v53 >> 6 == 2)
    return 0x8000000000000000;
  else
    return 0;
}

void sub_23B00B178(uint64_t *a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  id v28;
  _QWORD *v29;
  void (*v30)(_QWORD *);
  id v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *);
  id v35;
  _QWORD *v36;
  void (*v37)(_QWORD *);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD v44[62];
  _BYTE v45[496];
  _BYTE v46[504];
  uint64_t v47;

  v43 = a6;
  v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  MEMORY[0x24BDAC7A8](v39);
  v40 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  memcpy(v45, a1, sizeof(v45));
  sub_23ACFC940((uint64_t)a1);
  if (a2 >> 7 == 0xFFFFFFFF)
  {
    v14 = sub_23B009CF4(a5);
    v47 = v6;
    if (v6)
    {
      sub_23AAFC3AC((uint64_t)a1);
      return;
    }
    v17 = v14;
    v18 = v15;
    v19 = v16;
  }
  else
  {
    v47 = v6;
    v17 = a2;
    v18 = a3;
    v19 = (unint64_t)a4;
  }
  sub_23AD44150(a2, a3, a4);
  v20 = sub_23AAFC3AC((uint64_t)a1);
  if (!(v17 >> 62))
  {
    sub_23B0205E8(v17);
    goto LABEL_10;
  }
  if (v17 >> 62 == 1)
  {
    v21 = sub_23AFFD9BC((uint64_t)v44);
    (*(void (**)(double))(*(_QWORD *)a5 + 176))(v21);
    (*(void (**)(void))(*(_QWORD *)v43 + 184))();
    memcpy(v46, v44, 0x1F0uLL);
    sub_23B0230DC(v17);
    sub_23AAFCF50((uint64_t)v46);
    swift_release();
    swift_release();
LABEL_10:
    sub_23AB22788(v17, v18, (void *)v19);
    return;
  }
  if ((uint64_t)v17 >= (uint64_t)0x8000000000000002 || v19 | v18)
  {
    v22 = *((unsigned __int8 *)a1 + 8);
    v23 = (void *)a1[30];
    if (v22 == 255)
    {
      v33 = v43;
      if (!v23)
      {
        MEMORY[0x24BDAC7A8](v20);
        *(&v39 - 2) = (uint64_t)v45;
        sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23B057890, (uint64_t)(&v39 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Reconciliation.swift", 104, 2, 59);
      }
      v44[0] = v23;
      v44[1] = 256;
      memset(&v44[2], 0, 99);
      BYTE3(v44[14]) = 3;
      v34 = *(void (**)(_QWORD *))(*(_QWORD *)v43 + 136);
      v35 = v23;
      v34(v44);
      v36 = v42;
      *v42 = v35;
      *((_BYTE *)v36 + 8) = 0;
      v36[2] = 0xD000000000000016;
      v36[3] = 0x800000023B201500;
      swift_storeEnumTagMultiPayload();
      v37 = *(void (**)(_QWORD *))(*(_QWORD *)v33 + 128);
      v31 = v35;
      v37(v36);
      v32 = (uint64_t)v36;
      goto LABEL_18;
    }
    v24 = *a1;
    v44[0] = *a1;
    v44[1] = v22;
    memset(&v44[2], 0, 99);
    BYTE3(v44[14]) = 3;
    v25 = v43;
    (*(void (**)(_QWORD *))(*(_QWORD *)v43 + 136))(v44);
    if (v23)
    {
      v26 = (uint64_t)v40;
      *v40 = v24;
      *(_BYTE *)(v26 + 8) = v22;
      *(_BYTE *)(v26 + 9) = 0;
      *(_QWORD *)(v26 + 16) = 0xD000000000000015;
      *(_QWORD *)(v26 + 24) = 0x800000023B201520;
      swift_storeEnumTagMultiPayload();
      v27 = *(void (**)(uint64_t))(*(_QWORD *)v25 + 120);
      v28 = v23;
      v27(v26);
      sub_23AA8A05C(v26, (uint64_t *)&unk_2542DDDA0);
      v29 = v42;
      *v42 = v28;
      *((_BYTE *)v29 + 8) = 0;
      v29[2] = 0xD000000000000015;
      v29[3] = 0x800000023B201520;
      swift_storeEnumTagMultiPayload();
      v30 = *(void (**)(_QWORD *))(*(_QWORD *)v25 + 128);
      v31 = v28;
      v30(v29);
      v32 = (uint64_t)v29;
LABEL_18:
      sub_23AA8A05C(v32, (uint64_t *)&unk_2542E0F90);

      return;
    }
    v38 = (uint64_t)v40;
    *v40 = v24;
    *(_BYTE *)(v38 + 8) = v22;
    *(_BYTE *)(v38 + 9) = 0;
    *(_QWORD *)(v38 + 16) = 0xD000000000000016;
    *(_QWORD *)(v38 + 24) = 0x800000023B201500;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t))(*(_QWORD *)v25 + 120))(v38);
    sub_23AA8A05C(v38, (uint64_t *)&unk_2542DDDA0);
  }
}

uint64_t sub_23B00B614(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  double v7;
  double v8;
  double v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;

  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) == 0)
  {
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    swift_retain();
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v8 = v7;
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9 = v8 * 1000000000.0;
    if ((~COERCE__INT64(v8 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
          goto LABEL_11;
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  result = swift_weakLoadStrong();
  if (result)
  {
    a1 &= ~0x8000000000000000;
    v10 = *(void (**)(uint64_t))(*(_QWORD *)result + 176);
    v11 = swift_retain();
    v10(v11);
    swift_release();
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v13 = v12;
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9 = v13 * 1000000000.0;
    if ((~COERCE__INT64(v13 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
        {
LABEL_11:
          sub_23ADF3A98(a1, (uint64_t)v9);
          swift_release();
          return swift_release();
        }
        goto LABEL_17;
      }
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

void *sub_23B00B814()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  void *v10;
  unint64_t v11;
  char v12;
  void *v13;
  unint64_t v14;
  char v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  unsigned __int8 v47;
  char v48;
  void *v49;
  void *v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  char v61;
  _QWORD v62[14];
  unsigned __int16 v63;
  unsigned __int8 v64;
  _BYTE v65[115];
  char v66;

  sub_23AA724E8(v0, (uint64_t)v62, qword_2542E1408);
  v2 = (void *)v62[0];
  v1 = v62[1];
  v39 = (void *)v62[2];
  v40 = (void *)v62[3];
  v41 = v62[4];
  v42 = v62[5];
  v43 = v62[6];
  v44 = v62[7];
  v45 = v62[8];
  v3 = v62[10];
  v38 = v62[9];
  v4 = v62[11];
  v5 = v62[12];
  v6 = v62[13];
  v7 = v64;
  v8 = v63;
  sub_23AA724E8(v0, (uint64_t)&v46, qword_2542E1408);
  sub_23AA724E8(v0, (uint64_t)v65, qword_2542E1408);
  switch(v66)
  {
    case 8:
      v10 = v49;
      v13 = v50;
      v14 = v51;
      v15 = BYTE2(v57);
      if (BYTE2(v57) == 12)
      {
        v10 = v50;
        v19 = v38;
        if (BYTE1(v49) >= 2u)
        {
          sub_23AA88218(v2, v1, BYTE1(v1) & 1);
          sub_23AEAD70C(v39, v40, v41, v42, v43, v44, v45, v38, v3, SBYTE2(v3));
          goto LABEL_24;
        }
      }
      else
      {
        if (BYTE2(v57) != 2)
        {
          if (BYTE2(v57))
          {
            v22 = v57;
            v23 = v56;
            v35 = v54;
            v37 = v55;
            v31 = v52;
            v33 = v53;
            sub_23AA88218(v2, v1, BYTE1(v1) & 1);
            sub_23AEAD70C(v39, v40, v41, v42, v43, v44, v45, v38, v3, SBYTE2(v3));
            sub_23AEAD8A8(v10, v13, v14, v31, v33, v35, v37, v23, v22, v15);
            goto LABEL_24;
          }
          v10 = v50;
        }
        v19 = v38;
      }
      sub_23AA88218(v2, v1, BYTE1(v1) & 1);
      sub_23AEAD70C(v39, v40, v41, v42, v43, v44, v45, v19, v3, SBYTE2(v3));
LABEL_25:
      sub_23AA862DC(v46, v47, v48);
      return v10;
    case 11:
      v10 = v49;
      v16 = v46;
      v17 = v48;
      v18 = v47;
      sub_23AA88218(v2, v1, BYTE1(v1) & 1);
      sub_23AA862DC(v16, v18, v17);
      break;
    case 9:
      v9 = v8 | (v7 << 16);
      v10 = v49;
      v11 = v51;
      v12 = v61;
      switch(v61)
      {
        case 12:
          v10 = v50;
          if (BYTE1(v49) < 2u)
            goto LABEL_20;
          sub_23AA88218(v2, v1, BYTE1(v1) & 1);
          sub_23AEAD7F8(v39, v40, v41, v42, v43, v44, v45, v38, v3, v4, v5, v6, v9, SBYTE2(v9));
          break;
        case 2:
          goto LABEL_20;
        case 0:
          v10 = v50;
LABEL_20:
          sub_23AA88218(v2, v1, BYTE1(v1) & 1);
          sub_23AEAD7F8(v39, v40, v41, v42, v43, v44, v45, v38, v3, v4, v5, v6, v9, SBYTE2(v9));
          goto LABEL_25;
        default:
          v30 = v60;
          v28 = v58;
          v29 = v59;
          v27 = v57;
          v34 = v55;
          v36 = v56;
          v32 = v54;
          v25 = v52;
          v26 = v53;
          v20 = v2;
          v21 = v50;
          sub_23AA88218(v20, v1, BYTE1(v1) & 1);
          sub_23AEAD7F8(v39, v40, v41, v42, v43, v44, v45, v38, v3, v4, v5, v6, v9, SBYTE2(v9));
          sub_23AEAD994(v10, v21, v11, v25, v26, v32, v34, v36, v27, *((uint64_t *)&v27 + 1), v28, v29, v30, v12);
          break;
      }
LABEL_24:
      v10 = 0;
      goto LABEL_25;
    default:
      return 0;
  }
  return v10;
}

unint64_t sub_23B00BC14(unint64_t result, unint64_t a2)
{
  if (a2 > result)
    return a2;
  return result;
}

uint64_t sub_23B00BC20(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  BOOL v43;
  BOOL v44;
  _BYTE *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t, uint64_t, uint64_t, id *);
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(id *__return_ptr, void **, uint64_t);
  void *v155;
  id v156;
  uint64_t v157;
  uint64_t result;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  void *v162;
  _QWORD *v163;
  id v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD v179[62];
  _BYTE v180[504];
  uint64_t v181;
  unint64_t v182;
  void *v183;
  __int16 v184;
  id v185[63];
  uint64_t v186;
  unsigned __int8 v187;
  _OWORD v188[15];
  _BYTE v189[16];
  _OWORD v190[6];
  _OWORD v191[6];
  uint64_t v192;
  char v193[8];
  __n128 v194;
  __n128 v195;
  char v196;
  uint64_t v197;
  _BYTE v198[32];
  uint64_t v199;

  v176 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v15 = *(unsigned __int8 *)(a4 + 208);
  if (v15 == 255)
  {
LABEL_8:
    v22 = 0;
    goto LABEL_9;
  }
  v186 = *(_QWORD *)(a4 + 200);
  v187 = v15;
  v16 = *(_OWORD *)(a2 + 176);
  v191[4] = *(_OWORD *)(a2 + 160);
  v191[5] = v16;
  v192 = *(_QWORD *)(a2 + 192);
  v17 = *(_OWORD *)(a2 + 112);
  v191[0] = *(_OWORD *)(a2 + 96);
  v191[1] = v17;
  v18 = *(_OWORD *)(a2 + 144);
  v191[2] = *(_OWORD *)(a2 + 128);
  v191[3] = v18;
  v19 = *(_OWORD *)(a2 + 48);
  v190[2] = *(_OWORD *)(a2 + 32);
  v190[3] = v19;
  v20 = *(_OWORD *)(a2 + 80);
  v190[4] = *(_OWORD *)(a2 + 64);
  v190[5] = v20;
  v21 = *(_OWORD *)(a2 + 16);
  v190[0] = *(_OWORD *)a2;
  v190[1] = v21;
  v22 = BYTE1(v191[0]);
  if (!BYTE1(v191[0]))
  {
LABEL_9:
    *a1 = 0;
    *((_WORD *)a1 + 4) = -256;
    return v22 & 1;
  }
  v178 = (uint64_t)&v166 - v13;
  v175 = v14;
  v199 = a3;
  v172 = a2;
  v173 = v5;
  v174 = a1;
  (*(void (**)(uint64_t))(*(_QWORD *)v176 + 248))(v12);
  v23 = sub_23B1C701C();
  swift_release();
  swift_retain();
  sub_23B1C70C4();
  v24 = (uint64_t)v185[0];
  if ((~(uint64_t)v185[0] & 0xF000000000000007) != 0)
  {
    v177 = v23;
    while (1)
    {
      if ((v24 & 0x8000000000000000) == 0)
        goto LABEL_22;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5ED0);
      v47 = swift_dynamicCastClass();
      if (!v47)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5568);
        v57 = swift_dynamicCastClass();
        if (!v57)
          goto LABEL_22;
        v48 = v57;
        v58 = v57 + *(_QWORD *)(*(_QWORD *)v57 + 624);
        swift_beginAccess();
        v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
        v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48);
        v61 = v60(v58, 1, v59);
        v53 = v175;
        if (v61)
        {
LABEL_20:
          sub_23AA8EFC8(v199, v53, (uint64_t *)&unk_2542E4760);
LABEL_21:
          sub_23AA8A05C(v53, (uint64_t *)&unk_2542E4760);
          goto LABEL_22;
        }
        v62 = *(_QWORD *)v58;
        v63 = v187;
        if (*(_BYTE *)(v58 + 8))
        {
          if (*(_BYTE *)(v58 + 8) == 1)
          {
            v53 = v175;
            if (v187 != 1)
              goto LABEL_20;
            v53 = v175;
            v64 = v186;
            sub_23AA8EFC8(v199, v175, (uint64_t *)&unk_2542E4760);
            if (v62 != v64)
              goto LABEL_21;
          }
          else
          {
            v171 = v186;
            v53 = v175;
            sub_23AA8EFC8(v199, v175, (uint64_t *)&unk_2542E4760);
            if (v62)
            {
              if (v171 != 1)
                goto LABEL_21;
            }
            else if (v171)
            {
              goto LABEL_21;
            }
            v53 = v175;
            if (v63 != 2)
              goto LABEL_21;
          }
        }
        else
        {
          v53 = v175;
          if (v187)
            goto LABEL_20;
          v53 = v175;
          if ((_DWORD)v62 != (_DWORD)v186)
            goto LABEL_20;
          sub_23AA8EFC8(v199, v175, (uint64_t *)&unk_2542E4760);
        }
        v108 = *(_QWORD *)(*(_QWORD *)(v176 + 40) + 16);
        if (v60(v58, 1, v59) == 1)
          goto LABEL_163;
        v110 = *(_QWORD *)(v58 + 16);
        v109 = *(_QWORD *)(v58 + 24);
        v111 = v175;
        v112 = *(_QWORD *)(v175 + 80);
        v170 = *(_QWORD *)(v175 + 88);
        v171 = v112;
        v113 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v108 + 112);
        sub_23B057898(v24);
        swift_retain();
        v114 = swift_bridgeObjectRetain();
        if ((v113(v114) & 1) == 0)
        {
          v185[0] = (id)v110;
          v185[1] = (id)v109;
          v181 = v171;
          v182 = v170;
          sub_23AAA420C();
          v72 = sub_23B1C6D04();
          sub_23AB22830(v24);
          swift_release();
          swift_bridgeObjectRelease();
          v73 = v111;
LABEL_89:
          sub_23AA8A05C(v73, (uint64_t *)&unk_2542E4760);
          if (!v72)
            goto LABEL_156;
          goto LABEL_22;
        }
        if ((v109 & 0x2000000000000000) != 0)
          v115 = HIBYTE(v109) & 0xF;
        else
          v115 = v110 & 0xFFFFFFFFFFFFLL;
        v116 = 11;
        if (((v109 >> 60) & ((v110 & 0x800000000000000) == 0)) == 0)
          v116 = 7;
        v167 = v116;
        v117 = v110;
        v169 = v108;
        v118 = v170;
        if (!v115)
          goto LABEL_103;
        swift_bridgeObjectRetain();
        v119 = sub_23B1C65A8();
        v121 = v120;
        swift_bridgeObjectRelease();
        if (v119 == 12565487 && v121 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_101;
        }
        v122 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v122 & 1) != 0)
        {
LABEL_101:
          swift_bridgeObjectRetain();
          if (4 * v115 < (unint64_t)sub_23B1C64B8() >> 14)
            goto LABEL_160;
          v123 = sub_23B1C65C0();
          v125 = v124;
          v127 = v126;
          v129 = v128;
          swift_bridgeObjectRelease();
          v130 = MEMORY[0x23B85ED8C](v123, v125, v127, v129);
          v167 = v131;
          v168 = v130;
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_103:
          v168 = v117;
          swift_bridgeObjectRetain();
          v167 = v109;
        }
        v132 = v171;
        if ((v118 & 0x2000000000000000) != 0)
          v133 = HIBYTE(v118) & 0xF;
        else
          v133 = v171 & 0xFFFFFFFFFFFFLL;
        if (!v133)
          goto LABEL_114;
        v166 = v109;
        swift_bridgeObjectRetain();
        v134 = sub_23B1C65A8();
        v136 = v135;
        swift_bridgeObjectRelease();
        if (v134 == 12565487 && v136 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_112;
        }
        v137 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        v132 = v171;
        if ((v137 & 1) != 0)
        {
LABEL_112:
          swift_bridgeObjectRetain();
          if (4 * v133 < (unint64_t)sub_23B1C64B8() >> 14)
            goto LABEL_161;
          v138 = sub_23B1C65C0();
          v140 = v139;
          v142 = v141;
          v144 = v143;
          swift_bridgeObjectRelease();
          v145 = MEMORY[0x23B85ED8C](v138, v140, v142, v144);
          v118 = v146;
          swift_bridgeObjectRelease();
          v132 = v145;
        }
        else
        {
LABEL_114:
          swift_bridgeObjectRetain();
        }
        if (v168 == v132 && v167 == v118)
        {
          swift_bridgeObjectRelease_n();
          sub_23AB22830(v24);
          swift_release();
          swift_bridgeObjectRelease();
          v161 = v175;
          goto LABEL_155;
        }
        v106 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AB22830(v24);
        swift_release();
        swift_bridgeObjectRelease();
        v107 = v175;
        goto LABEL_118;
      }
      v48 = v47;
      v49 = v47 + *(_QWORD *)(*(_QWORD *)v47 + 616);
      swift_beginAccess();
      v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
      v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48);
      v52 = v51(v49, 1, v50);
      v53 = v178;
      if (v52)
        goto LABEL_20;
      v54 = *(_QWORD *)v49;
      v55 = v187;
      if (*(_BYTE *)(v49 + 8))
      {
        if (*(_BYTE *)(v49 + 8) == 1)
        {
          v53 = v178;
          if (v187 != 1)
            goto LABEL_20;
          v53 = v178;
          v56 = v186;
          sub_23AA8EFC8(v199, v178, (uint64_t *)&unk_2542E4760);
          if (v54 != v56)
            goto LABEL_21;
        }
        else
        {
          v171 = v186;
          v53 = v178;
          sub_23AA8EFC8(v199, v178, (uint64_t *)&unk_2542E4760);
          if (v54)
          {
            if (v171 != 1)
              goto LABEL_21;
          }
          else if (v171)
          {
            goto LABEL_21;
          }
          v53 = v178;
          if (v55 != 2)
            goto LABEL_21;
        }
      }
      else
      {
        v53 = v178;
        if (v187)
          goto LABEL_20;
        v53 = v178;
        if ((_DWORD)v54 != (_DWORD)v186)
          goto LABEL_20;
        sub_23AA8EFC8(v199, v178, (uint64_t *)&unk_2542E4760);
      }
      v65 = *(_QWORD *)(*(_QWORD *)(v176 + 40) + 16);
      if (v51(v49, 1, v50) == 1)
        goto LABEL_162;
      v67 = *(_QWORD *)(v49 + 16);
      v66 = *(_QWORD *)(v49 + 24);
      v68 = v178;
      v69 = *(_QWORD *)(v178 + 80);
      v170 = *(_QWORD *)(v178 + 88);
      v171 = v69;
      v70 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v65 + 112);
      swift_retain();
      swift_bridgeObjectRetain();
      v71 = sub_23B057898(v24);
      if ((v70(v71) & 1) == 0)
      {
        v185[0] = (id)v67;
        v185[1] = (id)v66;
        v181 = v171;
        v182 = v170;
        sub_23AAA420C();
        v72 = sub_23B1C6D04();
        sub_23AB22830(v24);
        swift_release();
        swift_bridgeObjectRelease();
        v73 = v68;
        goto LABEL_89;
      }
      if ((v66 & 0x2000000000000000) != 0)
        v74 = HIBYTE(v66) & 0xF;
      else
        v74 = v67 & 0xFFFFFFFFFFFFLL;
      v75 = 11;
      if (((v66 >> 60) & ((v67 & 0x800000000000000) == 0)) == 0)
        v75 = 7;
      v166 = v75;
      v168 = v65;
      v169 = v66;
      if (!v74)
        break;
      swift_bridgeObjectRetain();
      v76 = sub_23B1C65A8();
      v78 = v77;
      swift_bridgeObjectRelease();
      if (v76 == 12565487 && v78 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v80 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        v66 = v169;
        if ((v80 & 1) == 0)
          break;
      }
      swift_bridgeObjectRetain();
      if (4 * v74 < (unint64_t)sub_23B1C64B8() >> 14)
      {
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        swift_retain();
        sub_23B057898(v24);
        swift_release();
        __break(1u);
LABEL_163:
        sub_23B057898(v24);
        swift_retain();
        result = swift_release();
        __break(1u);
        return result;
      }
      v81 = sub_23B1C65C0();
      v83 = v82;
      v85 = v84;
      v87 = v86;
      swift_bridgeObjectRelease();
      v88 = MEMORY[0x23B85ED8C](v81, v83, v85, v87);
      v166 = v89;
      v167 = v88;
      swift_bridgeObjectRelease();
LABEL_70:
      v91 = v170;
      v90 = v171;
      if ((v170 & 0x2000000000000000) != 0)
        v92 = HIBYTE(v170) & 0xF;
      else
        v92 = v171 & 0xFFFFFFFFFFFFLL;
      if (v92)
      {
        swift_bridgeObjectRetain();
        v93 = sub_23B1C65A8();
        v95 = v94;
        swift_bridgeObjectRelease();
        if (v93 == 12565487 && v95 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_78:
          swift_bridgeObjectRetain();
          if (4 * v92 < (unint64_t)sub_23B1C64B8() >> 14)
            goto LABEL_159;
          v97 = sub_23B1C65C0();
          v99 = v98;
          v101 = v100;
          v103 = v102;
          swift_bridgeObjectRelease();
          v104 = MEMORY[0x23B85ED8C](v97, v99, v101, v103);
          v91 = v105;
          swift_bridgeObjectRelease();
          v90 = v104;
          goto LABEL_81;
        }
        v96 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        v90 = v171;
        if ((v96 & 1) != 0)
          goto LABEL_78;
      }
      swift_bridgeObjectRetain();
LABEL_81:
      if (v167 == v90 && v166 == v91)
      {
        swift_bridgeObjectRelease_n();
        sub_23AB22830(v24);
        swift_release();
        swift_bridgeObjectRelease();
        v161 = v178;
LABEL_155:
        sub_23AA8A05C(v161, (uint64_t *)&unk_2542E4760);
LABEL_156:
        swift_release_n();
        v162 = *(void **)(v48 + 136);
        v163 = v174;
        *v174 = v162;
        v164 = v162;
        sub_23AB22830(v24);
        *((_BYTE *)v163 + 9) = 0;
        v22 = 1;
        return v22 & 1;
      }
      v106 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AB22830(v24);
      swift_release();
      swift_bridgeObjectRelease();
      v107 = v178;
LABEL_118:
      sub_23AA8A05C(v107, (uint64_t *)&unk_2542E4760);
      if ((v106 & 1) != 0)
        goto LABEL_156;
LABEL_22:
      sub_23AB22830(v24);
      sub_23B1C70C4();
      v24 = (uint64_t)v185[0];
      if ((~(uint64_t)v185[0] & 0xF000000000000007) == 0)
        goto LABEL_4;
    }
    v167 = v67;
    swift_bridgeObjectRetain();
    v166 = v66;
    goto LABEL_70;
  }
LABEL_4:
  swift_release_n();
  sub_23ADF1BC0((__n128 *)((char *)v191 + 8), &v194);
  sub_23ADF1BC0(&v194, &v195);
  v25 = v173;
  a1 = v174;
  v26 = v199;
  if (v196 != 2)
  {
    sub_23AA724E8((uint64_t)v190, (uint64_t)v193, &qword_2542E7550);
    sub_23AA724E8((uint64_t)v193, (uint64_t)&v197, &qword_2542E7550);
    if (!v197)
      goto LABEL_7;
    v27 = *(_OWORD *)(v172 + 248);
    v28 = *(_OWORD *)(v172 + 216);
    v188[0] = *(_OWORD *)(v172 + 200);
    v188[1] = v28;
    v188[2] = *(_OWORD *)(v172 + 232);
    v188[3] = v27;
    v29 = *(_OWORD *)(v172 + 408);
    v188[12] = *(_OWORD *)(v172 + 392);
    v188[13] = v29;
    v188[14] = *(_OWORD *)(v172 + 424);
    v30 = *(_OWORD *)(v172 + 344);
    v188[8] = *(_OWORD *)(v172 + 328);
    v188[9] = v30;
    v31 = *(_OWORD *)(v172 + 376);
    v188[10] = *(_OWORD *)(v172 + 360);
    v188[11] = v31;
    v32 = *(_OWORD *)(v172 + 280);
    v188[4] = *(_OWORD *)(v172 + 264);
    v188[5] = v32;
    v33 = *(_OWORD *)(v172 + 312);
    v188[6] = *(_OWORD *)(v172 + 296);
    v188[7] = v33;
    sub_23AA724E8((uint64_t)v188, (uint64_t)v189, (uint64_t *)&unk_2542E7420);
    sub_23AA724E8((uint64_t)v189, (uint64_t)v198, (uint64_t *)&unk_2542E7420);
    if (v198[8] == 255)
    {
LABEL_7:
      if (*((_QWORD *)&v190[0] + 1))
        goto LABEL_8;
    }
  }
  v34 = v176;
  v35 = *(_BYTE **)(v176 + 32);
  if ((v35[32] & 1) != 0)
  {
LABEL_11:
    v36 = *(_QWORD *)(v34 + 40);
    v37 = *(_QWORD *)(v26 + 80);
    v38 = *(_QWORD *)(v26 + 88);
    v185[0] = 0;
    LOBYTE(v185[1]) = -1;
    v39 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, id *))(*(_QWORD *)v36 + 256))(&v186, v37, v38, v185);
    if (!v25)
    {
      v40 = *(_QWORD *)(v39 + 16);
      if (v40)
      {
        v41 = *(_QWORD *)(v172 + 200);
        v42 = *(unsigned __int8 *)(v172 + 208);
        v43 = v42 == 2;
        v44 = v41 == 1 && v42 == 2;
        if (v41)
          v43 = 0;
        v45 = (_BYTE *)(v39 + 40);
        v46 = v174;
        do
        {
          if (v42 != 255)
          {
            v159 = *((_QWORD *)v45 - 1);
            if (*v45)
            {
              if (*v45 == 1)
              {
                if (v42 == 1 && v159 == v41)
                  goto LABEL_147;
              }
              else if (v159)
              {
                if (v44)
                  goto LABEL_147;
              }
              else if (v43)
              {
                goto LABEL_147;
              }
            }
            else if (!*(_BYTE *)(v172 + 208) && (_DWORD)v159 == (_DWORD)v41)
            {
LABEL_147:
              swift_bridgeObjectRelease();
              v22 = 0;
              *v46 = 0;
              *((_WORD *)v46 + 4) = -256;
              return v22 & 1;
            }
          }
          v45 += 16;
          --v40;
        }
        while (v40);
        *v174 = 0;
        *((_WORD *)v46 + 4) = -256;
        v22 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        v22 = 0;
        v160 = v174;
        *v174 = 0;
        *((_WORD *)v160 + 4) = -256;
      }
    }
    return v22 & 1;
  }
  v147 = *(_QWORD *)(v26 + 80);
  v148 = *(_QWORD *)(v26 + 88);
  v185[0] = *(id *)v26;
  v149 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, id *))(*(_QWORD *)v35 + 256);
  v150 = v25;
  v151 = v185[0];
  v152 = v149(v26 + 8, v147, v148, v185);

  v25 = v150;
  if (v150)
    return v22 & 1;
  v153 = *(_QWORD *)(v152 + 16);
  if (!v153)
  {
    swift_bridgeObjectRelease();
LABEL_152:
    v34 = v176;
    goto LABEL_11;
  }
  v154 = *(void (**)(id *__return_ptr, void **, uint64_t))(**(_QWORD **)(v176 + 16) + 168);
  v155 = *(void **)(v152 + 32);
  v183 = v155;
  v184 = 0;
  v156 = v155;
  v154(v185, &v183, 1);
  v157 = 0;
  v178 = v153 - 1;
  while (1)
  {

    sub_23AA724E8((uint64_t)v185, (uint64_t)v180, &qword_2569E6458);
    sub_23AA724E8((uint64_t)v180, (uint64_t)&v181, &qword_2569E6458);
    if (sub_23AAFC2A4((uint64_t)&v181) == 1)
      goto LABEL_131;
    memcpy(v179, v185, sizeof(v179));
    if (LOBYTE(v179[26]) != 255)
    {
LABEL_125:
      sub_23AAFCF50((uint64_t)v179);
      goto LABEL_131;
    }
    if (LOBYTE(v179[15]))
      break;
    if ((v179[13] & 0x400) != 0)
      goto LABEL_125;
LABEL_130:
    sub_23AAFCF50((uint64_t)v179);
    if (!v179[1])
      goto LABEL_157;
LABEL_131:

    if (v178 == v157)
    {
      swift_bridgeObjectRelease();
      v26 = v199;
      goto LABEL_152;
    }
    v155 = *(void **)(v152 + 8 * v157 + 40);
    v183 = v155;
    v184 = 0;
    v156 = v155;
    v154(v185, &v183, 1);
    ++v157;
  }
  if (LOBYTE(v179[15]) != 2)
    goto LABEL_130;
  sub_23AAFCF50((uint64_t)v179);
LABEL_157:
  swift_bridgeObjectRelease();
  v165 = v174;
  *v174 = v155;
  *((_WORD *)v165 + 4) = 0;
  v22 = 1;
  return v22 & 1;
}

uint64_t sub_23B00CD38(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void (*v22)(id);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  unsigned int v56;
  _BYTE *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  unsigned int v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t result;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  unsigned __int8 v105;
  _BYTE *i;
  __int16 v107;
  id v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  _BYTE v112[12];
  int v113;
  __int128 *v114;
  uint64_t v115;
  _QWORD *v116;
  unsigned int (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  _QWORD v124[62];
  _BYTE v125[504];
  _QWORD v126[63];
  uint64_t v127;
  __int16 v128;
  _QWORD v129[63];
  id v130;
  _OWORD v131[12];
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __n128 v143[6];
  _BYTE v144[16];
  __n128 v145;
  __n128 v146;
  char v147;
  _BYTE v148[24];
  uint64_t v149;

  v122 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v120 = &v112[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v123 = &v112[-v13];
  v14 = *(void **)(a4 + 240);
  if (!v14)
    goto LABEL_23;
  v130 = *(id *)(a4 + 240);
  v15 = (__n128)a2[13];
  v143[3] = (__n128)a2[12];
  v143[4] = v15;
  v143[5] = (__n128)a2[14];
  v16 = (__n128)a2[9];
  v142 = a2[8];
  v143[0] = v16;
  v17 = (__n128)a2[10];
  v143[2] = (__n128)a2[11];
  v143[1] = v17;
  v18 = a2[5];
  v138 = a2[4];
  v139 = v18;
  v19 = a2[6];
  v141 = a2[7];
  v140 = v19;
  v20 = a2[1];
  v134 = *a2;
  v135 = v20;
  v21 = a2[2];
  v137 = a2[3];
  v136 = v21;
  if (!BYTE9(v142))
  {
    LOBYTE(v14) = 0;
LABEL_23:
    *(_QWORD *)a1 = 0;
    *(_WORD *)(a1 + 8) = -256;
    return v14 & 1;
  }
  v114 = a2;
  v115 = v5;
  v116 = (_QWORD *)a1;
  v22 = *(void (**)(id))(*(_QWORD *)a5 + 248);
  v23 = v14;
  v119 = a5;
  v22(v23);
  v24 = sub_23B1C701C();
  swift_release();
  swift_retain();
  sub_23B1C70C4();
  v25 = v129[0];
  v26 = v122;
  if ((~v129[0] & 0xF000000000000007) != 0)
  {
    v121 = v24;
    do
    {
      if ((v25 & 0x8000000000000000) == 0)
        goto LABEL_27;
      __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
      v51 = swift_dynamicCastClass();
      if (v51)
      {
        v52 = v51;
        v53 = v51 + *(_QWORD *)(*(_QWORD *)v51 + 616);
        swift_beginAccess();
        v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
        v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48);
        v56 = v55(v53, 1, v54);
        v57 = v123;
        if (!v56)
        {
          v117 = v55;
          v58 = *(void **)v53;
          v59 = v130;
          v60 = sub_23B1C63E0();
          v62 = v61;
          v63 = sub_23B1C63E0();
          v118 = v62;
          if (v60 == v63 && v62 == v64)
          {
            v83 = v58;
            v84 = v59;
            sub_23B057898(v25);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AA8EFC8(v122, (uint64_t)v123, (uint64_t *)&unk_2542E6B00);
LABEL_46:
            if (v117(v53, 1, v54) == 1)
            {
              swift_retain();
              swift_release();
              __break(1u);
LABEL_77:
              swift_retain();
              result = swift_release();
              __break(1u);
              return result;
            }
            v85 = *(_QWORD *)(v53 + 8);
            v86 = *(_QWORD *)(v53 + 16);
            v87 = v123;
            goto LABEL_51;
          }
          v113 = sub_23B1C7388();
          v66 = v58;
          v67 = v59;
          sub_23B057898(v25);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v26 = v122;
          v57 = v123;
          sub_23AA8EFC8(v122, (uint64_t)v123, (uint64_t *)&unk_2542E6B00);
          if ((v113 & 1) != 0)
            goto LABEL_46;
          goto LABEL_26;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69B0);
        v68 = swift_dynamicCastClass();
        if (!v68)
          goto LABEL_27;
        v52 = v68;
        v69 = v68 + *(_QWORD *)(*(_QWORD *)v68 + 624);
        swift_beginAccess();
        v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
        v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48);
        v72 = v71(v69, 1, v70);
        v57 = v120;
        if (!v72)
        {
          v117 = v71;
          v73 = *(void **)v69;
          v74 = v130;
          v75 = sub_23B1C63E0();
          v77 = v76;
          v78 = sub_23B1C63E0();
          v118 = v77;
          if (v75 == v78 && v77 == v79)
          {
            v88 = v73;
            v89 = v74;
            sub_23B057898(v25);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AA8EFC8(v122, (uint64_t)v120, (uint64_t *)&unk_2542E6B00);
LABEL_49:
            if (v117(v69, 1, v70) == 1)
              goto LABEL_77;
            v85 = *(_QWORD *)(v69 + 8);
            v86 = *(_QWORD *)(v69 + 16);
            v87 = v120;
LABEL_51:
            v90 = *((_QWORD *)v87 + 16);
            v91 = *((_QWORD *)v87 + 17);
            v129[0] = v85;
            v129[1] = v86;
            v126[0] = v90;
            v126[1] = v91;
            sub_23AAA420C();
            swift_retain();
            swift_bridgeObjectRetain();
            v92 = sub_23B1C6D04();
            sub_23AB22830(v25);
            swift_release();
            swift_bridgeObjectRelease();
            sub_23AA8A05C((uint64_t)v87, (uint64_t *)&unk_2542E6B00);
            v26 = v122;
            if (!v92)
            {
              swift_release_n();

              v93 = *(_QWORD *)(v52 + 136);
              v94 = *(_BYTE *)(v52 + 144);
              v95 = v116;
              *v116 = v93;
              *((_BYTE *)v95 + 8) = v94;
              sub_23AB22830(v25);
              *((_BYTE *)v95 + 9) = 0;
              LOBYTE(v14) = 1;
              return v14 & 1;
            }
            goto LABEL_27;
          }
          v113 = sub_23B1C7388();
          v81 = v73;
          v82 = v74;
          sub_23B057898(v25);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v26 = v122;
          v57 = v120;
          sub_23AA8EFC8(v122, (uint64_t)v120, (uint64_t *)&unk_2542E6B00);
          if ((v113 & 1) != 0)
            goto LABEL_49;
          goto LABEL_26;
        }
      }
      swift_retain();
      sub_23AA8EFC8(v26, (uint64_t)v57, (uint64_t *)&unk_2542E6B00);
LABEL_26:
      sub_23AB22830(v25);
      sub_23AA8A05C((uint64_t)v57, (uint64_t *)&unk_2542E6B00);
LABEL_27:
      sub_23AB22830(v25);
      sub_23B1C70C4();
      v25 = v129[0];
    }
    while ((~v129[0] & 0xF000000000000007) != 0);
  }
  swift_release_n();
  sub_23ADF1BC0(v143, &v145);
  sub_23ADF1BC0(&v145, &v146);
  v27 = v115;
  v28 = v116;
  v29 = v114;
  v30 = v119;
  if (v147 != 2)
  {
    sub_23AA724E8((uint64_t)&v134, (uint64_t)v144, (uint64_t *)&unk_2542E7420);
    sub_23AA724E8((uint64_t)v144, (uint64_t)v148, (uint64_t *)&unk_2542E7420);
    if (v148[8] == 255)
      goto LABEL_7;
    v31 = v29[26];
    v131[10] = v29[25];
    v131[11] = v31;
    v132 = *((_QWORD *)v29 + 54);
    v32 = v29[22];
    v131[6] = v29[21];
    v131[7] = v32;
    v33 = v29[23];
    v131[9] = v29[24];
    v131[8] = v33;
    v34 = v29[18];
    v131[2] = v29[17];
    v131[3] = v34;
    v35 = v29[19];
    v131[5] = v29[20];
    v131[4] = v35;
    v36 = v29[15];
    v131[1] = v29[16];
    v131[0] = v36;
    sub_23AA724E8((uint64_t)v131, (uint64_t)&v133, &qword_2542E7550);
    sub_23AA724E8((uint64_t)&v133, (uint64_t)&v149, &qword_2542E7550);
    if (!v149)
    {
LABEL_7:
      if ((_QWORD)v135)
      {

LABEL_9:
        LOBYTE(v14) = 0;
        *v28 = 0;
        *((_WORD *)v28 + 4) = -256;
        return v14 & 1;
      }
    }
  }
  v37 = *(_BYTE **)(v30 + 32);
  if ((v37[32] & 1) != 0)
    goto LABEL_11;
  v96 = *(_QWORD *)(v26 + 128);
  v97 = *(_QWORD *)(v26 + 136);
  v98 = *(_BYTE *)(v26 + 8);
  v129[0] = *(_QWORD *)v26;
  LOBYTE(v129[1]) = v98;
  v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(*(_QWORD *)v37 + 256))(v26 + 16, v96, v97, v129);
  if (v27)
  {
LABEL_54:

    return v14 & 1;
  }
  v101 = v99;
  v102 = *(_QWORD *)(v99 + 16);
  if (!v102)
  {
    swift_bridgeObjectRelease();
    v26 = v122;
    goto LABEL_11;
  }
  v103 = *(_BYTE **)(**(_QWORD **)(v30 + 16) + 168);
  v104 = *(_QWORD *)(v99 + 32);
  v105 = *(_BYTE *)(v99 + 40);
  v127 = v104;
  v128 = v105;
  ((void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t))v103)(v129, &v127, 1);
  v123 = v103;
  for (i = (_BYTE *)(v101 + 56); ; i += 16)
  {
    sub_23AA724E8((uint64_t)v129, (uint64_t)v125, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v125, (uint64_t)v126, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v126) == 1)
      goto LABEL_66;
    memcpy(v124, v129, sizeof(v124));
    if (v124[30])
    {
      sub_23AAFC3AC((uint64_t)v124);
      goto LABEL_66;
    }
    if (LOBYTE(v124[20]))
    {
      if (LOBYTE(v124[20]) == 2)
      {
        sub_23AAFC3AC((uint64_t)v124);
LABEL_75:
        swift_bridgeObjectRelease();

        v111 = v116;
        *v116 = v104;
        *((_BYTE *)v111 + 8) = v105;
        LOBYTE(v14) = 1;
        *((_BYTE *)v111 + 9) = 0;
        return v14 & 1;
      }
      sub_23AAFC3AC((uint64_t)v124);
    }
    else
    {
      v107 = v124[18];
      sub_23AAFC3AC((uint64_t)v124);
      if ((v107 & 0x400) != 0)
        goto LABEL_66;
    }
    if (!v124[2])
      goto LABEL_75;
LABEL_66:
    if (!--v102)
      break;
    v104 = *((_QWORD *)i - 1);
    v105 = *i;
    v127 = v104;
    v128 = v105;
    ((void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t))v123)(v129, &v127, 1);
  }
  swift_bridgeObjectRelease();
  v27 = 0;
  v28 = v116;
  v29 = v114;
  v26 = v122;
  v30 = v119;
LABEL_11:
  v38 = *(_QWORD *)(v30 + 40);
  v39 = *(_QWORD *)(v26 + 128);
  v40 = *(_QWORD *)(v26 + 136);
  v129[0] = 0;
  v41 = (*(uint64_t (**)(id *, uint64_t, uint64_t, _QWORD *))(*(_QWORD *)v38 + 256))(&v130, v39, v40, v129);
  if (v27)
    goto LABEL_54;
  v42 = *(_QWORD *)(v41 + 16);
  if (!v42)
  {
    v108 = v130;
    swift_bridgeObjectRelease();

    goto LABEL_9;
  }
  v43 = *((_QWORD *)v29 + 30);
  swift_bridgeObjectRetain();
  v44 = 0;
  while (2)
  {
    if (!v43)
    {
LABEL_14:
      if (v42 == ++v44)
      {
        swift_bridgeObjectRelease();

        v109 = v116;
        *v116 = 0;
        *((_WORD *)v109 + 4) = -256;
        LOBYTE(v14) = 1;
        return v14 & 1;
      }
      continue;
    }
    break;
  }
  v45 = sub_23B1C63E0();
  v47 = v46;
  if (v45 != sub_23B1C63E0() || v47 != v48)
  {
    v50 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v50 & 1) != 0)
      goto LABEL_72;
    goto LABEL_14;
  }
  swift_bridgeObjectRelease_n();
LABEL_72:
  swift_bridgeObjectRelease_n();

  LOBYTE(v14) = 0;
  v110 = v116;
  *v116 = 0;
  *((_WORD *)v110 + 4) = -256;
  return v14 & 1;
}

void sub_23B00D7D8(uint64_t a1)
{
  NSObject *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  NSObject *v156;
  NSObject *v157;
  NSObject *v158;
  char v159;
  int v160;
  int v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  NSObject *v165;
  BOOL v166;
  char v167;
  int v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  NSObject *v172;
  unsigned __int8 *v173;
  _BOOL4 v174;
  int v175;
  NSObject *v176;
  void *v177;
  NSObject *v178;
  void (*v179)(void **);
  void **v180;
  NSObject *v181;
  int v182;
  _QWORD *v183;
  NSObject *v184;
  uint64_t (*v185)(void);
  NSObject *v186;
  uint64_t v187;
  NSObject *v188;
  uint64_t v189;
  int EnumCaseMultiPayload;
  NSObject *v191;
  Class isa;
  NSObject *v193;
  Class v194;
  char v195;
  uint64_t isa_low;
  void *v197;
  uint64_t v198;
  NSObject *v199;
  uint64_t v200;
  unsigned int (*v201)(uint64_t, uint64_t, uint64_t);
  NSObject *v202;
  NSObject *v203;
  NSObject *v204;
  uint64_t v205;
  NSObject *v206;
  uint64_t *v207;
  NSObject *v208;
  uint64_t *v209;
  uint64_t v210;
  unsigned int (*v211)(uint64_t, uint64_t, uint64_t);
  NSObject *v212;
  uint64_t v213;
  char v214;
  uint64_t v215;
  NSObject *v216;
  unsigned int (*v217)(void);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  NSObject *v221;
  char v222;
  uint64_t v223;
  uint64_t (*v224)(id *, uint64_t, uint64_t);
  NSObject *v225;
  char v226;
  uint64_t v227;
  NSObject *v228;
  char v229;
  int v230;
  uint64_t v231;
  NSObject *v232;
  char v233;
  NSObject *v234;
  char v235;
  char v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  _BOOL4 v240;
  NSObject *v241;
  void *v242;
  _QWORD *v243;
  NSObject *v244;
  NSObject *v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  uint8_t *v252;
  uint64_t v253;
  int v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  NSObject *v263;
  char v264;
  NSObject *v265;
  char v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  _QWORD *v281;
  uint64_t v282;
  NSObject *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  NSObject *v287;
  char *v288;
  uint64_t *v289;
  NSObject *v290;
  uint64_t v291;
  NSObject *v292;
  char *v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t *v296;
  uint64_t v297;
  int v298;
  NSObject *v299;
  _QWORD *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t (*v303)(uint64_t);
  uint64_t v304;
  char v305;
  unsigned __int8 *v306;
  uint64_t v307;
  char v308;
  uint64_t v309;
  NSObject *v310;
  uint64_t v311;
  uint64_t *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _OWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  void *v321;
  int v322;
  NSObject *v323;
  NSObject *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  BOOL v328;
  uint64_t v329;
  NSObject *v330;
  char v331;
  NSObject *v332;
  NSObject *v333;
  uint64_t (*v334)(void);
  NSObject *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  unsigned int (*v340)(char *, uint64_t, unint64_t);
  NSObject *v341;
  NSObject *v342;
  uint64_t v343;
  BOOL v344;
  NSObject *v345;
  char v346;
  int v347;
  uint64_t v348;
  void *v349;
  NSObject *v350;
  uint64_t v351;
  NSObject *v352;
  void *v353;
  NSObject *v354;
  uint64_t v355;
  int v356;
  uint64_t v357;
  uint64_t v358;
  NSObject *v359;
  uint64_t v360;
  uint64_t v361;
  char v362;
  NSObject *v363;
  NSObject *v364;
  _QWORD *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t (*v370)(id *, uint64_t, uint64_t);
  NSObject *v371;
  char v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  NSObject *v379;
  uint64_t v380;
  NSObject *v381;
  uint64_t v382;
  NSObject *v383;
  NSObject *v384;
  uint64_t v385;
  id v386;
  uint64_t v387;
  NSObject *v388;
  _QWORD *v389;
  uint64_t v390;
  void (*v391)(id *);
  NSObject *v392;
  id v393;
  char v394;
  uint64_t v395;
  NSObject *v396;
  NSObject *v397;
  NSObject *v398;
  uint64_t v399;
  _QWORD *v400;
  uint64_t v401;
  uint64_t *v402;
  int v403;
  void *v404;
  uint64_t v405;
  id v406;
  char v407;
  NSObject *v408;
  _BYTE *v409;
  uint64_t v410;
  void *v411;
  void (*v412)(void);
  NSObject *v413;
  uint64_t *v414;
  uint64_t v415;
  NSObject *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t *v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  void *v425;
  NSObject *v426;
  id v427;
  char v428;
  uint64_t v429;
  char v430;
  char v431;
  uint64_t v432;
  char v433;
  NSObject *v434;
  __int128 *v435;
  NSObject *v436;
  uint64_t (**v437)(uint64_t, uint64_t, uint64_t);
  NSObject *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  _BOOL4 v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  _OWORD *v446;
  uint64_t v447;
  uint64_t v448;
  NSObject *v449;
  char v450;
  uint64_t v451;
  char v452;
  uint8_t *v453;
  uint64_t v454;
  NSObject *v455;
  char v456;
  NSObject *v457;
  void *v458;
  NSObject *v459;
  _BYTE *v460;
  NSObject *v461;
  NSObject *v462;
  NSObject *v463;
  char v464;
  NSObject *v465;
  char v466;
  uint64_t v467;
  char v468;
  uint64_t v469;
  BOOL v470;
  NSObject *v471;
  char v472;
  int v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  _OWORD *v479;
  uint64_t v480;
  uint64_t v481;
  NSObject *v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  _OWORD *v486;
  uint64_t v487;
  uint64_t v488;
  NSObject *v489;
  uint64_t v490;
  uint64_t v491;
  unint64_t v492;
  uint64_t v493;
  void *v494;
  uint64_t v495;
  uint64_t v496;
  unsigned int (*v497)(uint64_t, uint64_t, uint64_t);
  uint64_t v498;
  NSObject *v499;
  _OWORD *v500;
  char v501;
  Class v502;
  uint64_t v503;
  char v504;
  BOOL v505;
  uint64_t v506;
  uint64_t *v507;
  uint64_t v508;
  uint64_t v509;
  char v510;
  uint64_t v511;
  NSObject *v512;
  uint64_t v513;
  uint64_t v514;
  NSObject *v515;
  char v516;
  uint64_t v517;
  uint64_t *v518;
  NSObject *v519;
  NSObject *v520;
  NSObject *v521;
  uint64_t v522;
  char v523;
  char v524;
  NSObject *v525;
  uint64_t *v526;
  id v527;
  uint64_t (*v528)(_QWORD *);
  id v529;
  NSObject *v530;
  int v531;
  uint64_t v532;
  char v533;
  void *v534;
  int v535;
  uint64_t v536;
  uint64_t v537;
  char v538;
  char v539;
  void (*v540)(id *, _QWORD);
  id v541;
  char *v542;
  NSObject *v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  void (*v547)(__int128 *__return_ptr, id *);
  id v548;
  NSObject *v549;
  void *v550;
  char v551;
  NSObject *v552;
  id v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  _QWORD *v557;
  _QWORD *v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t (*v561)(_QWORD *, uint64_t, uint64_t, _OWORD *);
  id v562;
  NSObject *v563;
  uint64_t v564;
  unsigned __int8 *v565;
  _QWORD *v566;
  void (*v567)(id *);
  id *v568;
  id v569;
  NSObject *v570;
  uint64_t (*v571)(id *, void **);
  NSObject *v572;
  char v573;
  id v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  unint64_t v578;
  uint64_t v579;
  uint64_t v580;
  id v581;
  uint64_t v582;
  uint64_t v583;
  char *v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  _QWORD *v590;
  uint8_t *v591;
  uint64_t v592;
  NSObject *v593;
  void *v594;
  uint64_t v595;
  void (*v596)(uint64_t);
  id v597;
  void (*v598)(id *);
  id *v599;
  BOOL v600;
  BOOL v601;
  __int128 v602;
  int v603;
  NSObject *v604;
  BOOL v605;
  __int128 *v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  char v610;
  uint64_t v611;
  unsigned int (**v612)(char *, uint64_t, unint64_t);
  _BOOL4 v613;
  uint64_t (*v614)();
  uint64_t v615;
  uint64_t (*v616)(uint64_t, uint64_t, uint64_t);
  char v617;
  _BOOL4 v618;
  _BOOL4 v619;
  unint64_t v620;
  NSObject *v621;
  void *v622;
  _QWORD *v623;
  id v624;
  _QWORD *v625;
  uint64_t *v626;
  uint8_t *v627;
  id v628;
  void *v629;
  char *v630;
  uint64_t (*v631)(uint64_t, uint64_t, uint64_t);
  id v632;
  NSObject *v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t (*v636)();
  uint64_t v637;
  id v638;
  int *v639;
  void *v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  _QWORD *v653;
  uint64_t (*v654)(uint64_t, uint64_t, uint64_t);
  NSObject *v655;
  void *v656;
  uint64_t v657;
  int v658;
  uint64_t v659;
  void *v660;
  uint64_t v661;
  uint64_t v662;
  NSObject *v663;
  char v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  NSObject *v670;
  char v671;
  char v672;
  char v673;
  uint64_t v674;
  void *v675;
  uint64_t v676;
  NSObject *v677;
  void *v678;
  NSObject *v679;
  uint64_t *v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t *v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  void *v690;
  id v691;
  int *v692;
  uint64_t *v693;
  void *v694;
  NSObject *v695;
  id v696;
  NSObject *v697;
  id v698;
  id v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  char v703;
  id *v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  BOOL v711;
  int v712;
  uint64_t v713;
  uint64_t v714;
  char *v715;
  BOOL v716;
  char v717;
  uint64_t *v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  unint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  NSObject *v728;
  id v729;
  char v730;
  NSObject *v731;
  uint64_t v732;
  char v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  unint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  unsigned __int8 *v743;
  char v744;
  uint64_t *v745;
  NSObject *v746;
  char v747;
  id v748;
  uint64_t v749;
  uint64_t v750;
  id v751;
  NSObject *v752;
  int v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  _QWORD *v757;
  uint8_t *v758;
  uint64_t v759;
  NSObject *v760;
  uint64_t v761;
  int v762;
  uint64_t (*v763)(id *, __int128 *);
  NSObject *v764;
  NSObject *v765;
  char v766;
  char v767;
  id v768;
  uint64_t v769;
  uint64_t v770;
  id v771;
  NSObject *v772;
  int v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  _QWORD *v777;
  uint8_t *v778;
  void *v779;
  NSObject *v780;
  id v781;
  uint64_t v782;
  char v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  char *v787;
  uint64_t v788;
  void *v789;
  uint64_t (*v790)(uint64_t, uint64_t);
  NSObject *v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t (*v794)(id *, __int128 *);
  NSObject *v795;
  NSObject *v796;
  char v797;
  char v798;
  id v799;
  uint64_t v800;
  uint64_t v801;
  id v802;
  NSObject *v803;
  int v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  _QWORD *v808;
  uint8_t *v809;
  void *v810;
  NSObject *v811;
  uint64_t (*v812)(id *, __int128 *, uint64_t);
  NSObject *v813;
  NSObject *v814;
  char v815;
  char v816;
  BOOL v817;
  NSObject *v818;
  uint64_t v819;
  NSObject *v820;
  char v821;
  char v822;
  id v823;
  uint64_t v824;
  uint64_t v825;
  id v826;
  NSObject *v827;
  int v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  _QWORD *v832;
  uint8_t *v833;
  uint64_t v834;
  NSObject *v835;
  char v836;
  id v837;
  uint64_t v838;
  uint64_t v839;
  id v840;
  NSObject *v841;
  int v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  _QWORD *v846;
  uint8_t *v847;
  void *v848;
  NSObject *v849;
  uint64_t v850;
  id v851;
  uint64_t v852;
  NSObject *v853;
  int v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  _QWORD *v860;
  uint8_t *v861;
  void *v862;
  uint64_t v863;
  NSObject *v864;
  uint64_t v865;
  _QWORD *v866;
  id *v867;
  uint64_t v868;
  uint64_t v869;
  char *v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  char *v874;
  uint64_t v875;
  uint64_t v876;
  char *v877;
  uint64_t v878;
  char *v879;
  char *v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  char *v884;
  char *v885;
  char *v886;
  char *v887;
  char *v888;
  char *v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  char *v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  char *v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  uint8_t **v907;
  uint64_t v908;
  uint64_t v909;
  char *v910;
  uint64_t v911;
  char *v912;
  uint64_t v913;
  int *v914;
  char *v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  char *v919;
  _QWORD *v920;
  char *v921;
  uint64_t v922;
  uint64_t v923;
  uint64_t v924;
  uint64_t v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  char *v929;
  uint64_t v930;
  NSObject *v931;
  char *v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  unsigned int (**v936)(char *, uint64_t, unint64_t);
  unint64_t v937;
  NSObject *v938;
  __int128 v939;
  char *v940;
  _QWORD *v941;
  uint64_t v942;
  unsigned __int8 *v943;
  uint64_t v944;
  NSObject *v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t (*v948)(uint64_t, uint64_t, uint64_t);
  char *v949;
  void *v950;
  char v951;
  void *v952[62];
  __int128 v953;
  __int128 v954;
  __int128 v955;
  __int128 v956;
  __int128 v957;
  __int128 v958;
  __int16 v959;
  char v960;
  __int128 v961;
  char v962;
  __int128 v963;
  __int128 v964;
  __int128 v965;
  __int128 v966;
  uint64_t v967;
  __int128 v968;
  __int128 v969;
  __int128 v970;
  __int128 v971;
  __int128 v972;
  __int128 v973;
  __int128 v974;
  __int128 v975;
  __int128 v976;
  __int128 v977;
  __int128 v978;
  __int128 v979;
  __int128 v980;
  __int128 v981;
  __int128 v982;
  char v983;
  __int128 v984;
  __int128 v985;
  char v986;
  uint64_t v987;
  id v988;
  char v989;
  uint8_t *v990;
  uint8_t *v991;
  char v992;
  id v993;
  _OWORD v994[31];
  __int128 v995;
  __int128 v996;
  __int128 v997;
  __int128 v998;
  __int128 v999;
  __int128 v1000;
  __int128 v1001;
  __int128 v1002;
  __int128 v1003;
  __int128 v1004;
  __int128 v1005;
  __int128 v1006;
  __int128 v1007;
  char v1008;
  __int128 v1009;
  char v1010;
  __int128 v1011;
  __int128 v1012;
  __int128 v1013;
  __int128 v1014;
  __int128 v1015;
  __int128 v1016;
  __int16 v1017;
  char v1018;
  uint64_t v1019;
  uint64_t v1020;
  char v1021;
  __int128 v1022;
  __int128 v1023;
  __int128 v1024;
  __int128 v1025;
  uint64_t v1026;
  char v1027;
  __int128 v1028;
  __int128 v1029;
  char v1030;
  uint64_t v1031;
  _QWORD v1032[13];
  uint64_t v1033;
  uint64_t v1034;
  char v1035;
  _OWORD v1036[13];
  char v1037;
  __int128 v1038;
  char v1039;
  __int128 v1040;
  __int128 v1041;
  __int128 v1042;
  __int128 v1043;
  __int128 v1044;
  __int128 v1045;
  __int16 v1046;
  char v1047;
  uint64_t v1048;
  uint64_t v1049;
  char v1050;
  __int128 v1051;
  __int128 v1052;
  __int128 v1053;
  __int128 v1054;
  uint64_t v1055;
  char v1056;
  __int128 v1057;
  __int128 v1058;
  char v1059;
  uint64_t v1060;
  _OWORD v1061[31];
  _QWORD v1062[62];
  void *v1063;
  unsigned __int8 v1064;
  void *v1065;
  unsigned __int8 v1066;
  char v1067;
  id v1068;
  char v1069;
  id v1070;
  _OWORD v1071[15];
  _BYTE v1072[16];
  __int128 v1073;
  __int128 v1074;
  __int128 v1075;
  __int128 v1076;
  __int128 v1077;
  __int128 v1078;
  _OWORD v1079[6];
  uint64_t v1080;
  __n128 v1081;
  _BYTE v1082[496];
  _BYTE v1083[496];
  _BYTE v1084[496];
  _BYTE v1085[496];
  __n128 v1086;
  char v1087;
  _BYTE v1088[32];
  NSObject *v1089;

  v2 = MEMORY[0x24BDAC7A8](a1);
  v945 = v1;
  v941 = v3;
  v940 = (char *)v4;
  v6 = v5;
  v1089 = v7;
  v944 = v2;
  v8 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v8);
  v880 = (char *)&v865 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5474();
  v882 = *(_QWORD *)(v10 - 8);
  v883 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v879 = (char *)&v865 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v904 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0);
  MEMORY[0x24BDAC7A8](v904);
  v881 = (uint64_t)&v865 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v911 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7DA8);
  MEMORY[0x24BDAC7A8](v911);
  v916 = (uint64_t)&v865 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v914 = (int *)type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v914);
  v913 = (uint64_t)&v865 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v937 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v936 = *(unsigned int (***)(char *, uint64_t, unint64_t))(v937 - 8);
  v15 = MEMORY[0x24BDAC7A8](v937);
  v893 = (uint64_t)&v865 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v900 = (uint64_t)&v865 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v899 = (uint64_t)&v865 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v902 = (uint64_t)&v865 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v927 = (uint64_t)&v865 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v925 = (uint64_t)&v865 - v25;
  v934 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v935 = *(_QWORD *)(v934 - 8);
  v26 = MEMORY[0x24BDAC7A8](v934);
  v878 = (uint64_t)&v865 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v890 = (uint64_t)&v865 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v891 = (uint64_t)&v865 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v897 = (uint64_t)&v865 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v896 = (uint64_t)&v865 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v894 = (uint64_t)&v865 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v892 = (uint64_t)&v865 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v898 = (uint64_t)&v865 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v924 = (uint64_t)&v865 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v928 = (uint64_t)&v865 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v929 = (char *)&v865 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v905 = (uint64_t)&v865 - v49;
  v906 = v50;
  MEMORY[0x24BDAC7A8](v48);
  v920 = (uint64_t *)((char *)&v865 - v51);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v901 = (uint64_t)&v865 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v921 = (char *)&v865 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v931 = ((char *)&v865 - v58);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v910 = (char *)&v865 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v918 = (uint64_t)&v865 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v919 = (char *)&v865 - v64;
  MEMORY[0x24BDAC7A8](v63);
  v930 = (uint64_t)&v865 - v65;
  v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v67 = MEMORY[0x24BDAC7A8](v66);
  v922 = (uint64_t)&v865 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = MEMORY[0x24BDAC7A8](v67);
  v915 = (char *)&v865 - v70;
  MEMORY[0x24BDAC7A8](v69);
  v917 = (uint64_t)&v865 - v71;
  v942 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  *(_QWORD *)&v939 = *(_QWORD *)(v942 - 8);
  MEMORY[0x24BDAC7A8](v942);
  v907 = (uint8_t **)((char *)&v865 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = sub_23B1C5E4C();
  v908 = *(_QWORD *)(v73 - 8);
  v909 = v73;
  v74 = MEMORY[0x24BDAC7A8](v73);
  v889 = (char *)&v865 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = MEMORY[0x24BDAC7A8](v74);
  v888 = (char *)&v865 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v886 = (char *)&v865 - v79;
  v80 = MEMORY[0x24BDAC7A8](v78);
  v887 = (char *)&v865 - v81;
  v82 = MEMORY[0x24BDAC7A8](v80);
  v885 = (char *)&v865 - v83;
  v84 = MEMORY[0x24BDAC7A8](v82);
  v884 = (char *)&v865 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v912 = (char *)&v865 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v903 = (char *)&v865 - v89;
  MEMORY[0x24BDAC7A8](v88);
  v895 = (char *)&v865 - v90;
  v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F10);
  v92 = MEMORY[0x24BDAC7A8](v91);
  v93 = MEMORY[0x24BDAC7A8](v92);
  v94 = MEMORY[0x24BDAC7A8](v93);
  v926 = (uint64_t)&v865 - v95;
  v96 = MEMORY[0x24BDAC7A8](v94);
  v932 = (char *)&v865 - v97;
  v98 = MEMORY[0x24BDAC7A8](v96);
  MEMORY[0x24BDAC7A8](v98);
  v100 = MEMORY[0x24BDAC7A8]((char *)&v865 - v99);
  v101 = MEMORY[0x24BDAC7A8](v100);
  v102 = MEMORY[0x24BDAC7A8](v101);
  v103 = MEMORY[0x24BDAC7A8](v102);
  v105 = (uint64_t)&v865 - v104;
  v106 = MEMORY[0x24BDAC7A8](v103);
  v108 = (uint64_t)&v865 - v107;
  v109 = MEMORY[0x24BDAC7A8](v106);
  v111 = ((char *)&v865 - v110);
  v112 = MEMORY[0x24BDAC7A8](v109);
  v923 = (uint64_t)&v865 - v113;
  v114 = MEMORY[0x24BDAC7A8](v112);
  v116 = (char *)&v865 - v115;
  v117 = MEMORY[0x24BDAC7A8](v114);
  v933 = (uint64_t)&v865 - v118;
  v119 = MEMORY[0x24BDAC7A8](v117);
  v121 = (char *)&v865 - v120;
  v122 = MEMORY[0x24BDAC7A8](v119);
  v124 = (char *)&v865 - v123;
  v125 = MEMORY[0x24BDAC7A8](v122);
  v126 = MEMORY[0x24BDAC7A8](v125);
  v127 = MEMORY[0x24BDAC7A8](v126);
  v938 = ((char *)&v865 - v128);
  v129 = MEMORY[0x24BDAC7A8](v127);
  v130 = MEMORY[0x24BDAC7A8](v129);
  v131 = MEMORY[0x24BDAC7A8](v130);
  v133 = (char *)&v865 - v132;
  v134 = MEMORY[0x24BDAC7A8](v131);
  v136 = (char *)&v865 - v135;
  v137 = MEMORY[0x24BDAC7A8](v134);
  v149 = *((_OWORD *)v6 + 11);
  v1079[4] = *((_OWORD *)v6 + 10);
  v1079[5] = v149;
  v1080 = *((_QWORD *)v6 + 24);
  v150 = *((_OWORD *)v6 + 7);
  v1079[0] = *((_OWORD *)v6 + 6);
  v1079[1] = v150;
  v151 = *((_OWORD *)v6 + 8);
  v1079[3] = *((_OWORD *)v6 + 9);
  v1079[2] = v151;
  v152 = *((_OWORD *)v6 + 3);
  v1075 = *((_OWORD *)v6 + 2);
  v1076 = v152;
  v153 = *((_OWORD *)v6 + 4);
  v1078 = *((_OWORD *)v6 + 5);
  v1077 = v153;
  v155 = *(_OWORD *)v6;
  v154 = *((_OWORD *)v6 + 1);
  v943 = v6;
  v1074 = v154;
  v1073 = v155;
  v156 = v155;
  if (!(_QWORD)v155)
    goto LABEL_447;
  v876 = v144;
  v877 = (char *)&v865 - v145;
  v872 = v143;
  v873 = v142;
  v874 = (char *)v141;
  v875 = v139;
  v865 = v140;
  v866 = v146;
  v869 = v138;
  v870 = v133;
  v867 = (id *)v137;
  v868 = v147;
  v871 = v148;
  v1070 = (id)v155;
  if (!sub_23AC37674(2, (uint64_t)v1089))
  {
    if (sub_23AC37674(4, (uint64_t)v1089))
    {
      v160 = v943[208];
      if (v160 == 255)
        goto LABEL_369;
      v161 = v943[440];
      if (v161 == 4)
        goto LABEL_369;
      v162 = (void *)*((_QWORD *)v943 + 25);
      v163 = *((_QWORD *)v943 + 27);
      if (!sub_23AC37B08(v161, 1))
        goto LABEL_369;
      v164 = v876;
      sub_23AA8EFC8((uint64_t)v940, v876, (uint64_t *)&unk_2569E5F10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v939 + 48))(v164, 1, v942) == 1)
      {
        v165 = v156;
        goto LABEL_12;
      }
      sub_23AA8EFC8(v164, (uint64_t)v938, (uint64_t *)&unk_2569E5F10);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
        v292 = v938;
        v293 = (char *)v938 + *(int *)(v291 + 48);
        if ((*(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v935 + 48))(v938, 1, v934) != 1)
        {
          v943 = (unsigned __int8 *)v293;
          v1089 = v156;
          v325 = *(uint64_t *)((char *)&v292->isa + *(int *)(v291 + 64));
          v326 = (uint64_t)v292;
          v327 = (uint64_t)v929;
          sub_23AA724E8(v326, (uint64_t)v929, (uint64_t *)&unk_2542E4760);
          v328 = sub_23AA9F3D0(2, v325);
          v329 = v928;
          sub_23AA8EFC8(v327, v928, (uint64_t *)&unk_2542E4760);
          if (v328)
          {
            v330 = v1089;
            v331 = sub_23AC37680();

            sub_23AA8A05C(v329, (uint64_t *)&unk_2542E4760);
            sub_23AA8A05C(v327, (uint64_t *)&unk_2542E4760);
            v332 = v943;
            if ((v331 & 1) != 0)
            {
              sub_23AA8A05C((uint64_t)v943, &qword_2542E4770);
              goto LABEL_12;
            }
          }
          else
          {
            v363 = v1089;
            sub_23AA8A05C(v329, (uint64_t *)&unk_2542E4760);
            sub_23AA8A05C(v327, (uint64_t *)&unk_2542E4760);
            v332 = v943;
          }

          v294 = &qword_2542E4770;
          v290 = v332;
LABEL_216:
          sub_23AA8A05C((uint64_t)v290, v294);
LABEL_237:
          v380 = v944;
          *(_QWORD *)v944 = 0;
          *(_WORD *)(v380 + 8) = -256;
          v296 = (uint64_t *)&unk_2569E5F10;
          v297 = v876;
          goto LABEL_238;
        }
        v289 = &qword_2542E4770;
        sub_23AA8A05C((uint64_t)v293, &qword_2542E4770);
        v290 = v292;
LABEL_134:
        v294 = v289;
        goto LABEL_216;
      }
      if (EnumCaseMultiPayload != 6)
      {
        if (EnumCaseMultiPayload == 12)
        {
          v191 = v938;
          isa = v938[2].isa;
          v193 = v156;

          if ((BYTE1(v191[1].isa) & 1) != 0)
          {

            v194 = v191->isa;
            v195 = BYTE1(v191[1].isa);
            isa_low = LOBYTE(v191[1].isa);
LABEL_236:
            sub_23AB7C6B4(v194, isa_low, v195);
            goto LABEL_237;
          }
          if (BYTE2(v191[1].isa) && BYTE2(v191[1].isa) != 23)
          {

            v194 = v938->isa;
            v195 = BYTE1(v938[1].isa);
            isa_low = LOBYTE(v938[1].isa);
            goto LABEL_236;
          }
          sub_23AB7C6B4(v191->isa, LOBYTE(v191[1].isa), 0);
LABEL_12:
          sub_23AA8A05C(v876, (uint64_t *)&unk_2569E5F10);
          v166 = sub_23AA9F3C4(16, v163);
          v1065 = v162;
          v1066 = v160;
          if (v166)
          {
            v167 = 1;
          }
          else
          {
            v203 = v945;
            v167 = (*(uint64_t (**)(void **))(*(_QWORD *)v941[5] + 464))(&v1065);
            v945 = v203;
            if (v203)
              goto LABEL_242;
          }
          v204 = v945;
          (*(void (**)(id *, BOOL))(*(_QWORD *)v941[4] + 416))(&v1070, (v167 & 1) == 0);
          v945 = v204;
          if (v204)
          {
LABEL_242:
            v386 = v1070;
            goto LABEL_243;
          }
          goto LABEL_63;
        }
        v294 = &qword_2542DDFC0;
        goto LABEL_152;
      }
      v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
      v287 = v938;
      v288 = (char *)v938 + *(int *)(v286 + 48);
      if (v936[6](v288, 1, v937) == 1)
      {
        v289 = (uint64_t *)&unk_2542E4750;
        sub_23AA8A05C((uint64_t)v288, (uint64_t *)&unk_2542E4750);
        v290 = v287;
        goto LABEL_134;
      }
      v321 = (void *)*((_QWORD *)v288 + 2);
      v322 = v288[24];
      v323 = v156;
      sub_23AA8A05C((uint64_t)v288, (uint64_t *)&unk_2542E6B00);
      if (v322)
      {
        if (v322 == 1)
        {
          if (v160 != 1 || v321 != v162)
          {
LABEL_284:

            v294 = (uint64_t *)&unk_2542E4750;
LABEL_152:
            v290 = v938;
            goto LABEL_216;
          }
        }
        else if (v321)
        {
          if (v160 != 2 || v162 != (void *)1)
            goto LABEL_284;
        }
        else if (v160 != 2 || v162)
        {
          goto LABEL_284;
        }
      }
      else if (v160 || (_DWORD)v321 != (_DWORD)v162)
      {
        goto LABEL_284;
      }
      sub_23AA8A05C((uint64_t)v938, (uint64_t *)&unk_2542E4750);
      goto LABEL_12;
    }
    if (sub_23AC37674(8, (uint64_t)v1089))
    {
      v168 = v943[208];
      if (v168 == 255)
        goto LABEL_369;
      v169 = *((_QWORD *)v943 + 25);
      *(_QWORD *)&v1036[0] = v169;
      BYTE8(v1036[0]) = v168;
      v170 = v943[440];
      if (v170 == 4 || !sub_23AC37B08(v170, 1))
        goto LABEL_369;
      v171 = v875;
      sub_23AA8EFC8((uint64_t)v940, v875, (uint64_t *)&unk_2569E5F10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v939 + 48))(v171, 1, v942) == 1)
      {
        v172 = v156;
LABEL_181:
        sub_23AA8A05C(v875, (uint64_t *)&unk_2569E5F10);
        v343 = v941[5];
        v344 = sub_23AA9F3C4(2, *((uint64_t *)&v1073 + 1));
        v345 = v945;
        v346 = (*(uint64_t (**)(_OWORD *, BOOL))(*(_QWORD *)v343 + 384))(v1036, v344);
        v945 = v345;
        if (v345)
          goto LABEL_242;
        if ((v346 & 1) != 0)
          goto LABEL_446;
        v179 = *(void (**)(void **))(*(_QWORD *)v941[4] + 392);
        v180 = &v1070;
        goto LABEL_28;
      }
      v206 = v156;
      sub_23AA8EFC8(v171, (uint64_t)v874, (uint64_t *)&unk_2569E5F10);
      v207 = &qword_2542DDFC0;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 6u:
          v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
          v338 = (uint64_t)v874;
          v339 = (uint64_t)&v874[*(int *)(v337 + 48)];
          v340 = v936[6];
          if (v340(v874, 1, v937) == 1)
          {
            v341 = v206;
            goto LABEL_311;
          }
          v373 = *(_QWORD *)(v338 + *(int *)(v337 + 64));
          v374 = v338;
          v375 = v922;
          sub_23AA8EFC8(v374, v922, (uint64_t *)&unk_2542E4750);
          LOBYTE(v373) = sub_23AA9F3D0(2, v373);
          v376 = v375;
          v377 = v925;
          sub_23AA724E8(v376, v925, (uint64_t *)&unk_2542E6B00);
          if ((v373 & 1) == 0)
          {
            v398 = v206;
            v399 = v377;
LABEL_310:
            sub_23AA8A05C(v399, (uint64_t *)&unk_2542E6B00);
            goto LABEL_311;
          }
          v378 = *(_QWORD *)(v377 + 16);
          if (!*(_BYTE *)(v377 + 24))
          {
            if (!v168)
            {
              v519 = v206;
              sub_23AA8A05C(v925, (uint64_t *)&unk_2542E6B00);
              if ((_DWORD)v378 == (_DWORD)v169)
                goto LABEL_422;
              goto LABEL_311;
            }
            goto LABEL_309;
          }
          if (*(_BYTE *)(v377 + 24) == 1)
          {
            if (v168 == 1)
            {
              v379 = v206;
              sub_23AA8A05C(v925, (uint64_t *)&unk_2542E6B00);
              if (v378 == v169)
                goto LABEL_422;
LABEL_311:
              if (v340((char *)v339, 1, v937) == 1)
              {

                v207 = (uint64_t *)&unk_2542E4750;
                sub_23AA8A05C(v339, (uint64_t *)&unk_2542E4750);
LABEL_388:
                sub_23AA8A05C((uint64_t)v874, v207);
                v498 = v944;
                *(_QWORD *)v944 = 0;
                *(_WORD *)(v498 + 8) = -256;
                v296 = (uint64_t *)&unk_2569E5F10;
                v297 = v875;
                goto LABEL_238;
              }
              v439 = v339;
              v440 = v927;
              sub_23AA724E8(v439, v927, (uint64_t *)&unk_2542E6B00);
              v441 = *(_QWORD *)(v440 + 16);
              if (*(_BYTE *)(v440 + 24))
              {
                if (*(_BYTE *)(v440 + 24) == 1)
                {
                  if (v168 != 1 || v441 != v169)
                  {
LABEL_387:
                    sub_23AA8A05C(v927, (uint64_t *)&unk_2542E6B00);

                    v207 = (uint64_t *)&unk_2542E4750;
                    goto LABEL_388;
                  }
                }
                else if (v441)
                {
                  if (v168 != 2 || v169 != 1)
                    goto LABEL_387;
                }
                else if (v168 != 2 || v169)
                {
                  goto LABEL_387;
                }
              }
              else if (v168 || (_DWORD)v441 != (_DWORD)v169)
              {
                goto LABEL_387;
              }
              if (sub_23AA9F3C4(2, *((uint64_t *)&v1073 + 1)))
              {
                sub_23AA8A05C(v927, (uint64_t *)&unk_2542E6B00);
                goto LABEL_386;
              }
              v499 = v945;
              sub_23AFFA638(*(_QWORD *)v927, *(_BYTE *)(v927 + 8), (uint64_t)&v1065);
              v945 = v499;
              if (v499)
              {
                sub_23AA8A05C(v927, (uint64_t *)&unk_2542E6B00);

                sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);
                sub_23AA8A05C(v875, (uint64_t *)&unk_2569E5F10);
                return;
              }
              sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1062, qword_2542E6E20);
              sub_23AA724E8((uint64_t)v1062, (uint64_t)&v1063, qword_2542E6E20);
              if (sub_23AAFC2A4((uint64_t)&v1063) != 1)
                goto LABEL_481;
              sub_23AA8A05C(v927, (uint64_t *)&unk_2542E6B00);
              sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1061, qword_2542E6E20);
              sub_23ADF2D34((uint64_t)v1061, (voidsub_23AAAEC3C);
              goto LABEL_386;
            }
            goto LABEL_309;
          }
          if (v378)
          {
            if (v168 != 2 || v169 != 1)
            {
LABEL_309:
              v438 = v206;
              v399 = v925;
              goto LABEL_310;
            }
          }
          else if (v168 != 2 || v169)
          {
            goto LABEL_309;
          }
          v520 = v206;
          sub_23AA8A05C(v925, (uint64_t *)&unk_2542E6B00);
LABEL_422:
          sub_23AA8A05C(v339, (uint64_t *)&unk_2542E4750);
          sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);
          goto LABEL_181;
        case 8u:
        case 0x20u:
          v208 = v206;
          v209 = &qword_2542DDFC0;
          goto LABEL_67;
        case 0x15u:
          v342 = v206;
          swift_release();
          goto LABEL_181;
        default:
          goto LABEL_388;
      }
    }
    if (sub_23AC37674(16, (uint64_t)v1089))
    {
      v175 = v943[208];
      if (v175 == 255)
        goto LABEL_369;
      v176 = v156;
      v177 = (void *)*((_QWORD *)v943 + 25);
      v1065 = v177;
      v1066 = v175;
      sub_23AA8EFC8((uint64_t)v940, (uint64_t)v124, (uint64_t *)&unk_2569E5F10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v939 + 48))(v124, 1, v942) == 1)
      {
        v178 = v176;
LABEL_27:
        sub_23AA8A05C((uint64_t)v124, (uint64_t *)&unk_2569E5F10);
        v179 = *(void (**)(void **))(*(_QWORD *)v941[5] + 400);
        v180 = &v1065;
LABEL_28:
        v181 = v945;
        v179(v180);
        v945 = v181;
        if (v181)
          goto LABEL_242;
        goto LABEL_63;
      }
      sub_23AA8EFC8((uint64_t)v124, (uint64_t)v121, (uint64_t *)&unk_2569E5F10);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        sub_23AA8A05C((uint64_t)v121, &qword_2542DDFC0);
        goto LABEL_137;
      }
      v197 = (void *)*((_QWORD *)v121 + 2);
      v198 = v121[24];
      if ((v121[25] & 1) != 0)
      {
        if (v175)
        {
          if (v175 == 1)
          {
            if ((_DWORD)v198 != 1 || v177 != v197)
              goto LABEL_136;
          }
          else if (v177)
          {
            if ((_DWORD)v198 != 2 || v197 != (void *)1)
              goto LABEL_136;
          }
          else if ((_DWORD)v198 != 2 || v197)
          {
            goto LABEL_136;
          }
        }
        else if (v121[24] || (_DWORD)v177 != (_DWORD)v197)
        {
          goto LABEL_136;
        }
        v393 = *(id *)v121;
        v394 = v121[9];
        v395 = v121[8];
        v396 = v176;
        sub_23AB7C6B4(v393, v395, v394);
        goto LABEL_27;
      }
      sub_23AB7C6B4(v197, v198, 0);
LABEL_136:
      sub_23AB7C6B4(*(id *)v121, v121[8], v121[9]);
      goto LABEL_137;
    }
    if (sub_23AC37674(256, (uint64_t)v1089))
    {
      v183 = v941;
      v184 = v156;
      v185 = *(uint64_t (**)(void))(*v941 + 152);
      v186 = v184;
      v187 = v185();
      if (sub_23AA9F3D0(256, v187))
      {
LABEL_38:

        goto LABEL_369;
      }
      v199 = v945;
      v200 = sub_23B004EF0((unint64_t)v183);
      v945 = v199;
      if (v199)
      {
LABEL_57:

        return;
      }
      v218 = v200;
      if (v200 == 70)
        goto LABEL_38;
      v219 = v933;
      sub_23AA8EFC8((uint64_t)v940, v933, (uint64_t *)&unk_2569E5F10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v939 + 48))(v219, 1, v942) == 1)
        goto LABEL_77;
      sub_23AA8EFC8(v219, (uint64_t)v116, (uint64_t *)&unk_2569E5F10);
      v347 = swift_getEnumCaseMultiPayload();
      if (v347 != 13)
      {
        if (v347 != 21)
        {

          sub_23AA8A05C((uint64_t)v116, &qword_2542DDFC0);
LABEL_379:
          v491 = v944;
          *(_QWORD *)v944 = 0;
          *(_WORD *)(v491 + 8) = -256;
          v296 = (uint64_t *)&unk_2569E5F10;
          v297 = v933;
          goto LABEL_238;
        }
        if ((*(_QWORD *)v116 & 0x8000000000000000) != 0)
        {
          swift_release();
LABEL_297:

          goto LABEL_379;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F00);
        v348 = swift_dynamicCastClass();
        swift_release();
        v219 = v933;
        if (!v348)
          goto LABEL_297;
LABEL_77:
        sub_23AA8A05C(v219, (uint64_t *)&unk_2569E5F10);
        v220 = v941[3];
        v221 = v945;
        v222 = (*(uint64_t (**)(uint64_t, id *, _QWORD, _QWORD))(*(_QWORD *)v220 + 328))(v218, &v1070, *((_QWORD *)v943 + 57), 0);
        v945 = v221;
        if (v221)
          goto LABEL_242;
        if ((v222 & 1) != 0)
          goto LABEL_446;
        v223 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
        v224 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)v220 + 288);
        v225 = v945;
        v226 = v224(&v1070, v223, 8512);
        v945 = v225;
        if (v225)
          goto LABEL_242;
        if ((v226 & 1) != 0)
          goto LABEL_446;
        v227 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F00);
        v228 = v945;
        v229 = v224(&v1070, v227, 0x10000);
        v945 = v228;
        if (v228)
          goto LABEL_242;
        if ((v229 & 1) != 0)
          goto LABEL_446;
        v230 = v943[208];
        if (v230 != 255)
        {
          v1065 = (void *)*((_QWORD *)v943 + 25);
          v1066 = v230;
          if (sub_23AC37A40(v218, 1) || sub_23AC37A40(v218, 2))
          {
            v231 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
            v232 = v945;
            v233 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(_QWORD *)v220 + 280))(&v1065, v231, 8512);
            v945 = v232;
            if (v232)
              goto LABEL_242;
            if ((v233 & 1) != 0)
              goto LABEL_446;
          }
        }
        if (!sub_23AC37A40(v218, 12))
          goto LABEL_368;
        v234 = v945;
        v235 = v224(&v1070, v223, 8512);
        v945 = v234;
        if (v234)
          goto LABEL_242;
        v236 = v235;
        goto LABEL_647;
      }
      if ((v116[9] & 1) != 0)
      {

      }
      else
      {
        v403 = v116[10];
        v404 = *(void **)v116;
        v405 = v116[8];
        v406 = *(id *)v116;
        v407 = sub_23AC37680();
        sub_23AB7C6B4(v404, v405, 0);
        if ((v407 & 1) != 0 && sub_23AC37A40(v218, v403))
        {
          sub_23AB7C6B4(*(id *)v116, v116[8], v116[9]);
          v219 = v933;
          goto LABEL_77;
        }
        if (v403 == 3)
        {
          v427 = *(id *)v116;
          v428 = v116[9];
          v429 = v116[8];
          v430 = sub_23AC37680();
          sub_23AB7C6B4(v427, v429, v428);
          v219 = v933;
          if ((v430 & 1) == 0)
            goto LABEL_297;
          goto LABEL_77;
        }

      }
      sub_23AB7C6B4(*(id *)v116, v116[8], v116[9]);
      goto LABEL_379;
    }
    if (sub_23AC37674(0x40000, (uint64_t)v1089))
    {
      sub_23ADF1BC0((__n128 *)((char *)v1079 + 8), &v1081);
      sub_23ADF1BC0(&v1081, &v1086);
      if (v1087 || !sub_23AA9F3D0(256, v1086.n128_i64[0]))
        goto LABEL_369;
      v158 = v156;
      v188 = v945;
      v189 = sub_23B004EF0((unint64_t)v941);
      v945 = v188;
      if (v188)
        goto LABEL_43;
      v357 = v189;
      if (v189 == 70)
        goto LABEL_32;
      v358 = v923;
      sub_23AA8EFC8((uint64_t)v940, v923, (uint64_t *)&unk_2569E5F10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v939 + 48))(v358, 1, v942) == 1)
      {
LABEL_208:
        sub_23AA8A05C(v358, (uint64_t *)&unk_2569E5F10);
        v359 = v945;
        (*(void (**)(uint64_t, id *, _QWORD, uint64_t))(*(_QWORD *)v941[3] + 328))(v357, &v1070, *((_QWORD *)v943 + 57), 1);
        v945 = v359;
        if (v359)
          goto LABEL_242;
        goto LABEL_63;
      }
      sub_23AA8EFC8(v358, (uint64_t)v111, (uint64_t *)&unk_2569E5F10);
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        if ((BYTE1(v111[1].isa) & 1) != 0)
        {

          sub_23AB7C6B4(v111->isa, LOBYTE(v111[1].isa), BYTE1(v111[1].isa));
        }
        else
        {
          v501 = BYTE2(v111[1].isa);
          v502 = v111->isa;
          v503 = LOBYTE(v111[1].isa);
          v504 = sub_23AC37680();
          sub_23AB7C6B4(v502, v503, 0);
          if ((v504 & 1) != 0)
          {
            v505 = sub_23AC37A40(v357, v501);
            v358 = v923;
            if (v505)
              goto LABEL_208;
          }

        }
      }
      else
      {

        sub_23AA8A05C((uint64_t)v111, &qword_2542DDFC0);
      }
      v506 = v944;
      *(_QWORD *)v944 = 0;
      *(_WORD *)(v506 + 8) = -256;
      v296 = (uint64_t *)&unk_2569E5F10;
      v297 = v923;
      goto LABEL_238;
    }
    if (sub_23AC37674(512, (uint64_t)v1089))
    {
      sub_23AA8EFC8((uint64_t)v940, v108, (uint64_t *)&unk_2569E5F10);
      v201 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v939 + 48);
      if (v201(v108, 1, v942) == 1)
      {
LABEL_60:
        v202 = v156;
        goto LABEL_193;
      }
      sub_23AA8EFC8(v108, v105, (uint64_t *)&unk_2569E5F10);
      v298 = swift_getEnumCaseMultiPayload();
      if (v298 == 18)
      {
        v349 = *(void **)v105;
        v350 = v156;

LABEL_193:
        sub_23AA8A05C(v108, (uint64_t *)&unk_2569E5F10);
        v351 = v941[4];
        v352 = v945;
        (*(void (**)(void **__return_ptr, id *))(*(_QWORD *)v351 + 280))(&v1065, &v1070);
        v945 = v352;
        if (v352)
          goto LABEL_242;
        v353 = v1065;
        if (!v1065)
          goto LABEL_368;
        *(_QWORD *)&v1036[0] = v1065;
        v354 = v945;
        sub_23AFFA3FC(v1065, &v1065);
        v945 = v354;
        sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1062, (uint64_t *)&unk_2569E63E0);
        sub_23AA724E8((uint64_t)v1062, (uint64_t)&v1063, (uint64_t *)&unk_2569E63E0);
        if (sub_23AAFC2A4((uint64_t)&v1063) == 1)
        {
LABEL_245:

          goto LABEL_368;
        }
        sub_23AA724E8((uint64_t)v1062, (uint64_t)v1061, (uint64_t *)&unk_2569E63E0);
        memcpy(v1083, v1061, sizeof(v1083));
        if (v201((uint64_t)v940, 1, v942) == 1)
          goto LABEL_270;
        v442 = sub_23B002AF8();
        if (v442)
        {
          v443 = *((_QWORD *)&v1061[0] + 1);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E22A8);
          v444 = swift_allocObject();
          v445 = sub_23B181814(v444, 2);
          *v446 = xmmword_23B1CE650;
          v447 = nullsub_1(v445);
          v448 = sub_23AFD7BC8(v447);
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB367C);
          swift_bridgeObjectRelease();
          LOBYTE(v443) = sub_23AA9F570(v448, v443);
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
          if ((v443 & 1) == 0)
            goto LABEL_270;
        }
        v449 = v945;
        v450 = (*(uint64_t (**)(_OWORD *))(*(_QWORD *)v351 + 440))(v1036);
        v945 = v449;
        if (v449)
        {
LABEL_332:
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);

          goto LABEL_242;
        }
        v527 = v1070;
        v1032[0] = v1070;
        if ((v450 & 1) != 0)
          goto LABEL_270;
        v528 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)v351 + 464);
        sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB367C);
        v529 = v527;
        v530 = v945;
        v531 = v528(v1032);
        v945 = v530;
        if (v530)
        {
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);

          goto LABEL_332;
        }
        v658 = v531;
        sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);

        if ((v442 & v658 & 1) != 0)
        {
LABEL_270:
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);

LABEL_446:
          goto LABEL_447;
        }
        v659 = v941[3];
        v660 = (void *)sub_23ADF6FB8();
        *(_QWORD *)&v995 = v660;
        v661 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE410);
        v662 = sub_23AAEC8DC();
        v663 = v945;
        v664 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)v659 + 288))(&v995, v661, v662);
        v945 = v663;
        if (v663)
        {

          goto LABEL_332;
        }
        v236 = v664;

        sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
LABEL_646:

LABEL_647:
        if ((v236 & 1) == 0)
          goto LABEL_369;
        goto LABEL_447;
      }
      if (v298 == 22)
      {
        if (sub_23AC37E20(*(unsigned __int8 *)(v941[4] + 32), *(unsigned __int8 *)v105))
          goto LABEL_60;
      }
      else
      {
        sub_23AA8A05C(v105, &qword_2542DDFC0);
      }
      v355 = v944;
      *(_QWORD *)v944 = 0;
      *(_WORD *)(v355 + 8) = -256;
      v296 = (uint64_t *)&unk_2569E5F10;
      v297 = v108;
      goto LABEL_238;
    }
    if (sub_23AC37674(1024, (uint64_t)v1089))
    {
      v210 = v873;
      sub_23AA8EFC8((uint64_t)v940, v873, (uint64_t *)&unk_2569E5F10);
      v211 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v939 + 48);
      if (v211(v210, 1, v942) == 1)
      {
        v212 = v156;
        goto LABEL_72;
      }
      sub_23AA8EFC8(v210, v872, (uint64_t *)&unk_2569E5F10);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 5u:
          v416 = v156;
          v423 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
          v418 = v872;
          v419 = v872 + *(int *)(v423 + 48);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v935 + 48))(v872, 1, v934) == 1)
          {
            v420 = &qword_2542E4770;
            goto LABEL_294;
          }
          v483 = *(_QWORD *)(v418 + *(int *)(v423 + 64));
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
          v484 = swift_allocObject();
          v485 = sub_23B1A1F64(v484, 2);
          *v486 = xmmword_23B1CE640;
          v487 = nullsub_1(v485);
          v488 = sub_23AFD7BC8(v487);
          v489 = v416;
          swift_bridgeObjectRelease();
          if ((sub_23AA9F56C(v488, v483) & 1) != 0)
          {

            v420 = &qword_2542E4770;
            goto LABEL_374;
          }
          v518 = &qword_2542E4770;
          break;
        case 6u:
          v416 = v156;
          v417 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
          v418 = v872;
          v419 = v872 + *(int *)(v417 + 48);
          if (v936[6]((char *)v872, 1, v937) == 1)
          {
            v420 = (uint64_t *)&unk_2542E4750;
LABEL_294:
            sub_23AA8A05C(v419, v420);
            v415 = v418;
            goto LABEL_375;
          }
          v476 = *(_QWORD *)(v418 + *(int *)(v417 + 64));
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
          v477 = swift_allocObject();
          v478 = sub_23B1A1F64(v477, 2);
          *v479 = xmmword_23B1CE640;
          v480 = nullsub_1(v478);
          v481 = sub_23AFD7BC8(v480);
          v482 = v416;
          swift_bridgeObjectRelease();
          if ((sub_23AA9F56C(v481, v476) & 1) != 0)
          {

            v420 = (uint64_t *)&unk_2542E4750;
LABEL_374:
            sub_23AA8A05C(v418, v420);
            v415 = v419;
LABEL_375:
            v414 = v420;
LABEL_376:
            sub_23AA8A05C(v415, v414);
            v490 = v944;
            *(_QWORD *)v944 = 0;
            *(_WORD *)(v490 + 8) = -256;
            v296 = (uint64_t *)&unk_2569E5F10;
            v297 = v873;
            goto LABEL_238;
          }
          v518 = (uint64_t *)&unk_2542E4750;
          break;
        case 8u:
        case 0x21u:
          v324 = v156;
          sub_23AA8A05C(v872, &qword_2542DDFC0);
          goto LABEL_72;
        case 0xCu:
          v424 = v872;
          v425 = *(void **)(v872 + 16);
          v426 = v156;

          sub_23AB7C6B4(*(id *)v424, *(unsigned __int8 *)(v424 + 8), *(_BYTE *)(v424 + 9));
          goto LABEL_72;
        case 0x14u:
        case 0x15u:
          v397 = v156;
          swift_release();
          goto LABEL_72;
        case 0x26u:
          v421 = v944;
          *(_QWORD *)v944 = 0;
          *(_WORD *)(v421 + 8) = -256;
          sub_23AA8A05C(v872, &qword_2542DDFC0);
          v422 = v873;
          goto LABEL_291;
        default:
          v414 = &qword_2542DDFC0;
          v415 = v872;
          goto LABEL_376;
      }
      sub_23AA8A05C(v418, v518);
      sub_23AA8A05C(v419, v518);
      v156 = v416;
LABEL_72:
      sub_23AA8A05C(v873, (uint64_t *)&unk_2569E5F10);
      v213 = v941[4];
      v214 = sub_23AAED140();
      v215 = (uint64_t)v931;
      v216 = v945;
      (*(void (**)(id *, _QWORD))(*(_QWORD *)v213 + 240))(&v1070, v214 & 1);
      v945 = v216;
      if (v216)
        goto LABEL_242;
      v217 = *(unsigned int (**)(void))(v935 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v217)(v215, 1, v934) == 1)
      {

        sub_23AA8A05C(v215, &qword_2542E4770);
        goto LABEL_369;
      }
      v381 = v156;
      v382 = v924;
      sub_23AA724E8(v215, v924, (uint64_t *)&unk_2542E4760);
      v383 = v941[2];
      v384 = v945;
      sub_23AFFA3FC(*(void **)(v382 + 8), &v1065);
      v945 = v384;
      if (v384)
      {
        v385 = v382;
        goto LABEL_241;
      }
      v1089 = v383;
      sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1062, (uint64_t *)&unk_2569E63E0);
      sub_23AA724E8((uint64_t)v1062, (uint64_t)&v1063, (uint64_t *)&unk_2569E63E0);
      if (sub_23AAFC2A4((uint64_t)&v1063) == 1)
      {
        sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

        sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1061, (uint64_t *)&unk_2569E63E0);
        sub_23ADF2D34((uint64_t)v1061, (voidsub_23AEB1930);
        goto LABEL_369;
      }
      sub_23AA724E8((uint64_t)v1062, (uint64_t)v1061, (uint64_t *)&unk_2569E63E0);
      memcpy(v1085, v1061, sizeof(v1085));
      v473 = LOBYTE(v1061[13]);
      if (LOBYTE(v1061[13]) == 255)
        goto LABEL_366;
      v513 = *((_QWORD *)&v1061[12] + 1);
      *(_QWORD *)&v939 = v941[5];
      if (sub_23AE4F6B4() && BYTE8(v1061[14]) != 3 && sub_23AA9F51C(SBYTE8(v1061[14]), 0))
        goto LABEL_366;
      v514 = v868;
      sub_23AA8EFC8((uint64_t)v940, v868, (uint64_t *)&unk_2569E5F10);
      if (v211(v514, 1, v942) == 1)
        goto LABEL_412;
      sub_23AA8EFC8(v868, (uint64_t)v867, (uint64_t *)&unk_2569E5F10);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 5u:
          v685 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
          v686 = (uint64_t)v867 + *(int *)(v685 + 48);
          if (v217() == 1)
          {
            sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
            sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

            v683 = &qword_2542E4770;
            v684 = v686;
            goto LABEL_611;
          }
          v702 = v894;
          sub_23AA724E8((uint64_t)v867, v894, (uint64_t *)&unk_2542E4760);
          v703 = sub_23AC37680();
          sub_23AA8EFC8(v702, v896, (uint64_t *)&unk_2542E4760);
          sub_23AA8EFC8(v924, v897, (uint64_t *)&unk_2542E4760);
          if ((v703 & 1) != 0)
          {
            sub_23AA8A05C(v896, (uint64_t *)&unk_2542E4760);
            sub_23AA8A05C(v897, (uint64_t *)&unk_2542E4760);
          }
          else
          {
            v706 = v896;
            v705 = v897;
            v707 = *(_QWORD *)(v896 + 88);
            v708 = *(_QWORD *)(v897 + 80);
            v709 = *(_QWORD *)(v897 + 88);
            *(_QWORD *)&v1036[0] = *(_QWORD *)(v896 + 80);
            *((_QWORD *)&v1036[0] + 1) = v707;
            v1032[0] = v708;
            v1032[1] = v709;
            sub_23AAA420C();
            v710 = sub_23B1C6D04();
            sub_23AA8A05C(v706, (uint64_t *)&unk_2542E4760);
            sub_23AA8A05C(v705, (uint64_t *)&unk_2542E4760);
            if (v710)
            {
              sub_23AA8A05C(v894, (uint64_t *)&unk_2542E4760);
              sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
              sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

              v680 = &qword_2542E4770;
              v681 = v686;
              goto LABEL_704;
            }
          }
          if (sub_23AEB54F4() && !sub_23B002AF8())
          {
            sub_23AA8A05C(v894, (uint64_t *)&unk_2542E4760);
          }
          else
          {
            v711 = sub_23B002AF8();
            sub_23AA8A05C(v894, (uint64_t *)&unk_2542E4760);
            if (!v711)
            {
              v712 = v943[440];
              if (v712 == 4 || !sub_23AC37B08(v712, 1))
              {
                sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
                sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

                v713 = v944;
                *(_QWORD *)v944 = 0;
                *(_WORD *)(v713 + 8) = -256;
                sub_23AA8A05C(v686, &qword_2542E4770);
LABEL_706:
                v296 = (uint64_t *)&unk_2569E5F10;
                v297 = v868;
                goto LABEL_238;
              }
            }
          }
          sub_23AA8A05C(v686, &qword_2542E4770);
          goto LABEL_412;
        case 6u:
          v682 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
          v938 = ((char *)v867 + *(int *)(v682 + 48));
          if (((unsigned int (*)(void))v936[6])() == 1)
          {
            sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
            sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

            v683 = (uint64_t *)&unk_2542E4750;
            v684 = (uint64_t)v938;
LABEL_611:
            sub_23AA8A05C(v684, v683);
            v681 = (uint64_t)v867;
            v680 = v683;
LABEL_704:
            sub_23AA8A05C(v681, v680);
            goto LABEL_705;
          }
          v700 = v900;
          sub_23AA724E8((uint64_t)v867, v900, (uint64_t *)&unk_2542E6B00);
          v701 = *(_QWORD *)(v700 + 16);
          if (*(_BYTE *)(v700 + 24))
          {
            if (*(_BYTE *)(v700 + 24) == 1)
            {
              if (v473 != 1 || v701 != v513)
              {
LABEL_702:
                v739 = v900;
                v740 = v893;
                sub_23AA8EFC8(v900, v893, (uint64_t *)&unk_2542E6B00);
                v741 = v892;
                sub_23AA8EFC8(v924, v892, (uint64_t *)&unk_2542E4760);
                sub_23AA8A05C(v739, (uint64_t *)&unk_2542E6B00);
                sub_23AA8A05C(v740, (uint64_t *)&unk_2542E6B00);
                sub_23AA8A05C(v741, (uint64_t *)&unk_2542E4760);
                goto LABEL_703;
              }
            }
            else if (v701)
            {
              if (v473 != 2 || v513 != 1)
                goto LABEL_702;
            }
            else if (v473 != 2 || v513)
            {
              goto LABEL_702;
            }
          }
          else if (v473 || (_DWORD)v701 != (_DWORD)v513)
          {
            goto LABEL_702;
          }
          v734 = v893;
          sub_23AA8EFC8(v900, v893, (uint64_t *)&unk_2542E6B00);
          v735 = v892;
          sub_23AA8EFC8(v924, v892, (uint64_t *)&unk_2542E4760);
          v736 = *(_QWORD *)(v734 + 128);
          v737 = *(_QWORD *)(v734 + 136);
          v738 = *(_QWORD *)(v735 + 80);
          v937 = *(_QWORD *)(v735 + 88);
          swift_retain();
          LOBYTE(v737) = sub_23B070090(v736, v737, v738, v937);
          swift_release();
          sub_23AA8A05C(v900, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C(v734, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C(v735, (uint64_t *)&unk_2542E4760);
          if ((v737 & 1) == 0)
          {
LABEL_703:
            sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
            sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

            v680 = (uint64_t *)&unk_2542E4750;
            v681 = (uint64_t)v938;
            goto LABEL_704;
          }
          sub_23AA8A05C((uint64_t)v938, (uint64_t *)&unk_2542E4750);
          goto LABEL_412;
        case 8u:
          v687 = v902;
          sub_23AA724E8((uint64_t)v867, v902, (uint64_t *)&unk_2542E6B00);
          v688 = *(_QWORD *)(v687 + 16);
          if (*(_BYTE *)(v687 + 24))
          {
            if (*(_BYTE *)(v687 + 24) == 1)
            {
              if (v473 != 1 || v688 != v513)
              {
LABEL_687:
                v725 = v902;
                v726 = v899;
                sub_23AA8EFC8(v902, v899, (uint64_t *)&unk_2542E6B00);
                v727 = v898;
                sub_23AA8EFC8(v924, v898, (uint64_t *)&unk_2542E4760);
                sub_23AA8A05C(v725, (uint64_t *)&unk_2542E6B00);
                sub_23AA8A05C(v726, (uint64_t *)&unk_2542E6B00);
                sub_23AA8A05C(v727, (uint64_t *)&unk_2542E4760);
                goto LABEL_688;
              }
            }
            else if (v688)
            {
              if (v473 != 2 || v513 != 1)
                goto LABEL_687;
            }
            else if (v473 != 2 || v513)
            {
              goto LABEL_687;
            }
          }
          else if (v473 || (_DWORD)v688 != (_DWORD)v513)
          {
            goto LABEL_687;
          }
          v720 = v899;
          sub_23AA8EFC8(v902, v899, (uint64_t *)&unk_2542E6B00);
          v721 = v898;
          sub_23AA8EFC8(v924, v898, (uint64_t *)&unk_2542E4760);
          v722 = *(_QWORD *)(v720 + 128);
          v938 = *(NSObject **)(v720 + 136);
          v723 = *(_QWORD *)(v721 + 80);
          v724 = *(_QWORD *)(v721 + 88);
          swift_retain();
          LOBYTE(v723) = sub_23B070090(v722, (unint64_t)v938, v723, v724);
          swift_release();
          sub_23AA8A05C(v902, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C(v720, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C(v721, (uint64_t *)&unk_2542E4760);
          if ((v723 & 1) != 0)
          {
LABEL_412:
            sub_23AA8A05C(v868, (uint64_t *)&unk_2569E5F10);
            v515 = v945;
            v516 = sub_23B00BC20(v952, (uint64_t)v943, v924, (uint64_t)v1085, (uint64_t)v941);
            v945 = v515;
            if (v515)
              goto LABEL_413;
            v611 = v517;
            if ((v516 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              goto LABEL_587;
            }
            LODWORD(v937) = LOWORD(v952[1]);
            if (HIBYTE(LOWORD(v952[1])) <= 0xFEu)
            {
              v675 = v952[0];
              swift_bridgeObjectRelease();
              sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
              sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

              v676 = v944;
              *(_QWORD *)v944 = v675;
              *(_WORD *)(v676 + 8) = v937;
              return;
            }
            if (!v517)
              goto LABEL_366;
            if (!*(_QWORD *)(v517 + 16))
            {
              swift_bridgeObjectRelease();
LABEL_668:
              v656 = v952[0];
              v657 = v937;
              goto LABEL_588;
            }
            v612 = (unsigned int (**)(char *, uint64_t, unint64_t))*((_QWORD *)v943 + 25);
            LODWORD(v938) = v943[208];
            v613 = (_DWORD)v938 == 2;
            swift_retain();
            v614 = sub_23ACDBC44((uint64_t (*)())v1036, 0, v611);
            v616 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v615;
            v617 = *(_BYTE *)(v615 + 8);
            ((void (*)(_OWORD *, _QWORD))v614)(v1036, 0);
            v618 = v612 == (unsigned int (**)(char *, uint64_t, unint64_t))1 && v613;
            LODWORD(v935) = v618;
            v936 = v612;
            if (v612)
              v619 = 0;
            else
              v619 = v613;
            LODWORD(v933) = v619;
            v620 = 1;
            while (1)
            {
              v948 = v616;
              LOBYTE(v949) = v617;
              if ((_DWORD)v938 != 255)
              {
                if (v617)
                {
                  if (v617 == 1)
                  {
                    if ((_DWORD)v938 == 1 && (char *)v616 == (char *)v936)
                      goto LABEL_667;
                  }
                  else if (v616)
                  {
                    if ((v935 & 1) != 0)
                      goto LABEL_667;
                  }
                  else if ((v933 & 1) != 0)
                  {
                    goto LABEL_667;
                  }
                }
                else if (!(_DWORD)v938 && (_DWORD)v616 == (_DWORD)v936)
                {
LABEL_667:
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_668;
                }
              }
              v621 = v945;
              sub_23AFFA638((uint64_t)v616, v617, (uint64_t)v1036);
              v945 = v621;
              if (v621)
              {
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_763;
              }
              sub_23AA724E8((uint64_t)v1036, (uint64_t)&v995, qword_2542E6E20);
              sub_23AA724E8((uint64_t)&v995, (uint64_t)v1032, qword_2542E6E20);
              if (sub_23AAFC2A4((uint64_t)v1032) != 1)
                break;
LABEL_552:
              if (v620 == *(_QWORD *)(v611 + 16))
                goto LABEL_667;
              v636 = sub_23ACDBC44((uint64_t (*)())v1036, v620, v611);
              v616 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v637;
              v617 = *(_BYTE *)(v637 + 8);
              ((void (*)(_OWORD *, _QWORD))v636)(v1036, 0);
              v600 = __OFADD__(v620++, 1);
              if (v600)
              {
                __break(1u);
                goto LABEL_761;
              }
            }
            sub_23AA724E8((uint64_t)&v995, (uint64_t)v994, qword_2542E6E20);
            memcpy(v1084, v994, sizeof(v1084));
            v622 = *(void **)&v994[15];
            if (!*(_QWORD *)&v994[15])
            {
LABEL_551:
              sub_23ADF2D34((uint64_t)&v995, (voidsub_23AAAEC3C);
              goto LABEL_552;
            }
            v988 = *(id *)&v994[15];
            v623 = v866;
            sub_23AA8EFC8((uint64_t)v940, (uint64_t)v866, (uint64_t *)&unk_2569E5F10);
            if (v211((uint64_t)v623, 1, v942) == 1)
            {
              v624 = v622;
              v625 = v866;
              v626 = (uint64_t *)&unk_2569E5F10;
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 21)
              {
                v934 = *v866;
                if ((v934 & 0x8000000000000000) == 0
                  && (__swift_instantiateConcreteTypeFromMangledName(&qword_2542E69B0),
                      (v932 = (char *)swift_dynamicCastClass()) != 0)
                  && v932[104] == 3)
                {
                  v627 = (uint8_t *)*((_QWORD *)v932 + 11);
                  v931 = *((_QWORD *)v932 + 12);
                  v991 = v627;
                  v628 = v622;
                  sub_23AAAE478(v627, v931, 3);
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0960);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    if (v958 == 1)
                    {
                      swift_bridgeObjectRelease();
                      sub_23AB22AE4(v955, *((unint64_t *)&v955 + 1));

                      v629 = (void *)v953;
                      v931 = v381;
                      v630 = v629;
                      LODWORD(v930) = sub_23AC37680();
                      v929 = v630;

                      if ((v930 & 1) != 0)
                      {
                        v631 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v932 + 17);
                        if (v932[144])
                        {
                          if (v932[144] == 1)
                          {
                            if (v949 == 1 && v631 == v948)
                              goto LABEL_778;
                          }
                          else if (v631)
                          {
                            if (v949 == 2
                              && v948 == (uint64_t (*)(uint64_t, uint64_t, uint64_t))1)
                            {
                              goto LABEL_778;
                            }
                          }
                          else if (v949 == 2 && !v948)
                          {
                            goto LABEL_778;
                          }
                        }
                        else if (!(_BYTE)v949 && (_DWORD)v631 == (_DWORD)v948)
                        {
LABEL_778:
                          swift_bridgeObjectRelease();
                          sub_23AF9CAE0();
                          v850 = swift_allocObject();
                          v851 = v929;
                          *(_QWORD *)(v850 + 16) = v929;
                          v852 = swift_allocObject();
                          *(_QWORD *)(v852 + 16) = sub_23B057978;
                          *(_QWORD *)(v852 + 24) = v850;
                          v1089 = v851;
                          v853 = sub_23B1C5E40();
                          v854 = sub_23B1C6AB8();
                          v855 = swift_allocObject();
                          *(_BYTE *)(v855 + 16) = 32;
                          v856 = swift_allocObject();
                          *(_BYTE *)(v856 + 16) = 8;
                          v857 = swift_allocObject();
                          *(_QWORD *)(v857 + 16) = sub_23B06B130;
                          *(_QWORD *)(v857 + 24) = v852;
                          v858 = swift_allocObject();
                          *(_QWORD *)(v858 + 16) = sub_23AB33690;
                          *(_QWORD *)(v858 + 24) = v857;
                          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                          v859 = swift_allocObject();
                          sub_23B1A1F64(v859, 3);
                          *v860 = sub_23AB336B0;
                          v860[1] = v855;
                          v860[2] = sub_23AB336B0;
                          v860[3] = v856;
                          v860[4] = sub_23AB336AC;
                          v860[5] = v858;
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          swift_bridgeObjectRelease();
                          LODWORD(v943) = v854;
                          if (!os_log_type_enabled(v853, (os_log_type_t)v854))
                          {
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();

                            swift_release();
                            (*(void (**)(char *, uint64_t))(v908 + 8))(v884, v909);

                            goto LABEL_784;
                          }
                          v861 = (uint8_t *)sub_23AFF5C30();
                          v862 = (void *)swift_slowAlloc();
                          v950 = 0;
                          v993 = v862;
                          *(_WORD *)v861 = 258;
                          v991 = v861 + 2;
                          *(_QWORD *)&v953 = sub_23AB336B0;
                          *((_QWORD *)&v953 + 1) = v855;
                          v863 = (uint64_t)v945;
                          sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                          v108 = v863;
                          if (!v863)
                          {
                            swift_release();
                            *(_QWORD *)&v953 = sub_23AB336B0;
                            *((_QWORD *)&v953 + 1) = v856;
                            sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                            swift_release();
                            *(_QWORD *)&v953 = sub_23AB336AC;
                            *((_QWORD *)&v953 + 1) = v858;
                            sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                            v945 = 0;
                            swift_release();
                            _os_log_impl(&dword_23AA66000, v853, (os_log_type_t)v943, "♻️  breaking move-back vs creation cycle by disabling path-matching condition for propagation of %s", v861, 0xCu);
                            swift_arrayDestroy();
                            MEMORY[0x23B8614BC](v862, -1, -1);
                            sub_23AFF5C38();
                          }
                          goto LABEL_790;
                        }
                      }
                      swift_release();

                    }
                    else
                    {
                      swift_release();
                      sub_23AC04E04((void *)v953, *((void **)&v953 + 1), v954, *((void **)&v954 + 1), v955, *((unint64_t *)&v955 + 1), (void *)v956, *((uint64_t *)&v956 + 1), v957, *((void **)&v957 + 1), v958);
                    }
                  }
                  else
                  {
                    v957 = 0u;
                    v956 = 0u;
                    v955 = 0u;
                    v954 = 0u;
                    v953 = 0u;
                    LOBYTE(v958) = -1;
                    swift_release();
                    sub_23AEB0840((void *)v953, *((void **)&v953 + 1), v954, *((void **)&v954 + 1), v955, *((unint64_t *)&v955 + 1), (void *)v956, *((uint64_t *)&v956 + 1), v957, *((void **)&v957 + 1), v958);
                  }
                }
                else
                {
                  v638 = v622;
                  swift_release();
                }
                goto LABEL_548;
              }
              v632 = v622;
              v625 = v866;
              v626 = &qword_2542DDFC0;
            }
            sub_23AA8A05C((uint64_t)v625, v626);
LABEL_548:
            v633 = v945;
            v634 = sub_23B01DBB4((uint64_t)v1084, v941);
            v945 = v633;
            if (v633)
              goto LABEL_762;
            v635 = v634;
            if (!sub_23AA9F490(v634))
            {
              v745 = sub_23AFA7BFC();
              if (sub_23AC37674(v635, *v745))
              {
                if (BYTE8(v994[22]) || !sub_23AA9F3D0(8, *((uint64_t *)&v994[21] + 1)))
                  goto LABEL_737;
                if ((_DWORD)v938 == 255)
                  goto LABEL_717;
LABEL_761:
                v991 = (uint8_t *)v936;
                v992 = (char)v938;
                v820 = v945;
                v821 = (*(uint64_t (**)(uint8_t **, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v939 + 536))(&v991, &v948);
                v945 = v820;
                if (v820)
                {
LABEL_762:
                  swift_release();

                  sub_23ADF2D34((uint64_t)&v995, (voidsub_23AAAEC3C);
                  swift_bridgeObjectRelease();
LABEL_763:
                  sub_23ADF1CB4(v952[0], v937);
LABEL_413:
                  sub_23ADF2D34((uint64_t)v1062, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB1930);
                  v385 = v924;
LABEL_241:
                  sub_23AA8A05C(v385, (uint64_t *)&unk_2542E4760);
                  goto LABEL_242;
                }
                if ((v821 & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  sub_23AF9CAE0();
                  v823 = v1070;
                  v824 = swift_allocObject();
                  *(_QWORD *)(v824 + 16) = v823;
                  v825 = swift_allocObject();
                  *(_QWORD *)(v825 + 16) = sub_23B06B4E8;
                  *(_QWORD *)(v825 + 24) = v824;
                  v826 = v823;
                  v827 = sub_23B1C5E40();
                  v828 = sub_23B1C6AB8();
                  v105 = swift_allocObject();
                  *(_BYTE *)(v105 + 16) = 32;
                  v829 = swift_allocObject();
                  *(_BYTE *)(v829 + 16) = 8;
                  v830 = swift_allocObject();
                  *(_QWORD *)(v830 + 16) = sub_23B06B130;
                  *(_QWORD *)(v830 + 24) = v825;
                  v108 = swift_allocObject();
                  *(_QWORD *)(v108 + 16) = sub_23AB33690;
                  *(_QWORD *)(v108 + 24) = v830;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                  v831 = swift_allocObject();
                  sub_23B1A1F64(v831, 3);
                  *v832 = sub_23AB336B0;
                  v832[1] = v105;
                  v832[2] = sub_23AB336B0;
                  v832[3] = v829;
                  v832[4] = sub_23AB336AC;
                  v832[5] = v108;
                  swift_retain();
                  swift_retain();
                  swift_retain();
                  swift_bridgeObjectRelease();
                  LODWORD(v1089) = v828;
                  if (os_log_type_enabled(v827, (os_log_type_t)v828))
                  {
                    v833 = (uint8_t *)sub_23AFF5C30();
                    v834 = swift_slowAlloc();
                    v993 = 0;
                    v990 = (uint8_t *)v834;
                    *(_WORD *)v833 = 258;
                    v950 = v833 + 2;
                    *(_QWORD *)&v953 = sub_23AB336B0;
                    *((_QWORD *)&v953 + 1) = v105;
                    v835 = v945;
                    sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v950, (uint64_t)&v993, (uint64_t)&v990);
                    v111 = v835;
                    if (!v835)
                    {
                      swift_release();
                      *(_QWORD *)&v953 = sub_23AB336B0;
                      *((_QWORD *)&v953 + 1) = v829;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v950, (uint64_t)&v993, (uint64_t)&v990);
                      swift_release();
                      *(_QWORD *)&v953 = sub_23AB336AC;
                      *((_QWORD *)&v953 + 1) = v108;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v950, (uint64_t)&v993, (uint64_t)&v990);
                      v945 = 0;
                      swift_release();
                      _os_log_impl(&dword_23AA66000, v827, (os_log_type_t)v1089, "♻️  breaking replacing a parent cycle by disabling path-matching condition for propagation of %s", v833, 0xCu);
                      swift_arrayDestroy();
                      MEMORY[0x23B8614BC](v834, -1, -1);
                      sub_23AFF5C38();
                    }
                    goto LABEL_788;
                  }
                  swift_release();
                  swift_release();
                  swift_release();

                  swift_release();
                  (*(void (**)(char *, uint64_t))(v908 + 8))(v885, v909);
LABEL_784:

                  sub_23ADF2D34((uint64_t)&v995, (voidsub_23AAAEC3C);
LABEL_587:
                  v656 = v952[0];
                  v657 = LOWORD(v952[1]);
LABEL_588:
                  sub_23ADF1CB4(v656, v657);
LABEL_366:
                  sub_23ADF2D34((uint64_t)v1062, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB1930);
                  v474 = v924;
LABEL_367:
                  sub_23AA8A05C(v474, (uint64_t *)&unk_2542E4760);
LABEL_368:

LABEL_369:
                  v475 = v944;
                  *(_QWORD *)v944 = 0;
                  *(_WORD *)(v475 + 8) = -256;
                  return;
                }
LABEL_717:
                if (BYTE8(v994[0]) == 255)
                  goto LABEL_737;
                v991 = *(uint8_t **)&v994[0];
                v992 = BYTE8(v994[0]);
                v746 = v945;
                v747 = (*(uint64_t (**)(uint8_t **, id *))(*(_QWORD *)v939 + 560))(&v991, &v1070);
                v945 = v746;
                if (v746)
                  goto LABEL_762;
                if ((v747 & 1) == 0)
                {
LABEL_737:
                  v783 = BYTE8(v994[0]);
                  if (BYTE8(v994[0]) == 255)
                  {
                    swift_release();

                    sub_23ADF2D34((uint64_t)&v995, (voidsub_23AAAEC3C);
                    swift_bridgeObjectRelease();
                    sub_23ADF1CB4(v952[0], v937);
                    sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
                    sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

                    v784 = 0;
                    *(_WORD *)(v944 + 8) = -256;
                  }
                  else
                  {
                    v784 = *(_QWORD *)&v994[0];
                    swift_release();

                    sub_23ADF2D34((uint64_t)&v995, (voidsub_23AAAEC3C);
                    swift_bridgeObjectRelease();
                    sub_23ADF1CB4(v952[0], v937);
                    sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
                    sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

                    v785 = v944;
                    *(_BYTE *)(v944 + 8) = v783;
                    *(_BYTE *)(v785 + 9) = 1;
                  }
                  *(_QWORD *)v944 = v784;
                  return;
                }
                swift_bridgeObjectRelease();
                sub_23AF9CAE0();
                v748 = v1070;
                v749 = swift_allocObject();
                *(_QWORD *)(v749 + 16) = v748;
                v750 = swift_allocObject();
                *(_QWORD *)(v750 + 16) = sub_23B06B4E8;
                *(_QWORD *)(v750 + 24) = v749;
                v751 = v748;
                v752 = sub_23B1C5E40();
                v753 = sub_23B1C6AB8();
                v105 = swift_allocObject();
                *(_BYTE *)(v105 + 16) = 32;
                v754 = swift_allocObject();
                *(_BYTE *)(v754 + 16) = 8;
                v755 = swift_allocObject();
                *(_QWORD *)(v755 + 16) = sub_23B06B130;
                *(_QWORD *)(v755 + 24) = v750;
                v108 = swift_allocObject();
                *(_QWORD *)(v108 + 16) = sub_23AB33690;
                *(_QWORD *)(v108 + 24) = v755;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                v756 = swift_allocObject();
                sub_23B1A1F64(v756, 3);
                *v757 = sub_23AB336B0;
                v757[1] = v105;
                v757[2] = sub_23AB336B0;
                v757[3] = v754;
                v757[4] = sub_23AB336AC;
                v757[5] = v108;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRelease();
                LODWORD(v1089) = v753;
                if (!os_log_type_enabled(v752, (os_log_type_t)v753))
                {
                  swift_release();
                  swift_release();
                  swift_release();

                  swift_release();
                  (*(void (**)(char *, uint64_t))(v908 + 8))(v887, v909);
                  goto LABEL_784;
                }
                v758 = (uint8_t *)sub_23AFF5C30();
                v759 = swift_slowAlloc();
                v993 = 0;
                v990 = (uint8_t *)v759;
                *(_WORD *)v758 = 258;
                v950 = v758 + 2;
                *(_QWORD *)&v953 = sub_23AB336B0;
                *((_QWORD *)&v953 + 1) = v105;
                v760 = v945;
                sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v950, (uint64_t)&v993, (uint64_t)&v990);
                v111 = v760;
                if (!v760)
                {
                  swift_release();
                  *(_QWORD *)&v953 = sub_23AB336B0;
                  *((_QWORD *)&v953 + 1) = v754;
                  sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v950, (uint64_t)&v993, (uint64_t)&v990);
                  swift_release();
                  *(_QWORD *)&v953 = sub_23AB336AC;
                  *((_QWORD *)&v953 + 1) = v108;
                  sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v950, (uint64_t)&v993, (uint64_t)&v990);
                  v945 = 0;
                  swift_release();
                  _os_log_impl(&dword_23AA66000, v752, (os_log_type_t)v1089, "♻️  breaking reparent-to-new cycle by disabling path-matching condition for propagation of %s", v758, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x23B8614BC](v759, -1, -1);
                  sub_23AFF5C38();
                }
LABEL_788:
                swift_release();
LABEL_789:

                __break(1u);
                swift_release();

                __break(1u);
LABEL_790:
                swift_release();

                __break(1u);
                JUMPOUT(0x23B015924);
              }
              if (!sub_23AA9F3D0(2, v635)
                || BYTE8(v994[27]) == 4
                || !sub_23AC37B08(SBYTE8(v994[27]), 1)
                || (v762 = v943[440], v762 == 4)
                || !sub_23AC37B08(v762, 1))
              {
LABEL_735:
                if (!BYTE8(v994[22]))
                {
                  v793 = *((_QWORD *)&v994[21] + 1);
                  if (sub_23AA9F3D0(2, *((uint64_t *)&v994[21] + 1)))
                  {
                    *(_QWORD *)&v953 = v381;
                    v794 = *(uint64_t (**)(id *, __int128 *))(*(_QWORD *)v213 + 536);
                    v795 = v381;
                    v796 = v945;
                    v797 = v794(&v988, &v953);
                    v945 = v796;
                    if (v796)
                      goto LABEL_756;
                    v798 = v797;

                    if ((v798 & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      sub_23AF9CAE0();
                      v799 = v1070;
                      v800 = swift_allocObject();
                      *(_QWORD *)(v800 + 16) = v799;
                      v801 = swift_allocObject();
                      *(_QWORD *)(v801 + 16) = sub_23B06B4E8;
                      *(_QWORD *)(v801 + 24) = v800;
                      v802 = v799;
                      v803 = sub_23B1C5E40();
                      v804 = sub_23B1C6AB8();
                      v105 = swift_allocObject();
                      *(_BYTE *)(v105 + 16) = 32;
                      v805 = swift_allocObject();
                      *(_BYTE *)(v805 + 16) = 8;
                      v806 = swift_allocObject();
                      *(_QWORD *)(v806 + 16) = sub_23B06B130;
                      *(_QWORD *)(v806 + 24) = v801;
                      v108 = swift_allocObject();
                      *(_QWORD *)(v108 + 16) = sub_23AB33690;
                      *(_QWORD *)(v108 + 24) = v806;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                      v807 = swift_allocObject();
                      sub_23B1A1F64(v807, 3);
                      *v808 = sub_23AB336B0;
                      v808[1] = v105;
                      v808[2] = sub_23AB336B0;
                      v808[3] = v805;
                      v808[4] = sub_23AB336AC;
                      v808[5] = v108;
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_bridgeObjectRelease();
                      LODWORD(v1089) = v804;
                      if (!os_log_type_enabled(v803, (os_log_type_t)v804))
                      {
                        swift_release();
                        swift_release();
                        swift_release();

                        swift_release();
                        (*(void (**)(char *, uint64_t))(v908 + 8))(v888, v909);
                        goto LABEL_784;
                      }
                      v809 = (uint8_t *)sub_23AFF5C30();
                      v810 = (void *)swift_slowAlloc();
                      v950 = 0;
                      v993 = v810;
                      *(_WORD *)v809 = 258;
                      v991 = v809 + 2;
                      *(_QWORD *)&v953 = sub_23AB336B0;
                      *((_QWORD *)&v953 + 1) = v105;
                      v811 = v945;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                      v111 = v811;
                      if (!v811)
                      {
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB336B0;
                        *((_QWORD *)&v953 + 1) = v805;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB336AC;
                        *((_QWORD *)&v953 + 1) = v108;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                        v945 = 0;
                        swift_release();
                        _os_log_impl(&dword_23AA66000, v803, (os_log_type_t)v1089, "♻️  breaking parent creation cycle by disabling path-matching condition for propagation of %s", v809, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x23B8614BC](v810, -1, -1);
                        sub_23AFF5C38();
                      }
                      goto LABEL_788;
                    }
                  }
                  else if (sub_23AA9F3D0(1024, v793))
                  {
                    *(_QWORD *)&v953 = v381;
                    v812 = *(uint64_t (**)(id *, __int128 *, uint64_t))(*(_QWORD *)v213 + 552);
                    v813 = v381;
                    v814 = v945;
                    v815 = v812(&v988, &v953, 1);
                    v945 = v814;
                    if (v814)
                      goto LABEL_756;
                    v836 = v815;

                    if ((v836 & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      sub_23AF9CAE0();
                      v837 = v1070;
                      v838 = swift_allocObject();
                      *(_QWORD *)(v838 + 16) = v837;
                      v839 = swift_allocObject();
                      *(_QWORD *)(v839 + 16) = sub_23B06B4E8;
                      *(_QWORD *)(v839 + 24) = v838;
                      v840 = v837;
                      v841 = sub_23B1C5E40();
                      v842 = sub_23B1C6AB8();
                      v105 = swift_allocObject();
                      *(_BYTE *)(v105 + 16) = 32;
                      v843 = swift_allocObject();
                      *(_BYTE *)(v843 + 16) = 8;
                      v844 = swift_allocObject();
                      *(_QWORD *)(v844 + 16) = sub_23B0578D0;
                      *(_QWORD *)(v844 + 24) = v839;
                      v108 = swift_allocObject();
                      *(_QWORD *)(v108 + 16) = sub_23AB22A20;
                      *(_QWORD *)(v108 + 24) = v844;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                      v845 = swift_allocObject();
                      sub_23B1A1F64(v845, 3);
                      *v846 = sub_23AB22A08;
                      v846[1] = v105;
                      v846[2] = sub_23AB336B0;
                      v846[3] = v843;
                      v846[4] = sub_23AB22A28;
                      v846[5] = v108;
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_bridgeObjectRelease();
                      LODWORD(v1089) = v842;
                      if (!os_log_type_enabled(v841, (os_log_type_t)v842))
                      {
                        swift_release();
                        swift_release();
                        swift_release();

                        swift_release();
                        (*(void (**)(char *, uint64_t))(v908 + 8))(v889, v909);
                        goto LABEL_784;
                      }
                      v847 = (uint8_t *)sub_23AFF5C30();
                      v848 = (void *)swift_slowAlloc();
                      v950 = 0;
                      v993 = v848;
                      *(_WORD *)v847 = 258;
                      v991 = v847 + 2;
                      *(_QWORD *)&v953 = sub_23AB22A08;
                      *((_QWORD *)&v953 + 1) = v105;
                      v849 = v945;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                      v111 = v849;
                      if (!v849)
                      {
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB336B0;
                        *((_QWORD *)&v953 + 1) = v843;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB22A28;
                        *((_QWORD *)&v953 + 1) = v108;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                        v945 = 0;
                        swift_release();
                        _os_log_impl(&dword_23AA66000, v841, (os_log_type_t)v1089, "♻️  detected move cycle by disabling path-matching condition for propagation of %s", v847, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x23B8614BC](v848, -1, -1);
                        sub_23AFF5C38();
                      }
                      goto LABEL_788;
                    }
                  }
                }
                v781 = v622;
                swift_release();

                sub_23ADF2D34((uint64_t)&v995, (voidsub_23AAAEC3C);
                swift_bridgeObjectRelease();
                sub_23ADF1CB4(v952[0], v937);
                sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
                sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

                v782 = v944;
                *(_QWORD *)v944 = v781;
                *(_BYTE *)(v782 + 9) = 0;
                return;
              }
              *(_QWORD *)&v953 = v381;
              v763 = *(uint64_t (**)(id *, __int128 *))(*(_QWORD *)v213 + 536);
              v764 = v381;
              v765 = v945;
              v766 = v763(&v988, &v953);
              v945 = v765;
              if (!v765)
              {
                v767 = v766;

                if ((v767 & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  sub_23AF9CAE0();
                  v768 = v1070;
                  v769 = swift_allocObject();
                  *(_QWORD *)(v769 + 16) = v768;
                  v770 = swift_allocObject();
                  *(_QWORD *)(v770 + 16) = sub_23B06B4E8;
                  *(_QWORD *)(v770 + 24) = v769;
                  v771 = v768;
                  v772 = sub_23B1C5E40();
                  v773 = sub_23B1C6AB8();
                  v105 = swift_allocObject();
                  *(_BYTE *)(v105 + 16) = 32;
                  v774 = swift_allocObject();
                  *(_BYTE *)(v774 + 16) = 8;
                  v775 = swift_allocObject();
                  *(_QWORD *)(v775 + 16) = sub_23B06B130;
                  *(_QWORD *)(v775 + 24) = v770;
                  v108 = swift_allocObject();
                  *(_QWORD *)(v108 + 16) = sub_23AB33690;
                  *(_QWORD *)(v108 + 24) = v775;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                  v776 = swift_allocObject();
                  sub_23B1A1F64(v776, 3);
                  *v777 = sub_23AB336B0;
                  v777[1] = v105;
                  v777[2] = sub_23AB336B0;
                  v777[3] = v774;
                  v777[4] = sub_23AB336AC;
                  v777[5] = v108;
                  swift_retain();
                  swift_retain();
                  swift_retain();
                  swift_bridgeObjectRelease();
                  LODWORD(v1089) = v773;
                  if (!os_log_type_enabled(v772, (os_log_type_t)v773))
                  {
                    swift_release();
                    swift_release();
                    swift_release();

                    swift_release();
                    (*(void (**)(char *, uint64_t))(v908 + 8))(v886, v909);
                    goto LABEL_784;
                  }
                  v778 = (uint8_t *)sub_23AFF5C30();
                  v779 = (void *)swift_slowAlloc();
                  v950 = 0;
                  v993 = v779;
                  *(_WORD *)v778 = 258;
                  v991 = v778 + 2;
                  *(_QWORD *)&v953 = sub_23AB336B0;
                  *((_QWORD *)&v953 + 1) = v105;
                  v780 = v945;
                  sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                  v111 = v780;
                  if (!v780)
                  {
                    swift_release();
                    *(_QWORD *)&v953 = sub_23AB336B0;
                    *((_QWORD *)&v953 + 1) = v774;
                    sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                    swift_release();
                    *(_QWORD *)&v953 = sub_23AB336AC;
                    *((_QWORD *)&v953 + 1) = v108;
                    sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)&v991, (uint64_t)&v950, (uint64_t)&v993);
                    v945 = 0;
                    swift_release();
                    _os_log_impl(&dword_23AA66000, v772, (os_log_type_t)v1089, "♻️  breaking reparent cycle by disabling path-matching condition for propagation of %s", v778, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x23B8614BC](v779, -1, -1);
                    sub_23AFF5C38();
                  }
                  goto LABEL_788;
                }
                goto LABEL_735;
              }
LABEL_756:
              swift_release();

              sub_23ADF2D34((uint64_t)&v995, (voidsub_23AAAEC3C);
              swift_bridgeObjectRelease();
              sub_23ADF1CB4(v952[0], v937);
              sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
              sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

              v386 = (id)v953;
LABEL_243:

              return;
            }

            goto LABEL_551;
          }
LABEL_688:
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
          sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

LABEL_705:
          v742 = v944;
          *(_QWORD *)v944 = 0;
          *(_WORD *)(v742 + 8) = -256;
          goto LABEL_706;
        case 0xCu:
          v689 = (uint64_t)v867;

          sub_23AB7C6B4(*(id *)v689, *(unsigned __int8 *)(v689 + 8), *(_BYTE *)(v689 + 9));
          goto LABEL_412;
        case 0x14u:
        case 0x15u:
          swift_release();
          goto LABEL_412;
        case 0x21u:
          sub_23AA8A05C((uint64_t)v867, &qword_2542DDFC0);
          goto LABEL_412;
        default:
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
          sub_23AA8A05C(v924, (uint64_t *)&unk_2542E4760);

          v680 = &qword_2542DDFC0;
          v681 = (uint64_t)v867;
          goto LABEL_704;
      }
    }
    if (sub_23AC37674(4096, (uint64_t)v1089))
    {
      v299 = v156;
      v300 = v941;
      sub_23AFEFCA0(sub_23B06B4EC, (uint64_t)v941, (void (*)(uint64_t))sub_23AB21B34, 0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 2052);
      v301 = (uint64_t)v932;
      sub_23AA8EFC8((uint64_t)v940, (uint64_t)v932, (uint64_t *)&unk_2569E5F10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v939 + 48))(v301, 1, v942) == 1)
      {
LABEL_144:
        sub_23AA8A05C(v301, (uint64_t *)&unk_2569E5F10);
        v302 = v300[5];
        v303 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v302 + 16) + 768);
        v304 = swift_retain();
        v305 = v303(v304);
        swift_release();
        if ((v305 & 1) == 0 && (*(_BYTE *)(v302 + 33) & 1) != 0)
          goto LABEL_368;
        v306 = v943;
        if (sub_23B002AF8() && sub_23AA9F3C4(16, *((_QWORD *)v306 + 27)))
          goto LABEL_368;
        v307 = v941[4];
        v308 = sub_23AAED140();
        v309 = (uint64_t)v921;
        v310 = v945;
        (*(void (**)(id *, _QWORD))(*(_QWORD *)v307 + 240))(&v1070, v308 & 1);
        v945 = v310;
        if (v310)
          goto LABEL_242;

        v311 = v934;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v935 + 48))(v309, 1, v934) == 1)
        {
          v312 = &qword_2542E4770;
          v313 = v309;
LABEL_456:
          sub_23AA8A05C(v313, v312);
          goto LABEL_447;
        }
        v451 = v913;
        sub_23AA907B0(v309 + *(int *)(v311 + 48), v913, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        sub_23AA8A05C(v309, (uint64_t *)&unk_2542E4760);
        v452 = *(_BYTE *)(v451 + v914[21]);
        sub_23AA937BC(v451, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        if (sub_23AA9F51C(v452, 0))
          goto LABEL_369;
        goto LABEL_447;
      }
      v361 = v926;
      sub_23AA8EFC8(v301, v926, (uint64_t *)&unk_2569E5F10);
      if (swift_getEnumCaseMultiPayload() == 25)
      {
        v362 = *(_BYTE *)(v361 + 9);
        v300 = v941;
        v301 = (uint64_t)v932;
        if ((v362 & 1) != 0)
          goto LABEL_144;

        sub_23AB7C6B4(*(id *)v926, *(unsigned __int8 *)(v926 + 8), *(_BYTE *)(v926 + 9));
      }
      else
      {

        sub_23AA8A05C(v361, &qword_2542DDFC0);
      }
      v387 = v944;
      *(_QWORD *)v944 = 0;
      *(_WORD *)(v387 + 8) = -256;
      v296 = (uint64_t *)&unk_2569E5F10;
      v297 = (uint64_t)v932;
      goto LABEL_238;
    }
    if (sub_23AC37674(0x2000, (uint64_t)v1089))
    {
      v333 = v156;
      v334 = *(uint64_t (**)(void))(*v941 + 152);
      v335 = v333;
      v336 = v334();
      if (!sub_23AA9F3D0(128, v336) || sub_23AC37674(v1074, 0x20000000000))
      {

        goto LABEL_369;
      }
      v408 = v945;
      v409 = sub_23B007F6C((uint64_t)v941);
      v945 = v408;
      if (v408)
      {

        return;
      }
      v492 = (unint64_t)v409;
      v493 = v410;
      v494 = v411;
      v495 = v916;
      v496 = v916 + *(int *)(v911 + 48);
      sub_23AA8EFC8((uint64_t)v940, v916, (uint64_t *)&unk_2569E5F10);
      *(_QWORD *)v496 = v492;
      *(_QWORD *)(v496 + 8) = v493;
      *(_QWORD *)(v496 + 16) = v494;
      v497 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v939 + 48);
      if (v497(v495, 1, v942) == 1)
      {

      }
      else
      {
        sub_23AA8EFC8(v916, v869, (uint64_t *)&unk_2569E5F10);
        if (swift_getEnumCaseMultiPayload() == 27)
        {
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                v639 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31B0);
                v1089 = (v869 + v639[12]);
                v943 = *(unsigned __int8 **)(v869 + v639[16]);
                v640 = *(void **)(v869 + v639[20]);
                sub_23AB2277C(v492, v493, v494);

                if (v492 >> 62 || (_BYTE)v492)
                {

                  sub_23AB22788(v492, v493, v494);
                  goto LABEL_643;
                }
                *(_QWORD *)&v939 = *(_QWORD *)v869;
                v1065 = (void *)v939;
                goto LABEL_690;
              case 1u:
                v692 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5EE0);
                v1089 = (v869 + v692[12]);
                v693 = (uint64_t *)(v869 + v692[20]);
                v943 = *(unsigned __int8 **)(v869 + v692[28]);
                v694 = *(void **)(v869 + v692[32]);
                sub_23AB2277C(v492, v493, v494);

                if (v492 >> 62 || v492 != 1)
                {

                  sub_23AB22788(v492, v493, v494);
                  sub_23AAAEE68(*v693, v693[1], v693[2], v693[3], v693[4], v693[5], v693[6], v693[7], v693[8]);
LABEL_643:
                  sub_23AA8A05C((uint64_t)v1089, &qword_2542E4770);
                  goto LABEL_644;
                }
                *(_QWORD *)&v939 = *(_QWORD *)v869;
                v1065 = (void *)v939;
                sub_23AAAEE68(*v693, v693[1], v693[2], v693[3], v693[4], v693[5], v693[6], v693[7], v693[8]);
LABEL_690:
                sub_23AA8A05C((uint64_t)v1089, &qword_2542E4770);
                sub_23AB22788(*(_QWORD *)v496, *(_QWORD *)(v496 + 8), *(void **)(v496 + 16));
                sub_23AA8A05C(v916, (uint64_t *)&unk_2569E5F10);
                v728 = v335;
                v729 = (id)v939;
                v730 = sub_23AC37680();

                if ((v730 & 1) == 0)
                {
                  sub_23AB22788(v492, v493, v494);

                  goto LABEL_446;
                }
                v731 = v945;
                v732 = (*(uint64_t (**)(void **))(*(_QWORD *)v941[4] + 296))(&v1065);
                v945 = v731;
                if (v731)
                {
                  sub_23AB22788(v492, v493, v494);

                  goto LABEL_242;
                }
                v743 = (unsigned __int8 *)v732;
                v744 = v733;

                if ((v744 & 1) == 0 && v743 == v943)
                {
                  sub_23AB22788(v492, v493, v494);
                  goto LABEL_368;
                }
                v761 = v865;
                sub_23AA8EFC8((uint64_t)v940, v865, (uint64_t *)&unk_2569E5F10);
                if (v497(v761, 1, v942) == 1)
                {

                  sub_23AB22788(v492, v493, v494);
                  v312 = (uint64_t *)&unk_2569E5F10;
                  v313 = v865;
                  goto LABEL_456;
                }
                if (swift_getEnumCaseMultiPayload() == 27)
                {
                  v786 = v881;
                  sub_23AA724E8(v865, v881, (uint64_t *)&unk_2542E0FC0);
                  sub_23B1C53E4();
                  sub_23AC4507C();
                  sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
                  v787 = v879;
                  v788 = v883;
                  sub_23B1C5864();
                  v789 = (void *)sub_23B1C5354();
                  (*(void (**)(char *, uint64_t))(v882 + 8))(v787, v788);
                  (*(void (**)(uint64_t, void *))(*v941 + 480))(v786, v789);

                  sub_23AB22788(v492, v493, v494);
                  v719 = v786;
                  v718 = (uint64_t *)&unk_2542E0FC0;
                  goto LABEL_674;
                }

                sub_23AB22788(v492, v493, v494);
                v312 = &qword_2542DDFC0;
                v313 = v865;
                goto LABEL_456;
              case 2u:
                v690 = *(void **)(v869 + 128);
                sub_23AB2277C(v492, v493, v494);

                if (!(v492 >> 62) && v492 == 2)
                {
                  v691 = *(id *)v869;
                  sub_23AAAEE68(*(_QWORD *)(v869 + 24), *(_QWORD *)(v869 + 32), *(_QWORD *)(v869 + 40), *(_QWORD *)(v869 + 48), *(_QWORD *)(v869 + 56), *(_QWORD *)(v869 + 64), *(_QWORD *)(v869 + 72), *(_QWORD *)(v869 + 80), *(_QWORD *)(v869 + 88));
                  sub_23AB22788(v492, v493, v494);
                  goto LABEL_632;
                }

                sub_23AB22788(v492, v493, v494);
                v704 = (id *)v869;
                sub_23AAAEE68(*(_QWORD *)(v869 + 24), *(_QWORD *)(v869 + 32), *(_QWORD *)(v869 + 40), *(_QWORD *)(v869 + 48), *(_QWORD *)(v869 + 56), *(_QWORD *)(v869 + 64), *(_QWORD *)(v869 + 72), *(_QWORD *)(v869 + 80), *(_QWORD *)(v869 + 88));

                goto LABEL_500;
              case 4u:
                if (v492 >> 62 || v492 != 23)
                  goto LABEL_633;
                goto LABEL_631;
              case 5u:
                if (v492 >> 62 || v492 != 6)
                {
LABEL_633:

LABEL_644:
                  goto LABEL_500;
                }
LABEL_631:
                v691 = *(id *)v869;
LABEL_632:
                sub_23AA8A05C(v916, (uint64_t *)&unk_2569E5F10);
                v695 = v335;
                v696 = v691;
                v697 = v695;
                v698 = v696;
                sub_23AC37680();
                sub_23AB22788(v492, v493, v494);

                v699 = v1070;
                break;
              default:

                v526 = &qword_2542E1608;
                goto LABEL_499;
            }
            goto LABEL_447;
          }

          v526 = (uint64_t *)&unk_2542E0FC0;
        }
        else
        {

          v526 = &qword_2542DDFC0;
        }
LABEL_499:
        sub_23AA8A05C(v869, v526);
      }
LABEL_500:
      v607 = v944;
      *(_QWORD *)v944 = 0;
      *(_WORD *)(v607 + 8) = -256;
      v296 = &qword_2569E7DA8;
      v297 = v916;
      goto LABEL_238;
    }
    if (!sub_23AC37674(0x4000, (uint64_t)v1089))
    {
      if (!sub_23AC37674(0x8000, (uint64_t)v1089))
      {
        if (sub_23AC37674(0x80000, (uint64_t)v1089))
        {
          if (!sub_23AEB54F4())
            goto LABEL_369;
          v412 = *(void (**)(void))(*v941 + 160);
          v413 = v156;
          v412();

          goto LABEL_447;
        }
        if (!sub_23AC37674(0x100000, (uint64_t)v1089))
          goto LABEL_786;
        v158 = v156;
        v465 = v945;
        v466 = sub_23B004EF0((unint64_t)v941);
        v945 = v465;
        if (!v465)
        {
          v468 = v466;
          if (v466 != 70)
          {
            switch(v466)
            {
              case 0:
              case 1:
              case 2:
                v469 = v467;
                v1065 = 0;
                v1066 = -1;
                v470 = sub_23AC37A40(v466, 1);
                if ((!v470 || !sub_23AA9F3D0(2, v469)) && !sub_23AC37A40(v468, 0))
                  goto LABEL_592;
                v471 = v945;
                sub_23B01F210((uint64_t)v941, (uint64_t)v158, (uint64_t)&v1065);
                v945 = v471;
                if (v471)
                  goto LABEL_43;
                if ((sub_23AC37A64(v472 & 1, 0) & 1) != 0)
                {

                  goto LABEL_447;
                }
LABEL_592:
                if (!v470)
                  goto LABEL_594;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
                v665 = swift_allocObject();
                v666 = sub_23B1A1F64(v665, 3);
                *(_OWORD *)v667 = xmmword_23B1CE630;
                *(_QWORD *)(v667 + 16) = 1;
                v668 = nullsub_1(v666);
                v669 = sub_23AFD7BC8(v668);
                swift_bridgeObjectRelease();
                if ((sub_23AA9F56C(v669, v469) & 1) != 0)
                {
LABEL_594:
                  if (!sub_23AC37A40(v468, 2))
                    goto LABEL_32;
                }
                v670 = v945;
                v671 = sub_23B01F5C0((uint64_t)v943, (uint64_t)v941, (uint64_t *)&v1065);
                v945 = v670;
                if (v670)
                  goto LABEL_43;
                v672 = sub_23AC37A64(v671 & 1, 0);

                if ((v672 & 1) == 0)
                  goto LABEL_369;
                goto LABEL_447;
              case 12:
                v677 = v945;
                (*(void (**)(void **__return_ptr, id *))(*(_QWORD *)v941[4] + 280))(&v1065, &v1070);
                v945 = v677;
                v678 = v1065;
                if (!v1065)
                  goto LABEL_32;
                v679 = v945;
                sub_23AFFA3FC(v1065, &v1065);
                v945 = v679;
                sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1062, (uint64_t *)&unk_2569E63E0);
                sub_23AA724E8((uint64_t)v1062, (uint64_t)&v1063, (uint64_t *)&unk_2569E63E0);
                if (sub_23AAFC2A4((uint64_t)&v1063) == 1)
                {

                  goto LABEL_368;
                }
                sub_23AA724E8((uint64_t)v1062, (uint64_t)v1061, (uint64_t *)&unk_2569E63E0);
                sub_23AA9F51C(v1061[6], 1);
                sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);

                break;
              default:
                goto LABEL_32;
            }
LABEL_63:

LABEL_64:
            v205 = v944;
            *(_QWORD *)v944 = 0;
            *(_WORD *)(v205 + 8) = -256;
            return;
          }
          goto LABEL_32;
        }
LABEL_43:

        return;
      }
      v388 = v156;
      v389 = v941;
      v390 = v941[4];
      if (sub_23AEB54F4())
      {
        if (BYTE1(v1079[0]) != 6 && sub_23AA9F51C(SBYTE1(v1079[0]), 0))
          goto LABEL_369;
        if (sub_23AA9F3C4(16, *((uint64_t *)&v1073 + 1)))
          goto LABEL_447;
        v391 = *(void (**)(id *))(*(_QWORD *)v390 + 464);
        v186 = v388;
        v392 = v945;
        v391(&v1070);
        v945 = v392;
        if (!v392)
        {

          goto LABEL_64;
        }
        goto LABEL_57;
      }
      v186 = v388;
      v455 = v945;
      v456 = sub_23B004EF0((unint64_t)v389);
      v945 = v455;
      if (v455)
        goto LABEL_57;
      if (v456 == 70)
        goto LABEL_38;
      switch(v456)
      {
        case 0:
          if ((*(_BYTE *)(v941[5] + 33) & 1) != 0)
            goto LABEL_38;
          v457 = v945;
          (*(void (**)(void **__return_ptr, id *))(*(_QWORD *)v390 + 280))(&v1065, &v1070);
          v945 = v457;
          v458 = v1065;
          if (!v1065)
            goto LABEL_350;
          v459 = v945;
          sub_23AFFA3FC(v1065, &v1065);
          v945 = v459;

          sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1062, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8((uint64_t)v1062, (uint64_t)&v1063, (uint64_t *)&unk_2569E63E0);
          if (sub_23AAFC2A4((uint64_t)&v1063) == 1)
            goto LABEL_350;
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);
          sub_23AA724E8((uint64_t)v1062, (uint64_t)v1061, (uint64_t *)&unk_2569E63E0);
          if (BYTE8(v1061[14]) == 3 || !sub_23AA9F51C(SBYTE8(v1061[14]), 0))
            goto LABEL_350;
          goto LABEL_368;
        case 6:
        case 12:
        case 23:
          goto LABEL_38;
        default:
LABEL_350:
          v460 = (_BYTE *)v941[5];
          if (v460[33] == 1)
            goto LABEL_368;
          v461 = v945;
          (*(void (**)(void **__return_ptr, id *))(*(_QWORD *)v390 + 280))(&v1065, &v1070);
          v945 = v461;
          if (v461)
            goto LABEL_242;
          v353 = v1065;
          if (!v1065)
            goto LABEL_368;
          v1062[0] = v1065;
          v462 = v945;
          (*(void (**)(void **__return_ptr, _QWORD *))(*(_QWORD *)v941[2] + 160))(&v1063, v1062);
          v945 = v462;
          if (v1064 == 255)
            goto LABEL_245;
          v1065 = v1063;
          v1066 = v1064;
          v463 = v945;
          v464 = (*(uint64_t (**)(void **))(*(_QWORD *)v460 + 456))(&v1065);
          v945 = v463;
          v236 = v464;
          break;
      }
      goto LABEL_646;
    }
    v364 = v156;
    v365 = v941;
    v366 = v941[4];
    if (!sub_23AEB54F4())
      goto LABEL_369;
    v367 = v365[3];
    v368 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF0);
    v369 = sub_23AAEC8DC();
    v370 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)v367 + 288);
    v186 = v364;
    v371 = v945;
    v372 = v370(&v1070, v368, v369);
    v945 = v371;
    if (v371)
      goto LABEL_57;
    if ((v372 & 1) != 0)
      goto LABEL_221;
    v521 = v945;
    v522 = (*(uint64_t (**)(id *))(*(_QWORD *)v366 + 312))(&v1070);
    v945 = v521;
    if ((v523 & 1) != 0)
      goto LABEL_38;
    if (v522)
    {
LABEL_221:

      goto LABEL_447;
    }
    v524 = sub_23AAED140();
    v525 = v945;
    (*(void (**)(id *, _QWORD))(*(_QWORD *)v366 + 240))(&v1070, v524 & 1);
    v945 = v525;
    if (v525)
      goto LABEL_57;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v935 + 48))(v901, 1, v934) == 1)
    {

      sub_23AA8A05C(v901, &qword_2542E4770);
      goto LABEL_369;
    }
    v714 = v891;
    sub_23AA724E8(v901, v891, (uint64_t *)&unk_2542E4760);
    v715 = (char *)(v714 + *(int *)(v934 + 48));
    if (!sub_23AA9F51C(v715[v914[21]], 0))
      goto LABEL_673;
    v716 = sub_23AC37B08(*v715, 1);
    sub_23AA8EFC8(v891, v890, (uint64_t *)&unk_2542E4760);
    if (v716)
    {
      v717 = *(_BYTE *)(v890 + *(int *)(v934 + 48) + v914[15]);
      sub_23AA8A05C(v890, (uint64_t *)&unk_2542E4760);
      if ((v717 & 1) == 0)
      {
        if ((v715[v914[16]] & 1) == 0)
        {
          v790 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v367 + 352);
          v791 = v945;
          v792 = v790(v891, 1);
          v945 = v791;
          if (v791)
          {
            v385 = v891;
            goto LABEL_241;
          }
          sub_23AB55A08(v792, (uint64_t)&v1065);
          swift_bridgeObjectRelease();
          if (v1068 == (id)1)
          {
            sub_23AA8EFC8(v891, v878, (uint64_t *)&unk_2542E4760);
          }
          else
          {
            v816 = v1069;

            swift_bridgeObjectRelease();
            sub_23AB7C6B4(v1065, v1066, v1067);
            v817 = sub_23AA9F51C(v816, 6);
            sub_23AA8EFC8(v891, v878, (uint64_t *)&unk_2542E4760);
            if (v817)
            {
              sub_23AA8A05C(v878, (uint64_t *)&unk_2542E4760);
              v719 = v891;
              v718 = (uint64_t *)&unk_2542E4760;
              goto LABEL_674;
            }
          }
          v818 = v945;
          v819 = v790(v878, 0);
          v945 = v818;
          if (v818)
          {
            sub_23AA8A05C(v878, (uint64_t *)&unk_2542E4760);
            v385 = v891;
            goto LABEL_241;
          }
          sub_23AB55A08(v819, (uint64_t)&v1065);
          swift_bridgeObjectRelease();
          sub_23AA8A05C(v878, (uint64_t *)&unk_2542E4760);
          sub_23AA8A05C(v891, (uint64_t *)&unk_2542E4760);

          if (v1068 == (id)1)
            goto LABEL_369;
          v822 = v1069;

          swift_bridgeObjectRelease();
          sub_23AB7C6B4(v1065, v1066, v1067);
          if (!sub_23AA9F51C(v822, 6))
            goto LABEL_369;
          goto LABEL_447;
        }
LABEL_673:
        v718 = (uint64_t *)&unk_2542E4760;
        v719 = v891;
LABEL_674:
        sub_23AA8A05C(v719, v718);
        goto LABEL_446;
      }
    }
    else
    {
      sub_23AA8A05C(v890, (uint64_t *)&unk_2542E4760);
    }
    v474 = v891;
    goto LABEL_367;
  }
  v157 = v156;
  if ((sub_23AAA0E10() & 1) != 0
    || (v158 = v157, v159 = sub_23AAA0D58(), v158, (v159 & 1) != 0))
  {

    goto LABEL_369;
  }
  v173 = v943;
  v174 = sub_23B002AF8();
  if (!v174)
  {
    v182 = v173[232];
    if (v182 == 3 || !sub_23AA9F51C(v182, 2))
      goto LABEL_33;
LABEL_32:

    goto LABEL_369;
  }
  if (!sub_23AA9F3D0(2, v1074))
    goto LABEL_32;
LABEL_33:
  v124 = v877;
  sub_23AA8EFC8((uint64_t)v940, (uint64_t)v877, (uint64_t *)&unk_2569E5F10);
  v111 = *(NSObject **)(v939 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v111)(v124, 1, v942) == 1)
    goto LABEL_102;
  sub_23AA8EFC8((uint64_t)v124, (uint64_t)v136, (uint64_t *)&unk_2569E5F10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:

      goto LABEL_101;
    case 2u:
    case 7u:
      sub_23AA8A05C((uint64_t)v136, &qword_2542DDFC0);
      goto LABEL_101;
    case 6u:
      v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
      v285 = (uint64_t)&v136[*(int *)(v284 + 48)];
      if (v936[6](v136, 1, v937) == 1)
      {

        sub_23AA8A05C(v285, (uint64_t *)&unk_2542E4750);
        v238 = (uint64_t)v136;
        goto LABEL_157;
      }
      v314 = *(_QWORD *)&v136[*(int *)(v284 + 64)];
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
      v315 = swift_allocObject();
      v316 = sub_23B1A1F64(v315, 2);
      *v317 = xmmword_23B1CE640;
      v318 = nullsub_1(v316);
      v319 = sub_23AFD7BC8(v318);
      swift_bridgeObjectRelease();
      if ((sub_23AA9F56C(v319, v314) & 1) != 0)
      {

        sub_23AA8A05C((uint64_t)v136, (uint64_t *)&unk_2542E4750);
        v238 = v285;
LABEL_157:
        v237 = (uint64_t *)&unk_2542E4750;
LABEL_158:
        sub_23AA8A05C(v238, v237);
        goto LABEL_159;
      }
      if (!v174 || (v356 = v943[440], v356 == 4) || !sub_23AC37B08(v356, 1))
      {

        v360 = v944;
        *(_QWORD *)v944 = 0;
        *(_WORD *)(v360 + 8) = -256;
        sub_23AA8A05C((uint64_t)v136, (uint64_t *)&unk_2542E4750);
        sub_23AA8A05C(v285, (uint64_t *)&unk_2542E4750);
        goto LABEL_160;
      }
      sub_23AA8A05C((uint64_t)v136, (uint64_t *)&unk_2542E4750);
      sub_23AA8A05C(v285, (uint64_t *)&unk_2542E4750);
      goto LABEL_101;
    case 0xAu:
      if (v136[27] != 2)
      {

        sub_23ADF1CB4(*((void **)v136 + 2), *((unsigned __int16 *)v136 + 12));
        sub_23AB7C6B4(*(id *)v136, v136[8], v136[9]);
LABEL_159:
        v320 = v944;
        *(_QWORD *)v944 = 0;
        *(_WORD *)(v320 + 8) = -256;
LABEL_160:
        v296 = (uint64_t *)&unk_2569E5F10;
        v297 = (uint64_t)v877;
        goto LABEL_238;
      }
      sub_23ADF1CB4(*((void **)v136 + 2), *((unsigned __int16 *)v136 + 12));
LABEL_94:
      sub_23AB7C6B4(*(id *)v136, v136[8], v136[9]);
LABEL_101:
      v124 = v877;
LABEL_102:
      sub_23AA8A05C((uint64_t)v124, (uint64_t *)&unk_2569E5F10);
      v156 = v941[4];
      v241 = v945;
      (*((void (**)(void **__return_ptr, id *))v156->isa + 35))(&v1065, &v1070);
      v945 = v241;
      if (v241)
        goto LABEL_242;
      v242 = v1065;
      if (!v1065)
        goto LABEL_446;
      v243 = v941;
      v244 = v941[2];
      v245 = v945;
      sub_23AFFA3FC(v1065, &v1065);
      v945 = v245;
      v246 = (*(uint64_t (**)(void))(*v243 + 152))();
      if ((v174 & sub_23AA9F3D0(0x4000, v246) & 1) != 0)
      {
        v247 = v943[208];
        if (v247 != 255)
        {
          v1089 = v244;
          v248 = *((_QWORD *)v943 + 27);
          v249 = *((_QWORD *)v943 + 43);
          v250 = *((_QWORD *)v943 + 44);
          v251 = v943[360];
          *(_QWORD *)&v994[0] = *((_QWORD *)v943 + 25);
          BYTE8(v994[0]) = v247;
          if (sub_23AA9F3C4(128, v248) && sub_23AA9F3D0(2, v1074))
          {
            *(_QWORD *)&v939 = v242;
            sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1062, (uint64_t *)&unk_2569E63E0);
            sub_23AA724E8((uint64_t)v1062, (uint64_t)&v1063, (uint64_t *)&unk_2569E63E0);
            if (sub_23AAFC2A4((uint64_t)&v1063) != 1)
            {
              sub_23AA724E8((uint64_t)v1062, (uint64_t)v1061, (uint64_t *)&unk_2569E63E0);
              if (sub_23AA9F3C4(128, *((uint64_t *)&v1061[13] + 1)))
                goto LABEL_491;
            }
            if (!sub_23AA9F3C4(32, v248))
            {
              if (!sub_23B12B0C0(512, v249, v250, v251))
                goto LABEL_491;
              v436 = v945;
              (*(void (**)(_OWORD *__return_ptr, _OWORD *))(*(_QWORD *)v941[5] + 280))(v1061, v994);
              v945 = v436;
              if (v436)
              {
                v437 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v1062;
LABEL_495:
                sub_23ADF2D34((uint64_t)v437, (voidsub_23AEB1930);

                goto LABEL_242;
              }
              if (BYTE8(v1061[0]) == 255)
                goto LABEL_491;
              v604 = v945;
              sub_23AFFA638(*(uint64_t *)&v1061[0], SBYTE8(v1061[0]), (uint64_t)v1061);
              v945 = v604;
              sub_23AA724E8((uint64_t)v1061, (uint64_t)v1032, qword_2542E6E20);
              sub_23AA724E8((uint64_t)v1032, (uint64_t)v1036, qword_2542E6E20);
              if (sub_23AAFC2A4((uint64_t)v1036) == 1
                || (sub_23AA724E8((uint64_t)v1032, (uint64_t)&v995, qword_2542E6E20),
                    v605 = sub_23AA9F3C4(128, v996),
                    sub_23ADF2D34((uint64_t)v1032, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C), !v605))
              {
LABEL_491:
                v606 = (__int128 *)v1062;
LABEL_497:
                sub_23ADF2D34((uint64_t)v606, (voidsub_23AEB1930);

                goto LABEL_446;
              }
            }
            v242 = (void *)v939;
          }
          v244 = v1089;
        }
      }
      sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1062, (uint64_t *)&unk_2569E63E0);
      sub_23AA724E8((uint64_t)v1062, (uint64_t)v1061, (uint64_t *)&unk_2569E63E0);
      sub_23AA724E8((uint64_t)v1062, (uint64_t)&v1063, (uint64_t *)&unk_2569E63E0);
      if (sub_23AAFC2A4((uint64_t)&v1063) != 1)
      {
        v1089 = v244;
        sub_23AA724E8((uint64_t)v1062, (uint64_t)v1032, (uint64_t *)&unk_2569E63E0);
        v105 = LOBYTE(v1061[13]);
        v1036[10] = v1061[10];
        v1036[11] = v1061[11];
        v252 = (uint8_t *)*((_QWORD *)&v1061[12] + 1);
        v1036[6] = v1061[6];
        v1036[7] = v1061[7];
        v1036[9] = v1061[9];
        v1036[8] = v1061[8];
        v1036[2] = v1061[2];
        v1036[3] = v1061[3];
        v1036[5] = v1061[5];
        v1036[4] = v1061[4];
        v1036[1] = v1061[1];
        v1036[0] = v1061[0];
        v1036[12] = v1061[12];
        v1037 = v1061[13];
        v1038 = *(_OWORD *)((char *)&v1061[13] + 8);
        v1039 = BYTE8(v1061[14]);
        v1040 = v1061[15];
        v1041 = v1061[16];
        v1042 = v1061[17];
        v1043 = v1061[18];
        v1044 = v1061[19];
        v1045 = v1061[20];
        v1046 = v1061[21];
        v1047 = BYTE2(v1061[21]);
        v1048 = *((_QWORD *)&v1061[21] + 1);
        v1049 = *(_QWORD *)&v1061[22];
        v1050 = BYTE8(v1061[22]);
        v1051 = v1061[23];
        v1052 = v1061[24];
        v1053 = v1061[25];
        v1054 = v1061[26];
        v1055 = *(_QWORD *)&v1061[27];
        v1056 = BYTE8(v1061[27]);
        v1057 = v1061[28];
        v1058 = v1061[29];
        v1059 = v1061[30];
        v1060 = *((_QWORD *)&v1061[30] + 1);
        sub_23AEB34A4((uint64_t)v1032);
        sub_23AAFCF50((uint64_t)v1036);
        if ((_DWORD)v105 == 255)
          goto LABEL_435;
        v991 = v252;
        v992 = v105;
        sub_23AA724E8((uint64_t)v1062, (uint64_t)v994, (uint64_t *)&unk_2569E63E0);
        v1005 = v994[10];
        v1006 = v994[11];
        v1001 = v994[6];
        v1002 = v994[7];
        v1004 = v994[9];
        v1003 = v994[8];
        v997 = v994[2];
        v998 = v994[3];
        v1000 = v994[5];
        v999 = v994[4];
        v996 = v994[1];
        v995 = v994[0];
        v1007 = v994[12];
        v1008 = v994[13];
        v939 = *(_OWORD *)((char *)&v994[13] + 8);
        v1009 = *(_OWORD *)((char *)&v994[13] + 8);
        v1010 = BYTE8(v994[14]);
        v1011 = v994[15];
        v1012 = v994[16];
        v1013 = v994[17];
        v1014 = v994[18];
        v1015 = v994[19];
        v1016 = v994[20];
        v1017 = v994[21];
        v1018 = BYTE2(v994[21]);
        v1019 = *((_QWORD *)&v994[21] + 1);
        v1020 = *(_QWORD *)&v994[22];
        v1021 = BYTE8(v994[22]);
        v1022 = v994[23];
        v1023 = v994[24];
        v1024 = v994[25];
        v1025 = v994[26];
        v1026 = *(_QWORD *)&v994[27];
        v1027 = BYTE8(v994[27]);
        v1028 = v994[28];
        v1029 = v994[29];
        v1030 = v994[30];
        v1031 = *((_QWORD *)&v994[30] + 1);
        sub_23AEB34A4((uint64_t)v1032);
        sub_23AAFCF50((uint64_t)&v995);
        v253 = sub_23AA9F564(16, v939);
        if (!sub_23AA9F490(v253))
        {
LABEL_435:
          v244 = v1089;
          goto LABEL_436;
        }
        if (v174)
        {
          v254 = v943[440];
          if (v254 == 4 || !sub_23AC37B08(v254, 1))
          {
LABEL_271:
            v401 = (uint64_t)v870;
            sub_23AA8EFC8((uint64_t)v940, (uint64_t)v870, (uint64_t *)&unk_2569E5F10);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v111)(v401, 1, v942) == 1)
            {
              v402 = (uint64_t *)&unk_2569E5F10;
LABEL_399:
              sub_23AA8A05C(v401, v402);
LABEL_400:
              v507 = (uint64_t *)&unk_2569E5F10;
              v508 = v871;
              sub_23AA8EFC8((uint64_t)v940, v871, (uint64_t *)&unk_2569E5F10);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v111)(v508, 1, v942) != 1)
              {
                if (swift_getEnumCaseMultiPayload() == 2)
                {
                  sub_23AA724E8((uint64_t)&v1065, (uint64_t)v994, (uint64_t *)&unk_2569E63E0);
                  sub_23ADF2D34((uint64_t)v994, (voidsub_23AEB1930);

                  v312 = &qword_2542DDFC0;
                  v313 = v871;
                  goto LABEL_456;
                }
                v507 = &qword_2542DDFC0;
                v508 = v871;
              }
              sub_23AA8A05C(v508, v507);
              v509 = v941[5];
              v510 = sub_23AAED140();
              v511 = v917;
              v512 = v945;
              (*(void (**)(uint8_t **, _QWORD))(*(_QWORD *)v509 + 240))(&v991, v510 & 1);
              v945 = v512;
              if (v512)
              {
                sub_23AA724E8((uint64_t)&v1065, (uint64_t)v994, (uint64_t *)&unk_2569E63E0);
                v435 = v994;
                goto LABEL_460;
              }
              if (v936[6]((char *)v511, 1, v937) == 1)
              {
                sub_23AA8A05C(v917, (uint64_t *)&unk_2542E4750);
              }
              else
              {
                v532 = v917;
                v533 = sub_23AFFA500((uint64_t *)&unk_2542E6B00);
                sub_23AA8A05C(v532, (uint64_t *)&unk_2542E6B00);
                if ((v533 & 1) == 0)
                {
LABEL_666:
                  sub_23AA724E8((uint64_t)&v1065, (uint64_t)v994, (uint64_t *)&unk_2569E63E0);
                  v400 = v994;
                  goto LABEL_265;
                }
              }
              goto LABEL_435;
            }
            if (swift_getEnumCaseMultiPayload() != 2)
            {
              v402 = &qword_2542DDFC0;
              goto LABEL_399;
            }
            v453 = *(uint8_t **)v401;
            v454 = *(unsigned __int8 *)(v401 + 8);
            if ((*(_BYTE *)(v401 + 9) & 1) == 0)
            {
              sub_23AB7C6B4(v453, v454, 0);
              goto LABEL_400;
            }
            if ((_DWORD)v105)
            {
              if ((_DWORD)v105 == 1)
              {
                if ((_DWORD)v454 != 1 || v252 != v453)
                  goto LABEL_400;
              }
              else if (v252)
              {
                if ((_DWORD)v454 != 2 || v453 != (uint8_t *)1)
                  goto LABEL_400;
              }
              else if ((_DWORD)v454 != 2 || v453)
              {
                goto LABEL_400;
              }
            }
            else if (*(_BYTE *)(v401 + 8) || (_DWORD)v252 != (_DWORD)v453)
            {
              goto LABEL_400;
            }
LABEL_264:
            v400 = v1062;
LABEL_265:
            sub_23ADF2D34((uint64_t)v400, (voidsub_23AEB1930);

            goto LABEL_368;
          }
          v108 = v941[5];
          v255 = *(_OWORD *)(v943 + 408);
          v1071[12] = *(_OWORD *)(v943 + 392);
          v1071[13] = v255;
          v1071[14] = *(_OWORD *)(v943 + 424);
          v256 = *(_OWORD *)(v943 + 344);
          v1071[8] = *(_OWORD *)(v943 + 328);
          v1071[9] = v256;
          v257 = *(_OWORD *)(v943 + 360);
          v1071[11] = *(_OWORD *)(v943 + 376);
          v1071[10] = v257;
          v258 = *(_OWORD *)(v943 + 248);
          v259 = *(_OWORD *)(v943 + 280);
          v1071[4] = *(_OWORD *)(v943 + 264);
          v1071[5] = v259;
          v260 = *(_OWORD *)(v943 + 296);
          v1071[7] = *(_OWORD *)(v943 + 312);
          v1071[6] = v260;
          v261 = *(_OWORD *)(v943 + 216);
          v1071[0] = *(_OWORD *)(v943 + 200);
          v1071[1] = v261;
          v262 = *(_OWORD *)(v943 + 232);
          v1071[3] = v258;
          v1071[2] = v262;
          sub_23AA724E8((uint64_t)v1071, (uint64_t)v1072, (uint64_t *)&unk_2542E7420);
          sub_23AA724E8((uint64_t)v1072, (uint64_t)v994, (uint64_t *)&unk_2542E7420);
          sub_23AA724E8((uint64_t)v1072, (uint64_t)v1088, (uint64_t *)&unk_2542E7420);
          if (v1088[8] != 255)
          {
            v263 = v945;
            v264 = (*(uint64_t (**)(uint8_t **, _OWORD *))(*(_QWORD *)v108 + 536))(&v991, v994);
            v945 = v263;
            if (!v263)
            {
              if ((v264 & 1) != 0)
              {
                if (!sub_23AEB54F4())
                {
LABEL_582:
                  sub_23AF9CAE0();
                  v641 = swift_allocObject();
                  v642 = (uint64_t)v943;
                  memcpy((void *)(v641 + 16), v943, 0x1F0uLL);
                  v643 = swift_allocObject();
                  *(_QWORD *)(v643 + 16) = sub_23B057C2C;
                  *(_QWORD *)(v643 + 24) = v641;
                  *(_QWORD *)&v994[0] = v991;
                  BYTE8(v994[0]) = v992;
                  v644 = swift_allocObject();
                  sub_23AA9F454((uint64_t *)v994, v644 + 16);
                  v645 = swift_allocObject();
                  *(_QWORD *)(v645 + 16) = sub_23B06B294;
                  *(_QWORD *)(v645 + 24) = v644;
                  sub_23AEB34A4(v642);
                  v1089 = sub_23B1C5E40();
                  LODWORD(v943) = sub_23B1C6AB8();
                  v646 = swift_allocObject();
                  *(_BYTE *)(v646 + 16) = 32;
                  v647 = swift_allocObject();
                  *(_BYTE *)(v647 + 16) = 8;
                  v648 = swift_allocObject();
                  *(_QWORD *)(v648 + 16) = sub_23B057C30;
                  *(_QWORD *)(v648 + 24) = v643;
                  v111 = swift_allocObject();
                  v111[2].isa = (Class)sub_23AB33690;
                  v111[3].isa = (Class)v648;
                  v649 = swift_allocObject();
                  *(_BYTE *)(v649 + 16) = 32;
                  v650 = swift_allocObject();
                  *(_BYTE *)(v650 + 16) = 8;
                  v651 = swift_allocObject();
                  *(_QWORD *)(v651 + 16) = sub_23B06B134;
                  *(_QWORD *)(v651 + 24) = v645;
                  v105 = swift_allocObject();
                  *(_QWORD *)(v105 + 16) = sub_23AB33690;
                  *(_QWORD *)(v105 + 24) = v651;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                  v652 = swift_allocObject();
                  sub_23B1A1F64(v652, 6);
                  *v653 = sub_23AB336B0;
                  v653[1] = v646;
                  v653[2] = sub_23AB336B0;
                  v653[3] = v647;
                  v653[4] = sub_23AB336AC;
                  v653[5] = v111;
                  v653[6] = sub_23AB336B0;
                  v653[7] = v649;
                  v653[8] = sub_23AB336B0;
                  v653[9] = v650;
                  v653[10] = sub_23AB336AC;
                  v653[11] = v105;
                  swift_retain();
                  v937 = v647;
                  swift_retain();
                  v938 = v111;
                  swift_retain();
                  *(_QWORD *)&v939 = v649;
                  swift_retain();
                  v940 = (char *)v650;
                  swift_retain();
                  swift_retain();
                  swift_bridgeObjectRelease();
                  if (os_log_type_enabled(v1089, (os_log_type_t)v943))
                  {
                    v108 = sub_23AFF5C30();
                    v654 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
                    v952[0] = 0;
                    v948 = v654;
                    *(_WORD *)v108 = 514;
                    *(_QWORD *)&v953 = v108 + 2;
                    *(_QWORD *)&v994[0] = sub_23AB336B0;
                    *((_QWORD *)&v994[0] + 1) = v646;
                    v655 = v945;
                    sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v994, (uint64_t)&v953, (uint64_t)v952, (uint64_t)&v948);
                    v156 = v655;
                    if (!v655)
                    {
                      swift_release();
                      *(_QWORD *)&v994[0] = sub_23AB336B0;
                      *((_QWORD *)&v994[0] + 1) = v937;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v994, (uint64_t)&v953, (uint64_t)v952, (uint64_t)&v948);
                      swift_release();
                      *(_QWORD *)&v994[0] = sub_23AB336AC;
                      *((_QWORD *)&v994[0] + 1) = v938;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v994, (uint64_t)&v953, (uint64_t)v952, (uint64_t)&v948);
                      swift_release();
                      *(_QWORD *)&v994[0] = sub_23AB336B0;
                      *((_QWORD *)&v994[0] + 1) = v939;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v994, (uint64_t)&v953, (uint64_t)v952, (uint64_t)&v948);
                      swift_release();
                      *(_QWORD *)&v994[0] = sub_23AB336B0;
                      *((_QWORD *)&v994[0] + 1) = v940;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v994, (uint64_t)&v953, (uint64_t)v952, (uint64_t)&v948);
                      swift_release();
                      *(_QWORD *)&v994[0] = sub_23AB336AC;
                      *((_QWORD *)&v994[0] + 1) = v105;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v994, (uint64_t)&v953, (uint64_t)v952, (uint64_t)&v948);
                      v945 = 0;
                      swift_release();
                      _os_log_impl(&dword_23AA66000, v1089, (os_log_type_t)v943, "♻️  move of %s -> %s: reparent cycle detected", (uint8_t *)v108, 0x16u);
                      swift_arrayDestroy();
                      MEMORY[0x23B8614BC](v654, -1, -1);
                      sub_23AFF5C38();
                    }
                    goto LABEL_787;
                  }

                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  (*(void (**)(char *, uint64_t))(v908 + 8))(v903, v909);
                  v673 = v992;
                  v674 = (uint64_t)v907;
                  *v907 = v991;
                  *(_BYTE *)(v674 + 8) = v673;
                  *(_BYTE *)(v674 + 9) = 1;
                  swift_storeEnumTagMultiPayload();
                  (*(void (**)(uint64_t))(*v941 + 312))(v674);
                  sub_23AA8A05C(v674, &qword_2542DDFC0);
                  sub_23AA724E8((uint64_t)&v1065, (uint64_t)v994, (uint64_t *)&unk_2569E63E0);
                  v500 = v994;
                  goto LABEL_444;
                }
                sub_23AA724E8((uint64_t)v1072, (uint64_t)v994, (uint64_t *)&unk_2542E7420);
                v265 = v945;
                v266 = (*(uint64_t (**)(uint8_t **, _OWORD *))(*(_QWORD *)v108 + 544))(&v991, v994);
                v945 = v265;
                if (!v265)
                {
                  if ((v266 & 1) != 0)
                  {
                    sub_23AF9CAE0();
                    v267 = swift_allocObject();
                    v268 = (uint64_t)v943;
                    memcpy((void *)(v267 + 16), v943, 0x1F0uLL);
                    v269 = swift_allocObject();
                    *(_QWORD *)(v269 + 16) = sub_23B057C2C;
                    *(_QWORD *)(v269 + 24) = v267;
                    *(_QWORD *)&v994[0] = v991;
                    BYTE8(v994[0]) = v992;
                    v270 = swift_allocObject();
                    sub_23AA9F454((uint64_t *)v994, v270 + 16);
                    v271 = swift_allocObject();
                    v942 = v271;
                    *(_QWORD *)(v271 + 16) = sub_23B06B294;
                    *(_QWORD *)(v271 + 24) = v270;
                    sub_23AEB34A4(v268);
                    v1089 = sub_23B1C5E40();
                    LODWORD(v943) = sub_23B1C6AB8();
                    v272 = swift_allocObject();
                    *(_BYTE *)(v272 + 16) = 32;
                    v273 = swift_allocObject();
                    *(_BYTE *)(v273 + 16) = 8;
                    v274 = swift_allocObject();
                    *(_QWORD *)(v274 + 16) = sub_23B06B134;
                    *(_QWORD *)(v274 + 24) = v269;
                    v111 = swift_allocObject();
                    v111[2].isa = (Class)sub_23AB33690;
                    v111[3].isa = (Class)v274;
                    v275 = swift_allocObject();
                    *(_BYTE *)(v275 + 16) = 32;
                    v276 = swift_allocObject();
                    *(_BYTE *)(v276 + 16) = 8;
                    v277 = swift_allocObject();
                    v278 = v942;
                    *(_QWORD *)(v277 + 16) = sub_23B06B134;
                    *(_QWORD *)(v277 + 24) = v278;
                    v279 = swift_allocObject();
                    *(_QWORD *)(v279 + 16) = sub_23AB33690;
                    *(_QWORD *)(v279 + 24) = v277;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                    v280 = swift_allocObject();
                    sub_23B1A1F64(v280, 6);
                    *v281 = sub_23AB336B0;
                    v281[1] = v272;
                    v281[2] = sub_23AB336B0;
                    v281[3] = v273;
                    v281[4] = sub_23AB336AC;
                    v281[5] = v111;
                    v281[6] = sub_23AB336B0;
                    v281[7] = v275;
                    v281[8] = sub_23AB336B0;
                    v281[9] = v276;
                    v281[10] = sub_23AB336AC;
                    v281[11] = v279;
                    swift_retain();
                    *(_QWORD *)&v939 = v273;
                    swift_retain();
                    v940 = (char *)v111;
                    swift_retain();
                    v941 = (_QWORD *)v275;
                    swift_retain();
                    v942 = v276;
                    swift_retain();
                    v282 = v279;
                    swift_retain();
                    swift_bridgeObjectRelease();
                    if (os_log_type_enabled(v1089, (os_log_type_t)v943))
                    {
                      v105 = sub_23AFF5C30();
                      v108 = swift_slowAlloc();
                      v948 = 0;
                      v988 = (id)v108;
                      *(_WORD *)v105 = 514;
                      v952[0] = (void *)(v105 + 2);
                      *(_QWORD *)&v953 = sub_23AB336B0;
                      *((_QWORD *)&v953 + 1) = v272;
                      v283 = v945;
                      sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)v952, (uint64_t)&v948, (uint64_t)&v988);
                      v156 = v283;
                      if (!v283)
                      {
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB336B0;
                        *((_QWORD *)&v953 + 1) = v939;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)v952, (uint64_t)&v948, (uint64_t)&v988);
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB336AC;
                        *((_QWORD *)&v953 + 1) = v940;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)v952, (uint64_t)&v948, (uint64_t)&v988);
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB336B0;
                        *((_QWORD *)&v953 + 1) = v941;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)v952, (uint64_t)&v948, (uint64_t)&v988);
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB336B0;
                        *((_QWORD *)&v953 + 1) = v942;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)v952, (uint64_t)&v948, (uint64_t)&v988);
                        swift_release();
                        *(_QWORD *)&v953 = sub_23AB336AC;
                        *((_QWORD *)&v953 + 1) = v282;
                        sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v953, (uint64_t)v952, (uint64_t)&v948, (uint64_t)&v988);
                        v945 = 0;
                        swift_release();
                        _os_log_impl(&dword_23AA66000, v1089, (os_log_type_t)v943, "♻️  move of %s -> %s: breaking concurrent rename cycle", (uint8_t *)v105, 0x16u);
                        swift_arrayDestroy();
                        MEMORY[0x23B8614BC](v108, -1, -1);
                        sub_23AFF5C38();
                      }
                      goto LABEL_787;
                    }
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();

                    (*(void (**)(char *, uint64_t))(v908 + 8))(v895, v909);
                    goto LABEL_666;
                  }
                  goto LABEL_582;
                }
                goto LABEL_303;
              }
              goto LABEL_271;
            }
LABEL_303:
            v435 = (__int128 *)v1062;
LABEL_460:
            sub_23ADF2D34((uint64_t)v435, (voidsub_23AEB1930);

            goto LABEL_242;
          }
          __break(1u);
LABEL_786:
          sub_23B1C704C();
          __break(1u);

          __break(1u);
LABEL_787:

          __break(1u);
          v864 = v945;
          swift_release();

          __break(1u);
          goto LABEL_788;
        }
        if (sub_23AEB54F4())
          goto LABEL_264;
        sub_23AA724E8((uint64_t)v1062, (uint64_t)&v953, (uint64_t *)&unk_2569E63E0);
        *(_OWORD *)((char *)&v994[24] + 8) = v980;
        *(_OWORD *)((char *)&v994[25] + 8) = v981;
        *(_OWORD *)((char *)&v994[26] + 8) = v982;
        *(_OWORD *)((char *)&v994[20] + 8) = v976;
        *(_OWORD *)((char *)&v994[21] + 8) = v977;
        *(_OWORD *)((char *)&v994[22] + 8) = v978;
        *(_OWORD *)((char *)&v994[23] + 8) = v979;
        *(_OWORD *)((char *)&v994[16] + 8) = v972;
        *(_OWORD *)((char *)&v994[17] + 8) = v973;
        *(_OWORD *)((char *)&v994[18] + 8) = v974;
        *(_OWORD *)((char *)&v994[19] + 8) = v975;
        *(_OWORD *)((char *)&v994[15] + 8) = v971;
        *(_OWORD *)((char *)&v994[12] + 8) = v968;
        *(_OWORD *)((char *)&v994[13] + 8) = v969;
        *(_OWORD *)((char *)&v994[14] + 8) = v970;
        v431 = v959;
        v994[0] = v953;
        *(_QWORD *)&v994[1] = v954;
        BYTE8(v994[1]) = BYTE8(v954);
        v994[2] = v955;
        v994[3] = v956;
        v994[4] = v957;
        v994[5] = v958;
        LOWORD(v994[6]) = v959;
        BYTE2(v994[6]) = v960;
        *(_OWORD *)((char *)&v994[6] + 8) = v961;
        BYTE8(v994[7]) = v962;
        v994[8] = v963;
        v994[9] = v964;
        v994[10] = v965;
        v994[11] = v966;
        *(_QWORD *)&v994[12] = v967;
        BYTE8(v994[27]) = v983;
        v994[28] = v984;
        v994[29] = v985;
        LOBYTE(v994[30]) = v986;
        *((_QWORD *)&v994[30] + 1) = v987;
        sub_23AEB34A4((uint64_t)v1032);
        sub_23AAFCF50((uint64_t)v994);
        if (!sub_23AA9F51C(v431, 2))
        {
          v500 = v1062;
LABEL_444:
          sub_23ADF2D34((uint64_t)v500, (voidsub_23AEB1930);
          goto LABEL_445;
        }
        v432 = v941[5];
        v433 = sub_23AAED140();
        v434 = v945;
        (*(void (**)(uint8_t **, _QWORD))(*(_QWORD *)v432 + 240))(&v991, v433 & 1);
        v945 = v434;
        if (v434)
          goto LABEL_303;
        if (v936[6](v915, 1, v937) == 1)
        {
          sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);

          v312 = (uint64_t *)&unk_2542E4750;
          v313 = (uint64_t)v915;
          goto LABEL_456;
        }
        v609 = (uint64_t)v915;
        v610 = sub_23AFFA500((uint64_t *)&unk_2542E6B00);
        sub_23ADF2D34((uint64_t)v1062, (voidsub_23AEB1930);

        sub_23AA8A05C(v609, (uint64_t *)&unk_2542E6B00);
        if ((v610 & 1) == 0)
          goto LABEL_369;
LABEL_447:
        v546 = v944;
        *(_QWORD *)v944 = 0;
        *(_WORD *)(v546 + 8) = -256;
        return;
      }
LABEL_436:
      sub_23AA724E8((uint64_t)&v1065, (uint64_t)v1036, (uint64_t *)&unk_2569E63E0);
      sub_23AA724E8((uint64_t)v1036, (uint64_t)v1061, (uint64_t *)&unk_2569E63E0);
      if (sub_23AAFC2A4((uint64_t)v1061) == 1)
      {
LABEL_445:

        goto LABEL_446;
      }
      sub_23AA724E8((uint64_t)v1036, (uint64_t)v1032, (uint64_t *)&unk_2569E63E0);
      v534 = (void *)v1032[0];
      if (!v1032[0] || (v993 = (id)v1032[0], v535 = v943[208], v535 == 255))
      {
        v500 = v1036;
        goto LABEL_444;
      }
      v988 = (id)*((_QWORD *)v943 + 25);
      v989 = v535;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v935 + 56))(v930, 1, 1, v934);
      v536 = v1033;
      v537 = v1034;
      v538 = v1035;
      if (sub_23B12B0C0(1024, v1033, v1034, v1035))
      {
        v539 = sub_23AAED140();
        v540 = (void (*)(id *, _QWORD))*((_QWORD *)v156->isa + 30);
        sub_23ADF2D34((uint64_t)v1036, (voidsub_23AEB367C);
        v541 = v534;
        v542 = v919;
        v543 = v945;
        v540(&v993, v539 & 1);
        v945 = v543;
        if (!v543)
        {
          v544 = v930;
          sub_23AA8A05C(v930, &qword_2542E4770);
          v545 = (uint64_t)v542;
LABEL_442:
          sub_23AA724E8(v545, v544, &qword_2542E4770);
          goto LABEL_454;
        }
        goto LABEL_459;
      }
      if (sub_23B12B0C0(2, v536, v537, v538))
      {
        v547 = (void (*)(__int128 *__return_ptr, id *))*((_QWORD *)v156->isa + 89);
        sub_23ADF2D34((uint64_t)v1036, (voidsub_23AEB367C);
        v548 = v534;
        v549 = v945;
        v547(&v953, &v993);
        v945 = v549;
        if (v549)
          goto LABEL_459;
        v550 = (void *)v953;
        if ((_QWORD)v953)
        {
          *(_QWORD *)&v994[0] = v953;
          v551 = sub_23AAED140();
          v552 = v945;
          (*((void (**)(_OWORD *, _QWORD))v156->isa + 30))(v994, v551 & 1);
          v945 = v552;
          if (!v552)
          {

            v544 = v930;
            sub_23AA8A05C(v930, &qword_2542E4770);
            v545 = (uint64_t)v910;
            goto LABEL_442;
          }

LABEL_459:
          sub_23AA8A05C(v930, &qword_2542E4770);

          sub_23ADF2D34((uint64_t)v1036, (voidsub_23AEB1930);
          sub_23AA724E8((uint64_t)&v1065, (uint64_t)&v995, (uint64_t *)&unk_2569E63E0);
          v435 = &v995;
          goto LABEL_460;
        }
      }
      else
      {
        sub_23ADF2D34((uint64_t)v1036, (voidsub_23AEB367C);
        v553 = v534;
      }
LABEL_454:
      v554 = v930;
      v555 = v918;
      sub_23AA8EFC8(v930, v918, &qword_2542E4770);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v935 + 48))(v555, 1, v934) == 1)
      {
        sub_23AA8A05C(v554, &qword_2542E4770);

        sub_23ADF2D34((uint64_t)v1036, (voidsub_23AEB1930);
        sub_23AA724E8((uint64_t)&v1065, (uint64_t)&v995, (uint64_t *)&unk_2569E63E0);
        sub_23ADF2D34((uint64_t)&v995, (voidsub_23AEB1930);

        v313 = v555;
        v312 = &qword_2542E4770;
        goto LABEL_456;
      }
      v1089 = v244;
      v556 = v555;
      v557 = v920;
      sub_23AA724E8(v556, (uint64_t)v920, (uint64_t *)&unk_2542E4760);
      v558 = v557 + 1;
      v560 = v557[10];
      v559 = v557[11];
      *(_QWORD *)&v994[0] = *v557;
      v561 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t, _OWORD *))*((_QWORD *)v156->isa + 32);
      v562 = *(id *)&v994[0];
      swift_bridgeObjectRetain();
      v563 = v945;
      v564 = v561(v558, v560, v559, v994);
      v945 = v563;
      if (v563)
      {

        swift_bridgeObjectRelease();
        sub_23AA8A05C((uint64_t)v920, (uint64_t *)&unk_2542E4760);
        goto LABEL_459;
      }
      v565 = (unsigned __int8 *)v564;
      *(_QWORD *)&v939 = v242;
      swift_bridgeObjectRelease();

      v943 = v565;
      if (!*((_QWORD *)v565 + 2))
      {
LABEL_496:
        swift_bridgeObjectRelease();
        sub_23AA8A05C((uint64_t)v920, (uint64_t *)&unk_2542E4760);
        sub_23AA8A05C(v930, &qword_2542E4770);

        sub_23ADF2D34((uint64_t)v1036, (voidsub_23AEB1930);
        sub_23AA724E8((uint64_t)&v1065, (uint64_t)&v995, (uint64_t *)&unk_2569E63E0);
        v606 = &v995;
        goto LABEL_497;
      }
      v566 = v943;
      v567 = sub_23ACDBBE8((void (*)(id *))&v995, 0, (uint64_t)v943);
      v569 = *v568;
      ((void (*)(__int128 *, _QWORD))v567)(&v995, 0);
      v108 = 1;
      v929 = (char *)(MEMORY[0x24BEE4AD8] + 8);
      do
      {
        v570 = v945;
        sub_23AFFA3FC(v569, &v995);
        v945 = v570;
        if (v570)
        {
          swift_bridgeObjectRelease();

          sub_23AA8A05C((uint64_t)v920, (uint64_t *)&unk_2542E4760);
          sub_23AA8A05C(v930, &qword_2542E4770);

          sub_23ADF2D34((uint64_t)v1036, (voidsub_23AEB1930);
          sub_23AA724E8((uint64_t)&v1065, (uint64_t)v994, (uint64_t *)&unk_2569E63E0);
          v437 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v994;
          goto LABEL_495;
        }
        sub_23AA724E8((uint64_t)&v995, (uint64_t)&v953, (uint64_t *)&unk_2569E63E0);
        sub_23AA724E8((uint64_t)&v953, (uint64_t)v994, (uint64_t *)&unk_2569E63E0);
        if (sub_23AAFC2A4((uint64_t)v994) == 1)
        {

          goto LABEL_477;
        }
        sub_23AA724E8((uint64_t)&v953, (uint64_t)v952, (uint64_t *)&unk_2569E63E0);
        memcpy(v1082, v952, sizeof(v1082));
        if (!sub_23B002AF8() || LOBYTE(v952[26]) == 255)
        {
          sub_23ADF2D34((uint64_t)&v953, (voidsub_23AEB1930);

          goto LABEL_477;
        }
        v950 = v952[25];
        v951 = (char)v952[26];
        v571 = *(uint64_t (**)(id *, void **))(*(_QWORD *)v941[5] + 720);
        sub_23AEB34A4((uint64_t)v952);
        v572 = v945;
        v573 = v571(&v988, &v950);
        v945 = v572;
        if (v572)
        {
          sub_23ADF2D34((uint64_t)&v953, (voidsub_23AEB1930);
          sub_23ADF2D34((uint64_t)&v953, (voidsub_23AEB1930);
          swift_bridgeObjectRelease();

          sub_23AA8A05C((uint64_t)v920, (uint64_t *)&unk_2542E4760);
          sub_23AA8A05C(v930, &qword_2542E4770);

          sub_23ADF2D34((uint64_t)v1036, (voidsub_23AEB1930);
          sub_23AA724E8((uint64_t)&v1065, (uint64_t)&v948, (uint64_t *)&unk_2569E63E0);
          v437 = &v948;
          goto LABEL_495;
        }
        if ((v573 & 1) != 0)
        {
          sub_23AF9CAE0();
          v574 = v1070;
          v575 = swift_allocObject();
          *(_QWORD *)(v575 + 16) = v574;
          v576 = swift_allocObject();
          *(_QWORD *)(v576 + 16) = sub_23B06B4E8;
          *(_QWORD *)(v576 + 24) = v575;
          v577 = v905;
          sub_23AA8EFC8((uint64_t)v920, v905, (uint64_t *)&unk_2542E4760);
          v578 = (*(unsigned __int8 *)(v935 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v935 + 80);
          v579 = swift_allocObject();
          sub_23AA724E8(v577, v579 + v578, (uint64_t *)&unk_2542E4760);
          v580 = swift_allocObject();
          *(_QWORD *)(v580 + 16) = sub_23B057BD4;
          *(_QWORD *)(v580 + 24) = v579;
          v581 = v574;
          v938 = sub_23B1C5E40();
          LODWORD(v937) = sub_23B1C6AB8();
          v940 = (char *)swift_allocObject();
          v940[16] = 32;
          v582 = swift_allocObject();
          *(_BYTE *)(v582 + 16) = 8;
          v583 = swift_allocObject();
          *(_QWORD *)(v583 + 16) = sub_23B06B130;
          *(_QWORD *)(v583 + 24) = v576;
          v584 = (char *)swift_allocObject();
          *((_QWORD *)v584 + 2) = sub_23AB33690;
          *((_QWORD *)v584 + 3) = v583;
          v105 = swift_allocObject();
          *(_BYTE *)(v105 + 16) = 32;
          v585 = swift_allocObject();
          *(_BYTE *)(v585 + 16) = 8;
          v586 = swift_allocObject();
          *(_QWORD *)(v586 + 16) = sub_23B057BE0;
          *(_QWORD *)(v586 + 24) = v580;
          v587 = swift_allocObject();
          *(_QWORD *)(v587 + 16) = sub_23AB33690;
          *(_QWORD *)(v587 + 24) = v586;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
          v588 = swift_allocObject();
          sub_23B1A1F64(v588, 6);
          v589 = (uint64_t)v940;
          *v590 = sub_23AB336B0;
          v590[1] = v589;
          v590[2] = sub_23AB336B0;
          v590[3] = v582;
          v590[4] = sub_23AB336AC;
          v590[5] = v584;
          v590[6] = sub_23AB336B0;
          v590[7] = v105;
          v590[8] = sub_23AB336B0;
          v590[9] = v585;
          v590[10] = sub_23AB336AC;
          v590[11] = v587;
          swift_retain();
          v933 = v582;
          swift_retain();
          v931 = v584;
          swift_retain();
          v934 = v105;
          swift_retain();
          v936 = (unsigned int (**)(char *, uint64_t, unint64_t))v585;
          swift_retain();
          v932 = (char *)v587;
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v938, (os_log_type_t)v937))
          {
            v591 = (uint8_t *)sub_23AFF5C30();
            v592 = swift_slowAlloc();
            v947 = 0;
            v946 = v592;
            *(_WORD *)v591 = 514;
            v990 = v591 + 2;
            v948 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
            v949 = v940;
            v593 = v945;
            sub_23AFF5C54(&v948, (uint64_t)&v990, (uint64_t)&v947, (uint64_t)&v946);
            v111 = v593;
            if (!v593)
            {
              swift_release();
              v948 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
              v949 = (char *)v933;
              sub_23AFF5C54(&v948, (uint64_t)&v990, (uint64_t)&v947, (uint64_t)&v946);
              swift_release();
              v948 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
              v949 = (char *)v931;
              sub_23AFF5C54(&v948, (uint64_t)&v990, (uint64_t)&v947, (uint64_t)&v946);
              swift_release();
              v948 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
              v949 = (char *)v934;
              sub_23AFF5C54(&v948, (uint64_t)&v990, (uint64_t)&v947, (uint64_t)&v946);
              swift_release();
              v948 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
              v949 = (char *)v936;
              sub_23AFF5C54(&v948, (uint64_t)&v990, (uint64_t)&v947, (uint64_t)&v946);
              swift_release();
              v948 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
              v949 = v932;
              sub_23AFF5C54(&v948, (uint64_t)&v990, (uint64_t)&v947, (uint64_t)&v946);
              v945 = 0;
              swift_release();
              _os_log_impl(&dword_23AA66000, v938, (os_log_type_t)v937, "♻️  move of %s -> %s: reparent cycle detected", v591, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x23B8614BC](v592, -1, -1);
              sub_23AFF5C38();
            }
            goto LABEL_789;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v908 + 8))(v912, v909);
          v594 = (void *)*v920;
          v595 = (uint64_t)v907;
          *v907 = (uint8_t *)*v920;
          *(_WORD *)(v595 + 8) = 0;
          swift_storeEnumTagMultiPayload();
          v596 = *(void (**)(uint64_t))(*v941 + 312);
          v597 = v594;
          v596(v595);
          sub_23AA8A05C(v595, &qword_2542DDFC0);
          sub_23ADF2D34((uint64_t)&v953, (voidsub_23AEB1930);
          sub_23AA724E8((uint64_t)&v995, (uint64_t)&v948, (uint64_t *)&unk_2569E63E0);
          sub_23ADF2D34((uint64_t)&v948, (voidsub_23AEB1930);

        }
        else
        {
          sub_23ADF2D34((uint64_t)&v953, (voidsub_23AEB1930);
          sub_23ADF2D34((uint64_t)&v953, (voidsub_23AEB1930);

        }
        v566 = v943;
LABEL_477:
        if (v108 == v566[2])
          goto LABEL_496;
        v598 = sub_23ACDBBE8((void (*)(id *))&v995, v108, (uint64_t)v566);
        v569 = *v599;
        ((void (*)(__int128 *, _QWORD))v598)(&v995, 0);
        v600 = __OFADD__(v108++, 1);
      }
      while (!v600);
      __break(1u);
LABEL_481:
      sub_23AA724E8((uint64_t)v1062, (uint64_t)v1061, qword_2542E6E20);
      v601 = sub_23AA9F490(*((uint64_t *)&v1061[1] + 1));
      sub_23AA8A05C(v927, (uint64_t *)&unk_2542E6B00);
      if (!v601)
      {
        sub_23ADF2D34((uint64_t)v1062, (voidsub_23AAAEC3C);
        goto LABEL_503;
      }
      sub_23ACF4048((uint64_t)v1061);
      sub_23ADF2D34((uint64_t)v1062, (voidsub_23AAAEC3C);
      v602 = v1061[9];
      v603 = LOBYTE(v1061[10]);
      sub_23AAAE478(*(id *)&v1061[9], *((id *)&v1061[9] + 1), v1061[10]);
      sub_23ACF410C((uint64_t)v1061);
      if (v603 != 2)
      {
        sub_23AAAEE10((void *)v602, *((id *)&v602 + 1), v603);
LABEL_386:
        v209 = (uint64_t *)&unk_2542E4750;
LABEL_67:
        sub_23AA8A05C((uint64_t)v874, v209);
        goto LABEL_181;
      }
      sub_23AAAEE10((void *)v602, *((id *)&v602 + 1), 2);
LABEL_503:

      v608 = v944;
      *(_QWORD *)v944 = 0;
      *(_WORD *)(v608 + 8) = -256;
      sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);
      v422 = v875;
LABEL_291:
      sub_23AA8A05C(v422, (uint64_t *)&unk_2569E5F10);
      return;
    case 0x16u:
      if ((*v136 & 1) == 0)
      {

        goto LABEL_159;
      }
      v239 = (*(uint64_t (**)(void))(*v941 + 152))();
      v240 = sub_23AA9F3D0(0x4000, v239);
      v124 = v877;
      if (v174 && v240 && sub_23AA9F3C4(128, *((_QWORD *)v943 + 27)) && sub_23AA9F3D0(2, v1074))
        goto LABEL_102;

      break;
    case 0x1Au:
      goto LABEL_94;
    default:

      v237 = &qword_2542DDFC0;
      v238 = (uint64_t)v136;
      goto LABEL_158;
  }
LABEL_137:
  v295 = v944;
  *(_QWORD *)v944 = 0;
  *(_WORD *)(v295 + 8) = -256;
  v296 = (uint64_t *)&unk_2569E5F10;
  v297 = (uint64_t)v124;
LABEL_238:
  sub_23AA8A05C(v297, v296);
  return;
}

void sub_23B015BD0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  id *v146;
  uint64_t v147;
  uint64_t v148;
  __n128 v149;
  __n128 v150;
  __n128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  int v157;
  uint64_t (*v158)(uint64_t, uint64_t, uint64_t);
  __int128 *v159;
  _BOOL4 v160;
  void *v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  BOOL v166;
  char v167;
  void *v168;
  int v169;
  uint64_t v170;
  id v171;
  void *v172;
  id v173;
  char *v174;
  uint64_t (*v175)(uint64_t, uint64_t, uint64_t);
  int v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char v185;
  uint64_t v186;
  uint64_t (*v187)(_QWORD, uint64_t, uint64_t);
  char *v188;
  char v189;
  uint64_t v190;
  char *v191;
  char v192;
  void *v193;
  uint64_t v194;
  uint64_t (*v195)(_QWORD, uint64_t, uint64_t);
  id v196;
  char *v197;
  char v198;
  uint64_t (*v199)(uint64_t, uint64_t, uint64_t);
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  _QWORD *v204;
  int EnumCaseMultiPayload;
  uint64_t v206;
  void *v207;
  id v208;
  void *v209;
  uint64_t v210;
  id v211;
  char v212;
  unsigned int (*v213)(uint64_t, uint64_t, uint8_t *);
  int v214;
  uint64_t (*v215)(uint64_t (**)(uint64_t, uint64_t, uint64_t));
  id v216;
  char *v217;
  char v218;
  uint64_t *v219;
  id v220;
  uint64_t *v221;
  uint64_t (*v222)(uint64_t, uint64_t, uint64_t);
  uint64_t v223;
  unsigned int (*v224)(uint64_t, uint64_t, uint8_t *);
  uint64_t v225;
  char v226;
  uint64_t v227;
  char *v228;
  unsigned int (*v229)(void);
  uint64_t *v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  char *v242;
  _QWORD *v243;
  NSObject *v244;
  char *v245;
  _QWORD *v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  uint64_t v253;
  id v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  uint64_t (*v258)(void **, _OWORD *);
  uint64_t (*v259)(uint64_t, uint64_t, uint64_t);
  char *v260;
  char v261;
  uint64_t v262;
  uint64_t v263;
  int v264;
  char v265;
  char *v266;
  _QWORD *v267;
  BOOL v268;
  uint64_t (*v269)(uint64_t, uint64_t, uint64_t);
  _QWORD *v270;
  uint64_t v271;
  __int128 *v272;
  uint64_t v273;
  char v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  void *v278;
  id v279;
  id v280;
  char v281;
  _QWORD *v282;
  uint64_t *v283;
  uint64_t v284;
  uint64_t (*v285)(uint64_t, uint64_t, uint64_t);
  uint64_t v286;
  uint64_t v287;
  BOOL v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t (*v291)(uint64_t, uint64_t, uint64_t);
  id v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  _OWORD *v296;
  uint64_t v297;
  uint64_t v298;
  _QWORD *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unsigned int (*v303)(uint64_t, uint64_t, _QWORD);
  id v304;
  id v305;
  uint64_t v306;
  BOOL v307;
  char *v308;
  char v309;
  char *v310;
  uint64_t *v311;
  uint64_t v312;
  char *v313;
  _BYTE *v314;
  uint64_t v315;
  void *v316;
  unint64_t v317;
  uint64_t v318;
  void *v319;
  uint64_t v320;
  uint64_t v321;
  unsigned int (*v322)(uint64_t, uint64_t, uint8_t *);
  uint64_t *v323;
  int v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  char *v328;
  _BOOL4 v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  _OWORD *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  char v337;
  uint64_t (*v338)(uint64_t (**)(uint64_t, uint64_t, uint64_t));
  char *v339;
  int v340;
  uint64_t (**v341)(uint64_t, uint64_t, uint64_t);
  int v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  id v348;
  char v349;
  uint64_t v350;
  _QWORD *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  char v357;
  char *v358;
  uint64_t v359;
  char v360;
  char v361;
  char *v362;
  void *v363;
  uint64_t v364;
  uint64_t v365;
  char v366;
  char v367;
  void (*v368)(uint64_t (**)(uint64_t, uint64_t, uint64_t), _QWORD);
  id v369;
  char *v370;
  char *v371;
  uint64_t (*v372)(uint64_t, uint64_t, uint64_t);
  uint64_t v373;
  _OWORD *v374;
  uint64_t v375;
  uint64_t (*v376)(uint64_t, uint64_t);
  uint64_t v377;
  int v378;
  char *v379;
  id v380;
  uint64_t v381;
  void **v382;
  uint64_t (*v383)(uint64_t, uint64_t, uint64_t);
  uint64_t v384;
  _QWORD *v385;
  _QWORD *v386;
  uint64_t v387;
  char *v388;
  void (*v389)(uint64_t (**__return_ptr)(uint64_t, uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t, uint64_t));
  id v390;
  char *v391;
  char v392;
  char *v393;
  _QWORD *v394;
  id v395;
  _QWORD *v396;
  uint64_t v397;
  uint64_t *v398;
  uint64_t (*v399)(uint64_t, uint64_t, uint64_t);
  int v400;
  int v401;
  uint64_t v402;
  uint64_t v403;
  _QWORD *v404;
  uint64_t v405;
  uint64_t v406;
  _QWORD *v407;
  uint64_t v408;
  id v409;
  uint64_t (*v410)(uint64_t, uint64_t, uint64_t);
  uint64_t v411;
  uint64_t *v412;
  uint64_t v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char v419;
  uint64_t (*v420)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v421;
  char *v422;
  uint64_t v423;
  char v424;
  uint64_t v425;
  char v426;
  char *v427;
  void (*v428)(_OWORD *__return_ptr, _OWORD *);
  char *v429;
  id v430;
  id v431;
  char *v432;
  char v433;
  char *v434;
  char *v435;
  _BYTE *v436;
  char *v437;
  char *v438;
  void *v439;
  char *v440;
  char v441;
  char v442;
  char *v443;
  char v444;
  uint64_t v445;
  char v446;
  uint64_t v447;
  BOOL v448;
  char *v449;
  char v450;
  uint64_t v451;
  NSObject *v452;
  char *v453;
  char v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  _OWORD *v460;
  uint64_t v461;
  uint64_t v462;
  char v463;
  uint64_t *v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  _OWORD *v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  char v472;
  uint64_t (*v473)();
  uint64_t v474;
  uint64_t v475;
  char *v476;
  void *v477;
  uint64_t (*v478)(id *, id *);
  id v479;
  char *v480;
  char v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  unint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t (*v491)(uint64_t, uint64_t, uint64_t);
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  __int128 *v496;
  _QWORD *v497;
  uint8_t *v498;
  uint64_t v499;
  char *v500;
  uint64_t v501;
  uint64_t (**v502)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 v503;
  uint64_t v504;
  uint64_t (*v505)();
  uint64_t v506;
  BOOL v507;
  char v508;
  BOOL v509;
  void *v510;
  void *v511;
  int v512;
  char v513;
  uint64_t (*v514)(void **, _OWORD *);
  uint64_t (*v515)(uint64_t, uint64_t, uint64_t);
  char *v516;
  char v517;
  char v518;
  uint64_t v519;
  __int128 *v520;
  uint64_t v521;
  void *v522;
  uint64_t v523;
  uint64_t v524;
  id v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  _QWORD *v534;
  uint64_t v535;
  uint64_t v536;
  _QWORD *v537;
  uint64_t (*v538)(uint64_t, uint64_t, uint64_t);
  _QWORD *v539;
  uint64_t *v540;
  uint64_t v541;
  void *v542;
  uint64_t v543;
  char v544;
  uint64_t *v545;
  uint64_t v546;
  uint64_t v547;
  char v548;
  uint64_t v549;
  char *v550;
  uint64_t v551;
  char v552;
  _QWORD *v553;
  NSObject *v554;
  void *v555;
  char *v556;
  _QWORD *v557;
  NSObject *v558;
  _QWORD *v559;
  _QWORD *v560;
  uint64_t v561;
  char v562;
  void (*v563)(id *);
  id *v564;
  id v565;
  _BOOL4 v566;
  _BOOL4 v567;
  unint64_t v568;
  id v569;
  uint64_t (*v570)(uint64_t, uint64_t, uint64_t);
  char v571;
  char *v572;
  char v573;
  uint64_t v574;
  id *v575;
  id *v576;
  uint64_t *v577;
  uint64_t v578;
  id v579;
  uint64_t v580;
  int v581;
  char *v582;
  uint64_t v583;
  uint64_t v584;
  void (*v585)(id *);
  id *v586;
  id v587;
  int *v588;
  void *v589;
  uint64_t v590;
  __int128 *v591;
  uint64_t v592;
  void *v593;
  uint64_t v594;
  uint64_t v595;
  id v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  _QWORD *v604;
  uint64_t v605;
  uint64_t (*v606)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v607)(uint64_t, uint64_t, uint64_t);
  uint64_t v608;
  void *v609;
  uint64_t v610;
  int v611;
  uint64_t v612;
  char v613;
  uint64_t v614;
  uint64_t v615;
  char *v616;
  char v617;
  char v618;
  void *v619;
  uint64_t v620;
  void (*v621)(uint64_t);
  id v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  char *v628;
  char v629;
  char v630;
  void *v631;
  _QWORD *v632;
  uint64_t *v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t *v636;
  uint64_t v637;
  NSObject *v638;
  uint64_t v639;
  NSObject *v640;
  char v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t (*v645)(uint64_t, uint64_t, uint64_t);
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  void *v649;
  NSObject *v650;
  BOOL v651;
  char *v652;
  char *v653;
  char v654;
  char *v655;
  char v656;
  _QWORD *v657;
  uint64_t v658;
  uint64_t (*v659)(uint64_t, uint64_t, uint64_t);
  int v660;
  int *v661;
  char *v662;
  void *v663;
  uint64_t v664;
  int v665;
  uint64_t v666;
  NSObject *v667;
  char v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t (*v672)(uint64_t, uint64_t, uint64_t);
  uint64_t v673;
  uint64_t v674;
  uint64_t *v675;
  uint64_t v676;
  uint64_t v677;
  _QWORD *v678;
  uint64_t v679;
  uint64_t v680;
  char *v681;
  BOOL v682;
  char v683;
  int isa_low;
  uint64_t v685;
  uint64_t v686;
  NSObject *v687;
  uint64_t v688;
  uint64_t v689;
  unint64_t v690;
  uint64_t v691;
  BOOL v692;
  int v693;
  _QWORD *v694;
  _QWORD *v695;
  uint64_t *v696;
  uint64_t (*v697)(_OWORD *, id *);
  uint64_t (*v698)(uint64_t, uint64_t, uint64_t);
  char *v699;
  char v700;
  uint64_t v701;
  uint64_t v702;
  NSObject *v703;
  int v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  _QWORD *v709;
  uint64_t v710;
  void *v711;
  char *v712;
  char *v713;
  __int128 *v714;
  char v715;
  int v716;
  char *v717;
  char v718;
  uint64_t v719;
  uint64_t v720;
  NSObject *v721;
  int v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  _QWORD *v727;
  uint8_t *v728;
  uint64_t (*v729)(uint64_t, uint64_t, uint64_t);
  char *v730;
  uint64_t v731;
  uint64_t *v732;
  id v733;
  _QWORD *v734;
  uint64_t v735;
  char *v736;
  uint64_t v737;
  void *v738;
  char *v739;
  uint64_t v740;
  uint64_t v741;
  char *v742;
  char v743;
  uint64_t v744;
  uint64_t v745;
  NSObject *v746;
  int v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  _QWORD *v752;
  uint8_t *v753;
  uint64_t (*v754)(uint64_t, uint64_t, uint64_t);
  char *v755;
  char *v756;
  char v757;
  uint64_t v758;
  uint64_t v759;
  NSObject *v760;
  int v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  _QWORD *v766;
  uint8_t *v767;
  uint64_t (*v768)(uint64_t, uint64_t, uint64_t);
  char *v769;
  char v770;
  BOOL v771;
  char *v772;
  uint64_t v773;
  char v774;
  uint64_t (*v775)(_OWORD *, uint64_t (**)(uint64_t, uint64_t, uint64_t));
  char *v776;
  char v777;
  id v778;
  uint64_t v779;
  uint64_t v780;
  NSObject *v781;
  int v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  _QWORD *v787;
  uint64_t v788;
  void *v789;
  char *v790;
  id v791;
  id v792;
  _QWORD *v793;
  id v794;
  _QWORD *v795;
  uint64_t v796;
  uint64_t v797;
  NSObject *v798;
  int v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  _QWORD *v804;
  uint8_t *v805;
  uint64_t v806;
  char *v807;
  id v808;
  uint64_t v809;
  uint64_t v810;
  id *v811;
  uint64_t v812;
  NSObject *v813;
  uint64_t v814;
  uint64_t v815;
  char *v816;
  char *v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  char *v825;
  char *v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  char *v830;
  char *v831;
  char *v832;
  char *v833;
  char *v834;
  char *v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  char *v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  char *v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  _QWORD *v853;
  uint64_t v854;
  uint64_t v855;
  char *v856;
  uint64_t v857;
  int *v858;
  uint64_t v859;
  char *v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t *v863;
  uint64_t v864;
  uint64_t v865;
  char *v866;
  char *v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  void **v873;
  uint64_t (*v874)(uint64_t, uint64_t, uint64_t);
  uint64_t v875;
  char *v876;
  uint64_t v877;
  uint64_t (*v878)(uint64_t, uint64_t, uint64_t);
  uint64_t v879;
  uint64_t v880;
  unint64_t v881;
  unint64_t v882;
  uint64_t (*isa)(uint64_t, uint64_t, uint64_t);
  uint64_t v884;
  __int128 v885;
  uint8_t *v886;
  _QWORD *v887;
  uint8_t *v888;
  __int128 *v889;
  _QWORD *v890;
  char *v891;
  uint64_t (*v892)(uint64_t, uint64_t, uint64_t);
  __int128 *v893;
  _OWORD v894[31];
  uint64_t (*v895)(uint64_t, uint64_t, uint64_t);
  char *v896;
  __int128 v897;
  char v898;
  __int128 v899;
  __int128 v900;
  __int128 v901;
  __int128 v902;
  __int128 v903;
  __int128 v904;
  __int16 v905;
  char v906;
  __int128 v907;
  char v908;
  __int128 v909;
  __int128 v910;
  __int128 v911;
  __int128 v912;
  uint64_t v913;
  __int128 v914;
  __int128 v915;
  __int128 v916;
  __int128 v917;
  __int128 v918;
  __int128 v919;
  __int128 v920;
  __int128 v921;
  __int128 v922;
  __int128 v923;
  __int128 v924;
  __int128 v925;
  uint64_t v926;
  char v927;
  __int128 v928;
  __int128 v929;
  char v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint8_t *v934;
  uint64_t (*v935)(uint64_t, uint64_t, uint64_t);
  uint64_t v936;
  id v937;
  id v938;
  char v939;
  _OWORD v940[31];
  _OWORD v941[15];
  uint64_t v942;
  __int128 v943;
  char v944;
  __int128 v945;
  __int128 v946;
  __int128 v947;
  __int128 v948;
  __int16 v949;
  char v950;
  uint64_t v951;
  uint64_t v952;
  char v953;
  __int128 v954;
  __int128 v955;
  __int128 v956;
  __int128 v957;
  uint64_t v958;
  char v959;
  __int128 v960;
  __int128 v961;
  char v962;
  uint64_t v963;
  uint64_t (*v964)(uint64_t, uint64_t, uint64_t);
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  char v968;
  _OWORD v969[27];
  uint64_t v970;
  char v971;
  __int128 v972;
  __int128 v973;
  char v974;
  uint64_t v975;
  id v976;
  void *v977;
  unsigned __int16 v978;
  _OWORD v979[31];
  _QWORD v980[62];
  uint64_t (*v981)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 v982;
  uint64_t (*v983)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 v984;
  char v985;
  id v986;
  char v987;
  uint64_t (*v988)(uint64_t, uint64_t, uint64_t);
  char v989;
  __int128 v990;
  __int128 v991;
  __int128 v992;
  __int128 v993;
  __int128 v994;
  __int128 v995;
  __int128 v996;
  __int128 v997;
  __int128 v998;
  __n128 v999[6];
  __n128 v1000;
  _BYTE v1001[496];
  _BYTE v1002[496];
  _BYTE v1003[496];
  _BYTE v1004[496];
  __n128 v1005;
  char v1006;
  NSObject *v1007;

  v2 = MEMORY[0x24BDAC7A8](a1);
  v891 = v1;
  v887 = v3;
  v886 = v4;
  v6 = v5;
  v1007 = v7;
  v890 = (_QWORD *)v2;
  v8 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v8);
  v826 = (char *)&v809 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5474();
  v828 = *(_QWORD *)(v10 - 8);
  v829 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v825 = (char *)&v809 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v850 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  MEMORY[0x24BDAC7A8](v850);
  v827 = (uint64_t)&v809 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v859 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E7DB0);
  MEMORY[0x24BDAC7A8](v859);
  v862 = (uint64_t)&v809 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v858 = (int *)type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v858);
  v857 = (uint64_t)&v809 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v882 = *((_QWORD *)isa - 1);
  v15 = MEMORY[0x24BDAC7A8](isa);
  v843 = (uint64_t)&v809 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v842 = (uint64_t)&v809 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v848 = (uint64_t)&v809 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v847 = (uint64_t)&v809 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v873 = (void **)((char *)&v809 - v24);
  MEMORY[0x24BDAC7A8](v23);
  v872 = (uint64_t)&v809 - v25;
  v880 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v881 = *(_QWORD *)(v880 - 8);
  v26 = MEMORY[0x24BDAC7A8](v880);
  v824 = (uint64_t)&v809 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v836 = (uint64_t)&v809 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v837 = (uint64_t)&v809 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v839 = (uint64_t)&v809 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v838 = (uint64_t)&v809 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v845 = (uint64_t)&v809 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v841 = (uint64_t)&v809 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v846 = (uint64_t)&v809 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v870 = (uint64_t)&v809 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v877 = (uint64_t)&v809 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v879 = (uint64_t)&v809 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v851 = (uint64_t)&v809 - v49;
  v852 = v50;
  MEMORY[0x24BDAC7A8](v48);
  v868 = (uint64_t)&v809 - v51;
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v844 = (uint64_t)&v809 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v867 = (char *)&v809 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v876 = (char *)&v809 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v856 = (char *)&v809 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v865 = (uint64_t)&v809 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v866 = (char *)&v809 - v64;
  MEMORY[0x24BDAC7A8](v63);
  v874 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v809 - v65);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v67 = MEMORY[0x24BDAC7A8](v66);
  v69 = (char *)&v809 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = MEMORY[0x24BDAC7A8](v67);
  v861 = (uint64_t)&v809 - v71;
  MEMORY[0x24BDAC7A8](v70);
  v864 = (uint64_t)&v809 - v72;
  v888 = (uint8_t *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  *(_QWORD *)&v885 = *((_QWORD *)v888 - 1);
  MEMORY[0x24BDAC7A8](v888);
  v853 = (uint64_t *)((char *)&v809 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  v74 = sub_23B1C5E4C();
  v854 = *(_QWORD *)(v74 - 8);
  v855 = v74;
  v75 = MEMORY[0x24BDAC7A8](v74);
  v835 = (char *)&v809 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = MEMORY[0x24BDAC7A8](v75);
  v834 = (char *)&v809 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  v832 = (char *)&v809 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  v833 = (char *)&v809 - v82;
  v83 = MEMORY[0x24BDAC7A8](v81);
  v831 = (char *)&v809 - v84;
  v85 = MEMORY[0x24BDAC7A8](v83);
  v830 = (char *)&v809 - v86;
  v87 = MEMORY[0x24BDAC7A8](v85);
  v860 = (char *)&v809 - v88;
  v89 = MEMORY[0x24BDAC7A8](v87);
  v849 = (char *)&v809 - v90;
  MEMORY[0x24BDAC7A8](v89);
  v840 = (char *)&v809 - v91;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DD0);
  v93 = MEMORY[0x24BDAC7A8](v92);
  v94 = MEMORY[0x24BDAC7A8](v93);
  v95 = MEMORY[0x24BDAC7A8](v94);
  v871 = (uint64_t)&v809 - v96;
  v97 = MEMORY[0x24BDAC7A8](v95);
  v875 = (uint64_t)&v809 - v98;
  v99 = MEMORY[0x24BDAC7A8](v97);
  MEMORY[0x24BDAC7A8](v99);
  v101 = MEMORY[0x24BDAC7A8]((char *)&v809 - v100);
  v102 = MEMORY[0x24BDAC7A8](v101);
  v103 = MEMORY[0x24BDAC7A8](v102);
  v104 = MEMORY[0x24BDAC7A8](v103);
  v106 = (id *)((char *)&v809 - v105);
  v107 = MEMORY[0x24BDAC7A8](v104);
  v109 = (uint64_t)&v809 - v108;
  v110 = MEMORY[0x24BDAC7A8](v107);
  v863 = (uint64_t *)((char *)&v809 - v111);
  v112 = MEMORY[0x24BDAC7A8](v110);
  v869 = (uint64_t)&v809 - v113;
  v114 = MEMORY[0x24BDAC7A8](v112);
  v116 = (char *)&v809 - v115;
  v117 = MEMORY[0x24BDAC7A8](v114);
  v878 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v809 - v118);
  v119 = MEMORY[0x24BDAC7A8](v117);
  v121 = (char *)&v809 - v120;
  v122 = MEMORY[0x24BDAC7A8](v119);
  v124 = (char *)&v809 - v123;
  v125 = MEMORY[0x24BDAC7A8](v122);
  v126 = MEMORY[0x24BDAC7A8](v125);
  v127 = MEMORY[0x24BDAC7A8](v126);
  v884 = (uint64_t)&v809 - v128;
  v129 = MEMORY[0x24BDAC7A8](v127);
  v130 = MEMORY[0x24BDAC7A8](v129);
  v131 = MEMORY[0x24BDAC7A8](v130);
  v133 = (char *)&v809 - v132;
  v134 = MEMORY[0x24BDAC7A8](v131);
  v136 = (char *)&v809 - v135;
  v137 = MEMORY[0x24BDAC7A8](v134);
  v149 = *(__n128 *)(v6 + 208);
  v999[3] = *(__n128 *)(v6 + 192);
  v999[4] = v149;
  v999[5] = *(__n128 *)(v6 + 224);
  v150 = *(__n128 *)(v6 + 144);
  v998 = *(_OWORD *)(v6 + 128);
  v999[0] = v150;
  v151 = *(__n128 *)(v6 + 160);
  v999[2] = *(__n128 *)(v6 + 176);
  v999[1] = v151;
  v152 = *(_OWORD *)(v6 + 80);
  v994 = *(_OWORD *)(v6 + 64);
  v995 = v152;
  v153 = *(_OWORD *)(v6 + 96);
  v997 = *(_OWORD *)(v6 + 112);
  v996 = v153;
  v154 = *(_OWORD *)(v6 + 16);
  v990 = *(_OWORD *)v6;
  v991 = v154;
  v156 = *(_OWORD *)(v6 + 32);
  v155 = *(_OWORD *)(v6 + 48);
  v889 = (__int128 *)v6;
  v993 = v155;
  v992 = v156;
  v157 = BYTE8(v990);
  if (BYTE8(v990) == 255)
    goto LABEL_427;
  v822 = v143;
  v823 = (uint64_t)&v809 - v145;
  v817 = v69;
  v818 = v144;
  v819 = v142;
  v820 = v141;
  v821 = v140;
  v812 = v137;
  v813 = v139;
  v810 = v138;
  v811 = v146;
  v815 = v148;
  v816 = v133;
  v814 = v147;
  v158 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v990;
  v988 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v990;
  v989 = BYTE8(v990);
  if (!sub_23AC37674(2, (uint64_t)v1007))
  {
    v874 = v158;
    LODWORD(v868) = v157;
    if (sub_23AC37674(4, (uint64_t)v1007))
    {
      v161 = (void *)*((_QWORD *)v889 + 30);
      if (!v161)
        goto LABEL_575;
      v162 = *((unsigned __int8 *)v889 + 440);
      if (v162 == 4)
        goto LABEL_575;
      v163 = *((_QWORD *)v889 + 31);
      if (!sub_23AC37B08(v162, 1))
        goto LABEL_575;
      v164 = v822;
      sub_23AA8EFC8((uint64_t)v886, v822, &qword_2569E5DD0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v885 + 48))(v164, 1, v888) == 1)
      {
        v165 = v161;
LABEL_14:
        sub_23AA8A05C(v822, &qword_2569E5DD0);
        v166 = sub_23AA9F3C4(16, v163);
        v983 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v161;
        if (v166)
        {
          v167 = 0;
        }
        else
        {
          v215 = *(uint64_t (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v887[5]
                                                                                              + 464);
          v216 = v161;
          v217 = v891;
          v218 = v215(&v983);
          v891 = v217;
          if (v217)
          {

            return;
          }
          v265 = v218;

          v167 = v265 ^ 1;
        }
        v266 = v891;
        (*(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), _QWORD))(*(_QWORD *)v887[4] + 416))(&v988, v167 & 1);
        v891 = v266;
        if (v266)
        {

          return;
        }

        goto LABEL_130;
      }
      sub_23AA8EFC8(v164, v884, &qword_2569E5DD0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 5)
      {
        if (EnumCaseMultiPayload != 6)
        {
          if (EnumCaseMultiPayload == 12)
          {
            v206 = v884;
            v207 = *(void **)(v884 + 16);
            v208 = v161;

            if ((*(_BYTE *)(v206 + 9) & 1) != 0)
            {

              sub_23AA862DC(*(id *)v206, *(unsigned __int8 *)(v206 + 8), *(_BYTE *)(v206 + 9));
            }
            else
            {
              if (!*(_BYTE *)(v206 + 10) || *(_BYTE *)(v206 + 10) == 23)
                goto LABEL_14;

              sub_23AA862DC(*(id *)v884, *(unsigned __int8 *)(v884 + 8), *(_BYTE *)(v884 + 9));
            }
LABEL_258:
            v396 = v890;
            *v890 = 0;
            *((_WORD *)v396 + 4) = -256;
            v283 = &qword_2569E5DD0;
            v284 = v822;
            goto LABEL_294;
          }
          v241 = (uint64_t *)&unk_2542DDFB0;
          goto LABEL_99;
        }
        v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
        v236 = v884;
        v237 = v884 + *(int *)(v235 + 48);
        if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v882 + 48))(v237, 1, isa) != 1)
        {
          v278 = *(void **)(v237 + 8);
          v279 = v161;
          v280 = v278;
          sub_23AA8A05C(v237, (uint64_t *)&unk_2542E4760);
          v281 = sub_23AC37680();

          if ((v281 & 1) != 0)
          {
            sub_23AA8A05C(v884, &qword_2542E4770);
            goto LABEL_14;
          }

          v241 = &qword_2542E4770;
LABEL_99:
          v240 = v884;
          goto LABEL_257;
        }
        v238 = &qword_2542E4770;
LABEL_96:
        sub_23AA8A05C(v237, v238);
        v240 = v236;
        v241 = v238;
LABEL_257:
        sub_23AA8A05C(v240, v241);
        goto LABEL_258;
      }
      v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
      v236 = v884;
      v237 = v884 + *(int *)(v239 + 48);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v881 + 48))(v884, 1, v880) == 1)
      {
        v238 = (uint64_t *)&unk_2542E4750;
        goto LABEL_96;
      }
      v285 = v874;
      v286 = *(_QWORD *)(v236 + *(int *)(v239 + 64));
      v287 = v879;
      sub_23AA724E8(v236, v879, (uint64_t *)&unk_2542E6B00);
      v288 = sub_23AA9F3D0(2, v286);
      v289 = v287;
      v290 = v877;
      sub_23AA8EFC8(v289, v877, (uint64_t *)&unk_2542E6B00);
      if (!v288)
        goto LABEL_255;
      v291 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v290 + 16);
      if (*(_BYTE *)(v290 + 24))
      {
        if (*(_BYTE *)(v290 + 24) != 1)
        {
          if (v291)
          {
            v290 = v877;
            if ((_DWORD)v868 != 2 || v285 != (uint64_t (*)(uint64_t, uint64_t, uint64_t))1)
              goto LABEL_255;
          }
          else
          {
            v290 = v877;
            if ((_DWORD)v868 != 2 || v285)
              goto LABEL_255;
          }
          v431 = v161;
          sub_23AA8A05C(v290, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C(v879, (uint64_t *)&unk_2542E6B00);
LABEL_312:
          sub_23AA8A05C(v237, (uint64_t *)&unk_2542E4750);
          goto LABEL_14;
        }
        v290 = v877;
        if ((_DWORD)v868 == 1)
        {
          v292 = v161;
          sub_23AA8A05C(v290, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C(v879, (uint64_t *)&unk_2542E6B00);
          if (v291 == v285)
            goto LABEL_312;
LABEL_256:

          v241 = (uint64_t *)&unk_2542E4750;
          v240 = v237;
          goto LABEL_257;
        }
      }
      else
      {
        v290 = v877;
        if (!(_DWORD)v868)
        {
          v430 = v161;
          sub_23AA8A05C(v290, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C(v879, (uint64_t *)&unk_2542E6B00);
          if ((_DWORD)v291 == (_DWORD)v285)
            goto LABEL_312;
          goto LABEL_256;
        }
      }
LABEL_255:
      v395 = v161;
      sub_23AA8A05C(v290, (uint64_t *)&unk_2542E6B00);
      sub_23AA8A05C(v879, (uint64_t *)&unk_2542E6B00);
      goto LABEL_256;
    }
    if (sub_23AC37674(8, (uint64_t)v1007))
    {
      v168 = (void *)*((_QWORD *)v889 + 30);
      if (!v168)
        goto LABEL_575;
      *(_QWORD *)&v969[0] = *((_QWORD *)v889 + 30);
      v169 = *((unsigned __int8 *)v889 + 440);
      if (v169 == 4 || !sub_23AC37B08(v169, 1))
        goto LABEL_575;
      v170 = v821;
      sub_23AA8EFC8((uint64_t)v886, v821, &qword_2569E5DD0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v885 + 48))(v170, 1, v888) == 1)
      {
        v171 = v168;
LABEL_161:
        sub_23AA8A05C(v821, &qword_2569E5DD0);
        v306 = v887[5];
        v307 = sub_23AA9F3C4(2, v991);
        v308 = v891;
        v309 = (*(uint64_t (**)(_OWORD *, BOOL))(*(_QWORD *)v306 + 384))(v969, v307);
        v891 = v308;
        if (v308)
        {
          v175 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))&v969[0];
          goto LABEL_163;
        }
        if ((v309 & 1) != 0)
        {

          goto LABEL_427;
        }
        v310 = v891;
        (*(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v887[4] + 392))(&v988);
        v891 = v310;
        v222 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))&v969[0];
        goto LABEL_79;
      }
      sub_23AA8EFC8(v170, v820, &qword_2569E5DD0);
      v219 = (uint64_t *)&unk_2542DDFB0;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 6u:
          v300 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
          v301 = v820;
          v302 = v820 + *(int *)(v300 + 48);
          v303 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v882 + 48);
          if (v303(v820, 1, isa) == 1)
          {
            v304 = v168;
          }
          else
          {
            v344 = *(_QWORD *)(v301 + *(int *)(v300 + 64));
            v345 = v301;
            v346 = (uint64_t)v817;
            sub_23AA8EFC8(v345, (uint64_t)v817, &qword_2542E4770);
            LOBYTE(v344) = sub_23AA9F3D0(2, v344);
            v347 = v872;
            sub_23AA724E8(v346, v872, (uint64_t *)&unk_2542E4760);
            if ((v344 & 1) != 0)
            {
              v348 = v168;
              v349 = sub_23AC37680();

              sub_23AA8A05C(v347, (uint64_t *)&unk_2542E4760);
              if ((v349 & 1) != 0)
              {
                sub_23AA8A05C(v302, &qword_2542E4770);
                sub_23AA8A05C(v820, &qword_2542E4770);
                goto LABEL_161;
              }
            }
            else
            {
              v380 = v168;
              sub_23AA8A05C(v347, (uint64_t *)&unk_2542E4760);
            }
          }
          if (v303(v302, 1, isa) == 1)
          {

            v219 = &qword_2542E4770;
            sub_23AA8A05C(v302, &qword_2542E4770);
LABEL_253:
            sub_23AA8A05C(v820, v219);
            v394 = v890;
            *v890 = 0;
            *((_WORD *)v394 + 4) = -256;
            v283 = &qword_2569E5DD0;
            v284 = v821;
            goto LABEL_294;
          }
          v381 = v302;
          v382 = v873;
          sub_23AA724E8(v381, (uint64_t)v873, (uint64_t *)&unk_2542E4760);
          if ((sub_23AC37680() & 1) == 0)
          {
            sub_23AA8A05C((uint64_t)v382, (uint64_t *)&unk_2542E4760);

            v219 = &qword_2542E4770;
            goto LABEL_253;
          }
          if (sub_23AA9F3C4(2, v991))
          {
            sub_23AA8A05C((uint64_t)v873, (uint64_t *)&unk_2542E4760);
            goto LABEL_233;
          }
          v414 = v891;
          sub_23AFFA534(*v873, (uint64_t)&v983);
          v891 = v414;
          if (v414)
          {
            sub_23AA8A05C((uint64_t)v873, (uint64_t *)&unk_2542E4760);

            sub_23AA8A05C(v820, &qword_2542E4770);
            v283 = &qword_2569E5DD0;
            v284 = v821;
            goto LABEL_294;
          }
          sub_23AA724E8((uint64_t)&v983, (uint64_t)v980, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8((uint64_t)v980, (uint64_t)&v981, (uint64_t *)&unk_2569E63E0);
          if (sub_23AAFC2A4((uint64_t)&v981) == 1)
          {
            sub_23AA8A05C((uint64_t)v873, (uint64_t *)&unk_2542E4760);
            sub_23AA724E8((uint64_t)&v983, (uint64_t)v979, (uint64_t *)&unk_2569E63E0);
            sub_23ADF2D34((uint64_t)v979, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB1930);
            goto LABEL_233;
          }
          sub_23AA724E8((uint64_t)v980, (uint64_t)v979, (uint64_t *)&unk_2569E63E0);
          v509 = sub_23AA9F490(*(uint64_t *)&v979[1]);
          sub_23AA8A05C((uint64_t)v873, (uint64_t *)&unk_2542E4760);
          if (v509)
          {
            sub_23AAFC2BC((uint64_t)v979);
            sub_23ADF2D34((uint64_t)v980, (voidsub_23AEB1930);
            v510 = (void *)*((_QWORD *)&v979[6] + 1);
            v511 = *(void **)&v979[7];
            v512 = BYTE8(v979[7]);
            sub_23AAAE478(*((id *)&v979[6] + 1), *(id *)&v979[7], SBYTE8(v979[7]));
            sub_23AAFC540((uint64_t)v979);
            if (v512 != 2)
            {
              sub_23AAAEE10(v510, v511, v512);
LABEL_233:
              v221 = &qword_2542E4770;
LABEL_76:
              sub_23AA8A05C(v820, v221);
              goto LABEL_161;
            }
            sub_23AAAEE10(v510, v511, 2);
          }
          else
          {
            sub_23ADF2D34((uint64_t)v980, (voidsub_23AEB1930);
          }

          v560 = v890;
          *v890 = 0;
          *((_WORD *)v560 + 4) = -256;
          sub_23AA8A05C(v820, &qword_2542E4770);
          v405 = v821;
LABEL_281:
          sub_23AA8A05C(v405, &qword_2569E5DD0);
          return;
        case 8u:
        case 0x20u:
          v220 = v168;
          v221 = (uint64_t *)&unk_2542DDFB0;
          goto LABEL_76;
        case 0x15u:
          v305 = v168;
          swift_release();
          goto LABEL_161;
        default:
          goto LABEL_253;
      }
    }
    if (sub_23AC37674(16, (uint64_t)v1007))
    {
      v172 = (void *)*((_QWORD *)v889 + 30);
      if (!v172)
        goto LABEL_575;
      v983 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v889 + 30);
      sub_23AA8EFC8((uint64_t)v886, (uint64_t)v124, &qword_2569E5DD0);
      if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v885 + 48))(v124, 1, v888) == 1)
      {
        v173 = v172;
LABEL_26:
        sub_23AA8A05C((uint64_t)v124, &qword_2569E5DD0);
        v174 = v891;
        (*(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v887[5] + 400))(&v983);
        v891 = v174;
        if (v174)
        {
LABEL_27:
          v175 = v983;
LABEL_163:

          return;
        }
        v222 = v983;
LABEL_79:

LABEL_130:
        v267 = v890;
        *v890 = 0;
        *((_WORD *)v267 + 4) = -256;
        return;
      }
      sub_23AA8EFC8((uint64_t)v124, (uint64_t)v121, &qword_2569E5DD0);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        if ((v121[25] & 1) != 0)
        {
          v209 = (void *)*((_QWORD *)v121 + 2);
          v210 = v121[24];
          v211 = v172;
          v212 = sub_23AC37680();
          sub_23AA862DC(v209, v210, 1);
          if ((v212 & 1) != 0)
          {
            sub_23AA862DC(*(id *)v121, v121[8], v121[9]);
            goto LABEL_26;
          }

        }
        sub_23AA862DC(*(id *)v121, v121[8], v121[9]);
      }
      else
      {
        sub_23AA8A05C((uint64_t)v121, (uint64_t *)&unk_2542DDFB0);
      }
      v282 = v890;
      *v890 = 0;
      *((_WORD *)v282 + 4) = -256;
      v283 = &qword_2569E5DD0;
      v284 = (uint64_t)v124;
      goto LABEL_294;
    }
    if (sub_23AC37674(256, (uint64_t)v1007))
    {
      v178 = v887;
      v179 = (*(uint64_t (**)(void))(*v887 + 152))();
      if (sub_23AA9F3D0(256, v179))
        goto LABEL_575;
      v180 = v891;
      v181 = sub_23B00592C((unint64_t)v178);
      v891 = v180;
      if (v180)
        return;
      v182 = v181;
      if (v181 == 70)
        goto LABEL_575;
      v109 = (uint64_t)v878;
      sub_23AA8EFC8((uint64_t)v886, (uint64_t)v878, &qword_2569E5DD0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v885 + 48))(v109, 1, v888) == 1)
      {
LABEL_38:
        sub_23AA8A05C(v109, &qword_2569E5DD0);
        v183 = v887[3];
        v184 = v891;
        v185 = (*(uint64_t (**)(uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t), _QWORD, _QWORD))(*(_QWORD *)v183 + 328))(v182, &v988, *((_QWORD *)v889 + 57), 0);
        v891 = v184;
        if (v184)
          return;
        if ((v185 & 1) == 0)
        {
          v186 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
          v187 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)v183 + 288);
          v188 = v891;
          v189 = v187(&v988, v186, 8512);
          v891 = v188;
          if (v188)
            return;
          if ((v189 & 1) == 0)
          {
            v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60E8);
            v191 = v891;
            v192 = v187(&v988, v190, 0x10000);
            v891 = v191;
            if (v191)
              return;
            if ((v192 & 1) == 0)
            {
              v193 = (void *)*((_QWORD *)v889 + 30);
              if (!v193)
                goto LABEL_544;
              v983 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v889 + 30);
              if (!sub_23AC37A40(v182, 1) && !sub_23AC37A40(v182, 2))
                goto LABEL_544;
              v194 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
              v195 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)v183 + 280);
              v196 = v193;
              v197 = v891;
              v198 = v195(&v983, v194, 8512);
              v891 = v197;
              if (v197)
              {

                return;
              }
              v654 = v198;

              if ((v654 & 1) == 0)
              {
LABEL_544:
                if (!sub_23AC37A40(v182, 12))
                  goto LABEL_575;
                v655 = v891;
                v656 = v187(&v988, v186, 8512);
                v891 = v655;
                if (v655)
                  return;
                if ((v656 & 1) == 0)
                  goto LABEL_575;
              }
            }
          }
        }
        goto LABEL_427;
      }
      sub_23AA8EFC8(v109, (uint64_t)v116, &qword_2569E5DD0);
      v324 = swift_getEnumCaseMultiPayload();
      if (v324 == 13)
      {
        v383 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v116;
        v384 = v116[8];
        if ((v116[9] & 1) != 0)
        {
          sub_23AA862DC(v383, v384, 1);
          v109 = (uint64_t)v878;
        }
        else
        {
          v401 = v116[10];
          if ((_DWORD)v868)
          {
            if ((_DWORD)v868 == 1)
            {
              v109 = (uint64_t)v878;
              if ((_DWORD)v384 != 1 || v874 != v383)
                goto LABEL_419;
            }
            else if (v874)
            {
              v109 = (uint64_t)v878;
              if ((_DWORD)v384 != 2 || v383 != (uint64_t (*)(uint64_t, uint64_t, uint64_t))1)
                goto LABEL_419;
            }
            else
            {
              v109 = (uint64_t)v878;
              if ((_DWORD)v384 != 2 || v383)
                goto LABEL_419;
            }
          }
          else
          {
            v109 = (uint64_t)v878;
            if (v116[8] || (_DWORD)v874 != (_DWORD)v383)
              goto LABEL_419;
          }
          if (sub_23AC37A40(v182, v116[10]) || v401 == 3)
            goto LABEL_38;
        }
      }
      else if (v324 == 21)
      {
        if ((*(_QWORD *)v116 & 0x8000000000000000) != 0)
        {
          swift_release();
          v109 = (uint64_t)v878;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60E8);
          v325 = swift_dynamicCastClass();
          swift_release();
          v109 = (uint64_t)v878;
          if (v325)
            goto LABEL_38;
        }
      }
      else
      {
        sub_23AA8A05C((uint64_t)v116, (uint64_t *)&unk_2542DDFB0);
        v109 = (uint64_t)v878;
      }
LABEL_419:
      v553 = v890;
      *v890 = 0;
      *((_WORD *)v553 + 4) = -256;
      v283 = &qword_2569E5DD0;
      v284 = v109;
      goto LABEL_294;
    }
    if (sub_23AC37674(0x40000, (uint64_t)v1007))
    {
      sub_23ADF1BC0(v999, &v1000);
      sub_23ADF1BC0(&v1000, &v1005);
      if (v1006 || !sub_23AA9F3D0(256, v1005.n128_i64[0]))
        goto LABEL_575;
      v199 = v874;
      v200 = v891;
      v201 = sub_23B00592C((unint64_t)v887);
      v891 = v200;
      if (v200)
        return;
      v202 = v201;
      if (v201 == 70)
        goto LABEL_575;
      v177 = v869;
      sub_23AA8EFC8((uint64_t)v886, v869, &qword_2569E5DD0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v885 + 48))(v177, 1, v888) == 1)
        goto LABEL_55;
      v397 = v177;
      v398 = v863;
      sub_23AA8EFC8(v397, (uint64_t)v863, &qword_2569E5DD0);
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        v399 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*v398;
        v400 = *((unsigned __int8 *)v398 + 8);
        if ((*((_BYTE *)v398 + 9) & 1) == 0)
          goto LABEL_381;
        sub_23AA862DC(v399, *((unsigned __int8 *)v398 + 8), 1);
        v177 = v869;
      }
      else
      {
        sub_23AA8A05C((uint64_t)v398, (uint64_t *)&unk_2542DDFB0);
        v177 = v869;
      }
      goto LABEL_157;
    }
    if (sub_23AC37674(512, (uint64_t)v1007))
    {
      sub_23AA8EFC8((uint64_t)v886, v109, &qword_2569E5DD0);
      v213 = *(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v885 + 48);
      if (v213(v109, 1, v888) != 1)
      {
        sub_23AA8EFC8(v109, (uint64_t)v106, &qword_2569E5DD0);
        v214 = swift_getEnumCaseMultiPayload();
        if (v214 == 18)
        {

        }
        else
        {
          if (v214 != 22)
          {
            sub_23AA8A05C((uint64_t)v106, (uint64_t *)&unk_2542DDFB0);
            goto LABEL_419;
          }
          if (!sub_23AC37E20(*(unsigned __int8 *)(v887[4] + 32), *(unsigned __int8 *)v106))
            goto LABEL_419;
        }
      }
      sub_23AA8A05C(v109, &qword_2569E5DD0);
      v326 = v887[4];
      v327 = v891;
      (*(void (**)(uint64_t (**__return_ptr)(uint64_t, uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v326 + 280))(&v983, &v988);
      v891 = v327;
      if (v327)
        return;
      if (v984 == 255)
        goto LABEL_575;
      *(_QWORD *)&v969[0] = v983;
      BYTE8(v969[0]) = v984;
      v328 = v891;
      sub_23AFFA330((uint64_t)v983, v984, &v983);
      v891 = v328;
      sub_23AA724E8((uint64_t)&v983, (uint64_t)v980, qword_2542E6E20);
      sub_23AA724E8((uint64_t)v980, (uint64_t)&v981, qword_2542E6E20);
      if (sub_23AAFC2A4((uint64_t)&v981) == 1)
        goto LABEL_575;
      sub_23AA724E8((uint64_t)v980, (uint64_t)v979, qword_2542E6E20);
      memcpy(v1002, v979, sizeof(v1002));
      if (v213((uint64_t)v886, 1, v888) != 1)
      {
        v329 = sub_23AA9F890();
        if (!v329)
          goto LABEL_189;
        v330 = *(_QWORD *)&v979[1];
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E22A8);
        v331 = swift_allocObject();
        v332 = sub_23B181814(v331, 2);
        *v333 = xmmword_23B1CE650;
        v334 = nullsub_1(v332);
        v335 = sub_23AFD7BC8(v334);
        sub_23ADF2D34((uint64_t)v980, (voidsub_23AA88348);
        swift_bridgeObjectRelease();
        LOBYTE(v330) = sub_23AA9F570(v335, v330);
        sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
        if ((v330 & 1) != 0)
        {
LABEL_189:
          v336 = v891;
          v337 = (*(uint64_t (**)(_OWORD *))(*(_QWORD *)v326 + 440))(v969);
          v891 = v336;
          if (!v336)
          {
            v964 = v988;
            LOBYTE(v965) = v989;
            if ((v337 & 1) != 0)
              goto LABEL_425;
            v338 = *(uint64_t (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v326 + 464);
            sub_23ACFC940((uint64_t)v979);
            v339 = v891;
            v340 = v338(&v964);
            v891 = v339;
            if (v339)
            {
              sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
              v341 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v980;
LABEL_410:
              sub_23ADF2D34((uint64_t)v341, (voidsub_23AAAEC3C);
              return;
            }
            v611 = v340;
            sub_23ADF2D34((uint64_t)v980, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
            if ((v329 & v611 & 1) != 0)
              goto LABEL_425;
            v612 = v887[3];
            *(_QWORD *)&v941[0] = sub_23ADF6F7C();
            BYTE8(v941[0]) = v613;
            v614 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE408);
            v615 = sub_23AAEC8DC();
            v616 = v891;
            v617 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)v612 + 288))(v941, v614, v615);
            v891 = v616;
            if (!v616)
            {
              v618 = v617;
              sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
              if ((v618 & 1) == 0)
                goto LABEL_575;
              goto LABEL_427;
            }
          }
LABEL_306:
          v341 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v980;
          goto LABEL_410;
        }
      }
      goto LABEL_425;
    }
    if (sub_23AC37674(1024, (uint64_t)v1007))
    {
      v223 = v819;
      sub_23AA8EFC8((uint64_t)v886, v819, &qword_2569E5DD0);
      v224 = *(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v885 + 48);
      if (v224(v223, 1, v888) == 1)
        goto LABEL_82;
      sub_23AA8EFC8(v223, v818, &qword_2569E5DD0);
      v311 = (uint64_t *)&unk_2542DDFB0;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 5u:
          v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
          v403 = v818 + *(int *)(v406 + 48);
          if ((*(unsigned int (**)(void))(v881 + 48))() == 1)
          {
            v311 = (uint64_t *)&unk_2542E4750;
LABEL_284:
            sub_23AA8A05C(v403, v311);
LABEL_285:
            sub_23AA8A05C(v818, v311);
            v223 = v819;
            goto LABEL_286;
          }
          v456 = v818;
          v465 = *(_QWORD *)(v818 + *(int *)(v406 + 64));
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
          v466 = swift_allocObject();
          v467 = sub_23B1A1F64(v466, 2);
          *v468 = xmmword_23B1CE640;
          v469 = nullsub_1(v467);
          v470 = sub_23AFD7BC8(v469);
          swift_bridgeObjectRelease();
          v463 = sub_23AA9F56C(v470, v465);
          v464 = (uint64_t *)&unk_2542E4750;
          break;
        case 6u:
          v402 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
          v403 = v818 + *(int *)(v402 + 48);
          if ((*(unsigned int (**)(void))(v882 + 48))() == 1)
          {
            v311 = &qword_2542E4770;
            goto LABEL_284;
          }
          v456 = v818;
          v457 = *(_QWORD *)(v818 + *(int *)(v402 + 64));
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
          v458 = swift_allocObject();
          v459 = sub_23B1A1F64(v458, 2);
          *v460 = xmmword_23B1CE640;
          v461 = nullsub_1(v459);
          v462 = sub_23AFD7BC8(v461);
          swift_bridgeObjectRelease();
          v463 = sub_23AA9F56C(v462, v457);
          v464 = &qword_2542E4770;
          break;
        case 8u:
        case 0x21u:
          sub_23AA8A05C(v818, (uint64_t *)&unk_2542DDFB0);
          v223 = v819;
          goto LABEL_82;
        case 0xCu:
          v408 = v818;

          sub_23AA862DC(*(id *)v408, *(unsigned __int8 *)(v408 + 8), *(_BYTE *)(v408 + 9));
          v223 = v819;
          goto LABEL_82;
        case 0x14u:
        case 0x15u:
          swift_release();
          v223 = v819;
          goto LABEL_82;
        case 0x26u:
          v404 = v890;
          *v890 = 0;
          *((_WORD *)v404 + 4) = -256;
          sub_23AA8A05C(v818, (uint64_t *)&unk_2542DDFB0);
          v405 = v819;
          goto LABEL_281;
        default:
          goto LABEL_285;
      }
      sub_23AA8A05C(v456, v464);
      sub_23AA8A05C(v403, v464);
      v223 = v819;
      if ((v463 & 1) == 0)
      {
LABEL_82:
        sub_23AA8A05C(v223, &qword_2569E5DD0);
        v225 = v887[4];
        v226 = sub_23AAED140();
        v227 = (uint64_t)v876;
        v228 = v891;
        (*(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), _QWORD))(*(_QWORD *)v225 + 240))(&v988, v226 & 1);
        v891 = v228;
        if (v228)
          return;
        v229 = *(unsigned int (**)(void))(v881 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v229)(v227, 1, v880) == 1)
        {
          v230 = (uint64_t *)&unk_2542E4750;
          v231 = v227;
          goto LABEL_85;
        }
        v375 = v870;
        sub_23AA724E8(v227, v870, (uint64_t *)&unk_2542E6B00);
        v376 = (uint64_t (*)(uint64_t, uint64_t))v887[2];
        v377 = *(_QWORD *)(v375 + 16);
        v378 = *(unsigned __int8 *)(v375 + 24);
        v379 = v891;
        sub_23AFFA330(v377, *(_BYTE *)(v375 + 24), &v983);
        v891 = v379;
        if (v379)
        {
          v283 = (uint64_t *)&unk_2542E6B00;
          v284 = v375;
          goto LABEL_294;
        }
        sub_23AA724E8((uint64_t)&v983, (uint64_t)v980, qword_2542E6E20);
        sub_23AA724E8((uint64_t)v980, (uint64_t)&v981, qword_2542E6E20);
        if (sub_23AAFC2A4((uint64_t)&v981) == 1)
        {
          sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
          sub_23AA724E8((uint64_t)&v983, (uint64_t)v979, qword_2542E6E20);
          sub_23ADF2D34((uint64_t)v979, (voidsub_23AAAEC3C);
          goto LABEL_575;
        }
        sub_23AA724E8((uint64_t)v980, (uint64_t)v979, qword_2542E6E20);
        memcpy(v1004, v979, sizeof(v1004));
        v1007 = *(NSObject **)&v979[15];
        if (!*(_QWORD *)&v979[15])
          goto LABEL_507;
        v884 = v887[5];
        if (sub_23AEB54F4() && BYTE8(v979[16]) != 3 && sub_23AA9F51C(SBYTE8(v979[16]), 0))
          goto LABEL_507;
        v451 = v814;
        sub_23AA8EFC8((uint64_t)v886, v814, &qword_2569E5DD0);
        if (v224(v451, 1, v888) == 1)
        {
          v452 = v1007;
LABEL_344:
          sub_23AA8A05C(v814, &qword_2569E5DD0);
          v453 = v891;
          v454 = sub_23B00CD38((uint64_t)&v977, v889, v870, (uint64_t)v1004, (uint64_t)v887);
          *(_QWORD *)&v885 = v455;
          v891 = v453;
          if (v453)
            goto LABEL_345;
          if ((v454 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_504;
          }
          LODWORD(v882) = v978;
          if (HIBYTE(v978) <= 0xFEu)
          {
            v631 = v977;

            swift_bridgeObjectRelease();
            sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
            sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
            v632 = v890;
            *v890 = v631;
            *((_WORD *)v632 + 4) = v882;
            return;
          }
          if (!(_QWORD)v885)
            goto LABEL_506;
          if (!*(_QWORD *)(v885 + 16))
          {
            swift_bridgeObjectRelease();
            goto LABEL_612;
          }
          isa = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v889 + 30);
          swift_retain();
          v563 = sub_23ACDBBE8((void (*)(id *))v969, 0, v885);
          v565 = *v564;
          ((void (*)(_OWORD *, _QWORD))v563)(v969, 0);
          v566 = v868 == 2;
          v567 = v874 == (uint64_t (*)(uint64_t, uint64_t, uint64_t))1 && v868 == 2;
          LODWORD(v880) = v567;
          if (v874)
            v566 = 0;
          LODWORD(v879) = v566;
          v568 = 1;
          while (1)
          {
            v976 = v565;
            if (isa)
            {
              v569 = v565;
              v570 = isa;
              v571 = sub_23AC37680();

              if ((v571 & 1) != 0)
              {
                swift_bridgeObjectRelease();

LABEL_611:
                swift_release();
LABEL_612:
                v609 = v977;
                v610 = v882;
                goto LABEL_505;
              }
            }
            v572 = v891;
            sub_23AFFA534(v565, (uint64_t)v969);
            v891 = v572;
            if (v572)
            {
              swift_bridgeObjectRelease();

              swift_release();
              goto LABEL_705;
            }
            sub_23AA724E8((uint64_t)v969, (uint64_t)v941, (uint64_t *)&unk_2569E63E0);
            sub_23AA724E8((uint64_t)v941, (uint64_t)&v964, (uint64_t *)&unk_2569E63E0);
            if (sub_23AAFC2A4((uint64_t)&v964) == 1)
              goto LABEL_462;
            sub_23AA724E8((uint64_t)v941, (uint64_t)v940, (uint64_t *)&unk_2569E63E0);
            memcpy(v1003, v940, sizeof(v1003));
            v573 = v940[13];
            if (LOBYTE(v940[13]) == 255)
            {
              sub_23ADF2D34((uint64_t)v941, (voidsub_23AEB1930);
LABEL_462:

              goto LABEL_479;
            }
            v574 = *((_QWORD *)&v940[12] + 1);
            v938 = (id)*((_QWORD *)&v940[12] + 1);
            v939 = v940[13];
            v575 = v811;
            sub_23AA8EFC8((uint64_t)v886, (uint64_t)v811, &qword_2569E5DD0);
            if (v224((uint64_t)v575, 1, v888) == 1)
              break;
            if (swift_getEnumCaseMultiPayload() != 21)
            {
              v576 = v811;
              v577 = (uint64_t *)&unk_2542DDFB0;
              goto LABEL_475;
            }
            v881 = (unint64_t)*v811;
            if ((v881 & 0x8000000000000000) != 0)
              goto LABEL_494;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5568);
            v578 = swift_dynamicCastClass();
            if (!v578 || *(_BYTE *)(v578 + 104) != 3)
              goto LABEL_494;
            v937 = *(id *)(v578 + 88);
            v579 = v937;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
            if ((swift_dynamicCast() & 1) != 0)
            {
              nullsub_1(&v895);
              sub_23AA724E8((uint64_t)&v895, (uint64_t)&v892, (uint64_t *)&unk_2542E0950);
              sub_23AA724E8((uint64_t)&v892, (uint64_t)v894, (uint64_t *)&unk_2542E0950);
              if (sub_23AC050A4((uint64_t)v894) == 1)
              {
                v580 = nullsub_1(&v895);
                swift_bridgeObjectRelease();
                sub_23AB22AE4(*(_QWORD *)(v580 + 48), *(_QWORD *)(v580 + 56));

                v878 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v580;
                v581 = *(unsigned __int8 *)(v580 + 8);
                if (v581)
                {
                  if (v581 != 1)
                  {
                    if (v878)
                    {
                      if ((v880 & 1) != 0)
                        goto LABEL_493;
                    }
                    else if ((v879 & 1) != 0)
                    {
                      goto LABEL_493;
                    }
LABEL_494:
                    swift_release();
                    goto LABEL_476;
                  }
                  if ((_DWORD)v868 != 1 || v878 != v874)
                    goto LABEL_494;
                }
                else if ((_DWORD)v868 || (_DWORD)v878 != (_DWORD)v874)
                {
                  goto LABEL_494;
                }
LABEL_493:
                if ((sub_23AC37680() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  sub_23AF9CAE0();
                  v935 = v878;
                  LOBYTE(v936) = v581;
                  v796 = swift_allocObject();
                  sub_23AA9F454((uint64_t *)&v935, v796 + 16);
                  v797 = swift_allocObject();
                  *(_QWORD *)(v797 + 16) = sub_23AC3E114;
                  *(_QWORD *)(v797 + 24) = v796;
                  v798 = sub_23B1C5E40();
                  v799 = sub_23B1C6AB8();
                  v109 = swift_allocObject();
                  *(_BYTE *)(v109 + 16) = 32;
                  v800 = swift_allocObject();
                  *(_BYTE *)(v800 + 16) = 8;
                  v801 = swift_allocObject();
                  *(_QWORD *)(v801 + 16) = sub_23B06B134;
                  *(_QWORD *)(v801 + 24) = v797;
                  v802 = swift_allocObject();
                  *(_QWORD *)(v802 + 16) = sub_23AB33690;
                  *(_QWORD *)(v802 + 24) = v801;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                  v803 = swift_allocObject();
                  sub_23B1A1F64(v803, 3);
                  *v804 = sub_23AB336B0;
                  v804[1] = v109;
                  v804[2] = sub_23AB336B0;
                  v804[3] = v800;
                  v804[4] = sub_23AB336AC;
                  v804[5] = v802;
                  swift_retain();
                  swift_retain();
                  swift_retain();
                  swift_bridgeObjectRelease();
                  LODWORD(v889) = v799;
                  if (!os_log_type_enabled(v798, (os_log_type_t)v799))
                  {
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();

                    swift_release();
                    (*(void (**)(char *, uint64_t))(v854 + 8))(v830, v855);
                    goto LABEL_724;
                  }
                  v805 = (uint8_t *)sub_23AFF5C30();
                  v806 = swift_slowAlloc();
                  v933 = 0;
                  v932 = v806;
                  *(_WORD *)v805 = 258;
                  v934 = v805 + 2;
                  v935 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                  v936 = v109;
                  v807 = v891;
                  sub_23AFF5C54(&v935, (uint64_t)&v934, (uint64_t)&v933, (uint64_t)&v932);
                  v124 = v807;
                  if (!v807)
                  {
                    swift_release();
                    v935 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                    v936 = v800;
                    sub_23AFF5C54(&v935, (uint64_t)&v934, (uint64_t)&v933, (uint64_t)&v932);
                    swift_release();
                    v935 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
                    v936 = v802;
                    sub_23AFF5C54(&v935, (uint64_t)&v934, (uint64_t)&v933, (uint64_t)&v932);
                    v891 = 0;
                    swift_release();
                    _os_log_impl(&dword_23AA66000, v798, (os_log_type_t)v889, "♻️  breaking move-back vs creation cycle by disabling path-matching condition for propagation of %s", v805, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x23B8614BC](v806, -1, -1);
                    sub_23AFF5C38();
                  }
                  goto LABEL_728;
                }
                goto LABEL_494;
              }
              swift_release();
              sub_23AA724E8((uint64_t)&v895, (uint64_t)&v935, (uint64_t *)&unk_2542E0950);
              sub_23AEB3CD8((uint64_t)&v935, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AC04FC4);
            }
            else
            {
              sub_23B057EF4((uint64_t)&v892);
              sub_23AA724E8((uint64_t)&v892, (uint64_t)&v895, &qword_2569E6170);
              swift_release();
              sub_23AA724E8((uint64_t)&v895, (uint64_t)v894, &qword_2569E6170);
              sub_23AEB3CD8((uint64_t)v894, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AEB15BC);
            }
LABEL_476:
            v582 = v891;
            v583 = sub_23B01E100((uint64_t)v1003, v887);
            v891 = v582;
            if (v582)
              goto LABEL_704;
            v584 = v583;
            if (!sub_23AA9F490(v583))
            {
              v696 = sub_23AFA7BFC();
              if (sub_23AC37674(v584, *v696))
              {
                if (BYTE8(v940[22]) || !sub_23AA9F3D0(8, *((uint64_t *)&v940[21] + 1)))
                  goto LABEL_713;
                if (!isa)
                  goto LABEL_701;
                *(_QWORD *)&v894[0] = isa;
                v697 = *(uint64_t (**)(_OWORD *, id *))(*(_QWORD *)v884 + 536);
                v698 = isa;
                v699 = v891;
                v700 = v697(v894, &v976);
                v891 = v699;
                if (!v699)
                {
                  if ((v700 & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    sub_23AF9CAE0();
                    v895 = v988;
                    LOBYTE(v896) = v989;
                    v701 = swift_allocObject();
                    sub_23AA9F454((uint64_t *)&v895, v701 + 16);
                    v702 = swift_allocObject();
                    *(_QWORD *)(v702 + 16) = sub_23B06B294;
                    *(_QWORD *)(v702 + 24) = v701;
                    v703 = sub_23B1C5E40();
                    v704 = sub_23B1C6AB8();
                    v109 = swift_allocObject();
                    *(_BYTE *)(v109 + 16) = 32;
                    v705 = swift_allocObject();
                    *(_BYTE *)(v705 + 16) = 8;
                    v706 = swift_allocObject();
                    *(_QWORD *)(v706 + 16) = sub_23B06B134;
                    *(_QWORD *)(v706 + 24) = v702;
                    v707 = swift_allocObject();
                    *(_QWORD *)(v707 + 16) = sub_23AB33690;
                    *(_QWORD *)(v707 + 24) = v706;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                    v708 = swift_allocObject();
                    sub_23B1A1F64(v708, 3);
                    *v709 = sub_23AB336B0;
                    v709[1] = v109;
                    v709[2] = sub_23AB336B0;
                    v709[3] = v705;
                    v709[4] = sub_23AB336AC;
                    v709[5] = v707;
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_bridgeObjectRelease();
                    LODWORD(v889) = v704;
                    if (os_log_type_enabled(v703, (os_log_type_t)v704))
                    {
                      v710 = sub_23AFF5C30();
                      v711 = (void *)swift_slowAlloc();
                      v935 = 0;
                      v937 = v711;
                      *(_WORD *)v710 = 258;
                      v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v710 + 2);
                      v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                      v896 = (char *)v109;
                      v712 = v891;
                      sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v937);
                      v124 = v712;
                      if (!v712)
                      {
                        swift_release();
                        v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                        v896 = (char *)v705;
                        sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v937);
                        swift_release();
                        v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
                        v896 = (char *)v707;
                        sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v937);
                        v891 = 0;
                        swift_release();
                        _os_log_impl(&dword_23AA66000, v703, (os_log_type_t)v889, "♻️  breaking replacing a parent cycle by disabling path-matching condition for propagation of %s", (uint8_t *)v710, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x23B8614BC](v711, -1, -1);
                        sub_23AFF5C38();
                      }
                      goto LABEL_728;
                    }
                    swift_release();
                    swift_release();
                    swift_release();

                    swift_release();
                    (*(void (**)(char *, uint64_t))(v854 + 8))(v831, v855);
LABEL_721:

LABEL_724:
                    sub_23ADF2D34((uint64_t)v941, (voidsub_23AEB1930);

LABEL_504:
                    v609 = v977;
                    v610 = v978;
LABEL_505:
                    sub_23ADF1CFC(v609, v610);
LABEL_506:

LABEL_507:
                    sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
                    v230 = (uint64_t *)&unk_2542E6B00;
                    v231 = v870;
LABEL_85:
                    sub_23AA8A05C(v231, v230);
LABEL_575:
                    v678 = v890;
                    *v890 = 0;
                    *((_WORD *)v678 + 4) = -256;
                    return;
                  }

LABEL_701:
                  if (*(_QWORD *)&v940[0])
                  {
                    *(_QWORD *)&v894[0] = *(_QWORD *)&v940[0];
                    v775 = *(uint64_t (**)(_OWORD *, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v884 + 560);
                    v698 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*(id *)&v940[0];
                    v776 = v891;
                    v777 = v775(v894, &v988);
                    v891 = v776;
                    if (v776)
                      goto LABEL_703;
                    if ((v777 & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      sub_23AF9CAE0();
                      v895 = v988;
                      LOBYTE(v896) = v989;
                      v779 = swift_allocObject();
                      sub_23AA9F454((uint64_t *)&v895, v779 + 16);
                      v780 = swift_allocObject();
                      *(_QWORD *)(v780 + 16) = sub_23B06B294;
                      *(_QWORD *)(v780 + 24) = v779;
                      v781 = sub_23B1C5E40();
                      v782 = sub_23B1C6AB8();
                      v109 = swift_allocObject();
                      *(_BYTE *)(v109 + 16) = 32;
                      v783 = swift_allocObject();
                      *(_BYTE *)(v783 + 16) = 8;
                      v784 = swift_allocObject();
                      *(_QWORD *)(v784 + 16) = sub_23B06B134;
                      *(_QWORD *)(v784 + 24) = v780;
                      v785 = swift_allocObject();
                      *(_QWORD *)(v785 + 16) = sub_23AB33690;
                      *(_QWORD *)(v785 + 24) = v784;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                      v786 = swift_allocObject();
                      sub_23B1A1F64(v786, 3);
                      *v787 = sub_23AB336B0;
                      v787[1] = v109;
                      v787[2] = sub_23AB336B0;
                      v787[3] = v783;
                      v787[4] = sub_23AB336AC;
                      v787[5] = v785;
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_bridgeObjectRelease();
                      LODWORD(v889) = v782;
                      if (!os_log_type_enabled(v781, (os_log_type_t)v782))
                      {
                        swift_release();
                        swift_release();
                        swift_release();

                        swift_release();
                        (*(void (**)(char *, uint64_t))(v854 + 8))(v833, v855);
                        goto LABEL_721;
                      }
                      v788 = sub_23AFF5C30();
                      v789 = (void *)swift_slowAlloc();
                      v935 = 0;
                      v937 = v789;
                      *(_WORD *)v788 = 258;
                      v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v788 + 2);
                      v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                      v896 = (char *)v109;
                      v790 = v891;
                      sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v937);
                      v124 = v790;
                      if (!v790)
                      {
                        swift_release();
                        v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                        v896 = (char *)v783;
                        sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v937);
                        swift_release();
                        v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
                        v896 = (char *)v785;
                        sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v937);
                        v891 = 0;
                        swift_release();
                        _os_log_impl(&dword_23AA66000, v781, (os_log_type_t)v889, "♻️  breaking reparent-to-new cycle by disabling path-matching condition for propagation of %s", (uint8_t *)v788, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x23B8614BC](v789, -1, -1);
                        sub_23AFF5C38();
                      }
                      goto LABEL_728;
                    }

LABEL_713:
                    if (*(_QWORD *)&v940[0])
                    {
                      v791 = *(id *)&v940[0];
                      swift_release();
                      sub_23ADF2D34((uint64_t)v941, (voidsub_23AEB1930);
                      v792 = v976;
                      swift_bridgeObjectRelease();

                      sub_23ADF1CFC(v977, v882);
                      sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
                      sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
                      v793 = v890;
                      *v890 = v791;
                      *((_BYTE *)v793 + 9) = 1;
                      return;
                    }
                  }
                  swift_release();
                  sub_23ADF2D34((uint64_t)v941, (voidsub_23AEB1930);
                  v794 = v976;
                  swift_bridgeObjectRelease();

                  sub_23ADF1CFC(v977, v882);
                  sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
                  sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
                  v795 = v890;
                  *v890 = 0;
                  *((_WORD *)v795 + 4) = -256;
                  return;
                }
LABEL_703:

LABEL_704:
                swift_release();
                sub_23ADF2D34((uint64_t)v941, (voidsub_23AEB1930);
                v778 = v976;
                swift_bridgeObjectRelease();

LABEL_705:
                sub_23ADF1CFC(v977, v882);
LABEL_345:

                sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
                v283 = (uint64_t *)&unk_2542E6B00;
                v284 = v870;
LABEL_294:
                sub_23AA8A05C(v284, v283);
                return;
              }
              if (!sub_23AA9F3D0(2, v584))
                goto LABEL_671;
              if (BYTE8(v940[27]) == 4)
                goto LABEL_671;
              if (!sub_23AC37B08(SBYTE8(v940[27]), 1))
                goto LABEL_671;
              v716 = *((unsigned __int8 *)v889 + 440);
              if (v716 == 4 || !sub_23AC37B08(v716, 1))
                goto LABEL_671;
              v895 = v874;
              LOBYTE(v896) = v868;
              v717 = v891;
              v718 = (*(uint64_t (**)(id *, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v225 + 536))(&v938, &v895);
              v891 = v717;
              if (v717)
                goto LABEL_704;
              if ((v718 & 1) == 0)
              {
LABEL_671:
                if (!BYTE8(v940[22]))
                {
                  v741 = *((_QWORD *)&v940[21] + 1);
                  if (sub_23AA9F3D0(2, *((uint64_t *)&v940[21] + 1)))
                  {
                    v895 = v874;
                    LOBYTE(v896) = v868;
                    v742 = v891;
                    v743 = (*(uint64_t (**)(id *, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v225 + 536))(&v938, &v895);
                    v891 = v742;
                    if (v742)
                      goto LABEL_704;
                    if ((v743 & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      sub_23AF9CAE0();
                      v895 = v988;
                      LOBYTE(v896) = v989;
                      v744 = swift_allocObject();
                      sub_23AA9F454((uint64_t *)&v895, v744 + 16);
                      v745 = swift_allocObject();
                      *(_QWORD *)(v745 + 16) = sub_23B06B294;
                      *(_QWORD *)(v745 + 24) = v744;
                      v746 = sub_23B1C5E40();
                      v747 = sub_23B1C6AB8();
                      v109 = swift_allocObject();
                      *(_BYTE *)(v109 + 16) = 32;
                      v748 = swift_allocObject();
                      *(_BYTE *)(v748 + 16) = 8;
                      v749 = swift_allocObject();
                      *(_QWORD *)(v749 + 16) = sub_23B06B134;
                      *(_QWORD *)(v749 + 24) = v745;
                      v750 = swift_allocObject();
                      *(_QWORD *)(v750 + 16) = sub_23AB33690;
                      *(_QWORD *)(v750 + 24) = v749;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                      v751 = swift_allocObject();
                      sub_23B1A1F64(v751, 3);
                      *v752 = sub_23AB336B0;
                      v752[1] = v109;
                      v752[2] = sub_23AB336B0;
                      v752[3] = v748;
                      v752[4] = sub_23AB336AC;
                      v752[5] = v750;
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_bridgeObjectRelease();
                      LODWORD(v889) = v747;
                      if (!os_log_type_enabled(v746, (os_log_type_t)v747))
                      {
                        swift_release();
                        swift_release();
                        swift_release();

                        swift_release();
                        (*(void (**)(char *, uint64_t))(v854 + 8))(v834, v855);
                        goto LABEL_724;
                      }
                      v753 = (uint8_t *)sub_23AFF5C30();
                      v754 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
                      v892 = 0;
                      v935 = v754;
                      *(_WORD *)v753 = 258;
                      *(_QWORD *)&v894[0] = v753 + 2;
                      v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                      v896 = (char *)v109;
                      v755 = v891;
                      sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
                      v124 = v755;
                      if (!v755)
                      {
                        swift_release();
                        v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                        v896 = (char *)v748;
                        sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
                        swift_release();
                        v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
                        v896 = (char *)v750;
                        sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
                        v891 = 0;
                        swift_release();
                        _os_log_impl(&dword_23AA66000, v746, (os_log_type_t)v889, "♻️  breaking parent creation cycle by disabling path-matching condition for propagation of %s", v753, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x23B8614BC](v754, -1, -1);
                        sub_23AFF5C38();
                      }
                      goto LABEL_728;
                    }
                  }
                  else if (sub_23AA9F3D0(1024, v741))
                  {
                    v895 = v874;
                    LOBYTE(v896) = v868;
                    v756 = v891;
                    v757 = (*(uint64_t (**)(id *, _QWORD, uint64_t))(*(_QWORD *)v225 + 552))(&v938, &v895, 1);
                    v891 = v756;
                    if (v756)
                      goto LABEL_704;
                    if ((v757 & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      sub_23AF9CAE0();
                      v895 = v988;
                      LOBYTE(v896) = v989;
                      v758 = swift_allocObject();
                      sub_23AA9F454((uint64_t *)&v895, v758 + 16);
                      v759 = swift_allocObject();
                      *(_QWORD *)(v759 + 16) = sub_23B06B294;
                      *(_QWORD *)(v759 + 24) = v758;
                      v760 = sub_23B1C5E40();
                      v761 = sub_23B1C6AB8();
                      v109 = swift_allocObject();
                      *(_BYTE *)(v109 + 16) = 32;
                      v762 = swift_allocObject();
                      *(_BYTE *)(v762 + 16) = 8;
                      v763 = swift_allocObject();
                      *(_QWORD *)(v763 + 16) = sub_23B06B134;
                      *(_QWORD *)(v763 + 24) = v759;
                      v764 = swift_allocObject();
                      *(_QWORD *)(v764 + 16) = sub_23AB33690;
                      *(_QWORD *)(v764 + 24) = v763;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                      v765 = swift_allocObject();
                      sub_23B1A1F64(v765, 3);
                      *v766 = sub_23AB336B0;
                      v766[1] = v109;
                      v766[2] = sub_23AB336B0;
                      v766[3] = v762;
                      v766[4] = sub_23AB336AC;
                      v766[5] = v764;
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      swift_bridgeObjectRelease();
                      LODWORD(v889) = v761;
                      if (!os_log_type_enabled(v760, (os_log_type_t)v761))
                      {
                        swift_release();
                        swift_release();
                        swift_release();

                        swift_release();
                        (*(void (**)(char *, uint64_t))(v854 + 8))(v835, v855);
                        goto LABEL_724;
                      }
                      v767 = (uint8_t *)sub_23AFF5C30();
                      v768 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
                      v892 = 0;
                      v935 = v768;
                      *(_WORD *)v767 = 258;
                      *(_QWORD *)&v894[0] = v767 + 2;
                      v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                      v896 = (char *)v109;
                      v769 = v891;
                      sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
                      v124 = v769;
                      if (!v769)
                      {
                        swift_release();
                        v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                        v896 = (char *)v762;
                        sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
                        swift_release();
                        v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
                        v896 = (char *)v764;
                        sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
                        v891 = 0;
                        swift_release();
                        _os_log_impl(&dword_23AA66000, v760, (os_log_type_t)v889, "♻️  detected move cycle by disabling path-matching condition for propagation of %s", v767, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x23B8614BC](v768, -1, -1);
                        sub_23AFF5C38();
                      }
                      goto LABEL_728;
                    }
                  }
                }
                swift_release();
                sub_23ADF2D34((uint64_t)v941, (voidsub_23AEB1930);
                v733 = v976;
                swift_bridgeObjectRelease();

                sub_23ADF1CFC(v977, v882);
                sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
                sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
                v734 = v890;
                *v890 = v574;
                *((_BYTE *)v734 + 8) = v573;
                *((_BYTE *)v734 + 9) = 0;
                return;
              }
              swift_bridgeObjectRelease();
              sub_23AF9CAE0();
              v895 = v988;
              LOBYTE(v896) = v989;
              v719 = swift_allocObject();
              sub_23AA9F454((uint64_t *)&v895, v719 + 16);
              v720 = swift_allocObject();
              *(_QWORD *)(v720 + 16) = sub_23B06B294;
              *(_QWORD *)(v720 + 24) = v719;
              v721 = sub_23B1C5E40();
              v722 = sub_23B1C6AB8();
              v109 = swift_allocObject();
              *(_BYTE *)(v109 + 16) = 32;
              v723 = swift_allocObject();
              *(_BYTE *)(v723 + 16) = 8;
              v724 = swift_allocObject();
              *(_QWORD *)(v724 + 16) = sub_23B06B134;
              *(_QWORD *)(v724 + 24) = v720;
              v725 = swift_allocObject();
              *(_QWORD *)(v725 + 16) = sub_23AB33690;
              *(_QWORD *)(v725 + 24) = v724;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
              v726 = swift_allocObject();
              sub_23B1A1F64(v726, 3);
              *v727 = sub_23AB336B0;
              v727[1] = v109;
              v727[2] = sub_23AB336B0;
              v727[3] = v723;
              v727[4] = sub_23AB336AC;
              v727[5] = v725;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRelease();
              LODWORD(v889) = v722;
              if (!os_log_type_enabled(v721, (os_log_type_t)v722))
              {
                swift_release();
                swift_release();
                swift_release();

                swift_release();
                (*(void (**)(char *, uint64_t))(v854 + 8))(v832, v855);
                goto LABEL_724;
              }
              v728 = (uint8_t *)sub_23AFF5C30();
              v729 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
              v892 = 0;
              v935 = v729;
              *(_WORD *)v728 = 258;
              *(_QWORD *)&v894[0] = v728 + 2;
              v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
              v896 = (char *)v109;
              v730 = v891;
              sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
              v124 = v730;
              if (!v730)
              {
                swift_release();
                v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                v896 = (char *)v723;
                sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
                swift_release();
                v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
                v896 = (char *)v725;
                sub_23AFF5C54(&v895, (uint64_t)v894, (uint64_t)&v892, (uint64_t)&v935);
                v891 = 0;
                swift_release();
                _os_log_impl(&dword_23AA66000, v721, (os_log_type_t)v889, "♻️  breaking reparent cycle by disabling path-matching condition for propagation of %s", v728, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B8614BC](v729, -1, -1);
                sub_23AFF5C38();
              }
LABEL_728:
              swift_release();
LABEL_729:

              __break(1u);
              swift_release();

              __break(1u);
              v808 = v891;
              swift_release();

              __break(1u);
              JUMPOUT(0x23B01D908);
            }
            sub_23ADF2D34((uint64_t)v941, (voidsub_23AEB1930);

LABEL_479:
            if (v568 == *(_QWORD *)(v885 + 16))
            {
              swift_bridgeObjectRelease();
              goto LABEL_611;
            }
            v585 = sub_23ACDBBE8((void (*)(id *))v969, v568, v885);
            v565 = *v586;
            v587 = (id)((uint64_t (*)(_OWORD *, _QWORD))v585)(v969, 0);
            v507 = __OFADD__(v568++, 1);
            if (v507)
            {
              __break(1u);
              goto LABEL_693;
            }
          }
          v576 = v811;
          v577 = &qword_2569E5DD0;
LABEL_475:
          sub_23AA8A05C((uint64_t)v576, v577);
          goto LABEL_476;
        }
        sub_23AA8EFC8(v814, v812, &qword_2569E5DD0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 5u:
            v637 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
            *(_QWORD *)&v885 = v812 + *(int *)(v637 + 48);
            if (v229() == 1)
            {
              sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
              sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
              v636 = (uint64_t *)&unk_2542E4750;
              goto LABEL_531;
            }
            v676 = v845;
            sub_23AA724E8(v812, v845, (uint64_t *)&unk_2542E6B00);
            v677 = *(_QWORD *)(v676 + 16);
            if (*(_BYTE *)(v676 + 24))
            {
              if (*(_BYTE *)(v676 + 24) == 1)
              {
                if (v378 != 1 || v677 != v377)
                  goto LABEL_626;
LABEL_625:
                v685 = v838;
                sub_23AA8EFC8(v845, v838, (uint64_t *)&unk_2542E6B00);
                v686 = v839;
                sub_23AA8EFC8(v870, v839, (uint64_t *)&unk_2542E6B00);
                v687 = v1007;
                sub_23AA8A05C(v685, (uint64_t *)&unk_2542E6B00);
                sub_23AA8A05C(v686, (uint64_t *)&unk_2542E6B00);
                goto LABEL_627;
              }
              if (v677)
              {
                if (v378 == 2 && v377 == 1)
                  goto LABEL_625;
              }
              else if (v378 == 2 && !v377)
              {
                goto LABEL_625;
              }
            }
            else if (!v378 && (_DWORD)v677 == (_DWORD)v377)
            {
              goto LABEL_625;
            }
LABEL_626:
            v688 = v838;
            sub_23AA8EFC8(v845, v838, (uint64_t *)&unk_2542E6B00);
            v689 = v839;
            sub_23AA8EFC8(v870, v839, (uint64_t *)&unk_2542E6B00);
            v691 = *(_QWORD *)(v688 + 128);
            v690 = *(_QWORD *)(v688 + 136);
            isa = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v689 + 128);
            v882 = *(_QWORD *)(v689 + 136);
            v881 = v1007;
            swift_retain();
            LOBYTE(v690) = sub_23B070090(v691, v690, (uint64_t)isa, v882);
            swift_release();
            sub_23AA8A05C(v688, (uint64_t *)&unk_2542E6B00);
            sub_23AA8A05C(v689, (uint64_t *)&unk_2542E6B00);
            if ((v690 & 1) == 0)
            {
              sub_23AA8A05C(v845, (uint64_t *)&unk_2542E6B00);

              sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
              sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
              v633 = (uint64_t *)&unk_2542E4750;
LABEL_634:
              v634 = v885;
              goto LABEL_635;
            }
LABEL_627:
            if (sub_23AE4F6B4() && !sub_23AA9F890())
            {
              sub_23AA8A05C(v845, (uint64_t *)&unk_2542E6B00);
            }
            else
            {
              v692 = sub_23AA9F890();
              sub_23AA8A05C(v845, (uint64_t *)&unk_2542E6B00);
              if (!v692)
              {
                v693 = *((unsigned __int8 *)v889 + 440);
                if (v693 == 4 || !sub_23AC37B08(v693, 1))
                {

                  sub_23ADF2D34((uint64_t)v980, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
                  sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
                  v694 = v890;
                  *v890 = 0;
                  *((_WORD *)v694 + 4) = -256;
                  sub_23AA8A05C(v885, (uint64_t *)&unk_2542E4750);
LABEL_636:
                  v283 = &qword_2569E5DD0;
                  v284 = v814;
                  goto LABEL_294;
                }
              }
            }
            v675 = (uint64_t *)&unk_2542E4750;
LABEL_639:
            sub_23AA8A05C(v885, v675);
            goto LABEL_344;
          case 6u:
            v635 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
            *(_QWORD *)&v885 = v812 + *(int *)(v635 + 48);
            if ((*(unsigned int (**)(void))(v882 + 48))() == 1)
            {
              sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
              sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
              v636 = &qword_2542E4770;
LABEL_531:
              sub_23AA8A05C(v885, v636);
              v634 = v812;
              v633 = v636;
LABEL_635:
              sub_23AA8A05C(v634, v633);
              v695 = v890;
              *v890 = 0;
              *((_WORD *)v695 + 4) = -256;
              goto LABEL_636;
            }
            v666 = v842;
            sub_23AA724E8(v812, v842, (uint64_t *)&unk_2542E4760);
            v667 = v1007;
            v668 = sub_23AC37680();
            sub_23AA8EFC8(v666, v843, (uint64_t *)&unk_2542E4760);
            sub_23AA8EFC8(v870, v841, (uint64_t *)&unk_2542E6B00);
            if ((v668 & 1) != 0)
            {
              v669 = v843;
              v670 = *(_QWORD *)(v843 + 88);
              v671 = v841;
              v672 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v841 + 128);
              v673 = *(_QWORD *)(v841 + 136);
              *(_QWORD *)&v969[0] = *(_QWORD *)(v843 + 80);
              *((_QWORD *)&v969[0] + 1) = v670;
              v964 = v672;
              v965 = v673;
              sub_23AAA420C();
              v674 = sub_23B1C6D04();
              sub_23AA8A05C(v842, (uint64_t *)&unk_2542E4760);
              sub_23AA8A05C(v669, (uint64_t *)&unk_2542E4760);
              sub_23AA8A05C(v671, (uint64_t *)&unk_2542E6B00);
              if (!v674)
              {
                v675 = &qword_2542E4770;
                goto LABEL_639;
              }
            }
            else
            {
              sub_23AA8A05C(v842, (uint64_t *)&unk_2542E4760);
              sub_23AA8A05C(v843, (uint64_t *)&unk_2542E4760);
              sub_23AA8A05C(v841, (uint64_t *)&unk_2542E6B00);
            }

            sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
            sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
            v633 = &qword_2542E4770;
            goto LABEL_634;
          case 8u:
            v639 = v847;
            sub_23AA724E8(v812, v847, (uint64_t *)&unk_2542E4760);
            v640 = v1007;
            v641 = sub_23AC37680();
            sub_23AA8EFC8(v639, v848, (uint64_t *)&unk_2542E4760);
            sub_23AA8EFC8(v870, v846, (uint64_t *)&unk_2542E6B00);
            if ((v641 & 1) != 0)
            {
              v642 = v848;
              v643 = *(_QWORD *)(v848 + 88);
              v644 = v846;
              v645 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v846 + 128);
              v646 = *(_QWORD *)(v846 + 136);
              *(_QWORD *)&v969[0] = *(_QWORD *)(v848 + 80);
              *((_QWORD *)&v969[0] + 1) = v643;
              v964 = v645;
              v965 = v646;
              sub_23AAA420C();
              v647 = sub_23B1C6D04();
              sub_23AA8A05C(v847, (uint64_t *)&unk_2542E4760);
              sub_23AA8A05C(v642, (uint64_t *)&unk_2542E4760);
              sub_23AA8A05C(v644, (uint64_t *)&unk_2542E6B00);
              if (!v647)
                goto LABEL_344;
            }
            else
            {
              sub_23AA8A05C(v847, (uint64_t *)&unk_2542E4760);
              sub_23AA8A05C(v848, (uint64_t *)&unk_2542E4760);
              sub_23AA8A05C(v846, (uint64_t *)&unk_2542E6B00);
            }

            sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
            v633 = (uint64_t *)&unk_2542E6B00;
            v634 = v870;
            goto LABEL_635;
          case 0xCu:
            v648 = v812;
            v649 = *(void **)(v812 + 16);
            v650 = v1007;

            sub_23AA862DC(*(id *)v648, *(unsigned __int8 *)(v648 + 8), *(_BYTE *)(v648 + 9));
            goto LABEL_344;
          case 0x14u:
          case 0x15u:
            v554 = v1007;
            swift_release();
            goto LABEL_344;
          case 0x21u:
            v638 = v1007;
            sub_23AA8A05C(v812, (uint64_t *)&unk_2542DDFB0);
            goto LABEL_344;
          default:
            sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
            sub_23AA8A05C(v870, (uint64_t *)&unk_2542E6B00);
            v633 = (uint64_t *)&unk_2542DDFB0;
            v634 = v812;
            goto LABEL_635;
        }
      }
LABEL_286:
      v407 = v890;
      *v890 = 0;
      *((_WORD *)v407 + 4) = -256;
      v283 = &qword_2569E5DD0;
      v284 = v223;
      goto LABEL_294;
    }
    v268 = sub_23AC37674(4096, (uint64_t)v1007);
    v269 = v874;
    if (v268)
    {
      v270 = v887;
      sub_23AFEFCA0(sub_23B057DF8, (uint64_t)v887, (void (*)(uint64_t))sub_23AB21B34, 0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 2052);
      v271 = v875;
      sub_23AA8EFC8((uint64_t)v886, v875, &qword_2569E5DD0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v885 + 48))(v271, 1, v888) == 1)
      {
LABEL_133:
        sub_23AA8A05C(v271, &qword_2569E5DD0);
        if ((*(_BYTE *)(v270[5] + 33) & 1) != 0)
          goto LABEL_575;
        v272 = v889;
        if (sub_23AA9F890() && sub_23AA9F3C4(16, *((_QWORD *)v272 + 31)))
          goto LABEL_575;
        v273 = v887[4];
        v274 = sub_23AAED140();
        v275 = (uint64_t)v867;
        v276 = v891;
        (*(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), _QWORD))(*(_QWORD *)v273 + 240))(&v988, v274 & 1);
        v891 = v276;
        if (v276)
          return;
        v277 = v880;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v881 + 48))(v275, 1, v880) == 1)
        {
          sub_23AA8A05C(v275, (uint64_t *)&unk_2542E4750);
        }
        else
        {
          v471 = v857;
          sub_23AA907B0(v275 + *(int *)(v277 + 48), v857, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
          sub_23AA8A05C(v275, (uint64_t *)&unk_2542E6B00);
          v472 = *(_BYTE *)(v471 + v858[21]);
          sub_23AA937BC(v471, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
          if (sub_23AA9F51C(v472, 0))
            goto LABEL_575;
        }
        goto LABEL_427;
      }
      v350 = v871;
      sub_23AA8EFC8(v271, v871, &qword_2569E5DD0);
      if (swift_getEnumCaseMultiPayload() == 25)
      {
        if ((*(_BYTE *)(v350 + 9) & 1) != 0)
        {
          sub_23AA862DC(*(id *)v350, *(unsigned __int8 *)(v350 + 8), 1);
          v270 = v887;
          v271 = v875;
          goto LABEL_133;
        }
      }
      else
      {
        sub_23AA8A05C(v350, (uint64_t *)&unk_2542DDFB0);
      }
      v385 = v890;
      *v890 = 0;
      *((_WORD *)v385 + 4) = -256;
      v283 = &qword_2569E5DD0;
      v284 = v875;
      goto LABEL_294;
    }
    if (sub_23AC37674(0x2000, (uint64_t)v1007))
    {
      v312 = (*(uint64_t (**)(void))(*v887 + 152))();
      if (!sub_23AA9F3D0(128, v312) || sub_23AC37674(*((uint64_t *)&v991 + 1), 0x20000000000))
        goto LABEL_575;
      v313 = v891;
      v314 = sub_23B007C14((uint64_t)v887);
      v891 = v313;
      if (v313)
        return;
      v317 = (unint64_t)v314;
      v318 = v315;
      v319 = v316;
      v320 = v862;
      v321 = v862 + *(int *)(v859 + 48);
      sub_23AA8EFC8((uint64_t)v886, v862, &qword_2569E5DD0);
      *(_QWORD *)v321 = v317;
      *(_QWORD *)(v321 + 8) = v318;
      *(_QWORD *)(v321 + 16) = v319;
      v322 = *(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v885 + 48);
      if (v322(v320, 1, v888) == 1)
        goto LABEL_435;
      sub_23AA8EFC8(v862, (uint64_t)v813, &qword_2569E5DD0);
      if (swift_getEnumCaseMultiPayload() != 27)
      {
        v323 = (uint64_t *)&unk_2542DDFB0;
        goto LABEL_433;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v323 = &qword_2542DDDB0;
LABEL_433:
        v558 = v813;
LABEL_434:
        sub_23AA8A05C((uint64_t)v558, v323);
LABEL_435:
        v559 = v890;
        *v890 = 0;
        *((_WORD *)v559 + 4) = -256;
        v283 = &qword_2569E7DB0;
        v284 = v862;
        goto LABEL_294;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v588 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3190);
          v1007 = ((char *)v813 + v588[12]);
          v889 = *(__int128 **)((char *)&v813->isa + v588[16]);
          v589 = *(Class *)((char *)&v813->isa + v588[20]);
          sub_23AB2277C(v317, v318, v319);

          if (v317 >> 62 || (_BYTE)v317)
          {
            sub_23AB22788(v317, v318, v319);
            goto LABEL_578;
          }
          isa_low = LOBYTE(v813[1].isa);
          isa = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v813->isa;
          v983 = isa;
          LODWORD(v884) = isa_low;
          v984 = isa_low;
          goto LABEL_605;
        case 1u:
          v661 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3198);
          v1007 = ((char *)v813 + v661[12]);
          *(_QWORD *)&v885 = v661[16];
          v662 = (char *)v813 + v661[20];
          v889 = *(__int128 **)((char *)&v813->isa + v661[28]);
          v663 = *(Class *)((char *)&v813->isa + v661[32]);
          sub_23AB2277C(v317, v318, v319);

          if (v317 >> 62 || v317 != 1)
          {
            sub_23AB22788(v317, v318, v319);
            sub_23AAAE4D0(*(_QWORD *)v662, *((_QWORD *)v662 + 1), *((_QWORD *)v662 + 2), *((_QWORD *)v662 + 3), *((_QWORD *)v662 + 4));

LABEL_578:
            v323 = (uint64_t *)&unk_2542E4750;
            v558 = v1007;
            goto LABEL_434;
          }
          v664 = (uint64_t)v813;
          v665 = LOBYTE(v813[1].isa);
          isa = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v813->isa;
          v983 = isa;
          LODWORD(v884) = v665;
          v984 = v665;
          sub_23AAAE4D0(*(_QWORD *)v662, *((_QWORD *)v662 + 1), *((_QWORD *)v662 + 2), *((_QWORD *)v662 + 3), *((_QWORD *)v662 + 4));

LABEL_605:
          sub_23AA8A05C((uint64_t)v1007, (uint64_t *)&unk_2542E4750);
          sub_23AB22788(*(_QWORD *)v321, *(_QWORD *)(v321 + 8), *(void **)(v321 + 16));
          sub_23AA8A05C(v862, &qword_2569E5DD0);
          if ((_DWORD)v884)
          {
            if ((_DWORD)v884 == 1)
            {
              if ((_DWORD)v868 != 1 || isa != v269)
              {
LABEL_655:
                sub_23AB22788(v317, v318, v319);
                goto LABEL_427;
              }
            }
            else if (isa)
            {
              if ((_DWORD)v868 != 2 || v269 != (uint64_t (*)(uint64_t, uint64_t, uint64_t))1)
                goto LABEL_655;
            }
            else if ((_DWORD)v868 != 2 || v269)
            {
              goto LABEL_655;
            }
          }
          else if ((_DWORD)v868 || (_DWORD)isa != (_DWORD)v269)
          {
            goto LABEL_655;
          }
          v713 = v891;
          v714 = (__int128 *)(*(uint64_t (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v887[4] + 296))(&v983);
          v891 = v713;
          if (v713)
          {
            sub_23AB22788(v317, v318, v319);
            return;
          }
          if ((v715 & 1) == 0 && v714 == v889)
          {
            sub_23AB22788(v317, v318, v319);
            goto LABEL_575;
          }
          v731 = v810;
          sub_23AA8EFC8((uint64_t)v886, v810, &qword_2569E5DD0);
          if (v322(v731, 1, v888) == 1)
          {
            sub_23AB22788(v317, v318, v319);
            v732 = &qword_2569E5DD0;
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 27)
            {
              v735 = v827;
              sub_23AA724E8(v810, v827, &qword_2542DDDB0);
              sub_23B1C53E4();
              sub_23AC4507C();
              sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
              v736 = v825;
              v737 = v829;
              sub_23B1C5864();
              v738 = (void *)sub_23B1C5354();
              (*(void (**)(char *, uint64_t))(v828 + 8))(v736, v737);
              (*(void (**)(uint64_t, void *))(*v887 + 480))(v735, v738);

              sub_23AB22788(v317, v318, v319);
              sub_23AA8A05C(v735, &qword_2542DDDB0);
              goto LABEL_427;
            }
            sub_23AB22788(v317, v318, v319);
            v732 = (uint64_t *)&unk_2542DDFB0;
          }
          sub_23AA8A05C(v810, v732);
          goto LABEL_427;
        case 2u:
          v657 = v813[12].isa;
          sub_23AB2277C(v317, v318, v319);

          if (v317 >> 62 || v317 != 2)
          {
            sub_23AB22788(v317, v318, v319);
            v679 = (uint64_t)v813;
            sub_23AAAE4D0((uint64_t)v813[3].isa, (unint64_t)v813[4].isa, (uint64_t)v813[5].isa, (uint64_t)v813[6].isa, (unint64_t)v813[7].isa);

            goto LABEL_435;
          }
          v658 = (uint64_t)v813;
          v659 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v813->isa;
          v660 = LOBYTE(v813[1].isa);
          sub_23AAAE4D0((uint64_t)v813[3].isa, (unint64_t)v813[4].isa, (uint64_t)v813[5].isa, (uint64_t)v813[6].isa, (unint64_t)v813[7].isa);

          sub_23AB22788(v317, v318, v319);
LABEL_559:
          sub_23AA8A05C(v862, &qword_2569E5DD0);
          sub_23AB22788(v317, v318, v319);
          if (v660)
          {
            if (v660 == 1)
            {
              if ((_DWORD)v868 == 1 && v659 == v269)
                goto LABEL_575;
            }
            else if (v659)
            {
              if ((_DWORD)v868 == 2 && v269 == (uint64_t (*)(uint64_t, uint64_t, uint64_t))1)
                goto LABEL_575;
            }
            else if ((_DWORD)v868 == 2 && !v269)
            {
              goto LABEL_575;
            }
          }
          else if (!(_DWORD)v868 && (_DWORD)v659 == (_DWORD)v269)
          {
            goto LABEL_575;
          }
          goto LABEL_427;
        case 4u:
          if ((v317 & 0xC0000000000000FFLL) != 0x17)
            goto LABEL_435;
          goto LABEL_558;
        case 5u:
          if ((v317 & 0xC0000000000000FFLL) != 6)
            goto LABEL_435;
LABEL_558:
          v659 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v813->isa;
          v660 = LOBYTE(v813[1].isa);
          goto LABEL_559;
        default:
          v323 = &qword_2542E1600;
          goto LABEL_433;
      }
    }
    if (sub_23AC37674(0x4000, (uint64_t)v1007))
    {
      v351 = v887;
      v352 = v887[4];
      if (!sub_23AE4F6B4())
        goto LABEL_575;
      v353 = v351[3];
      v354 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6090);
      v355 = sub_23AAEC8DC();
      v356 = v891;
      v357 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)v353 + 288))(&v988, v354, v355);
      v891 = v356;
      if (v356)
        return;
      if ((v357 & 1) != 0)
        goto LABEL_427;
      v358 = v891;
      v359 = (*(uint64_t (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v352 + 312))(&v988);
      v891 = v358;
      if ((v360 & 1) != 0)
        goto LABEL_575;
      if (v359)
        goto LABEL_427;
      v361 = sub_23AAED140();
      v362 = v891;
      (*(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), _QWORD))(*(_QWORD *)v352 + 240))(&v988, v361 & 1);
      v891 = v362;
      if (v362)
        return;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v881 + 48))(v844, 1, v880) == 1)
      {
        v230 = (uint64_t *)&unk_2542E4750;
        v231 = v844;
        goto LABEL_85;
      }
      v680 = v837;
      sub_23AA724E8(v844, v837, (uint64_t *)&unk_2542E6B00);
      v681 = (char *)(v680 + *(int *)(v880 + 48));
      if (!sub_23AA9F51C(v681[v858[21]], 0))
      {
LABEL_601:
        sub_23AA8A05C(v837, (uint64_t *)&unk_2542E6B00);
        goto LABEL_427;
      }
      v682 = sub_23AC37B08(*v681, 1);
      sub_23AA8EFC8(v837, v836, (uint64_t *)&unk_2542E6B00);
      if (v682)
      {
        v683 = *(_BYTE *)(v836 + *(int *)(v880 + 48) + v858[15]);
        sub_23AA8A05C(v836, (uint64_t *)&unk_2542E6B00);
        if ((v683 & 1) == 0)
        {
          if ((v681[v858[16]] & 1) != 0)
            goto LABEL_601;
          v376 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v353 + 352);
          v739 = v891;
          v740 = v376(v837, 1);
          v891 = v739;
          if (v739)
          {
            v283 = (uint64_t *)&unk_2542E6B00;
            v284 = v837;
            goto LABEL_294;
          }
          sub_23AB55A14(v740, (uint64_t)&v983);
          swift_bridgeObjectRelease();
          v587 = v986;
          if (v986 == (id)1)
          {
            sub_23AA8EFC8(v837, v824, (uint64_t *)&unk_2542E6B00);
          }
          else
          {
LABEL_693:
            v770 = v987;

            swift_bridgeObjectRelease();
            sub_23AA862DC(v983, v984, v985);
            v771 = sub_23AA9F51C(v770, 6);
            sub_23AA8EFC8(v837, v824, (uint64_t *)&unk_2542E6B00);
            if (v771)
            {
              v412 = (uint64_t *)&unk_2542E6B00;
              sub_23AA8A05C(v824, (uint64_t *)&unk_2542E6B00);
              v413 = v837;
              goto LABEL_291;
            }
          }
          v772 = v891;
          v773 = v376(v824, 0);
          v891 = v772;
          if (v772)
          {
            sub_23AA8A05C(v824, (uint64_t *)&unk_2542E6B00);
            v284 = v837;
            v283 = (uint64_t *)&unk_2542E6B00;
            goto LABEL_294;
          }
          sub_23AB55A14(v773, (uint64_t)&v983);
          swift_bridgeObjectRelease();
          sub_23AA8A05C(v824, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C(v837, (uint64_t *)&unk_2542E6B00);
          if (v986 == (id)1)
            goto LABEL_575;
          v774 = v987;

          swift_bridgeObjectRelease();
          sub_23AA862DC(v983, v984, v985);
          if (!sub_23AA9F51C(v774, 6))
            goto LABEL_575;
LABEL_427:
          v557 = v890;
          *v890 = 0;
          *((_WORD *)v557 + 4) = -256;
          return;
        }
      }
      else
      {
        sub_23AA8A05C(v836, (uint64_t *)&unk_2542E6B00);
      }
      v230 = (uint64_t *)&unk_2542E6B00;
      v231 = v837;
      goto LABEL_85;
    }
    if (sub_23AC37674(0x8000, (uint64_t)v1007))
    {
      v386 = v887;
      v387 = v887[4];
      if (sub_23AE4F6B4())
      {
        if (BYTE9(v998) != 6 && sub_23AA9F51C(SBYTE9(v998), 0))
          goto LABEL_575;
        if (!sub_23AA9F3C4(16, v991))
        {
          v388 = v891;
          (*(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v387 + 464))(&v988);
          v891 = v388;
          if (!v388)
            goto LABEL_56;
          return;
        }
      }
      else
      {
        v432 = v891;
        v433 = sub_23B00592C((unint64_t)v386);
        v891 = v432;
        if (v432)
          return;
        if (v433 == 70)
          goto LABEL_575;
        switch(v433)
        {
          case 0:
            if ((*(_BYTE *)(v887[5] + 33) & 1) != 0)
              goto LABEL_575;
            v434 = v891;
            (*(void (**)(uint64_t (**__return_ptr)(uint64_t, uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v387 + 280))(&v983, &v988);
            v891 = v434;
            if (v984 != 255)
            {
              v435 = v891;
              sub_23AFFA330((uint64_t)v983, v984, &v983);
              v891 = v435;
              sub_23AA724E8((uint64_t)&v983, (uint64_t)v980, qword_2542E6E20);
              sub_23AA724E8((uint64_t)v980, (uint64_t)&v981, qword_2542E6E20);
              if (sub_23AAFC2A4((uint64_t)&v981) != 1)
              {
                sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
                sub_23AA724E8((uint64_t)v980, (uint64_t)v979, qword_2542E6E20);
                if (BYTE8(v979[16]) != 3 && sub_23AA9F51C(SBYTE8(v979[16]), 0))
                  goto LABEL_575;
              }
            }
            break;
          case 6:
          case 12:
          case 23:
            goto LABEL_575;
          default:
            break;
        }
        v436 = (_BYTE *)v887[5];
        if (v436[33] == 1)
          goto LABEL_575;
        v437 = v891;
        (*(void (**)(uint64_t (**__return_ptr)(uint64_t, uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v387 + 280))(&v981, &v988);
        v891 = v437;
        if (v437)
          return;
        if (v982 == 255)
          goto LABEL_575;
        v983 = v981;
        v984 = v982;
        v438 = v891;
        (*(void (**)(_QWORD *__return_ptr, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v887[2] + 160))(v980, &v983);
        v891 = v438;
        v439 = (void *)v980[0];
        if (!v980[0])
          goto LABEL_575;
        v981 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v980[0];
        v440 = v891;
        v441 = (*(uint64_t (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v436 + 456))(&v981);
        v891 = v440;
        v442 = v441;

        if ((v442 & 1) == 0)
          goto LABEL_575;
      }
    }
    else
    {
      if (!sub_23AC37674(0x80000, (uint64_t)v1007))
      {
        if (sub_23AC37674(0x100000, (uint64_t)v1007))
        {
          v443 = v891;
          v444 = sub_23B00592C((unint64_t)v887);
          v891 = v443;
          if (v443)
            return;
          v446 = v444;
          if (v444 != 70)
          {
            switch(v444)
            {
              case 0:
              case 1:
              case 2:
                v447 = v445;
                v983 = 0;
                v448 = sub_23AC37A40(v444, 1);
                if ((!v448 || !sub_23AA9F3D0(2, v447)) && !sub_23AC37A40(v446, 0))
                  goto LABEL_519;
                v449 = v891;
                v450 = sub_23B01F3F0((uint64_t)v887, (uint64_t)v269, v868, (id *)&v983);
                v891 = v449;
                if (v449)
                  goto LABEL_27;
                if ((sub_23AC37A64(v450 & 1, 0) & 1) != 0)
                {

                  goto LABEL_427;
                }
LABEL_519:
                if (!v448)
                  goto LABEL_521;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
                v623 = swift_allocObject();
                v624 = sub_23B1A1F64(v623, 3);
                *(_OWORD *)v625 = xmmword_23B1CE630;
                *(_QWORD *)(v625 + 16) = 1;
                v626 = nullsub_1(v624);
                v627 = sub_23AFD7BC8(v626);
                swift_bridgeObjectRelease();
                if ((sub_23AA9F56C(v627, v447) & 1) != 0)
                {
LABEL_521:
                  if (!sub_23AC37A40(v446, 2))
                  {

                    goto LABEL_575;
                  }
                }
                v628 = v891;
                sub_23B01F7CC((uint64_t)v889, (uint64_t)v887, &v983);
                v891 = v628;
                if (v628)
                  goto LABEL_27;
                v630 = sub_23AC37A64(v629 & 1, 0);

                if ((v630 & 1) == 0)
                  goto LABEL_575;
                goto LABEL_427;
              case 12:
                v652 = v891;
                (*(void (**)(uint64_t (**__return_ptr)(uint64_t, uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v887[4] + 280))(&v983, &v988);
                v891 = v652;
                if (v984 == 255)
                  goto LABEL_575;
                v653 = v891;
                sub_23AFFA330((uint64_t)v983, v984, &v983);
                v891 = v653;
                sub_23AA724E8((uint64_t)&v983, (uint64_t)v980, qword_2542E6E20);
                sub_23AA724E8((uint64_t)v980, (uint64_t)&v981, qword_2542E6E20);
                if (sub_23AAFC2A4((uint64_t)&v981) == 1)
                  goto LABEL_575;
                sub_23AA724E8((uint64_t)v980, (uint64_t)v979, qword_2542E6E20);
                sub_23AA9F51C(SBYTE8(v979[8]), 1);
                sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
                goto LABEL_130;
              default:
                goto LABEL_575;
            }
          }
          goto LABEL_575;
        }
        goto LABEL_726;
      }
      if (!sub_23AE4F6B4())
        goto LABEL_575;
      (*(uint64_t (**)(void))(*v887 + 160))();
    }
    goto LABEL_427;
  }
  if (sub_23AF20214((uint64_t)v158, v157) || sub_23AF202B8((uint64_t)v158, v157))
    goto LABEL_575;
  v159 = v889;
  v160 = sub_23AA9F890();
  if (v160)
  {
    if (!sub_23AA9F3D0(2, *((uint64_t *)&v991 + 1)))
      goto LABEL_575;
  }
  else
  {
    v176 = *((unsigned __int8 *)v159 + 264);
    if (v176 != 3 && sub_23AA9F51C(v176, 2))
      goto LABEL_575;
  }
  v177 = v823;
  sub_23AA8EFC8((uint64_t)v886, v823, &qword_2569E5DD0);
  v124 = *(char **)(v885 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint8_t *))v124)(v177, 1, v888) != 1)
  {
    sub_23AA8EFC8(v177, (uint64_t)v136, &qword_2569E5DD0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:

        goto LABEL_101;
      case 2u:
      case 7u:
        sub_23AA8A05C((uint64_t)v136, (uint64_t *)&unk_2542DDFB0);
        goto LABEL_101;
      case 6u:
        v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
        v263 = (uint64_t)&v136[*(int *)(v262 + 48)];
        if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v882 + 48))(v136, 1, isa) == 1)
        {
          sub_23AA8A05C(v263, &qword_2542E4770);
          v233 = (uint64_t)v136;
          goto LABEL_155;
        }
        v293 = *(_QWORD *)&v136[*(int *)(v262 + 64)];
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2120);
        v294 = swift_allocObject();
        v295 = sub_23B1A1F64(v294, 2);
        *v296 = xmmword_23B1CE640;
        v297 = nullsub_1(v295);
        v298 = sub_23AFD7BC8(v297);
        swift_bridgeObjectRelease();
        if ((sub_23AA9F56C(v298, v293) & 1) != 0)
        {
          sub_23AA8A05C((uint64_t)v136, &qword_2542E4770);
          v233 = v263;
LABEL_155:
          v232 = &qword_2542E4770;
LABEL_156:
          sub_23AA8A05C(v233, v232);
          v177 = v823;
LABEL_157:
          v299 = v890;
          *v890 = 0;
          *((_WORD *)v299 + 4) = -256;
          v283 = &qword_2569E5DD0;
          v284 = v177;
          goto LABEL_294;
        }
        if (!v160 || (v342 = *((unsigned __int8 *)v889 + 440), v342 == 4) || !sub_23AC37B08(v342, 1))
        {
          v343 = v890;
          *v890 = 0;
          *((_WORD *)v343 + 4) = -256;
          sub_23AA8A05C((uint64_t)v136, &qword_2542E4770);
          sub_23AA8A05C(v263, &qword_2542E4770);
          v283 = &qword_2569E5DD0;
          v284 = v823;
          goto LABEL_294;
        }
        sub_23AA8A05C((uint64_t)v136, &qword_2542E4770);
        sub_23AA8A05C(v263, &qword_2542E4770);
LABEL_101:
        v177 = v823;
        break;
      case 0xAu:
        v264 = v136[27];
        sub_23ADF1CFC(*((void **)v136 + 2), *((unsigned __int16 *)v136 + 12));
        sub_23AA862DC(*(id *)v136, v136[8], v136[9]);
        v177 = v823;
        if (v264 != 2)
          goto LABEL_157;
        break;
      case 0x16u:
        v177 = v823;
        if ((*v136 & 1) == 0)
          goto LABEL_157;
        v234 = (*(uint64_t (**)(void))(*v887 + 152))();
        if ((v160 & sub_23AA9F3D0(0x4000, v234) & 1) == 0
          || !sub_23AA9F3C4(128, *((_QWORD *)v889 + 31))
          || !sub_23AA9F3D0(2, *((uint64_t *)&v991 + 1)))
        {
          goto LABEL_157;
        }
        break;
      case 0x1Au:
        sub_23AA862DC(*(id *)v136, v136[8], v136[9]);
        goto LABEL_101;
      default:
        v232 = (uint64_t *)&unk_2542DDFB0;
        v233 = (uint64_t)v136;
        goto LABEL_156;
    }
  }
  sub_23AA8A05C(v177, &qword_2569E5DD0);
  v109 = v887[4];
  v242 = v891;
  (*(void (**)(uint64_t (**__return_ptr)(uint64_t, uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v109 + 280))(&v983, &v988);
  v891 = v242;
  if (v242)
    return;
  if (v984 == 255)
    goto LABEL_427;
  v243 = v887;
  v244 = v887[2];
  v245 = v891;
  v246 = sub_23AFFA330((uint64_t)v983, v984, &v983);
  v891 = v245;
  v247 = (*(uint64_t (**)(_QWORD *))(*v243 + 152))(v246);
  if ((v160 & sub_23AA9F3D0(0x4000, v247) & 1) != 0)
  {
    v248 = (void *)*((_QWORD *)v889 + 30);
    if (v248)
    {
      v1007 = v244;
      v249 = *((_QWORD *)v889 + 31);
      v250 = *((_QWORD *)v889 + 43);
      v251 = *((_QWORD *)v889 + 44);
      v252 = *((_BYTE *)v889 + 360);
      *(_QWORD *)&v940[0] = v248;
      if (!sub_23AA9F3C4(128, v249) || !sub_23AA9F3D0(2, *((uint64_t *)&v991 + 1)))
        goto LABEL_112;
      *(_QWORD *)&v885 = v251;
      sub_23AA724E8((uint64_t)&v983, (uint64_t)v980, qword_2542E6E20);
      sub_23AA724E8((uint64_t)v980, (uint64_t)&v981, qword_2542E6E20);
      if (sub_23AAFC2A4((uint64_t)&v981) != 1)
      {
        sub_23AA724E8((uint64_t)v980, (uint64_t)v979, qword_2542E6E20);
        if (sub_23AA9F3C4(128, *((uint64_t *)&v979[15] + 1)))
          goto LABEL_425;
      }
      if (sub_23AA9F3C4(32, v249))
      {
LABEL_112:
        v244 = v1007;
        goto LABEL_113;
      }
      if (sub_23B12B0C0(512, v250, v885, v252))
      {
        v428 = *(void (**)(_OWORD *__return_ptr, _OWORD *))(*(_QWORD *)v887[5] + 280);
        v254 = v248;
        v429 = v891;
        v428(v979, v940);
        v891 = v429;
        if (v429)
        {
LABEL_305:

          goto LABEL_306;
        }
        v555 = *(void **)&v979[0];
        if (!*(_QWORD *)&v979[0])
          goto LABEL_424;
        v556 = v891;
        sub_23AFFA534(*(void **)&v979[0], (uint64_t)v979);
        v891 = v556;
        sub_23AA724E8((uint64_t)v979, (uint64_t)&v964, (uint64_t *)&unk_2569E63E0);
        sub_23AA724E8((uint64_t)&v964, (uint64_t)v969, (uint64_t *)&unk_2569E63E0);
        if (sub_23AAFC2A4((uint64_t)v969) == 1)
        {

          goto LABEL_425;
        }
        sub_23AA724E8((uint64_t)&v964, (uint64_t)v941, (uint64_t *)&unk_2569E63E0);
        v651 = sub_23AA9F3C4(128, *((uint64_t *)&v941[0] + 1));
        sub_23ADF2D34((uint64_t)&v964, (voidsub_23AEB1930);

        if (!v651)
          goto LABEL_425;
        goto LABEL_112;
      }
LABEL_425:
      v374 = v980;
      goto LABEL_426;
    }
  }
LABEL_113:
  sub_23AA724E8((uint64_t)&v983, (uint64_t)v980, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v980, (uint64_t)v979, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v980, (uint64_t)&v981, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)&v981) == 1)
    goto LABEL_217;
  v1007 = v244;
  v894[10] = v979[25];
  v894[11] = v979[26];
  v894[6] = v979[21];
  v894[7] = v979[22];
  v894[9] = v979[24];
  v894[8] = v979[23];
  v894[2] = v979[17];
  v894[3] = v979[18];
  v894[5] = v979[20];
  v894[4] = v979[19];
  v894[1] = v979[16];
  v894[0] = v979[15];
  v969[12] = v979[12];
  v969[13] = v979[13];
  v969[8] = v979[8];
  v969[9] = v979[9];
  v969[11] = v979[11];
  v969[10] = v979[10];
  v969[4] = v979[4];
  v969[5] = v979[5];
  v969[7] = v979[7];
  v969[6] = v979[6];
  v969[0] = v979[0];
  v969[1] = v979[1];
  v969[3] = v979[3];
  v969[2] = v979[2];
  v969[24] = v979[24];
  v969[25] = v979[25];
  v969[26] = v979[26];
  v969[20] = v979[20];
  v969[21] = v979[21];
  v969[22] = v979[22];
  v969[23] = v979[23];
  v969[16] = v979[16];
  v969[17] = v979[17];
  v969[18] = v979[18];
  v969[19] = v979[19];
  *(_QWORD *)&v894[12] = *(_QWORD *)&v979[27];
  v136 = (char *)v941;
  v970 = *(_QWORD *)&v979[27];
  v969[14] = v979[14];
  v969[15] = v979[15];
  v971 = BYTE8(v979[27]);
  v972 = v979[28];
  v973 = v979[29];
  v974 = v979[30];
  v975 = *((_QWORD *)&v979[30] + 1);
  sub_23ADF2D34((uint64_t)v980, (voidsub_23AA88348);
  sub_23AAFC2BC((uint64_t)v894);
  sub_23AAFC3AC((uint64_t)v969);
  v253 = *(_QWORD *)&v894[0];
  v254 = *(id *)&v894[0];
  sub_23AAFC540((uint64_t)v894);
  if (v253)
  {
    v977 = v254;
    sub_23AA724E8((uint64_t)v980, (uint64_t)v940, qword_2542E6E20);
    v941[12] = v940[12];
    v941[13] = v940[13];
    v941[14] = v940[14];
    v941[8] = v940[8];
    v941[9] = v940[9];
    v941[11] = v940[11];
    v941[10] = v940[10];
    v941[4] = v940[4];
    v941[5] = v940[5];
    v941[7] = v940[7];
    v941[6] = v940[6];
    v941[0] = v940[0];
    v941[1] = v940[1];
    v941[3] = v940[3];
    v941[2] = v940[2];
    v942 = *(_QWORD *)&v940[15];
    v885 = *(_OWORD *)((char *)&v940[15] + 8);
    v943 = *(_OWORD *)((char *)&v940[15] + 8);
    v944 = BYTE8(v940[16]);
    v945 = v940[17];
    v946 = v940[18];
    v947 = v940[19];
    v948 = v940[20];
    v949 = v940[21];
    v950 = BYTE2(v940[21]);
    v951 = *((_QWORD *)&v940[21] + 1);
    v952 = *(_QWORD *)&v940[22];
    v953 = BYTE8(v940[22]);
    v954 = v940[23];
    v955 = v940[24];
    v956 = v940[25];
    v957 = v940[26];
    v958 = *(_QWORD *)&v940[27];
    v959 = BYTE8(v940[27]);
    v960 = v940[28];
    v961 = v940[29];
    v962 = v940[30];
    v963 = *((_QWORD *)&v940[30] + 1);
    sub_23AA724E8((uint64_t)v980, (uint64_t)&v964, qword_2542E6E20);
    sub_23ACFC940((uint64_t)&v964);
    sub_23AAFC3AC((uint64_t)v941);
    v255 = sub_23AA9F564(16, v885);
    if (sub_23AA9F490(v255))
    {
      if (v160)
      {
        v256 = *((unsigned __int8 *)v889 + 440);
        if (v256 == 4 || !sub_23AC37B08(v256, 1))
          goto LABEL_397;
        v257 = v887[5];
        v158 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v889 + 30);
        *(_QWORD *)&v940[0] = v158;
        if (v158)
        {
          v258 = *(uint64_t (**)(void **, _OWORD *))(*(_QWORD *)v257 + 536);
          v259 = v158;
          v260 = v891;
          v261 = v258(&v977, v940);
          v891 = v260;
          if (v260)
          {
LABEL_121:

            sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
            v175 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))&v940[0];
            goto LABEL_163;
          }
          v513 = v261;

          if ((v513 & 1) != 0)
          {
            if (sub_23AE4F6B4())
            {
              *(_QWORD *)&v940[0] = v158;
              v514 = *(uint64_t (**)(void **, _OWORD *))(*(_QWORD *)v257 + 544);
              v515 = v259;
              v516 = v891;
              v517 = v514(&v977, v940);
              v891 = v516;
              if (v516)
                goto LABEL_121;
              v518 = v517;

              if ((v518 & 1) != 0)
              {
                sub_23AF9CAE0();
                v519 = swift_allocObject();
                v520 = v889;
                memcpy((void *)(v519 + 16), v889, 0x1F0uLL);
                v521 = swift_allocObject();
                *(_QWORD *)(v521 + 16) = sub_23B058214;
                *(_QWORD *)(v521 + 24) = v519;
                v522 = v977;
                v523 = swift_allocObject();
                *(_QWORD *)(v523 + 16) = v522;
                v524 = swift_allocObject();
                *(_QWORD *)(v524 + 16) = sub_23B06B4E8;
                *(_QWORD *)(v524 + 24) = v523;
                sub_23ACFC940((uint64_t)v520);
                v525 = v522;
                v1007 = sub_23B1C5E40();
                LODWORD(v889) = sub_23B1C6AB8();
                v124 = (char *)swift_allocObject();
                v124[16] = 32;
                v526 = swift_allocObject();
                *(_BYTE *)(v526 + 16) = 8;
                v527 = swift_allocObject();
                *(_QWORD *)(v527 + 16) = sub_23B06B130;
                *(_QWORD *)(v527 + 24) = v521;
                v528 = swift_allocObject();
                *(_QWORD *)(v528 + 16) = sub_23AB33690;
                *(_QWORD *)(v528 + 24) = v527;
                v529 = swift_allocObject();
                *(_BYTE *)(v529 + 16) = 32;
                v530 = swift_allocObject();
                *(_BYTE *)(v530 + 16) = 8;
                v531 = swift_allocObject();
                *(_QWORD *)(v531 + 16) = sub_23B06B130;
                *(_QWORD *)(v531 + 24) = v524;
                v532 = swift_allocObject();
                *(_QWORD *)(v532 + 16) = sub_23AB33690;
                *(_QWORD *)(v532 + 24) = v531;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
                v533 = swift_allocObject();
                sub_23B1A1F64(v533, 6);
                *v534 = sub_23AB336B0;
                v534[1] = v124;
                v534[2] = sub_23AB336B0;
                v534[3] = v526;
                v534[4] = sub_23AB336AC;
                v534[5] = v528;
                v534[6] = sub_23AB336B0;
                v534[7] = v529;
                v534[8] = sub_23AB336B0;
                v534[9] = v530;
                v534[10] = sub_23AB336AC;
                v534[11] = v532;
                swift_retain();
                swift_retain();
                swift_retain();
                v535 = v529;
                swift_retain();
                v109 = v530;
                swift_retain();
                swift_retain();
                swift_bridgeObjectRelease();
                if (os_log_type_enabled(v1007, (os_log_type_t)v889))
                {
                  v536 = sub_23AFF5C30();
                  v537 = (_QWORD *)swift_slowAlloc();
                  v935 = 0;
                  v887 = v537;
                  v938 = v537;
                  v888 = (uint8_t *)v536;
                  *(_WORD *)v536 = 514;
                  v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v536 + 2);
                  v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                  v896 = v124;
                  v538 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v891;
                  sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v938);
                  v158 = v538;
                  if (!v538)
                  {
                    swift_release();
                    v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                    v896 = (char *)v526;
                    sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v938);
                    swift_release();
                    v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
                    v896 = (char *)v528;
                    sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v938);
                    swift_release();
                    v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                    v896 = (char *)v535;
                    sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v938);
                    swift_release();
                    v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
                    v896 = (char *)v109;
                    sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v938);
                    swift_release();
                    v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
                    v896 = (char *)v532;
                    sub_23AFF5C54(&v895, (uint64_t)&v892, (uint64_t)&v935, (uint64_t)&v938);
                    v891 = 0;
                    swift_release();
                    _os_log_impl(&dword_23AA66000, v1007, (os_log_type_t)v889, "♻️  move of %s -> %s: breaking concurrent rename cycle", v888, 0x16u);
                    v539 = v887;
                    swift_arrayDestroy();
                    MEMORY[0x23B8614BC](v539, -1, -1);
                    sub_23AFF5C38();
                  }
                  goto LABEL_727;
                }
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();

                (*(void (**)(char *, uint64_t))(v854 + 8))(v840, v855);
LABEL_414:
                sub_23AA724E8((uint64_t)&v983, (uint64_t)v940, qword_2542E6E20);
                sub_23ADF2D34((uint64_t)v940, (voidsub_23AAAEC3C);
                goto LABEL_575;
              }
            }
            sub_23AF9CAE0();
            v590 = swift_allocObject();
            v591 = v889;
            memcpy((void *)(v590 + 16), v889, 0x1F0uLL);
            v592 = swift_allocObject();
            *(_QWORD *)(v592 + 16) = sub_23B058214;
            *(_QWORD *)(v592 + 24) = v590;
            v593 = v977;
            v594 = swift_allocObject();
            *(_QWORD *)(v594 + 16) = v593;
            v595 = swift_allocObject();
            *(_QWORD *)(v595 + 16) = sub_23B06B4E8;
            *(_QWORD *)(v595 + 24) = v594;
            sub_23ACFC940((uint64_t)v591);
            v596 = v593;
            v1007 = sub_23B1C5E40();
            LODWORD(v889) = sub_23B1C6AB8();
            v124 = (char *)swift_allocObject();
            v124[16] = 32;
            v597 = swift_allocObject();
            *(_BYTE *)(v597 + 16) = 8;
            v598 = swift_allocObject();
            *(_QWORD *)(v598 + 16) = sub_23B06B130;
            *(_QWORD *)(v598 + 24) = v592;
            v599 = swift_allocObject();
            *(_QWORD *)(v599 + 16) = sub_23AB33690;
            *(_QWORD *)(v599 + 24) = v598;
            v109 = swift_allocObject();
            *(_BYTE *)(v109 + 16) = 32;
            v600 = swift_allocObject();
            *(_BYTE *)(v600 + 16) = 8;
            v601 = swift_allocObject();
            *(_QWORD *)(v601 + 16) = sub_23B06B130;
            *(_QWORD *)(v601 + 24) = v595;
            v602 = swift_allocObject();
            *(_QWORD *)(v602 + 16) = sub_23AB33690;
            *(_QWORD *)(v602 + 24) = v601;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
            v603 = swift_allocObject();
            sub_23B1A1F64(v603, 6);
            *v604 = sub_23AB336B0;
            v604[1] = v124;
            v604[2] = sub_23AB336B0;
            v604[3] = v597;
            v604[4] = sub_23AB336AC;
            v604[5] = v599;
            v604[6] = sub_23AB336B0;
            v604[7] = v109;
            v604[8] = sub_23AB336B0;
            v604[9] = v600;
            v604[10] = sub_23AB336AC;
            v604[11] = v602;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v1007, (os_log_type_t)v889))
            {
              v605 = sub_23AFF5C30();
              v606 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
              v892 = 0;
              *(_QWORD *)&v885 = v606;
              v935 = v606;
              v886 = (uint8_t *)v605;
              *(_WORD *)v605 = 514;
              v895 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v605 + 2);
              *(_QWORD *)&v940[0] = sub_23AB336B0;
              *((_QWORD *)&v940[0] + 1) = v124;
              v607 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v891;
              sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v940, (uint64_t)&v895, (uint64_t)&v892, (uint64_t)&v935);
              v158 = v607;
              if (!v607)
              {
                swift_release();
                *(_QWORD *)&v940[0] = sub_23AB336B0;
                *((_QWORD *)&v940[0] + 1) = v597;
                sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v940, (uint64_t)&v895, (uint64_t)&v892, (uint64_t)&v935);
                swift_release();
                *(_QWORD *)&v940[0] = sub_23AB336AC;
                *((_QWORD *)&v940[0] + 1) = v599;
                sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v940, (uint64_t)&v895, (uint64_t)&v892, (uint64_t)&v935);
                swift_release();
                *(_QWORD *)&v940[0] = sub_23AB336B0;
                *((_QWORD *)&v940[0] + 1) = v109;
                sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v940, (uint64_t)&v895, (uint64_t)&v892, (uint64_t)&v935);
                swift_release();
                *(_QWORD *)&v940[0] = sub_23AB336B0;
                *((_QWORD *)&v940[0] + 1) = v600;
                sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v940, (uint64_t)&v895, (uint64_t)&v892, (uint64_t)&v935);
                swift_release();
                *(_QWORD *)&v940[0] = sub_23AB336AC;
                *((_QWORD *)&v940[0] + 1) = v602;
                sub_23AFF5C54((uint64_t (**)(uint64_t, uint64_t, uint64_t))v940, (uint64_t)&v895, (uint64_t)&v892, (uint64_t)&v935);
                v891 = 0;
                swift_release();
                _os_log_impl(&dword_23AA66000, v1007, (os_log_type_t)v889, "♻️  move of %s -> %s: reparent cycle detected", v886, 0x16u);
                v608 = v885;
                swift_arrayDestroy();
                MEMORY[0x23B8614BC](v608, -1, -1);
                sub_23AFF5C38();
              }
              goto LABEL_727;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v854 + 8))(v849, v855);
            v619 = v977;
            v620 = (uint64_t)v853;
            *v853 = v977;
            *(_WORD *)(v620 + 8) = 256;
            swift_storeEnumTagMultiPayload();
            v621 = *(void (**)(uint64_t))(*v887 + 312);
            v622 = v619;
            v621(v620);
            sub_23AA8A05C(v620, (uint64_t *)&unk_2542DDFB0);

            sub_23AA724E8((uint64_t)&v983, (uint64_t)v940, qword_2542E6E20);
            v374 = v940;
            goto LABEL_426;
          }
LABEL_397:
          v540 = &qword_2569E5DD0;
          v541 = (uint64_t)v816;
          sub_23AA8EFC8((uint64_t)v886, (uint64_t)v816, &qword_2569E5DD0);
          if (((unsigned int (*)(uint64_t, uint64_t, uint8_t *))v124)(v541, 1, v888) != 1)
          {
            if (swift_getEnumCaseMultiPayload() == 2)
            {
              if (v816[9] != 1)
                goto LABEL_404;
              v542 = *(void **)v816;
              v543 = v816[8];
              v544 = sub_23AC37680();
              sub_23AA862DC(v542, v543, 1);
              if ((v544 & 1) == 0)
                goto LABEL_404;
LABEL_264:

              sub_23ADF2D34((uint64_t)v980, (voidsub_23AAAEC3C);
              goto LABEL_575;
            }
            v540 = (uint64_t *)&unk_2542DDFB0;
            v541 = (uint64_t)v816;
          }
          sub_23AA8A05C(v541, v540);
LABEL_404:
          v545 = &qword_2569E5DD0;
          v546 = v815;
          sub_23AA8EFC8((uint64_t)v886, v815, &qword_2569E5DD0);
          if (((unsigned int (*)(uint64_t, uint64_t, uint8_t *))v124)(v546, 1, v888) != 1)
          {
            if (swift_getEnumCaseMultiPayload() == 2)
            {

              sub_23AA724E8((uint64_t)&v983, (uint64_t)v940, qword_2542E6E20);
              sub_23ADF2D34((uint64_t)v940, (voidsub_23AAAEC3C);
              sub_23AA8A05C(v815, (uint64_t *)&unk_2542DDFB0);
              goto LABEL_427;
            }
            v545 = (uint64_t *)&unk_2542DDFB0;
            v546 = v815;
          }
          sub_23AA8A05C(v546, v545);
          v547 = v887[5];
          v548 = sub_23AAED140();
          v549 = v864;
          v550 = v891;
          (*(void (**)(void **, _QWORD))(*(_QWORD *)v547 + 240))(&v977, v548 & 1);
          v891 = v550;
          if (v550)
          {

            sub_23AA724E8((uint64_t)&v983, (uint64_t)v940, qword_2542E6E20);
            v341 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v940;
            goto LABEL_410;
          }
          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v882 + 48))(v549, 1, isa) == 1)
          {

            sub_23AA8A05C(v864, &qword_2542E4770);
          }
          else
          {
            v551 = v864;
            v552 = sub_23AFFA500((uint64_t *)&unk_2542E4760);

            sub_23AA8A05C(v551, (uint64_t *)&unk_2542E4760);
            if ((v552 & 1) == 0)
              goto LABEL_414;
          }
          goto LABEL_216;
        }
        __break(1u);
LABEL_726:
        sub_23B1C704C();
        __break(1u);

        __break(1u);
        __break(1u);
LABEL_727:

        __break(1u);
        goto LABEL_728;
      }
      if (sub_23AE4F6B4())
        goto LABEL_264;
      sub_23AA724E8((uint64_t)v980, (uint64_t)&v895, qword_2542E6E20);
      v940[25] = v924;
      v940[26] = v925;
      *(_QWORD *)&v940[27] = v926;
      v940[21] = v920;
      v940[22] = v921;
      v940[24] = v923;
      v940[23] = v922;
      v940[17] = v916;
      v940[18] = v917;
      v940[20] = v919;
      v940[19] = v918;
      v940[16] = v915;
      v940[15] = v914;
      v424 = v905;
      *(_QWORD *)&v940[0] = v895;
      BYTE8(v940[0]) = (_BYTE)v896;
      v940[1] = v897;
      LOBYTE(v940[2]) = v898;
      *(_OWORD *)((char *)&v940[2] + 8) = v899;
      *(_OWORD *)((char *)&v940[3] + 8) = v900;
      *(_OWORD *)((char *)&v940[4] + 8) = v901;
      *(_OWORD *)((char *)&v940[5] + 8) = v902;
      *(_OWORD *)((char *)&v940[6] + 8) = v903;
      *(_OWORD *)((char *)&v940[7] + 8) = v904;
      WORD4(v940[8]) = v905;
      BYTE10(v940[8]) = v906;
      v940[9] = v907;
      LOBYTE(v940[10]) = v908;
      *(_OWORD *)((char *)&v940[10] + 8) = v909;
      *(_OWORD *)((char *)&v940[11] + 8) = v910;
      *(_OWORD *)((char *)&v940[12] + 8) = v911;
      *(_OWORD *)((char *)&v940[13] + 8) = v912;
      *((_QWORD *)&v940[14] + 1) = v913;
      BYTE8(v940[27]) = v927;
      v940[28] = v928;
      v940[29] = v929;
      LOBYTE(v940[30]) = v930;
      *((_QWORD *)&v940[30] + 1) = v931;
      sub_23ACFC940((uint64_t)&v964);
      sub_23AAFC3AC((uint64_t)v940);
      if (sub_23AA9F51C(v424, 2))
      {
        v425 = v887[5];
        v426 = sub_23AAED140();
        v427 = v891;
        (*(void (**)(void **, _QWORD))(*(_QWORD *)v425 + 240))(&v977, v426 & 1);
        v891 = v427;
        if (!v427)
        {
          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v882 + 48))(v861, 1, isa) == 1)
          {

            sub_23ADF2D34((uint64_t)v980, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
            sub_23AA8A05C(v861, &qword_2542E4770);
          }
          else
          {
            v561 = v861;
            v562 = sub_23AFFA500((uint64_t *)&unk_2542E4760);

            sub_23ADF2D34((uint64_t)v980, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
            sub_23AA8A05C(v561, (uint64_t *)&unk_2542E4760);
            if ((v562 & 1) == 0)
              goto LABEL_575;
          }
          goto LABEL_427;
        }
        goto LABEL_305;
      }
LABEL_424:

      goto LABEL_425;
    }

  }
LABEL_216:
  v244 = v1007;
LABEL_217:
  sub_23AA724E8((uint64_t)&v983, (uint64_t)v969, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v969, (uint64_t)v979, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v979) == 1)
    goto LABEL_427;
  sub_23AA724E8((uint64_t)v969, (uint64_t)&v964, qword_2542E6E20);
  if (v965 == 255
    || (v935 = v964, LOBYTE(v936) = v965, (v363 = (void *)*((_QWORD *)v889 + 30)) == 0))
  {
    v374 = v969;
LABEL_426:
    sub_23ADF2D34((uint64_t)v374, (voidsub_23AAAEC3C);
    goto LABEL_427;
  }
  v938 = (id)*((_QWORD *)v889 + 30);
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v881 + 56))(v874, 1, 1, v880);
  v364 = v966;
  v365 = v967;
  v366 = v968;
  if (sub_23B12B0C0(1024, v966, v967, v968))
  {
    v367 = sub_23AAED140();
    v368 = *(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), _QWORD))(*(_QWORD *)v109 + 240);
    sub_23ADF2D34((uint64_t)v969, (voidsub_23AA88348);
    v369 = v363;
    v370 = v866;
    v371 = v891;
    v368(&v935, v367 & 1);
    v891 = v371;
    if (!v371)
    {
      v372 = v874;
      sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);
      v373 = (uint64_t)v370;
LABEL_223:
      sub_23AA724E8(v373, (uint64_t)v372, (uint64_t *)&unk_2542E4750);
      goto LABEL_289;
    }
    goto LABEL_297;
  }
  if (sub_23B12B0C0(2, v364, v365, v366))
  {
    v389 = *(void (**)(uint64_t (**__return_ptr)(uint64_t, uint64_t, uint64_t), uint64_t (**)(uint64_t, uint64_t, uint64_t)))(*(_QWORD *)v109 + 712);
    sub_23ADF2D34((uint64_t)v969, (voidsub_23AA88348);
    v390 = v363;
    v391 = v891;
    v389(&v895, &v935);
    v891 = v391;
    if (v391)
      goto LABEL_297;
    if (v896 != 255)
    {
      *(_QWORD *)&v940[0] = v895;
      BYTE8(v940[0]) = (_BYTE)v896;
      v392 = sub_23AAED140();
      v393 = v891;
      (*(void (**)(_OWORD *, _QWORD))(*(_QWORD *)v109 + 240))(v940, v392 & 1);
      v891 = v393;
      if (!v393)
      {
        v372 = v874;
        sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);
        v373 = (uint64_t)v856;
        goto LABEL_223;
      }
LABEL_297:
      sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);

      sub_23ADF2D34((uint64_t)v969, (voidsub_23AAAEC3C);
      sub_23AA724E8((uint64_t)&v983, (uint64_t)v941, qword_2542E6E20);
      v341 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v941;
      goto LABEL_410;
    }
  }
  else
  {
    sub_23ADF2D34((uint64_t)v969, (voidsub_23AA88348);
    v409 = v363;
  }
LABEL_289:
  v410 = v874;
  v411 = v865;
  sub_23AA8EFC8((uint64_t)v874, v865, (uint64_t *)&unk_2542E4750);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v881 + 48))(v411, 1, v880) == 1)
  {
    v412 = (uint64_t *)&unk_2542E4750;
    sub_23AA8A05C((uint64_t)v410, (uint64_t *)&unk_2542E4750);

    sub_23ADF2D34((uint64_t)v969, (voidsub_23AAAEC3C);
    sub_23AA724E8((uint64_t)&v983, (uint64_t)v941, qword_2542E6E20);
    sub_23ADF2D34((uint64_t)v941, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
    v413 = v411;
LABEL_291:
    sub_23AA8A05C(v413, v412);
    goto LABEL_427;
  }
  v415 = v868;
  sub_23AA724E8(v411, v868, (uint64_t *)&unk_2542E6B00);
  v416 = v415 + 16;
  v417 = *(_QWORD *)(v415 + 128);
  v418 = *(_QWORD *)(v415 + 136);
  v419 = *(_BYTE *)(v415 + 8);
  *(_QWORD *)&v940[0] = *(_QWORD *)v415;
  BYTE8(v940[0]) = v419;
  v420 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _OWORD *))(*(_QWORD *)v109 + 256);
  swift_bridgeObjectRetain();
  v421 = v416;
  v422 = v891;
  v423 = v420(v421, v417, v418, v940);
  v891 = v422;
  if (v422)
  {
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v868, (uint64_t *)&unk_2542E6B00);
    goto LABEL_297;
  }
  v202 = v423;
  v1007 = v244;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v202 + 16))
  {
LABEL_386:
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v868, (uint64_t *)&unk_2542E6B00);
    sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);

    sub_23ADF2D34((uint64_t)v969, (voidsub_23AAAEC3C);
    sub_23AA724E8((uint64_t)&v983, (uint64_t)v941, qword_2542E6E20);
    v374 = v941;
    goto LABEL_426;
  }
  v473 = sub_23ACDBC44((uint64_t (*)())v941, 0, v202);
  v475 = *(_QWORD *)v474;
  LOBYTE(v199) = *(_BYTE *)(v474 + 8);
  ((void (*)(_OWORD *, _QWORD))v473)(v941, 0);
  v109 = 1;
  v398 = qword_2542E6E20;
  v880 = MEMORY[0x24BEE4AD8] + 8;
  do
  {
    v476 = v891;
    sub_23AFFA330(v475, (char)v199, v941);
    v891 = v476;
    if (v476)
    {
      swift_bridgeObjectRelease();
      sub_23AA8A05C(v868, (uint64_t *)&unk_2542E6B00);
      sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);

      sub_23ADF2D34((uint64_t)v969, (voidsub_23AAAEC3C);
      sub_23AA724E8((uint64_t)&v983, (uint64_t)v940, qword_2542E6E20);
      v341 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v940;
      goto LABEL_410;
    }
    sub_23AA724E8((uint64_t)v941, (uint64_t)&v895, qword_2542E6E20);
    sub_23AA724E8((uint64_t)&v895, (uint64_t)v940, qword_2542E6E20);
    if (sub_23AAFC2A4((uint64_t)v940) != 1)
    {
      sub_23AA724E8((uint64_t)&v895, (uint64_t)v894, qword_2542E6E20);
      memcpy(v1001, v894, sizeof(v1001));
      if (!sub_23AA9F890())
      {
        sub_23ADF2D34((uint64_t)&v895, (voidsub_23AAAEC3C);
        goto LABEL_377;
      }
      v477 = *(void **)&v894[15];
      if (*(_QWORD *)&v894[15])
      {
        v976 = *(id *)&v894[15];
        v478 = *(uint64_t (**)(id *, id *))(*(_QWORD *)v887[5] + 720);
        sub_23ADF2D34((uint64_t)&v895, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88348);
        v479 = v477;
        v480 = v891;
        v481 = v478(&v938, &v976);
        v891 = v480;
        if (v480)
        {

          sub_23ADF2D34((uint64_t)&v895, (voidsub_23AAAEC3C);
          sub_23ADF2D34((uint64_t)&v895, (voidsub_23AAAEC3C);
          swift_bridgeObjectRelease();
          sub_23AA8A05C(v868, (uint64_t *)&unk_2542E6B00);
          sub_23AA8A05C((uint64_t)v874, (uint64_t *)&unk_2542E4750);

          sub_23ADF2D34((uint64_t)v969, (voidsub_23AAAEC3C);
          sub_23AA724E8((uint64_t)&v983, (uint64_t)&v892, qword_2542E6E20);
          v341 = &v892;
          goto LABEL_410;
        }
        if ((v481 & 1) == 0)
        {

          sub_23ADF2D34((uint64_t)&v895, (voidsub_23AAAEC3C);
          sub_23ADF2D34((uint64_t)&v895, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
          v398 = qword_2542E6E20;
          goto LABEL_377;
        }
        sub_23AF9CAE0();
        v892 = v988;
        LOBYTE(v893) = v989;
        v482 = swift_allocObject();
        sub_23AA9F454((uint64_t *)&v892, v482 + 16);
        v483 = swift_allocObject();
        *(_QWORD *)(v483 + 16) = sub_23B06B294;
        *(_QWORD *)(v483 + 24) = v482;
        v484 = v851;
        sub_23AA8EFC8(v868, v851, (uint64_t *)&unk_2542E6B00);
        v485 = (*(unsigned __int8 *)(v881 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v881 + 80);
        v486 = swift_allocObject();
        sub_23AA724E8(v484, v486 + v485, (uint64_t *)&unk_2542E6B00);
        v487 = swift_allocObject();
        *(_QWORD *)(v487 + 16) = sub_23B058170;
        *(_QWORD *)(v487 + 24) = v486;
        v886 = (uint8_t *)sub_23B1C5E40();
        LODWORD(v885) = sub_23B1C6AB8();
        v889 = (__int128 *)swift_allocObject();
        *((_BYTE *)v889 + 16) = 32;
        v488 = swift_allocObject();
        *(_BYTE *)(v488 + 16) = 8;
        v489 = swift_allocObject();
        *(_QWORD *)(v489 + 16) = sub_23B06B134;
        *(_QWORD *)(v489 + 24) = v483;
        v490 = swift_allocObject();
        *(_QWORD *)(v490 + 16) = sub_23AB33690;
        *(_QWORD *)(v490 + 24) = v489;
        v491 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_allocObject();
        *((_BYTE *)v491 + 16) = 32;
        v492 = swift_allocObject();
        *(_BYTE *)(v492 + 16) = 8;
        v493 = swift_allocObject();
        *(_QWORD *)(v493 + 16) = sub_23B0581C8;
        *(_QWORD *)(v493 + 24) = v487;
        v494 = swift_allocObject();
        *(_QWORD *)(v494 + 16) = sub_23AB33690;
        *(_QWORD *)(v494 + 24) = v493;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
        v495 = swift_allocObject();
        sub_23B1A1F64(v495, 6);
        v496 = v889;
        *v497 = sub_23AB336B0;
        v497[1] = v496;
        v497[2] = sub_23AB336B0;
        v497[3] = v488;
        v497[4] = sub_23AB336AC;
        v497[5] = v490;
        v497[6] = sub_23AB336B0;
        v497[7] = v491;
        v497[8] = sub_23AB336B0;
        v497[9] = v492;
        v497[10] = sub_23AB336AC;
        v497[11] = v494;
        swift_retain();
        v882 = v488;
        swift_retain();
        swift_retain();
        isa = v491;
        swift_retain();
        v884 = v492;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled((os_log_t)v886, (os_log_type_t)v885))
        {
          v498 = (uint8_t *)sub_23AFF5C30();
          v499 = swift_slowAlloc();
          v934 = 0;
          v879 = v499;
          v933 = v499;
          *(_WORD *)v498 = 514;
          v937 = v498 + 2;
          v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
          v893 = v889;
          v500 = v891;
          sub_23AFF5C54(&v892, (uint64_t)&v937, (uint64_t)&v934, (uint64_t)&v933);
          v124 = v500;
          if (!v500)
          {
            swift_release();
            v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
            v893 = (__int128 *)v882;
            sub_23AFF5C54(&v892, (uint64_t)&v937, (uint64_t)&v934, (uint64_t)&v933);
            swift_release();
            v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
            v893 = (__int128 *)v490;
            sub_23AFF5C54(&v892, (uint64_t)&v937, (uint64_t)&v934, (uint64_t)&v933);
            swift_release();
            v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
            v893 = (__int128 *)isa;
            sub_23AFF5C54(&v892, (uint64_t)&v937, (uint64_t)&v934, (uint64_t)&v933);
            swift_release();
            v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
            v893 = (__int128 *)v884;
            sub_23AFF5C54(&v892, (uint64_t)&v937, (uint64_t)&v934, (uint64_t)&v933);
            swift_release();
            v892 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
            v893 = (__int128 *)v494;
            sub_23AFF5C54(&v892, (uint64_t)&v937, (uint64_t)&v934, (uint64_t)&v933);
            v891 = 0;
            swift_release();
            _os_log_impl(&dword_23AA66000, (os_log_t)v886, (os_log_type_t)v885, "♻️  move of %s -> %s: reparent cycle detected", v498, 0x16u);
            v501 = v879;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v501, -1, -1);
            sub_23AFF5C38();
          }
          goto LABEL_729;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v854 + 8))(v860, v855);
        v503 = *(_BYTE *)(v868 + 8);
        v504 = (uint64_t)v853;
        *v853 = *(_QWORD *)v868;
        *(_WORD *)(v504 + 8) = v503;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t))(*v887 + 312))(v504);
        sub_23AA8A05C(v504, (uint64_t *)&unk_2542DDFB0);

        sub_23ADF2D34((uint64_t)&v895, (voidsub_23AAAEC3C);
        v398 = qword_2542E6E20;
        sub_23AA724E8((uint64_t)v941, (uint64_t)&v892, qword_2542E6E20);
        v502 = &v892;
      }
      else
      {
        v502 = &v895;
      }
      sub_23ADF2D34((uint64_t)v502, (voidsub_23AAAEC3C);
    }
LABEL_377:
    if (v109 == *(_QWORD *)(v202 + 16))
      goto LABEL_386;
    v505 = sub_23ACDBC44((uint64_t (*)())v941, v109, v202);
    v475 = *(_QWORD *)v506;
    v199 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*(unsigned __int8 *)(v506 + 8);
    v399 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((uint64_t (*)(_OWORD *, _QWORD))v505)(v941, 0);
    v507 = __OFADD__(v109++, 1);
  }
  while (!v507);
  __break(1u);
LABEL_381:
  v508 = *((_BYTE *)v398 + 10);
  if (!(_DWORD)v868)
  {
    v177 = v869;
    if (!v400 && (_DWORD)v199 == (_DWORD)v399)
      goto LABEL_510;
    goto LABEL_157;
  }
  if ((_DWORD)v868 != 1)
  {
    if (v199)
    {
      v177 = v869;
      if (v400 == 2 && v399 == (uint64_t (*)(uint64_t, uint64_t, uint64_t))1)
        goto LABEL_510;
    }
    else
    {
      v177 = v869;
      if (v400 == 2 && !v399)
        goto LABEL_510;
    }
    goto LABEL_157;
  }
  v177 = v869;
  if (v400 != 1 || v199 != v399)
    goto LABEL_157;
LABEL_510:
  if (!sub_23AC37A40(v202, v508))
    goto LABEL_157;
LABEL_55:
  sub_23AA8A05C(v177, &qword_2569E5DD0);
  v203 = v891;
  (*(void (**)(uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))(*(_QWORD *)v887[3] + 328))(v202, &v988, *((_QWORD *)v889 + 57), 1);
  v891 = v203;
  if (!v203)
  {
LABEL_56:
    v204 = v890;
    *v890 = 0;
    *((_WORD *)v204 + 4) = -256;
  }
}

